3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xa, 0xb]",0x0,0,0,0,0,0,False,0,0,"0xa, 0xb"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xa, 0xb"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xa, 0xb"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xa, 0xb"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xa, 0xb"
    0x5: v5 = CALLDATASIZE ,0x0,v5,0,CALLDATASIZE,0,0,False,0,0,"0xa, 0xb"
    0x6: v6(0xb) = CONST ,0x0,v6,0,CONST,0,0,False,0xb,0,"0xa, 0xb"
"    0x9: JUMPI v6(0xb), v5",0x0,0,"0,v6,v5",JUMPI,0,0,False,0,0,"0xa, 0xb"
    Begin block 0xa,0xa,0,0,0,0,0,False,0,0,"0xa, 0xb"
"    prev=[0x0], succ=[]",0xa,0,0,0,0,0,False,0,0,"0xa, 0xb"
    =================================,0xa,0,0,0,0,0,False,0,0,"0xa, 0xb"
    0xa: STOP ,0xa,0,0,STOP,0,0,False,0,0,"0xa, 0xb"
    Begin block 0xb,0xb,0,0,0,0,0,False,0,0,"0xa, 0xb"
"    prev=[0x0], succ=[0x58, 0x78]",0xb,0,0,0,0,0,False,0,0,"0x58, 0x78"
    =================================,0xb,0,0,0,0,0,False,0,0,"0x58, 0x78"
    0xc: vc(0x0) = CONST ,0xb,vc,0,CONST,0,0,False,0x0,0,"0x58, 0x78"
    0xf: vf = CALLDATALOAD vc(0x0),0xb,vf,"0,vc",CALLDATALOAD,0,0,False,0,0,"0x58, 0x78"
    0x10: v10(0x1) = CONST ,0xb,v10,0,CONST,0,0,False,0x1,0,"0x58, 0x78"
    0x12: v12(0x1) = CONST ,0xb,v12,0,CONST,0,0,False,0x1,0,"0x58, 0x78"
    0x14: v14(0xe0) = CONST ,0xb,v14,0,CONST,0,0,False,0xe0,0,"0x58, 0x78"
"    0x16: v16(0x100000000000000000000000000000000000000000000000000000000) = SHL v14(0xe0), v12(0x1)",0xb,v16,"0,v14,v12",SHL,0,0,False,0x100000000000000000000000000000000000000000000000000000000,0,"0x58, 0x78"
"    0x17: v17(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v16(0x100000000000000000000000000000000000000000000000000000000), v10(0x1)",0xb,v17,"0,v16,v10",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,"0x58, 0x78"
    0x18: v18(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v17(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff),0xb,v18,"0,v17",NOT,0,0,False,0xffffffff00000000000000000000000000000000000000000000000000000000,0,"0x58, 0x78"
"    0x19: v19 = AND v18(0xffffffff00000000000000000000000000000000000000000000000000000000), vf",0xb,v19,"0,v18,vf",AND,0,0,False,0,0,"0x58, 0x78"
"    0x1b: MSTORE vc(0x0), v19",0xb,0,"0,vc,v19",MSTORE,0,0,False,0,0,"0x58, 0x78"
    0x1c: v1c(0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c) = CONST ,0xb,v1c,0,CONST,0,0,False,0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c,0,"0x58, 0x78"
    0x3d: v3d(0x20) = CONST ,0xb,v3d,0,CONST,0,0,False,0x20,0,"0x58, 0x78"
"    0x41: MSTORE v3d(0x20), v1c(0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c)",0xb,0,"0,v3d,v1c",MSTORE,0,0,False,0,0,"0x58, 0x78"
    0x42: v42(0x40) = CONST ,0xb,v42,0,CONST,0,0,False,0x40,0,"0x58, 0x78"
"    0x46: v46 = SHA3 vc(0x0), v42(0x40)",0xb,v46,"0,vc,v42",SHA3,0,0,False,0,0,"0x58, 0x78"
    0x47: v47 = SLOAD v46,0xb,v47,"0,v46",SLOAD,0,0,False,0,0,"0x58, 0x78"
    0x4a: v4a(0x1) = CONST ,0xb,v4a,0,CONST,0,0,False,0x1,0,"0x58, 0x78"
    0x4c: v4c(0x1) = CONST ,0xb,v4c,0,CONST,0,0,False,0x1,0,"0x58, 0x78"
    0x4e: v4e(0xa0) = CONST ,0xb,v4e,0,CONST,0,0,False,0xa0,0,"0x58, 0x78"
"    0x50: v50(0x10000000000000000000000000000000000000000) = SHL v4e(0xa0), v4c(0x1)",0xb,v50,"0,v4e,v4c",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x58, 0x78"
"    0x51: v51(0xffffffffffffffffffffffffffffffffffffffff) = SUB v50(0x10000000000000000000000000000000000000000), v4a(0x1)",0xb,v51,"0,v50,v4a",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x58, 0x78"
"    0x52: v52 = AND v51(0xffffffffffffffffffffffffffffffffffffffff), v47",0xb,v52,"0,v51,v47",AND,0,0,False,0,0,"0x58, 0x78"
    0x54: v54(0x78) = CONST ,0xb,v54,0,CONST,0,0,False,0x78,0,"0x58, 0x78"
"    0x57: JUMPI v54(0x78), v52",0xb,0,"0,v54,v52",JUMPI,0,0,False,0,0,"0x58, 0x78"
    Begin block 0x58,0x58,0,0,0,0,0,False,0,0,"0x58, 0x78"
"    prev=[0xb], succ=[0xe54]",0x58,0,0,0,0,0,False,0,0,0xe54
    =================================,0x58,0,0,0,0,0,False,0,0,0xe54
    0x58: v58(0x40) = CONST ,0x58,v58,0,CONST,0,0,False,0x40,0,0xe54
    0x5a: v5a = MLOAD v58(0x40),0x58,v5a,"0,v58",MLOAD,0,0,False,0,0&m0x40,0xe54
    0x5b: v5b(0x461bcd) = CONST ,0x58,v5b,0,CONST,0,0,False,0x461bcd,0,0xe54
    0x5f: v5f(0xe5) = CONST ,0x58,v5f,0,CONST,0,0,False,0xe5,0,0xe54
"    0x61: v61(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5f(0xe5), v5b(0x461bcd)",0x58,v61,"0,v5f,v5b",SHL,0,0,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,0xe54
"    0x63: MSTORE v5a, v61(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x58,0&m0x40,"0,v5a,v61",MSTORE,0,0,False,0,0&m0x40,0xe54
    0x64: v64(0x4) = CONST ,0x58,v64,0,CONST,0,0,False,0x4,0,0xe54
"    0x66: v66 = ADD v64(0x4), v5a",0x58,v66,"0,v64,v5a",ADD,0,0,False,0,0&m0x40+0x4,0xe54
    0x67: v67(0x10d5) = CONST ,0x58,v67,0,CONST,0,0,False,0x10d5,0,0xe54
    0x6b: v6b(0xe54) = CONST ,0x58,v6b,0,CONST,0,0,False,0xe54,0,0xe54
    0x6e: JUMP v6b(0xe54),0x58,0,"0,v6b",JUMP,0,0,False,0,0,0xe54
    Begin block 0xe54,0xe54,0,0,0,0,0,False,0,0,0xe54
"    prev=[0x58], succ=[0x10d5]",0xe54,0,0,0,0,0,False,0,0,0x10d5
    =================================,0xe54,0,0,0,0,0,False,0,0,0x10d5
    0xe55: ve55(0x20) = CONST ,0xe54,ve55,0,CONST,0,0,False,0x20,0,0x10d5
"    0xe59: MSTORE v66, ve55(0x20)",0xe54,0&m0x40+0x4,"0,v66,ve55",MSTORE,0,0,False,0,0&m0x40+0x4,0x10d5
"    0xe5c: ve5c = ADD ve55(0x20), v66",0xe54,ve5c,"0,ve55,v66",ADD,0,0,False,0,0&m0x40+0x4+0x20,0x10d5
"    0xe5d: MSTORE ve5c, ve55(0x20)",0xe54,0&m0x40+0x4+0x20,"0,ve5c,ve55",MSTORE,0,0,False,0,0&m0x40+0x4+0x20,0x10d5
    0xe5e: ve5e(0x4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374) = CONST ,0xe54,ve5e,0,CONST,0,0,False,0x4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374,0,0x10d5
    0xe7f: ve7f(0x40) = CONST ,0xe54,ve7f,0,CONST,0,0,False,0x40,0,0x10d5
"    0xe82: ve82 = ADD v66, ve7f(0x40)",0xe54,ve82,"0,v66,ve7f",ADD,0,0,False,0,0&m0x40+0x4+0x40,0x10d5
"    0xe83: MSTORE ve82, ve5e(0x4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374)",0xe54,0&m0x40+0x4+0x40,"0,ve82,ve5e",MSTORE,0,0,False,0,0&m0x40+0x4+0x40,0x10d5
    0xe84: ve84(0x60) = CONST ,0xe54,ve84,0,CONST,0,0,False,0x60,0,0x10d5
"    0xe86: ve86 = ADD ve84(0x60), v66",0xe54,ve86,"0,ve84,v66",ADD,0,0,False,0,0&m0x40+0x4+0x60,0x10d5
    0xe88: JUMP v67(0x10d5),0xe54,0,"0,v67",JUMP,0,0,False,0,0,0x10d5
    Begin block 0x10d5,0x10d5,0,0,0,0,0,False,0,0,0x10d5
"    prev=[0xe54], succ=[]",0x10d5,0,0,0,0,0,False,0,0,0x10d5
    =================================,0x10d5,0,0,0,0,0,False,0,0,0x10d5
    0x10d6: v10d6(0x40) = CONST ,0x10d5,v10d6,0,CONST,0,0,False,0x40,0,0x10d5
    0x10d8: v10d8 = MLOAD v10d6(0x40),0x10d5,v10d8,"0,v10d6",MLOAD,0,0,False,0,0&m0x40,0x10d5
"    0x10db: v10db(0x64) = SUB ve86, v10d8",0x10d5,v10db,"0,ve86,v10d8",SUB,0,0,False,0x64,0&m0x40+0x4+0x60-0x64,0x10d5
"    0x10dd: REVERT v10d8, v10db(0x64)",0x10d5,0,"0,v10d8,v10db",REVERT,0,0,False,0,0,0x10d5
    Begin block 0x78,0x78,0,0,0,0,0,False,0,0,0x10d5
"    prev=[0xb], succ=[0x93, 0x97]",0x78,0,0,0,0,0,False,0,0,"0x93, 0x97"
    =================================,0x78,0,0,0,0,0,False,0,0,"0x93, 0x97"
    0x79: v79 = CALLDATASIZE ,0x78,v79,0,CALLDATASIZE,0,0,False,0,0,"0x93, 0x97"
    0x7a: v7a(0x0) = CONST ,0x78,v7a,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
"    0x7d: CALLDATACOPY v7a(0x0), v7a(0x0), v79",0x78,0,"0,v7a,v7a,v79",CALLDATACOPY,0,0,False,0,0,"0x93, 0x97"
    0x7e: v7e(0x0) = CONST ,0x78,v7e,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
    0x81: v81 = CALLDATASIZE ,0x78,v81,0,CALLDATASIZE,0,0,False,0,0,"0x93, 0x97"
    0x82: v82(0x0) = CONST ,0x78,v82,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
    0x85: v85 = GAS ,0x78,v85,0,GAS,0,0,False,0,0,"0x93, 0x97"
"    0x86: v86 = DELEGATECALL v85, v52, v82(0x0), v81, v7e(0x0), v7e(0x0)",0x78,v86,"0,v85,v52,v82,v81,v7e,v7e",DELEGATECALL,0,0,False,0,0,"0x93, 0x97"
    0x87: v87 = RETURNDATASIZE ,0x78,v87,0,RETURNDATASIZE,0,0,False,0,0,"0x93, 0x97"
    0x88: v88(0x0) = CONST ,0x78,v88,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
"    0x8b: RETURNDATACOPY v88(0x0), v88(0x0), v87",0x78,0,"0,v88,v88,v87",RETURNDATACOPY,0,0,False,0,0,"0x93, 0x97"
    0x8e: v8e = ISZERO v86,0x78,v8e,"0,v86",ISZERO,0,0,False,0,0,"0x93, 0x97"
    0x8f: v8f(0x97) = CONST ,0x78,v8f,0,CONST,0,0,False,0x97,0,"0x93, 0x97"
"    0x92: JUMPI v8f(0x97), v8e",0x78,0,"0,v8f,v8e",JUMPI,0,0,False,0,0,"0x93, 0x97"
    Begin block 0x93,0x93,0,0,0,0,0,False,0,0,"0x93, 0x97"
"    prev=[0x78], succ=[]",0x93,0,0,0,0,0,False,0,0,"0x93, 0x97"
    =================================,0x93,0,0,0,0,0,False,0,0,"0x93, 0x97"
    0x93: v93 = RETURNDATASIZE ,0x93,v93,0,RETURNDATASIZE,0,0,False,0,0,"0x93, 0x97"
    0x94: v94(0x0) = CONST ,0x93,v94,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
"    0x96: RETURN v94(0x0), v93",0x93,0,"0,v94,v93",RETURN,0,0,False,0,0,"0x93, 0x97"
    Begin block 0x97,0x97,0,0,0,0,0,False,0,0,"0x93, 0x97"
"    prev=[0x78], succ=[]",0x97,0,0,0,0,0,False,0,0,"0x93, 0x97"
    =================================,0x97,0,0,0,0,0,False,0,0,"0x93, 0x97"
    0x98: v98 = RETURNDATASIZE ,0x97,v98,0,RETURNDATASIZE,0,0,False,0,0,"0x93, 0x97"
    0x99: v99(0x0) = CONST ,0x97,v99,0,CONST,0,0,False,0x0,0,"0x93, 0x97"
"    0x9b: REVERT v99(0x0), v98",0x97,0,"0,v99,v98",REVERT,0,0,False,0,0,"0x93, 0x97"
},0x97,0,0,0,0,0,False,0,0,"0x93, 0x97"
