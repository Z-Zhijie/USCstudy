3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x22, 0x26]",0x0,0,0,0,0,0,False,0,0,"0x22, 0x26"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x22, 0x26"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x22, 0x26"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x22, 0x26"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x22, 0x26"
    0x5: v5(0x3f480) = CONST ,0x0,v5,0,CONST,0,0,False,0x3f480,0,"0x22, 0x26"
    0x9: v9(0x5) = CONST ,0x0,v9,0,CONST,0,0,False,0x5,0,"0x22, 0x26"
"    0xb: SSTORE v9(0x5), v5(0x3f480)",0x0,0,"0,v9,v5",SSTORE,0,0,False,0,0,"0x22, 0x26"
    0xc: vc(0x4b) = CONST ,0x0,vc,0,CONST,0,0,False,0x4b,0,"0x22, 0x26"
    0xe: ve(0xa) = CONST ,0x0,ve,0,CONST,0,0,False,0xa,0,"0x22, 0x26"
"    0x10: SSTORE ve(0xa), vc(0x4b)",0x0,0,"0,ve,vc",SSTORE,0,0,False,0,0,"0x22, 0x26"
    0x11: v11(0x64) = CONST ,0x0,v11,0,CONST,0,0,False,0x64,0,"0x22, 0x26"
    0x13: v13(0xb) = CONST ,0x0,v13,0,CONST,0,0,False,0xb,0,"0x22, 0x26"
"    0x15: SSTORE v13(0xb), v11(0x64)",0x0,0,"0,v13,v11",SSTORE,0,0,False,0,0,"0x22, 0x26"
    0x16: v16(0xf) = CONST ,0x0,v16,0,CONST,0,0,False,0xf,0,"0x22, 0x26"
    0x18: v18(0xc) = CONST ,0x0,v18,0,CONST,0,0,False,0xc,0,"0x22, 0x26"
"    0x1a: SSTORE v18(0xc), v16(0xf)",0x0,0,"0,v18,v16",SSTORE,0,0,False,0,0,"0x22, 0x26"
    0x1b: v1b = CALLVALUE ,0x0,v1b,0,CALLVALUE,0,0,False,0,0,"0x22, 0x26"
    0x1d: v1d = ISZERO v1b,0x0,v1d,"0,v1b",ISZERO,0,0,False,0,0,"0x22, 0x26"
    0x1e: v1e(0x26) = CONST ,0x0,v1e,0,CONST,0,0,False,0x26,0,"0x22, 0x26"
"    0x21: JUMPI v1e(0x26), v1d",0x0,0,"0,v1e,v1d",JUMPI,0,0,False,0,0,"0x22, 0x26"
    Begin block 0x22,0x22,0,0,0,0,0,False,0,0,"0x22, 0x26"
"    prev=[0x0], succ=[]",0x22,0,0,0,0,0,False,0,0,"0x22, 0x26"
    =================================,0x22,0,0,0,0,0,False,0,0,"0x22, 0x26"
    0x22: v22(0x0) = CONST ,0x22,v22,0,CONST,0,0,False,0x0,0,"0x22, 0x26"
"    0x25: REVERT v22(0x0), v22(0x0)",0x22,0,"0,v22,v22",REVERT,0,0,False,0,0,"0x22, 0x26"
    Begin block 0x26,0x26,0,0,0,0,0,False,0,0,"0x22, 0x26"
"    prev=[0x0], succ=[]",0x26,0,0,0,0,0,False,0,0,"0x22, 0x26"
    =================================,0x26,0,0,0,0,0,False,0,0,"0x22, 0x26"
    0x28: v28(0x1939) = CONST ,0x26,v28,0,CONST,0,0,False,0x1939,0,"0x22, 0x26"
    0x2c: v2c(0x36) = CONST ,0x26,v2c,0,CONST,0,0,False,0x36,0,"0x22, 0x26"
    0x2f: v2f(0x0) = CONST ,0x26,v2f,0,CONST,0,0,False,0x0,0,"0x22, 0x26"
"    0x31: CODECOPY v2f(0x0), v2c(0x36), v28(0x1939)",0x26,0,"0,v2f,v2c,v28",CODECOPY,0,0,False,0,0,"0x22, 0x26"
    0x32: v32(0x0) = CONST ,0x26,v32,0,CONST,0,0,False,0x0,0,"0x22, 0x26"
"    0x34: RETURN v32(0x0), v28(0x1939)",0x26,0,"0,v32,v28",RETURN,0,0,False,0,0,"0x22, 0x26"
},0x26,0,0,0,0,0,False,0,0,"0x22, 0x26"
