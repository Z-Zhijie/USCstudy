3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x12: v12(0x1) = CONST ,0x10,v12,0,CONST,0,0,False,0x1,0,"0xc, 0x10"
    0x14: v14(0x0) = CONST ,0x10,v14,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0x18: SSTORE v14(0x0), v12(0x1)",0x10,0,"0,v14,v12",SSTORE,0,0,False,0,0,"0xc, 0x10"
    0x19: v19(0x40) = CONST ,0x10,v19,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
    0x1c: v1c = MLOAD v19(0x40),0x10,v1c,"0,v19",MLOAD,0,0,False,0,0&m0x40,"0xc, 0x10"
    0x1d: v1d(0x4b65657052616e646f6d426561636f6e53657276696365496d706c5631000000) = CONST ,0x10,v1d,0,CONST,0,0,False,0x4b65657052616e646f6d426561636f6e53657276696365496d706c5631000000,0,"0xc, 0x10"
"    0x3f: MSTORE v1c, v1d(0x4b65657052616e646f6d426561636f6e53657276696365496d706c5631000000)",0x10,0&m0x40,"0,v1c,v1d",MSTORE,0,0,False,0,0&m0x40,"0xc, 0x10"
    0x40: v40(0xa) = CONST ,0x10,v40,0,CONST,0,0,False,0xa,0,"0xc, 0x10"
    0x42: v42(0x1d) = CONST ,0x10,v42,0,CONST,0,0,False,0x1d,0,"0xc, 0x10"
"    0x45: v45 = ADD v1c, v42(0x1d)",0x10,v45,"0,v1c,v42",ADD,0,0,False,0,0&m0x40+0x1d,"0xc, 0x10"
"    0x46: MSTORE v45, v40(0xa)",0x10,0&m0x40+0x1d,"0,v45,v40",MSTORE,0,0,False,0,0&m0x40+0x1d,"0xc, 0x10"
    0x48: v48 = MLOAD v19(0x40),0x10,v48,"0,v19",MLOAD,0,0,False,0,0&m0x40,"0xc, 0x10"
"    0x4c: v4c(0x0) = SUB v1c, v48",0x10,v4c,"0,v1c,v48",SUB,0,0,False,0x0,0&m0x40-0x0,"0xc, 0x10"
    0x4d: v4d(0x3d) = CONST ,0x10,v4d,0,CONST,0,0,False,0x3d,0,"0xc, 0x10"
"    0x4f: v4f(0x3d) = ADD v4d(0x3d), v4c(0x0)",0x10,v4f,"0,v4d,v4c",ADD,0,0,False,0x3d,0&m0x40-0x0+0x3d,"0xc, 0x10"
"    0x51: v51 = SHA3 v48, v4f(0x3d)",0x10,v51,"0,v48,v4f",SHA3,0,0,False,0,0,"0xc, 0x10"
    0x53: v53 = SLOAD v51,0x10,v53,"0,v51",SLOAD,0,0,False,0,0,"0xc, 0x10"
    0x54: v54(0xff) = CONST ,0x10,v54,0,CONST,0,0,False,0xff,0,"0xc, 0x10"
    0x56: v56(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v54(0xff),0x10,v56,"0,v54",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0xc, 0x10"
"    0x57: v57 = AND v56(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v53",0x10,v57,"0,v56,v53",AND,0,0,False,0,0,"0xc, 0x10"
"    0x5a: v5a = OR v12(0x1), v57",0x10,v5a,"0,v12,v57",OR,0,0,False,0,0,"0xc, 0x10"
"    0x5c: SSTORE v51, v5a",0x10,0,"0,v51,v5a",SSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5d: v5d(0x20ba) = CONST ,0x10,v5d,0,CONST,0,0,False,0x20ba,0,"0xc, 0x10"
    0x61: v61(0x6b) = CONST ,0x10,v61,0,CONST,0,0,False,0x6b,0,"0xc, 0x10"
    0x64: v64(0x0) = CONST ,0x10,v64,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0x66: CODECOPY v64(0x0), v61(0x6b), v5d(0x20ba)",0x10,0,"0,v64,v61,v5d",CODECOPY,0,0,False,0,0,"0xc, 0x10"
    0x67: v67(0x0) = CONST ,0x10,v67,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0x69: RETURN v67(0x0), v5d(0x20ba)",0x10,0,"0,v67,v5d",RETURN,0,0,False,0,0,"0xc, 0x10"
},0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
