3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x32, 0x36]",0x0,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x32, 0x36"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x32, 0x36"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x32, 0x36"
    0x5: v5(0xb) = CONST ,0x0,v5,0,CONST,0,0,False,0xb,0,"0x32, 0x36"
    0x8: v8 = SLOAD v5(0xb),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x32, 0x36"
    0x9: v9(0x1) = CONST ,0x0,v9,0,CONST,0,0,False,0x1,0,"0x32, 0x36"
    0xb: vb(0x1) = CONST ,0x0,vb,0,CONST,0,0,False,0x1,0,"0x32, 0x36"
    0xd: vd(0xa0) = CONST ,0x0,vd,0,CONST,0,0,False,0xa0,0,"0x32, 0x36"
"    0xf: vf(0x10000000000000000000000000000000000000000) = SHL vd(0xa0), vb(0x1)",0x0,vf,"0,vd,vb",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x32, 0x36"
"    0x10: v10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf(0x10000000000000000000000000000000000000000), v9(0x1)",0x0,v10,"0,vf,v9",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x32, 0x36"
    0x11: v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v10(0xffffffffffffffffffffffffffffffffffffffff),0x0,v11,"0,v10",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x32, 0x36"
"    0x12: v12 = AND v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v8",0x0,v12,"0,v11,v8",AND,0,0,False,0,0,"0x32, 0x36"
    0x13: v13(0xfee5f54e1070e7ed31be341e0a5b1e847f6a84ab) = CONST ,0x0,v13,0,CONST,0,0,False,0xfee5f54e1070e7ed31be341e0a5b1e847f6a84ab,0,"0x32, 0x36"
"    0x28: v28 = OR v13(0xfee5f54e1070e7ed31be341e0a5b1e847f6a84ab), v12",0x0,v28,"0,v13,v12",OR,0,0,False,0,0,"0x32, 0x36"
"    0x2a: SSTORE v5(0xb), v28",0x0,0,"0,v5,v28",SSTORE,0,0,False,0,0,"0x32, 0x36"
    0x2b: v2b = CALLVALUE ,0x0,v2b,0,CALLVALUE,0,0,False,0,0,"0x32, 0x36"
    0x2d: v2d = ISZERO v2b,0x0,v2d,"0,v2b",ISZERO,0,0,False,0,0,"0x32, 0x36"
    0x2e: v2e(0x36) = CONST ,0x0,v2e,0,CONST,0,0,False,0x36,0,"0x32, 0x36"
"    0x31: JUMPI v2e(0x36), v2d",0x0,0,"0,v2e,v2d",JUMPI,0,0,False,0,0,"0x32, 0x36"
    Begin block 0x32,0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
"    prev=[0x0], succ=[]",0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x32: v32(0x0) = CONST ,0x32,v32,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x35: REVERT v32(0x0), v32(0x0)",0x32,0,"0,v32,v32",REVERT,0,0,False,0,0,"0x32, 0x36"
    Begin block 0x36,0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
"    prev=[0x0], succ=[]",0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x38: v38(0x4520) = CONST ,0x36,v38,0,CONST,0,0,False,0x4520,0,"0x32, 0x36"
    0x3c: v3c(0x46) = CONST ,0x36,v3c,0,CONST,0,0,False,0x46,0,"0x32, 0x36"
    0x3f: v3f(0x0) = CONST ,0x36,v3f,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x41: CODECOPY v3f(0x0), v3c(0x46), v38(0x4520)",0x36,0,"0,v3f,v3c,v38",CODECOPY,0,0,False,0,0,"0x32, 0x36"
    0x42: v42(0x0) = CONST ,0x36,v42,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x44: RETURN v42(0x0), v38(0x4520)",0x36,0,"0,v42,v38",RETURN,0,0,False,0,0,"0x32, 0x36"
},0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
