3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0xedB0x10]",0x10,0,0,0,0,0,False,0,0,0xedB0x10
    =================================,0x10,0,0,0,0,0,False,0,0,0xedB0x10
    0x12: v12(0x40) = CONST ,0x10,v12,0,CONST,0,0,False,0x40,0,0xedB0x10
    0x14: v14 = MLOAD v12(0x40),0x10,v14,"0,v12",MLOAD,0,0,False,0,0&m0x40,0xedB0x10
    0x15: v15(0x48f) = CONST ,0x10,v15,0,CONST,0,0,False,0x48f,0,0xedB0x10
    0x18: v18 = CODESIZE ,0x10,v18,0,CODESIZE,0,0,False,0,0,0xedB0x10
"    0x19: v19 = SUB v18, v15(0x48f)",0x10,v19,"0,v18,v15",SUB,0,0,False,0,0,0xedB0x10
    0x1b: v1b(0x48f) = CONST ,0x10,v1b,0,CONST,0,0,False,0x48f,0,0xedB0x10
"    0x1f: CODECOPY v14, v1b(0x48f), v19",0x10,0,"0,v14,v1b,v19",CODECOPY,0,0,False,0,0,0xedB0x10
"    0x21: v21 = ADD v14, v19",0x10,v21,"0,v14,v19",ADD,0,0,False,0,0,0xedB0x10
    0x22: v22(0x40) = CONST ,0x10,v22,0,CONST,0,0,False,0x40,0,0xedB0x10
"    0x26: MSTORE v22(0x40), v21",0x10,0,"0,v22,v21",MSTORE,0,0,False,0,0,0xedB0x10
    0x27: v27(0x2f) = CONST ,0x10,v27,0,CONST,0,0,False,0x2f,0,0xedB0x10
    0x2b: v2b(0xed) = CONST ,0x10,v2b,0,CONST,0,0,False,0xed,0,0xedB0x10
    0x2e: JUMP v2b(0xed),0x10,0,"0,v2b",JUMP,0,0,False,0,0,0xedB0x10
    Begin block 0xedB0x10,0xedB0x10,0,0,0,0,0,False,0,0,0xedB0x10
"    prev=[0x10], succ=[0xfeB0x10, 0xfbB0x10]",0xedB0x10,0,0,0,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
    =================================,0xedB0x10,0,0,0,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
    0xeeS0x10: veeV10(0x0) = CONST ,0xedB0x10,veeV10,0,CONST,0,0,False,0x0,0,"0xfeB0x10, 0xfbB0x10"
    0xf0S0x10: vf0V10(0x20) = CONST ,0xedB0x10,vf0V10,0,CONST,0,0,False,0x20,0,"0xfeB0x10, 0xfbB0x10"
"    0xf4S0x10: vf4V10 = SUB v21, v14",0xedB0x10,vf4V10,"0,v21,v14",SUB,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
"    0xf5S0x10: vf5V10 = SLT vf4V10, vf0V10(0x20)",0xedB0x10,vf5V10,"0,vf4V10,vf0V10",SLT,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
    0xf6S0x10: vf6V10 = ISZERO vf5V10,0xedB0x10,vf6V10,"0,vf5V10",ISZERO,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
    0xf7S0x10: vf7V10(0xfe) = CONST ,0xedB0x10,vf7V10,0,CONST,0,0,False,0xfe,0,"0xfeB0x10, 0xfbB0x10"
"    0xfaS0x10: JUMPI vf7V10(0xfe), vf6V10",0xedB0x10,0,"0,vf7V10,vf6V10",JUMPI,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
    Begin block 0xfeB0x10,0xfeB0x10,0,0,0,0,0,False,0,0,"0xfeB0x10, 0xfbB0x10"
"    prev=[0xedB0x10], succ=[0x114B0x10, 0x111B0x10]",0xfeB0x10,0,0,0,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
    =================================,0xfeB0x10,0,0,0,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
    0x100S0x10: v100V10 = MLOAD v14,0xfeB0x10,v100V10,"0,v14",MLOAD,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
    0x101S0x10: v101V10(0x1) = CONST ,0xfeB0x10,v101V10,0,CONST,0,0,False,0x1,0,"0x114B0x10, 0x111B0x10"
    0x103S0x10: v103V10(0x1) = CONST ,0xfeB0x10,v103V10,0,CONST,0,0,False,0x1,0,"0x114B0x10, 0x111B0x10"
    0x105S0x10: v105V10(0xa0) = CONST ,0xfeB0x10,v105V10,0,CONST,0,0,False,0xa0,0,"0x114B0x10, 0x111B0x10"
"    0x107S0x10: v107V10(0x10000000000000000000000000000000000000000) = SHL v105V10(0xa0), v103V10(0x1)",0xfeB0x10,v107V10,"0,v105V10,v103V10",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x114B0x10, 0x111B0x10"
"    0x108S0x10: v108V10(0xffffffffffffffffffffffffffffffffffffffff) = SUB v107V10(0x10000000000000000000000000000000000000000), v101V10(0x1)",0xfeB0x10,v108V10,"0,v107V10,v101V10",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x114B0x10, 0x111B0x10"
"    0x10aS0x10: v10aV10 = AND v100V10, v108V10(0xffffffffffffffffffffffffffffffffffffffff)",0xfeB0x10,v10aV10,"0,v100V10,v108V10",AND,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
"    0x10cS0x10: v10cV10 = EQ v100V10, v10aV10",0xfeB0x10,v10cV10,"0,v100V10,v10aV10",EQ,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
    0x10dS0x10: v10dV10(0x114) = CONST ,0xfeB0x10,v10dV10,0,CONST,0,0,False,0x114,0,"0x114B0x10, 0x111B0x10"
"    0x110S0x10: JUMPI v10dV10(0x114), v10cV10",0xfeB0x10,0,"0,v10dV10,v10cV10",JUMPI,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
    Begin block 0x114B0x10,0x114B0x10,0,0,0,0,0,False,0,0,"0x114B0x10, 0x111B0x10"
"    prev=[0xfeB0x10], succ=[0x2f]",0x114B0x10,0,0,0,0,0,False,0,0,0x2f
    =================================,0x114B0x10,0,0,0,0,0,False,0,0,0x2f
    0x11aS0x10: JUMP v27(0x2f),0x114B0x10,0,"0,v27",JUMP,0,0,False,0,0,0x2f
    Begin block 0x2f,0x2f,0,0,0,0,0,False,0,0,0x2f
"    prev=[0x114B0x10], succ=[0x57]",0x2f,0,0,0,0,0,False,0,0,0x57
    =================================,0x2f,0,0,0,0,0,False,0,0,0x57
    0x30: v30(0x57) = CONST ,0x2f,v30,0,CONST,0,0,False,0x57,0,0x57
    0x33: v33 = CALLER ,0x2f,v33,0,CALLER,0,0,True,0,0,0x57
    0x34: v34(0x81835725828b38adc3ec444c57e4739a3dbb8f6c811b0e30ed0fd7af300fd2a8) = CONST ,0x2f,v34,0,CONST,0,0,False,0x81835725828b38adc3ec444c57e4739a3dbb8f6c811b0e30ed0fd7af300fd2a8,0,0x57
"    0x55: SSTORE v34(0x81835725828b38adc3ec444c57e4739a3dbb8f6c811b0e30ed0fd7af300fd2a8), v33",0x2f,0,"0,v34,v33",SSTORE,0,0,False,0,0,0x57
    0x56: JUMP v30(0x57),0x2f,0,"0,v30",JUMP,0,0,False,0,0,0x57
    Begin block 0x57,0x57,0,0,0,0,0,False,0,0,0x57
"    prev=[0x2f], succ=[0x66]",0x57,0,0,0,0,0,False,0,0,0x66
    =================================,0x57,0,0,0,0,0,False,0,0,0x66
    0x58: v58(0x60) = CONST ,0x57,v58,0,CONST,0,0,False,0x60,0,0x66
    0x5c: v5c(0x66) = CONST ,0x57,v5c,0,CONST,0,0,False,0x66,0,0x66
    0x5f: JUMP v5c(0x66),0x57,0,"0,v5c",JUMP,0,0,False,0,0,0x66
    Begin block 0x66,0x66,0,0,0,0,0,False,0,0,0x66
"    prev=[0x57], succ=[0x7e]",0x66,0,0,0,0,0,False,0,0,0x7e
    =================================,0x66,0,0,0,0,0,False,0,0,0x7e
    0x67: v67(0x0) = CONST ,0x66,v67,0,CONST,0,0,False,0x0,0,0x7e
    0x69: v69(0x7e) = CONST ,0x66,v69,0,CONST,0,0,False,0x7e,0,0x7e
    0x6c: v6c(0x0) = CONST ,0x66,v6c,0,CONST,0,0,False,0x0,0,0x7e
    0x6f: v6f = MLOAD v6c(0x0),0x66,v6f,"0,v6c",MLOAD,0,0,False,0,0&m0x0,0x7e
    0x70: v70(0x20) = CONST ,0x66,v70,0,CONST,0,0,False,0x20,0,0x7e
    0x72: v72(0x46f) = CONST ,0x66,v72,0,CONST,0,0,False,0x46f,0,0x7e
"    0x7a: MSTORE v6c(0x0), v6f",0x66,0,"0,v6c,v6f",MSTORE,0,0,False,0,0,0x7e
    0x7b: v7b = SLOAD v4ac(0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410),0x66,v7b,"0,v4ac",SLOAD,0,0,False,0,0,0x7e
    0x7d: JUMP v69(0x7e),0x66,0,"0,v69",JUMP,0,0,False,0,0,0x7e
    0x4ac: v4ac(0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410) = CONST ,0x66,v4ac,0,CONST,0,0,False,0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410,0,0x7e
    Begin block 0x7e,0x7e,0,0,0,0,0,False,0,0,0x7e
"    prev=[0x66], succ=[0x9b, 0x9f]",0x7e,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
    =================================,0x7e,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
    0x82: v82(0x1) = CONST ,0x7e,v82,0,CONST,0,0,False,0x1,0,"0x9b, 0x9f"
    0x84: v84(0x1) = CONST ,0x7e,v84,0,CONST,0,0,False,0x1,0,"0x9b, 0x9f"
    0x86: v86(0xa0) = CONST ,0x7e,v86,0,CONST,0,0,False,0xa0,0,"0x9b, 0x9f"
"    0x88: v88(0x10000000000000000000000000000000000000000) = SHL v86(0xa0), v84(0x1)",0x7e,v88,"0,v86,v84",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x9b, 0x9f"
"    0x89: v89(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88(0x10000000000000000000000000000000000000000), v82(0x1)",0x7e,v89,"0,v88,v82",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x9b, 0x9f"
"    0x8a: v8a = AND v89(0xffffffffffffffffffffffffffffffffffffffff), v100V10",0x7e,v8a,"0,v89,v100V10",AND,0,0,False,0,0,"0x9b, 0x9f"
    0x8c: v8c(0x1) = CONST ,0x7e,v8c,0,CONST,0,0,False,0x1,0,"0x9b, 0x9f"
    0x8e: v8e(0x1) = CONST ,0x7e,v8e,0,CONST,0,0,False,0x1,0,"0x9b, 0x9f"
    0x90: v90(0xa0) = CONST ,0x7e,v90,0,CONST,0,0,False,0xa0,0,"0x9b, 0x9f"
"    0x92: v92(0x10000000000000000000000000000000000000000) = SHL v90(0xa0), v8e(0x1)",0x7e,v92,"0,v90,v8e",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x9b, 0x9f"
"    0x93: v93(0xffffffffffffffffffffffffffffffffffffffff) = SUB v92(0x10000000000000000000000000000000000000000), v8c(0x1)",0x7e,v93,"0,v92,v8c",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x9b, 0x9f"
"    0x94: v94 = AND v93(0xffffffffffffffffffffffffffffffffffffffff), v7b",0x7e,v94,"0,v93,v7b",AND,0,0,False,0,0,"0x9b, 0x9f"
"    0x95: v95 = EQ v94, v8a",0x7e,v95,"0,v94,v8a",EQ,0,0,False,0,0,"0x9b, 0x9f"
    0x96: v96 = ISZERO v95,0x7e,v96,"0,v95",ISZERO,0,0,False,0,0,"0x9b, 0x9f"
    0x97: v97(0x9f) = CONST ,0x7e,v97,0,CONST,0,0,False,0x9f,0,"0x9b, 0x9f"
"    0x9a: JUMPI v97(0x9f), v96",0x7e,0,"0,v97,v96",JUMPI,0,0,False,0,0,"0x9b, 0x9f"
    Begin block 0x9b,0x9b,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
"    prev=[0x7e], succ=[]",0x9b,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
    =================================,0x9b,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
    0x9b: v9b(0x0) = CONST ,0x9b,v9b,0,CONST,0,0,False,0x0,0,"0x9b, 0x9f"
"    0x9e: REVERT v9b(0x0), v9b(0x0)",0x9b,0,"0,v9b,v9b",REVERT,0,0,False,0,0,"0x9b, 0x9f"
    Begin block 0x9f,0x9f,0,0,0,0,0,False,0,0,"0x9b, 0x9f"
"    prev=[0x7e], succ=[0xb5]",0x9f,0,0,0,0,0,False,0,0,0xb5
    =================================,0x9f,0,0,0,0,0,False,0,0,0xb5
    0xa0: va0(0xb5) = CONST ,0x9f,va0,0,CONST,0,0,False,0xb5,0,0xb5
    0xa4: va4(0x0) = CONST ,0x9f,va4,0,CONST,0,0,False,0x0,0,0xb5
    0xa7: va7 = MLOAD va4(0x0),0x9f,va7,"0,va4",MLOAD,0,0,False,0,0&m0x0,0xb5
    0xa8: va8(0x20) = CONST ,0x9f,va8,0,CONST,0,0,False,0x20,0,0xb5
    0xaa: vaa(0x46f) = CONST ,0x9f,vaa,0,CONST,0,0,False,0x46f,0,0xb5
"    0xb2: MSTORE va4(0x0), va7",0x9f,0,"0,va4,va7",MSTORE,0,0,False,0,0,0xb5
"    0xb3: SSTORE v4b1(0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410), v100V10",0x9f,0,"0,v4b1,v100V10",SSTORE,0,0,False,0,0,0xb5
    0xb4: JUMP va0(0xb5),0x9f,0,"0,va0",JUMP,0,0,False,0,0,0xb5
    0x4b1: v4b1(0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410) = CONST ,0x9f,v4b1,0,CONST,0,0,False,0xd9b55276818c04b253761a44ce8fdb05c84792b93f45b730ef7f7adcb2d9a410,0,0xb5
    Begin block 0xb5,0xb5,0,0,0,0,0,False,0,0,0xb5
"    prev=[0x9f], succ=[0x60]",0xb5,0,0,0,0,0,False,0,0,0x60
    =================================,0xb5,0,0,0,0,0,False,0,0,0x60
    0xb6: vb6(0x40) = CONST ,0xb5,vb6,0,CONST,0,0,False,0x40,0,0x60
    0xb8: vb8 = MLOAD vb6(0x40),0xb5,vb8,"0,vb6",MLOAD,0,0,False,0,0&m0x40,0x60
    0xb9: vb9(0x1) = CONST ,0xb5,vb9,0,CONST,0,0,False,0x1,0,0x60
    0xbb: vbb(0x1) = CONST ,0xb5,vbb,0,CONST,0,0,False,0x1,0,0x60
    0xbd: vbd(0xa0) = CONST ,0xb5,vbd,0,CONST,0,0,False,0xa0,0,0x60
"    0xbf: vbf(0x10000000000000000000000000000000000000000) = SHL vbd(0xa0), vbb(0x1)",0xb5,vbf,"0,vbd,vbb",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0x60
"    0xc0: vc0(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbf(0x10000000000000000000000000000000000000000), vb9(0x1)",0xb5,vc0,"0,vbf,vb9",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x60
"    0xc2: vc2 = AND v100V10, vc0(0xffffffffffffffffffffffffffffffffffffffff)",0xb5,vc2,"0,v100V10,vc0",AND,0,0,False,0,0,0x60
    0xc4: vc4(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b) = CONST ,0xb5,vc4,0,CONST,0,0,False,0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b,0,0x60
    0xe6: ve6(0x0) = CONST ,0xb5,ve6,0,CONST,0,0,False,0x0,0,0x60
"    0xe9: LOG2 vb8, ve6(0x0), vc4(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b), vc2",0xb5,0,"0,vb8,ve6,vc4,vc2",LOG2,0,0,False,0,0,0x60
    0xec: JUMP v58(0x60),0xb5,0,"0,v58",JUMP,0,0,False,0,0,0x60
    Begin block 0x60,0x60,0,0,0,0,0,False,0,0,0x60
"    prev=[0xb5], succ=[0x11b]",0x60,0,0,0,0,0,False,0,0,0x11b
    =================================,0x60,0,0,0,0,0,False,0,0,0x11b
    0x62: v62(0x11b) = CONST ,0x60,v62,0,CONST,0,0,False,0x11b,0,0x11b
    0x65: JUMP v62(0x11b),0x60,0,"0,v62",JUMP,0,0,False,0,0,0x11b
    Begin block 0x11b,0x11b,0,0,0,0,0,False,0,0,0x11b
"    prev=[0x60], succ=[]",0x11b,0,0,0,0,0,False,0,0,0x11b
    =================================,0x11b,0,0,0,0,0,False,0,0,0x11b
    0x11c: v11c(0x345) = CONST ,0x11b,v11c,0,CONST,0,0,False,0x345,0,0x11b
    0x120: v120(0x12a) = CONST ,0x11b,v120,0,CONST,0,0,False,0x12a,0,0x11b
    0x123: v123(0x0) = CONST ,0x11b,v123,0,CONST,0,0,False,0x0,0,0x11b
"    0x125: CODECOPY v123(0x0), v120(0x12a), v11c(0x345)",0x11b,0,"0,v123,v120,v11c",CODECOPY,0,0,False,0,0,0x11b
    0x126: v126(0x0) = CONST ,0x11b,v126,0,CONST,0,0,False,0x0,0,0x11b
"    0x128: RETURN v126(0x0), v11c(0x345)",0x11b,0,"0,v126,v11c",RETURN,0,0,False,0,0,0x11b
    Begin block 0x111B0x10,0x111B0x10,0,0,0,0,0,False,0,0,0x11b
"    prev=[0xfeB0x10], succ=[]",0x111B0x10,0,0,0,0,0,False,0,0,0x11b
    =================================,0x111B0x10,0,0,0,0,0,False,0,0,0x11b
"    0x113S0x10: REVERT veeV10(0x0), veeV10(0x0)",0x111B0x10,0,"0,veeV10,veeV10",REVERT,0,0,False,0,0,0x11b
    Begin block 0xfbB0x10,0xfbB0x10,0,0,0,0,0,False,0,0,0x11b
"    prev=[0xedB0x10], succ=[]",0xfbB0x10,0,0,0,0,0,False,0,0,0x11b
    =================================,0xfbB0x10,0,0,0,0,0,False,0,0,0x11b
"    0xfdS0x10: REVERT veeV10(0x0), veeV10(0x0)",0xfbB0x10,0,"0,veeV10,veeV10",REVERT,0,0,False,0,0,0x11b
},0xfbB0x10,0,0,0,0,0,False,0,0,0x11b
