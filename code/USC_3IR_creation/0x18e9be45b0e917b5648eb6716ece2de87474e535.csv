3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x9dB0x10]",0x10,0,0,0,0,0,False,0,0,0x9dB0x10
    =================================,0x10,0,0,0,0,0,False,0,0,0x9dB0x10
    0x12: v12(0x54) = CONST ,0x10,v12,0,CONST,0,0,False,0x54,0,0x9dB0x10
    0x15: v15(0x40) = CONST ,0x10,v15,0,CONST,0,0,False,0x40,0,0x9dB0x10
    0x17: v17 = MLOAD v15(0x40),0x10,v17,"0,v15",MLOAD,0,0,False,0,0&m0x40,0x9dB0x10
    0x18: v18(0x20) = CONST ,0x10,v18,0,CONST,0,0,False,0x20,0,0x9dB0x10
"    0x1a: v1a = ADD v18(0x20), v17",0x10,v1a,"0,v18,v17",ADD,0,0,False,0,0&m0x40+0x20,0x9dB0x10
    0x1d: v1d(0x13d5d3915497d4d313d5) = CONST ,0x10,v1d,0,CONST,0,0,False,0x13d5d3915497d4d313d5,0,0x9dB0x10
    0x28: v28(0xb2) = CONST ,0x10,v28,0,CONST,0,0,False,0xb2,0,0x9dB0x10
"    0x2a: v2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = SHL v28(0xb2), v1d(0x13d5d3915497d4d313d5)",0x10,v2a,"0,v28,v1d",SHL,0,0,False,0x4f574e45525f534c4f5400000000000000000000000000000000000000000000,0,0x9dB0x10
"    0x2c: MSTORE v1a, v2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)",0x10,0&m0x40+0x20,"0,v1a,v2a",MSTORE,0,0,False,0,0&m0x40+0x20,0x9dB0x10
    0x2e: v2e(0xa) = CONST ,0x10,v2e,0,CONST,0,0,False,0xa,0,0x9dB0x10
"    0x30: v30 = ADD v2e(0xa), v1a",0x10,v30,"0,v2e,v1a",ADD,0,0,False,0,0&m0x40+0x20+0xa,0x9dB0x10
    0x33: v33(0x40) = CONST ,0x10,v33,0,CONST,0,0,False,0x40,0,0x9dB0x10
    0x35: v35 = MLOAD v33(0x40),0x10,v35,"0,v33",MLOAD,0,0,False,0,0&m0x40,0x9dB0x10
    0x36: v36(0x20) = CONST ,0x10,v36,0,CONST,0,0,False,0x20,0,0x9dB0x10
"    0x3a: v3a(0x2a) = SUB v30, v35",0x10,v3a,"0,v30,v35",SUB,0,0,False,0x2a,0&m0x40+0x20+0xa-0x2a,0x9dB0x10
"    0x3b: v3b(0xa) = SUB v3a(0x2a), v36(0x20)",0x10,v3b,"0,v3a,v36",SUB,0,0,False,0xa,0&m0x40+0x20+0xa-0x2a-0xa,0x9dB0x10
"    0x3d: MSTORE v35, v3b(0xa)",0x10,0&m0x40,"0,v35,v3b",MSTORE,0,0,False,0,0&m0x40,0x9dB0x10
    0x3f: v3f(0x40) = CONST ,0x10,v3f,0,CONST,0,0,False,0x40,0,0x9dB0x10
"    0x41: MSTORE v3f(0x40), v30",0x10,0,"0,v3f,v30",MSTORE,0,0,False,0,0,0x9dB0x10
    0x43: v43(0xa) = MLOAD v35,0x10,v43,"0,v35",MLOAD,0,0,False,0xa,0&m0xa,0x9dB0x10
    0x45: v45(0x20) = CONST ,0x10,v45,0,CONST,0,0,False,0x20,0,0x9dB0x10
"    0x47: v47 = ADD v45(0x20), v35",0x10,v47,"0,v45,v35",ADD,0,0,False,0,0&m0x40+0x20,0x9dB0x10
"    0x48: v48 = SHA3 v47, v43(0xa)",0x10,v48,"0,v47,v43",SHA3,0,0,False,0,0,0x9dB0x10
    0x49: v49 = CALLER ,0x10,v49,0,CALLER,0,0,True,0,0,0x9dB0x10
    0x4a: v4a(0x9d) = CONST ,0x10,v4a,0,CONST,0,0,False,0x9d,0,0x9dB0x10
    0x4d: v4d(0x20) = CONST ,0x10,v4d,0,CONST,0,0,False,0x20,0,0x9dB0x10
"    0x4f: v4f(0x9d00000000) = SHL v4d(0x20), v4a(0x9d)",0x10,v4f,"0,v4d,v4a",SHL,0,0,False,0x9d00000000,0,0x9dB0x10
    0x50: v50(0x20) = CONST ,0x10,v50,0,CONST,0,0,False,0x20,0,0x9dB0x10
"    0x52: v52(0x9d) = SHR v50(0x20), v4f(0x9d00000000)",0x10,v52,"0,v50,v4f",SHR,0,0,False,0x9d,0,0x9dB0x10
"    0x53: JUMP v52(0x9d), v49, v48, v12(0x54)",0x10,0,"0,v52,v49,v48,v12",JUMP,0,0,False,0,0,0x9dB0x10
    Begin block 0x9dB0x10,0x9dB0x10,0,0,0,0,0,False,0,0,0x9dB0x10
"    prev=[0x10], succ=[0xb3B0x10]",0x9dB0x10,0,0,0,0,0,False,0,0,0xb3B0x10
    =================================,0x9dB0x10,0,0,0,0,0,False,0,0,0xb3B0x10
    0x9eS0x10: v9eV10(0xaf) = CONST ,0x9dB0x10,v9eV10,0,CONST,0,0,False,0xaf,0,0xb3B0x10
    0xa2S0x10: va2V10(0xaa) = CONST ,0x9dB0x10,va2V10,0,CONST,0,0,False,0xaa,0,0xb3B0x10
    0xa6S0x10: va6V10(0xb3) = CONST ,0x9dB0x10,va6V10,0,CONST,0,0,False,0xb3,0,0xb3B0x10
    0xa9S0x10: JUMP va6V10(0xb3),0x9dB0x10,0,"0,va6V10",JUMP,0,0,False,0,0,0xb3B0x10
    Begin block 0xb3B0x10,0xb3B0x10,0,0,0,0,0,False,0,0,0xb3B0x10
"    prev=[0x9dB0x10], succ=[0xaaB0x10]",0xb3B0x10,0,0,0,0,0,False,0,0,0xaaB0x10
    =================================,0xb3B0x10,0,0,0,0,0,False,0,0,0xaaB0x10
    0xb4S0x10: vb4V10(0x1) = CONST ,0xb3B0x10,vb4V10,0,CONST,0,0,False,0x1,0,0xaaB0x10
    0xb6S0x10: vb6V10(0x1) = CONST ,0xb3B0x10,vb6V10,0,CONST,0,0,False,0x1,0,0xaaB0x10
    0xb8S0x10: vb8V10(0xa0) = CONST ,0xb3B0x10,vb8V10,0,CONST,0,0,False,0xa0,0,0xaaB0x10
"    0xbaS0x10: vbaV10(0x10000000000000000000000000000000000000000) = SHL vb8V10(0xa0), vb6V10(0x1)",0xb3B0x10,vbaV10,"0,vb8V10,vb6V10",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xaaB0x10
"    0xbbS0x10: vbbV10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbaV10(0x10000000000000000000000000000000000000000), vb4V10(0x1)",0xb3B0x10,vbbV10,"0,vbaV10,vb4V10",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xaaB0x10
"    0xbcS0x10: vbcV10 = AND vbbV10(0xffffffffffffffffffffffffffffffffffffffff), v49",0xb3B0x10,vbcV10,"0,vbbV10,v49",AND,0,0,True,0,0,0xaaB0x10
    0xbeS0x10: JUMP va2V10(0xaa),0xb3B0x10,0,"0,va2V10",JUMP,0,0,False,0,0,0xaaB0x10
    Begin block 0xaaB0x10,0xaaB0x10,0,0,0,0,0,False,0,0,0xaaB0x10
"    prev=[0xb3B0x10], succ=[0xbfB0x10]",0xaaB0x10,0,0,0,0,0,False,0,0,0xbfB0x10
    =================================,0xaaB0x10,0,0,0,0,0,False,0,0,0xbfB0x10
    0xabS0x10: vabV10(0xbf) = CONST ,0xaaB0x10,vabV10,0,CONST,0,0,False,0xbf,0,0xbfB0x10
    0xaeS0x10: JUMP vabV10(0xbf),0xaaB0x10,0,"0,vabV10",JUMP,0,0,False,0,0,0xbfB0x10
    Begin block 0xbfB0x10,0xbfB0x10,0,0,0,0,0,False,0,0,0xbfB0x10
"    prev=[0xaaB0x10], succ=[0xafB0x10]",0xbfB0x10,0,0,0,0,0,False,0,0,0xafB0x10
    =================================,0xbfB0x10,0,0,0,0,0,False,0,0,0xafB0x10
"    0xc1S0x10: SSTORE v48, vbcV10",0xbfB0x10,0,"0,v48,vbcV10",SSTORE,0,0,False,0,0,0xafB0x10
    0xc2S0x10: JUMP v9eV10(0xaf),0xbfB0x10,0,"0,v9eV10",JUMP,0,0,False,0,0,0xafB0x10
    Begin block 0xafB0x10,0xafB0x10,0,0,0,0,0,False,0,0,0xafB0x10
"    prev=[0xbfB0x10], succ=[0x54]",0xafB0x10,0,0,0,0,0,False,0,0,0x54
    =================================,0xafB0x10,0,0,0,0,0,False,0,0,0x54
    0xb2S0x10: JUMP v12(0x54),0xafB0x10,0,"0,v12",JUMP,0,0,False,0,0,0x54
    Begin block 0x54,0x54,0,0,0,0,0,False,0,0,0x54
"    prev=[0xafB0x10], succ=[0x9dB0x54]",0x54,0,0,0,0,0,False,0,0,0x9dB0x54
    =================================,0x54,0,0,0,0,0,False,0,0,0x9dB0x54
    0x55: v55(0x98) = CONST ,0x54,v55,0,CONST,0,0,False,0x98,0,0x9dB0x54
    0x58: v58(0x40) = CONST ,0x54,v58,0,CONST,0,0,False,0x40,0,0x9dB0x54
    0x5a: v5a = MLOAD v58(0x40),0x54,v5a,"0,v58",MLOAD,0,0,False,0,0&m0x40,0x9dB0x54
    0x5b: v5b(0x20) = CONST ,0x54,v5b,0,CONST,0,0,False,0x20,0,0x9dB0x54
"    0x5d: v5d = ADD v5b(0x20), v5a",0x54,v5d,"0,v5b,v5a",ADD,0,0,False,0,0&m0x40+0x20,0x9dB0x54
    0x60: v60(0x14105556915497d4d313d5) = CONST ,0x54,v60,0,CONST,0,0,False,0x14105556915497d4d313d5,0,0x9dB0x54
    0x6c: v6c(0xaa) = CONST ,0x54,v6c,0,CONST,0,0,False,0xaa,0,0x9dB0x54
"    0x6e: v6e(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = SHL v6c(0xaa), v60(0x14105556915497d4d313d5)",0x54,v6e,"0,v6c,v60",SHL,0,0,False,0x5041555a45525f534c4f54000000000000000000000000000000000000000000,0,0x9dB0x54
"    0x70: MSTORE v5d, v6e(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)",0x54,0&m0x40+0x20,"0,v5d,v6e",MSTORE,0,0,False,0,0&m0x40+0x20,0x9dB0x54
    0x72: v72(0xb) = CONST ,0x54,v72,0,CONST,0,0,False,0xb,0,0x9dB0x54
"    0x74: v74 = ADD v72(0xb), v5d",0x54,v74,"0,v72,v5d",ADD,0,0,False,0,0&m0x40+0x20+0xb,0x9dB0x54
    0x77: v77(0x40) = CONST ,0x54,v77,0,CONST,0,0,False,0x40,0,0x9dB0x54
    0x79: v79 = MLOAD v77(0x40),0x54,v79,"0,v77",MLOAD,0,0,False,0,0&m0x40,0x9dB0x54
    0x7a: v7a(0x20) = CONST ,0x54,v7a,0,CONST,0,0,False,0x20,0,0x9dB0x54
"    0x7e: v7e(0x2b) = SUB v74, v79",0x54,v7e,"0,v74,v79",SUB,0,0,False,0x2b,0&m0x40+0x20+0xb-0x2b,0x9dB0x54
"    0x7f: v7f(0xb) = SUB v7e(0x2b), v7a(0x20)",0x54,v7f,"0,v7e,v7a",SUB,0,0,False,0xb,0&m0x40+0x20+0xb-0x2b-0xb,0x9dB0x54
"    0x81: MSTORE v79, v7f(0xb)",0x54,0&m0x40,"0,v79,v7f",MSTORE,0,0,False,0,0&m0x40,0x9dB0x54
    0x83: v83(0x40) = CONST ,0x54,v83,0,CONST,0,0,False,0x40,0,0x9dB0x54
"    0x85: MSTORE v83(0x40), v74",0x54,0,"0,v83,v74",MSTORE,0,0,False,0,0,0x9dB0x54
    0x87: v87(0xb) = MLOAD v79,0x54,v87,"0,v79",MLOAD,0,0,False,0xb,0&m0xb,0x9dB0x54
    0x89: v89(0x20) = CONST ,0x54,v89,0,CONST,0,0,False,0x20,0,0x9dB0x54
"    0x8b: v8b = ADD v89(0x20), v79",0x54,v8b,"0,v89,v79",ADD,0,0,False,0,0&m0x40+0x20,0x9dB0x54
"    0x8c: v8c = SHA3 v8b, v87(0xb)",0x54,v8c,"0,v8b,v87",SHA3,0,0,False,0,0,0x9dB0x54
    0x8d: v8d = CALLER ,0x54,v8d,0,CALLER,0,0,True,0,0,0x9dB0x54
    0x8e: v8e(0x9d) = CONST ,0x54,v8e,0,CONST,0,0,False,0x9d,0,0x9dB0x54
    0x91: v91(0x20) = CONST ,0x54,v91,0,CONST,0,0,False,0x20,0,0x9dB0x54
"    0x93: v93(0x9d00000000) = SHL v91(0x20), v8e(0x9d)",0x54,v93,"0,v91,v8e",SHL,0,0,False,0x9d00000000,0,0x9dB0x54
    0x94: v94(0x20) = CONST ,0x54,v94,0,CONST,0,0,False,0x20,0,0x9dB0x54
"    0x96: v96(0x9d) = SHR v94(0x20), v93(0x9d00000000)",0x54,v96,"0,v94,v93",SHR,0,0,False,0x9d,0,0x9dB0x54
"    0x97: JUMP v96(0x9d), v8d, v8c, v55(0x98)",0x54,0,"0,v96,v8d,v8c,v55",JUMP,0,0,False,0,0,0x9dB0x54
    Begin block 0x9dB0x54,0x9dB0x54,0,0,0,0,0,False,0,0,0x9dB0x54
"    prev=[0x54], succ=[0xb3B0x54]",0x9dB0x54,0,0,0,0,0,False,0,0,0xb3B0x54
    =================================,0x9dB0x54,0,0,0,0,0,False,0,0,0xb3B0x54
    0x9eS0x54: v9eV54(0xaf) = CONST ,0x9dB0x54,v9eV54,0,CONST,0,0,False,0xaf,0,0xb3B0x54
    0xa2S0x54: va2V54(0xaa) = CONST ,0x9dB0x54,va2V54,0,CONST,0,0,False,0xaa,0,0xb3B0x54
    0xa6S0x54: va6V54(0xb3) = CONST ,0x9dB0x54,va6V54,0,CONST,0,0,False,0xb3,0,0xb3B0x54
    0xa9S0x54: JUMP va6V54(0xb3),0x9dB0x54,0,"0,va6V54",JUMP,0,0,False,0,0,0xb3B0x54
    Begin block 0xb3B0x54,0xb3B0x54,0,0,0,0,0,False,0,0,0xb3B0x54
"    prev=[0x9dB0x54], succ=[0xaaB0x54]",0xb3B0x54,0,0,0,0,0,False,0,0,0xaaB0x54
    =================================,0xb3B0x54,0,0,0,0,0,False,0,0,0xaaB0x54
    0xb4S0x54: vb4V54(0x1) = CONST ,0xb3B0x54,vb4V54,0,CONST,0,0,False,0x1,0,0xaaB0x54
    0xb6S0x54: vb6V54(0x1) = CONST ,0xb3B0x54,vb6V54,0,CONST,0,0,False,0x1,0,0xaaB0x54
    0xb8S0x54: vb8V54(0xa0) = CONST ,0xb3B0x54,vb8V54,0,CONST,0,0,False,0xa0,0,0xaaB0x54
"    0xbaS0x54: vbaV54(0x10000000000000000000000000000000000000000) = SHL vb8V54(0xa0), vb6V54(0x1)",0xb3B0x54,vbaV54,"0,vb8V54,vb6V54",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xaaB0x54
"    0xbbS0x54: vbbV54(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbaV54(0x10000000000000000000000000000000000000000), vb4V54(0x1)",0xb3B0x54,vbbV54,"0,vbaV54,vb4V54",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xaaB0x54
"    0xbcS0x54: vbcV54 = AND vbbV54(0xffffffffffffffffffffffffffffffffffffffff), v8d",0xb3B0x54,vbcV54,"0,vbbV54,v8d",AND,0,0,True,0,0,0xaaB0x54
    0xbeS0x54: JUMP va2V54(0xaa),0xb3B0x54,0,"0,va2V54",JUMP,0,0,False,0,0,0xaaB0x54
    Begin block 0xaaB0x54,0xaaB0x54,0,0,0,0,0,False,0,0,0xaaB0x54
"    prev=[0xb3B0x54], succ=[0xbfB0x54]",0xaaB0x54,0,0,0,0,0,False,0,0,0xbfB0x54
    =================================,0xaaB0x54,0,0,0,0,0,False,0,0,0xbfB0x54
    0xabS0x54: vabV54(0xbf) = CONST ,0xaaB0x54,vabV54,0,CONST,0,0,False,0xbf,0,0xbfB0x54
    0xaeS0x54: JUMP vabV54(0xbf),0xaaB0x54,0,"0,vabV54",JUMP,0,0,False,0,0,0xbfB0x54
    Begin block 0xbfB0x54,0xbfB0x54,0,0,0,0,0,False,0,0,0xbfB0x54
"    prev=[0xaaB0x54], succ=[0xafB0x54]",0xbfB0x54,0,0,0,0,0,False,0,0,0xafB0x54
    =================================,0xbfB0x54,0,0,0,0,0,False,0,0,0xafB0x54
"    0xc1S0x54: SSTORE v8c, vbcV54",0xbfB0x54,0,"0,v8c,vbcV54",SSTORE,0,0,False,0,0,0xafB0x54
    0xc2S0x54: JUMP v9eV54(0xaf),0xbfB0x54,0,"0,v9eV54",JUMP,0,0,False,0,0,0xafB0x54
    Begin block 0xafB0x54,0xafB0x54,0,0,0,0,0,False,0,0,0xafB0x54
"    prev=[0xbfB0x54], succ=[0x98]",0xafB0x54,0,0,0,0,0,False,0,0,0x98
    =================================,0xafB0x54,0,0,0,0,0,False,0,0,0x98
    0xb2S0x54: JUMP v55(0x98),0xafB0x54,0,"0,v55",JUMP,0,0,False,0,0,0x98
    Begin block 0x98,0x98,0,0,0,0,0,False,0,0,0x98
"    prev=[0xafB0x54], succ=[0xc3]",0x98,0,0,0,0,0,False,0,0,0xc3
    =================================,0x98,0,0,0,0,0,False,0,0,0xc3
    0x99: v99(0xc3) = CONST ,0x98,v99,0,CONST,0,0,False,0xc3,0,0xc3
    0x9c: JUMP v99(0xc3),0x98,0,"0,v99",JUMP,0,0,False,0,0,0xc3
    Begin block 0xc3,0xc3,0,0,0,0,0,False,0,0,0xc3
"    prev=[0x98], succ=[]",0xc3,0,0,0,0,0,False,0,0,0xc3
    =================================,0xc3,0,0,0,0,0,False,0,0,0xc3
    0xc4: vc4(0xa66) = CONST ,0xc3,vc4,0,CONST,0,0,False,0xa66,0,0xc3
    0xc8: vc8(0xd2) = CONST ,0xc3,vc8,0,CONST,0,0,False,0xd2,0,0xc3
    0xcb: vcb(0x0) = CONST ,0xc3,vcb,0,CONST,0,0,False,0x0,0,0xc3
"    0xcd: CODECOPY vcb(0x0), vc8(0xd2), vc4(0xa66)",0xc3,0,"0,vcb,vc8,vc4",CODECOPY,0,0,False,0,0,0xc3
    0xce: vce(0x0) = CONST ,0xc3,vce,0,CONST,0,0,False,0x0,0,0xc3
"    0xd0: RETURN vce(0x0), vc4(0xa66)",0xc3,0,"0,vce,vc4",RETURN,0,0,False,0,0,0xc3
},0xc3,0,0,0,0,0,False,0,0,0xc3
