3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x880]",0x0,0,0,0,0,0,False,0,0,0x880
    =================================,0x0,0,0,0,0,0,False,0,0,0x880
    0x0: v0(0x880) = CONST ,0x0,v0,0,CONST,0,0,False,0x880,0,0x880
    0x3: JUMP v0(0x880),0x0,0,"0,v0",JUMP,0,0,False,0,0,0x880
    Begin block 0x880,0x880,0,0,0,0,0,False,0,0,0x880
"    prev=[0x0], succ=[]",0x880,0,0,0,0,0,False,0,0,0x880
    =================================,0x880,0,0,0,0,0,False,0,0,0x880
    0x881: v881(0x4) = CONST ,0x880,v881,0,CONST,0,0,False,0x4,0,0x880
    0x884: v884(0x880) = CONST ,0x880,v884,0,CONST,0,0,False,0x880,0,0x880
"    0x887: v887(0x87c) = SUB v884(0x880), v881(0x4)",0x880,v887,"0,v884,v881",SUB,0,0,False,0x87c,0,0x880
    0x888: v888(0x4) = CONST ,0x880,v888,0,CONST,0,0,False,0x4,0,0x880
    0x88b: v88b(0x0) = CONST ,0x880,v88b,0,CONST,0,0,False,0x0,0,0x880
"    0x88d: CODECOPY v88b(0x0), v888(0x4), v887(0x87c)",0x880,0,"0,v88b,v888,v887",CODECOPY,0,0,False,0,0,0x880
    0x88e: v88e(0x4) = CONST ,0x880,v88e,0,CONST,0,0,False,0x4,0,0x880
    0x891: v891(0x880) = CONST ,0x880,v891,0,CONST,0,0,False,0x880,0,0x880
"    0x894: v894(0x87c) = SUB v891(0x880), v88e(0x4)",0x880,v894,"0,v891,v88e",SUB,0,0,False,0x87c,0,0x880
    0x895: v895(0x0) = CONST ,0x880,v895,0,CONST,0,0,False,0x0,0,0x880
"    0x897: RETURN v895(0x0), v894(0x87c)",0x880,0,"0,v895,v894",RETURN,0,0,False,0,0,0x880
},0x880,0,0,0,0,0,False,0,0,0x880
