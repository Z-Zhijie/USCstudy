3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x3e]",0x10,0,0,0,0,0,False,0,0,0x3e
    =================================,0x10,0,0,0,0,0,False,0,0,0x3e
    0x12: v12(0x0) = CONST ,0x10,v12,0,CONST,0,0,False,0x0,0,0x3e
    0x15: v15 = SLOAD v12(0x0),0x10,v15,"0,v12",SLOAD,0,0,False,0,0,0x3e
    0x16: v16(0x1) = CONST ,0x10,v16,0,CONST,0,0,False,0x1,0,0x3e
    0x18: v18(0x1) = CONST ,0x10,v18,0,CONST,0,0,False,0x1,0,0x3e
    0x1a: v1a(0xa0) = CONST ,0x10,v1a,0,CONST,0,0,False,0xa0,0,0x3e
"    0x1c: v1c(0x10000000000000000000000000000000000000000) = SHL v1a(0xa0), v18(0x1)",0x10,v1c,"0,v1a,v18",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0x3e
"    0x1d: v1d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c(0x10000000000000000000000000000000000000000), v16(0x1)",0x10,v1d,"0,v1c,v16",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3e
    0x1e: v1e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1d(0xffffffffffffffffffffffffffffffffffffffff),0x10,v1e,"0,v1d",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x3e
"    0x1f: v1f = AND v1e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v15",0x10,v1f,"0,v1e,v15",AND,0,0,False,0,0,0x3e
    0x20: v20 = CALLER ,0x10,v20,0,CALLER,0,0,True,0,0,0x3e
"    0x23: v23 = OR v20, v1f",0x10,v23,"0,v20,v1f",OR,0,0,True,0,0,0x3e
"    0x26: SSTORE v12(0x0), v23",0x10,0,"0,v12,v23",SSTORE,0,0,False,0,0,0x3e
    0x27: v27(0x38) = CONST ,0x10,v27,0,CONST,0,0,False,0x38,0,0x3e
    0x2b: v2b(0x1) = CONST ,0x10,v2b,0,CONST,0,0,False,0x1,0,0x3e
    0x2d: v2d(0x1) = CONST ,0x10,v2d,0,CONST,0,0,False,0x1,0,0x3e
    0x2f: v2f(0xe0) = CONST ,0x10,v2f,0,CONST,0,0,False,0xe0,0,0x3e
"    0x31: v31(0x100000000000000000000000000000000000000000000000000000000) = SHL v2f(0xe0), v2d(0x1)",0x10,v31,"0,v2f,v2d",SHL,0,0,False,0x100000000000000000000000000000000000000000000000000000000,0,0x3e
"    0x32: v32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v31(0x100000000000000000000000000000000000000000000000000000000), v2b(0x1)",0x10,v32,"0,v31,v2b",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x3e
    0x33: v33(0x3e) = CONST ,0x10,v33,0,CONST,0,0,False,0x3e,0,0x3e
"    0x36: v36(0x3e) = AND v33(0x3e), v32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)",0x10,v36,"0,v33,v32",AND,0,0,False,0x3e,0,0x3e
    0x37: JUMP v36(0x3e),0x10,0,"0,v36",JUMP,0,0,False,0,0,0x3e
    Begin block 0x3e,0x3e,0,0,0,0,0,False,0,0,0x3e
"    prev=[0x10], succ=[0x38]",0x3e,0,0,0,0,0,False,0,0,0x38
    =================================,0x3e,0,0,0,0,0,False,0,0,0x38
    0x3f: v3f(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST ,0x3e,v3f,0,CONST,0,0,False,0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,0,0x38
"    0x60: SSTORE v3f(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), v20",0x3e,0,"0,v3f,v20",SSTORE,0,0,False,0,0,0x38
    0x61: JUMP v27(0x38),0x3e,0,"0,v27",JUMP,0,0,False,0,0,0x38
    Begin block 0x38,0x38,0,0,0,0,0,False,0,0,0x38
"    prev=[0x3e], succ=[0x62]",0x38,0,0,0,0,0,False,0,0,0x62
    =================================,0x38,0,0,0,0,0,False,0,0,0x62
    0x3a: v3a(0x62) = CONST ,0x38,v3a,0,CONST,0,0,False,0x62,0,0x62
    0x3d: JUMP v3a(0x62),0x38,0,"0,v3a",JUMP,0,0,False,0,0,0x62
    Begin block 0x62,0x62,0,0,0,0,0,False,0,0,0x62
"    prev=[0x38], succ=[]",0x62,0,0,0,0,0,False,0,0,0x62
    =================================,0x62,0,0,0,0,0,False,0,0,0x62
    0x63: v63(0x696) = CONST ,0x62,v63,0,CONST,0,0,False,0x696,0,0x62
    0x67: v67(0x71) = CONST ,0x62,v67,0,CONST,0,0,False,0x71,0,0x62
    0x6a: v6a(0x0) = CONST ,0x62,v6a,0,CONST,0,0,False,0x0,0,0x62
"    0x6c: CODECOPY v6a(0x0), v67(0x71), v63(0x696)",0x62,0,"0,v6a,v67,v63",CODECOPY,0,0,False,0,0,0x62
    0x6d: v6d(0x0) = CONST ,0x62,v6d,0,CONST,0,0,False,0x0,0,0x62
"    0x6f: RETURN v6d(0x0), v63(0x696)",0x62,0,"0,v6d,v63",RETURN,0,0,False,0,0,0x62
},0x62,0,0,0,0,0,False,0,0,0x62
