3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x19, 0x1d]",0x0,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x19, 0x1d"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x19, 0x1d"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x19, 0x1d"
    0x5: v5(0x56bc75e2d63100000) = CONST ,0x0,v5,0,CONST,0,0,False,0x56bc75e2d63100000,0,"0x19, 0x1d"
    0xf: vf(0xe) = CONST ,0x0,vf,0,CONST,0,0,False,0xe,0,"0x19, 0x1d"
"    0x11: SSTORE vf(0xe), v5(0x56bc75e2d63100000)",0x0,0,"0,vf,v5",SSTORE,0,0,False,0,0,"0x19, 0x1d"
    0x12: v12 = CALLVALUE ,0x0,v12,0,CALLVALUE,0,0,False,0,0,"0x19, 0x1d"
    0x14: v14 = ISZERO v12,0x0,v14,"0,v12",ISZERO,0,0,False,0,0,"0x19, 0x1d"
    0x15: v15(0x1d) = CONST ,0x0,v15,0,CONST,0,0,False,0x1d,0,"0x19, 0x1d"
"    0x18: JUMPI v15(0x1d), v14",0x0,0,"0,v15,v14",JUMPI,0,0,False,0,0,"0x19, 0x1d"
    Begin block 0x19,0x19,0,0,0,0,0,False,0,0,"0x19, 0x1d"
"    prev=[0x0], succ=[]",0x19,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    =================================,0x19,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    0x19: v19(0x0) = CONST ,0x19,v19,0,CONST,0,0,False,0x0,0,"0x19, 0x1d"
"    0x1c: REVERT v19(0x0), v19(0x0)",0x19,0,"0,v19,v19",REVERT,0,0,False,0,0,"0x19, 0x1d"
    Begin block 0x1d,0x1d,0,0,0,0,0,False,0,0,"0x19, 0x1d"
"    prev=[0x0], succ=[]",0x1d,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    =================================,0x1d,0,0,0,0,0,False,0,0,"0x19, 0x1d"
    0x1f: v1f(0x0) = CONST ,0x1d,v1f,0,CONST,0,0,False,0x0,0,"0x19, 0x1d"
    0x22: v22 = SLOAD v1f(0x0),0x1d,v22,"0,v1f",SLOAD,0,0,False,0,0,"0x19, 0x1d"
    0x23: v23(0x1) = CONST ,0x1d,v23,0,CONST,0,0,False,0x1,0,"0x19, 0x1d"
    0x25: v25(0x1) = CONST ,0x1d,v25,0,CONST,0,0,False,0x1,0,"0x19, 0x1d"
    0x27: v27(0xa0) = CONST ,0x1d,v27,0,CONST,0,0,False,0xa0,0,"0x19, 0x1d"
"    0x29: v29(0x10000000000000000000000000000000000000000) = SHL v27(0xa0), v25(0x1)",0x1d,v29,"0,v27,v25",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x19, 0x1d"
"    0x2a: v2a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v29(0x10000000000000000000000000000000000000000), v23(0x1)",0x1d,v2a,"0,v29,v23",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x19, 0x1d"
    0x2b: v2b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v2a(0xffffffffffffffffffffffffffffffffffffffff),0x1d,v2b,"0,v2a",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x19, 0x1d"
"    0x2c: v2c = AND v2b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v22",0x1d,v2c,"0,v2b,v22",AND,0,0,False,0,0,"0x19, 0x1d"
    0x2d: v2d = CALLER ,0x1d,v2d,0,CALLER,0,0,True,0,0,"0x19, 0x1d"
"    0x2e: v2e = OR v2d, v2c",0x1d,v2e,"0,v2d,v2c",OR,0,0,True,0,0,"0x19, 0x1d"
"    0x30: SSTORE v1f(0x0), v2e",0x1d,0,"0,v1f,v2e",SSTORE,0,0,False,0,0,"0x19, 0x1d"
    0x31: v31(0x5ce0) = CONST ,0x1d,v31,0,CONST,0,0,False,0x5ce0,0,"0x19, 0x1d"
    0x35: v35(0x40) = CONST ,0x1d,v35,0,CONST,0,0,False,0x40,0,"0x19, 0x1d"
    0x39: v39(0x0) = CONST ,0x1d,v39,0,CONST,0,0,False,0x0,0,"0x19, 0x1d"
"    0x3b: CODECOPY v39(0x0), v35(0x40), v31(0x5ce0)",0x1d,0,"0,v39,v35,v31",CODECOPY,0,0,False,0,0,"0x19, 0x1d"
    0x3c: v3c(0x0) = CONST ,0x1d,v3c,0,CONST,0,0,False,0x0,0,"0x19, 0x1d"
"    0x3e: RETURN v3c(0x0), v31(0x5ce0)",0x1d,0,"0,v3c,v31",RETURN,0,0,False,0,0,"0x19, 0x1d"
},0x1d,0,0,0,0,0,False,0,0,"0x19, 0x1d"
