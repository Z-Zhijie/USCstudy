3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x37, 0x3b]",0x0,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x37, 0x3b"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x37, 0x3b"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x5: v5(0xa) = CONST ,0x0,v5,0,CONST,0,0,False,0xa,0,"0x37, 0x3b"
    0x7: v7(0x15) = CONST ,0x0,v7,0,CONST,0,0,False,0x15,0,"0x37, 0x3b"
"    0x9: SSTORE v7(0x15), v5(0xa)",0x0,0,"0,v7,v5",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0xa: va(0xe9222ddff794000) = CONST ,0x0,va,0,CONST,0,0,False,0xe9222ddff794000,0,"0x37, 0x3b"
    0x13: v13(0x17) = CONST ,0x0,v13,0,CONST,0,0,False,0x17,0,"0x37, 0x3b"
"    0x15: SSTORE v13(0x17), va(0xe9222ddff794000)",0x0,0,"0,v13,va",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x16: v16(0x78) = CONST ,0x0,v16,0,CONST,0,0,False,0x78,0,"0x37, 0x3b"
    0x18: v18(0x1a) = CONST ,0x0,v18,0,CONST,0,0,False,0x1a,0,"0x37, 0x3b"
"    0x1a: SSTORE v18(0x1a), v16(0x78)",0x0,0,"0,v18,v16",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x1b: v1b(0x1) = CONST ,0x0,v1b,0,CONST,0,0,False,0x1,0,"0x37, 0x3b"
    0x1d: v1d(0x1b) = CONST ,0x0,v1d,0,CONST,0,0,False,0x1b,0,"0x37, 0x3b"
"    0x1f: SSTORE v1d(0x1b), v1b(0x1)",0x0,0,"0,v1d,v1b",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x20: v20(0x0) = CONST ,0x0,v20,0,CONST,0,0,False,0x0,0,"0x37, 0x3b"
    0x22: v22(0x1c) = CONST ,0x0,v22,0,CONST,0,0,False,0x1c,0,"0x37, 0x3b"
"    0x24: SSTORE v22(0x1c), v20(0x0)",0x0,0,"0,v22,v20",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x25: v25(0x2) = CONST ,0x0,v25,0,CONST,0,0,False,0x2,0,"0x37, 0x3b"
    0x27: v27(0x21) = CONST ,0x0,v27,0,CONST,0,0,False,0x21,0,"0x37, 0x3b"
"    0x29: SSTORE v27(0x21), v25(0x2)",0x0,0,"0,v27,v25",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x2a: v2a(0x8) = CONST ,0x0,v2a,0,CONST,0,0,False,0x8,0,"0x37, 0x3b"
    0x2c: v2c(0x22) = CONST ,0x0,v2c,0,CONST,0,0,False,0x22,0,"0x37, 0x3b"
"    0x2e: SSTORE v2c(0x22), v2a(0x8)",0x0,0,"0,v2c,v2a",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x2f: v2f = CALLVALUE ,0x0,v2f,0,CALLVALUE,0,0,False,0,0,"0x37, 0x3b"
    0x31: v31 = ISZERO v2f,0x0,v31,"0,v2f",ISZERO,0,0,False,0,0,"0x37, 0x3b"
    0x32: v32(0x3b) = CONST ,0x0,v32,0,CONST,0,0,False,0x3b,0,"0x37, 0x3b"
"    0x36: JUMPI v32(0x3b), v31",0x0,0,"0,v32,v31",JUMPI,0,0,False,0,0,"0x37, 0x3b"
    Begin block 0x37,0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
"    prev=[0x0], succ=[]",0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    =================================,0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    0x37: v37(0x0) = CONST ,0x37,v37,0,CONST,0,0,False,0x0,0,"0x37, 0x3b"
"    0x3a: REVERT v37(0x0), v37(0x0)",0x37,0,"0,v37,v37",REVERT,0,0,False,0,0,"0x37, 0x3b"
    Begin block 0x3b,0x3b,0,0,0,0,0,False,0,0,"0x37, 0x3b"
"    prev=[0x0], succ=[0x9c]",0x3b,0,0,0,0,0,False,0,0,0x9c
    =================================,0x3b,0,0,0,0,0,False,0,0,0x9c
    0x3d: v3d(0x0) = CONST ,0x3b,v3d,0,CONST,0,0,False,0x0,0,0x9c
    0x3f: v3f(0x48) = CONST ,0x3b,v3f,0,CONST,0,0,False,0x48,0,0x9c
    0x43: v43(0x9c) = CONST ,0x3b,v43,0,CONST,0,0,False,0x9c,0,0x9c
    0x47: JUMP v43(0x9c),0x3b,0,"0,v43",JUMP,0,0,False,0,0,0x9c
    Begin block 0x9c,0x9c,0,0,0,0,0,False,0,0,0x9c
"    prev=[0x3b], succ=[0x48]",0x9c,0,0,0,0,0,False,0,0,0x48
    =================================,0x9c,0,0,0,0,0,False,0,0,0x48
    0x9d: v9d = CALLER ,0x9c,v9d,0,CALLER,0,0,True,0,0,0x48
    0x9f: JUMP v3f(0x48),0x9c,0,"0,v3f",JUMP,0,0,False,0,0,0x48
    Begin block 0x48,0x48,0,0,0,0,0,False,0,0,0x48
"    prev=[0x9c], succ=[0xa0]",0x48,0,0,0,0,0,False,0,0,0xa0
    =================================,0x48,0,0,0,0,0,False,0,0,0xa0
    0x49: v49(0x1) = CONST ,0x48,v49,0,CONST,0,0,False,0x1,0,0xa0
    0x4c: v4c = SLOAD v49(0x1),0x48,v4c,"0,v49",SLOAD,0,0,False,0,0,0xa0
    0x4d: v4d(0x1) = CONST ,0x48,v4d,0,CONST,0,0,False,0x1,0,0xa0
    0x4f: v4f(0x1) = CONST ,0x48,v4f,0,CONST,0,0,False,0x1,0,0xa0
    0x51: v51(0xa0) = CONST ,0x48,v51,0,CONST,0,0,False,0xa0,0,0xa0
"    0x53: v53(0x10000000000000000000000000000000000000000) = SHL v51(0xa0), v4f(0x1)",0x48,v53,"0,v51,v4f",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xa0
"    0x54: v54(0xffffffffffffffffffffffffffffffffffffffff) = SUB v53(0x10000000000000000000000000000000000000000), v4d(0x1)",0x48,v54,"0,v53,v4d",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xa0
    0x55: v55(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v54(0xffffffffffffffffffffffffffffffffffffffff),0x48,v55,"0,v54",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0xa0
"    0x56: v56 = AND v55(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v4c",0x48,v56,"0,v55,v4c",AND,0,0,False,0,0,0xa0
    0x57: v57(0x1) = CONST ,0x48,v57,0,CONST,0,0,False,0x1,0,0xa0
    0x59: v59(0x1) = CONST ,0x48,v59,0,CONST,0,0,False,0x1,0,0xa0
    0x5b: v5b(0xa0) = CONST ,0x48,v5b,0,CONST,0,0,False,0xa0,0,0xa0
"    0x5d: v5d(0x10000000000000000000000000000000000000000) = SHL v5b(0xa0), v59(0x1)",0x48,v5d,"0,v5b,v59",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xa0
"    0x5e: v5e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5d(0x10000000000000000000000000000000000000000), v57(0x1)",0x48,v5e,"0,v5d,v57",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xa0
"    0x60: v60 = AND v9d, v5e(0xffffffffffffffffffffffffffffffffffffffff)",0x48,v60,"0,v9d,v5e",AND,0,0,True,0,0,0xa0
"    0x63: v63 = OR v60, v56",0x48,v63,"0,v60,v56",OR,0,0,True,0,0,0xa0
"    0x66: SSTORE v49(0x1), v63",0x48,0,"0,v49,v63",SSTORE,0,0,False,0,0,0xa0
    0x67: v67(0x40) = CONST ,0x48,v67,0,CONST,0,0,False,0x40,0,0xa0
    0x69: v69 = MLOAD v67(0x40),0x48,v69,"0,v67",MLOAD,0,0,False,0,0&m0x40,0xa0
    0x6e: v6e(0x0) = CONST ,0x48,v6e,0,CONST,0,0,False,0x0,0,0xa0
    0x71: v71(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST ,0x48,v71,0,CONST,0,0,False,0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0,0,0xa0
"    0x95: LOG3 v69, v6e(0x0), v71(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0), v6e(0x0), v60",0x48,0,"0,v69,v6e,v71,v6e,v60",LOG3,0,0,False,0,0,0xa0
    0x97: v97(0xa0) = CONST ,0x48,v97,0,CONST,0,0,False,0xa0,0,0xa0
    0x9b: JUMP v97(0xa0),0x48,0,"0,v97",JUMP,0,0,False,0,0,0xa0
    Begin block 0xa0,0xa0,0,0,0,0,0,False,0,0,0xa0
"    prev=[0x48], succ=[]",0xa0,0,0,0,0,0,False,0,0,0xa0
    =================================,0xa0,0,0,0,0,0,False,0,0,0xa0
    0xa1: va1(0x5db3) = CONST ,0xa0,va1,0,CONST,0,0,False,0x5db3,0,0xa0
    0xa5: va5(0xb0) = CONST ,0xa0,va5,0,CONST,0,0,False,0xb0,0,0xa0
    0xa9: va9(0x0) = CONST ,0xa0,va9,0,CONST,0,0,False,0x0,0,0xa0
"    0xab: CODECOPY va9(0x0), va5(0xb0), va1(0x5db3)",0xa0,0,"0,va9,va5,va1",CODECOPY,0,0,False,0,0,0xa0
    0xac: vac(0x0) = CONST ,0xa0,vac,0,CONST,0,0,False,0x0,0,0xa0
"    0xae: RETURN vac(0x0), va1(0x5db3)",0xa0,0,"0,vac,va1",RETURN,0,0,False,0,0,0xa0
},0xa0,0,0,0,0,0,False,0,0,0xa0
