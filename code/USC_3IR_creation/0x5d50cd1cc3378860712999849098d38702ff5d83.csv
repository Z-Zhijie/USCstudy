3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x1f, 0x1b]",0x0,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x1f, 0x1b"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x1f, 0x1b"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x1f, 0x1b"
    0x5: v5(0x97) = CONST ,0x0,v5,0,CONST,0,0,False,0x97,0,"0x1f, 0x1b"
    0x8: v8 = SLOAD v5(0x97),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x1f, 0x1b"
    0x9: v9(0xffff) = CONST ,0x0,v9,0,CONST,0,0,False,0xffff,0,"0x1f, 0x1b"
    0xc: vc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000) = NOT v9(0xffff),0x0,vc,"0,v9",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000,0,"0x1f, 0x1b"
"    0xd: vd = AND vc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000), v8",0x0,vd,"0,vc,v8",AND,0,0,False,0,0,"0x1f, 0x1b"
    0xe: ve(0x2406) = CONST ,0x0,ve,0,CONST,0,0,False,0x2406,0,"0x1f, 0x1b"
"    0x11: v11 = OR ve(0x2406), vd",0x0,v11,"0,ve,vd",OR,0,0,False,0,0,"0x1f, 0x1b"
"    0x13: SSTORE v5(0x97), v11",0x0,0,"0,v5,v11",SSTORE,0,0,False,0,0,"0x1f, 0x1b"
    0x14: v14 = CALLVALUE ,0x0,v14,0,CALLVALUE,0,0,False,0,0,"0x1f, 0x1b"
    0x16: v16 = ISZERO v14,0x0,v16,"0,v14",ISZERO,0,0,False,0,0,"0x1f, 0x1b"
    0x17: v17(0x1f) = CONST ,0x0,v17,0,CONST,0,0,False,0x1f,0,"0x1f, 0x1b"
"    0x1a: JUMPI v17(0x1f), v16",0x0,0,"0,v17,v16",JUMPI,0,0,False,0,0,"0x1f, 0x1b"
    Begin block 0x1f,0x1f,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
"    prev=[0x0], succ=[]",0x1f,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    =================================,0x1f,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    0x21: v21(0x99) = CONST ,0x1f,v21,0,CONST,0,0,False,0x99,0,"0x1f, 0x1b"
    0x24: v24 = SLOAD v21(0x99),0x1f,v24,"0,v21",SLOAD,0,0,False,0,0,"0x1f, 0x1b"
    0x25: v25(0x1) = CONST ,0x1f,v25,0,CONST,0,0,False,0x1,0,"0x1f, 0x1b"
    0x27: v27(0x1) = CONST ,0x1f,v27,0,CONST,0,0,False,0x1,0,"0x1f, 0x1b"
    0x29: v29(0xa0) = CONST ,0x1f,v29,0,CONST,0,0,False,0xa0,0,"0x1f, 0x1b"
"    0x2b: v2b(0x10000000000000000000000000000000000000000) = SHL v29(0xa0), v27(0x1)",0x1f,v2b,"0,v29,v27",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x1f, 0x1b"
"    0x2c: v2c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2b(0x10000000000000000000000000000000000000000), v25(0x1)",0x1f,v2c,"0,v2b,v25",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1f, 0x1b"
    0x2d: v2d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v2c(0xffffffffffffffffffffffffffffffffffffffff),0x1f,v2d,"0,v2c",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x1f, 0x1b"
"    0x2e: v2e = AND v2d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v24",0x1f,v2e,"0,v2d,v24",AND,0,0,False,0,0,"0x1f, 0x1b"
    0x2f: v2f(0x1) = CONST ,0x1f,v2f,0,CONST,0,0,False,0x1,0,"0x1f, 0x1b"
"    0x31: v31 = OR v2f(0x1), v2e",0x1f,v31,"0,v2f,v2e",OR,0,0,False,0,0,"0x1f, 0x1b"
"    0x33: SSTORE v21(0x99), v31",0x1f,0,"0,v21,v31",SSTORE,0,0,False,0,0,"0x1f, 0x1b"
    0x34: v34(0x1a7c) = CONST ,0x1f,v34,0,CONST,0,0,False,0x1a7c,0,"0x1f, 0x1b"
    0x38: v38(0x42) = CONST ,0x1f,v38,0,CONST,0,0,False,0x42,0,"0x1f, 0x1b"
    0x3b: v3b(0x0) = CONST ,0x1f,v3b,0,CONST,0,0,False,0x0,0,"0x1f, 0x1b"
"    0x3d: CODECOPY v3b(0x0), v38(0x42), v34(0x1a7c)",0x1f,0,"0,v3b,v38,v34",CODECOPY,0,0,False,0,0,"0x1f, 0x1b"
    0x3e: v3e(0x0) = CONST ,0x1f,v3e,0,CONST,0,0,False,0x0,0,"0x1f, 0x1b"
"    0x40: RETURN v3e(0x0), v34(0x1a7c)",0x1f,0,"0,v3e,v34",RETURN,0,0,False,0,0,"0x1f, 0x1b"
    Begin block 0x1b,0x1b,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
"    prev=[0x0], succ=[]",0x1b,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    =================================,0x1b,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
    0x1b: v1b(0x0) = CONST ,0x1b,v1b,0,CONST,0,0,False,0x0,0,"0x1f, 0x1b"
"    0x1e: REVERT v1b(0x0), v1b(0x0)",0x1b,0,"0,v1b,v1b",REVERT,0,0,False,0,0,"0x1f, 0x1b"
},0x1b,0,0,0,0,0,False,0,0,"0x1f, 0x1b"
