3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[]",0x0,0,0,0,0,0,False,0,0,
    =================================,0x0,0,0,0,0,0,False,0,0,
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,
    0x7: v7(0x3) = CONST ,0x0,v7,0,CONST,0,0,False,0x3,0,
    0x9: v9(0x0) = CONST ,0x0,v9,0,CONST,0,0,False,0x0,0,
    0xb: vb(0x100) = CONST ,0x0,vb,0,CONST,0,0,False,0x100,0,
"    0xe: ve(0x1) = EXP vb(0x100), v9(0x0)",0x0,ve,"0,vb,v9",EXP,0,0,False,0x1,0,
    0x10: v10 = SLOAD v7(0x3),0x0,v10,"0,v7",SLOAD,0,0,False,0,0,
    0x12: v12(0xff) = CONST ,0x0,v12,0,CONST,0,0,False,0xff,0,
"    0x14: v14(0xff) = MUL v12(0xff), ve(0x1)",0x0,v14,"0,v12,ve",MUL,0,0,False,0xff,0,
    0x15: v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v14(0xff),0x0,v15,"0,v14",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,
"    0x16: v16 = AND v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v10",0x0,v16,"0,v15,v10",AND,0,0,False,0,0,
    0x19: v19(0x1) = ISZERO v5(0x0),0x0,v19,"0,v5",ISZERO,0,0,False,0x1,0,
    0x1a: v1a(0x0) = ISZERO v19(0x1),0x0,v1a,"0,v19",ISZERO,0,0,False,0x0,0,
"    0x1b: v1b(0x0) = MUL v1a(0x0), ve(0x1)",0x0,v1b,"0,v1a,ve",MUL,0,0,False,0x0,0,
"    0x1c: v1c = OR v1b(0x0), v16",0x0,v1c,"0,v1b,v16",OR,0,0,False,0,0,
"    0x1e: SSTORE v7(0x3), v1c",0x0,0,"0,v7,v1c",SSTORE,0,0,False,0,0,
    0x20: v20 = CALLER ,0x0,v20,0,CALLER,0,0,True,0,0,
    0x21: v21(0x0) = CONST ,0x0,v21,0,CONST,0,0,False,0x0,0,
    0x24: v24(0x100) = CONST ,0x0,v24,0,CONST,0,0,False,0x100,0,
"    0x27: v27(0x1) = EXP v24(0x100), v21(0x0)",0x0,v27,"0,v24,v21",EXP,0,0,False,0x1,0,
    0x29: v29 = SLOAD v21(0x0),0x0,v29,"0,v21",SLOAD,0,0,False,0,0,
    0x2b: v2b(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x0,v2b,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,
"    0x40: v40(0xffffffffffffffffffffffffffffffffffffffff) = MUL v2b(0xffffffffffffffffffffffffffffffffffffffff), v27(0x1)",0x0,v40,"0,v2b,v27",MUL,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,
    0x41: v41(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v40(0xffffffffffffffffffffffffffffffffffffffff),0x0,v41,"0,v40",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,
"    0x42: v42 = AND v41(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v29",0x0,v42,"0,v41,v29",AND,0,0,False,0,0,
    0x45: v45(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x0,v45,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,
"    0x5a: v5a = AND v45(0xffffffffffffffffffffffffffffffffffffffff), v20",0x0,v5a,"0,v45,v20",AND,0,0,True,0,0,
"    0x5b: v5b = MUL v5a, v27(0x1)",0x0,v5b,"0,v5a,v27",MUL,0,0,False,0,0,
"    0x5c: v5c = OR v5b, v42",0x0,v5c,"0,v5b,v42",OR,0,0,False,0,0,
"    0x5e: SSTORE v21(0x0), v5c",0x0,0,"0,v21,v5c",SSTORE,0,0,False,0,0,
    0x60: v60(0x1419) = CONST ,0x0,v60,0,CONST,0,0,False,0x1419,0,
    0x64: v64(0x6e) = CONST ,0x0,v64,0,CONST,0,0,False,0x6e,0,
    0x67: v67(0x0) = CONST ,0x0,v67,0,CONST,0,0,False,0x0,0,
"    0x69: CODECOPY v67(0x0), v64(0x6e), v60(0x1419)",0x0,0,"0,v67,v64,v60",CODECOPY,0,0,False,0,0,
    0x6a: v6a(0x0) = CONST ,0x0,v6a,0,CONST,0,0,False,0x0,0,
"    0x6c: RETURN v6a(0x0), v60(0x1419)",0x0,0,"0,v6a,v60",RETURN,0,0,False,0,0,
},0x0,0,0,0,0,0,False,0,0,
