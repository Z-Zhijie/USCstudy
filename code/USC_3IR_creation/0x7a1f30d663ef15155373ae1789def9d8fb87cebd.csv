3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x46, 0x4a]",0x0,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    0x0: v0(0x0) = CONST ,0x0,v0,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
    0x2: v2(0x80) = CONST ,0x0,v2,0,CONST,0,0,False,0x80,0,"0x46, 0x4a"
"    0x6: MSTORE v2(0x80), v0(0x0)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x7: v7(0x1) = CONST ,0x0,v7,0,CONST,0,0,False,0x1,0,"0x46, 0x4a"
    0x9: v9(0xa0) = CONST ,0x0,v9,0,CONST,0,0,False,0xa0,0,"0x46, 0x4a"
"    0xd: MSTORE v9(0xa0), v7(0x1)",0x0,0,"0,v9,v7",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0xe: ve(0x7) = CONST ,0x0,ve,0,CONST,0,0,False,0x7,0,"0x46, 0x4a"
"    0x12: SSTORE ve(0x7), v0(0x0)",0x0,0,"0,ve,v0",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x13: v13(0x8) = CONST ,0x0,v13,0,CONST,0,0,False,0x8,0,"0x46, 0x4a"
"    0x17: SSTORE v13(0x8), v7(0x1)",0x0,0,"0,v13,v7",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x18: v18(0x100) = CONST ,0x0,v18,0,CONST,0,0,False,0x100,0,"0x46, 0x4a"
    0x1b: v1b(0x40) = CONST ,0x0,v1b,0,CONST,0,0,False,0x40,0,"0x46, 0x4a"
"    0x1d: MSTORE v1b(0x40), v18(0x100)",0x0,0,"0,v1b,v18",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x1e: v1e(0xc0) = CONST ,0x0,v1e,0,CONST,0,0,False,0xc0,0,"0x46, 0x4a"
"    0x22: MSTORE v1e(0xc0), v0(0x0)",0x0,0,"0,v1e,v0",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x23: v23(0xe0) = CONST ,0x0,v23,0,CONST,0,0,False,0xe0,0,"0x46, 0x4a"
"    0x27: MSTORE v23(0xe0), v7(0x1)",0x0,0,"0,v23,v7",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x28: v28(0x9) = CONST ,0x0,v28,0,CONST,0,0,False,0x9,0,"0x46, 0x4a"
"    0x2d: SSTORE v28(0x9), v0(0x0)",0x0,0,"0,v28,v0",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x2e: v2e(0xa) = CONST ,0x0,v2e,0,CONST,0,0,False,0xa,0,"0x46, 0x4a"
"    0x30: SSTORE v2e(0xa), v7(0x1)",0x0,0,"0,v2e,v7",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x31: v31(0xd) = CONST ,0x0,v31,0,CONST,0,0,False,0xd,0,"0x46, 0x4a"
    0x34: v34 = SLOAD v31(0xd),0x0,v34,"0,v31",SLOAD,0,0,False,0,0,"0x46, 0x4a"
    0x35: v35(0xffff) = CONST ,0x0,v35,0,CONST,0,0,False,0xffff,0,"0x46, 0x4a"
    0x38: v38(0xa0) = CONST ,0x0,v38,0,CONST,0,0,False,0xa0,0,"0x46, 0x4a"
"    0x3a: v3a(0xffff0000000000000000000000000000000000000000) = SHL v38(0xa0), v35(0xffff)",0x0,v3a,"0,v38,v35",SHL,0,0,False,0xffff0000000000000000000000000000000000000000,0,"0x46, 0x4a"
    0x3b: v3b(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff) = NOT v3a(0xffff0000000000000000000000000000000000000000),0x0,v3b,"0,v3a",NOT,0,0,False,0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff,0,"0x46, 0x4a"
"    0x3c: v3c = AND v3b(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff), v34",0x0,v3c,"0,v3b,v34",AND,0,0,False,0,0,"0x46, 0x4a"
"    0x3e: SSTORE v31(0xd), v3c",0x0,0,"0,v31,v3c",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x3f: v3f = CALLVALUE ,0x0,v3f,0,CALLVALUE,0,0,False,0,0,"0x46, 0x4a"
    0x41: v41 = ISZERO v3f,0x0,v41,"0,v3f",ISZERO,0,0,False,0,0,"0x46, 0x4a"
    0x42: v42(0x4a) = CONST ,0x0,v42,0,CONST,0,0,False,0x4a,0,"0x46, 0x4a"
"    0x45: JUMPI v42(0x4a), v41",0x0,0,"0,v42,v41",JUMPI,0,0,False,0,0,"0x46, 0x4a"
    Begin block 0x46,0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
"    prev=[0x0], succ=[]",0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    =================================,0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    0x46: v46(0x0) = CONST ,0x46,v46,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
"    0x49: REVERT v46(0x0), v46(0x0)",0x46,0,"0,v46,v46",REVERT,0,0,False,0,0,"0x46, 0x4a"
    Begin block 0x4a,0x4a,0,0,0,0,0,False,0,0,"0x46, 0x4a"
"    prev=[0x0], succ=[]",0x4a,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    =================================,0x4a,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    0x4c: v4c(0x45f6) = CONST ,0x4a,v4c,0,CONST,0,0,False,0x45f6,0,"0x46, 0x4a"
    0x50: v50(0x5a) = CONST ,0x4a,v50,0,CONST,0,0,False,0x5a,0,"0x46, 0x4a"
    0x53: v53(0x0) = CONST ,0x4a,v53,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
"    0x55: CODECOPY v53(0x0), v50(0x5a), v4c(0x45f6)",0x4a,0,"0,v53,v50,v4c",CODECOPY,0,0,False,0,0,"0x46, 0x4a"
    0x56: v56(0x0) = CONST ,0x4a,v56,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
"    0x58: RETURN v56(0x0), v4c(0x45f6)",0x4a,0,"0,v56,v4c",RETURN,0,0,False,0,0,"0x46, 0x4a"
},0x4a,0,0,0,0,0,False,0,0,"0x46, 0x4a"
