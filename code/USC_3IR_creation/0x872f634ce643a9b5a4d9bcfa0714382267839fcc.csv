3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x57]",0x0,0,0,0,0,0,False,0,0,0x57
    =================================,0x0,0,0,0,0,0,False,0,0,0x57
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,0x57
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,0x57
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,0x57
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,0x57
    0x7: v7(0xa) = CONST ,0x0,v7,0,CONST,0,0,False,0xa,0,0x57
    0x9: v9(0x0) = CONST ,0x0,v9,0,CONST,0,0,False,0x0,0,0x57
    0xb: vb(0x100) = CONST ,0x0,vb,0,CONST,0,0,False,0x100,0,0x57
"    0xe: ve(0x1) = EXP vb(0x100), v9(0x0)",0x0,ve,"0,vb,v9",EXP,0,0,False,0x1,0,0x57
    0x10: v10 = SLOAD v7(0xa),0x0,v10,"0,v7",SLOAD,0,0,False,0,0,0x57
    0x12: v12(0xff) = CONST ,0x0,v12,0,CONST,0,0,False,0xff,0,0x57
"    0x14: v14(0xff) = MUL v12(0xff), ve(0x1)",0x0,v14,"0,v12,ve",MUL,0,0,False,0xff,0,0x57
    0x15: v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v14(0xff),0x0,v15,"0,v14",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x57
"    0x16: v16 = AND v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v10",0x0,v16,"0,v15,v10",AND,0,0,False,0,0,0x57
    0x19: v19(0x1) = ISZERO v5(0x0),0x0,v19,"0,v5",ISZERO,0,0,False,0x1,0,0x57
    0x1a: v1a(0x0) = ISZERO v19(0x1),0x0,v1a,"0,v19",ISZERO,0,0,False,0x0,0,0x57
"    0x1b: v1b(0x0) = MUL v1a(0x0), ve(0x1)",0x0,v1b,"0,v1a,ve",MUL,0,0,False,0x0,0,0x57
"    0x1c: v1c = OR v1b(0x0), v16",0x0,v1c,"0,v1b,v16",OR,0,0,False,0,0,0x57
"    0x1e: SSTORE v7(0xa), v1c",0x0,0,"0,v7,v1c",SSTORE,0,0,False,0,0,0x57
    0x20: v20(0x0) = CONST ,0x0,v20,0,CONST,0,0,False,0x0,0,0x57
    0x22: v22(0xa) = CONST ,0x0,v22,0,CONST,0,0,False,0xa,0,0x57
    0x24: v24(0x1) = CONST ,0x0,v24,0,CONST,0,0,False,0x1,0,0x57
    0x26: v26(0x100) = CONST ,0x0,v26,0,CONST,0,0,False,0x100,0,0x57
"    0x29: v29(0x100) = EXP v26(0x100), v24(0x1)",0x0,v29,"0,v26,v24",EXP,0,0,False,0x100,0,0x57
    0x2b: v2b = SLOAD v22(0xa),0x0,v2b,"0,v22",SLOAD,0,0,False,0,0,0x57
    0x2d: v2d(0xff) = CONST ,0x0,v2d,0,CONST,0,0,False,0xff,0,0x57
"    0x2f: v2f(0xff00) = MUL v2d(0xff), v29(0x100)",0x0,v2f,"0,v2d,v29",MUL,0,0,False,0xff00,0,0x57
    0x30: v30(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v2f(0xff00),0x0,v30,"0,v2f",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x57
"    0x31: v31 = AND v30(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v2b",0x0,v31,"0,v30,v2b",AND,0,0,False,0,0,0x57
    0x34: v34(0x1) = ISZERO v20(0x0),0x0,v34,"0,v20",ISZERO,0,0,False,0x1,0,0x57
    0x35: v35(0x0) = ISZERO v34(0x1),0x0,v35,"0,v34",ISZERO,0,0,False,0x0,0,0x57
"    0x36: v36(0x0) = MUL v35(0x0), v29(0x100)",0x0,v36,"0,v35,v29",MUL,0,0,False,0x0,0,0x57
"    0x37: v37 = OR v36(0x0), v31",0x0,v37,"0,v36,v31",OR,0,0,False,0,0,0x57
"    0x39: SSTORE v22(0xa), v37",0x0,0,"0,v22,v37",SSTORE,0,0,False,0,0,0x57
    0x3b: v3b(0x52) = CONST ,0x0,v3b,0,CONST,0,0,False,0x52,0,0x57
    0x3e: v3e = CALLER ,0x0,v3e,0,CALLER,0,0,True,0,0,0x57
    0x3f: v3f(0x57) = CONST ,0x0,v3f,0,CONST,0,0,False,0x57,0,0x57
    0x42: v42(0x100000000) = CONST ,0x0,v42,0,CONST,0,0,False,0x100000000,0,0x57
"    0x48: v48(0x5700000000) = MUL v42(0x100000000), v3f(0x57)",0x0,v48,"0,v42,v3f",MUL,0,0,False,0x5700000000,0,0x57
    0x49: v49(0x100000000) = CONST ,0x0,v49,0,CONST,0,0,False,0x100000000,0,0x57
"    0x50: v50(0x57) = DIV v48(0x5700000000), v49(0x100000000)",0x0,v50,"0,v48,v49",DIV,0,0,False,0x57,0,0x57
    0x51: JUMP v50(0x57),0x0,0,"0,v50",JUMP,0,0,False,0,0,0x57
    Begin block 0x57,0x57,0,0,0,0,0,False,0,0,0x57
"    prev=[0x0], succ=[0x52]",0x57,0,0,0,0,0,False,0,0,0x52
    =================================,0x57,0,0,0,0,0,False,0,0,0x52
    0x59: v59(0x0) = CONST ,0x57,v59,0,CONST,0,0,False,0x0,0,0x52
    0x5c: v5c(0x100) = CONST ,0x57,v5c,0,CONST,0,0,False,0x100,0,0x52
"    0x5f: v5f(0x1) = EXP v5c(0x100), v59(0x0)",0x57,v5f,"0,v5c,v59",EXP,0,0,False,0x1,0,0x52
    0x61: v61 = SLOAD v59(0x0),0x57,v61,"0,v59",SLOAD,0,0,False,0,0,0x52
    0x63: v63(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x57,v63,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x52
"    0x78: v78(0xffffffffffffffffffffffffffffffffffffffff) = MUL v63(0xffffffffffffffffffffffffffffffffffffffff), v5f(0x1)",0x57,v78,"0,v63,v5f",MUL,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x52
    0x79: v79(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v78(0xffffffffffffffffffffffffffffffffffffffff),0x57,v79,"0,v78",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x52
"    0x7a: v7a = AND v79(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v61",0x57,v7a,"0,v79,v61",AND,0,0,False,0,0,0x52
    0x7d: v7d(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x57,v7d,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x52
"    0x92: v92 = AND v7d(0xffffffffffffffffffffffffffffffffffffffff), v3e",0x57,v92,"0,v7d,v3e",AND,0,0,True,0,0,0x52
"    0x93: v93 = MUL v92, v5f(0x1)",0x57,v93,"0,v92,v5f",MUL,0,0,False,0,0,0x52
"    0x94: v94 = OR v93, v7a",0x57,v94,"0,v93,v7a",OR,0,0,False,0,0,0x52
"    0x96: SSTORE v59(0x0), v94",0x57,0,"0,v59,v94",SSTORE,0,0,False,0,0,0x52
    0x99: JUMP v3b(0x52),0x57,0,"0,v3b",JUMP,0,0,False,0,0,0x52
    Begin block 0x52,0x52,0,0,0,0,0,False,0,0,0x52
"    prev=[0x57], succ=[0x9a]",0x52,0,0,0,0,0,False,0,0,0x9a
    =================================,0x52,0,0,0,0,0,False,0,0,0x9a
    0x53: v53(0x9a) = CONST ,0x52,v53,0,CONST,0,0,False,0x9a,0,0x9a
    0x56: JUMP v53(0x9a),0x52,0,"0,v53",JUMP,0,0,False,0,0,0x9a
    Begin block 0x9a,0x9a,0,0,0,0,0,False,0,0,0x9a
"    prev=[0x52], succ=[]",0x9a,0,0,0,0,0,False,0,0,0x9a
    =================================,0x9a,0,0,0,0,0,False,0,0,0x9a
    0x9b: v9b(0x3a34) = CONST ,0x9a,v9b,0,CONST,0,0,False,0x3a34,0,0x9a
    0x9f: v9f(0xa9) = CONST ,0x9a,v9f,0,CONST,0,0,False,0xa9,0,0x9a
    0xa2: va2(0x0) = CONST ,0x9a,va2,0,CONST,0,0,False,0x0,0,0x9a
"    0xa4: CODECOPY va2(0x0), v9f(0xa9), v9b(0x3a34)",0x9a,0,"0,va2,v9f,v9b",CODECOPY,0,0,False,0,0,0x9a
    0xa5: va5(0x0) = CONST ,0x9a,va5,0,CONST,0,0,False,0x0,0,0x9a
"    0xa7: RETURN va5(0x0), v9b(0x3a34)",0x9a,0,"0,va5,v9b",RETURN,0,0,False,0,0,0x9a
},0x9a,0,0,0,0,0,False,0,0,0x9a
