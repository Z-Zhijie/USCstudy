3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x12: v12(0x5) = CONST ,0x10,v12,0,CONST,0,0,False,0x5,0,"0xc, 0x10"
    0x15: v15 = SLOAD v12(0x5),0x10,v15,"0,v12",SLOAD,0,0,False,0,0,"0xc, 0x10"
    0x16: v16(0xff00) = CONST ,0x10,v16,0,CONST,0,0,False,0xff00,0,"0xc, 0x10"
    0x19: v19(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v16(0xff00),0x10,v19,"0,v16",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,"0xc, 0x10"
"    0x1a: v1a = AND v19(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v15",0x10,v1a,"0,v19,v15",AND,0,0,False,0,0,"0xc, 0x10"
    0x1b: v1b(0x100) = CONST ,0x10,v1b,0,CONST,0,0,False,0x100,0,"0xc, 0x10"
"    0x1e: v1e = OR v1b(0x100), v1a",0x10,v1e,"0,v1b,v1a",OR,0,0,False,0,0,"0xc, 0x10"
"    0x20: SSTORE v12(0x5), v1e",0x10,0,"0,v12,v1e",SSTORE,0,0,False,0,0,"0xc, 0x10"
    0x21: v21(0xc58) = CONST ,0x10,v21,0,CONST,0,0,False,0xc58,0,"0xc, 0x10"
    0x25: v25(0x2f) = CONST ,0x10,v25,0,CONST,0,0,False,0x2f,0,"0xc, 0x10"
    0x28: v28(0x0) = CONST ,0x10,v28,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0x2a: CODECOPY v28(0x0), v25(0x2f), v21(0xc58)",0x10,0,"0,v28,v25,v21",CODECOPY,0,0,False,0,0,"0xc, 0x10"
    0x2b: v2b(0x0) = CONST ,0x10,v2b,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0x2d: RETURN v2b(0x0), v21(0xc58)",0x10,0,"0,v2b,v21",RETURN,0,0,False,0,0,"0xc, 0x10"
},0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
