3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x9a, 0x9e]",0x0,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x9a, 0x9e"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x9a, 0x9e"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,"0x9a, 0x9e"
    0x8: v8 = SLOAD v5(0x0),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x9a, 0x9e"
    0x9: v9(0xff) = CONST ,0x0,v9,0,CONST,0,0,False,0xff,0,"0x9a, 0x9e"
    0xb: vb(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v9(0xff),0x0,vb,"0,v9",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0x9a, 0x9e"
"    0xc: vc = AND vb(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v8",0x0,vc,"0,vb,v8",AND,0,0,False,0,0,"0x9a, 0x9e"
"    0xe: SSTORE v5(0x0), vc",0x0,0,"0,v5,vc",SSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0xf: vf(0x5) = CONST ,0x0,vf,0,CONST,0,0,False,0x5,0,"0x9a, 0x9e"
    0x12: v12 = SLOAD vf(0x5),0x0,v12,"0,vf",SLOAD,0,0,False,0,0,"0x9a, 0x9e"
    0x13: v13(0x1) = CONST ,0x0,v13,0,CONST,0,0,False,0x1,0,"0x9a, 0x9e"
    0x15: v15(0x1) = CONST ,0x0,v15,0,CONST,0,0,False,0x1,0,"0x9a, 0x9e"
    0x17: v17(0xa0) = CONST ,0x0,v17,0,CONST,0,0,False,0xa0,0,"0x9a, 0x9e"
"    0x19: v19(0x10000000000000000000000000000000000000000) = SHL v17(0xa0), v15(0x1)",0x0,v19,"0,v17,v15",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x9a, 0x9e"
"    0x1a: v1a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19(0x10000000000000000000000000000000000000000), v13(0x1)",0x0,v1a,"0,v19,v13",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x9a, 0x9e"
    0x1b: v1b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1a(0xffffffffffffffffffffffffffffffffffffffff),0x0,v1b,"0,v1a",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x9a, 0x9e"
"    0x1e: v1e = AND v1b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v12",0x0,v1e,"0,v1b,v12",AND,0,0,False,0,0,"0x9a, 0x9e"
    0x1f: v1f(0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5) = CONST ,0x0,v1f,0,CONST,0,0,False,0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5,0,"0x9a, 0x9e"
"    0x34: v34 = OR v1f(0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5), v1e",0x0,v34,"0,v1f,v1e",OR,0,0,False,0,0,"0x9a, 0x9e"
"    0x37: SSTORE vf(0x5), v34",0x0,0,"0,vf,v34",SSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0x38: v38(0x6) = CONST ,0x0,v38,0,CONST,0,0,False,0x6,0,"0x9a, 0x9e"
    0x3b: v3b = SLOAD v38(0x6),0x0,v3b,"0,v38",SLOAD,0,0,False,0,0,"0x9a, 0x9e"
"    0x3d: v3d = AND v1b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v3b",0x0,v3d,"0,v1b,v3b",AND,0,0,False,0,0,"0x9a, 0x9e"
    0x3e: v3e(0x60d70df1c783b1e5489721c443465684e2756555) = CONST ,0x0,v3e,0,CONST,0,0,False,0x60d70df1c783b1e5489721c443465684e2756555,0,"0x9a, 0x9e"
"    0x53: v53 = OR v3e(0x60d70df1c783b1e5489721c443465684e2756555), v3d",0x0,v53,"0,v3e,v3d",OR,0,0,False,0,0,"0x9a, 0x9e"
"    0x55: SSTORE v38(0x6), v53",0x0,0,"0,v38,v53",SSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0x56: v56(0x7) = CONST ,0x0,v56,0,CONST,0,0,False,0x7,0,"0x9a, 0x9e"
    0x59: v59 = SLOAD v56(0x7),0x0,v59,"0,v56",SLOAD,0,0,False,0,0,"0x9a, 0x9e"
"    0x5b: v5b = AND v1b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v59",0x0,v5b,"0,v1b,v59",AND,0,0,False,0,0,"0x9a, 0x9e"
    0x5c: v5c(0xd66a9d2b706e225204f475c9e70a4c09eea62199) = CONST ,0x0,v5c,0,CONST,0,0,False,0xd66a9d2b706e225204f475c9e70a4c09eea62199,0,"0x9a, 0x9e"
"    0x71: v71 = OR v5c(0xd66a9d2b706e225204f475c9e70a4c09eea62199), v5b",0x0,v71,"0,v5c,v5b",OR,0,0,False,0,0,"0x9a, 0x9e"
"    0x73: SSTORE v56(0x7), v71",0x0,0,"0,v56,v71",SSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0x74: v74(0x8) = CONST ,0x0,v74,0,CONST,0,0,False,0x8,0,"0x9a, 0x9e"
    0x77: v77 = SLOAD v74(0x8),0x0,v77,"0,v74",SLOAD,0,0,False,0,0,"0x9a, 0x9e"
"    0x7a: v7a = AND v1b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v77",0x0,v7a,"0,v1b,v77",AND,0,0,False,0,0,"0x9a, 0x9e"
    0x7b: v7b(0x868f7622f57b62330db8b282044d7eaf067facfe) = CONST ,0x0,v7b,0,CONST,0,0,False,0x868f7622f57b62330db8b282044d7eaf067facfe,0,"0x9a, 0x9e"
"    0x90: v90 = OR v7b(0x868f7622f57b62330db8b282044d7eaf067facfe), v7a",0x0,v90,"0,v7b,v7a",OR,0,0,False,0,0,"0x9a, 0x9e"
"    0x92: SSTORE v74(0x8), v90",0x0,0,"0,v74,v90",SSTORE,0,0,False,0,0,"0x9a, 0x9e"
    0x93: v93 = CALLVALUE ,0x0,v93,0,CALLVALUE,0,0,False,0,0,"0x9a, 0x9e"
    0x95: v95 = ISZERO v93,0x0,v95,"0,v93",ISZERO,0,0,False,0,0,"0x9a, 0x9e"
    0x96: v96(0x9e) = CONST ,0x0,v96,0,CONST,0,0,False,0x9e,0,"0x9a, 0x9e"
"    0x99: JUMPI v96(0x9e), v95",0x0,0,"0,v96,v95",JUMPI,0,0,False,0,0,"0x9a, 0x9e"
    Begin block 0x9a,0x9a,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
"    prev=[0x0], succ=[]",0x9a,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    =================================,0x9a,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    0x9a: v9a(0x0) = CONST ,0x9a,v9a,0,CONST,0,0,False,0x0,0,"0x9a, 0x9e"
"    0x9d: REVERT v9a(0x0), v9a(0x0)",0x9a,0,"0,v9a,v9a",REVERT,0,0,False,0,0,"0x9a, 0x9e"
    Begin block 0x9e,0x9e,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
"    prev=[0x0], succ=[]",0x9e,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    =================================,0x9e,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
    0xa0: va0(0x1d52) = CONST ,0x9e,va0,0,CONST,0,0,False,0x1d52,0,"0x9a, 0x9e"
    0xa4: va4(0xae) = CONST ,0x9e,va4,0,CONST,0,0,False,0xae,0,"0x9a, 0x9e"
    0xa7: va7(0x0) = CONST ,0x9e,va7,0,CONST,0,0,False,0x0,0,"0x9a, 0x9e"
"    0xa9: CODECOPY va7(0x0), va4(0xae), va0(0x1d52)",0x9e,0,"0,va7,va4,va0",CODECOPY,0,0,False,0,0,"0x9a, 0x9e"
    0xaa: vaa(0x0) = CONST ,0x9e,vaa,0,CONST,0,0,False,0x0,0,"0x9a, 0x9e"
"    0xac: RETURN vaa(0x0), va0(0x1d52)",0x9e,0,"0,vaa,va0",RETURN,0,0,False,0,0,"0x9a, 0x9e"
},0x9e,0,0,0,0,0,False,0,0,"0x9a, 0x9e"
