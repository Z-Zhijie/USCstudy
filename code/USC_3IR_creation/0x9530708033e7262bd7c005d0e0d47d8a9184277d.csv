3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x8, 0xc]",0x0,0,0,0,0,0,False,0,0,"0x8, 0xc"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x8, 0xc"
    0x0: v0(0xd) = CONST ,0x0,v0,0,CONST,0,0,False,0xd,0,"0x8, 0xc"
    0x2: v2 = SLOAD v0(0xd),0x0,v2,"0,v0",SLOAD,0,0,False,0,0,"0x8, 0xc"
    0x3: v3 = ISZERO v2,0x0,v3,"0,v2",ISZERO,0,0,False,0,0,"0x8, 0xc"
    0x4: v4(0xc) = CONST ,0x0,v4,0,CONST,0,0,False,0xc,0,"0x8, 0xc"
"    0x7: JUMPI v4(0xc), v3",0x0,0,"0,v4,v3",JUMPI,0,0,False,0,0,"0x8, 0xc"
    Begin block 0x8,0x8,0,0,0,0,0,False,0,0,"0x8, 0xc"
"    prev=[0x0], succ=[]",0x8,0,0,0,0,0,False,0,0,"0x8, 0xc"
    =================================,0x8,0,0,0,0,0,False,0,0,"0x8, 0xc"
    0x8: v8(0x0) = CONST ,0x8,v8,0,CONST,0,0,False,0x0,0,"0x8, 0xc"
"    0xb: REVERT v8(0x0), v8(0x0)",0x8,0,"0,v8,v8",REVERT,0,0,False,0,0,"0x8, 0xc"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0x8, 0xc"
"    prev=[0x0], succ=[0x980]",0xc,0,0,0,0,0,False,0,0,0x980
    =================================,0xc,0,0,0,0,0,False,0,0,0x980
    0xd: vd(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = CONST ,0xc,vd,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x980
    0x2e: v2e(0xd) = CONST ,0xc,v2e,0,CONST,0,0,False,0xd,0,0x980
"    0x30: SSTORE v2e(0xd), vd(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)",0xc,0,"0,v2e,vd",SSTORE,0,0,False,0,0,0x980
    0x31: v31(0x980) = CONST ,0xc,v31,0,CONST,0,0,False,0x980,0,0x980
    0x34: JUMP v31(0x980),0xc,0,"0,v31",JUMP,0,0,False,0,0,0x980
    Begin block 0x980,0x980,0,0,0,0,0,False,0,0,0x980
"    prev=[0xc], succ=[]",0x980,0,0,0,0,0,False,0,0,0x980
    =================================,0x980,0,0,0,0,0,False,0,0,0x980
    0x981: v981(0x35) = CONST ,0x980,v981,0,CONST,0,0,False,0x35,0,0x980
    0x984: v984(0x980) = CONST ,0x980,v984,0,CONST,0,0,False,0x980,0,0x980
"    0x987: v987(0x94b) = SUB v984(0x980), v981(0x35)",0x980,v987,"0,v984,v981",SUB,0,0,False,0x94b,0,0x980
    0x988: v988(0x35) = CONST ,0x980,v988,0,CONST,0,0,False,0x35,0,0x980
    0x98b: v98b(0x0) = CONST ,0x980,v98b,0,CONST,0,0,False,0x0,0,0x980
"    0x98d: CODECOPY v98b(0x0), v988(0x35), v987(0x94b)",0x980,0,"0,v98b,v988,v987",CODECOPY,0,0,False,0,0,0x980
    0x98e: v98e(0x35) = CONST ,0x980,v98e,0,CONST,0,0,False,0x35,0,0x980
    0x991: v991(0x980) = CONST ,0x980,v991,0,CONST,0,0,False,0x980,0,0x980
"    0x994: v994(0x94b) = SUB v991(0x980), v98e(0x35)",0x980,v994,"0,v991,v98e",SUB,0,0,False,0x94b,0,0x980
    0x995: v995(0x0) = CONST ,0x980,v995,0,CONST,0,0,False,0x0,0,0x980
"    0x997: RETURN v995(0x0), v994(0x94b)",0x980,0,"0,v995,v994",RETURN,0,0,False,0,0,0x980
},0x980,0,0,0,0,0,False,0,0,0x980
