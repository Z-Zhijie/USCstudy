3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x1e, 0x22]",0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x1e, 0x22"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x1e, 0x22"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x5: v5(0x1) = CONST ,0x0,v5,0,CONST,0,0,False,0x1,0,"0x1e, 0x22"
    0x8: v8 = SLOAD v5(0x1),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x1e, 0x22"
    0x9: v9(0xa0) = CONST ,0x0,v9,0,CONST,0,0,False,0xa0,0,"0x1e, 0x22"
    0xb: vb(0x2) = CONST ,0x0,vb,0,CONST,0,0,False,0x2,0,"0x1e, 0x22"
"    0xd: vd(0x10000000000000000000000000000000000000000) = EXP vb(0x2), v9(0xa0)",0x0,vd,"0,vb,v9",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x1e, 0x22"
    0xe: ve(0xffff) = CONST ,0x0,ve,0,CONST,0,0,False,0xffff,0,"0x1e, 0x22"
"    0x11: v11(0xffff0000000000000000000000000000000000000000) = MUL ve(0xffff), vd(0x10000000000000000000000000000000000000000)",0x0,v11,"0,ve,vd",MUL,0,0,False,0xffff0000000000000000000000000000000000000000,0,"0x1e, 0x22"
    0x12: v12(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff) = NOT v11(0xffff0000000000000000000000000000000000000000),0x0,v12,"0,v11",NOT,0,0,False,0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff,0,"0x1e, 0x22"
"    0x13: v13 = AND v12(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff), v8",0x0,v13,"0,v12,v8",AND,0,0,False,0,0,"0x1e, 0x22"
"    0x15: SSTORE v5(0x1), v13",0x0,0,"0,v5,v13",SSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x16: v16 = CALLVALUE ,0x0,v16,0,CALLVALUE,0,0,False,0,0,"0x1e, 0x22"
    0x18: v18 = ISZERO v16,0x0,v18,"0,v16",ISZERO,0,0,False,0,0,"0x1e, 0x22"
    0x19: v19(0x22) = CONST ,0x0,v19,0,CONST,0,0,False,0x22,0,"0x1e, 0x22"
"    0x1d: JUMPI v19(0x22), v18",0x0,0,"0,v19,v18",JUMPI,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x1e,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[]",0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x1e: v1e(0x0) = CONST ,0x1e,v1e,0,CONST,0,0,False,0x0,0,"0x1e, 0x22"
"    0x21: REVERT v1e(0x0), v1e(0x0)",0x1e,0,"0,v1e,v1e",REVERT,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x22,0x22,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[0xdc]",0x22,0,0,0,0,0,False,0,0,0xdc
    =================================,0x22,0,0,0,0,0,False,0,0,0xdc
    0x24: v24(0x40) = CONST ,0x22,v24,0,CONST,0,0,False,0x40,0,0xdc
    0x26: v26 = MLOAD v24(0x40),0x22,v26,"0,v24",MLOAD,0,0,False,0,0&m0x40,0xdc
    0x27: v27(0x40) = CONST ,0x22,v27,0,CONST,0,0,False,0x40,0,0xdc
    0x2a: v2a(0x37ca) = CONST ,0x22,v2a,0,CONST,0,0,False,0x37ca,0,0xdc
"    0x2f: CODECOPY v26, v2a(0x37ca), v27(0x40)",0x22,0,"0,v26,v2a,v27",CODECOPY,0,0,False,0,0,0xdc
"    0x31: v31 = ADD v26, v27(0x40)",0x22,v31,"0,v26,v27",ADD,0,0,False,0,0&m0x40+0x40,0xdc
    0x32: v32(0x40) = CONST ,0x22,v32,0,CONST,0,0,False,0x40,0,0xdc
"    0x34: MSTORE v32(0x40), v31",0x22,0,"0,v32,v31",MSTORE,0,0,False,0,0,0xdc
    0x36: v36 = MLOAD v26,0x22,v36,"0,v26",MLOAD,0,0,False,0,0,0xdc
    0x37: v37(0x20) = CONST ,0x22,v37,0,CONST,0,0,False,0x20,0,0xdc
"    0x3b: v3b = ADD v26, v37(0x20)",0x22,v3b,"0,v26,v37",ADD,0,0,False,0,0&m0x40+0x20,0xdc
    0x3c: v3c = MLOAD v3b,0x22,v3c,"0,v3b",MLOAD,0,0,False,0,0,0xdc
    0x3d: v3d(0x0) = CONST ,0x22,v3d,0,CONST,0,0,False,0x0,0,0xdc
    0x40: v40 = SLOAD v3d(0x0),0x22,v40,"0,v3d",SLOAD,0,0,False,0,0,0xdc
    0x41: v41 = CALLER ,0x22,v41,0,CALLER,0,0,True,0,0,0xdc
    0x42: v42(0x1) = CONST ,0x22,v42,0,CONST,0,0,False,0x1,0,0xdc
    0x44: v44(0xa0) = CONST ,0x22,v44,0,CONST,0,0,False,0xa0,0,0xdc
    0x46: v46(0x2) = CONST ,0x22,v46,0,CONST,0,0,False,0x2,0,0xdc
"    0x48: v48(0x10000000000000000000000000000000000000000) = EXP v46(0x2), v44(0xa0)",0x22,v48,"0,v46,v44",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0xdc
"    0x49: v49(0xffffffffffffffffffffffffffffffffffffffff) = SUB v48(0x10000000000000000000000000000000000000000), v42(0x1)",0x22,v49,"0,v48,v42",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xdc
    0x4a: v4a(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v49(0xffffffffffffffffffffffffffffffffffffffff),0x22,v4a,"0,v49",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0xdc
"    0x4d: v4d = AND v4a(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v40",0x22,v4d,"0,v4a,v40",AND,0,0,False,0,0,0xdc
"    0x4e: v4e = OR v4d, v41",0x22,v4e,"0,v4d,v41",OR,0,0,True,0,0,0xdc
"    0x51: SSTORE v3d(0x0), v4e",0x22,0,"0,v3d,v4e",SSTORE,0,0,False,0,0,0xdc
    0x52: v52(0x1) = CONST ,0x22,v52,0,CONST,0,0,False,0x1,0,0xdc
    0x55: v55 = SLOAD v52(0x1),0x22,v55,"0,v52",SLOAD,0,0,False,0,0,0xdc
"    0x57: v57 = AND v4a(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v55",0x22,v57,"0,v4a,v55",AND,0,0,False,0,0,0xdc
"    0x59: SSTORE v52(0x1), v57",0x22,0,"0,v52,v57",SSTORE,0,0,False,0,0,0xdc
    0x5a: v5a(0x3) = CONST ,0x22,v5a,0,CONST,0,0,False,0x3,0,0xdc
    0x5d: v5d = SLOAD v5a(0x3),0x22,v5d,"0,v5a",SLOAD,0,0,False,0,0,0xdc
"    0x60: v60 = AND v4a(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v5d",0x22,v60,"0,v4a,v5d",AND,0,0,False,0,0,0xdc
    0x61: v61(0x1) = CONST ,0x22,v61,0,CONST,0,0,False,0x1,0,0xdc
    0x63: v63(0xa0) = CONST ,0x22,v63,0,CONST,0,0,False,0xa0,0,0xdc
    0x65: v65(0x2) = CONST ,0x22,v65,0,CONST,0,0,False,0x2,0,0xdc
"    0x67: v67(0x10000000000000000000000000000000000000000) = EXP v65(0x2), v63(0xa0)",0x22,v67,"0,v65,v63",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0xdc
"    0x68: v68(0xffffffffffffffffffffffffffffffffffffffff) = SUB v67(0x10000000000000000000000000000000000000000), v61(0x1)",0x22,v68,"0,v67,v61",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xdc
"    0x6a: v6a = AND v36, v68(0xffffffffffffffffffffffffffffffffffffffff)",0x22,v6a,"0,v36,v68",AND,0,0,False,0,0,0xdc
"    0x6b: v6b = OR v6a, v60",0x22,v6b,"0,v6a,v60",OR,0,0,False,0,0,0xdc
"    0x6d: SSTORE v5a(0x3), v6b",0x22,0,"0,v5a,v6b",SSTORE,0,0,False,0,0,0xdc
    0x6f: v6f(0x78) = CONST ,0x22,v6f,0,CONST,0,0,False,0x78,0,0xdc
    0x73: v73(0xdc) = CONST ,0x22,v73,0,CONST,0,0,False,0xdc,0,0xdc
    0x77: JUMP v73(0xdc),0x22,0,"0,v73",JUMP,0,0,False,0,0,0xdc
    Begin block 0xdc,0xdc,0,0,0,0,0,False,0,0,0xdc
"    prev=[0x22], succ=[0x78]",0xdc,0,0,0,0,0,False,0,0,0x78
    =================================,0xdc,0,0,0,0,0,False,0,0,0x78
    0xdd: vdd(0x40) = CONST ,0xdc,vdd,0,CONST,0,0,False,0x40,0,0x78
    0xdf: vdf = MLOAD vdd(0x40),0xdc,vdf,"0,vdd",MLOAD,0,0,False,0,0&m0x40,0x78
    0xe0: ve0(0x718) = CONST ,0xdc,ve0,0,CONST,0,0,False,0x718,0,0x78
    0xe4: ve4(0x30b2) = CONST ,0xdc,ve4,0,CONST,0,0,False,0x30b2,0,0x78
"    0xe9: CODECOPY vdf, ve4(0x30b2), ve0(0x718)",0xdc,0,"0,vdf,ve4,ve0",CODECOPY,0,0,False,0,0,0x78
"    0xea: vea = ADD ve0(0x718), vdf",0xdc,vea,"0,ve0,vdf",ADD,0,0,False,0,0&m0x40+0x718,0x78
    0xec: JUMP v6f(0x78),0xdc,0,"0,v6f",JUMP,0,0,False,0,0,0x78
    Begin block 0x78,0x78,0,0,0,0,0,False,0,0,0x78
"    prev=[0xdc], succ=[0x8c, 0x95]",0x78,0,0,0,0,0,False,0,0,"0x8c, 0x95"
    =================================,0x78,0,0,0,0,0,False,0,0,"0x8c, 0x95"
    0x79: v79(0x40) = CONST ,0x78,v79,0,CONST,0,0,False,0x40,0,"0x8c, 0x95"
    0x7b: v7b = MLOAD v79(0x40),0x78,v7b,"0,v79",MLOAD,0,0,False,0,0&m0x40,"0x8c, 0x95"
"    0x7e: v7e(0x718) = SUB vea, v7b",0x78,v7e,"0,vea,v7b",SUB,0,0,False,0x718,0&m0x40+0x718-0x718,"0x8c, 0x95"
    0x80: v80(0x0) = CONST ,0x78,v80,0,CONST,0,0,False,0x0,0,"0x8c, 0x95"
"    0x82: v82 = CREATE v80(0x0), v7b, v7e(0x718)",0x78,v82,"0,v80,v7b,v7e",CREATE,0,0,False,0,0,"0x8c, 0x95"
    0x84: v84 = ISZERO v82,0x78,v84,"0,v82",ISZERO,0,0,False,0,0,"0x8c, 0x95"
    0x86: v86 = ISZERO v84,0x78,v86,"0,v84",ISZERO,0,0,False,0,0,"0x8c, 0x95"
    0x87: v87(0x95) = CONST ,0x78,v87,0,CONST,0,0,False,0x95,0,"0x8c, 0x95"
"    0x8b: JUMPI v87(0x95), v86",0x78,0,"0,v87,v86",JUMPI,0,0,False,0,0,"0x8c, 0x95"
    Begin block 0x8c,0x8c,0,0,0,0,0,False,0,0,"0x8c, 0x95"
"    prev=[0x78], succ=[]",0x8c,0,0,0,0,0,False,0,0,"0x8c, 0x95"
    =================================,0x8c,0,0,0,0,0,False,0,0,"0x8c, 0x95"
    0x8c: v8c = RETURNDATASIZE ,0x8c,v8c,0,RETURNDATASIZE,0,0,False,0,0,"0x8c, 0x95"
    0x8d: v8d(0x0) = CONST ,0x8c,v8d,0,CONST,0,0,False,0x0,0,"0x8c, 0x95"
"    0x90: RETURNDATACOPY v8d(0x0), v8d(0x0), v8c",0x8c,0,"0,v8d,v8d,v8c",RETURNDATACOPY,0,0,False,0,0,"0x8c, 0x95"
    0x91: v91 = RETURNDATASIZE ,0x8c,v91,0,RETURNDATASIZE,0,0,False,0,0,"0x8c, 0x95"
    0x92: v92(0x0) = CONST ,0x8c,v92,0,CONST,0,0,False,0x0,0,"0x8c, 0x95"
"    0x94: REVERT v92(0x0), v91",0x8c,0,"0,v92,v91",REVERT,0,0,False,0,0,"0x8c, 0x95"
    Begin block 0x95,0x95,0,0,0,0,0,False,0,0,"0x8c, 0x95"
"    prev=[0x78], succ=[0xed]",0x95,0,0,0,0,0,False,0,0,0xed
    =================================,0x95,0,0,0,0,0,False,0,0,0xed
    0x97: v97(0x2) = CONST ,0x95,v97,0,CONST,0,0,False,0x2,0,0xed
    0x9a: v9a = SLOAD v97(0x2),0x95,v9a,"0,v97",SLOAD,0,0,False,0,0,0xed
    0x9b: v9b(0x1) = CONST ,0x95,v9b,0,CONST,0,0,False,0x1,0,0xed
    0x9d: v9d(0xa0) = CONST ,0x95,v9d,0,CONST,0,0,False,0xa0,0,0xed
    0x9f: v9f(0x2) = CONST ,0x95,v9f,0,CONST,0,0,False,0x2,0,0xed
"    0xa1: va1(0x10000000000000000000000000000000000000000) = EXP v9f(0x2), v9d(0xa0)",0x95,va1,"0,v9f,v9d",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0xed
"    0xa2: va2(0xffffffffffffffffffffffffffffffffffffffff) = SUB va1(0x10000000000000000000000000000000000000000), v9b(0x1)",0x95,va2,"0,va1,v9b",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xed
    0xa3: va3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT va2(0xffffffffffffffffffffffffffffffffffffffff),0x95,va3,"0,va2",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0xed
"    0xa6: va6 = AND va3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v9a",0x95,va6,"0,va3,v9a",AND,0,0,False,0,0,0xed
    0xa7: va7(0x1) = CONST ,0x95,va7,0,CONST,0,0,False,0x1,0,0xed
    0xa9: va9(0xa0) = CONST ,0x95,va9,0,CONST,0,0,False,0xa0,0,0xed
    0xab: vab(0x2) = CONST ,0x95,vab,0,CONST,0,0,False,0x2,0,0xed
"    0xad: vad(0x10000000000000000000000000000000000000000) = EXP vab(0x2), va9(0xa0)",0x95,vad,"0,vab,va9",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0xed
"    0xae: vae(0xffffffffffffffffffffffffffffffffffffffff) = SUB vad(0x10000000000000000000000000000000000000000), va7(0x1)",0x95,vae,"0,vad,va7",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xed
"    0xb1: vb1 = AND vae(0xffffffffffffffffffffffffffffffffffffffff), v82",0x95,vb1,"0,vae,v82",AND,0,0,False,0,0,0xed
"    0xb2: vb2 = OR vb1, va6",0x95,vb2,"0,vb1,va6",OR,0,0,False,0,0,0xed
"    0xb5: SSTORE v97(0x2), vb2",0x95,0,"0,v97,vb2",SSTORE,0,0,False,0,0,0xed
    0xb6: vb6(0x3) = CONST ,0x95,vb6,0,CONST,0,0,False,0x3,0,0xed
    0xb9: vb9 = SLOAD vb6(0x3),0x95,vb9,"0,vb6",SLOAD,0,0,False,0,0,0xed
"    0xbb: vbb = AND va3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vb9",0x95,vbb,"0,va3,vb9",AND,0,0,False,0,0,0xed
"    0xbe: vbe = AND vae(0xffffffffffffffffffffffffffffffffffffffff), v36",0x95,vbe,"0,vae,v36",AND,0,0,False,0,0,0xed
"    0xc2: vc2 = OR vbe, vbb",0x95,vc2,"0,vbe,vbb",OR,0,0,False,0,0,0xed
"    0xc5: SSTORE vb6(0x3), vc2",0x95,0,"0,vb6,vc2",SSTORE,0,0,False,0,0,0xed
    0xc6: vc6(0x4) = CONST ,0x95,vc6,0,CONST,0,0,False,0x4,0,0xed
    0xc9: vc9 = SLOAD vc6(0x4),0x95,vc9,"0,vc6",SLOAD,0,0,False,0,0,0xed
"    0xcc: vcc = AND va3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc9",0x95,vcc,"0,va3,vc9",AND,0,0,False,0,0,0xed
"    0xce: vce = AND v3c, vae(0xffffffffffffffffffffffffffffffffffffffff)",0x95,vce,"0,v3c,vae",AND,0,0,False,0,0,0xed
"    0xd2: vd2 = OR vce, vcc",0x95,vd2,"0,vce,vcc",OR,0,0,False,0,0,0xed
"    0xd5: SSTORE vc6(0x4), vd2",0x95,0,"0,vc6,vd2",SSTORE,0,0,False,0,0,0xed
    0xd7: vd7(0xed) = CONST ,0x95,vd7,0,CONST,0,0,False,0xed,0,0xed
    0xdb: JUMP vd7(0xed),0x95,0,"0,vd7",JUMP,0,0,False,0,0,0xed
    Begin block 0xed,0xed,0,0,0,0,0,False,0,0,0xed
"    prev=[0x95], succ=[]",0xed,0,0,0,0,0,False,0,0,0xed
    =================================,0xed,0,0,0,0,0,False,0,0,0xed
    0xee: vee(0x2fb5) = CONST ,0xed,vee,0,CONST,0,0,False,0x2fb5,0,0xed
    0xf2: vf2(0xfd) = CONST ,0xed,vf2,0,CONST,0,0,False,0xfd,0,0xed
    0xf6: vf6(0x0) = CONST ,0xed,vf6,0,CONST,0,0,False,0x0,0,0xed
"    0xf8: CODECOPY vf6(0x0), vf2(0xfd), vee(0x2fb5)",0xed,0,"0,vf6,vf2,vee",CODECOPY,0,0,False,0,0,0xed
    0xf9: vf9(0x0) = CONST ,0xed,vf9,0,CONST,0,0,False,0x0,0,0xed
"    0xfb: RETURN vf9(0x0), vee(0x2fb5)",0xed,0,"0,vf9,vee",RETURN,0,0,False,0,0,0xed
},0xed,0,0,0,0,0,False,0,0,0xed
