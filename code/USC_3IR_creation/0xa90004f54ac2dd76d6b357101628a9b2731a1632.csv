3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x55, 0x59]",0x0,0,0,0,0,0,False,0,0,"0x55, 0x59"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x55, 0x59"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x55, 0x59"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x55, 0x59"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x55, 0x59"
    0x5: v5(0x1) = CONST ,0x0,v5,0,CONST,0,0,False,0x1,0,"0x55, 0x59"
    0x8: v8 = SLOAD v5(0x1),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x55, 0x59"
    0x9: v9(0x1) = CONST ,0x0,v9,0,CONST,0,0,False,0x1,0,"0x55, 0x59"
    0xb: vb(0x1) = CONST ,0x0,vb,0,CONST,0,0,False,0x1,0,"0x55, 0x59"
    0xd: vd(0xa0) = CONST ,0x0,vd,0,CONST,0,0,False,0xa0,0,"0x55, 0x59"
"    0xf: vf(0x10000000000000000000000000000000000000000) = SHL vd(0xa0), vb(0x1)",0x0,vf,"0,vd,vb",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x55, 0x59"
"    0x10: v10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf(0x10000000000000000000000000000000000000000), v9(0x1)",0x0,v10,"0,vf,v9",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x55, 0x59"
    0x11: v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v10(0xffffffffffffffffffffffffffffffffffffffff),0x0,v11,"0,v10",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x55, 0x59"
"    0x14: v14 = AND v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v8",0x0,v14,"0,v11,v8",AND,0,0,False,0,0,"0x55, 0x59"
    0x15: v15(0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f) = CONST ,0x0,v15,0,CONST,0,0,False,0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f,0,"0x55, 0x59"
"    0x2a: v2a = OR v15(0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f), v14",0x0,v2a,"0,v15,v14",OR,0,0,False,0,0,"0x55, 0x59"
"    0x2d: SSTORE v5(0x1), v2a",0x0,0,"0,v5,v2a",SSTORE,0,0,False,0,0,"0x55, 0x59"
    0x2e: v2e(0x2) = CONST ,0x0,v2e,0,CONST,0,0,False,0x2,0,"0x55, 0x59"
    0x31: v31 = SLOAD v2e(0x2),0x0,v31,"0,v2e",SLOAD,0,0,False,0,0,"0x55, 0x59"
"    0x34: v34 = AND v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v31",0x0,v34,"0,v11,v31",AND,0,0,False,0,0,"0x55, 0x59"
    0x35: v35(0x7a250d5630b4cf539739df2c5dacb4c659f2488d) = CONST ,0x0,v35,0,CONST,0,0,False,0x7a250d5630b4cf539739df2c5dacb4c659f2488d,0,"0x55, 0x59"
"    0x4a: v4a = OR v35(0x7a250d5630b4cf539739df2c5dacb4c659f2488d), v34",0x0,v4a,"0,v35,v34",OR,0,0,False,0,0,"0x55, 0x59"
"    0x4c: SSTORE v2e(0x2), v4a",0x0,0,"0,v2e,v4a",SSTORE,0,0,False,0,0,"0x55, 0x59"
    0x4d: v4d = CALLVALUE ,0x0,v4d,0,CALLVALUE,0,0,False,0,0,"0x55, 0x59"
    0x4f: v4f = ISZERO v4d,0x0,v4f,"0,v4d",ISZERO,0,0,False,0,0,"0x55, 0x59"
    0x50: v50(0x59) = CONST ,0x0,v50,0,CONST,0,0,False,0x59,0,"0x55, 0x59"
"    0x54: JUMPI v50(0x59), v4f",0x0,0,"0,v50,v4f",JUMPI,0,0,False,0,0,"0x55, 0x59"
    Begin block 0x55,0x55,0,0,0,0,0,False,0,0,"0x55, 0x59"
"    prev=[0x0], succ=[]",0x55,0,0,0,0,0,False,0,0,"0x55, 0x59"
    =================================,0x55,0,0,0,0,0,False,0,0,"0x55, 0x59"
    0x55: v55(0x0) = CONST ,0x55,v55,0,CONST,0,0,False,0x0,0,"0x55, 0x59"
"    0x58: REVERT v55(0x0), v55(0x0)",0x55,0,"0,v55,v55",REVERT,0,0,False,0,0,"0x55, 0x59"
    Begin block 0x59,0x59,0,0,0,0,0,False,0,0,"0x55, 0x59"
"    prev=[0x0], succ=[0xba]",0x59,0,0,0,0,0,False,0,0,0xba
    =================================,0x59,0,0,0,0,0,False,0,0,0xba
    0x5b: v5b(0x0) = CONST ,0x59,v5b,0,CONST,0,0,False,0x0,0,0xba
    0x5d: v5d(0x66) = CONST ,0x59,v5d,0,CONST,0,0,False,0x66,0,0xba
    0x61: v61(0xba) = CONST ,0x59,v61,0,CONST,0,0,False,0xba,0,0xba
    0x65: JUMP v61(0xba),0x59,0,"0,v61",JUMP,0,0,False,0,0,0xba
    Begin block 0xba,0xba,0,0,0,0,0,False,0,0,0xba
"    prev=[0x59], succ=[0x66]",0xba,0,0,0,0,0,False,0,0,0x66
    =================================,0xba,0,0,0,0,0,False,0,0,0x66
    0xbb: vbb = CALLER ,0xba,vbb,0,CALLER,0,0,True,0,0,0x66
    0xbd: JUMP v5d(0x66),0xba,0,"0,v5d",JUMP,0,0,False,0,0,0x66
    Begin block 0x66,0x66,0,0,0,0,0,False,0,0,0x66
"    prev=[0xba], succ=[0xbe]",0x66,0,0,0,0,0,False,0,0,0xbe
    =================================,0x66,0,0,0,0,0,False,0,0,0xbe
    0x67: v67(0x4) = CONST ,0x66,v67,0,CONST,0,0,False,0x4,0,0xbe
    0x6a: v6a = SLOAD v67(0x4),0x66,v6a,"0,v67",SLOAD,0,0,False,0,0,0xbe
    0x6b: v6b(0x1) = CONST ,0x66,v6b,0,CONST,0,0,False,0x1,0,0xbe
    0x6d: v6d(0x1) = CONST ,0x66,v6d,0,CONST,0,0,False,0x1,0,0xbe
    0x6f: v6f(0xa0) = CONST ,0x66,v6f,0,CONST,0,0,False,0xa0,0,0xbe
"    0x71: v71(0x10000000000000000000000000000000000000000) = SHL v6f(0xa0), v6d(0x1)",0x66,v71,"0,v6f,v6d",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xbe
"    0x72: v72(0xffffffffffffffffffffffffffffffffffffffff) = SUB v71(0x10000000000000000000000000000000000000000), v6b(0x1)",0x66,v72,"0,v71,v6b",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xbe
    0x73: v73(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v72(0xffffffffffffffffffffffffffffffffffffffff),0x66,v73,"0,v72",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0xbe
"    0x74: v74 = AND v73(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v6a",0x66,v74,"0,v73,v6a",AND,0,0,False,0,0,0xbe
    0x75: v75(0x1) = CONST ,0x66,v75,0,CONST,0,0,False,0x1,0,0xbe
    0x77: v77(0x1) = CONST ,0x66,v77,0,CONST,0,0,False,0x1,0,0xbe
    0x79: v79(0xa0) = CONST ,0x66,v79,0,CONST,0,0,False,0xa0,0,0xbe
"    0x7b: v7b(0x10000000000000000000000000000000000000000) = SHL v79(0xa0), v77(0x1)",0x66,v7b,"0,v79,v77",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0xbe
"    0x7c: v7c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7b(0x10000000000000000000000000000000000000000), v75(0x1)",0x66,v7c,"0,v7b,v75",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xbe
"    0x7e: v7e = AND vbb, v7c(0xffffffffffffffffffffffffffffffffffffffff)",0x66,v7e,"0,vbb,v7c",AND,0,0,True,0,0,0xbe
"    0x81: v81 = OR v7e, v74",0x66,v81,"0,v7e,v74",OR,0,0,True,0,0,0xbe
"    0x84: SSTORE v67(0x4), v81",0x66,0,"0,v67,v81",SSTORE,0,0,False,0,0,0xbe
    0x85: v85(0x40) = CONST ,0x66,v85,0,CONST,0,0,False,0x40,0,0xbe
    0x87: v87 = MLOAD v85(0x40),0x66,v87,"0,v85",MLOAD,0,0,False,0,0&m0x40,0xbe
    0x8c: v8c(0x0) = CONST ,0x66,v8c,0,CONST,0,0,False,0x0,0,0xbe
    0x8f: v8f(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST ,0x66,v8f,0,CONST,0,0,False,0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0,0,0xbe
"    0xb3: LOG3 v87, v8c(0x0), v8f(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0), v8c(0x0), v7e",0x66,0,"0,v87,v8c,v8f,v8c,v7e",LOG3,0,0,False,0,0,0xbe
    0xb5: vb5(0xbe) = CONST ,0x66,vb5,0,CONST,0,0,False,0xbe,0,0xbe
    0xb9: JUMP vb5(0xbe),0x66,0,"0,vb5",JUMP,0,0,False,0,0,0xbe
    Begin block 0xbe,0xbe,0,0,0,0,0,False,0,0,0xbe
"    prev=[0x66], succ=[]",0xbe,0,0,0,0,0,False,0,0,0xbe
    =================================,0xbe,0,0,0,0,0,False,0,0,0xbe
    0xbf: vbf(0x3559) = CONST ,0xbe,vbf,0,CONST,0,0,False,0x3559,0,0xbe
    0xc3: vc3(0xce) = CONST ,0xbe,vc3,0,CONST,0,0,False,0xce,0,0xbe
    0xc7: vc7(0x0) = CONST ,0xbe,vc7,0,CONST,0,0,False,0x0,0,0xbe
"    0xc9: CODECOPY vc7(0x0), vc3(0xce), vbf(0x3559)",0xbe,0,"0,vc7,vc3,vbf",CODECOPY,0,0,False,0,0,0xbe
    0xca: vca(0x0) = CONST ,0xbe,vca,0,CONST,0,0,False,0x0,0,0xbe
"    0xcc: RETURN vca(0x0), vbf(0x3559)",0xbe,0,"0,vca,vbf",RETURN,0,0,False,0,0,0xbe
},0xbe,0,0,0,0,0,False,0,0,0xbe
