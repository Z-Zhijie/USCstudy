3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x1e, 0x22]",0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x1e, 0x22"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x1e, 0x22"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,"0x1e, 0x22"
    0x7: v7(0x13) = CONST ,0x0,v7,0,CONST,0,0,False,0x13,0,"0x1e, 0x22"
"    0x9: SSTORE v7(0x13), v5(0x0)",0x0,0,"0,v7,v5",SSTORE,0,0,False,0,0,"0x1e, 0x22"
    0xa: va(0x9105dba22ed50000) = CONST ,0x0,va,0,CONST,0,0,False,0x9105dba22ed50000,0,"0x1e, 0x22"
    0x13: v13(0x14) = CONST ,0x0,v13,0,CONST,0,0,False,0x14,0,"0x1e, 0x22"
"    0x15: SSTORE v13(0x14), va(0x9105dba22ed50000)",0x0,0,"0,v13,va",SSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x16: v16 = CALLVALUE ,0x0,v16,0,CALLVALUE,0,0,False,0,0,"0x1e, 0x22"
    0x18: v18 = ISZERO v16,0x0,v18,"0,v16",ISZERO,0,0,False,0,0,"0x1e, 0x22"
    0x19: v19(0x22) = CONST ,0x0,v19,0,CONST,0,0,False,0x22,0,"0x1e, 0x22"
"    0x1d: JUMPI v19(0x22), v18",0x0,0,"0,v19,v18",JUMPI,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x1e,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[]",0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x1e: v1e(0x0) = CONST ,0x1e,v1e,0,CONST,0,0,False,0x0,0,"0x1e, 0x22"
"    0x21: REVERT v1e(0x0), v1e(0x0)",0x1e,0,"0,v1e,v1e",REVERT,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x22,0x22,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[0x83]",0x22,0,0,0,0,0,False,0,0,0x83
    =================================,0x22,0,0,0,0,0,False,0,0,0x83
    0x24: v24(0x0) = CONST ,0x22,v24,0,CONST,0,0,False,0x0,0,0x83
    0x26: v26(0x2f) = CONST ,0x22,v26,0,CONST,0,0,False,0x2f,0,0x83
    0x2a: v2a(0x83) = CONST ,0x22,v2a,0,CONST,0,0,False,0x83,0,0x83
    0x2e: JUMP v2a(0x83),0x22,0,"0,v2a",JUMP,0,0,False,0,0,0x83
    Begin block 0x83,0x83,0,0,0,0,0,False,0,0,0x83
"    prev=[0x22], succ=[0x2f]",0x83,0,0,0,0,0,False,0,0,0x2f
    =================================,0x83,0,0,0,0,0,False,0,0,0x2f
    0x84: v84 = CALLER ,0x83,v84,0,CALLER,0,0,True,0,0,0x2f
    0x86: JUMP v26(0x2f),0x83,0,"0,v26",JUMP,0,0,False,0,0,0x2f
    Begin block 0x2f,0x2f,0,0,0,0,0,False,0,0,0x2f
"    prev=[0x83], succ=[0x87]",0x2f,0,0,0,0,0,False,0,0,0x87
    =================================,0x2f,0,0,0,0,0,False,0,0,0x87
    0x30: v30(0x1) = CONST ,0x2f,v30,0,CONST,0,0,False,0x1,0,0x87
    0x33: v33 = SLOAD v30(0x1),0x2f,v33,"0,v30",SLOAD,0,0,False,0,0,0x87
    0x34: v34(0x1) = CONST ,0x2f,v34,0,CONST,0,0,False,0x1,0,0x87
    0x36: v36(0x1) = CONST ,0x2f,v36,0,CONST,0,0,False,0x1,0,0x87
    0x38: v38(0xa0) = CONST ,0x2f,v38,0,CONST,0,0,False,0xa0,0,0x87
"    0x3a: v3a(0x10000000000000000000000000000000000000000) = SHL v38(0xa0), v36(0x1)",0x2f,v3a,"0,v38,v36",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0x87
"    0x3b: v3b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a(0x10000000000000000000000000000000000000000), v34(0x1)",0x2f,v3b,"0,v3a,v34",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x87
    0x3c: v3c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v3b(0xffffffffffffffffffffffffffffffffffffffff),0x2f,v3c,"0,v3b",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x87
"    0x3d: v3d = AND v3c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v33",0x2f,v3d,"0,v3c,v33",AND,0,0,False,0,0,0x87
    0x3e: v3e(0x1) = CONST ,0x2f,v3e,0,CONST,0,0,False,0x1,0,0x87
    0x40: v40(0x1) = CONST ,0x2f,v40,0,CONST,0,0,False,0x1,0,0x87
    0x42: v42(0xa0) = CONST ,0x2f,v42,0,CONST,0,0,False,0xa0,0,0x87
"    0x44: v44(0x10000000000000000000000000000000000000000) = SHL v42(0xa0), v40(0x1)",0x2f,v44,"0,v42,v40",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,0x87
"    0x45: v45(0xffffffffffffffffffffffffffffffffffffffff) = SUB v44(0x10000000000000000000000000000000000000000), v3e(0x1)",0x2f,v45,"0,v44,v3e",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x87
"    0x47: v47 = AND v84, v45(0xffffffffffffffffffffffffffffffffffffffff)",0x2f,v47,"0,v84,v45",AND,0,0,True,0,0,0x87
"    0x4a: v4a = OR v47, v3d",0x2f,v4a,"0,v47,v3d",OR,0,0,True,0,0,0x87
"    0x4d: SSTORE v30(0x1), v4a",0x2f,0,"0,v30,v4a",SSTORE,0,0,False,0,0,0x87
    0x4e: v4e(0x40) = CONST ,0x2f,v4e,0,CONST,0,0,False,0x40,0,0x87
    0x50: v50 = MLOAD v4e(0x40),0x2f,v50,"0,v4e",MLOAD,0,0,False,0,0&m0x40,0x87
    0x55: v55(0x0) = CONST ,0x2f,v55,0,CONST,0,0,False,0x0,0,0x87
    0x58: v58(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST ,0x2f,v58,0,CONST,0,0,False,0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0,0,0x87
"    0x7c: LOG3 v50, v55(0x0), v58(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0), v55(0x0), v47",0x2f,0,"0,v50,v55,v58,v55,v47",LOG3,0,0,False,0,0,0x87
    0x7e: v7e(0x87) = CONST ,0x2f,v7e,0,CONST,0,0,False,0x87,0,0x87
    0x82: JUMP v7e(0x87),0x2f,0,"0,v7e",JUMP,0,0,False,0,0,0x87
    Begin block 0x87,0x87,0,0,0,0,0,False,0,0,0x87
"    prev=[0x2f], succ=[]",0x87,0,0,0,0,0,False,0,0,0x87
    =================================,0x87,0,0,0,0,0,False,0,0,0x87
    0x88: v88(0x3dae) = CONST ,0x87,v88,0,CONST,0,0,False,0x3dae,0,0x87
    0x8c: v8c(0x97) = CONST ,0x87,v8c,0,CONST,0,0,False,0x97,0,0x87
    0x90: v90(0x0) = CONST ,0x87,v90,0,CONST,0,0,False,0x0,0,0x87
"    0x92: CODECOPY v90(0x0), v8c(0x97), v88(0x3dae)",0x87,0,"0,v90,v8c,v88",CODECOPY,0,0,False,0,0,0x87
    0x93: v93(0x0) = CONST ,0x87,v93,0,CONST,0,0,False,0x0,0,0x87
"    0x95: RETURN v93(0x0), v88(0x3dae)",0x87,0,"0,v93,v88",RETURN,0,0,False,0,0,0x87
},0x87,0,0,0,0,0,False,0,0,0x87
