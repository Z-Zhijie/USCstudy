3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x10, 0x14]",0x0,0,0,0,0,0,False,0,0,"0x10, 0x14"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x10, 0x14"
    0x0: v0(0xa0) = CONST ,0x0,v0,0,CONST,0,0,False,0xa0,0,"0x10, 0x14"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x10, 0x14"
"    0x4: MSTORE v2(0x40), v0(0xa0)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x10, 0x14"
    0x5: v5 = CALLER ,0x0,v5,0,CALLER,0,0,True,0,0,"0x10, 0x14"
    0x6: v6(0x80) = CONST ,0x0,v6,0,CONST,0,0,False,0x80,0,"0x10, 0x14"
"    0x8: MSTORE v6(0x80), v5",0x0,0,"0,v6,v5",MSTORE,0,0,False,0,0,"0x10, 0x14"
    0x9: v9 = CALLVALUE ,0x0,v9,0,CALLVALUE,0,0,False,0,0,"0x10, 0x14"
    0xb: vb = ISZERO v9,0x0,vb,"0,v9",ISZERO,0,0,False,0,0,"0x10, 0x14"
    0xc: vc(0x14) = CONST ,0x0,vc,0,CONST,0,0,False,0x14,0,"0x10, 0x14"
"    0xf: JUMPI vc(0x14), vb",0x0,0,"0,vc,vb",JUMPI,0,0,False,0,0,"0x10, 0x14"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0x10, 0x14"
"    prev=[0x0], succ=[]",0x10,0,0,0,0,0,False,0,0,"0x10, 0x14"
    =================================,0x10,0,0,0,0,0,False,0,0,"0x10, 0x14"
    0x10: v10(0x0) = CONST ,0x10,v10,0,CONST,0,0,False,0x0,0,"0x10, 0x14"
"    0x13: REVERT v10(0x0), v10(0x0)",0x10,0,"0,v10,v10",REVERT,0,0,False,0,0,"0x10, 0x14"
    Begin block 0x14,0x14,0,0,0,0,0,False,0,0,"0x10, 0x14"
"    prev=[0x0], succ=[]",0x14,0,0,0,0,0,False,0,0,"0x10, 0x14"
    =================================,0x14,0,0,0,0,0,False,0,0,"0x10, 0x14"
    0x16: v16(0x80) = CONST ,0x14,v16,0,CONST,0,0,False,0x80,0,"0x10, 0x14"
    0x18: v18 = MLOAD v16(0x80),0x14,v18,"0,v16",MLOAD,0,0,False,0,0&m0x80,"0x10, 0x14"
    0x19: v19(0x414) = CONST ,0x14,v19,0,CONST,0,0,False,0x414,0,"0x10, 0x14"
    0x1c: v1c(0x3d) = CONST ,0x14,v1c,0,CONST,0,0,False,0x3d,0,"0x10, 0x14"
    0x1f: v1f(0x0) = CONST ,0x14,v1f,0,CONST,0,0,False,0x0,0,"0x10, 0x14"
"    0x21: CODECOPY v1f(0x0), v1c(0x3d), v19(0x414)",0x14,0,"0,v1f,v1c,v19",CODECOPY,0,0,False,0,0,"0x10, 0x14"
    0x22: v22(0x0) = CONST ,0x14,v22,0,CONST,0,0,False,0x0,0,"0x10, 0x14"
    0x26: v26(0xc6) = CONST ,0x14,v26,0,CONST,0,0,False,0xc6,0,"0x10, 0x14"
"    0x28: v28(0xc6) = ADD v26(0xc6), v22(0x0)",0x14,v28,"0,v26,v22",ADD,0,0,False,0xc6,0,"0x10, 0x14"
"    0x29: MSTORE v28(0xc6), v18",0x14,0,"0,v28,v18",MSTORE,0,0,False,0,0,"0x10, 0x14"
    0x2c: v2c(0x162) = CONST ,0x14,v2c,0,CONST,0,0,False,0x162,0,"0x10, 0x14"
"    0x2f: v2f(0x162) = ADD v2c(0x162), v22(0x0)",0x14,v2f,"0,v2c,v22",ADD,0,0,False,0x162,0,"0x10, 0x14"
"    0x30: MSTORE v2f(0x162), v18",0x14,0,"0,v2f,v18",MSTORE,0,0,False,0,0,"0x10, 0x14"
    0x31: v31(0x1df) = CONST ,0x14,v31,0,CONST,0,0,False,0x1df,0,"0x10, 0x14"
"    0x34: v34(0x1df) = ADD v31(0x1df), v22(0x0)",0x14,v34,"0,v31,v22",ADD,0,0,False,0x1df,0,"0x10, 0x14"
"    0x35: MSTORE v34(0x1df), v18",0x14,0,"0,v34,v18",MSTORE,0,0,False,0,0,"0x10, 0x14"
    0x36: v36(0x414) = CONST ,0x14,v36,0,CONST,0,0,False,0x414,0,"0x10, 0x14"
    0x39: v39(0x0) = CONST ,0x14,v39,0,CONST,0,0,False,0x0,0,"0x10, 0x14"
"    0x3b: RETURN v39(0x0), v36(0x414)",0x14,0,"0,v39,v36",RETURN,0,0,False,0,0,"0x10, 0x14"
},0x14,0,0,0,0,0,False,0,0,"0x10, 0x14"
