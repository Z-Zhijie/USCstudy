3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xf, 0xb]",0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xf, 0xb"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xf, 0xb"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xf, 0xb"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xf, 0xb"
    0x8: v8(0xf) = CONST ,0x0,v8,0,CONST,0,0,False,0xf,0,"0xf, 0xb"
"    0xa: JUMPI v8(0xf), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xf, 0xb"
    Begin block 0xf,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[]",0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x11: v11(0x6d) = CONST ,0xf,v11,0,CONST,0,0,False,0x6d,0,"0xf, 0xb"
    0x14: v14(0x1d) = CONST ,0xf,v14,0,CONST,0,0,False,0x1d,0,"0xf, 0xb"
    0x16: v16(0x0) = CONST ,0xf,v16,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0x18: CODECOPY v16(0x0), v14(0x1d), v11(0x6d)",0xf,0,"0,v16,v14,v11",CODECOPY,0,0,False,0,0,"0xf, 0xb"
    0x19: v19(0x0) = CONST ,0xf,v19,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0x1b: RETURN v19(0x0), v11(0x6d)",0xf,0,"0,v19,v11",RETURN,0,0,False,0,0,"0xf, 0xb"
    Begin block 0xb,0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[]",0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0xb: vb(0x0) = CONST ,0xb,vb,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0xe: REVERT vb(0x0), vb(0x0)",0xb,0,"0,vb,vb",REVERT,0,0,False,0,0,"0xf, 0xb"
},0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
