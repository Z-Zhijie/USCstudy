3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x12: v12(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd) = CONST ,0x10,v12,0,CONST,0,0,False,0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd,0,"0xc, 0x10"
    0x27: v27(0x0) = CONST ,0x10,v27,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
    0x2a: v2a(0x100) = CONST ,0x10,v2a,0,CONST,0,0,False,0x100,0,"0xc, 0x10"
"    0x2d: v2d(0x1) = EXP v2a(0x100), v27(0x0)",0x10,v2d,"0,v2a,v27",EXP,0,0,False,0x1,0,"0xc, 0x10"
    0x2f: v2f = SLOAD v27(0x0),0x10,v2f,"0,v27",SLOAD,0,0,False,0,0,"0xc, 0x10"
    0x31: v31(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x10,v31,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
"    0x46: v46(0xffffffffffffffffffffffffffffffffffffffff) = MUL v31(0xffffffffffffffffffffffffffffffffffffffff), v2d(0x1)",0x10,v46,"0,v31,v2d",MUL,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
    0x47: v47(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v46(0xffffffffffffffffffffffffffffffffffffffff),0x10,v47,"0,v46",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0xc, 0x10"
"    0x48: v48 = AND v47(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v2f",0x10,v48,"0,v47,v2f",AND,0,0,False,0,0,"0xc, 0x10"
    0x4b: v4b(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x10,v4b,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
"    0x60: v60(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd) = AND v4b(0xffffffffffffffffffffffffffffffffffffffff), v12(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd)",0x10,v60,"0,v4b,v12",AND,0,0,False,0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd,0,"0xc, 0x10"
"    0x61: v61(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd) = MUL v60(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd), v2d(0x1)",0x10,v61,"0,v60,v2d",MUL,0,0,False,0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd,0,"0xc, 0x10"
"    0x62: v62 = OR v61(0x1a678da709f209a94c94bd9ceb63ecdfeadf3cfd), v48",0x10,v62,"0,v61,v48",OR,0,0,False,0,0,"0xc, 0x10"
"    0x64: SSTORE v27(0x0), v62",0x10,0,"0,v27,v62",SSTORE,0,0,False,0,0,"0xc, 0x10"
    0x66: v66 = CALLER ,0x10,v66,0,CALLER,0,0,True,0,0,"0xc, 0x10"
    0x67: v67(0x1) = CONST ,0x10,v67,0,CONST,0,0,False,0x1,0,"0xc, 0x10"
    0x69: v69(0x0) = CONST ,0x10,v69,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
    0x6b: v6b(0x100) = CONST ,0x10,v6b,0,CONST,0,0,False,0x100,0,"0xc, 0x10"
"    0x6e: v6e(0x1) = EXP v6b(0x100), v69(0x0)",0x10,v6e,"0,v6b,v69",EXP,0,0,False,0x1,0,"0xc, 0x10"
    0x70: v70 = SLOAD v67(0x1),0x10,v70,"0,v67",SLOAD,0,0,False,0,0,"0xc, 0x10"
    0x72: v72(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x10,v72,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
"    0x87: v87(0xffffffffffffffffffffffffffffffffffffffff) = MUL v72(0xffffffffffffffffffffffffffffffffffffffff), v6e(0x1)",0x10,v87,"0,v72,v6e",MUL,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
    0x88: v88(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v87(0xffffffffffffffffffffffffffffffffffffffff),0x10,v88,"0,v87",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0xc, 0x10"
"    0x89: v89 = AND v88(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v70",0x10,v89,"0,v88,v70",AND,0,0,False,0,0,"0xc, 0x10"
    0x8c: v8c(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x10,v8c,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc, 0x10"
"    0xa1: va1 = AND v8c(0xffffffffffffffffffffffffffffffffffffffff), v66",0x10,va1,"0,v8c,v66",AND,0,0,True,0,0,"0xc, 0x10"
"    0xa2: va2 = MUL va1, v6e(0x1)",0x10,va2,"0,va1,v6e",MUL,0,0,False,0,0,"0xc, 0x10"
"    0xa3: va3 = OR va2, v89",0x10,va3,"0,va2,v89",OR,0,0,False,0,0,"0xc, 0x10"
"    0xa5: SSTORE v67(0x1), va3",0x10,0,"0,v67,va3",SSTORE,0,0,False,0,0,"0xc, 0x10"
    0xa7: va7(0x39f) = CONST ,0x10,va7,0,CONST,0,0,False,0x39f,0,"0xc, 0x10"
    0xab: vab(0xb5) = CONST ,0x10,vab,0,CONST,0,0,False,0xb5,0,"0xc, 0x10"
    0xae: vae(0x0) = CONST ,0x10,vae,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xb0: CODECOPY vae(0x0), vab(0xb5), va7(0x39f)",0x10,0,"0,vae,vab,va7",CODECOPY,0,0,False,0,0,"0xc, 0x10"
    0xb1: vb1(0x0) = CONST ,0x10,vb1,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xb3: RETURN vb1(0x0), va7(0x39f)",0x10,0,"0,vb1,va7",RETURN,0,0,False,0,0,"0xc, 0x10"
},0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
