3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xf, 0xb]",0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x0: v0(0x60) = CONST ,0x0,v0,0,CONST,0,0,False,0x60,0,"0xf, 0xb"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
"    0x4: MSTORE v2(0x40), v0(0x60)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xf, 0xb"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xf, 0xb"
    0x6: v6 = ISZERO v5,0x0,v6,"0,v5",ISZERO,0,0,False,0,0,"0xf, 0xb"
    0x7: v7(0xf) = CONST ,0x0,v7,0,CONST,0,0,False,0xf,0,"0xf, 0xb"
"    0xa: JUMPI v7(0xf), v6",0x0,0,"0,v7,v6",JUMPI,0,0,False,0,0,"0xf, 0xb"
    Begin block 0xf,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[]",0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x10: v10(0x40) = CONST ,0xf,v10,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
    0x12: v12 = MLOAD v10(0x40),0xf,v12,"0,v10",MLOAD,0,0,False,0,0&m0x40,"0xf, 0xb"
    0x13: v13(0x20) = CONST ,0xf,v13,0,CONST,0,0,False,0x20,0,"0xf, 0xb"
    0x16: v16(0x1764) = CONST ,0xf,v16,0,CONST,0,0,False,0x1764,0,"0xf, 0xb"
"    0x1c: v1c = ADD v1787(0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e), v12",0xf,v1c,"0,v1787,v12",ADD,0,0,False,0,0&m0x40+0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e,"0xf, 0xb"
    0x1d: v1d(0x40) = CONST ,0xf,v1d,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
"    0x1f: MSTORE v1d(0x40), v1c",0xf,0,"0,v1d,v1c",MSTORE,0,0,False,0,0,"0xf, 0xb"
    0x22: v22 = MLOAD v1787(0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e),0xf,v22,"0,v1787",MLOAD,0,0,False,0,0&m0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e,"0xf, 0xb"
    0x23: v23(0x1f4) = CONST ,0xf,v23,0,CONST,0,0,False,0x1f4,0,"0xf, 0xb"
    0x26: v26(0x7) = CONST ,0xf,v26,0,CONST,0,0,False,0x7,0,"0xf, 0xb"
"    0x28: SSTORE v26(0x7), v23(0x1f4)",0xf,0,"0,v26,v23",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x29: v29(0x0) = CONST ,0xf,v29,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
    0x2b: v2b(0x8) = CONST ,0xf,v2b,0,CONST,0,0,False,0x8,0,"0xf, 0xb"
"    0x2f: SSTORE v2b(0x8), v29(0x0)",0xf,0,"0,v2b,v29",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x30: v30(0x9) = CONST ,0xf,v30,0,CONST,0,0,False,0x9,0,"0xf, 0xb"
"    0x34: SSTORE v30(0x9), v29(0x0)",0xf,0,"0,v30,v29",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x35: v35(0xa) = CONST ,0xf,v35,0,CONST,0,0,False,0xa,0,"0xf, 0xb"
"    0x37: SSTORE v35(0xa), v29(0x0)",0xf,0,"0,v35,v29",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x38: v38(0x2) = CONST ,0xf,v38,0,CONST,0,0,False,0x2,0,"0xf, 0xb"
    0x3b: v3b = SLOAD v38(0x2),0xf,v3b,"0,v38",SLOAD,0,0,False,0,0,"0xf, 0xb"
    0x3c: v3c(0x1) = CONST ,0xf,v3c,0,CONST,0,0,False,0x1,0,"0xf, 0xb"
    0x3e: v3e(0xa0) = CONST ,0xf,v3e,0,CONST,0,0,False,0xa0,0,"0xf, 0xb"
    0x40: v40(0x2) = CONST ,0xf,v40,0,CONST,0,0,False,0x2,0,"0xf, 0xb"
"    0x42: v42(0x10000000000000000000000000000000000000000) = EXP v40(0x2), v3e(0xa0)",0xf,v42,"0,v40,v3e",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0xf, 0xb"
"    0x43: v43(0xffffffffffffffffffffffffffffffffffffffff) = SUB v42(0x10000000000000000000000000000000000000000), v3c(0x1)",0xf,v43,"0,v42,v3c",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xf, 0xb"
    0x44: v44 = CALLER ,0xf,v44,0,CALLER,0,0,True,0,0,"0xf, 0xb"
"    0x46: v46 = AND v43(0xffffffffffffffffffffffffffffffffffffffff), v44",0xf,v46,"0,v43,v44",AND,0,0,True,0,0,"0xf, 0xb"
    0x47: v47(0x1) = CONST ,0xf,v47,0,CONST,0,0,False,0x1,0,"0xf, 0xb"
    0x49: v49(0xa0) = CONST ,0xf,v49,0,CONST,0,0,False,0xa0,0,"0xf, 0xb"
    0x4b: v4b(0x2) = CONST ,0xf,v4b,0,CONST,0,0,False,0x2,0,"0xf, 0xb"
"    0x4d: v4d(0x10000000000000000000000000000000000000000) = EXP v4b(0x2), v49(0xa0)",0xf,v4d,"0,v4b,v49",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0xf, 0xb"
"    0x4e: v4e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d(0x10000000000000000000000000000000000000000), v47(0x1)",0xf,v4e,"0,v4d,v47",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xf, 0xb"
    0x4f: v4f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v4e(0xffffffffffffffffffffffffffffffffffffffff),0xf,v4f,"0,v4e",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0xf, 0xb"
"    0x52: v52 = AND v4f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v3b",0xf,v52,"0,v4f,v3b",AND,0,0,False,0,0,"0xf, 0xb"
"    0x53: v53 = OR v52, v46",0xf,v53,"0,v52,v46",OR,0,0,True,0,0,"0xf, 0xb"
"    0x56: SSTORE v38(0x2), v53",0xf,0,"0,v38,v53",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x57: v57(0x3) = CONST ,0xf,v57,0,CONST,0,0,False,0x3,0,"0xf, 0xb"
    0x5a: v5a = SLOAD v57(0x3),0xf,v5a,"0,v57",SLOAD,0,0,False,0,0,"0xf, 0xb"
"    0x5e: v5e = AND v22, v43(0xffffffffffffffffffffffffffffffffffffffff)",0xf,v5e,"0,v22,v43",AND,0,0,False,0,0,"0xf, 0xb"
"    0x60: v60 = AND v5a, v4f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000)",0xf,v60,"0,v5a,v4f",AND,0,0,False,0,0,"0xf, 0xb"
"    0x61: v61 = OR v60, v5e",0xf,v61,"0,v60,v5e",OR,0,0,False,0,0,"0xf, 0xb"
"    0x63: SSTORE v57(0x3), v61",0xf,0,"0,v57,v61",SSTORE,0,0,False,0,0,"0xf, 0xb"
    0x66: v66(0x16f0) = CONST ,0xf,v66,0,CONST,0,0,False,0x16f0,0,"0xf, 0xb"
    0x6a: v6a(0x74) = CONST ,0xf,v6a,0,CONST,0,0,False,0x74,0,"0xf, 0xb"
    0x6d: v6d(0x0) = CONST ,0xf,v6d,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0x6f: CODECOPY v6d(0x0), v6a(0x74), v66(0x16f0)",0xf,0,"0,v6d,v6a,v66",CODECOPY,0,0,False,0,0,"0xf, 0xb"
    0x70: v70(0x0) = CONST ,0xf,v70,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0x72: RETURN v70(0x0), v66(0x16f0)",0xf,0,"0,v70,v66",RETURN,0,0,False,0,0,"0xf, 0xb"
    0x1787: v1787(0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e) = CONST ,0xf,v1787,0,CONST,0,0,False,0x00000000000000000000000070250fcfef983c9b912c8eefb7021b4b7bae836e,0,"0xf, 0xb"
    Begin block 0xb,0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[]",0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0xb: vb(0x0) = CONST ,0xb,vb,0,CONST,0,0,False,0x0,0,"0xf, 0xb"
"    0xe: REVERT vb(0x0), vb(0x0)",0xb,0,"0,vb,vb",REVERT,0,0,False,0,0,"0xf, 0xb"
},0xb,0,0,0,0,0,False,0,0,"0xf, 0xb"
