3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x37, 0x3b]",0x0,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x37, 0x3b"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x37, 0x3b"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x5: v5(0x251c) = CONST ,0x0,v5,0,CONST,0,0,False,0x251c,0,"0x37, 0x3b"
    0x8: v8(0x9e) = CONST ,0x0,v8,0,CONST,0,0,False,0x9e,0,"0x37, 0x3b"
"    0xa: SSTORE v8(0x9e), v5(0x251c)",0x0,0,"0,v8,v5",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0xb: vb(0x8ac7230489e80000) = CONST ,0x0,vb,0,CONST,0,0,False,0x8ac7230489e80000,0,"0x37, 0x3b"
    0x14: v14(0x9f) = CONST ,0x0,v14,0,CONST,0,0,False,0x9f,0,"0x37, 0x3b"
"    0x16: SSTORE v14(0x9f), vb(0x8ac7230489e80000)",0x0,0,"0,v14,vb",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x17: v17(0x84595161401484a000000) = CONST ,0x0,v17,0,CONST,0,0,False,0x84595161401484a000000,0,"0x37, 0x3b"
    0x23: v23(0xa0) = CONST ,0x0,v23,0,CONST,0,0,False,0xa0,0,"0x37, 0x3b"
"    0x25: SSTORE v23(0xa0), v17(0x84595161401484a000000)",0x0,0,"0,v23,v17",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x26: v26(0xa9) = CONST ,0x0,v26,0,CONST,0,0,False,0xa9,0,"0x37, 0x3b"
    0x29: v29 = SLOAD v26(0xa9),0x0,v29,"0,v26",SLOAD,0,0,False,0,0,"0x37, 0x3b"
    0x2a: v2a(0xff) = CONST ,0x0,v2a,0,CONST,0,0,False,0xff,0,"0x37, 0x3b"
    0x2c: v2c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v2a(0xff),0x0,v2c,"0,v2a",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0x37, 0x3b"
"    0x2d: v2d = AND v2c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v29",0x0,v2d,"0,v2c,v29",AND,0,0,False,0,0,"0x37, 0x3b"
"    0x2f: SSTORE v26(0xa9), v2d",0x0,0,"0,v26,v2d",SSTORE,0,0,False,0,0,"0x37, 0x3b"
    0x30: v30 = CALLVALUE ,0x0,v30,0,CALLVALUE,0,0,False,0,0,"0x37, 0x3b"
    0x32: v32 = ISZERO v30,0x0,v32,"0,v30",ISZERO,0,0,False,0,0,"0x37, 0x3b"
    0x33: v33(0x3b) = CONST ,0x0,v33,0,CONST,0,0,False,0x3b,0,"0x37, 0x3b"
"    0x36: JUMPI v33(0x3b), v32",0x0,0,"0,v33,v32",JUMPI,0,0,False,0,0,"0x37, 0x3b"
    Begin block 0x37,0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
"    prev=[0x0], succ=[]",0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    =================================,0x37,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    0x37: v37(0x0) = CONST ,0x37,v37,0,CONST,0,0,False,0x0,0,"0x37, 0x3b"
"    0x3a: REVERT v37(0x0), v37(0x0)",0x37,0,"0,v37,v37",REVERT,0,0,False,0,0,"0x37, 0x3b"
    Begin block 0x3b,0x3b,0,0,0,0,0,False,0,0,"0x37, 0x3b"
"    prev=[0x0], succ=[]",0x3b,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    =================================,0x3b,0,0,0,0,0,False,0,0,"0x37, 0x3b"
    0x3d: v3d(0x5b9b) = CONST ,0x3b,v3d,0,CONST,0,0,False,0x5b9b,0,"0x37, 0x3b"
    0x41: v41(0x4c) = CONST ,0x3b,v41,0,CONST,0,0,False,0x4c,0,"0x37, 0x3b"
    0x45: v45(0x0) = CONST ,0x3b,v45,0,CONST,0,0,False,0x0,0,"0x37, 0x3b"
"    0x47: CODECOPY v45(0x0), v41(0x4c), v3d(0x5b9b)",0x3b,0,"0,v45,v41,v3d",CODECOPY,0,0,False,0,0,"0x37, 0x3b"
    0x48: v48(0x0) = CONST ,0x3b,v48,0,CONST,0,0,False,0x0,0,"0x37, 0x3b"
"    0x4a: RETURN v48(0x0), v3d(0x5b9b)",0x3b,0,"0,v48,v3d",RETURN,0,0,False,0,0,"0x37, 0x3b"
},0x3b,0,0,0,0,0,False,0,0,"0x37, 0x3b"
