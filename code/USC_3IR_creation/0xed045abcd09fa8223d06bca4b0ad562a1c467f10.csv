3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x46, 0x4a]",0x0,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x46, 0x4a"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x46, 0x4a"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
    0x8: v8 = SLOAD v5(0x0),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x46, 0x4a"
    0x9: v9(0x1) = CONST ,0x0,v9,0,CONST,0,0,False,0x1,0,"0x46, 0x4a"
    0xb: vb(0xa0) = CONST ,0x0,vb,0,CONST,0,0,False,0xa0,0,"0x46, 0x4a"
    0xd: vd(0x2) = CONST ,0x0,vd,0,CONST,0,0,False,0x2,0,"0x46, 0x4a"
"    0xf: vf(0x10000000000000000000000000000000000000000) = EXP vd(0x2), vb(0xa0)",0x0,vf,"0,vd,vb",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x46, 0x4a"
"    0x10: v10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf(0x10000000000000000000000000000000000000000), v9(0x1)",0x0,v10,"0,vf,v9",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x46, 0x4a"
    0x11: v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v10(0xffffffffffffffffffffffffffffffffffffffff),0x0,v11,"0,v10",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x46, 0x4a"
"    0x12: v12 = AND v11(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v8",0x0,v12,"0,v11,v8",AND,0,0,False,0,0,"0x46, 0x4a"
    0x13: v13 = CALLER ,0x0,v13,0,CALLER,0,0,True,0,0,"0x46, 0x4a"
"    0x14: v14 = OR v13, v12",0x0,v14,"0,v13,v12",OR,0,0,True,0,0,"0x46, 0x4a"
"    0x16: SSTORE v5(0x0), v14",0x0,0,"0,v5,v14",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x17: v17(0x3e8) = CONST ,0x0,v17,0,CONST,0,0,False,0x3e8,0,"0x46, 0x4a"
    0x1a: v1a(0x6) = CONST ,0x0,v1a,0,CONST,0,0,False,0x6,0,"0x46, 0x4a"
"    0x1c: SSTORE v1a(0x6), v17(0x3e8)",0x0,0,"0,v1a,v17",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x1d: v1d(0x8e1bc9bf040000) = CONST ,0x0,v1d,0,CONST,0,0,False,0x8e1bc9bf040000,0,"0x46, 0x4a"
    0x25: v25(0x7) = CONST ,0x0,v25,0,CONST,0,0,False,0x7,0,"0x46, 0x4a"
"    0x27: SSTORE v25(0x7), v1d(0x8e1bc9bf040000)",0x0,0,"0,v25,v1d",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x28: v28(0xe35fa931a00000) = CONST ,0x0,v28,0,CONST,0,0,False,0xe35fa931a00000,0,"0x46, 0x4a"
    0x30: v30(0x8) = CONST ,0x0,v30,0,CONST,0,0,False,0x8,0,"0x46, 0x4a"
"    0x32: SSTORE v30(0x8), v28(0xe35fa931a00000)",0x0,0,"0,v30,v28",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x33: v33(0x61b31ab352c0000) = CONST ,0x0,v33,0,CONST,0,0,False,0x61b31ab352c0000,0,"0x46, 0x4a"
    0x3c: v3c(0x9) = CONST ,0x0,v3c,0,CONST,0,0,False,0x9,0,"0x46, 0x4a"
"    0x3e: SSTORE v3c(0x9), v33(0x61b31ab352c0000)",0x0,0,"0,v3c,v33",SSTORE,0,0,False,0,0,"0x46, 0x4a"
    0x3f: v3f = CALLVALUE ,0x0,v3f,0,CALLVALUE,0,0,False,0,0,"0x46, 0x4a"
    0x41: v41 = ISZERO v3f,0x0,v41,"0,v3f",ISZERO,0,0,False,0,0,"0x46, 0x4a"
    0x42: v42(0x4a) = CONST ,0x0,v42,0,CONST,0,0,False,0x4a,0,"0x46, 0x4a"
"    0x45: JUMPI v42(0x4a), v41",0x0,0,"0,v42,v41",JUMPI,0,0,False,0,0,"0x46, 0x4a"
    Begin block 0x46,0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
"    prev=[0x0], succ=[]",0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    =================================,0x46,0,0,0,0,0,False,0,0,"0x46, 0x4a"
    0x46: v46(0x0) = CONST ,0x46,v46,0,CONST,0,0,False,0x0,0,"0x46, 0x4a"
"    0x49: REVERT v46(0x0), v46(0x0)",0x46,0,"0,v46,v46",REVERT,0,0,False,0,0,"0x46, 0x4a"
    Begin block 0x4a,0x4a,0,0,0,0,0,False,0,0,"0x46, 0x4a"
"    prev=[0x0], succ=[0x92, 0x90]",0x4a,0,0,0,0,0,False,0,0,"0x92, 0x90"
    =================================,0x4a,0,0,0,0,0,False,0,0,"0x92, 0x90"
    0x4c: v4c(0x40) = CONST ,0x4a,v4c,0,CONST,0,0,False,0x40,0,"0x92, 0x90"
    0x4e: v4e = MLOAD v4c(0x40),0x4a,v4e,"0,v4c",MLOAD,0,0,False,0,0&m0x40,"0x92, 0x90"
    0x4f: v4f(0xa0) = CONST ,0x4a,v4f,0,CONST,0,0,False,0xa0,0,"0x92, 0x90"
    0x52: v52(0x17c3) = CONST ,0x4a,v52,0,CONST,0,0,False,0x17c3,0,"0x92, 0x90"
"    0x56: CODECOPY v4e, v52(0x17c3), v4f(0xa0)",0x4a,0,"0,v4e,v52,v4f",CODECOPY,0,0,False,0,0,"0x92, 0x90"
"    0x58: v58 = ADD v4e, v4f(0xa0)",0x4a,v58,"0,v4e,v4f",ADD,0,0,False,0,0&m0x40+0xa0,"0x92, 0x90"
    0x59: v59(0x40) = CONST ,0x4a,v59,0,CONST,0,0,False,0x40,0,"0x92, 0x90"
"    0x5d: MSTORE v59(0x40), v58",0x4a,0,"0,v59,v58",MSTORE,0,0,False,0,0,"0x92, 0x90"
    0x5f: v5f = MLOAD v4e,0x4a,v5f,"0,v4e",MLOAD,0,0,False,0,0,"0x92, 0x90"
    0x60: v60(0x20) = CONST ,0x4a,v60,0,CONST,0,0,False,0x20,0,"0x92, 0x90"
"    0x63: v63 = ADD v4e, v60(0x20)",0x4a,v63,"0,v4e,v60",ADD,0,0,False,0,0&m0x40+0x20,"0x92, 0x90"
    0x64: v64 = MLOAD v63,0x4a,v64,"0,v63",MLOAD,0,0,False,0,0,"0x92, 0x90"
"    0x67: v67 = ADD v4e, v59(0x40)",0x4a,v67,"0,v4e,v59",ADD,0,0,False,0,0&m0x40+0x40,"0x92, 0x90"
    0x68: v68 = MLOAD v67,0x4a,v68,"0,v67",MLOAD,0,0,False,0,0,"0x92, 0x90"
    0x69: v69(0x60) = CONST ,0x4a,v69,0,CONST,0,0,False,0x60,0,"0x92, 0x90"
"    0x6c: v6c = ADD v4e, v69(0x60)",0x4a,v6c,"0,v4e,v69",ADD,0,0,False,0,0&m0x40+0x60,"0x92, 0x90"
    0x6d: v6d = MLOAD v6c,0x4a,v6d,"0,v6c",MLOAD,0,0,False,0,0,"0x92, 0x90"
    0x6e: v6e(0x80) = CONST ,0x4a,v6e,0,CONST,0,0,False,0x80,0,"0x92, 0x90"
"    0x72: v72 = ADD v4e, v6e(0x80)",0x4a,v72,"0,v4e,v6e",ADD,0,0,False,0,0&m0x40+0x80,"0x92, 0x90"
    0x73: v73 = MLOAD v72,0x4a,v73,"0,v72",MLOAD,0,0,False,0,0,"0x92, 0x90"
    0x79: v79(0x0) = CONST ,0x4a,v79,0,CONST,0,0,False,0x0,0,"0x92, 0x90"
    0x80: v80(0x1) = CONST ,0x4a,v80,0,CONST,0,0,False,0x1,0,"0x92, 0x90"
    0x82: v82(0xa0) = CONST ,0x4a,v82,0,CONST,0,0,False,0xa0,0,"0x92, 0x90"
    0x84: v84(0x2) = CONST ,0x4a,v84,0,CONST,0,0,False,0x2,0,"0x92, 0x90"
"    0x86: v86(0x10000000000000000000000000000000000000000) = EXP v84(0x2), v82(0xa0)",0x4a,v86,"0,v84,v82",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x92, 0x90"
"    0x87: v87(0xffffffffffffffffffffffffffffffffffffffff) = SUB v86(0x10000000000000000000000000000000000000000), v80(0x1)",0x4a,v87,"0,v86,v80",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x92, 0x90"
"    0x89: v89 = AND v5f, v87(0xffffffffffffffffffffffffffffffffffffffff)",0x4a,v89,"0,v5f,v87",AND,0,0,False,0,0,"0x92, 0x90"
    0x8a: v8a = ISZERO v89,0x4a,v8a,"0,v89",ISZERO,0,0,False,0,0,"0x92, 0x90"
    0x8b: v8b = ISZERO v8a,0x4a,v8b,"0,v8a",ISZERO,0,0,False,0,0,"0x92, 0x90"
    0x8c: v8c(0x92) = CONST ,0x4a,v8c,0,CONST,0,0,False,0x92,0,"0x92, 0x90"
"    0x8f: JUMPI v8c(0x92), v8b",0x4a,0,"0,v8c,v8b",JUMPI,0,0,False,0,0,"0x92, 0x90"
    Begin block 0x92,0x92,0,0,0,0,0,False,0,0,"0x92, 0x90"
"    prev=[0x4a, 0x90], succ=[]",0x92,0,0,0,0,0,False,0,0,"0x92, 0x90"
    =================================,0x92,0,0,0,0,0,False,0,0,"0x92, 0x90"
"    0x92_0x0: v92_0 = PHI v5f, v91",0x92,v92_0,"0,v5f,v91",PHI,0,0,False,0,0,"0x92, 0x90"
    0x93: v93(0x0) = CONST ,0x92,v93,0,CONST,0,0,False,0x0,0,"0x92, 0x90"
    0x96: v96 = SLOAD v93(0x0),0x92,v96,"0,v93",SLOAD,0,0,False,0,0,"0x92, 0x90"
    0x97: v97(0x1) = CONST ,0x92,v97,0,CONST,0,0,False,0x1,0,"0x92, 0x90"
    0x99: v99(0xa0) = CONST ,0x92,v99,0,CONST,0,0,False,0xa0,0,"0x92, 0x90"
    0x9b: v9b(0x2) = CONST ,0x92,v9b,0,CONST,0,0,False,0x2,0,"0x92, 0x90"
"    0x9d: v9d(0x10000000000000000000000000000000000000000) = EXP v9b(0x2), v99(0xa0)",0x92,v9d,"0,v9b,v99",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x92, 0x90"
"    0x9e: v9e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9d(0x10000000000000000000000000000000000000000), v97(0x1)",0x92,v9e,"0,v9d,v97",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x92, 0x90"
"    0xa1: va1 = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v92_0",0x92,va1,"0,v9e,v92_0",AND,0,0,False,0,0,"0x92, 0x90"
    0xa2: va2(0x1) = CONST ,0x92,va2,0,CONST,0,0,False,0x1,0,"0x92, 0x90"
    0xa4: va4(0xa0) = CONST ,0x92,va4,0,CONST,0,0,False,0xa0,0,"0x92, 0x90"
    0xa6: va6(0x2) = CONST ,0x92,va6,0,CONST,0,0,False,0x2,0,"0x92, 0x90"
"    0xa8: va8(0x10000000000000000000000000000000000000000) = EXP va6(0x2), va4(0xa0)",0x92,va8,"0,va6,va4",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x92, 0x90"
"    0xa9: va9(0xffffffffffffffffffffffffffffffffffffffff) = SUB va8(0x10000000000000000000000000000000000000000), va2(0x1)",0x92,va9,"0,va8,va2",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x92, 0x90"
    0xaa: vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT va9(0xffffffffffffffffffffffffffffffffffffffff),0x92,vaa,"0,va9",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x92, 0x90"
"    0xad: vad = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v96",0x92,vad,"0,vaa,v96",AND,0,0,False,0,0,"0x92, 0x90"
"    0xae: vae = OR vad, va1",0x92,vae,"0,vad,va1",OR,0,0,False,0,0,"0x92, 0x90"
"    0xb0: SSTORE v93(0x0), vae",0x92,0,"0,v93,vae",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xb1: vb1(0x4) = CONST ,0x92,vb1,0,CONST,0,0,False,0x4,0,"0x92, 0x90"
    0xb4: vb4 = SLOAD vb1(0x4),0x92,vb4,"0,vb1",SLOAD,0,0,False,0,0,"0x92, 0x90"
    0xb5: vb5(0xff) = CONST ,0x92,vb5,0,CONST,0,0,False,0xff,0,"0x92, 0x90"
    0xb7: vb7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT vb5(0xff),0x92,vb7,"0,vb5",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0x92, 0x90"
"    0xb8: vb8 = AND vb7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), vb4",0x92,vb8,"0,vb7,vb4",AND,0,0,False,0,0,"0x92, 0x90"
"    0xba: SSTORE vb1(0x4), vb8",0x92,0,"0,vb1,vb8",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xbb: vbb(0xd) = CONST ,0x92,vbb,0,CONST,0,0,False,0xd,0,"0x92, 0x90"
    0xbe: vbe = SLOAD vbb(0xd),0x92,vbe,"0,vbb",SLOAD,0,0,False,0,0,"0x92, 0x90"
"    0xc0: vc0 = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vbe",0x92,vc0,"0,vaa,vbe",AND,0,0,False,0,0,"0x92, 0x90"
"    0xc3: vc3(0x0) = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v79(0x0)",0x92,vc3,"0,v9e,v79",AND,0,0,False,0x0,0,"0x92, 0x90"
"    0xc7: vc7 = OR vc3(0x0), vc0",0x92,vc7,"0,vc3,vc0",OR,0,0,False,0,0,"0x92, 0x90"
"    0xca: SSTORE vbb(0xd), vc7",0x92,0,"0,vbb,vc7",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xcb: vcb(0xe) = CONST ,0x92,vcb,0,CONST,0,0,False,0xe,0,"0x92, 0x90"
    0xce: vce = SLOAD vcb(0xe),0x92,vce,"0,vcb",SLOAD,0,0,False,0,0,"0x92, 0x90"
"    0xd0: vd0 = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vce",0x92,vd0,"0,vaa,vce",AND,0,0,False,0,0,"0x92, 0x90"
"    0xd3: vd3 = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v64",0x92,vd3,"0,v9e,v64",AND,0,0,False,0,0,"0x92, 0x90"
"    0xd7: vd7 = OR vd3, vd0",0x92,vd7,"0,vd3,vd0",OR,0,0,False,0,0,"0x92, 0x90"
"    0xda: SSTORE vcb(0xe), vd7",0x92,0,"0,vcb,vd7",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xdb: vdb(0xa) = CONST ,0x92,vdb,0,CONST,0,0,False,0xa,0,"0x92, 0x90"
    0xde: vde = SLOAD vdb(0xa),0x92,vde,"0,vdb",SLOAD,0,0,False,0,0,"0x92, 0x90"
"    0xe0: ve0 = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vde",0x92,ve0,"0,vaa,vde",AND,0,0,False,0,0,"0x92, 0x90"
"    0xe3: ve3 = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v68",0x92,ve3,"0,v9e,v68",AND,0,0,False,0,0,"0x92, 0x90"
"    0xe7: ve7 = OR ve3, ve0",0x92,ve7,"0,ve3,ve0",OR,0,0,False,0,0,"0x92, 0x90"
"    0xea: SSTORE vdb(0xa), ve7",0x92,0,"0,vdb,ve7",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xeb: veb(0xb) = CONST ,0x92,veb,0,CONST,0,0,False,0xb,0,"0x92, 0x90"
    0xee: vee = SLOAD veb(0xb),0x92,vee,"0,veb",SLOAD,0,0,False,0,0,"0x92, 0x90"
"    0xf0: vf0 = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vee",0x92,vf0,"0,vaa,vee",AND,0,0,False,0,0,"0x92, 0x90"
"    0xf3: vf3 = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v6d",0x92,vf3,"0,v9e,v6d",AND,0,0,False,0,0,"0x92, 0x90"
"    0xf7: vf7 = OR vf3, vf0",0x92,vf7,"0,vf3,vf0",OR,0,0,False,0,0,"0x92, 0x90"
"    0xfa: SSTORE veb(0xb), vf7",0x92,0,"0,veb,vf7",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0xfb: vfb(0xc) = CONST ,0x92,vfb,0,CONST,0,0,False,0xc,0,"0x92, 0x90"
    0xfe: vfe = SLOAD vfb(0xc),0x92,vfe,"0,vfb",SLOAD,0,0,False,0,0,"0x92, 0x90"
"    0x101: v101 = AND vaa(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vfe",0x92,v101,"0,vaa,vfe",AND,0,0,False,0,0,"0x92, 0x90"
"    0x103: v103 = AND v9e(0xffffffffffffffffffffffffffffffffffffffff), v73",0x92,v103,"0,v9e,v73",AND,0,0,False,0,0,"0x92, 0x90"
"    0x104: v104 = OR v103, v101",0x92,v104,"0,v103,v101",OR,0,0,False,0,0,"0x92, 0x90"
"    0x107: SSTORE vfb(0xc), v104",0x92,0,"0,vfb,v104",SSTORE,0,0,False,0,0,"0x92, 0x90"
    0x108: v108(0x16a5) = CONST ,0x92,v108,0,CONST,0,0,False,0x16a5,0,"0x92, 0x90"
    0x110: v110(0x11e) = CONST ,0x92,v110,0,CONST,0,0,False,0x11e,0,"0x92, 0x90"
"    0x119: CODECOPY v93(0x0), v110(0x11e), v108(0x16a5)",0x92,0,"0,v93,v110,v108",CODECOPY,0,0,False,0,0,"0x92, 0x90"
    0x11a: v11a(0x0) = CONST ,0x92,v11a,0,CONST,0,0,False,0x0,0,"0x92, 0x90"
"    0x11c: RETURN v11a(0x0), v108(0x16a5)",0x92,0,"0,v11a,v108",RETURN,0,0,False,0,0,"0x92, 0x90"
    Begin block 0x90,0x90,0,0,0,0,0,False,0,0,"0x92, 0x90"
"    prev=[0x4a], succ=[0x92]",0x90,0,0,0,0,0,False,0,0,0x92
    =================================,0x90,0,0,0,0,0,False,0,0,0x92
    0x91: v91 = CALLER ,0x90,v91,0,CALLER,0,0,True,0,0,0x92
},0x90,0,0,0,0,0,False,0,0,0x92
