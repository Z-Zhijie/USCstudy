3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x32, 0x36]",0x0,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x0: v0(0x60) = CONST ,0x0,v0,0,CONST,0,0,False,0x60,0,"0x32, 0x36"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x32, 0x36"
"    0x4: MSTORE v2(0x40), v0(0x60)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x32, 0x36"
    0x5: v5(0x7) = CONST ,0x0,v5,0,CONST,0,0,False,0x7,0,"0x32, 0x36"
    0x8: v8 = SLOAD v5(0x7),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x32, 0x36"
    0x9: v9(0xa0) = CONST ,0x0,v9,0,CONST,0,0,False,0xa0,0,"0x32, 0x36"
    0xb: vb(0x2) = CONST ,0x0,vb,0,CONST,0,0,False,0x2,0,"0x32, 0x36"
"    0xd: vd(0x10000000000000000000000000000000000000000) = EXP vb(0x2), v9(0xa0)",0x0,vd,"0,vb,v9",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x32, 0x36"
    0xe: ve(0xff) = CONST ,0x0,ve,0,CONST,0,0,False,0xff,0,"0x32, 0x36"
"    0x10: v10(0xff0000000000000000000000000000000000000000) = MUL ve(0xff), vd(0x10000000000000000000000000000000000000000)",0x0,v10,"0,ve,vd",MUL,0,0,False,0xff0000000000000000000000000000000000000000,0,"0x32, 0x36"
    0x11: v11(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff) = NOT v10(0xff0000000000000000000000000000000000000000),0x0,v11,"0,v10",NOT,0,0,False,0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff,0,"0x32, 0x36"
"    0x12: v12 = AND v11(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff), v8",0x0,v12,"0,v11,v8",AND,0,0,False,0,0,"0x32, 0x36"
    0x13: v13(0x10000000000000000000000000000000000000000) = CONST ,0x0,v13,0,CONST,0,0,False,0x10000000000000000000000000000000000000000,0,"0x32, 0x36"
"    0x29: v29 = OR v13(0x10000000000000000000000000000000000000000), v12",0x0,v29,"0,v13,v12",OR,0,0,False,0,0,"0x32, 0x36"
"    0x2b: SSTORE v5(0x7), v29",0x0,0,"0,v5,v29",SSTORE,0,0,False,0,0,"0x32, 0x36"
    0x2c: v2c = CALLVALUE ,0x0,v2c,0,CALLVALUE,0,0,False,0,0,"0x32, 0x36"
    0x2d: v2d = ISZERO v2c,0x0,v2d,"0,v2c",ISZERO,0,0,False,0,0,"0x32, 0x36"
    0x2e: v2e(0x36) = CONST ,0x0,v2e,0,CONST,0,0,False,0x36,0,"0x32, 0x36"
"    0x31: JUMPI v2e(0x36), v2d",0x0,0,"0,v2e,v2d",JUMPI,0,0,False,0,0,"0x32, 0x36"
    Begin block 0x32,0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
"    prev=[0x0], succ=[]",0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x32,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x32: v32(0x0) = CONST ,0x32,v32,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x35: REVERT v32(0x0), v32(0x0)",0x32,0,"0,v32,v32",REVERT,0,0,False,0,0,"0x32, 0x36"
    Begin block 0x36,0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
"    prev=[0x0], succ=[]",0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
    =================================,0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
    0x37: v37(0x2903) = CONST ,0x36,v37,0,CONST,0,0,False,0x2903,0,"0x32, 0x36"
    0x3b: v3b(0x45) = CONST ,0x36,v3b,0,CONST,0,0,False,0x45,0,"0x32, 0x36"
    0x3e: v3e(0x0) = CONST ,0x36,v3e,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x40: CODECOPY v3e(0x0), v3b(0x45), v37(0x2903)",0x36,0,"0,v3e,v3b,v37",CODECOPY,0,0,False,0,0,"0x32, 0x36"
    0x41: v41(0x0) = CONST ,0x36,v41,0,CONST,0,0,False,0x0,0,"0x32, 0x36"
"    0x43: RETURN v41(0x0), v37(0x2903)",0x36,0,"0,v41,v37",RETURN,0,0,False,0,0,"0x32, 0x36"
},0x36,0,0,0,0,0,False,0,0,"0x32, 0x36"
