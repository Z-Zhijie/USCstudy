3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x2b, 0x2f]",0x0,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x2b, 0x2f"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x2b, 0x2f"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0x5: v5(0x251c) = CONST ,0x0,v5,0,CONST,0,0,False,0x251c,0,"0x2b, 0x2f"
    0x8: v8(0x9a) = CONST ,0x0,v8,0,CONST,0,0,False,0x9a,0,"0x2b, 0x2f"
"    0xa: SSTORE v8(0x9a), v5(0x251c)",0x0,0,"0,v8,v5",SSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0xb: vb(0x1) = CONST ,0x0,vb,0,CONST,0,0,False,0x1,0,"0x2b, 0x2f"
    0xd: vd(0x9b) = CONST ,0x0,vd,0,CONST,0,0,False,0x9b,0,"0x2b, 0x2f"
"    0xf: SSTORE vd(0x9b), vb(0x1)",0x0,0,"0,vd,vb",SSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0x10: v10(0x0) = CONST ,0x0,v10,0,CONST,0,0,False,0x0,0,"0x2b, 0x2f"
    0x12: v12(0x9c) = CONST ,0x0,v12,0,CONST,0,0,False,0x9c,0,"0x2b, 0x2f"
"    0x16: SSTORE v12(0x9c), v10(0x0)",0x0,0,"0,v12,v10",SSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0x17: v17(0x9d) = CONST ,0x0,v17,0,CONST,0,0,False,0x9d,0,"0x2b, 0x2f"
"    0x19: SSTORE v17(0x9d), v10(0x0)",0x0,0,"0,v17,v10",SSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0x1a: v1a(0xa3) = CONST ,0x0,v1a,0,CONST,0,0,False,0xa3,0,"0x2b, 0x2f"
    0x1d: v1d = SLOAD v1a(0xa3),0x0,v1d,"0,v1a",SLOAD,0,0,False,0,0,"0x2b, 0x2f"
    0x1e: v1e(0xff) = CONST ,0x0,v1e,0,CONST,0,0,False,0xff,0,"0x2b, 0x2f"
    0x20: v20(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v1e(0xff),0x0,v20,"0,v1e",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0x2b, 0x2f"
"    0x21: v21 = AND v20(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v1d",0x0,v21,"0,v20,v1d",AND,0,0,False,0,0,"0x2b, 0x2f"
"    0x23: SSTORE v1a(0xa3), v21",0x0,0,"0,v1a,v21",SSTORE,0,0,False,0,0,"0x2b, 0x2f"
    0x24: v24 = CALLVALUE ,0x0,v24,0,CALLVALUE,0,0,False,0,0,"0x2b, 0x2f"
    0x26: v26 = ISZERO v24,0x0,v26,"0,v24",ISZERO,0,0,False,0,0,"0x2b, 0x2f"
    0x27: v27(0x2f) = CONST ,0x0,v27,0,CONST,0,0,False,0x2f,0,"0x2b, 0x2f"
"    0x2a: JUMPI v27(0x2f), v26",0x0,0,"0,v27,v26",JUMPI,0,0,False,0,0,"0x2b, 0x2f"
    Begin block 0x2b,0x2b,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
"    prev=[0x0], succ=[]",0x2b,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    =================================,0x2b,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    0x2b: v2b(0x0) = CONST ,0x2b,v2b,0,CONST,0,0,False,0x0,0,"0x2b, 0x2f"
"    0x2e: REVERT v2b(0x0), v2b(0x0)",0x2b,0,"0,v2b,v2b",REVERT,0,0,False,0,0,"0x2b, 0x2f"
    Begin block 0x2f,0x2f,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
"    prev=[0x0], succ=[]",0x2f,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    =================================,0x2f,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
    0x31: v31(0x4f75) = CONST ,0x2f,v31,0,CONST,0,0,False,0x4f75,0,"0x2b, 0x2f"
    0x35: v35(0x3f) = CONST ,0x2f,v35,0,CONST,0,0,False,0x3f,0,"0x2b, 0x2f"
    0x38: v38(0x0) = CONST ,0x2f,v38,0,CONST,0,0,False,0x0,0,"0x2b, 0x2f"
"    0x3a: CODECOPY v38(0x0), v35(0x3f), v31(0x4f75)",0x2f,0,"0,v38,v35,v31",CODECOPY,0,0,False,0,0,"0x2b, 0x2f"
    0x3b: v3b(0x0) = CONST ,0x2f,v3b,0,CONST,0,0,False,0x0,0,"0x2b, 0x2f"
"    0x3d: RETURN v3b(0x0), v31(0x4f75)",0x2f,0,"0,v3b,v31",RETURN,0,0,False,0,0,"0x2b, 0x2f"
},0x2f,0,0,0,0,0,False,0,0,"0x2b, 0x2f"
