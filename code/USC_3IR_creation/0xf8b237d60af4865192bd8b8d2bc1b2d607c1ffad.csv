3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x692]",0x0,0,0,0,0,0,False,0,0,0x692
    =================================,0x0,0,0,0,0,0,False,0,0,0x692
    0x0: v0(0x692) = CONST ,0x0,v0,0,CONST,0,0,False,0x692,0,0x692
    0x3: JUMP v0(0x692),0x0,0,"0,v0",JUMP,0,0,False,0,0,0x692
    Begin block 0x692,0x692,0,0,0,0,0,False,0,0,0x692
"    prev=[0x0], succ=[]",0x692,0,0,0,0,0,False,0,0,0x692
    =================================,0x692,0,0,0,0,0,False,0,0,0x692
    0x693: v693(0x4) = CONST ,0x692,v693,0,CONST,0,0,False,0x4,0,0x692
    0x696: v696(0x692) = CONST ,0x692,v696,0,CONST,0,0,False,0x692,0,0x692
"    0x699: v699(0x68e) = SUB v696(0x692), v693(0x4)",0x692,v699,"0,v696,v693",SUB,0,0,False,0x68e,0,0x692
    0x69a: v69a(0x4) = CONST ,0x692,v69a,0,CONST,0,0,False,0x4,0,0x692
    0x69d: v69d(0x0) = CONST ,0x692,v69d,0,CONST,0,0,False,0x0,0,0x692
"    0x69f: CODECOPY v69d(0x0), v69a(0x4), v699(0x68e)",0x692,0,"0,v69d,v69a,v699",CODECOPY,0,0,False,0,0,0x692
    0x6a0: v6a0(0x4) = CONST ,0x692,v6a0,0,CONST,0,0,False,0x4,0,0x692
    0x6a3: v6a3(0x692) = CONST ,0x692,v6a3,0,CONST,0,0,False,0x692,0,0x692
"    0x6a6: v6a6(0x68e) = SUB v6a3(0x692), v6a0(0x4)",0x692,v6a6,"0,v6a3,v6a0",SUB,0,0,False,0x68e,0,0x692
    0x6a7: v6a7(0x0) = CONST ,0x692,v6a7,0,CONST,0,0,False,0x0,0,0x692
"    0x6a9: RETURN v6a7(0x0), v6a6(0x68e)",0x692,0,"0,v6a7,v6a6",RETURN,0,0,False,0,0,0x692
},0x692,0,0,0,0,0,False,0,0,0x692
