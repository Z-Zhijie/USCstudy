3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x6cB0x10]",0x10,0,0,0,0,0,False,0,0,0x6cB0x10
    =================================,0x10,0,0,0,0,0,False,0,0,0x6cB0x10
    0x12: v12(0x67) = CONST ,0x10,v12,0,CONST,0,0,False,0x67,0,0x6cB0x10
    0x15: v15(0x40) = CONST ,0x10,v15,0,CONST,0,0,False,0x40,0,0x6cB0x10
    0x17: v17 = MLOAD v15(0x40),0x10,v17,"0,v15",MLOAD,0,0,False,0,0&m0x40,0x6cB0x10
    0x18: v18(0x20) = CONST ,0x10,v18,0,CONST,0,0,False,0x20,0,0x6cB0x10
"    0x1a: v1a = ADD v18(0x20), v17",0x10,v1a,"0,v18,v17",ADD,0,0,False,0,0&m0x40+0x20,0x6cB0x10
    0x1d: v1d(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST ,0x10,v1d,0,CONST,0,0,False,0x4f574e45525f534c4f5400000000000000000000000000000000000000000000,0,0x6cB0x10
"    0x3f: MSTORE v1a, v1d(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)",0x10,0&m0x40+0x20,"0,v1a,v1d",MSTORE,0,0,False,0,0&m0x40+0x20,0x6cB0x10
    0x41: v41(0xa) = CONST ,0x10,v41,0,CONST,0,0,False,0xa,0,0x6cB0x10
"    0x43: v43 = ADD v41(0xa), v1a",0x10,v43,"0,v41,v1a",ADD,0,0,False,0,0&m0x40+0x20+0xa,0x6cB0x10
    0x46: v46(0x40) = CONST ,0x10,v46,0,CONST,0,0,False,0x40,0,0x6cB0x10
    0x48: v48 = MLOAD v46(0x40),0x10,v48,"0,v46",MLOAD,0,0,False,0,0&m0x40,0x6cB0x10
    0x49: v49(0x20) = CONST ,0x10,v49,0,CONST,0,0,False,0x20,0,0x6cB0x10
"    0x4d: v4d(0x2a) = SUB v43, v48",0x10,v4d,"0,v43,v48",SUB,0,0,False,0x2a,0&m0x40+0x20+0xa-0x2a,0x6cB0x10
"    0x4e: v4e(0xa) = SUB v4d(0x2a), v49(0x20)",0x10,v4e,"0,v4d,v49",SUB,0,0,False,0xa,0&m0x40+0x20+0xa-0x2a-0xa,0x6cB0x10
"    0x50: MSTORE v48, v4e(0xa)",0x10,0&m0x40,"0,v48,v4e",MSTORE,0,0,False,0,0&m0x40,0x6cB0x10
    0x52: v52(0x40) = CONST ,0x10,v52,0,CONST,0,0,False,0x40,0,0x6cB0x10
"    0x54: MSTORE v52(0x40), v43",0x10,0,"0,v52,v43",MSTORE,0,0,False,0,0,0x6cB0x10
    0x56: v56(0xa) = MLOAD v48,0x10,v56,"0,v48",MLOAD,0,0,False,0xa,0&m0xa,0x6cB0x10
    0x58: v58(0x20) = CONST ,0x10,v58,0,CONST,0,0,False,0x20,0,0x6cB0x10
"    0x5a: v5a = ADD v58(0x20), v48",0x10,v5a,"0,v58,v48",ADD,0,0,False,0,0&m0x40+0x20,0x6cB0x10
"    0x5b: v5b = SHA3 v5a, v56(0xa)",0x10,v5b,"0,v5a,v56",SHA3,0,0,False,0,0,0x6cB0x10
    0x5c: v5c = CALLER ,0x10,v5c,0,CALLER,0,0,True,0,0,0x6cB0x10
    0x5d: v5d(0x6c) = CONST ,0x10,v5d,0,CONST,0,0,False,0x6c,0,0x6cB0x10
    0x60: v60(0x20) = CONST ,0x10,v60,0,CONST,0,0,False,0x20,0,0x6cB0x10
"    0x62: v62(0x6c00000000) = SHL v60(0x20), v5d(0x6c)",0x10,v62,"0,v60,v5d",SHL,0,0,False,0x6c00000000,0,0x6cB0x10
    0x63: v63(0x20) = CONST ,0x10,v63,0,CONST,0,0,False,0x20,0,0x6cB0x10
"    0x65: v65(0x6c) = SHR v63(0x20), v62(0x6c00000000)",0x10,v65,"0,v63,v62",SHR,0,0,False,0x6c,0,0x6cB0x10
"    0x66: JUMP v65(0x6c), v5c, v5b, v12(0x67)",0x10,0,"0,v65,v5c,v5b,v12",JUMP,0,0,False,0,0,0x6cB0x10
    Begin block 0x6cB0x10,0x6cB0x10,0,0,0,0,0,False,0,0,0x6cB0x10
"    prev=[0x10], succ=[0x8eB0x10]",0x6cB0x10,0,0,0,0,0,False,0,0,0x8eB0x10
    =================================,0x6cB0x10,0,0,0,0,0,False,0,0,0x8eB0x10
    0x6dS0x10: v6dV10(0x8a) = CONST ,0x6cB0x10,v6dV10,0,CONST,0,0,False,0x8a,0,0x8eB0x10
    0x71S0x10: v71V10(0x7f) = CONST ,0x6cB0x10,v71V10,0,CONST,0,0,False,0x7f,0,0x8eB0x10
    0x75S0x10: v75V10(0x8e) = CONST ,0x6cB0x10,v75V10,0,CONST,0,0,False,0x8e,0,0x8eB0x10
    0x78S0x10: v78V10(0x20) = CONST ,0x6cB0x10,v78V10,0,CONST,0,0,False,0x20,0,0x8eB0x10
"    0x7aS0x10: v7aV10(0x8e00000000) = SHL v78V10(0x20), v75V10(0x8e)",0x6cB0x10,v7aV10,"0,v78V10,v75V10",SHL,0,0,False,0x8e00000000,0,0x8eB0x10
    0x7bS0x10: v7bV10(0x20) = CONST ,0x6cB0x10,v7bV10,0,CONST,0,0,False,0x20,0,0x8eB0x10
"    0x7dS0x10: v7dV10(0x8e) = SHR v7bV10(0x20), v7aV10(0x8e00000000)",0x6cB0x10,v7dV10,"0,v7bV10,v7aV10",SHR,0,0,False,0x8e,0,0x8eB0x10
    0x7eS0x10: JUMP v7dV10(0x8e),0x6cB0x10,0,"0,v7dV10",JUMP,0,0,False,0,0,0x8eB0x10
    Begin block 0x8eB0x10,0x8eB0x10,0,0,0,0,0,False,0,0,0x8eB0x10
"    prev=[0x6cB0x10], succ=[0x7fB0x10]",0x8eB0x10,0,0,0,0,0,False,0,0,0x7fB0x10
    =================================,0x8eB0x10,0,0,0,0,0,False,0,0,0x7fB0x10
    0x8fS0x10: v8fV10(0x0) = CONST ,0x8eB0x10,v8fV10,0,CONST,0,0,False,0x0,0,0x7fB0x10
    0x92S0x10: v92V10(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x8eB0x10,v92V10,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7fB0x10
"    0xa7S0x10: va7V10 = AND v92V10(0xffffffffffffffffffffffffffffffffffffffff), v5c",0x8eB0x10,va7V10,"0,v92V10,v5c",AND,0,0,True,0,0,0x7fB0x10
    0xa8S0x10: va8V10(0x0) = CONST ,0x8eB0x10,va8V10,0,CONST,0,0,False,0x0,0,0x7fB0x10
"    0xaaS0x10: vaaV10 = SHL va8V10(0x0), va7V10",0x8eB0x10,vaaV10,"0,va8V10,va7V10",SHL,0,0,False,0,0,0x7fB0x10
    0xb0S0x10: JUMP v71V10(0x7f),0x8eB0x10,0,"0,v71V10",JUMP,0,0,False,0,0,0x7fB0x10
    Begin block 0x7fB0x10,0x7fB0x10,0,0,0,0,0,False,0,0,0x7fB0x10
"    prev=[0x8eB0x10], succ=[0xb1B0x10]",0x7fB0x10,0,0,0,0,0,False,0,0,0xb1B0x10
    =================================,0x7fB0x10,0,0,0,0,0,False,0,0,0xb1B0x10
    0x80S0x10: v80V10(0xb1) = CONST ,0x7fB0x10,v80V10,0,CONST,0,0,False,0xb1,0,0xb1B0x10
    0x83S0x10: v83V10(0x20) = CONST ,0x7fB0x10,v83V10,0,CONST,0,0,False,0x20,0,0xb1B0x10
"    0x85S0x10: v85V10(0xb100000000) = SHL v83V10(0x20), v80V10(0xb1)",0x7fB0x10,v85V10,"0,v83V10,v80V10",SHL,0,0,False,0xb100000000,0,0xb1B0x10
    0x86S0x10: v86V10(0x20) = CONST ,0x7fB0x10,v86V10,0,CONST,0,0,False,0x20,0,0xb1B0x10
"    0x88S0x10: v88V10(0xb1) = SHR v86V10(0x20), v85V10(0xb100000000)",0x7fB0x10,v88V10,"0,v86V10,v85V10",SHR,0,0,False,0xb1,0,0xb1B0x10
    0x89S0x10: JUMP v88V10(0xb1),0x7fB0x10,0,"0,v88V10",JUMP,0,0,False,0,0,0xb1B0x10
    Begin block 0xb1B0x10,0xb1B0x10,0,0,0,0,0,False,0,0,0xb1B0x10
"    prev=[0x7fB0x10], succ=[0x8aB0x10]",0xb1B0x10,0,0,0,0,0,False,0,0,0x8aB0x10
    =================================,0xb1B0x10,0,0,0,0,0,False,0,0,0x8aB0x10
    0xb2S0x10: vb2V10(0x0) = CONST ,0xb1B0x10,vb2V10,0,CONST,0,0,False,0x0,0,0x8aB0x10
"    0xb9S0x10: SSTORE v5b, vaaV10",0xb1B0x10,0,"0,v5b,vaaV10",SSTORE,0,0,False,0,0,0x8aB0x10
    0xbdS0x10: JUMP v6dV10(0x8a),0xb1B0x10,0,"0,v6dV10",JUMP,0,0,False,0,0,0x8aB0x10
    Begin block 0x8aB0x10,0x8aB0x10,0,0,0,0,0,False,0,0,0x8aB0x10
"    prev=[0xb1B0x10], succ=[0x67]",0x8aB0x10,0,0,0,0,0,False,0,0,0x67
    =================================,0x8aB0x10,0,0,0,0,0,False,0,0,0x67
    0x8dS0x10: JUMP v12(0x67),0x8aB0x10,0,"0,v12",JUMP,0,0,False,0,0,0x67
    Begin block 0x67,0x67,0,0,0,0,0,False,0,0,0x67
"    prev=[0x8aB0x10], succ=[0xbe]",0x67,0,0,0,0,0,False,0,0,0xbe
    =================================,0x67,0,0,0,0,0,False,0,0,0xbe
    0x68: v68(0xbe) = CONST ,0x67,v68,0,CONST,0,0,False,0xbe,0,0xbe
    0x6b: JUMP v68(0xbe),0x67,0,"0,v68",JUMP,0,0,False,0,0,0xbe
    Begin block 0xbe,0xbe,0,0,0,0,0,False,0,0,0xbe
"    prev=[0x67], succ=[]",0xbe,0,0,0,0,0,False,0,0,0xbe
    =================================,0xbe,0,0,0,0,0,False,0,0,0xbe
    0xbf: vbf(0x848) = CONST ,0xbe,vbf,0,CONST,0,0,False,0x848,0,0xbe
    0xc3: vc3(0xcd) = CONST ,0xbe,vc3,0,CONST,0,0,False,0xcd,0,0xbe
    0xc6: vc6(0x0) = CONST ,0xbe,vc6,0,CONST,0,0,False,0x0,0,0xbe
"    0xc8: CODECOPY vc6(0x0), vc3(0xcd), vbf(0x848)",0xbe,0,"0,vc6,vc3,vbf",CODECOPY,0,0,False,0,0,0xbe
    0xc9: vc9(0x0) = CONST ,0xbe,vc9,0,CONST,0,0,False,0x0,0,0xbe
"    0xcb: RETURN vc9(0x0), vbf(0x848)",0xbe,0,"0,vc9,vbf",RETURN,0,0,False,0,0,0xbe
},0xbe,0,0,0,0,0,False,0,0,0xbe
