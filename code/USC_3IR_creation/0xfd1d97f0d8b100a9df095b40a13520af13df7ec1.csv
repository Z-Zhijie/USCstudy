3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x1e, 0x22]",0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x1e, 0x22"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x1e, 0x22"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x5: v5(0x1) = CONST ,0x0,v5,0,CONST,0,0,False,0x1,0,"0x1e, 0x22"
    0x8: v8 = SLOAD v5(0x1),0x0,v8,"0,v5",SLOAD,0,0,False,0,0,"0x1e, 0x22"
    0x9: v9(0xa0) = CONST ,0x0,v9,0,CONST,0,0,False,0xa0,0,"0x1e, 0x22"
    0xb: vb(0x2) = CONST ,0x0,vb,0,CONST,0,0,False,0x2,0,"0x1e, 0x22"
"    0xd: vd(0x10000000000000000000000000000000000000000) = EXP vb(0x2), v9(0xa0)",0x0,vd,"0,vb,v9",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,"0x1e, 0x22"
    0xe: ve(0xffff) = CONST ,0x0,ve,0,CONST,0,0,False,0xffff,0,"0x1e, 0x22"
"    0x11: v11(0xffff0000000000000000000000000000000000000000) = MUL ve(0xffff), vd(0x10000000000000000000000000000000000000000)",0x0,v11,"0,ve,vd",MUL,0,0,False,0xffff0000000000000000000000000000000000000000,0,"0x1e, 0x22"
    0x12: v12(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff) = NOT v11(0xffff0000000000000000000000000000000000000000),0x0,v12,"0,v11",NOT,0,0,False,0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff,0,"0x1e, 0x22"
"    0x13: v13 = AND v12(0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff), v8",0x0,v13,"0,v12,v8",AND,0,0,False,0,0,"0x1e, 0x22"
"    0x15: SSTORE v5(0x1), v13",0x0,0,"0,v5,v13",SSTORE,0,0,False,0,0,"0x1e, 0x22"
    0x16: v16 = CALLVALUE ,0x0,v16,0,CALLVALUE,0,0,False,0,0,"0x1e, 0x22"
    0x18: v18 = ISZERO v16,0x0,v18,"0,v16",ISZERO,0,0,False,0,0,"0x1e, 0x22"
    0x19: v19(0x22) = CONST ,0x0,v19,0,CONST,0,0,False,0x22,0,"0x1e, 0x22"
"    0x1d: JUMPI v19(0x22), v18",0x0,0,"0,v19,v18",JUMPI,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x1e,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[]",0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    =================================,0x1e,0,0,0,0,0,False,0,0,"0x1e, 0x22"
    0x1e: v1e(0x0) = CONST ,0x1e,v1e,0,CONST,0,0,False,0x0,0,"0x1e, 0x22"
"    0x21: REVERT v1e(0x0), v1e(0x0)",0x1e,0,"0,v1e,v1e",REVERT,0,0,False,0,0,"0x1e, 0x22"
    Begin block 0x22,0x22,0,0,0,0,0,False,0,0,"0x1e, 0x22"
"    prev=[0x0], succ=[0x111]",0x22,0,0,0,0,0,False,0,0,0x111
    =================================,0x22,0,0,0,0,0,False,0,0,0x111
    0x24: v24(0x40) = CONST ,0x22,v24,0,CONST,0,0,False,0x40,0,0x111
    0x26: v26 = MLOAD v24(0x40),0x22,v26,"0,v24",MLOAD,0,0,False,0,0&m0x40,0x111
    0x27: v27(0x20) = CONST ,0x22,v27,0,CONST,0,0,False,0x20,0,0x111
    0x2a: v2a(0x5a35) = CONST ,0x22,v2a,0,CONST,0,0,False,0x5a35,0,0x111
"    0x31: v31 = ADD v5a58(0x0000000000000000000000000000000000000000000000000000000000000000), v26",0x22,v31,"0,v5a58,v26",ADD,0,0,False,0,0&m0x40+0x0000000000000000000000000000000000000000000000000000000000000000,0x111
    0x32: v32(0x40) = CONST ,0x22,v32,0,CONST,0,0,False,0x40,0,0x111
"    0x34: MSTORE v32(0x40), v31",0x22,0,"0,v32,v31",MSTORE,0,0,False,0,0,0x111
    0x35: v35 = MLOAD v5a58(0x0000000000000000000000000000000000000000000000000000000000000000),0x22,v35,"0,v5a58",MLOAD,0,0,False,0,0&m0x0000000000000000000000000000000000000000000000000000000000000000,0x111
    0x36: v36(0x0) = CONST ,0x22,v36,0,CONST,0,0,False,0x0,0,0x111
    0x39: v39 = SLOAD v36(0x0),0x22,v39,"0,v36",SLOAD,0,0,False,0,0,0x111
    0x3a: v3a = CALLER ,0x22,v3a,0,CALLER,0,0,True,0,0,0x111
    0x3b: v3b(0x1) = CONST ,0x22,v3b,0,CONST,0,0,False,0x1,0,0x111
    0x3d: v3d(0xa0) = CONST ,0x22,v3d,0,CONST,0,0,False,0xa0,0,0x111
    0x3f: v3f(0x2) = CONST ,0x22,v3f,0,CONST,0,0,False,0x2,0,0x111
"    0x41: v41(0x10000000000000000000000000000000000000000) = EXP v3f(0x2), v3d(0xa0)",0x22,v41,"0,v3f,v3d",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x111
"    0x42: v42(0xffffffffffffffffffffffffffffffffffffffff) = SUB v41(0x10000000000000000000000000000000000000000), v3b(0x1)",0x22,v42,"0,v41,v3b",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x111
    0x43: v43(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v42(0xffffffffffffffffffffffffffffffffffffffff),0x22,v43,"0,v42",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x111
"    0x46: v46 = AND v43(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v39",0x22,v46,"0,v43,v39",AND,0,0,False,0,0,0x111
"    0x47: v47 = OR v46, v3a",0x22,v47,"0,v46,v3a",OR,0,0,True,0,0,0x111
"    0x4a: SSTORE v36(0x0), v47",0x22,0,"0,v36,v47",SSTORE,0,0,False,0,0,0x111
    0x4b: v4b(0x1) = CONST ,0x22,v4b,0,CONST,0,0,False,0x1,0,0x111
    0x4e: v4e = SLOAD v4b(0x1),0x22,v4e,"0,v4b",SLOAD,0,0,False,0,0,0x111
"    0x50: v50 = AND v43(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v4e",0x22,v50,"0,v43,v4e",AND,0,0,False,0,0,0x111
"    0x52: SSTORE v4b(0x1), v50",0x22,0,"0,v4b,v50",SSTORE,0,0,False,0,0,0x111
    0x53: v53(0x3) = CONST ,0x22,v53,0,CONST,0,0,False,0x3,0,0x111
    0x56: v56 = SLOAD v53(0x3),0x22,v56,"0,v53",SLOAD,0,0,False,0,0,0x111
"    0x59: v59 = AND v43(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v56",0x22,v59,"0,v43,v56",AND,0,0,False,0,0,0x111
    0x5a: v5a(0x1) = CONST ,0x22,v5a,0,CONST,0,0,False,0x1,0,0x111
    0x5c: v5c(0xa0) = CONST ,0x22,v5c,0,CONST,0,0,False,0xa0,0,0x111
    0x5e: v5e(0x2) = CONST ,0x22,v5e,0,CONST,0,0,False,0x2,0,0x111
"    0x60: v60(0x10000000000000000000000000000000000000000) = EXP v5e(0x2), v5c(0xa0)",0x22,v60,"0,v5e,v5c",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x111
"    0x61: v61(0xffffffffffffffffffffffffffffffffffffffff) = SUB v60(0x10000000000000000000000000000000000000000), v5a(0x1)",0x22,v61,"0,v60,v5a",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x111
"    0x63: v63 = AND v35, v61(0xffffffffffffffffffffffffffffffffffffffff)",0x22,v63,"0,v35,v61",AND,0,0,False,0,0,0x111
"    0x64: v64 = OR v63, v59",0x22,v64,"0,v63,v59",OR,0,0,False,0,0,0x111
"    0x66: SSTORE v53(0x3), v64",0x22,0,"0,v53,v64",SSTORE,0,0,False,0,0,0x111
    0x69: v69(0x72) = CONST ,0x22,v69,0,CONST,0,0,False,0x72,0,0x111
    0x6d: v6d(0x111) = CONST ,0x22,v6d,0,CONST,0,0,False,0x111,0,0x111
    0x71: JUMP v6d(0x111),0x22,0,"0,v6d",JUMP,0,0,False,0,0,0x111
    0x5a58: v5a58(0x0000000000000000000000000000000000000000000000000000000000000000) = CONST ,0x22,v5a58,0,CONST,0,0,False,0x0000000000000000000000000000000000000000000000000000000000000000,0,0x111
    Begin block 0x111,0x111,0,0,0,0,0,False,0,0,0x111
"    prev=[0x22], succ=[0x72]",0x111,0,0,0,0,0,False,0,0,0x72
    =================================,0x111,0,0,0,0,0,False,0,0,0x72
    0x112: v112(0x40) = CONST ,0x111,v112,0,CONST,0,0,False,0x40,0,0x72
    0x114: v114 = MLOAD v112(0x40),0x111,v114,"0,v112",MLOAD,0,0,False,0,0&m0x40,0x72
    0x115: v115(0x718) = CONST ,0x111,v115,0,CONST,0,0,False,0x718,0,0x72
    0x119: v119(0x4c1e) = CONST ,0x111,v119,0,CONST,0,0,False,0x4c1e,0,0x72
"    0x11e: CODECOPY v114, v119(0x4c1e), v115(0x718)",0x111,0,"0,v114,v119,v115",CODECOPY,0,0,False,0,0,0x72
"    0x11f: v11f = ADD v115(0x718), v114",0x111,v11f,"0,v115,v114",ADD,0,0,False,0,0&m0x40+0x718,0x72
    0x121: JUMP v69(0x72),0x111,0,"0,v69",JUMP,0,0,False,0,0,0x72
    Begin block 0x72,0x72,0,0,0,0,0,False,0,0,0x72
"    prev=[0x111], succ=[0x86, 0x8f]",0x72,0,0,0,0,0,False,0,0,"0x86, 0x8f"
    =================================,0x72,0,0,0,0,0,False,0,0,"0x86, 0x8f"
    0x73: v73(0x40) = CONST ,0x72,v73,0,CONST,0,0,False,0x40,0,"0x86, 0x8f"
    0x75: v75 = MLOAD v73(0x40),0x72,v75,"0,v73",MLOAD,0,0,False,0,0&m0x40,"0x86, 0x8f"
"    0x78: v78(0x718) = SUB v11f, v75",0x72,v78,"0,v11f,v75",SUB,0,0,False,0x718,0&m0x40+0x718-0x718,"0x86, 0x8f"
    0x7a: v7a(0x0) = CONST ,0x72,v7a,0,CONST,0,0,False,0x0,0,"0x86, 0x8f"
"    0x7c: v7c = CREATE v7a(0x0), v75, v78(0x718)",0x72,v7c,"0,v7a,v75,v78",CREATE,0,0,False,0,0,"0x86, 0x8f"
    0x7e: v7e = ISZERO v7c,0x72,v7e,"0,v7c",ISZERO,0,0,False,0,0,"0x86, 0x8f"
    0x80: v80 = ISZERO v7e,0x72,v80,"0,v7e",ISZERO,0,0,False,0,0,"0x86, 0x8f"
    0x81: v81(0x8f) = CONST ,0x72,v81,0,CONST,0,0,False,0x8f,0,"0x86, 0x8f"
"    0x85: JUMPI v81(0x8f), v80",0x72,0,"0,v81,v80",JUMPI,0,0,False,0,0,"0x86, 0x8f"
    Begin block 0x86,0x86,0,0,0,0,0,False,0,0,"0x86, 0x8f"
"    prev=[0x72], succ=[]",0x86,0,0,0,0,0,False,0,0,"0x86, 0x8f"
    =================================,0x86,0,0,0,0,0,False,0,0,"0x86, 0x8f"
    0x86: v86 = RETURNDATASIZE ,0x86,v86,0,RETURNDATASIZE,0,0,False,0,0,"0x86, 0x8f"
    0x87: v87(0x0) = CONST ,0x86,v87,0,CONST,0,0,False,0x0,0,"0x86, 0x8f"
"    0x8a: RETURNDATACOPY v87(0x0), v87(0x0), v86",0x86,0,"0,v87,v87,v86",RETURNDATACOPY,0,0,False,0,0,"0x86, 0x8f"
    0x8b: v8b = RETURNDATASIZE ,0x86,v8b,0,RETURNDATASIZE,0,0,False,0,0,"0x86, 0x8f"
    0x8c: v8c(0x0) = CONST ,0x86,v8c,0,CONST,0,0,False,0x0,0,"0x86, 0x8f"
"    0x8e: REVERT v8c(0x0), v8b",0x86,0,"0,v8c,v8b",REVERT,0,0,False,0,0,"0x86, 0x8f"
    Begin block 0x8f,0x8f,0,0,0,0,0,False,0,0,"0x86, 0x8f"
"    prev=[0x72], succ=[0x122]",0x8f,0,0,0,0,0,False,0,0,0x122
    =================================,0x8f,0,0,0,0,0,False,0,0,0x122
    0x91: v91(0x2) = CONST ,0x8f,v91,0,CONST,0,0,False,0x2,0,0x122
    0x94: v94 = SLOAD v91(0x2),0x8f,v94,"0,v91",SLOAD,0,0,False,0,0,0x122
    0x95: v95(0x1) = CONST ,0x8f,v95,0,CONST,0,0,False,0x1,0,0x122
    0x97: v97(0xa0) = CONST ,0x8f,v97,0,CONST,0,0,False,0xa0,0,0x122
    0x99: v99(0x2) = CONST ,0x8f,v99,0,CONST,0,0,False,0x2,0,0x122
"    0x9b: v9b(0x10000000000000000000000000000000000000000) = EXP v99(0x2), v97(0xa0)",0x8f,v9b,"0,v99,v97",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x122
"    0x9c: v9c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9b(0x10000000000000000000000000000000000000000), v95(0x1)",0x8f,v9c,"0,v9b,v95",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x122
    0x9d: v9d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v9c(0xffffffffffffffffffffffffffffffffffffffff),0x8f,v9d,"0,v9c",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x122
"    0xa0: va0 = AND v9d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v94",0x8f,va0,"0,v9d,v94",AND,0,0,False,0,0,0x122
    0xa1: va1(0x1) = CONST ,0x8f,va1,0,CONST,0,0,False,0x1,0,0x122
    0xa3: va3(0xa0) = CONST ,0x8f,va3,0,CONST,0,0,False,0xa0,0,0x122
    0xa5: va5(0x2) = CONST ,0x8f,va5,0,CONST,0,0,False,0x2,0,0x122
"    0xa7: va7(0x10000000000000000000000000000000000000000) = EXP va5(0x2), va3(0xa0)",0x8f,va7,"0,va5,va3",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x122
"    0xa8: va8(0xffffffffffffffffffffffffffffffffffffffff) = SUB va7(0x10000000000000000000000000000000000000000), va1(0x1)",0x8f,va8,"0,va7,va1",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x122
"    0xab: vab = AND va8(0xffffffffffffffffffffffffffffffffffffffff), v7c",0x8f,vab,"0,va8,v7c",AND,0,0,False,0,0,0x122
"    0xac: vac = OR vab, va0",0x8f,vac,"0,vab,va0",OR,0,0,False,0,0,0x122
"    0xaf: SSTORE v91(0x2), vac",0x8f,0,"0,v91,vac",SSTORE,0,0,False,0,0,0x122
    0xb0: vb0(0x3) = CONST ,0x8f,vb0,0,CONST,0,0,False,0x3,0,0x122
    0xb3: vb3 = SLOAD vb0(0x3),0x8f,vb3,"0,vb0",SLOAD,0,0,False,0,0,0x122
"    0xb6: vb6 = AND v9d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vb3",0x8f,vb6,"0,v9d,vb3",AND,0,0,False,0,0,0x122
"    0xb9: vb9 = AND v35, va8(0xffffffffffffffffffffffffffffffffffffffff)",0x8f,vb9,"0,v35,va8",AND,0,0,False,0,0,0x122
"    0xbd: vbd = OR vb9, vb6",0x8f,vbd,"0,vb9,vb6",OR,0,0,False,0,0,0x122
"    0xbf: SSTORE vb0(0x3), vbd",0x8f,0,"0,vb0,vbd",SSTORE,0,0,False,0,0,0x122
    0xc1: vc1(0xca) = CONST ,0x8f,vc1,0,CONST,0,0,False,0xca,0,0x122
    0xc5: vc5(0x122) = CONST ,0x8f,vc5,0,CONST,0,0,False,0x122,0,0x122
    0xc9: JUMP vc5(0x122),0x8f,0,"0,vc5",JUMP,0,0,False,0,0,0x122
    Begin block 0x122,0x122,0,0,0,0,0,False,0,0,0x122
"    prev=[0x8f], succ=[0xca]",0x122,0,0,0,0,0,False,0,0,0xca
    =================================,0x122,0,0,0,0,0,False,0,0,0xca
    0x123: v123(0x40) = CONST ,0x122,v123,0,CONST,0,0,False,0x40,0,0xca
    0x125: v125 = MLOAD v123(0x40),0x122,v125,"0,v123",MLOAD,0,0,False,0,0&m0x40,0xca
    0x126: v126(0x6ff) = CONST ,0x122,v126,0,CONST,0,0,False,0x6ff,0,0xca
    0x12a: v12a(0x5336) = CONST ,0x122,v12a,0,CONST,0,0,False,0x5336,0,0xca
"    0x12f: CODECOPY v125, v12a(0x5336), v126(0x6ff)",0x122,0,"0,v125,v12a,v126",CODECOPY,0,0,False,0,0,0xca
"    0x130: v130 = ADD v126(0x6ff), v125",0x122,v130,"0,v126,v125",ADD,0,0,False,0,0&m0x40+0x6ff,0xca
    0x132: JUMP vc1(0xca),0x122,0,"0,vc1",JUMP,0,0,False,0,0,0xca
    Begin block 0xca,0xca,0,0,0,0,0,False,0,0,0xca
"    prev=[0x122], succ=[0xde, 0xe7]",0xca,0,0,0,0,0,False,0,0,"0xde, 0xe7"
    =================================,0xca,0,0,0,0,0,False,0,0,"0xde, 0xe7"
    0xcb: vcb(0x40) = CONST ,0xca,vcb,0,CONST,0,0,False,0x40,0,"0xde, 0xe7"
    0xcd: vcd = MLOAD vcb(0x40),0xca,vcd,"0,vcb",MLOAD,0,0,False,0,0&m0x40,"0xde, 0xe7"
"    0xd0: vd0(0x6ff) = SUB v130, vcd",0xca,vd0,"0,v130,vcd",SUB,0,0,False,0x6ff,0&m0x40+0x6ff-0x6ff,"0xde, 0xe7"
    0xd2: vd2(0x0) = CONST ,0xca,vd2,0,CONST,0,0,False,0x0,0,"0xde, 0xe7"
"    0xd4: vd4 = CREATE vd2(0x0), vcd, vd0(0x6ff)",0xca,vd4,"0,vd2,vcd,vd0",CREATE,0,0,False,0,0,"0xde, 0xe7"
    0xd6: vd6 = ISZERO vd4,0xca,vd6,"0,vd4",ISZERO,0,0,False,0,0,"0xde, 0xe7"
    0xd8: vd8 = ISZERO vd6,0xca,vd8,"0,vd6",ISZERO,0,0,False,0,0,"0xde, 0xe7"
    0xd9: vd9(0xe7) = CONST ,0xca,vd9,0,CONST,0,0,False,0xe7,0,"0xde, 0xe7"
"    0xdd: JUMPI vd9(0xe7), vd8",0xca,0,"0,vd9,vd8",JUMPI,0,0,False,0,0,"0xde, 0xe7"
    Begin block 0xde,0xde,0,0,0,0,0,False,0,0,"0xde, 0xe7"
"    prev=[0xca], succ=[]",0xde,0,0,0,0,0,False,0,0,"0xde, 0xe7"
    =================================,0xde,0,0,0,0,0,False,0,0,"0xde, 0xe7"
    0xde: vde = RETURNDATASIZE ,0xde,vde,0,RETURNDATASIZE,0,0,False,0,0,"0xde, 0xe7"
    0xdf: vdf(0x0) = CONST ,0xde,vdf,0,CONST,0,0,False,0x0,0,"0xde, 0xe7"
"    0xe2: RETURNDATACOPY vdf(0x0), vdf(0x0), vde",0xde,0,"0,vdf,vdf,vde",RETURNDATACOPY,0,0,False,0,0,"0xde, 0xe7"
    0xe3: ve3 = RETURNDATASIZE ,0xde,ve3,0,RETURNDATASIZE,0,0,False,0,0,"0xde, 0xe7"
    0xe4: ve4(0x0) = CONST ,0xde,ve4,0,CONST,0,0,False,0x0,0,"0xde, 0xe7"
"    0xe6: REVERT ve4(0x0), ve3",0xde,0,"0,ve4,ve3",REVERT,0,0,False,0,0,"0xde, 0xe7"
    Begin block 0xe7,0xe7,0,0,0,0,0,False,0,0,"0xde, 0xe7"
"    prev=[0xca], succ=[0x133]",0xe7,0,0,0,0,0,False,0,0,0x133
    =================================,0xe7,0,0,0,0,0,False,0,0,0x133
    0xe9: ve9(0x4) = CONST ,0xe7,ve9,0,CONST,0,0,False,0x4,0,0x133
    0xec: vec = SLOAD ve9(0x4),0xe7,vec,"0,ve9",SLOAD,0,0,False,0,0,0x133
    0xed: ved(0x1) = CONST ,0xe7,ved,0,CONST,0,0,False,0x1,0,0x133
    0xef: vef(0xa0) = CONST ,0xe7,vef,0,CONST,0,0,False,0xa0,0,0x133
    0xf1: vf1(0x2) = CONST ,0xe7,vf1,0,CONST,0,0,False,0x2,0,0x133
"    0xf3: vf3(0x10000000000000000000000000000000000000000) = EXP vf1(0x2), vef(0xa0)",0xe7,vf3,"0,vf1,vef",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x133
"    0xf4: vf4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf3(0x10000000000000000000000000000000000000000), ved(0x1)",0xe7,vf4,"0,vf3,ved",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x133
    0xf5: vf5(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vf4(0xffffffffffffffffffffffffffffffffffffffff),0xe7,vf5,"0,vf4",NOT,0,0,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x133
"    0xf6: vf6 = AND vf5(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vec",0xe7,vf6,"0,vf5,vec",AND,0,0,False,0,0,0x133
    0xf7: vf7(0x1) = CONST ,0xe7,vf7,0,CONST,0,0,False,0x1,0,0x133
    0xf9: vf9(0xa0) = CONST ,0xe7,vf9,0,CONST,0,0,False,0xa0,0,0x133
    0xfb: vfb(0x2) = CONST ,0xe7,vfb,0,CONST,0,0,False,0x2,0,0x133
"    0xfd: vfd(0x10000000000000000000000000000000000000000) = EXP vfb(0x2), vf9(0xa0)",0xe7,vfd,"0,vfb,vf9",EXP,0,0,False,0x10000000000000000000000000000000000000000,0,0x133
"    0xfe: vfe(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfd(0x10000000000000000000000000000000000000000), vf7(0x1)",0xe7,vfe,"0,vfd,vf7",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x133
"    0x102: v102 = AND vfe(0xffffffffffffffffffffffffffffffffffffffff), vd4",0xe7,v102,"0,vfe,vd4",AND,0,0,False,0,0,0x133
"    0x106: v106 = OR v102, vf6",0xe7,v106,"0,v102,vf6",OR,0,0,False,0,0,0x133
"    0x108: SSTORE ve9(0x4), v106",0xe7,0,"0,ve9,v106",SSTORE,0,0,False,0,0,0x133
    0x10a: v10a(0x133) = CONST ,0xe7,v10a,0,CONST,0,0,False,0x133,0,0x133
    0x110: JUMP v10a(0x133),0xe7,0,"0,v10a",JUMP,0,0,False,0,0,0x133
    Begin block 0x133,0x133,0,0,0,0,0,False,0,0,0x133
"    prev=[0xe7], succ=[]",0x133,0,0,0,0,0,False,0,0,0x133
    =================================,0x133,0,0,0,0,0,False,0,0,0x133
    0x134: v134(0x4adb) = CONST ,0x133,v134,0,CONST,0,0,False,0x4adb,0,0x133
    0x138: v138(0x143) = CONST ,0x133,v138,0,CONST,0,0,False,0x143,0,0x133
    0x13c: v13c(0x0) = CONST ,0x133,v13c,0,CONST,0,0,False,0x0,0,0x133
"    0x13e: CODECOPY v13c(0x0), v138(0x143), v134(0x4adb)",0x133,0,"0,v13c,v138,v134",CODECOPY,0,0,False,0,0,0x133
    0x13f: v13f(0x0) = CONST ,0x133,v13f,0,CONST,0,0,False,0x0,0,0x133
"    0x141: RETURN v13f(0x0), v134(0x4adb)",0x133,0,"0,v13f,v134",RETURN,0,0,False,0,0,0x133
},0x133,0,0,0,0,0,False,0,0,0x133
