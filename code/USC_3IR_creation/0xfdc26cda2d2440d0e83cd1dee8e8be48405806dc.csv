3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x27, 0x2b]",0x0,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x27, 0x2b"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x27, 0x2b"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x27, 0x2b"
    0x5: v5(0x0) = CONST ,0x0,v5,0,CONST,0,0,False,0x0,0,"0x27, 0x2b"
    0x7: v7(0x2) = CONST ,0x0,v7,0,CONST,0,0,False,0x2,0,"0x27, 0x2b"
    0x9: v9(0x0) = CONST ,0x0,v9,0,CONST,0,0,False,0x0,0,"0x27, 0x2b"
    0xb: vb(0x100) = CONST ,0x0,vb,0,CONST,0,0,False,0x100,0,"0x27, 0x2b"
"    0xe: ve(0x1) = EXP vb(0x100), v9(0x0)",0x0,ve,"0,vb,v9",EXP,0,0,False,0x1,0,"0x27, 0x2b"
    0x10: v10 = SLOAD v7(0x2),0x0,v10,"0,v7",SLOAD,0,0,False,0,0,"0x27, 0x2b"
    0x12: v12(0xff) = CONST ,0x0,v12,0,CONST,0,0,False,0xff,0,"0x27, 0x2b"
"    0x14: v14(0xff) = MUL v12(0xff), ve(0x1)",0x0,v14,"0,v12,ve",MUL,0,0,False,0xff,0,"0x27, 0x2b"
    0x15: v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v14(0xff),0x0,v15,"0,v14",NOT,0,0,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,"0x27, 0x2b"
"    0x16: v16 = AND v15(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v10",0x0,v16,"0,v15,v10",AND,0,0,False,0,0,"0x27, 0x2b"
    0x19: v19(0x1) = ISZERO v5(0x0),0x0,v19,"0,v5",ISZERO,0,0,False,0x1,0,"0x27, 0x2b"
    0x1a: v1a(0x0) = ISZERO v19(0x1),0x0,v1a,"0,v19",ISZERO,0,0,False,0x0,0,"0x27, 0x2b"
"    0x1b: v1b(0x0) = MUL v1a(0x0), ve(0x1)",0x0,v1b,"0,v1a,ve",MUL,0,0,False,0x0,0,"0x27, 0x2b"
"    0x1c: v1c = OR v1b(0x0), v16",0x0,v1c,"0,v1b,v16",OR,0,0,False,0,0,"0x27, 0x2b"
"    0x1e: SSTORE v7(0x2), v1c",0x0,0,"0,v7,v1c",SSTORE,0,0,False,0,0,"0x27, 0x2b"
    0x20: v20 = CALLVALUE ,0x0,v20,0,CALLVALUE,0,0,False,0,0,"0x27, 0x2b"
    0x22: v22 = ISZERO v20,0x0,v22,"0,v20",ISZERO,0,0,False,0,0,"0x27, 0x2b"
    0x23: v23(0x2b) = CONST ,0x0,v23,0,CONST,0,0,False,0x2b,0,"0x27, 0x2b"
"    0x26: JUMPI v23(0x2b), v22",0x0,0,"0,v23,v22",JUMPI,0,0,False,0,0,"0x27, 0x2b"
    Begin block 0x27,0x27,0,0,0,0,0,False,0,0,"0x27, 0x2b"
"    prev=[0x0], succ=[]",0x27,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    =================================,0x27,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    0x27: v27(0x0) = CONST ,0x27,v27,0,CONST,0,0,False,0x0,0,"0x27, 0x2b"
"    0x2a: REVERT v27(0x0), v27(0x0)",0x27,0,"0,v27,v27",REVERT,0,0,False,0,0,"0x27, 0x2b"
    Begin block 0x2b,0x2b,0,0,0,0,0,False,0,0,"0x27, 0x2b"
"    prev=[0x0], succ=[]",0x2b,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    =================================,0x2b,0,0,0,0,0,False,0,0,"0x27, 0x2b"
    0x2d: v2d(0x1f14) = CONST ,0x2b,v2d,0,CONST,0,0,False,0x1f14,0,"0x27, 0x2b"
    0x31: v31(0x3b) = CONST ,0x2b,v31,0,CONST,0,0,False,0x3b,0,"0x27, 0x2b"
    0x34: v34(0x0) = CONST ,0x2b,v34,0,CONST,0,0,False,0x0,0,"0x27, 0x2b"
"    0x36: CODECOPY v34(0x0), v31(0x3b), v2d(0x1f14)",0x2b,0,"0,v34,v31,v2d",CODECOPY,0,0,False,0,0,"0x27, 0x2b"
    0x37: v37(0x0) = CONST ,0x2b,v37,0,CONST,0,0,False,0x0,0,"0x27, 0x2b"
"    0x39: RETURN v37(0x0), v2d(0x1f14)",0x2b,0,"0,v37,v2d",RETURN,0,0,False,0,0,"0x27, 0x2b"
},0x2b,0,0,0,0,0,False,0,0,"0x27, 0x2b"
