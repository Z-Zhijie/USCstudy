3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xe, 0x16f]",0x0,0,0,0,0,0,False,0,0,"0xe, 0x16f"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xe, 0x16f"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xe, 0x16f"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xe, 0x16f"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xe, 0x16f"
    0x5: v5(0x4) = CONST ,0x0,v5,0,CONST,0,0,False,0x4,0,"0xe, 0x16f"
    0x7: v7 = CALLDATASIZE ,0x0,v7,0,CALLDATASIZE,0,0,False,0,0,"0xe, 0x16f"
"    0x8: v8 = LT v7, v5(0x4)",0x0,v8,"0,v7,v5",LT,0,0,False,0,0,"0xe, 0x16f"
    0x9: v9(0x16f) = CONST ,0x0,v9,0,CONST,0,0,False,0x16f,0,"0xe, 0x16f"
"    0xd: JUMPI v9(0x16f), v8",0x0,0,"0,v9,v8",JUMPI,0,0,False,0,0,"0xe, 0x16f"
    Begin block 0xe,0xe,0,0,0,0,0,False,0,0,"0xe, 0x16f"
"    prev=[0x0], succ=[0x20, 0xc7]",0xe,0,0,0,0,0,False,0,0,"0x20, 0xc7"
    =================================,0xe,0,0,0,0,0,False,0,0,"0x20, 0xc7"
    0xe: ve(0x0) = CONST ,0xe,ve,0,CONST,0,0,False,0x0,0,"0x20, 0xc7"
    0x10: v10 = CALLDATALOAD ve(0x0),0xe,v10,"0,ve",CALLDATALOAD,0,0,False,0,0,"0x20, 0xc7"
    0x11: v11(0xe0) = CONST ,0xe,v11,0,CONST,0,0,False,0xe0,0,"0x20, 0xc7"
"    0x13: v13 = SHR v11(0xe0), v10",0xe,v13,"0,v11,v10",SHR,0,0,False,0,0,"0x20, 0xc7"
    0x15: v15(0x8da5cb5b) = CONST ,0xe,v15,0,CONST,0,0,False,0x8da5cb5b,0,"0x20, 0xc7"
"    0x1a: v1a = GT v15(0x8da5cb5b), v13",0xe,v1a,"0,v15,v13",GT,0,0,False,0,0,"0x20, 0xc7"
    0x1b: v1b(0xc7) = CONST ,0xe,v1b,0,CONST,0,0,False,0xc7,0,"0x20, 0xc7"
"    0x1f: JUMPI v1b(0xc7), v1a",0xe,0,"0,v1b,v1a",JUMPI,0,0,False,0,0,"0x20, 0xc7"
    Begin block 0x20,0x20,0,0,0,0,0,False,0,0,"0x20, 0xc7"
"    prev=[0xe], succ=[0x79, 0x2c]",0x20,0,0,0,0,0,False,0,0,"0x79, 0x2c"
    =================================,0x20,0,0,0,0,0,False,0,0,"0x79, 0x2c"
    0x21: v21(0xcfad00b8) = CONST ,0x20,v21,0,CONST,0,0,False,0xcfad00b8,0,"0x79, 0x2c"
"    0x26: v26 = GT v21(0xcfad00b8), v13",0x20,v26,"0,v21,v13",GT,0,0,False,0,0,"0x79, 0x2c"
    0x27: v27(0x79) = CONST ,0x20,v27,0,CONST,0,0,False,0x79,0,"0x79, 0x2c"
"    0x2b: JUMPI v27(0x79), v26",0x20,0,"0,v27,v26",JUMPI,0,0,False,0,0,"0x79, 0x2c"
    Begin block 0x79,0x79,0,0,0,0,0,False,0,0,"0x79, 0x2c"
"    prev=[0x20], succ=[0x3d91, 0x86]",0x79,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
    =================================,0x79,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
    0x7b: v7b(0x8da5cb5b) = CONST ,0x79,v7b,0,CONST,0,0,False,0x8da5cb5b,0,"0x3d91, 0x86"
"    0x80: v80 = EQ v7b(0x8da5cb5b), v13",0x79,v80,"0,v7b,v13",EQ,0,0,False,0,0,"0x3d91, 0x86"
    0x3d43: v3d43(0x3d91) = CONST ,0x79,v3d43,0,CONST,0,0,False,0x3d91,0,"0x3d91, 0x86"
"    0x3d44: JUMPI v3d43(0x3d91), v80",0x79,0,"0,v3d43,v80",JUMPI,0,0,False,0,0,"0x3d91, 0x86"
    Begin block 0x3d91,0x3d91,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
"    prev=[0x79], succ=[]",0x3d91,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
    =================================,0x3d91,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
    0x3d92: v3d92(0x38b) = CONST ,0x3d91,v3d92,0,CONST,0,0,False,0x38b,0,"0x3d91, 0x86"
    0x3d93: CALLPRIVATE v3d92(0x38b),0x3d91,0,"0,v3d92",CALLPRIVATE,0,0,False,0,0,"0x3d91, 0x86"
    Begin block 0x86,0x86,0,0,0,0,0,False,0,0,"0x3d91, 0x86"
"    prev=[0x79], succ=[0x92, 0x3d94]",0x86,0,0,0,0,0,False,0,0,"0x92, 0x3d94"
    =================================,0x86,0,0,0,0,0,False,0,0,"0x92, 0x3d94"
    0x87: v87(0x953612b5) = CONST ,0x86,v87,0,CONST,0,0,False,0x953612b5,0,"0x92, 0x3d94"
"    0x8c: v8c = EQ v87(0x953612b5), v13",0x86,v8c,"0,v87,v13",EQ,0,0,False,0,0,"0x92, 0x3d94"
    0x3d45: v3d45(0x3d94) = CONST ,0x86,v3d45,0,CONST,0,0,False,0x3d94,0,"0x92, 0x3d94"
"    0x3d46: JUMPI v3d45(0x3d94), v8c",0x86,0,"0,v3d45,v8c",JUMPI,0,0,False,0,0,"0x92, 0x3d94"
    Begin block 0x92,0x92,0,0,0,0,0,False,0,0,"0x92, 0x3d94"
"    prev=[0x86], succ=[0x3d97, 0x9e]",0x92,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
    =================================,0x92,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
    0x93: v93(0xac4afa38) = CONST ,0x92,v93,0,CONST,0,0,False,0xac4afa38,0,"0x3d97, 0x9e"
"    0x98: v98 = EQ v93(0xac4afa38), v13",0x92,v98,"0,v93,v13",EQ,0,0,False,0,0,"0x3d97, 0x9e"
    0x3d47: v3d47(0x3d97) = CONST ,0x92,v3d47,0,CONST,0,0,False,0x3d97,0,"0x3d97, 0x9e"
"    0x3d48: JUMPI v3d47(0x3d97), v98",0x92,0,"0,v3d47,v98",JUMPI,0,0,False,0,0,"0x3d97, 0x9e"
    Begin block 0x3d97,0x3d97,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
"    prev=[0x92], succ=[]",0x3d97,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
    =================================,0x3d97,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
    0x3d98: v3d98(0x44f) = CONST ,0x3d97,v3d98,0,CONST,0,0,False,0x44f,0,"0x3d97, 0x9e"
    0x3d99: CALLPRIVATE v3d98(0x44f),0x3d97,0,"0,v3d98",CALLPRIVATE,0,0,False,0,0,"0x3d97, 0x9e"
    Begin block 0x9e,0x9e,0,0,0,0,0,False,0,0,"0x3d97, 0x9e"
"    prev=[0x92], succ=[0x3d9a, 0xaa]",0x9e,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
    =================================,0x9e,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
    0x9f: v9f(0xb39e12cf) = CONST ,0x9e,v9f,0,CONST,0,0,False,0xb39e12cf,0,"0x3d9a, 0xaa"
"    0xa4: va4 = EQ v9f(0xb39e12cf), v13",0x9e,va4,"0,v9f,v13",EQ,0,0,False,0,0,"0x3d9a, 0xaa"
    0x3d49: v3d49(0x3d9a) = CONST ,0x9e,v3d49,0,CONST,0,0,False,0x3d9a,0,"0x3d9a, 0xaa"
"    0x3d4a: JUMPI v3d49(0x3d9a), va4",0x9e,0,"0,v3d49,va4",JUMPI,0,0,False,0,0,"0x3d9a, 0xaa"
    Begin block 0x3d9a,0x3d9a,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
"    prev=[0x9e], succ=[]",0x3d9a,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
    =================================,0x3d9a,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
    0x3d9b: v3d9b(0x47d) = CONST ,0x3d9a,v3d9b,0,CONST,0,0,False,0x47d,0,"0x3d9a, 0xaa"
    0x3d9c: CALLPRIVATE v3d9b(0x47d),0x3d9a,0,"0,v3d9b",CALLPRIVATE,0,0,False,0,0,"0x3d9a, 0xaa"
    Begin block 0xaa,0xaa,0,0,0,0,0,False,0,0,"0x3d9a, 0xaa"
"    prev=[0x9e], succ=[0x3d9d, 0xb6]",0xaa,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
    =================================,0xaa,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
    0xab: vab(0xbd097e21) = CONST ,0xaa,vab,0,CONST,0,0,False,0xbd097e21,0,"0x3d9d, 0xb6"
"    0xb0: vb0 = EQ vab(0xbd097e21), v13",0xaa,vb0,"0,vab,v13",EQ,0,0,False,0,0,"0x3d9d, 0xb6"
    0x3d4b: v3d4b(0x3d9d) = CONST ,0xaa,v3d4b,0,CONST,0,0,False,0x3d9d,0,"0x3d9d, 0xb6"
"    0x3d4c: JUMPI v3d4b(0x3d9d), vb0",0xaa,0,"0,v3d4b,vb0",JUMPI,0,0,False,0,0,"0x3d9d, 0xb6"
    Begin block 0x3d9d,0x3d9d,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
"    prev=[0xaa], succ=[]",0x3d9d,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
    =================================,0x3d9d,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
    0x3d9e: v3d9e(0x495) = CONST ,0x3d9d,v3d9e,0,CONST,0,0,False,0x495,0,"0x3d9d, 0xb6"
    0x3d9f: CALLPRIVATE v3d9e(0x495),0x3d9d,0,"0,v3d9e",CALLPRIVATE,0,0,False,0,0,"0x3d9d, 0xb6"
    Begin block 0xb6,0xb6,0,0,0,0,0,False,0,0,"0x3d9d, 0xb6"
"    prev=[0xaa], succ=[0xc2, 0x3da0]",0xb6,0,0,0,0,0,False,0,0,"0xc2, 0x3da0"
    =================================,0xb6,0,0,0,0,0,False,0,0,"0xc2, 0x3da0"
    0xb7: vb7(0xcbe25197) = CONST ,0xb6,vb7,0,CONST,0,0,False,0xcbe25197,0,"0xc2, 0x3da0"
"    0xbc: vbc = EQ vb7(0xcbe25197), v13",0xb6,vbc,"0,vb7,v13",EQ,0,0,False,0,0,"0xc2, 0x3da0"
    0x3d4d: v3d4d(0x3da0) = CONST ,0xb6,v3d4d,0,CONST,0,0,False,0x3da0,0,"0xc2, 0x3da0"
"    0x3d4e: JUMPI v3d4d(0x3da0), vbc",0xb6,0,"0,v3d4d,vbc",JUMPI,0,0,False,0,0,"0xc2, 0x3da0"
    Begin block 0xc2,0xc2,0,0,0,0,0,False,0,0,"0xc2, 0x3da0"
"    prev=[0xb6], succ=[0x3510]",0xc2,0,0,0,0,0,False,0,0,0x3510
    =================================,0xc2,0,0,0,0,0,False,0,0,0x3510
    0xc2: vc2(0x3510) = CONST ,0xc2,vc2,0,CONST,0,0,False,0x3510,0,0x3510
    0xc6: JUMP vc2(0x3510),0xc2,0,"0,vc2",JUMP,0,0,False,0,0,0x3510
    Begin block 0x3510,0x3510,0,0,0,0,0,False,0,0,0x3510
"    prev=[0xc2], succ=[]",0x3510,0,0,0,0,0,False,0,0,0x3510
    =================================,0x3510,0,0,0,0,0,False,0,0,0x3510
    0x3511: v3511(0x0) = CONST ,0x3510,v3511,0,CONST,0,0,False,0x0,0,0x3510
"    0x3514: REVERT v3511(0x0), v3511(0x0)",0x3510,0,"0,v3511,v3511",REVERT,0,0,False,0,0,0x3510
    Begin block 0x3da0,0x3da0,0,0,0,0,0,False,0,0,0x3510
"    prev=[0xb6], succ=[]",0x3da0,0,0,0,0,0,False,0,0,0x3510
    =================================,0x3da0,0,0,0,0,0,False,0,0,0x3510
    0x3da1: v3da1(0x4ad) = CONST ,0x3da0,v3da1,0,CONST,0,0,False,0x4ad,0,0x3510
    0x3da2: CALLPRIVATE v3da1(0x4ad),0x3da0,0,"0,v3da1",CALLPRIVATE,0,0,False,0,0,0x3510
    Begin block 0x3d94,0x3d94,0,0,0,0,0,False,0,0,0x3510
"    prev=[0x86], succ=[]",0x3d94,0,0,0,0,0,False,0,0,0x3510
    =================================,0x3d94,0,0,0,0,0,False,0,0,0x3510
    0x3d95: v3d95(0x3a3) = CONST ,0x3d94,v3d95,0,CONST,0,0,False,0x3a3,0,0x3510
    0x3d96: CALLPRIVATE v3d95(0x3a3),0x3d94,0,"0,v3d95",CALLPRIVATE,0,0,False,0,0,0x3510
    Begin block 0x2c,0x2c,0,0,0,0,0,False,0,0,0x3510
"    prev=[0x20], succ=[0x3da3, 0x38]",0x2c,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
    =================================,0x2c,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
    0x2d: v2d(0xcfad00b8) = CONST ,0x2c,v2d,0,CONST,0,0,False,0xcfad00b8,0,"0x3da3, 0x38"
"    0x32: v32 = EQ v2d(0xcfad00b8), v13",0x2c,v32,"0,v2d,v13",EQ,0,0,False,0,0,"0x3da3, 0x38"
    0x3d37: v3d37(0x3da3) = CONST ,0x2c,v3d37,0,CONST,0,0,False,0x3da3,0,"0x3da3, 0x38"
"    0x3d38: JUMPI v3d37(0x3da3), v32",0x2c,0,"0,v3d37,v32",JUMPI,0,0,False,0,0,"0x3da3, 0x38"
    Begin block 0x3da3,0x3da3,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
"    prev=[0x2c], succ=[]",0x3da3,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
    =================================,0x3da3,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
    0x3da4: v3da4(0x4e4) = CONST ,0x3da3,v3da4,0,CONST,0,0,False,0x4e4,0,"0x3da3, 0x38"
    0x3da5: CALLPRIVATE v3da4(0x4e4),0x3da3,0,"0,v3da4",CALLPRIVATE,0,0,False,0,0,"0x3da3, 0x38"
    Begin block 0x38,0x38,0,0,0,0,0,False,0,0,"0x3da3, 0x38"
"    prev=[0x2c], succ=[0x44, 0x3da6]",0x38,0,0,0,0,0,False,0,0,"0x44, 0x3da6"
    =================================,0x38,0,0,0,0,0,False,0,0,"0x44, 0x3da6"
    0x39: v39(0xdbdd2989) = CONST ,0x38,v39,0,CONST,0,0,False,0xdbdd2989,0,"0x44, 0x3da6"
"    0x3e: v3e = EQ v39(0xdbdd2989), v13",0x38,v3e,"0,v39,v13",EQ,0,0,False,0,0,"0x44, 0x3da6"
    0x3d39: v3d39(0x3da6) = CONST ,0x38,v3d39,0,CONST,0,0,False,0x3da6,0,"0x44, 0x3da6"
"    0x3d3a: JUMPI v3d39(0x3da6), v3e",0x38,0,"0,v3d39,v3e",JUMPI,0,0,False,0,0,"0x44, 0x3da6"
    Begin block 0x44,0x44,0,0,0,0,0,False,0,0,"0x44, 0x3da6"
"    prev=[0x38], succ=[0x3da9, 0x50]",0x44,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
    =================================,0x44,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
    0x45: v45(0xde260f37) = CONST ,0x44,v45,0,CONST,0,0,False,0xde260f37,0,"0x3da9, 0x50"
"    0x4a: v4a = EQ v45(0xde260f37), v13",0x44,v4a,"0,v45,v13",EQ,0,0,False,0,0,"0x3da9, 0x50"
    0x3d3b: v3d3b(0x3da9) = CONST ,0x44,v3d3b,0,CONST,0,0,False,0x3da9,0,"0x3da9, 0x50"
"    0x3d3c: JUMPI v3d3b(0x3da9), v4a",0x44,0,"0,v3d3b,v4a",JUMPI,0,0,False,0,0,"0x3da9, 0x50"
    Begin block 0x3da9,0x3da9,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
"    prev=[0x44], succ=[]",0x3da9,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
    =================================,0x3da9,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
    0x3daa: v3daa(0x55a) = CONST ,0x3da9,v3daa,0,CONST,0,0,False,0x55a,0,"0x3da9, 0x50"
    0x3dab: CALLPRIVATE v3daa(0x55a),0x3da9,0,"0,v3daa",CALLPRIVATE,0,0,False,0,0,"0x3da9, 0x50"
    Begin block 0x50,0x50,0,0,0,0,0,False,0,0,"0x3da9, 0x50"
"    prev=[0x44], succ=[0x3dac, 0x5c]",0x50,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
    =================================,0x50,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
    0x51: v51(0xe3fedc51) = CONST ,0x50,v51,0,CONST,0,0,False,0xe3fedc51,0,"0x3dac, 0x5c"
"    0x56: v56 = EQ v51(0xe3fedc51), v13",0x50,v56,"0,v51,v13",EQ,0,0,False,0,0,"0x3dac, 0x5c"
    0x3d3d: v3d3d(0x3dac) = CONST ,0x50,v3d3d,0,CONST,0,0,False,0x3dac,0,"0x3dac, 0x5c"
"    0x3d3e: JUMPI v3d3d(0x3dac), v56",0x50,0,"0,v3d3d,v56",JUMPI,0,0,False,0,0,"0x3dac, 0x5c"
    Begin block 0x3dac,0x3dac,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
"    prev=[0x50], succ=[]",0x3dac,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
    =================================,0x3dac,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
    0x3dad: v3dad(0x591) = CONST ,0x3dac,v3dad,0,CONST,0,0,False,0x591,0,"0x3dac, 0x5c"
    0x3dae: CALLPRIVATE v3dad(0x591),0x3dac,0,"0,v3dad",CALLPRIVATE,0,0,False,0,0,"0x3dac, 0x5c"
    Begin block 0x5c,0x5c,0,0,0,0,0,False,0,0,"0x3dac, 0x5c"
"    prev=[0x50], succ=[0x3daf, 0x68]",0x5c,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
    =================================,0x5c,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
    0x5d: v5d(0xeb7e3a5c) = CONST ,0x5c,v5d,0,CONST,0,0,False,0xeb7e3a5c,0,"0x3daf, 0x68"
"    0x62: v62 = EQ v5d(0xeb7e3a5c), v13",0x5c,v62,"0,v5d,v13",EQ,0,0,False,0,0,"0x3daf, 0x68"
    0x3d3f: v3d3f(0x3daf) = CONST ,0x5c,v3d3f,0,CONST,0,0,False,0x3daf,0,"0x3daf, 0x68"
"    0x3d40: JUMPI v3d3f(0x3daf), v62",0x5c,0,"0,v3d3f,v62",JUMPI,0,0,False,0,0,"0x3daf, 0x68"
    Begin block 0x3daf,0x3daf,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
"    prev=[0x5c], succ=[]",0x3daf,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
    =================================,0x3daf,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
    0x3db0: v3db0(0x67e) = CONST ,0x3daf,v3db0,0,CONST,0,0,False,0x67e,0,"0x3daf, 0x68"
    0x3db1: CALLPRIVATE v3db0(0x67e),0x3daf,0,"0,v3db0",CALLPRIVATE,0,0,False,0,0,"0x3daf, 0x68"
    Begin block 0x68,0x68,0,0,0,0,0,False,0,0,"0x3daf, 0x68"
"    prev=[0x5c], succ=[0x74, 0x3db2]",0x68,0,0,0,0,0,False,0,0,"0x74, 0x3db2"
    =================================,0x68,0,0,0,0,0,False,0,0,"0x74, 0x3db2"
    0x69: v69(0xf3bc96ea) = CONST ,0x68,v69,0,CONST,0,0,False,0xf3bc96ea,0,"0x74, 0x3db2"
"    0x6e: v6e = EQ v69(0xf3bc96ea), v13",0x68,v6e,"0,v69,v13",EQ,0,0,False,0,0,"0x74, 0x3db2"
    0x3d41: v3d41(0x3db2) = CONST ,0x68,v3d41,0,CONST,0,0,False,0x3db2,0,"0x74, 0x3db2"
"    0x3d42: JUMPI v3d41(0x3db2), v6e",0x68,0,"0,v3d41,v6e",JUMPI,0,0,False,0,0,"0x74, 0x3db2"
    Begin block 0x74,0x74,0,0,0,0,0,False,0,0,"0x74, 0x3db2"
"    prev=[0x68], succ=[0x34ec]",0x74,0,0,0,0,0,False,0,0,0x34ec
    =================================,0x74,0,0,0,0,0,False,0,0,0x34ec
    0x74: v74(0x34ec) = CONST ,0x74,v74,0,CONST,0,0,False,0x34ec,0,0x34ec
    0x78: JUMP v74(0x34ec),0x74,0,"0,v74",JUMP,0,0,False,0,0,0x34ec
    Begin block 0x34ec,0x34ec,0,0,0,0,0,False,0,0,0x34ec
"    prev=[0x74], succ=[]",0x34ec,0,0,0,0,0,False,0,0,0x34ec
    =================================,0x34ec,0,0,0,0,0,False,0,0,0x34ec
    0x34ed: v34ed(0x0) = CONST ,0x34ec,v34ed,0,CONST,0,0,False,0x0,0,0x34ec
"    0x34f0: REVERT v34ed(0x0), v34ed(0x0)",0x34ec,0,"0,v34ed,v34ed",REVERT,0,0,False,0,0,0x34ec
    Begin block 0x3db2,0x3db2,0,0,0,0,0,False,0,0,0x34ec
"    prev=[0x68], succ=[]",0x3db2,0,0,0,0,0,False,0,0,0x34ec
    =================================,0x3db2,0,0,0,0,0,False,0,0,0x34ec
    0x3db3: v3db3(0x6c1) = CONST ,0x3db2,v3db3,0,CONST,0,0,False,0x6c1,0,0x34ec
    0x3db4: CALLPRIVATE v3db3(0x6c1),0x3db2,0,"0,v3db3",CALLPRIVATE,0,0,False,0,0,0x34ec
    Begin block 0x3da6,0x3da6,0,0,0,0,0,False,0,0,0x34ec
"    prev=[0x38], succ=[]",0x3da6,0,0,0,0,0,False,0,0,0x34ec
    =================================,0x3da6,0,0,0,0,0,False,0,0,0x34ec
    0x3da7: v3da7(0x51b) = CONST ,0x3da6,v3da7,0,CONST,0,0,False,0x51b,0,0x34ec
    0x3da8: CALLPRIVATE v3da7(0x51b),0x3da6,0,"0,v3da7",CALLPRIVATE,0,0,False,0,0,0x34ec
    Begin block 0xc7,0xc7,0,0,0,0,0,False,0,0,0x34ec
"    prev=[0xe], succ=[0x121, 0xd4]",0xc7,0,0,0,0,0,False,0,0,"0x121, 0xd4"
    =================================,0xc7,0,0,0,0,0,False,0,0,"0x121, 0xd4"
    0xc9: vc9(0x46951954) = CONST ,0xc7,vc9,0,CONST,0,0,False,0x46951954,0,"0x121, 0xd4"
"    0xce: vce = GT vc9(0x46951954), v13",0xc7,vce,"0,vc9,v13",GT,0,0,False,0,0,"0x121, 0xd4"
    0xcf: vcf(0x121) = CONST ,0xc7,vcf,0,CONST,0,0,False,0x121,0,"0x121, 0xd4"
"    0xd3: JUMPI vcf(0x121), vce",0xc7,0,"0,vcf,vce",JUMPI,0,0,False,0,0,"0x121, 0xd4"
    Begin block 0x121,0x121,0,0,0,0,0,False,0,0,"0x121, 0xd4"
"    prev=[0xc7], succ=[0x3d6a, 0x12e]",0x121,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
    =================================,0x121,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
    0x123: v123(0xfd6240e) = CONST ,0x121,v123,0,CONST,0,0,False,0xfd6240e,0,"0x3d6a, 0x12e"
"    0x128: v128 = EQ v123(0xfd6240e), v13",0x121,v128,"0,v123,v13",EQ,0,0,False,0,0,"0x3d6a, 0x12e"
    0x3d5b: v3d5b(0x3d6a) = CONST ,0x121,v3d5b,0,CONST,0,0,False,0x3d6a,0,"0x3d6a, 0x12e"
"    0x3d5c: JUMPI v3d5b(0x3d6a), v128",0x121,0,"0,v3d5b,v128",JUMPI,0,0,False,0,0,"0x3d6a, 0x12e"
    Begin block 0x3d6a,0x3d6a,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
"    prev=[0x121], succ=[]",0x3d6a,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
    =================================,0x3d6a,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
    0x3d6b: v3d6b(0x17c) = CONST ,0x3d6a,v3d6b,0,CONST,0,0,False,0x17c,0,"0x3d6a, 0x12e"
    0x3d6c: CALLPRIVATE v3d6b(0x17c),0x3d6a,0,"0,v3d6b",CALLPRIVATE,0,0,False,0,0,"0x3d6a, 0x12e"
    Begin block 0x12e,0x12e,0,0,0,0,0,False,0,0,"0x3d6a, 0x12e"
"    prev=[0x121], succ=[0x3d6d, 0x13a]",0x12e,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
    =================================,0x12e,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
    0x12f: v12f(0x158ef93e) = CONST ,0x12e,v12f,0,CONST,0,0,False,0x158ef93e,0,"0x3d6d, 0x13a"
"    0x134: v134 = EQ v12f(0x158ef93e), v13",0x12e,v134,"0,v12f,v13",EQ,0,0,False,0,0,"0x3d6d, 0x13a"
    0x3d5d: v3d5d(0x3d6d) = CONST ,0x12e,v3d5d,0,CONST,0,0,False,0x3d6d,0,"0x3d6d, 0x13a"
"    0x3d5e: JUMPI v3d5d(0x3d6d), v134",0x12e,0,"0,v3d5d,v134",JUMPI,0,0,False,0,0,"0x3d6d, 0x13a"
    Begin block 0x3d6d,0x3d6d,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
"    prev=[0x12e], succ=[]",0x3d6d,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
    =================================,0x3d6d,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
    0x3d6e: v3d6e(0x1b0) = CONST ,0x3d6d,v3d6e,0,CONST,0,0,False,0x1b0,0,"0x3d6d, 0x13a"
    0x3d6f: CALLPRIVATE v3d6e(0x1b0),0x3d6d,0,"0,v3d6e",CALLPRIVATE,0,0,False,0,0,"0x3d6d, 0x13a"
    Begin block 0x13a,0x13a,0,0,0,0,0,False,0,0,"0x3d6d, 0x13a"
"    prev=[0x12e], succ=[0x3d70, 0x146]",0x13a,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
    =================================,0x13a,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
    0x13b: v13b(0x1ebeef89) = CONST ,0x13a,v13b,0,CONST,0,0,False,0x1ebeef89,0,"0x3d70, 0x146"
"    0x140: v140 = EQ v13b(0x1ebeef89), v13",0x13a,v140,"0,v13b,v13",EQ,0,0,False,0,0,"0x3d70, 0x146"
    0x3d5f: v3d5f(0x3d70) = CONST ,0x13a,v3d5f,0,CONST,0,0,False,0x3d70,0,"0x3d70, 0x146"
"    0x3d60: JUMPI v3d5f(0x3d70), v140",0x13a,0,"0,v3d5f,v140",JUMPI,0,0,False,0,0,"0x3d70, 0x146"
    Begin block 0x3d70,0x3d70,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
"    prev=[0x13a], succ=[]",0x3d70,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
    =================================,0x3d70,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
    0x3d71: v3d71(0x1dc) = CONST ,0x3d70,v3d71,0,CONST,0,0,False,0x1dc,0,"0x3d70, 0x146"
    0x3d72: CALLPRIVATE v3d71(0x1dc),0x3d70,0,"0,v3d71",CALLPRIVATE,0,0,False,0,0,"0x3d70, 0x146"
    Begin block 0x146,0x146,0,0,0,0,0,False,0,0,"0x3d70, 0x146"
"    prev=[0x13a], succ=[0x3d73, 0x152]",0x146,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
    =================================,0x146,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
    0x147: v147(0x21dadb75) = CONST ,0x146,v147,0,CONST,0,0,False,0x21dadb75,0,"0x3d73, 0x152"
"    0x14c: v14c = EQ v147(0x21dadb75), v13",0x146,v14c,"0,v147,v13",EQ,0,0,False,0,0,"0x3d73, 0x152"
    0x3d61: v3d61(0x3d73) = CONST ,0x146,v3d61,0,CONST,0,0,False,0x3d73,0,"0x3d73, 0x152"
"    0x3d62: JUMPI v3d61(0x3d73), v14c",0x146,0,"0,v3d61,v14c",JUMPI,0,0,False,0,0,"0x3d73, 0x152"
    Begin block 0x3d73,0x3d73,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
"    prev=[0x146], succ=[]",0x3d73,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
    =================================,0x3d73,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
    0x3d74: v3d74(0x1f4) = CONST ,0x3d73,v3d74,0,CONST,0,0,False,0x1f4,0,"0x3d73, 0x152"
    0x3d75: CALLPRIVATE v3d74(0x1f4),0x3d73,0,"0,v3d74",CALLPRIVATE,0,0,False,0,0,"0x3d73, 0x152"
    Begin block 0x152,0x152,0,0,0,0,0,False,0,0,"0x3d73, 0x152"
"    prev=[0x146], succ=[0x3d76, 0x15e]",0x152,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
    =================================,0x152,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
    0x153: v153(0x220cce97) = CONST ,0x152,v153,0,CONST,0,0,False,0x220cce97,0,"0x3d76, 0x15e"
"    0x158: v158 = EQ v153(0x220cce97), v13",0x152,v158,"0,v153,v13",EQ,0,0,False,0,0,"0x3d76, 0x15e"
    0x3d63: v3d63(0x3d76) = CONST ,0x152,v3d63,0,CONST,0,0,False,0x3d76,0,"0x3d76, 0x15e"
"    0x3d64: JUMPI v3d63(0x3d76), v158",0x152,0,"0,v3d63,v158",JUMPI,0,0,False,0,0,"0x3d76, 0x15e"
    Begin block 0x3d76,0x3d76,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
"    prev=[0x152], succ=[]",0x3d76,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
    =================================,0x3d76,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
    0x3d77: v3d77(0x20c) = CONST ,0x3d76,v3d77,0,CONST,0,0,False,0x20c,0,"0x3d76, 0x15e"
    0x3d78: CALLPRIVATE v3d77(0x20c),0x3d76,0,"0,v3d77",CALLPRIVATE,0,0,False,0,0,"0x3d76, 0x15e"
    Begin block 0x15e,0x15e,0,0,0,0,0,False,0,0,"0x3d76, 0x15e"
"    prev=[0x152], succ=[0x16a, 0x3d79]",0x15e,0,0,0,0,0,False,0,0,"0x16a, 0x3d79"
    =================================,0x15e,0,0,0,0,0,False,0,0,"0x16a, 0x3d79"
    0x15f: v15f(0x2ff55e87) = CONST ,0x15e,v15f,0,CONST,0,0,False,0x2ff55e87,0,"0x16a, 0x3d79"
"    0x164: v164 = EQ v15f(0x2ff55e87), v13",0x15e,v164,"0,v15f,v13",EQ,0,0,False,0,0,"0x16a, 0x3d79"
    0x3d65: v3d65(0x3d79) = CONST ,0x15e,v3d65,0,CONST,0,0,False,0x3d79,0,"0x16a, 0x3d79"
"    0x3d66: JUMPI v3d65(0x3d79), v164",0x15e,0,"0,v3d65,v164",JUMPI,0,0,False,0,0,"0x16a, 0x3d79"
    Begin block 0x16a,0x16a,0,0,0,0,0,False,0,0,"0x16a, 0x3d79"
"    prev=[0x15e], succ=[0x3558]",0x16a,0,0,0,0,0,False,0,0,0x3558
    =================================,0x16a,0,0,0,0,0,False,0,0,0x3558
    0x16a: v16a(0x3558) = CONST ,0x16a,v16a,0,CONST,0,0,False,0x3558,0,0x3558
    0x16e: JUMP v16a(0x3558),0x16a,0,"0,v16a",JUMP,0,0,False,0,0,0x3558
    Begin block 0x3558,0x3558,0,0,0,0,0,False,0,0,0x3558
"    prev=[0x16a], succ=[]",0x3558,0,0,0,0,0,False,0,0,0x3558
    =================================,0x3558,0,0,0,0,0,False,0,0,0x3558
    0x3559: v3559(0x0) = CONST ,0x3558,v3559,0,CONST,0,0,False,0x0,0,0x3558
"    0x355c: REVERT v3559(0x0), v3559(0x0)",0x3558,0,"0,v3559,v3559",REVERT,0,0,False,0,0,0x3558
    Begin block 0x3d79,0x3d79,0,0,0,0,0,False,0,0,0x3558
"    prev=[0x15e], succ=[]",0x3d79,0,0,0,0,0,False,0,0,0x3558
    =================================,0x3d79,0,0,0,0,0,False,0,0,0x3558
    0x3d7a: v3d7a(0x224) = CONST ,0x3d79,v3d7a,0,CONST,0,0,False,0x224,0,0x3558
    0x3d7b: CALLPRIVATE v3d7a(0x224),0x3d79,0,"0,v3d7a",CALLPRIVATE,0,0,False,0,0,0x3558
    Begin block 0xd4,0xd4,0,0,0,0,0,False,0,0,0x3558
"    prev=[0xc7], succ=[0xe0, 0x3d7c]",0xd4,0,0,0,0,0,False,0,0,"0xe0, 0x3d7c"
    =================================,0xd4,0,0,0,0,0,False,0,0,"0xe0, 0x3d7c"
    0xd5: vd5(0x46951954) = CONST ,0xd4,vd5,0,CONST,0,0,False,0x46951954,0,"0xe0, 0x3d7c"
"    0xda: vda = EQ vd5(0x46951954), v13",0xd4,vda,"0,vd5,v13",EQ,0,0,False,0,0,"0xe0, 0x3d7c"
    0x3d4f: v3d4f(0x3d7c) = CONST ,0xd4,v3d4f,0,CONST,0,0,False,0x3d7c,0,"0xe0, 0x3d7c"
"    0x3d50: JUMPI v3d4f(0x3d7c), vda",0xd4,0,"0,v3d4f,vda",JUMPI,0,0,False,0,0,"0xe0, 0x3d7c"
    Begin block 0xe0,0xe0,0,0,0,0,0,False,0,0,"0xe0, 0x3d7c"
"    prev=[0xd4], succ=[0x3d7f, 0xec]",0xe0,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
    =================================,0xe0,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
    0xe1: ve1(0x52d1902d) = CONST ,0xe0,ve1,0,CONST,0,0,False,0x52d1902d,0,"0x3d7f, 0xec"
"    0xe6: ve6 = EQ ve1(0x52d1902d), v13",0xe0,ve6,"0,ve1,v13",EQ,0,0,False,0,0,"0x3d7f, 0xec"
    0x3d51: v3d51(0x3d7f) = CONST ,0xe0,v3d51,0,CONST,0,0,False,0x3d7f,0,"0x3d7f, 0xec"
"    0x3d52: JUMPI v3d51(0x3d7f), ve6",0xe0,0,"0,v3d51,ve6",JUMPI,0,0,False,0,0,"0x3d7f, 0xec"
    Begin block 0x3d7f,0x3d7f,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
"    prev=[0xe0], succ=[]",0x3d7f,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
    =================================,0x3d7f,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
    0x3d80: v3d80(0x2a4) = CONST ,0x3d7f,v3d80,0,CONST,0,0,False,0x2a4,0,"0x3d7f, 0xec"
    0x3d81: CALLPRIVATE v3d80(0x2a4),0x3d7f,0,"0,v3d80",CALLPRIVATE,0,0,False,0,0,"0x3d7f, 0xec"
    Begin block 0xec,0xec,0,0,0,0,0,False,0,0,"0x3d7f, 0xec"
"    prev=[0xe0], succ=[0x3d85, 0xf8]",0xec,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
    =================================,0xec,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
    0xed: ved(0x5a2e2f47) = CONST ,0xec,ved,0,CONST,0,0,False,0x5a2e2f47,0,"0x3d85, 0xf8"
"    0xf2: vf2 = EQ ved(0x5a2e2f47), v13",0xec,vf2,"0,ved,v13",EQ,0,0,False,0,0,"0x3d85, 0xf8"
    0x3d53: v3d53(0x3d85) = CONST ,0xec,v3d53,0,CONST,0,0,False,0x3d85,0,"0x3d85, 0xf8"
"    0x3d54: JUMPI v3d53(0x3d85), vf2",0xec,0,"0,v3d53,vf2",JUMPI,0,0,False,0,0,"0x3d85, 0xf8"
    Begin block 0x3d85,0x3d85,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
"    prev=[0xec], succ=[]",0x3d85,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
    =================================,0x3d85,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
    0x3d86: v3d86(0x2ce) = CONST ,0x3d85,v3d86,0,CONST,0,0,False,0x2ce,0,"0x3d85, 0xf8"
    0x3d87: CALLPRIVATE v3d86(0x2ce),0x3d85,0,"0,v3d86",CALLPRIVATE,0,0,False,0,0,"0x3d85, 0xf8"
    Begin block 0xf8,0xf8,0,0,0,0,0,False,0,0,"0x3d85, 0xf8"
"    prev=[0xec], succ=[0x3d88, 0x104]",0xf8,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
    =================================,0xf8,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
    0xf9: vf9(0x5b55c1b1) = CONST ,0xf8,vf9,0,CONST,0,0,False,0x5b55c1b1,0,"0x3d88, 0x104"
"    0xfe: vfe = EQ vf9(0x5b55c1b1), v13",0xf8,vfe,"0,vf9,v13",EQ,0,0,False,0,0,"0x3d88, 0x104"
    0x3d55: v3d55(0x3d88) = CONST ,0xf8,v3d55,0,CONST,0,0,False,0x3d88,0,"0x3d88, 0x104"
"    0x3d56: JUMPI v3d55(0x3d88), vfe",0xf8,0,"0,v3d55,vfe",JUMPI,0,0,False,0,0,"0x3d88, 0x104"
    Begin block 0x3d88,0x3d88,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
"    prev=[0xf8], succ=[]",0x3d88,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
    =================================,0x3d88,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
    0x3d89: v3d89(0x305) = CONST ,0x3d88,v3d89,0,CONST,0,0,False,0x305,0,"0x3d88, 0x104"
    0x3d8a: CALLPRIVATE v3d89(0x305),0x3d88,0,"0,v3d89",CALLPRIVATE,0,0,False,0,0,"0x3d88, 0x104"
    Begin block 0x104,0x104,0,0,0,0,0,False,0,0,"0x3d88, 0x104"
"    prev=[0xf8], succ=[0x3d8b, 0x110]",0x104,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
    =================================,0x104,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
    0x105: v105(0x7b103999) = CONST ,0x104,v105,0,CONST,0,0,False,0x7b103999,0,"0x3d8b, 0x110"
"    0x10a: v10a = EQ v105(0x7b103999), v13",0x104,v10a,"0,v105,v13",EQ,0,0,False,0,0,"0x3d8b, 0x110"
    0x3d57: v3d57(0x3d8b) = CONST ,0x104,v3d57,0,CONST,0,0,False,0x3d8b,0,"0x3d8b, 0x110"
"    0x3d58: JUMPI v3d57(0x3d8b), v10a",0x104,0,"0,v3d57,v10a",JUMPI,0,0,False,0,0,"0x3d8b, 0x110"
    Begin block 0x3d8b,0x3d8b,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
"    prev=[0x104], succ=[]",0x3d8b,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
    =================================,0x3d8b,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
    0x3d8c: v3d8c(0x342) = CONST ,0x3d8b,v3d8c,0,CONST,0,0,False,0x342,0,"0x3d8b, 0x110"
    0x3d8d: CALLPRIVATE v3d8c(0x342),0x3d8b,0,"0,v3d8c",CALLPRIVATE,0,0,False,0,0,"0x3d8b, 0x110"
    Begin block 0x110,0x110,0,0,0,0,0,False,0,0,"0x3d8b, 0x110"
"    prev=[0x104], succ=[0x11c, 0x3d8e]",0x110,0,0,0,0,0,False,0,0,"0x11c, 0x3d8e"
    =================================,0x110,0,0,0,0,0,False,0,0,"0x11c, 0x3d8e"
    0x111: v111(0x8463dd84) = CONST ,0x110,v111,0,CONST,0,0,False,0x8463dd84,0,"0x11c, 0x3d8e"
"    0x116: v116 = EQ v111(0x8463dd84), v13",0x110,v116,"0,v111,v13",EQ,0,0,False,0,0,"0x11c, 0x3d8e"
    0x3d59: v3d59(0x3d8e) = CONST ,0x110,v3d59,0,CONST,0,0,False,0x3d8e,0,"0x11c, 0x3d8e"
"    0x3d5a: JUMPI v3d59(0x3d8e), v116",0x110,0,"0,v3d59,v116",JUMPI,0,0,False,0,0,"0x11c, 0x3d8e"
    Begin block 0x11c,0x11c,0,0,0,0,0,False,0,0,"0x11c, 0x3d8e"
"    prev=[0x110], succ=[0x3534]",0x11c,0,0,0,0,0,False,0,0,0x3534
    =================================,0x11c,0,0,0,0,0,False,0,0,0x3534
    0x11c: v11c(0x3534) = CONST ,0x11c,v11c,0,CONST,0,0,False,0x3534,0,0x3534
    0x120: JUMP v11c(0x3534),0x11c,0,"0,v11c",JUMP,0,0,False,0,0,0x3534
    Begin block 0x3534,0x3534,0,0,0,0,0,False,0,0,0x3534
"    prev=[0x11c], succ=[]",0x3534,0,0,0,0,0,False,0,0,0x3534
    =================================,0x3534,0,0,0,0,0,False,0,0,0x3534
    0x3535: v3535(0x0) = CONST ,0x3534,v3535,0,CONST,0,0,False,0x0,0,0x3534
"    0x3538: REVERT v3535(0x0), v3535(0x0)",0x3534,0,"0,v3535,v3535",REVERT,0,0,False,0,0,0x3534
    Begin block 0x3d8e,0x3d8e,0,0,0,0,0,False,0,0,0x3534
"    prev=[0x110], succ=[]",0x3d8e,0,0,0,0,0,False,0,0,0x3534
    =================================,0x3d8e,0,0,0,0,0,False,0,0,0x3534
    0x3d8f: v3d8f(0x35a) = CONST ,0x3d8e,v3d8f,0,CONST,0,0,False,0x35a,0,0x3534
    0x3d90: CALLPRIVATE v3d8f(0x35a),0x3d8e,0,"0,v3d8f",CALLPRIVATE,0,0,False,0,0,0x3534
    Begin block 0x3d7c,0x3d7c,0,0,0,0,0,False,0,0,0x3534
"    prev=[0xd4], succ=[]",0x3d7c,0,0,0,0,0,False,0,0,0x3534
    =================================,0x3d7c,0,0,0,0,0,False,0,0,0x3534
    0x3d7d: v3d7d(0x26d) = CONST ,0x3d7c,v3d7d,0,CONST,0,0,False,0x26d,0,0x3534
    0x3d7e: CALLPRIVATE v3d7d(0x26d),0x3d7c,0,"0,v3d7d",CALLPRIVATE,0,0,False,0,0,0x3534
    Begin block 0x16f,0x16f,0,0,0,0,0,False,0,0,0x3534
"    prev=[0x0], succ=[0x3d67, 0x357c]",0x16f,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    =================================,0x16f,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    0x170: v170 = CALLDATASIZE ,0x16f,v170,0,CALLDATASIZE,0,0,False,0,0,"0x3d67, 0x357c"
    0x171: v171(0x357c) = CONST ,0x16f,v171,0,CONST,0,0,False,0x357c,0,"0x3d67, 0x357c"
"    0x175: JUMPI v171(0x357c), v170",0x16f,0,"0,v171,v170",JUMPI,0,0,False,0,0,"0x3d67, 0x357c"
    Begin block 0x3d67,0x3d67,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
"    prev=[0x16f], succ=[]",0x3d67,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    =================================,0x3d67,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    0x3d67: v3d67(0x3d69) = CONST ,0x3d67,v3d67,0,CONST,0,0,False,0x3d69,0,"0x3d67, 0x357c"
    0x3d68: CALLPRIVATE v3d67(0x3d69),0x3d67,0,"0,v3d67",CALLPRIVATE,0,0,False,0,0,"0x3d67, 0x357c"
    Begin block 0x357c,0x357c,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
"    prev=[0x16f], succ=[]",0x357c,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    =================================,0x357c,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
    0x357d: v357d(0x0) = CONST ,0x357c,v357d,0,CONST,0,0,False,0x0,0,"0x3d67, 0x357c"
"    0x3580: REVERT v357d(0x0), v357d(0x0)",0x357c,0,"0,v357d,v357d",REVERT,0,0,False,0,0,"0x3d67, 0x357c"
},0x357c,0,0,0,0,0,False,0,0,"0x3d67, 0x357c"
function devContract()() public {,0x17c,0,"0,devContract",public,devContract,public,False,0,0,"0x3d67, 0x357c"
    Begin block 0x17c,0x17c,0,0,0,devContract,public,False,0,0,"0x3d67, 0x357c"
"    prev=[], succ=[0x185, 0x189]",0x17c,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
    =================================,0x17c,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
    0x17d: v17d = CALLVALUE ,0x17c,v17d,0,CALLVALUE,devContract,public,False,0,0,"0x185, 0x189"
    0x17f: v17f = ISZERO v17d,0x17c,v17f,"0,v17d",ISZERO,devContract,public,False,0,0,"0x185, 0x189"
    0x180: v180(0x189) = CONST ,0x17c,v180,0,CONST,devContract,public,False,0x189,0,"0x185, 0x189"
"    0x184: JUMPI v180(0x189), v17f",0x17c,0,"0,v180,v17f",JUMPI,devContract,public,False,0,0,"0x185, 0x189"
    Begin block 0x185,0x185,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
"    prev=[0x17c], succ=[]",0x185,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
    =================================,0x185,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
    0x185: v185(0x0) = CONST ,0x185,v185,0,CONST,devContract,public,False,0x0,0,"0x185, 0x189"
"    0x188: REVERT v185(0x0), v185(0x0)",0x185,0,"0,v185,v185",REVERT,devContract,public,False,0,0,"0x185, 0x189"
    Begin block 0x189,0x189,0,0,0,devContract,public,False,0,0,"0x185, 0x189"
"    prev=[0x17c], succ=[0x6d9]",0x189,0,0,0,devContract,public,False,0,0,0x6d9
    =================================,0x189,0,0,0,devContract,public,False,0,0,0x6d9
    0x18b: v18b(0x35e8) = CONST ,0x189,v18b,0,CONST,devContract,public,False,0x35e8,0,0x6d9
    0x18f: v18f(0x6d9) = CONST ,0x189,v18f,0,CONST,devContract,public,False,0x6d9,0,0x6d9
    0x193: JUMP v18f(0x6d9),0x189,0,"0,v18f",JUMP,devContract,public,False,0,0,0x6d9
    Begin block 0x6d9,0x6d9,0,0,0,devContract,public,False,0,0,0x6d9
"    prev=[0x189], succ=[0x35e8]",0x6d9,0,0,0,devContract,public,False,0,0,0x35e8
    =================================,0x6d9,0,0,0,devContract,public,False,0,0,0x35e8
    0x6da: v6da(0x9) = CONST ,0x6d9,v6da,0,CONST,devContract,public,False,0x9,0,0x35e8
    0x6dc: v6dc = SLOAD v6da(0x9),0x6d9,v6dc,"0,v6da",SLOAD,devContract,public,False,0,0,0x35e8
    0x6dd: v6dd(0x1) = CONST ,0x6d9,v6dd,0,CONST,devContract,public,False,0x1,0,0x35e8
    0x6df: v6df(0x1) = CONST ,0x6d9,v6df,0,CONST,devContract,public,False,0x1,0,0x35e8
    0x6e1: v6e1(0xa0) = CONST ,0x6d9,v6e1,0,CONST,devContract,public,False,0xa0,0,0x35e8
"    0x6e3: v6e3(0x10000000000000000000000000000000000000000) = SHL v6e1(0xa0), v6df(0x1)",0x6d9,v6e3,"0,v6e1,v6df",SHL,devContract,public,False,0x10000000000000000000000000000000000000000,0,0x35e8
"    0x6e4: v6e4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6e3(0x10000000000000000000000000000000000000000), v6dd(0x1)",0x6d9,v6e4,"0,v6e3,v6dd",SUB,devContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x35e8
"    0x6e5: v6e5 = AND v6e4(0xffffffffffffffffffffffffffffffffffffffff), v6dc",0x6d9,v6e5,"0,v6e4,v6dc",AND,devContract,public,False,0,0,0x35e8
    0x6e7: JUMP v18b(0x35e8),0x6d9,0,"0,v18b",JUMP,devContract,public,False,0,0,0x35e8
    Begin block 0x35e8,0x35e8,0,0,0,devContract,public,False,0,0,0x35e8
"    prev=[0x6d9], succ=[]",0x35e8,0,0,0,devContract,public,False,0,0,0x35e8
    =================================,0x35e8,0,0,0,devContract,public,False,0,0,0x35e8
    0x35e9: v35e9(0x40) = CONST ,0x35e8,v35e9,0,CONST,devContract,public,False,0x40,0,0x35e8
    0x35ec: v35ec = MLOAD v35e9(0x40),0x35e8,v35ec,"0,v35e9",MLOAD,devContract,public,False,0,devContract&m0x40,0x35e8
    0x35ed: v35ed(0x1) = CONST ,0x35e8,v35ed,0,CONST,devContract,public,False,0x1,0,0x35e8
    0x35ef: v35ef(0x1) = CONST ,0x35e8,v35ef,0,CONST,devContract,public,False,0x1,0,0x35e8
    0x35f1: v35f1(0xa0) = CONST ,0x35e8,v35f1,0,CONST,devContract,public,False,0xa0,0,0x35e8
"    0x35f3: v35f3(0x10000000000000000000000000000000000000000) = SHL v35f1(0xa0), v35ef(0x1)",0x35e8,v35f3,"0,v35f1,v35ef",SHL,devContract,public,False,0x10000000000000000000000000000000000000000,0,0x35e8
"    0x35f4: v35f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v35f3(0x10000000000000000000000000000000000000000), v35ed(0x1)",0x35e8,v35f4,"0,v35f3,v35ed",SUB,devContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x35e8
"    0x35f7: v35f7 = AND v6e5, v35f4(0xffffffffffffffffffffffffffffffffffffffff)",0x35e8,v35f7,"0,v6e5,v35f4",AND,devContract,public,False,0,0,0x35e8
"    0x35f9: MSTORE v35ec, v35f7",0x35e8,devContract&m0x40,"0,v35ec,v35f7",MSTORE,devContract,public,False,0,devContract&m0x40,0x35e8
    0x35fa: v35fa = MLOAD v35e9(0x40),0x35e8,v35fa,"0,v35e9",MLOAD,devContract,public,False,0,devContract&m0x40,0x35e8
"    0x35fe: v35fe(0x0) = SUB v35ec, v35fa",0x35e8,v35fe,"0,v35ec,v35fa",SUB,devContract,public,False,0x0,devContract&m0x40-0x0,0x35e8
    0x35ff: v35ff(0x20) = CONST ,0x35e8,v35ff,0,CONST,devContract,public,False,0x20,0,0x35e8
"    0x3601: v3601(0x20) = ADD v35ff(0x20), v35fe(0x0)",0x35e8,v3601,"0,v35ff,v35fe",ADD,devContract,public,False,0x20,devContract&m0x40-0x0+0x20,0x35e8
"    0x3603: RETURN v35fa, v3601(0x20)",0x35e8,0,"0,v35fa,v3601",RETURN,devContract,public,False,0,0,0x35e8
},0x35e8,0,0,0,devContract,public,False,0,0,0x35e8
"function 0x1a1e(0x1a1earg0x0, 0x1a1earg0x1, 0x1a1earg0x2) private {",0x1a1e,0,"0,private",0x1a1earg0x2,0x1a1e,private,False,0,0,0x35e8
    Begin block 0x1a1e,0x1a1e,0,0,0,0x1a1e,private,False,0,0,0x35e8
"    prev=[], succ=[0x1a2f0x1a1e, 0x1a270x1a1e]",0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
    =================================,0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
    0x1a1f: v1a1f(0x0) = CONST ,0x1a1e,v1a1f,0,CONST,0x1a1e,private,False,0x0,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
    0x1a22: v1a22(0x1a2f) = CONST ,0x1a1e,v1a22,0,CONST,0x1a1e,private,False,0x1a2f,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
"    0x1a26: JUMPI v1a22(0x1a2f), v1a1earg1",0x1a1e,0,"0,v1a22,v1a1earg1",JUMPI,0x1a1e,private,False,0,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
    Begin block 0x1a2f0x1a1e,0x1a2f0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a2f0x1a1e, 0x1a270x1a1e"
"    prev=[0x1a1e], succ=[0x1a3c0x1a1e, 0x1a3d0x1a1e]",0x1a2f0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    =================================,0x1a2f0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
"    0x1a320x1a1e: v1a1e1a32 = MUL v1a1earg0, v1a1earg1",0x1a2f0x1a1e,v1a1e1a32,"0,v1a1earg0,v1a1earg1",MUL,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    0x1a370x1a1e: v1a1e1a37(0x1a3d) = CONST ,0x1a2f0x1a1e,v1a1e1a37,0,CONST,0x1a1e,private,False,0x1a3d,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
"    0x1a3b0x1a1e: JUMPI v1a1e1a37(0x1a3d), v1a1earg1",0x1a2f0x1a1e,0,"0,v1a1e1a37,v1a1earg1",JUMPI,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    Begin block 0x1a3c0x1a1e,0x1a3c0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
"    prev=[0x1a2f0x1a1e], succ=[]",0x1a3c0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    =================================,0x1a3c0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    0x1a3c0x1a1e: THROW ,0x1a3c0x1a1e,0,0,THROW,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
    Begin block 0x1a3d0x1a1e,0x1a3d0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a3c0x1a1e, 0x1a3d0x1a1e"
"    prev=[0x1a2f0x1a1e], succ=[0x1a450x1a1e, 0x3bdc0x1a1e]",0x1a3d0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    =================================,0x1a3d0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a3e0x1a1e: v1a1e1a3e = DIV v1a1e1a32, v1a1earg1",0x1a3d0x1a1e,v1a1e1a3e,"0,v1a1e1a32,v1a1earg1",DIV,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a3f0x1a1e: v1a1e1a3f = EQ v1a1e1a3e, v1a1earg0",0x1a3d0x1a1e,v1a1e1a3f,"0,v1a1e1a3e,v1a1earg0",EQ,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a400x1a1e: v1a1e1a40(0x3bdc) = CONST ,0x1a3d0x1a1e,v1a1e1a40,0,CONST,0x1a1e,private,False,0x3bdc,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a440x1a1e: JUMPI v1a1e1a40(0x3bdc), v1a1e1a3f",0x1a3d0x1a1e,0,"0,v1a1e1a40,v1a1e1a3f",JUMPI,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    Begin block 0x1a450x1a1e,0x1a450x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    prev=[0x1a3d0x1a1e], succ=[]",0x1a450x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    =================================,0x1a450x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a450x1a1e: v1a1e1a45(0x40) = CONST ,0x1a450x1a1e,v1a1e1a45,0,CONST,0x1a1e,private,False,0x40,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a470x1a1e: v1a1e1a47 = MLOAD v1a1e1a45(0x40),0x1a450x1a1e,v1a1e1a47,"0,v1a1e1a45",MLOAD,0x1a1e,private,False,0,0x1a1e&m0x40,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a480x1a1e: v1a1e1a48(0x461bcd) = CONST ,0x1a450x1a1e,v1a1e1a48,0,CONST,0x1a1e,private,False,0x461bcd,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a4c0x1a1e: v1a1e1a4c(0xe5) = CONST ,0x1a450x1a1e,v1a1e1a4c,0,CONST,0x1a1e,private,False,0xe5,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a4e0x1a1e: v1a1e1a4e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1a1e1a4c(0xe5), v1a1e1a48(0x461bcd)",0x1a450x1a1e,v1a1e1a4e,"0,v1a1e1a4c,v1a1e1a48",SHL,0x1a1e,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a500x1a1e: MSTORE v1a1e1a47, v1a1e1a4e(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1a450x1a1e,0x1a1e&m0x40,"0,v1a1e1a47,v1a1e1a4e",MSTORE,0x1a1e,private,False,0,0x1a1e&m0x40,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a510x1a1e: v1a1e1a51(0x4) = CONST ,0x1a450x1a1e,v1a1e1a51,0,CONST,0x1a1e,private,False,0x4,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a530x1a1e: v1a1e1a53 = ADD v1a1e1a51(0x4), v1a1e1a47",0x1a450x1a1e,v1a1e1a53,"0,v1a1e1a51,v1a1e1a47",ADD,0x1a1e,private,False,0,0x1a1e&m0x40+0x4,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a560x1a1e: v1a1e1a56(0x20) = CONST ,0x1a450x1a1e,v1a1e1a56,0,CONST,0x1a1e,private,False,0x20,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a580x1a1e: v1a1e1a58 = ADD v1a1e1a56(0x20), v1a1e1a53",0x1a450x1a1e,v1a1e1a58,"0,v1a1e1a56,v1a1e1a53",ADD,0x1a1e,private,False,0,0x1a1e&m0x40+0x4+0x20,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a5b0x1a1e: v1a1e1a5b(0x20) = SUB v1a1e1a58, v1a1e1a53",0x1a450x1a1e,v1a1e1a5b,"0,v1a1e1a58,v1a1e1a53",SUB,0x1a1e,private,False,0x20,0x1a1e&m0x40+0x4+0x20-0x20,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a5d0x1a1e: MSTORE v1a1e1a53, v1a1e1a5b(0x20)",0x1a450x1a1e,0x1a1e&m0x40+0x4,"0,v1a1e1a53,v1a1e1a5b",MSTORE,0x1a1e,private,False,0,0x1a1e&m0x40+0x4,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a5e0x1a1e: v1a1e1a5e(0x21) = CONST ,0x1a450x1a1e,v1a1e1a5e,0,CONST,0x1a1e,private,False,0x21,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a610x1a1e: MSTORE v1a1e1a58, v1a1e1a5e(0x21)",0x1a450x1a1e,0x1a1e&m0x40+0x4+0x20,"0,v1a1e1a58,v1a1e1a5e",MSTORE,0x1a1e,private,False,0,0x1a1e&m0x40+0x4+0x20,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a620x1a1e: v1a1e1a62(0x20) = CONST ,0x1a450x1a1e,v1a1e1a62,0,CONST,0x1a1e,private,False,0x20,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a640x1a1e: v1a1e1a64 = ADD v1a1e1a62(0x20), v1a1e1a58",0x1a450x1a1e,v1a1e1a64,"0,v1a1e1a62,v1a1e1a58",ADD,0x1a1e,private,False,0,0x1a1e&m0x40+0x4+0x20+0x20,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a660x1a1e: v1a1e1a66(0x341b) = CONST ,0x1a450x1a1e,v1a1e1a66,0,CONST,0x1a1e,private,False,0x341b,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a6a0x1a1e: v1a1e1a6a(0x21) = CONST ,0x1a450x1a1e,v1a1e1a6a,0,CONST,0x1a1e,private,False,0x21,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a6d0x1a1e: CODECOPY v1a1e1a64, v1a1e1a66(0x341b), v1a1e1a6a(0x21)",0x1a450x1a1e,0,"0,v1a1e1a64,v1a1e1a66,v1a1e1a6a",CODECOPY,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a6e0x1a1e: v1a1e1a6e(0x40) = CONST ,0x1a450x1a1e,v1a1e1a6e,0,CONST,0x1a1e,private,False,0x40,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a700x1a1e: v1a1e1a70 = ADD v1a1e1a6e(0x40), v1a1e1a64",0x1a450x1a1e,v1a1e1a70,"0,v1a1e1a6e,v1a1e1a64",ADD,0x1a1e,private,False,0,0x1a1e&m0x40+0x4+0x20+0x20+0x40,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a740x1a1e: v1a1e1a74(0x40) = CONST ,0x1a450x1a1e,v1a1e1a74,0,CONST,0x1a1e,private,False,0x40,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    0x1a760x1a1e: v1a1e1a76 = MLOAD v1a1e1a74(0x40),0x1a450x1a1e,v1a1e1a76,"0,v1a1e1a74",MLOAD,0x1a1e,private,False,0,0x1a1e&m0x40,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a790x1a1e: v1a1e1a79(0x84) = SUB v1a1e1a70, v1a1e1a76",0x1a450x1a1e,v1a1e1a79,"0,v1a1e1a70,v1a1e1a76",SUB,0x1a1e,private,False,0x84,0x1a1e&m0x40+0x4+0x20+0x20+0x40-0x84,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x1a7b0x1a1e: REVERT v1a1e1a76, v1a1e1a79(0x84)",0x1a450x1a1e,0,"0,v1a1e1a76,v1a1e1a79",REVERT,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    Begin block 0x3bdc0x1a1e,0x3bdc0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    prev=[0x1a3d0x1a1e], succ=[]",0x3bdc0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    =================================,0x3bdc0x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    0x3be20x1a1e: RETURNPRIVATE v1a1earg2, v1a1e1a32",0x3bdc0x1a1e,0,"0,v1a1earg2,v1a1e1a32",RETURNPRIVATE,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
    Begin block 0x1a270x1a1e,0x1a270x1a1e,0,0,0,0x1a1e,private,False,0,0,"0x1a450x1a1e, 0x3bdc0x1a1e"
"    prev=[0x1a1e], succ=[0xd650x1a1e]",0x1a270x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
    =================================,0x1a270x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
    0x1a280x1a1e: v1a1e1a28(0x0) = CONST ,0x1a270x1a1e,v1a1e1a28,0,CONST,0x1a1e,private,False,0x0,0,0xd650x1a1e
    0x1a2a0x1a1e: v1a1e1a2a(0xd65) = CONST ,0x1a270x1a1e,v1a1e1a2a,0,CONST,0x1a1e,private,False,0xd65,0,0xd650x1a1e
    0x1a2e0x1a1e: JUMP v1a1e1a2a(0xd65),0x1a270x1a1e,0,"0,v1a1e1a2a",JUMP,0x1a1e,private,False,0,0,0xd650x1a1e
    Begin block 0xd650x1a1e,0xd650x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
"    prev=[0x1a270x1a1e], succ=[]",0xd650x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
    =================================,0xd650x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
"    0xd6a0x1a1e: RETURNPRIVATE v1a1earg2, v1a1e1a28(0x0)",0xd650x1a1e,0,"0,v1a1earg2,v1a1e1a28",RETURNPRIVATE,0x1a1e,private,False,0,0,0xd650x1a1e
},0xd650x1a1e,0,0,0,0x1a1e,private,False,0,0,0xd650x1a1e
"function 0x1a83(0x1a83arg0x0, 0x1a83arg0x1, 0x1a83arg0x2) private {",0x1a83,0,"0,private",0x1a83arg0x2,0x1a83,private,False,0,0,0xd650x1a1e
    Begin block 0x1a83,0x1a83,0,0,0,0x1a83,private,False,0,0,0xd650x1a1e
"    prev=[], succ=[0x1d220x1a83]",0x1a83,0,0,0,0x1a83,private,False,0,0,0x1d220x1a83
    =================================,0x1a83,0,0,0,0x1a83,private,False,0,0,0x1d220x1a83
    0x1a84: v1a84(0x0) = CONST ,0x1a83,v1a84,0,CONST,0x1a83,private,False,0x0,0,0x1d220x1a83
    0x1a86: v1a86(0x3c02) = CONST ,0x1a83,v1a86,0,CONST,0x1a83,private,False,0x3c02,0,0x1d220x1a83
    0x1a8c: v1a8c(0x40) = CONST ,0x1a83,v1a8c,0,CONST,0x1a83,private,False,0x40,0,0x1d220x1a83
    0x1a8e: v1a8e = MLOAD v1a8c(0x40),0x1a83,v1a8e,"0,v1a8c",MLOAD,0x1a83,private,False,0,0x1a83&m0x40,0x1d220x1a83
    0x1a90: v1a90(0x40) = CONST ,0x1a83,v1a90,0,CONST,0x1a83,private,False,0x40,0,0x1d220x1a83
"    0x1a92: v1a92 = ADD v1a90(0x40), v1a8e",0x1a83,v1a92,"0,v1a90,v1a8e",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x40,0x1d220x1a83
    0x1a93: v1a93(0x40) = CONST ,0x1a83,v1a93,0,CONST,0x1a83,private,False,0x40,0,0x1d220x1a83
"    0x1a95: MSTORE v1a93(0x40), v1a92",0x1a83,0,"0,v1a93,v1a92",MSTORE,0x1a83,private,False,0,0,0x1d220x1a83
    0x1a97: v1a97(0x1a) = CONST ,0x1a83,v1a97,0,CONST,0x1a83,private,False,0x1a,0,0x1d220x1a83
"    0x1a9a: MSTORE v1a8e, v1a97(0x1a)",0x1a83,0x1a83&m0x40,"0,v1a8e,v1a97",MSTORE,0x1a83,private,False,0,0x1a83&m0x40,0x1d220x1a83
    0x1a9b: v1a9b(0x20) = CONST ,0x1a83,v1a9b,0,CONST,0x1a83,private,False,0x20,0,0x1d220x1a83
"    0x1a9d: v1a9d = ADD v1a9b(0x20), v1a8e",0x1a83,v1a9d,"0,v1a9b,v1a8e",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x20,0x1d220x1a83
    0x1a9e: v1a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000) = CONST ,0x1a83,v1a9e,0,CONST,0x1a83,private,False,0x536166654d6174683a206469766973696f6e206279207a65726f000000000000,0,0x1d220x1a83
"    0x1ac0: MSTORE v1a9d, v1a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000)",0x1a83,0x1a83&m0x40+0x20,"0,v1a9d,v1a9e",MSTORE,0x1a83,private,False,0,0x1a83&m0x40+0x20,0x1d220x1a83
    0x1ac2: v1ac2(0x1d22) = CONST ,0x1a83,v1ac2,0,CONST,0x1a83,private,False,0x1d22,0,0x1d220x1a83
    0x1ac6: JUMP v1ac2(0x1d22),0x1a83,0,"0,v1ac2",JUMP,0x1a83,private,False,0,0,0x1d220x1a83
    Begin block 0x1d220x1a83,0x1d220x1a83,0,0,0,0x1a83,private,False,0,0,0x1d220x1a83
"    prev=[0x1a83], succ=[0x1d2c0x1a83, 0x1db20x1a83]",0x1d220x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d2c0x1a83, 0x1db20x1a83"
    =================================,0x1d220x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d2c0x1a83, 0x1db20x1a83"
    0x1d230x1a83: v1a831d23(0x0) = CONST ,0x1d220x1a83,v1a831d23,0,CONST,0x1a83,private,False,0x0,0,"0x1d2c0x1a83, 0x1db20x1a83"
    0x1d270x1a83: v1a831d27(0x1db2) = CONST ,0x1d220x1a83,v1a831d27,0,CONST,0x1a83,private,False,0x1db2,0,"0x1d2c0x1a83, 0x1db20x1a83"
"    0x1d2b0x1a83: JUMPI v1a831d27(0x1db2), v1a83arg0",0x1d220x1a83,0,"0,v1a831d27,v1a83arg0",JUMPI,0x1a83,private,False,0,0,"0x1d2c0x1a83, 0x1db20x1a83"
    Begin block 0x1d2c0x1a83,0x1d2c0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d2c0x1a83, 0x1db20x1a83"
"    prev=[0x1d220x1a83], succ=[0x1d5c0x1a83]",0x1d2c0x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
    =================================,0x1d2c0x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
    0x1d2c0x1a83: v1a831d2c(0x40) = CONST ,0x1d2c0x1a83,v1a831d2c,0,CONST,0x1a83,private,False,0x40,0,0x1d5c0x1a83
    0x1d2e0x1a83: v1a831d2e = MLOAD v1a831d2c(0x40),0x1d2c0x1a83,v1a831d2e,"0,v1a831d2c",MLOAD,0x1a83,private,False,0,0x1a83&m0x40,0x1d5c0x1a83
    0x1d2f0x1a83: v1a831d2f(0x461bcd) = CONST ,0x1d2c0x1a83,v1a831d2f,0,CONST,0x1a83,private,False,0x461bcd,0,0x1d5c0x1a83
    0x1d330x1a83: v1a831d33(0xe5) = CONST ,0x1d2c0x1a83,v1a831d33,0,CONST,0x1a83,private,False,0xe5,0,0x1d5c0x1a83
"    0x1d350x1a83: v1a831d35(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1a831d33(0xe5), v1a831d2f(0x461bcd)",0x1d2c0x1a83,v1a831d35,"0,v1a831d33,v1a831d2f",SHL,0x1a83,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,0x1d5c0x1a83
"    0x1d370x1a83: MSTORE v1a831d2e, v1a831d35(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1d2c0x1a83,0x1a83&m0x40,"0,v1a831d2e,v1a831d35",MSTORE,0x1a83,private,False,0,0x1a83&m0x40,0x1d5c0x1a83
    0x1d380x1a83: v1a831d38(0x4) = CONST ,0x1d2c0x1a83,v1a831d38,0,CONST,0x1a83,private,False,0x4,0,0x1d5c0x1a83
"    0x1d3a0x1a83: v1a831d3a = ADD v1a831d38(0x4), v1a831d2e",0x1d2c0x1a83,v1a831d3a,"0,v1a831d38,v1a831d2e",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x4,0x1d5c0x1a83
    0x1d3d0x1a83: v1a831d3d(0x20) = CONST ,0x1d2c0x1a83,v1a831d3d,0,CONST,0x1a83,private,False,0x20,0,0x1d5c0x1a83
"    0x1d3f0x1a83: v1a831d3f = ADD v1a831d3d(0x20), v1a831d3a",0x1d2c0x1a83,v1a831d3f,"0,v1a831d3d,v1a831d3a",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20,0x1d5c0x1a83
"    0x1d420x1a83: v1a831d42(0x20) = SUB v1a831d3f, v1a831d3a",0x1d2c0x1a83,v1a831d42,"0,v1a831d3f,v1a831d3a",SUB,0x1a83,private,False,0x20,0x1a83&m0x40+0x4+0x20-0x20,0x1d5c0x1a83
"    0x1d440x1a83: MSTORE v1a831d3a, v1a831d42(0x20)",0x1d2c0x1a83,0x1a83&m0x40+0x4,"0,v1a831d3a,v1a831d42",MSTORE,0x1a83,private,False,0,0x1a83&m0x40+0x4,0x1d5c0x1a83
    0x1d480x1a83: v1a831d48(0x1a) = MLOAD v1a8e,0x1d2c0x1a83,v1a831d48,"0,v1a8e",MLOAD,0x1a83,private,False,0x1a,0x1a83&m0x1a,0x1d5c0x1a83
"    0x1d4a0x1a83: MSTORE v1a831d3f, v1a831d48(0x1a)",0x1d2c0x1a83,0x1a83&m0x40+0x4+0x20,"0,v1a831d3f,v1a831d48",MSTORE,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20,0x1d5c0x1a83
    0x1d4b0x1a83: v1a831d4b(0x20) = CONST ,0x1d2c0x1a83,v1a831d4b,0,CONST,0x1a83,private,False,0x20,0,0x1d5c0x1a83
"    0x1d4d0x1a83: v1a831d4d = ADD v1a831d4b(0x20), v1a831d3f",0x1d2c0x1a83,v1a831d4d,"0,v1a831d4b,v1a831d3f",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20+0x20,0x1d5c0x1a83
    0x1d510x1a83: v1a831d51(0x1a) = MLOAD v1a8e,0x1d2c0x1a83,v1a831d51,"0,v1a8e",MLOAD,0x1a83,private,False,0x1a,0x1a83&m0x1a,0x1d5c0x1a83
    0x1d530x1a83: v1a831d53(0x20) = CONST ,0x1d2c0x1a83,v1a831d53,0,CONST,0x1a83,private,False,0x20,0,0x1d5c0x1a83
"    0x1d550x1a83: v1a831d55 = ADD v1a831d53(0x20), v1a8e",0x1d2c0x1a83,v1a831d55,"0,v1a831d53,v1a8e",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x20,0x1d5c0x1a83
    0x1d5a0x1a83: v1a831d5a(0x0) = CONST ,0x1d2c0x1a83,v1a831d5a,0,CONST,0x1a83,private,False,0x0,0,0x1d5c0x1a83
    Begin block 0x1d5c0x1a83,0x1d5c0x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
"    prev=[0x1d2c0x1a83, 0x1d660x1a83], succ=[0x1d760x1a83, 0x1d660x1a83]",0x1d5c0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
    =================================,0x1d5c0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
"    0x1d5c0x1a83_0x0: v1d5c1a83_0 = PHI v1a831d70, v1a831d5a(0x0)",0x1d5c0x1a83,v1d5c1a83_0,"0,v1a831d70,v1a831d5a",PHI,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
"    0x1d5f0x1a83: v1a831d5f = LT v1d5c1a83_0, v1a831d51(0x1a)",0x1d5c0x1a83,v1a831d5f,"0,v1d5c1a83_0,v1a831d51",LT,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
    0x1d600x1a83: v1a831d60 = ISZERO v1a831d5f,0x1d5c0x1a83,v1a831d60,"0,v1a831d5f",ISZERO,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
    0x1d610x1a83: v1a831d61(0x1d76) = CONST ,0x1d5c0x1a83,v1a831d61,0,CONST,0x1a83,private,False,0x1d76,0,"0x1d760x1a83, 0x1d660x1a83"
"    0x1d650x1a83: JUMPI v1a831d61(0x1d76), v1a831d60",0x1d5c0x1a83,0,"0,v1a831d61,v1a831d60",JUMPI,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
    Begin block 0x1d760x1a83,0x1d760x1a83,0,0,0,0x1a83,private,False,0,0,"0x1d760x1a83, 0x1d660x1a83"
"    prev=[0x1d5c0x1a83], succ=[0x1da40x1a83, 0x1d8b0x1a83]",0x1d760x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    =================================,0x1d760x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1d7f0x1a83: v1a831d7f = ADD v1a831d51(0x1a), v1a831d4d",0x1d760x1a83,v1a831d7f,"0,v1a831d51,v1a831d4d",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20+0x20+0x1a,"0x1da40x1a83, 0x1d8b0x1a83"
    0x1d810x1a83: v1a831d81(0x1f) = CONST ,0x1d760x1a83,v1a831d81,0,CONST,0x1a83,private,False,0x1f,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1d830x1a83: v1a831d83(0x1a) = AND v1a831d81(0x1f), v1a831d51(0x1a)",0x1d760x1a83,v1a831d83,"0,v1a831d81,v1a831d51",AND,0x1a83,private,False,0x1a,0,"0x1da40x1a83, 0x1d8b0x1a83"
    0x1d850x1a83: v1a831d85 = ISZERO v1a831d83(0x1a),0x1d760x1a83,v1a831d85,"0,v1a831d83",ISZERO,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    0x1d860x1a83: v1a831d86(0x1da4) = CONST ,0x1d760x1a83,v1a831d86,0,CONST,0x1a83,private,False,0x1da4,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1d8a0x1a83: JUMPI v1a831d86(0x1da4), v1a831d85",0x1d760x1a83,0,"0,v1a831d86,v1a831d85",JUMPI,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    Begin block 0x1da40x1a83,0x1da40x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    prev=[0x1d760x1a83, 0x1d8b0x1a83], succ=[]",0x1da40x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    =================================,0x1da40x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1da40x1a83_0x1: v1da41a83_1 = PHI v1a831da1, v1a831d7f",0x1da40x1a83,v1da41a83_1,"0,v1a831da1,v1a831d7f",PHI,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    0x1daa0x1a83: v1a831daa(0x40) = CONST ,0x1da40x1a83,v1a831daa,0,CONST,0x1a83,private,False,0x40,0,"0x1da40x1a83, 0x1d8b0x1a83"
    0x1dac0x1a83: v1a831dac = MLOAD v1a831daa(0x40),0x1da40x1a83,v1a831dac,"0,v1a831daa",MLOAD,0x1a83,private,False,0,0x1a83&m0x40,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1daf0x1a83: v1a831daf = SUB v1da41a83_1, v1a831dac",0x1da40x1a83,v1a831daf,"0,v1da41a83_1,v1a831dac",SUB,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    0x1db10x1a83: REVERT v1a831dac, v1a831daf",0x1da40x1a83,0,"0,v1a831dac,v1a831daf",REVERT,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
    Begin block 0x1d8b0x1a83,0x1d8b0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1da40x1a83, 0x1d8b0x1a83"
"    prev=[0x1d760x1a83], succ=[0x1da40x1a83]",0x1d8b0x1a83,0,0,0,0x1a83,private,False,0,0,0x1da40x1a83
    =================================,0x1d8b0x1a83,0,0,0,0x1a83,private,False,0,0,0x1da40x1a83
"    0x1d8d0x1a83: v1a831d8d = SUB v1a831d7f, v1a831d83(0x1a)",0x1d8b0x1a83,v1a831d8d,"0,v1a831d7f,v1a831d83",SUB,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x1a83
    0x1d8f0x1a83: v1a831d8f = MLOAD v1a831d8d,0x1d8b0x1a83,v1a831d8f,"0,v1a831d8d",MLOAD,0x1a83,private,False,0,0,0x1da40x1a83
    0x1d900x1a83: v1a831d90(0x1) = CONST ,0x1d8b0x1a83,v1a831d90,0,CONST,0x1a83,private,False,0x1,0,0x1da40x1a83
    0x1d930x1a83: v1a831d93(0x20) = CONST ,0x1d8b0x1a83,v1a831d93,0,CONST,0x1a83,private,False,0x20,0,0x1da40x1a83
"    0x1d950x1a83: v1a831d95(0x6) = SUB v1a831d93(0x20), v1a831d83(0x1a)",0x1d8b0x1a83,v1a831d95,"0,v1a831d93,v1a831d83",SUB,0x1a83,private,False,0x6,0,0x1da40x1a83
    0x1d960x1a83: v1a831d96(0x100) = CONST ,0x1d8b0x1a83,v1a831d96,0,CONST,0x1a83,private,False,0x100,0,0x1da40x1a83
"    0x1d990x1a83: v1a831d99(0x1000000000000) = EXP v1a831d96(0x100), v1a831d95(0x6)",0x1d8b0x1a83,v1a831d99,"0,v1a831d96,v1a831d95",EXP,0x1a83,private,False,0x1000000000000,0,0x1da40x1a83
"    0x1d9a0x1a83: v1a831d9a(0xffffffffffff) = SUB v1a831d99(0x1000000000000), v1a831d90(0x1)",0x1d8b0x1a83,v1a831d9a,"0,v1a831d99,v1a831d90",SUB,0x1a83,private,False,0xffffffffffff,0,0x1da40x1a83
    0x1d9b0x1a83: v1a831d9b = NOT v1a831d9a(0xffffffffffff),0x1d8b0x1a83,v1a831d9b,"0,v1a831d9a",NOT,0x1a83,private,False,0,0,0x1da40x1a83
"    0x1d9c0x1a83: v1a831d9c = AND v1a831d9b, v1a831d8f",0x1d8b0x1a83,v1a831d9c,"0,v1a831d9b,v1a831d8f",AND,0x1a83,private,False,0,0,0x1da40x1a83
"    0x1d9e0x1a83: MSTORE v1a831d8d, v1a831d9c",0x1d8b0x1a83,0x1a83&m0x40+0x4+0x20+0x20+0x1a-0x1a,"0,v1a831d8d,v1a831d9c",MSTORE,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x1a83
    0x1d9f0x1a83: v1a831d9f(0x20) = CONST ,0x1d8b0x1a83,v1a831d9f,0,CONST,0x1a83,private,False,0x20,0,0x1da40x1a83
"    0x1da10x1a83: v1a831da1 = ADD v1a831d9f(0x20), v1a831d8d",0x1d8b0x1a83,v1a831da1,"0,v1a831d9f,v1a831d8d",ADD,0x1a83,private,False,0,0x1a83&m0x40+0x4+0x20+0x20+0x1a-0x1a+0x20,0x1da40x1a83
    Begin block 0x1d660x1a83,0x1d660x1a83,0,0,0,0x1a83,private,False,0,0,0x1da40x1a83
"    prev=[0x1d5c0x1a83], succ=[0x1d5c0x1a83]",0x1d660x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
    =================================,0x1d660x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
"    0x1d660x1a83_0x0: v1d661a83_0 = PHI v1a831d70, v1a831d5a(0x0)",0x1d660x1a83,v1d661a83_0,"0,v1a831d70,v1a831d5a",PHI,0x1a83,private,False,0,0,0x1d5c0x1a83
"    0x1d680x1a83: v1a831d68 = ADD v1d661a83_0, v1a831d55",0x1d660x1a83,v1a831d68,"0,v1d661a83_0,v1a831d55",ADD,0x1a83,private,False,0,0,0x1d5c0x1a83
    0x1d690x1a83: v1a831d69 = MLOAD v1a831d68,0x1d660x1a83,v1a831d69,"0,v1a831d68",MLOAD,0x1a83,private,False,0,0,0x1d5c0x1a83
"    0x1d6c0x1a83: v1a831d6c = ADD v1d661a83_0, v1a831d4d",0x1d660x1a83,v1a831d6c,"0,v1d661a83_0,v1a831d4d",ADD,0x1a83,private,False,0,0,0x1d5c0x1a83
"    0x1d6d0x1a83: MSTORE v1a831d6c, v1a831d69",0x1d660x1a83,0,"0,v1a831d6c,v1a831d69",MSTORE,0x1a83,private,False,0,0,0x1d5c0x1a83
    0x1d6e0x1a83: v1a831d6e(0x20) = CONST ,0x1d660x1a83,v1a831d6e,0,CONST,0x1a83,private,False,0x20,0,0x1d5c0x1a83
"    0x1d700x1a83: v1a831d70 = ADD v1a831d6e(0x20), v1d661a83_0",0x1d660x1a83,v1a831d70,"0,v1a831d6e,v1d661a83_0",ADD,0x1a83,private,False,0,0,0x1d5c0x1a83
    0x1d710x1a83: v1a831d71(0x1d5c) = CONST ,0x1d660x1a83,v1a831d71,0,CONST,0x1a83,private,False,0x1d5c,0,0x1d5c0x1a83
    0x1d750x1a83: JUMP v1a831d71(0x1d5c),0x1d660x1a83,0,"0,v1a831d71",JUMP,0x1a83,private,False,0,0,0x1d5c0x1a83
    Begin block 0x1db20x1a83,0x1db20x1a83,0,0,0,0x1a83,private,False,0,0,0x1d5c0x1a83
"    prev=[0x1d220x1a83], succ=[0x1dbe0x1a83, 0x1dbf0x1a83]",0x1db20x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    =================================,0x1db20x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    0x1db40x1a83: v1a831db4(0x0) = CONST ,0x1db20x1a83,v1a831db4,0,CONST,0x1a83,private,False,0x0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    0x1db90x1a83: v1a831db9(0x1dbf) = CONST ,0x1db20x1a83,v1a831db9,0,CONST,0x1a83,private,False,0x1dbf,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
"    0x1dbd0x1a83: JUMPI v1a831db9(0x1dbf), v1a83arg0",0x1db20x1a83,0,"0,v1a831db9,v1a83arg0",JUMPI,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    Begin block 0x1dbe0x1a83,0x1dbe0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
"    prev=[0x1db20x1a83], succ=[]",0x1dbe0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    =================================,0x1dbe0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    0x1dbe0x1a83: THROW ,0x1dbe0x1a83,0,0,THROW,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
    Begin block 0x1dbf0x1a83,0x1dbf0x1a83,0,0,0,0x1a83,private,False,0,0,"0x1dbe0x1a83, 0x1dbf0x1a83"
"    prev=[0x1db20x1a83], succ=[0x3c020x1a83]",0x1dbf0x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
    =================================,0x1dbf0x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
"    0x1dc00x1a83: v1a831dc0 = DIV v1a83arg1, v1a83arg0",0x1dbf0x1a83,v1a831dc0,"0,v1a83arg1,v1a83arg0",DIV,0x1a83,private,False,0,0,0x3c020x1a83
    0x1dc80x1a83: JUMP v1a86(0x3c02),0x1dbf0x1a83,0,"0,v1a86",JUMP,0x1a83,private,False,0,0,0x3c020x1a83
    Begin block 0x3c020x1a83,0x3c020x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
"    prev=[0x1dbf0x1a83], succ=[]",0x3c020x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
    =================================,0x3c020x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
"    0x3c080x1a83: RETURNPRIVATE v1a83arg2, v1a831dc0",0x3c020x1a83,0,"0,v1a83arg2,v1a831dc0",RETURNPRIVATE,0x1a83,private,False,0,0,0x3c020x1a83
},0x3c020x1a83,0,0,0,0x1a83,private,False,0,0,0x3c020x1a83
"function 0x1ac7(0x1ac7arg0x0, 0x1ac7arg0x1, 0x1ac7arg0x2) private {",0x1ac7,0,"0,private",0x1ac7arg0x2,0x1ac7,private,False,0,0,0x3c020x1a83
    Begin block 0x1ac7,0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x3c020x1a83
"    prev=[], succ=[0x1dc9]",0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1dc9
    =================================,0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1dc9
    0x1ac8: v1ac8(0x0) = CONST ,0x1ac7,v1ac8,0,CONST,0x1ac7,private,False,0x0,0,0x1dc9
    0x1aca: v1aca(0x3c28) = CONST ,0x1ac7,v1aca,0,CONST,0x1ac7,private,False,0x3c28,0,0x1dc9
    0x1ad0: v1ad0(0x40) = CONST ,0x1ac7,v1ad0,0,CONST,0x1ac7,private,False,0x40,0,0x1dc9
    0x1ad2: v1ad2 = MLOAD v1ad0(0x40),0x1ac7,v1ad2,"0,v1ad0",MLOAD,0x1ac7,private,False,0,0x1ac7&m0x40,0x1dc9
    0x1ad4: v1ad4(0x40) = CONST ,0x1ac7,v1ad4,0,CONST,0x1ac7,private,False,0x40,0,0x1dc9
"    0x1ad6: v1ad6 = ADD v1ad4(0x40), v1ad2",0x1ac7,v1ad6,"0,v1ad4,v1ad2",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x40,0x1dc9
    0x1ad7: v1ad7(0x40) = CONST ,0x1ac7,v1ad7,0,CONST,0x1ac7,private,False,0x40,0,0x1dc9
"    0x1ad9: MSTORE v1ad7(0x40), v1ad6",0x1ac7,0,"0,v1ad7,v1ad6",MSTORE,0x1ac7,private,False,0,0,0x1dc9
    0x1adb: v1adb(0x1e) = CONST ,0x1ac7,v1adb,0,CONST,0x1ac7,private,False,0x1e,0,0x1dc9
"    0x1ade: MSTORE v1ad2, v1adb(0x1e)",0x1ac7,0x1ac7&m0x40,"0,v1ad2,v1adb",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40,0x1dc9
    0x1adf: v1adf(0x20) = CONST ,0x1ac7,v1adf,0,CONST,0x1ac7,private,False,0x20,0,0x1dc9
"    0x1ae1: v1ae1 = ADD v1adf(0x20), v1ad2",0x1ac7,v1ae1,"0,v1adf,v1ad2",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x20,0x1dc9
    0x1ae2: v1ae2(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST ,0x1ac7,v1ae2,0,CONST,0x1ac7,private,False,0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000,0,0x1dc9
"    0x1b04: MSTORE v1ae1, v1ae2(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)",0x1ac7,0x1ac7&m0x40+0x20,"0,v1ae1,v1ae2",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40+0x20,0x1dc9
    0x1b06: v1b06(0x1dc9) = CONST ,0x1ac7,v1b06,0,CONST,0x1ac7,private,False,0x1dc9,0,0x1dc9
    0x1b0a: JUMP v1b06(0x1dc9),0x1ac7,0,"0,v1b06",JUMP,0x1ac7,private,False,0,0,0x1dc9
    Begin block 0x1dc9,0x1dc9,0,0,0,0x1ac7,private,False,0,0,0x1dc9
"    prev=[0x1ac7], succ=[0x1dd6, 0x1e1e]",0x1dc9,0,0,0,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
    =================================,0x1dc9,0,0,0,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
    0x1dca: v1dca(0x0) = CONST ,0x1dc9,v1dca,0,CONST,0x1ac7,private,False,0x0,0,"0x1dd6, 0x1e1e"
"    0x1dcf: v1dcf = GT v1ac7arg0, v1ac7arg1",0x1dc9,v1dcf,"0,v1ac7arg0,v1ac7arg1",GT,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
    0x1dd0: v1dd0 = ISZERO v1dcf,0x1dc9,v1dd0,"0,v1dcf",ISZERO,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
    0x1dd1: v1dd1(0x1e1e) = CONST ,0x1dc9,v1dd1,0,CONST,0x1ac7,private,False,0x1e1e,0,"0x1dd6, 0x1e1e"
"    0x1dd5: JUMPI v1dd1(0x1e1e), v1dd0",0x1dc9,0,"0,v1dd1,v1dd0",JUMPI,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
    Begin block 0x1dd6,0x1dd6,0,0,0,0x1ac7,private,False,0,0,"0x1dd6, 0x1e1e"
"    prev=[0x1dc9], succ=[0x1e0e, 0x1d760x1ac7]",0x1dd6,0,0,0,0x1ac7,private,False,0,0,"0x1e0e, 0x1d760x1ac7"
    =================================,0x1dd6,0,0,0,0x1ac7,private,False,0,0,"0x1e0e, 0x1d760x1ac7"
    0x1dd6: v1dd6(0x40) = CONST ,0x1dd6,v1dd6,0,CONST,0x1ac7,private,False,0x40,0,"0x1e0e, 0x1d760x1ac7"
    0x1dd8: v1dd8 = MLOAD v1dd6(0x40),0x1dd6,v1dd8,"0,v1dd6",MLOAD,0x1ac7,private,False,0,0x1ac7&m0x40,"0x1e0e, 0x1d760x1ac7"
    0x1dd9: v1dd9(0x461bcd) = CONST ,0x1dd6,v1dd9,0,CONST,0x1ac7,private,False,0x461bcd,0,"0x1e0e, 0x1d760x1ac7"
    0x1ddd: v1ddd(0xe5) = CONST ,0x1dd6,v1ddd,0,CONST,0x1ac7,private,False,0xe5,0,"0x1e0e, 0x1d760x1ac7"
"    0x1ddf: v1ddf(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1ddd(0xe5), v1dd9(0x461bcd)",0x1dd6,v1ddf,"0,v1ddd,v1dd9",SHL,0x1ac7,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1e0e, 0x1d760x1ac7"
"    0x1de1: MSTORE v1dd8, v1ddf(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1dd6,0x1ac7&m0x40,"0,v1dd8,v1ddf",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40,"0x1e0e, 0x1d760x1ac7"
    0x1de2: v1de2(0x20) = CONST ,0x1dd6,v1de2,0,CONST,0x1ac7,private,False,0x20,0,"0x1e0e, 0x1d760x1ac7"
    0x1de4: v1de4(0x4) = CONST ,0x1dd6,v1de4,0,CONST,0x1ac7,private,False,0x4,0,"0x1e0e, 0x1d760x1ac7"
"    0x1de7: v1de7 = ADD v1dd8, v1de4(0x4)",0x1dd6,v1de7,"0,v1dd8,v1de4",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x4,"0x1e0e, 0x1d760x1ac7"
"    0x1dea: MSTORE v1de7, v1de2(0x20)",0x1dd6,0x1ac7&m0x40+0x4,"0,v1de7,v1de2",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40+0x4,"0x1e0e, 0x1d760x1ac7"
    0x1dec: v1dec(0x1e) = MLOAD v1ad2,0x1dd6,v1dec,"0,v1ad2",MLOAD,0x1ac7,private,False,0x1e,0x1ac7&m0x1e,"0x1e0e, 0x1d760x1ac7"
    0x1ded: v1ded(0x24) = CONST ,0x1dd6,v1ded,0,CONST,0x1ac7,private,False,0x24,0,"0x1e0e, 0x1d760x1ac7"
"    0x1df0: v1df0 = ADD v1dd8, v1ded(0x24)",0x1dd6,v1df0,"0,v1dd8,v1ded",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x24,"0x1e0e, 0x1d760x1ac7"
"    0x1df1: MSTORE v1df0, v1dec(0x1e)",0x1dd6,0x1ac7&m0x40+0x24,"0,v1df0,v1dec",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40+0x24,"0x1e0e, 0x1d760x1ac7"
    0x1df3: v1df3(0x1e) = MLOAD v1ad2,0x1dd6,v1df3,"0,v1ad2",MLOAD,0x1ac7,private,False,0x1e,0x1ac7&m0x1e,"0x1e0e, 0x1d760x1ac7"
    0x1df8: v1df8(0x44) = CONST ,0x1dd6,v1df8,0,CONST,0x1ac7,private,False,0x44,0,"0x1e0e, 0x1d760x1ac7"
"    0x1dfc: v1dfc = ADD v1dd8, v1df8(0x44)",0x1dd6,v1dfc,"0,v1dd8,v1df8",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x44,"0x1e0e, 0x1d760x1ac7"
"    0x1e00: v1e00 = ADD v1ad2, v1de2(0x20)",0x1dd6,v1e00,"0,v1ad2,v1de2",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x20,"0x1e0e, 0x1d760x1ac7"
    0x1e05: v1e05(0x0) = CONST ,0x1dd6,v1e05,0,CONST,0x1ac7,private,False,0x0,0,"0x1e0e, 0x1d760x1ac7"
    0x1e08: v1e08 = ISZERO v1df3(0x1e),0x1dd6,v1e08,"0,v1df3",ISZERO,0x1ac7,private,False,0,0,"0x1e0e, 0x1d760x1ac7"
    0x1e09: v1e09(0x1d76) = CONST ,0x1dd6,v1e09,0,CONST,0x1ac7,private,False,0x1d76,0,"0x1e0e, 0x1d760x1ac7"
"    0x1e0d: JUMPI v1e09(0x1d76), v1e08",0x1dd6,0,"0,v1e09,v1e08",JUMPI,0x1ac7,private,False,0,0,"0x1e0e, 0x1d760x1ac7"
    Begin block 0x1e0e,0x1e0e,0,0,0,0x1ac7,private,False,0,0,"0x1e0e, 0x1d760x1ac7"
"    prev=[0x1dd6], succ=[0x1d5c0x1ac7]",0x1e0e,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    =================================,0x1e0e,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1e10: v1e10 = ADD v1e05(0x0), v1e00",0x1e0e,v1e10,"0,v1e05,v1e00",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x20+0x0,0x1d5c0x1ac7
    0x1e11: v1e11 = MLOAD v1e10,0x1e0e,v1e11,"0,v1e10",MLOAD,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1e14: v1e14 = ADD v1e05(0x0), v1dfc",0x1e0e,v1e14,"0,v1e05,v1dfc",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x0,0x1d5c0x1ac7
"    0x1e15: MSTORE v1e14, v1e11",0x1e0e,0x1ac7&m0x40+0x44+0x0,"0,v1e14,v1e11",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x0,0x1d5c0x1ac7
    0x1e16: v1e16(0x20) = CONST ,0x1e0e,v1e16,0,CONST,0x1ac7,private,False,0x20,0,0x1d5c0x1ac7
"    0x1e18: v1e18(0x20) = ADD v1e16(0x20), v1e05(0x0)",0x1e0e,v1e18,"0,v1e16,v1e05",ADD,0x1ac7,private,False,0x20,0,0x1d5c0x1ac7
    0x1e19: v1e19(0x1d5c) = CONST ,0x1e0e,v1e19,0,CONST,0x1ac7,private,False,0x1d5c,0,0x1d5c0x1ac7
    0x1e1d: JUMP v1e19(0x1d5c),0x1e0e,0,"0,v1e19",JUMP,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    Begin block 0x1d5c0x1ac7,0x1d5c0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    prev=[0x1e0e, 0x1d660x1ac7], succ=[0x1d760x1ac7, 0x1d660x1ac7]",0x1d5c0x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
    =================================,0x1d5c0x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
"    0x1d5c0x1ac7_0x0: v1d5c1ac7_0 = PHI v1e18(0x20), v1ac71d70",0x1d5c0x1ac7,v1d5c1ac7_0,"0,v1e18,v1ac71d70",PHI,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
"    0x1d5f0x1ac7: v1ac71d5f = LT v1d5c1ac7_0, v1df3(0x1e)",0x1d5c0x1ac7,v1ac71d5f,"0,v1d5c1ac7_0,v1df3",LT,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
    0x1d600x1ac7: v1ac71d60 = ISZERO v1ac71d5f,0x1d5c0x1ac7,v1ac71d60,"0,v1ac71d5f",ISZERO,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
    0x1d610x1ac7: v1ac71d61(0x1d76) = CONST ,0x1d5c0x1ac7,v1ac71d61,0,CONST,0x1ac7,private,False,0x1d76,0,"0x1d760x1ac7, 0x1d660x1ac7"
"    0x1d650x1ac7: JUMPI v1ac71d61(0x1d76), v1ac71d60",0x1d5c0x1ac7,0,"0,v1ac71d61,v1ac71d60",JUMPI,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
    Begin block 0x1d760x1ac7,0x1d760x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1d760x1ac7, 0x1d660x1ac7"
"    prev=[0x1dd6, 0x1d5c0x1ac7], succ=[0x1da40x1ac7, 0x1d8b0x1ac7]",0x1d760x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    =================================,0x1d760x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1d7f0x1ac7: v1ac71d7f = ADD v1df3(0x1e), v1dfc",0x1d760x1ac7,v1ac71d7f,"0,v1df3,v1dfc",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x1e,"0x1da40x1ac7, 0x1d8b0x1ac7"
    0x1d810x1ac7: v1ac71d81(0x1f) = CONST ,0x1d760x1ac7,v1ac71d81,0,CONST,0x1ac7,private,False,0x1f,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1d830x1ac7: v1ac71d83(0x1e) = AND v1ac71d81(0x1f), v1df3(0x1e)",0x1d760x1ac7,v1ac71d83,"0,v1ac71d81,v1df3",AND,0x1ac7,private,False,0x1e,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    0x1d850x1ac7: v1ac71d85 = ISZERO v1ac71d83(0x1e),0x1d760x1ac7,v1ac71d85,"0,v1ac71d83",ISZERO,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    0x1d860x1ac7: v1ac71d86(0x1da4) = CONST ,0x1d760x1ac7,v1ac71d86,0,CONST,0x1ac7,private,False,0x1da4,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1d8a0x1ac7: JUMPI v1ac71d86(0x1da4), v1ac71d85",0x1d760x1ac7,0,"0,v1ac71d86,v1ac71d85",JUMPI,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    Begin block 0x1da40x1ac7,0x1da40x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    prev=[0x1d760x1ac7, 0x1d8b0x1ac7], succ=[]",0x1da40x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    =================================,0x1da40x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1da40x1ac7_0x1: v1da41ac7_1 = PHI v1ac71da1, v1ac71d7f",0x1da40x1ac7,v1da41ac7_1,"0,v1ac71da1,v1ac71d7f",PHI,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    0x1daa0x1ac7: v1ac71daa(0x40) = CONST ,0x1da40x1ac7,v1ac71daa,0,CONST,0x1ac7,private,False,0x40,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    0x1dac0x1ac7: v1ac71dac = MLOAD v1ac71daa(0x40),0x1da40x1ac7,v1ac71dac,"0,v1ac71daa",MLOAD,0x1ac7,private,False,0,0x1ac7&m0x40,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1daf0x1ac7: v1ac71daf = SUB v1da41ac7_1, v1ac71dac",0x1da40x1ac7,v1ac71daf,"0,v1da41ac7_1,v1ac71dac",SUB,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    0x1db10x1ac7: REVERT v1ac71dac, v1ac71daf",0x1da40x1ac7,0,"0,v1ac71dac,v1ac71daf",REVERT,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
    Begin block 0x1d8b0x1ac7,0x1d8b0x1ac7,0,0,0,0x1ac7,private,False,0,0,"0x1da40x1ac7, 0x1d8b0x1ac7"
"    prev=[0x1d760x1ac7], succ=[0x1da40x1ac7]",0x1d8b0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1da40x1ac7
    =================================,0x1d8b0x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1da40x1ac7
"    0x1d8d0x1ac7: v1ac71d8d = SUB v1ac71d7f, v1ac71d83(0x1e)",0x1d8b0x1ac7,v1ac71d8d,"0,v1ac71d7f,v1ac71d83",SUB,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x1e-0x1e,0x1da40x1ac7
    0x1d8f0x1ac7: v1ac71d8f = MLOAD v1ac71d8d,0x1d8b0x1ac7,v1ac71d8f,"0,v1ac71d8d",MLOAD,0x1ac7,private,False,0,0,0x1da40x1ac7
    0x1d900x1ac7: v1ac71d90(0x1) = CONST ,0x1d8b0x1ac7,v1ac71d90,0,CONST,0x1ac7,private,False,0x1,0,0x1da40x1ac7
    0x1d930x1ac7: v1ac71d93(0x20) = CONST ,0x1d8b0x1ac7,v1ac71d93,0,CONST,0x1ac7,private,False,0x20,0,0x1da40x1ac7
"    0x1d950x1ac7: v1ac71d95(0x2) = SUB v1ac71d93(0x20), v1ac71d83(0x1e)",0x1d8b0x1ac7,v1ac71d95,"0,v1ac71d93,v1ac71d83",SUB,0x1ac7,private,False,0x2,0,0x1da40x1ac7
    0x1d960x1ac7: v1ac71d96(0x100) = CONST ,0x1d8b0x1ac7,v1ac71d96,0,CONST,0x1ac7,private,False,0x100,0,0x1da40x1ac7
"    0x1d990x1ac7: v1ac71d99(0x10000) = EXP v1ac71d96(0x100), v1ac71d95(0x2)",0x1d8b0x1ac7,v1ac71d99,"0,v1ac71d96,v1ac71d95",EXP,0x1ac7,private,False,0x10000,0,0x1da40x1ac7
"    0x1d9a0x1ac7: v1ac71d9a(0xffff) = SUB v1ac71d99(0x10000), v1ac71d90(0x1)",0x1d8b0x1ac7,v1ac71d9a,"0,v1ac71d99,v1ac71d90",SUB,0x1ac7,private,False,0xffff,0,0x1da40x1ac7
    0x1d9b0x1ac7: v1ac71d9b = NOT v1ac71d9a(0xffff),0x1d8b0x1ac7,v1ac71d9b,"0,v1ac71d9a",NOT,0x1ac7,private,False,0,0,0x1da40x1ac7
"    0x1d9c0x1ac7: v1ac71d9c = AND v1ac71d9b, v1ac71d8f",0x1d8b0x1ac7,v1ac71d9c,"0,v1ac71d9b,v1ac71d8f",AND,0x1ac7,private,False,0,0,0x1da40x1ac7
"    0x1d9e0x1ac7: MSTORE v1ac71d8d, v1ac71d9c",0x1d8b0x1ac7,0x1ac7&m0x40+0x44+0x1e-0x1e,"0,v1ac71d8d,v1ac71d9c",MSTORE,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x1e-0x1e,0x1da40x1ac7
    0x1d9f0x1ac7: v1ac71d9f(0x20) = CONST ,0x1d8b0x1ac7,v1ac71d9f,0,CONST,0x1ac7,private,False,0x20,0,0x1da40x1ac7
"    0x1da10x1ac7: v1ac71da1 = ADD v1ac71d9f(0x20), v1ac71d8d",0x1d8b0x1ac7,v1ac71da1,"0,v1ac71d9f,v1ac71d8d",ADD,0x1ac7,private,False,0,0x1ac7&m0x40+0x44+0x1e-0x1e+0x20,0x1da40x1ac7
    Begin block 0x1d660x1ac7,0x1d660x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1da40x1ac7
"    prev=[0x1d5c0x1ac7], succ=[0x1d5c0x1ac7]",0x1d660x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    =================================,0x1d660x1ac7,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1d660x1ac7_0x0: v1d661ac7_0 = PHI v1e18(0x20), v1ac71d70",0x1d660x1ac7,v1d661ac7_0,"0,v1e18,v1ac71d70",PHI,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1d680x1ac7: v1ac71d68 = ADD v1d661ac7_0, v1e00",0x1d660x1ac7,v1ac71d68,"0,v1d661ac7_0,v1e00",ADD,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    0x1d690x1ac7: v1ac71d69 = MLOAD v1ac71d68,0x1d660x1ac7,v1ac71d69,"0,v1ac71d68",MLOAD,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1d6c0x1ac7: v1ac71d6c = ADD v1d661ac7_0, v1dfc",0x1d660x1ac7,v1ac71d6c,"0,v1d661ac7_0,v1dfc",ADD,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    0x1d6d0x1ac7: MSTORE v1ac71d6c, v1ac71d69",0x1d660x1ac7,0,"0,v1ac71d6c,v1ac71d69",MSTORE,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    0x1d6e0x1ac7: v1ac71d6e(0x20) = CONST ,0x1d660x1ac7,v1ac71d6e,0,CONST,0x1ac7,private,False,0x20,0,0x1d5c0x1ac7
"    0x1d700x1ac7: v1ac71d70 = ADD v1ac71d6e(0x20), v1d661ac7_0",0x1d660x1ac7,v1ac71d70,"0,v1ac71d6e,v1d661ac7_0",ADD,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    0x1d710x1ac7: v1ac71d71(0x1d5c) = CONST ,0x1d660x1ac7,v1ac71d71,0,CONST,0x1ac7,private,False,0x1d5c,0,0x1d5c0x1ac7
    0x1d750x1ac7: JUMP v1ac71d71(0x1d5c),0x1d660x1ac7,0,"0,v1ac71d71",JUMP,0x1ac7,private,False,0,0,0x1d5c0x1ac7
    Begin block 0x1e1e,0x1e1e,0,0,0,0x1ac7,private,False,0,0,0x1d5c0x1ac7
"    prev=[0x1dc9], succ=[0x3c28]",0x1e1e,0,0,0,0x1ac7,private,False,0,0,0x3c28
    =================================,0x1e1e,0,0,0,0x1ac7,private,False,0,0,0x3c28
"    0x1e23: v1e23 = SUB v1ac7arg1, v1ac7arg0",0x1e1e,v1e23,"0,v1ac7arg1,v1ac7arg0",SUB,0x1ac7,private,False,0,0,0x3c28
    0x1e25: JUMP v1aca(0x3c28),0x1e1e,0,"0,v1aca",JUMP,0x1ac7,private,False,0,0,0x3c28
    Begin block 0x3c28,0x3c28,0,0,0,0x1ac7,private,False,0,0,0x3c28
"    prev=[0x1e1e], succ=[]",0x3c28,0,0,0,0x1ac7,private,False,0,0,0x3c28
    =================================,0x3c28,0,0,0,0x1ac7,private,False,0,0,0x3c28
"    0x3c2e: RETURNPRIVATE v1ac7arg2, v1e23",0x3c28,0,"0,v1ac7arg2,v1e23",RETURNPRIVATE,0x1ac7,private,False,0,0,0x3c28
},0x3c28,0,0,0,0x1ac7,private,False,0,0,0x3c28
function initialized()() public {,0x1b0,0,0,public,initialized,public,False,0,0,0x3c28
    Begin block 0x1b0,0x1b0,0,0,0,initialized,public,False,0,0,0x3c28
"    prev=[], succ=[0x1b9, 0x1bd]",0x1b0,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
    =================================,0x1b0,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
    0x1b1: v1b1 = CALLVALUE ,0x1b0,v1b1,0,CALLVALUE,initialized,public,False,0,0,"0x1b9, 0x1bd"
    0x1b3: v1b3 = ISZERO v1b1,0x1b0,v1b3,"0,v1b1",ISZERO,initialized,public,False,0,0,"0x1b9, 0x1bd"
    0x1b4: v1b4(0x1bd) = CONST ,0x1b0,v1b4,0,CONST,initialized,public,False,0x1bd,0,"0x1b9, 0x1bd"
"    0x1b8: JUMPI v1b4(0x1bd), v1b3",0x1b0,0,"0,v1b4,v1b3",JUMPI,initialized,public,False,0,0,"0x1b9, 0x1bd"
    Begin block 0x1b9,0x1b9,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
"    prev=[0x1b0], succ=[]",0x1b9,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
    =================================,0x1b9,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
    0x1b9: v1b9(0x0) = CONST ,0x1b9,v1b9,0,CONST,initialized,public,False,0x0,0,"0x1b9, 0x1bd"
"    0x1bc: REVERT v1b9(0x0), v1b9(0x0)",0x1b9,0,"0,v1b9,v1b9",REVERT,initialized,public,False,0,0,"0x1b9, 0x1bd"
    Begin block 0x1bd,0x1bd,0,0,0,initialized,public,False,0,0,"0x1b9, 0x1bd"
"    prev=[0x1b0], succ=[0x6e8]",0x1bd,0,0,0,initialized,public,False,0,0,0x6e8
    =================================,0x1bd,0,0,0,initialized,public,False,0,0,0x6e8
    0x1bf: v1bf(0x3623) = CONST ,0x1bd,v1bf,0,CONST,initialized,public,False,0x3623,0,0x6e8
    0x1c3: v1c3(0x6e8) = CONST ,0x1bd,v1c3,0,CONST,initialized,public,False,0x6e8,0,0x6e8
    0x1c7: JUMP v1c3(0x6e8),0x1bd,0,"0,v1c3",JUMP,initialized,public,False,0,0,0x6e8
    Begin block 0x6e8,0x6e8,0,0,0,initialized,public,False,0,0,0x6e8
"    prev=[0x1bd], succ=[0x3623]",0x6e8,0,0,0,initialized,public,False,0,0,0x3623
    =================================,0x6e8,0,0,0,initialized,public,False,0,0,0x3623
    0x6e9: v6e9(0x0) = CONST ,0x6e8,v6e9,0,CONST,initialized,public,False,0x0,0,0x3623
    0x6eb: v6eb = SLOAD v6e9(0x0),0x6e8,v6eb,"0,v6e9",SLOAD,initialized,public,False,0,0,0x3623
    0x6ec: v6ec(0xff) = CONST ,0x6e8,v6ec,0,CONST,initialized,public,False,0xff,0,0x3623
"    0x6ee: v6ee = AND v6ec(0xff), v6eb",0x6e8,v6ee,"0,v6ec,v6eb",AND,initialized,public,False,0,0,0x3623
    0x6f0: JUMP v1bf(0x3623),0x6e8,0,"0,v1bf",JUMP,initialized,public,False,0,0,0x3623
    Begin block 0x3623,0x3623,0,0,0,initialized,public,False,0,0,0x3623
"    prev=[0x6e8], succ=[]",0x3623,0,0,0,initialized,public,False,0,0,0x3623
    =================================,0x3623,0,0,0,initialized,public,False,0,0,0x3623
    0x3624: v3624(0x40) = CONST ,0x3623,v3624,0,CONST,initialized,public,False,0x40,0,0x3623
    0x3627: v3627 = MLOAD v3624(0x40),0x3623,v3627,"0,v3624",MLOAD,initialized,public,False,0,initialized&m0x40,0x3623
    0x3629: v3629 = ISZERO v6ee,0x3623,v3629,"0,v6ee",ISZERO,initialized,public,False,0,0,0x3623
    0x362a: v362a = ISZERO v3629,0x3623,v362a,"0,v3629",ISZERO,initialized,public,False,0,0,0x3623
"    0x362c: MSTORE v3627, v362a",0x3623,initialized&m0x40,"0,v3627,v362a",MSTORE,initialized,public,False,0,initialized&m0x40,0x3623
    0x362d: v362d = MLOAD v3624(0x40),0x3623,v362d,"0,v3624",MLOAD,initialized,public,False,0,initialized&m0x40,0x3623
"    0x3631: v3631(0x0) = SUB v3627, v362d",0x3623,v3631,"0,v3627,v362d",SUB,initialized,public,False,0x0,initialized&m0x40-0x0,0x3623
    0x3632: v3632(0x20) = CONST ,0x3623,v3632,0,CONST,initialized,public,False,0x20,0,0x3623
"    0x3634: v3634(0x20) = ADD v3632(0x20), v3631(0x0)",0x3623,v3634,"0,v3632,v3631",ADD,initialized,public,False,0x20,initialized&m0x40-0x0+0x20,0x3623
"    0x3636: RETURN v362d, v3634(0x20)",0x3623,0,"0,v362d,v3634",RETURN,initialized,public,False,0,0,0x3623
},0x3623,0,0,0,initialized,public,False,0,0,0x3623
function nyanManager()() public {,0x1dc,0,0,public,nyanManager,public,False,0,0,0x3623
    Begin block 0x1dc,0x1dc,0,0,0,nyanManager,public,False,0,0,0x3623
"    prev=[], succ=[0x1e5, 0x1e9]",0x1dc,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    =================================,0x1dc,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    0x1dd: v1dd = CALLVALUE ,0x1dc,v1dd,0,CALLVALUE,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    0x1df: v1df = ISZERO v1dd,0x1dc,v1df,"0,v1dd",ISZERO,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    0x1e0: v1e0(0x1e9) = CONST ,0x1dc,v1e0,0,CONST,nyanManager,public,False,0x1e9,0,"0x1e5, 0x1e9"
"    0x1e4: JUMPI v1e0(0x1e9), v1df",0x1dc,0,"0,v1e0,v1df",JUMPI,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    Begin block 0x1e5,0x1e5,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
"    prev=[0x1dc], succ=[]",0x1e5,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    =================================,0x1e5,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    0x1e5: v1e5(0x0) = CONST ,0x1e5,v1e5,0,CONST,nyanManager,public,False,0x0,0,"0x1e5, 0x1e9"
"    0x1e8: REVERT v1e5(0x0), v1e5(0x0)",0x1e5,0,"0,v1e5,v1e5",REVERT,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
    Begin block 0x1e9,0x1e9,0,0,0,nyanManager,public,False,0,0,"0x1e5, 0x1e9"
"    prev=[0x1dc], succ=[0x6f1]",0x1e9,0,0,0,nyanManager,public,False,0,0,0x6f1
    =================================,0x1e9,0,0,0,nyanManager,public,False,0,0,0x6f1
    0x1eb: v1eb(0x3656) = CONST ,0x1e9,v1eb,0,CONST,nyanManager,public,False,0x3656,0,0x6f1
    0x1ef: v1ef(0x6f1) = CONST ,0x1e9,v1ef,0,CONST,nyanManager,public,False,0x6f1,0,0x6f1
    0x1f3: JUMP v1ef(0x6f1),0x1e9,0,"0,v1ef",JUMP,nyanManager,public,False,0,0,0x6f1
    Begin block 0x6f1,0x6f1,0,0,0,nyanManager,public,False,0,0,0x6f1
"    prev=[0x1e9], succ=[0x3656]",0x6f1,0,0,0,nyanManager,public,False,0,0,0x3656
    =================================,0x6f1,0,0,0,nyanManager,public,False,0,0,0x3656
    0x6f2: v6f2(0xa) = CONST ,0x6f1,v6f2,0,CONST,nyanManager,public,False,0xa,0,0x3656
    0x6f4: v6f4 = SLOAD v6f2(0xa),0x6f1,v6f4,"0,v6f2",SLOAD,nyanManager,public,False,0,0,0x3656
    0x6f5: v6f5(0x1) = CONST ,0x6f1,v6f5,0,CONST,nyanManager,public,False,0x1,0,0x3656
    0x6f7: v6f7(0x1) = CONST ,0x6f1,v6f7,0,CONST,nyanManager,public,False,0x1,0,0x3656
    0x6f9: v6f9(0xa0) = CONST ,0x6f1,v6f9,0,CONST,nyanManager,public,False,0xa0,0,0x3656
"    0x6fb: v6fb(0x10000000000000000000000000000000000000000) = SHL v6f9(0xa0), v6f7(0x1)",0x6f1,v6fb,"0,v6f9,v6f7",SHL,nyanManager,public,False,0x10000000000000000000000000000000000000000,0,0x3656
"    0x6fc: v6fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6fb(0x10000000000000000000000000000000000000000), v6f5(0x1)",0x6f1,v6fc,"0,v6fb,v6f5",SUB,nyanManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3656
"    0x6fd: v6fd = AND v6fc(0xffffffffffffffffffffffffffffffffffffffff), v6f4",0x6f1,v6fd,"0,v6fc,v6f4",AND,nyanManager,public,False,0,0,0x3656
    0x6ff: JUMP v1eb(0x3656),0x6f1,0,"0,v1eb",JUMP,nyanManager,public,False,0,0,0x3656
    Begin block 0x3656,0x3656,0,0,0,nyanManager,public,False,0,0,0x3656
"    prev=[0x6f1], succ=[]",0x3656,0,0,0,nyanManager,public,False,0,0,0x3656
    =================================,0x3656,0,0,0,nyanManager,public,False,0,0,0x3656
    0x3657: v3657(0x40) = CONST ,0x3656,v3657,0,CONST,nyanManager,public,False,0x40,0,0x3656
    0x365a: v365a = MLOAD v3657(0x40),0x3656,v365a,"0,v3657",MLOAD,nyanManager,public,False,0,nyanManager&m0x40,0x3656
    0x365b: v365b(0x1) = CONST ,0x3656,v365b,0,CONST,nyanManager,public,False,0x1,0,0x3656
    0x365d: v365d(0x1) = CONST ,0x3656,v365d,0,CONST,nyanManager,public,False,0x1,0,0x3656
    0x365f: v365f(0xa0) = CONST ,0x3656,v365f,0,CONST,nyanManager,public,False,0xa0,0,0x3656
"    0x3661: v3661(0x10000000000000000000000000000000000000000) = SHL v365f(0xa0), v365d(0x1)",0x3656,v3661,"0,v365f,v365d",SHL,nyanManager,public,False,0x10000000000000000000000000000000000000000,0,0x3656
"    0x3662: v3662(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3661(0x10000000000000000000000000000000000000000), v365b(0x1)",0x3656,v3662,"0,v3661,v365b",SUB,nyanManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3656
"    0x3665: v3665 = AND v6fd, v3662(0xffffffffffffffffffffffffffffffffffffffff)",0x3656,v3665,"0,v6fd,v3662",AND,nyanManager,public,False,0,0,0x3656
"    0x3667: MSTORE v365a, v3665",0x3656,nyanManager&m0x40,"0,v365a,v3665",MSTORE,nyanManager,public,False,0,nyanManager&m0x40,0x3656
    0x3668: v3668 = MLOAD v3657(0x40),0x3656,v3668,"0,v3657",MLOAD,nyanManager,public,False,0,nyanManager&m0x40,0x3656
"    0x366c: v366c(0x0) = SUB v365a, v3668",0x3656,v366c,"0,v365a,v3668",SUB,nyanManager,public,False,0x0,nyanManager&m0x40-0x0,0x3656
    0x366d: v366d(0x20) = CONST ,0x3656,v366d,0,CONST,nyanManager,public,False,0x20,0,0x3656
"    0x366f: v366f(0x20) = ADD v366d(0x20), v366c(0x0)",0x3656,v366f,"0,v366d,v366c",ADD,nyanManager,public,False,0x20,nyanManager&m0x40-0x0+0x20,0x3656
"    0x3671: RETURN v3668, v366f(0x20)",0x3656,0,"0,v3668,v366f",RETURN,nyanManager,public,False,0,0,0x3656
},0x3656,0,0,0,nyanManager,public,False,0,0,0x3656
function nyanVoting()() public {,0x1f4,0,0,public,nyanVoting,public,False,0,0,0x3656
    Begin block 0x1f4,0x1f4,0,0,0,nyanVoting,public,False,0,0,0x3656
"    prev=[], succ=[0x1fd, 0x201]",0x1f4,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    =================================,0x1f4,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    0x1f5: v1f5 = CALLVALUE ,0x1f4,v1f5,0,CALLVALUE,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    0x1f7: v1f7 = ISZERO v1f5,0x1f4,v1f7,"0,v1f5",ISZERO,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    0x1f8: v1f8(0x201) = CONST ,0x1f4,v1f8,0,CONST,nyanVoting,public,False,0x201,0,"0x1fd, 0x201"
"    0x1fc: JUMPI v1f8(0x201), v1f7",0x1f4,0,"0,v1f8,v1f7",JUMPI,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    Begin block 0x1fd,0x1fd,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
"    prev=[0x1f4], succ=[]",0x1fd,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    =================================,0x1fd,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    0x1fd: v1fd(0x0) = CONST ,0x1fd,v1fd,0,CONST,nyanVoting,public,False,0x0,0,"0x1fd, 0x201"
"    0x200: REVERT v1fd(0x0), v1fd(0x0)",0x1fd,0,"0,v1fd,v1fd",REVERT,nyanVoting,public,False,0,0,"0x1fd, 0x201"
    Begin block 0x201,0x201,0,0,0,nyanVoting,public,False,0,0,"0x1fd, 0x201"
"    prev=[0x1f4], succ=[0x700]",0x201,0,0,0,nyanVoting,public,False,0,0,0x700
    =================================,0x201,0,0,0,nyanVoting,public,False,0,0,0x700
    0x203: v203(0x3691) = CONST ,0x201,v203,0,CONST,nyanVoting,public,False,0x3691,0,0x700
    0x207: v207(0x700) = CONST ,0x201,v207,0,CONST,nyanVoting,public,False,0x700,0,0x700
    0x20b: JUMP v207(0x700),0x201,0,"0,v207",JUMP,nyanVoting,public,False,0,0,0x700
    Begin block 0x700,0x700,0,0,0,nyanVoting,public,False,0,0,0x700
"    prev=[0x201], succ=[0x3691]",0x700,0,0,0,nyanVoting,public,False,0,0,0x3691
    =================================,0x700,0,0,0,nyanVoting,public,False,0,0,0x3691
    0x701: v701(0x1) = CONST ,0x700,v701,0,CONST,nyanVoting,public,False,0x1,0,0x3691
    0x703: v703 = SLOAD v701(0x1),0x700,v703,"0,v701",SLOAD,nyanVoting,public,False,0,0,0x3691
    0x704: v704(0x1) = CONST ,0x700,v704,0,CONST,nyanVoting,public,False,0x1,0,0x3691
    0x706: v706(0x1) = CONST ,0x700,v706,0,CONST,nyanVoting,public,False,0x1,0,0x3691
    0x708: v708(0xa0) = CONST ,0x700,v708,0,CONST,nyanVoting,public,False,0xa0,0,0x3691
"    0x70a: v70a(0x10000000000000000000000000000000000000000) = SHL v708(0xa0), v706(0x1)",0x700,v70a,"0,v708,v706",SHL,nyanVoting,public,False,0x10000000000000000000000000000000000000000,0,0x3691
"    0x70b: v70b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v70a(0x10000000000000000000000000000000000000000), v704(0x1)",0x700,v70b,"0,v70a,v704",SUB,nyanVoting,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3691
"    0x70c: v70c = AND v70b(0xffffffffffffffffffffffffffffffffffffffff), v703",0x700,v70c,"0,v70b,v703",AND,nyanVoting,public,False,0,0,0x3691
    0x70e: JUMP v203(0x3691),0x700,0,"0,v203",JUMP,nyanVoting,public,False,0,0,0x3691
    Begin block 0x3691,0x3691,0,0,0,nyanVoting,public,False,0,0,0x3691
"    prev=[0x700], succ=[]",0x3691,0,0,0,nyanVoting,public,False,0,0,0x3691
    =================================,0x3691,0,0,0,nyanVoting,public,False,0,0,0x3691
    0x3692: v3692(0x40) = CONST ,0x3691,v3692,0,CONST,nyanVoting,public,False,0x40,0,0x3691
    0x3695: v3695 = MLOAD v3692(0x40),0x3691,v3695,"0,v3692",MLOAD,nyanVoting,public,False,0,nyanVoting&m0x40,0x3691
    0x3696: v3696(0x1) = CONST ,0x3691,v3696,0,CONST,nyanVoting,public,False,0x1,0,0x3691
    0x3698: v3698(0x1) = CONST ,0x3691,v3698,0,CONST,nyanVoting,public,False,0x1,0,0x3691
    0x369a: v369a(0xa0) = CONST ,0x3691,v369a,0,CONST,nyanVoting,public,False,0xa0,0,0x3691
"    0x369c: v369c(0x10000000000000000000000000000000000000000) = SHL v369a(0xa0), v3698(0x1)",0x3691,v369c,"0,v369a,v3698",SHL,nyanVoting,public,False,0x10000000000000000000000000000000000000000,0,0x3691
"    0x369d: v369d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v369c(0x10000000000000000000000000000000000000000), v3696(0x1)",0x3691,v369d,"0,v369c,v3696",SUB,nyanVoting,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3691
"    0x36a0: v36a0 = AND v70c, v369d(0xffffffffffffffffffffffffffffffffffffffff)",0x3691,v36a0,"0,v70c,v369d",AND,nyanVoting,public,False,0,0,0x3691
"    0x36a2: MSTORE v3695, v36a0",0x3691,nyanVoting&m0x40,"0,v3695,v36a0",MSTORE,nyanVoting,public,False,0,nyanVoting&m0x40,0x3691
    0x36a3: v36a3 = MLOAD v3692(0x40),0x3691,v36a3,"0,v3692",MLOAD,nyanVoting,public,False,0,nyanVoting&m0x40,0x3691
"    0x36a7: v36a7(0x0) = SUB v3695, v36a3",0x3691,v36a7,"0,v3695,v36a3",SUB,nyanVoting,public,False,0x0,nyanVoting&m0x40-0x0,0x3691
    0x36a8: v36a8(0x20) = CONST ,0x3691,v36a8,0,CONST,nyanVoting,public,False,0x20,0,0x3691
"    0x36aa: v36aa(0x20) = ADD v36a8(0x20), v36a7(0x0)",0x3691,v36aa,"0,v36a8,v36a7",ADD,nyanVoting,public,False,0x20,nyanVoting&m0x40-0x0+0x20,0x3691
"    0x36ac: RETURN v36a3, v36aa(0x20)",0x3691,0,"0,v36a3,v36aa",RETURN,nyanVoting,public,False,0,0,0x3691
},0x3691,0,0,0,nyanVoting,public,False,0,0,0x3691
function rewardsContract()() public {,0x20c,0,0,public,rewardsContract,public,False,0,0,0x3691
    Begin block 0x20c,0x20c,0,0,0,rewardsContract,public,False,0,0,0x3691
"    prev=[], succ=[0x215, 0x219]",0x20c,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
    =================================,0x20c,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
    0x20d: v20d = CALLVALUE ,0x20c,v20d,0,CALLVALUE,rewardsContract,public,False,0,0,"0x215, 0x219"
    0x20f: v20f = ISZERO v20d,0x20c,v20f,"0,v20d",ISZERO,rewardsContract,public,False,0,0,"0x215, 0x219"
    0x210: v210(0x219) = CONST ,0x20c,v210,0,CONST,rewardsContract,public,False,0x219,0,"0x215, 0x219"
"    0x214: JUMPI v210(0x219), v20f",0x20c,0,"0,v210,v20f",JUMPI,rewardsContract,public,False,0,0,"0x215, 0x219"
    Begin block 0x215,0x215,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
"    prev=[0x20c], succ=[]",0x215,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
    =================================,0x215,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
    0x215: v215(0x0) = CONST ,0x215,v215,0,CONST,rewardsContract,public,False,0x0,0,"0x215, 0x219"
"    0x218: REVERT v215(0x0), v215(0x0)",0x215,0,"0,v215,v215",REVERT,rewardsContract,public,False,0,0,"0x215, 0x219"
    Begin block 0x219,0x219,0,0,0,rewardsContract,public,False,0,0,"0x215, 0x219"
"    prev=[0x20c], succ=[0x3707]",0x219,0,0,0,rewardsContract,public,False,0,0,0x3707
    =================================,0x219,0,0,0,rewardsContract,public,False,0,0,0x3707
    0x21b: v21b(0x36cc) = CONST ,0x219,v21b,0,CONST,rewardsContract,public,False,0x36cc,0,0x3707
    0x21f: v21f(0x3707) = CONST ,0x219,v21f,0,CONST,rewardsContract,public,False,0x3707,0,0x3707
    0x223: JUMP v21f(0x3707),0x219,0,"0,v21f",JUMP,rewardsContract,public,False,0,0,0x3707
    Begin block 0x3707,0x3707,0,0,0,rewardsContract,public,False,0,0,0x3707
"    prev=[0x219], succ=[0x36cc]",0x3707,0,0,0,rewardsContract,public,False,0,0,0x36cc
    =================================,0x3707,0,0,0,rewardsContract,public,False,0,0,0x36cc
    0x3708: v3708(0x8) = CONST ,0x3707,v3708,0,CONST,rewardsContract,public,False,0x8,0,0x36cc
    0x370a: v370a = SLOAD v3708(0x8),0x3707,v370a,"0,v3708",SLOAD,rewardsContract,public,False,0,0,0x36cc
    0x370b: v370b(0x1) = CONST ,0x3707,v370b,0,CONST,rewardsContract,public,False,0x1,0,0x36cc
    0x370d: v370d(0x1) = CONST ,0x3707,v370d,0,CONST,rewardsContract,public,False,0x1,0,0x36cc
    0x370f: v370f(0xa0) = CONST ,0x3707,v370f,0,CONST,rewardsContract,public,False,0xa0,0,0x36cc
"    0x3711: v3711(0x10000000000000000000000000000000000000000) = SHL v370f(0xa0), v370d(0x1)",0x3707,v3711,"0,v370f,v370d",SHL,rewardsContract,public,False,0x10000000000000000000000000000000000000000,0,0x36cc
"    0x3712: v3712(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3711(0x10000000000000000000000000000000000000000), v370b(0x1)",0x3707,v3712,"0,v3711,v370b",SUB,rewardsContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x36cc
"    0x3713: v3713 = AND v3712(0xffffffffffffffffffffffffffffffffffffffff), v370a",0x3707,v3713,"0,v3712,v370a",AND,rewardsContract,public,False,0,0,0x36cc
    0x3715: JUMP v21b(0x36cc),0x3707,0,"0,v21b",JUMP,rewardsContract,public,False,0,0,0x36cc
    Begin block 0x36cc,0x36cc,0,0,0,rewardsContract,public,False,0,0,0x36cc
"    prev=[0x3707], succ=[]",0x36cc,0,0,0,rewardsContract,public,False,0,0,0x36cc
    =================================,0x36cc,0,0,0,rewardsContract,public,False,0,0,0x36cc
    0x36cd: v36cd(0x40) = CONST ,0x36cc,v36cd,0,CONST,rewardsContract,public,False,0x40,0,0x36cc
    0x36d0: v36d0 = MLOAD v36cd(0x40),0x36cc,v36d0,"0,v36cd",MLOAD,rewardsContract,public,False,0,rewardsContract&m0x40,0x36cc
    0x36d1: v36d1(0x1) = CONST ,0x36cc,v36d1,0,CONST,rewardsContract,public,False,0x1,0,0x36cc
    0x36d3: v36d3(0x1) = CONST ,0x36cc,v36d3,0,CONST,rewardsContract,public,False,0x1,0,0x36cc
    0x36d5: v36d5(0xa0) = CONST ,0x36cc,v36d5,0,CONST,rewardsContract,public,False,0xa0,0,0x36cc
"    0x36d7: v36d7(0x10000000000000000000000000000000000000000) = SHL v36d5(0xa0), v36d3(0x1)",0x36cc,v36d7,"0,v36d5,v36d3",SHL,rewardsContract,public,False,0x10000000000000000000000000000000000000000,0,0x36cc
"    0x36d8: v36d8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36d7(0x10000000000000000000000000000000000000000), v36d1(0x1)",0x36cc,v36d8,"0,v36d7,v36d1",SUB,rewardsContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x36cc
"    0x36db: v36db = AND v3713, v36d8(0xffffffffffffffffffffffffffffffffffffffff)",0x36cc,v36db,"0,v3713,v36d8",AND,rewardsContract,public,False,0,0,0x36cc
"    0x36dd: MSTORE v36d0, v36db",0x36cc,rewardsContract&m0x40,"0,v36d0,v36db",MSTORE,rewardsContract,public,False,0,rewardsContract&m0x40,0x36cc
    0x36de: v36de = MLOAD v36cd(0x40),0x36cc,v36de,"0,v36cd",MLOAD,rewardsContract,public,False,0,rewardsContract&m0x40,0x36cc
"    0x36e2: v36e2(0x0) = SUB v36d0, v36de",0x36cc,v36e2,"0,v36d0,v36de",SUB,rewardsContract,public,False,0x0,rewardsContract&m0x40-0x0,0x36cc
    0x36e3: v36e3(0x20) = CONST ,0x36cc,v36e3,0,CONST,rewardsContract,public,False,0x20,0,0x36cc
"    0x36e5: v36e5(0x20) = ADD v36e3(0x20), v36e2(0x0)",0x36cc,v36e5,"0,v36e3,v36e2",ADD,rewardsContract,public,False,0x20,rewardsContract&m0x40-0x0+0x20,0x36cc
"    0x36e7: RETURN v36de, v36e5(0x20)",0x36cc,0,"0,v36de,v36e5",RETURN,rewardsContract,public,False,0,0,0x36cc
},0x36cc,0,0,0,rewardsContract,public,False,0,0,0x36cc
"function tokensForETH(address,address,uint256)() public {",0x224,0,0,,tokensForETH,public,False,0,0,0x36cc
    Begin block 0x224,0x224,0,0,0,tokensForETH,public,False,0,0,0x36cc
"    prev=[], succ=[0x22d, 0x231]",0x224,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
    =================================,0x224,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
    0x225: v225 = CALLVALUE ,0x224,v225,0,CALLVALUE,tokensForETH,public,False,0,0,"0x22d, 0x231"
    0x227: v227 = ISZERO v225,0x224,v227,"0,v225",ISZERO,tokensForETH,public,False,0,0,"0x22d, 0x231"
    0x228: v228(0x231) = CONST ,0x224,v228,0,CONST,tokensForETH,public,False,0x231,0,"0x22d, 0x231"
"    0x22c: JUMPI v228(0x231), v227",0x224,0,"0,v228,v227",JUMPI,tokensForETH,public,False,0,0,"0x22d, 0x231"
    Begin block 0x22d,0x22d,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
"    prev=[0x224], succ=[]",0x22d,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
    =================================,0x22d,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
    0x22d: v22d(0x0) = CONST ,0x22d,v22d,0,CONST,tokensForETH,public,False,0x0,0,"0x22d, 0x231"
"    0x230: REVERT v22d(0x0), v22d(0x0)",0x22d,0,"0,v22d,v22d",REVERT,tokensForETH,public,False,0,0,"0x22d, 0x231"
    Begin block 0x231,0x231,0,0,0,tokensForETH,public,False,0,0,"0x22d, 0x231"
"    prev=[0x224], succ=[0x246, 0x24a]",0x231,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
    =================================,0x231,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
    0x233: v233(0x3735) = CONST ,0x231,v233,0,CONST,tokensForETH,public,False,0x3735,0,"0x246, 0x24a"
    0x237: v237(0x4) = CONST ,0x231,v237,0,CONST,tokensForETH,public,False,0x4,0,"0x246, 0x24a"
    0x23a: v23a = CALLDATASIZE ,0x231,v23a,0,CALLDATASIZE,tokensForETH,public,False,0,0,"0x246, 0x24a"
"    0x23b: v23b = SUB v23a, v237(0x4)",0x231,v23b,"0,v23a,v237",SUB,tokensForETH,public,False,0,0,"0x246, 0x24a"
    0x23c: v23c(0x60) = CONST ,0x231,v23c,0,CONST,tokensForETH,public,False,0x60,0,"0x246, 0x24a"
"    0x23f: v23f = LT v23b, v23c(0x60)",0x231,v23f,"0,v23b,v23c",LT,tokensForETH,public,False,0,0,"0x246, 0x24a"
    0x240: v240 = ISZERO v23f,0x231,v240,"0,v23f",ISZERO,tokensForETH,public,False,0,0,"0x246, 0x24a"
    0x241: v241(0x24a) = CONST ,0x231,v241,0,CONST,tokensForETH,public,False,0x24a,0,"0x246, 0x24a"
"    0x245: JUMPI v241(0x24a), v240",0x231,0,"0,v241,v240",JUMPI,tokensForETH,public,False,0,0,"0x246, 0x24a"
    Begin block 0x246,0x246,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
"    prev=[0x231], succ=[]",0x246,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
    =================================,0x246,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
    0x246: v246(0x0) = CONST ,0x246,v246,0,CONST,tokensForETH,public,False,0x0,0,"0x246, 0x24a"
"    0x249: REVERT v246(0x0), v246(0x0)",0x246,0,"0,v246,v246",REVERT,tokensForETH,public,False,0,0,"0x246, 0x24a"
    Begin block 0x24a,0x24a,0,0,0,tokensForETH,public,False,0,0,"0x246, 0x24a"
"    prev=[0x231], succ=[0x71e]",0x24a,0,0,0,tokensForETH,public,False,0,0,0x71e
    =================================,0x24a,0,0,0,tokensForETH,public,False,0,0,0x71e
    0x24c: v24c(0x1) = CONST ,0x24a,v24c,0,CONST,tokensForETH,public,False,0x1,0,0x71e
    0x24e: v24e(0x1) = CONST ,0x24a,v24e,0,CONST,tokensForETH,public,False,0x1,0,0x71e
    0x250: v250(0xa0) = CONST ,0x24a,v250,0,CONST,tokensForETH,public,False,0xa0,0,0x71e
"    0x252: v252(0x10000000000000000000000000000000000000000) = SHL v250(0xa0), v24e(0x1)",0x24a,v252,"0,v250,v24e",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x71e
"    0x253: v253(0xffffffffffffffffffffffffffffffffffffffff) = SUB v252(0x10000000000000000000000000000000000000000), v24c(0x1)",0x24a,v253,"0,v252,v24c",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x71e
    0x255: v255 = CALLDATALOAD v237(0x4),0x24a,v255,"0,v237",CALLDATALOAD,tokensForETH,public,False,0,0,0x71e
"    0x257: v257 = AND v253(0xffffffffffffffffffffffffffffffffffffffff), v255",0x24a,v257,"0,v253,v255",AND,tokensForETH,public,False,0,0,0x71e
    0x259: v259(0x20) = CONST ,0x24a,v259,0,CONST,tokensForETH,public,False,0x20,0,0x71e
"    0x25c: v25c(0x24) = ADD v237(0x4), v259(0x20)",0x24a,v25c,"0,v237,v259",ADD,tokensForETH,public,False,0x24,0,0x71e
    0x25d: v25d = CALLDATALOAD v25c(0x24),0x24a,v25d,"0,v25c",CALLDATALOAD,tokensForETH,public,False,0,0,0x71e
"    0x260: v260 = AND v253(0xffffffffffffffffffffffffffffffffffffffff), v25d",0x24a,v260,"0,v253,v25d",AND,tokensForETH,public,False,0,0,0x71e
    0x262: v262(0x40) = CONST ,0x24a,v262,0,CONST,tokensForETH,public,False,0x40,0,0x71e
"    0x264: v264(0x44) = ADD v262(0x40), v237(0x4)",0x24a,v264,"0,v262,v237",ADD,tokensForETH,public,False,0x44,0,0x71e
    0x265: v265 = CALLDATALOAD v264(0x44),0x24a,v265,"0,v264",CALLDATALOAD,tokensForETH,public,False,0,0,0x71e
    0x266: v266(0x71e) = CONST ,0x24a,v266,0,CONST,tokensForETH,public,False,0x71e,0,0x71e
    0x26a: JUMP v266(0x71e),0x24a,0,"0,v266",JUMP,tokensForETH,public,False,0,0,0x71e
    Begin block 0x71e,0x71e,0,0,0,tokensForETH,public,False,0,0,0x71e
"    prev=[0x24a], succ=[0x72f, 0x766]",0x71e,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
    =================================,0x71e,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x71f: v71f(0x0) = CONST ,0x71e,v71f,0,CONST,tokensForETH,public,False,0x0,0,"0x72f, 0x766"
    0x721: v721 = SLOAD v71f(0x0),0x71e,v721,"0,v71f",SLOAD,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x722: v722(0xff) = CONST ,0x71e,v722,0,CONST,tokensForETH,public,False,0xff,0,"0x72f, 0x766"
"    0x724: v724 = AND v722(0xff), v721",0x71e,v724,"0,v722,v721",AND,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x725: v725 = ISZERO v724,0x71e,v725,"0,v724",ISZERO,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x726: v726 = ISZERO v725,0x71e,v726,"0,v725",ISZERO,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x727: v727(0x1) = CONST ,0x71e,v727,0,CONST,tokensForETH,public,False,0x1,0,"0x72f, 0x766"
"    0x729: v729 = EQ v727(0x1), v726",0x71e,v729,"0,v727,v726",EQ,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x72a: v72a(0x766) = CONST ,0x71e,v72a,0,CONST,tokensForETH,public,False,0x766,0,"0x72f, 0x766"
"    0x72e: JUMPI v72a(0x766), v729",0x71e,0,"0,v72a,v729",JUMPI,tokensForETH,public,False,0,0,"0x72f, 0x766"
    Begin block 0x72f,0x72f,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
"    prev=[0x71e], succ=[]",0x72f,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
    =================================,0x72f,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x72f: v72f(0x40) = CONST ,0x72f,v72f,0,CONST,tokensForETH,public,False,0x40,0,"0x72f, 0x766"
    0x731: v731 = MLOAD v72f(0x40),0x72f,v731,"0,v72f",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x72f, 0x766"
    0x732: v732(0x461bcd) = CONST ,0x72f,v732,0,CONST,tokensForETH,public,False,0x461bcd,0,"0x72f, 0x766"
    0x736: v736(0xe5) = CONST ,0x72f,v736,0,CONST,tokensForETH,public,False,0xe5,0,"0x72f, 0x766"
"    0x738: v738(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v736(0xe5), v732(0x461bcd)",0x72f,v738,"0,v736,v732",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x72f, 0x766"
"    0x73a: MSTORE v731, v738(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x72f,tokensForETH&m0x40,"0,v731,v738",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x72f, 0x766"
    0x73b: v73b(0x4) = CONST ,0x72f,v73b,0,CONST,tokensForETH,public,False,0x4,0,"0x72f, 0x766"
"    0x73d: v73d = ADD v73b(0x4), v731",0x72f,v73d,"0,v73b,v731",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x72f, 0x766"
    0x740: v740(0x20) = CONST ,0x72f,v740,0,CONST,tokensForETH,public,False,0x20,0,"0x72f, 0x766"
"    0x742: v742 = ADD v740(0x20), v73d",0x72f,v742,"0,v740,v73d",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x72f, 0x766"
"    0x745: v745(0x20) = SUB v742, v73d",0x72f,v745,"0,v742,v73d",SUB,tokensForETH,public,False,0x20,tokensForETH&m0x40+0x4+0x20-0x20,"0x72f, 0x766"
"    0x747: MSTORE v73d, v745(0x20)",0x72f,tokensForETH&m0x40+0x4,"0,v73d,v745",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x72f, 0x766"
    0x748: v748(0x32) = CONST ,0x72f,v748,0,CONST,tokensForETH,public,False,0x32,0,"0x72f, 0x766"
"    0x74b: MSTORE v742, v748(0x32)",0x72f,tokensForETH&m0x40+0x4+0x20,"0,v742,v748",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x72f, 0x766"
    0x74c: v74c(0x20) = CONST ,0x72f,v74c,0,CONST,tokensForETH,public,False,0x20,0,"0x72f, 0x766"
"    0x74e: v74e = ADD v74c(0x20), v742",0x72f,v74e,"0,v74c,v742",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20,"0x72f, 0x766"
    0x750: v750(0x3466) = CONST ,0x72f,v750,0,CONST,tokensForETH,public,False,0x3466,0,"0x72f, 0x766"
    0x754: v754(0x32) = CONST ,0x72f,v754,0,CONST,tokensForETH,public,False,0x32,0,"0x72f, 0x766"
"    0x757: CODECOPY v74e, v750(0x3466), v754(0x32)",0x72f,0,"0,v74e,v750,v754",CODECOPY,tokensForETH,public,False,0,0,"0x72f, 0x766"
    0x758: v758(0x40) = CONST ,0x72f,v758,0,CONST,tokensForETH,public,False,0x40,0,"0x72f, 0x766"
"    0x75a: v75a = ADD v758(0x40), v74e",0x72f,v75a,"0,v758,v74e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x40,"0x72f, 0x766"
    0x75e: v75e(0x40) = CONST ,0x72f,v75e,0,CONST,tokensForETH,public,False,0x40,0,"0x72f, 0x766"
    0x760: v760 = MLOAD v75e(0x40),0x72f,v760,"0,v75e",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x72f, 0x766"
"    0x763: v763(0x84) = SUB v75a, v760",0x72f,v763,"0,v75a,v760",SUB,tokensForETH,public,False,0x84,tokensForETH&m0x40+0x4+0x20+0x20+0x40-0x84,"0x72f, 0x766"
"    0x765: REVERT v760, v763(0x84)",0x72f,0,"0,v760,v763",REVERT,tokensForETH,public,False,0,0,"0x72f, 0x766"
    Begin block 0x766,0x766,0,0,0,tokensForETH,public,False,0,0,"0x72f, 0x766"
"    prev=[0x71e], succ=[0x78f, 0x793]",0x766,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
    =================================,0x766,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x767: v767(0x1) = CONST ,0x766,v767,0,CONST,tokensForETH,public,False,0x1,0,"0x78f, 0x793"
    0x769: v769(0x1) = CONST ,0x766,v769,0,CONST,tokensForETH,public,False,0x1,0,"0x78f, 0x793"
    0x76b: v76b(0xa0) = CONST ,0x766,v76b,0,CONST,tokensForETH,public,False,0xa0,0,"0x78f, 0x793"
"    0x76d: v76d(0x10000000000000000000000000000000000000000) = SHL v76b(0xa0), v769(0x1)",0x766,v76d,"0,v76b,v769",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0x78f, 0x793"
"    0x76e: v76e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v76d(0x10000000000000000000000000000000000000000), v767(0x1)",0x766,v76e,"0,v76d,v767",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x78f, 0x793"
"    0x771: v771 = AND v76e(0xffffffffffffffffffffffffffffffffffffffff), v257",0x766,v771,"0,v76e,v257",AND,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x772: v772(0x0) = CONST ,0x766,v772,0,CONST,tokensForETH,public,False,0x0,0,"0x78f, 0x793"
"    0x776: MSTORE v772(0x0), v771",0x766,0,"0,v772,v771",MSTORE,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x777: v777(0x3) = CONST ,0x766,v777,0,CONST,tokensForETH,public,False,0x3,0,"0x78f, 0x793"
    0x779: v779(0x20) = CONST ,0x766,v779,0,CONST,tokensForETH,public,False,0x20,0,"0x78f, 0x793"
"    0x77b: MSTORE v779(0x20), v777(0x3)",0x766,0,"0,v779,v777",MSTORE,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x77c: v77c(0x40) = CONST ,0x766,v77c,0,CONST,tokensForETH,public,False,0x40,0,"0x78f, 0x793"
"    0x77f: v77f = SHA3 v772(0x0), v77c(0x40)",0x766,v77f,"0,v772,v77c",SHA3,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x780: v780(0x9) = CONST ,0x766,v780,0,CONST,tokensForETH,public,False,0x9,0,"0x78f, 0x793"
"    0x782: v782 = ADD v780(0x9), v77f",0x766,v782,"0,v780,v77f",ADD,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x783: v783 = SLOAD v782,0x766,v783,"0,v782",SLOAD,tokensForETH,public,False,0,0,"0x78f, 0x793"
"    0x785: v785 = AND v76e(0xffffffffffffffffffffffffffffffffffffffff), v783",0x766,v785,"0,v76e,v783",AND,tokensForETH,public,False,0,0,"0x78f, 0x793"
"    0x788: v788 = AND v260, v76e(0xffffffffffffffffffffffffffffffffffffffff)",0x766,v788,"0,v260,v76e",AND,tokensForETH,public,False,0,0,"0x78f, 0x793"
"    0x789: v789 = EQ v788, v785",0x766,v789,"0,v788,v785",EQ,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x78a: v78a(0x793) = CONST ,0x766,v78a,0,CONST,tokensForETH,public,False,0x793,0,"0x78f, 0x793"
"    0x78e: JUMPI v78a(0x793), v789",0x766,0,"0,v78a,v789",JUMPI,tokensForETH,public,False,0,0,"0x78f, 0x793"
    Begin block 0x78f,0x78f,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
"    prev=[0x766], succ=[]",0x78f,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
    =================================,0x78f,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
    0x78f: v78f(0x0) = CONST ,0x78f,v78f,0,CONST,tokensForETH,public,False,0x0,0,"0x78f, 0x793"
"    0x792: REVERT v78f(0x0), v78f(0x0)",0x78f,0,"0,v78f,v78f",REVERT,tokensForETH,public,False,0,0,"0x78f, 0x793"
    Begin block 0x793,0x793,0,0,0,tokensForETH,public,False,0,0,"0x78f, 0x793"
"    prev=[0x766], succ=[0x19bcB0x793]",0x793,0,0,0,tokensForETH,public,False,0,0,0x19bcB0x793
    =================================,0x793,0,0,0,tokensForETH,public,False,0,0,0x19bcB0x793
    0x794: v794(0x7aa) = CONST ,0x793,v794,0,CONST,tokensForETH,public,False,0x7aa,0,0x19bcB0x793
    0x798: v798(0x1) = CONST ,0x793,v798,0,CONST,tokensForETH,public,False,0x1,0,0x19bcB0x793
    0x79a: v79a(0x1) = CONST ,0x793,v79a,0,CONST,tokensForETH,public,False,0x1,0,0x19bcB0x793
    0x79c: v79c(0xa0) = CONST ,0x793,v79c,0,CONST,tokensForETH,public,False,0xa0,0,0x19bcB0x793
"    0x79e: v79e(0x10000000000000000000000000000000000000000) = SHL v79c(0xa0), v79a(0x1)",0x793,v79e,"0,v79c,v79a",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x19bcB0x793
"    0x79f: v79f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v79e(0x10000000000000000000000000000000000000000), v798(0x1)",0x793,v79f,"0,v79e,v798",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x19bcB0x793
"    0x7a1: v7a1 = AND v260, v79f(0xffffffffffffffffffffffffffffffffffffffff)",0x793,v7a1,"0,v260,v79f",AND,tokensForETH,public,False,0,0,0x19bcB0x793
    0x7a2: v7a2 = CALLER ,0x793,v7a2,0,CALLER,tokensForETH,public,True,0,0,0x19bcB0x793
    0x7a3: v7a3 = ADDRESS ,0x793,v7a3,0,ADDRESS,tokensForETH,public,False,0,0,0x19bcB0x793
    0x7a5: v7a5(0x19bc) = CONST ,0x793,v7a5,0,CONST,tokensForETH,public,False,0x19bc,0,0x19bcB0x793
"    0x7a9: JUMP v7a5(0x19bc), v265, v7a3, v7a2, v7a1, v794(0x7aa)",0x793,0,"0,v7a5,v265,v7a3,v7a2,v7a1,v794",JUMP,tokensForETH,public,False,0,0,0x19bcB0x793
    Begin block 0x19bcB0x793,0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x19bcB0x793
"    prev=[0x793], succ=[0x1c66B0x19bcB0x793]",0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    =================================,0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    0x19bdS0x793: v19bdV793(0x40) = CONST ,0x19bcB0x793,v19bdV793,0,CONST,tokensForETH,public,False,0x40,0,0x1c66B0x19bcB0x793
    0x19c0S0x793: v19c0V793 = MLOAD v19bdV793(0x40),0x19bcB0x793,v19c0V793,"0,v19bdV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1c66B0x19bcB0x793
    0x19c1S0x793: v19c1V793(0x1) = CONST ,0x19bcB0x793,v19c1V793,0,CONST,tokensForETH,public,False,0x1,0,0x1c66B0x19bcB0x793
    0x19c3S0x793: v19c3V793(0x1) = CONST ,0x19bcB0x793,v19c3V793,0,CONST,tokensForETH,public,False,0x1,0,0x1c66B0x19bcB0x793
    0x19c5S0x793: v19c5V793(0xa0) = CONST ,0x19bcB0x793,v19c5V793,0,CONST,tokensForETH,public,False,0xa0,0,0x1c66B0x19bcB0x793
"    0x19c7S0x793: v19c7V793(0x10000000000000000000000000000000000000000) = SHL v19c5V793(0xa0), v19c3V793(0x1)",0x19bcB0x793,v19c7V793,"0,v19c5V793,v19c3V793",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x1c66B0x19bcB0x793
"    0x19c8S0x793: v19c8V793(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19c7V793(0x10000000000000000000000000000000000000000), v19c1V793(0x1)",0x19bcB0x793,v19c8V793,"0,v19c7V793,v19c1V793",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1c66B0x19bcB0x793
"    0x19cbS0x793: v19cbV793 = AND v7a2, v19c8V793(0xffffffffffffffffffffffffffffffffffffffff)",0x19bcB0x793,v19cbV793,"0,v7a2,v19c8V793",AND,tokensForETH,public,True,0,0,0x1c66B0x19bcB0x793
    0x19ccS0x793: v19ccV793(0x24) = CONST ,0x19bcB0x793,v19ccV793,0,CONST,tokensForETH,public,False,0x24,0,0x1c66B0x19bcB0x793
"    0x19cfS0x793: v19cfV793 = ADD v19c0V793, v19ccV793(0x24)",0x19bcB0x793,v19cfV793,"0,v19c0V793,v19ccV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,0x1c66B0x19bcB0x793
"    0x19d0S0x793: MSTORE v19cfV793, v19cbV793",0x19bcB0x793,tokensForETH&m0x40+0x24,"0,v19cfV793,v19cbV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,0x1c66B0x19bcB0x793
"    0x19d2S0x793: v19d2V793 = AND v7a3, v19c8V793(0xffffffffffffffffffffffffffffffffffffffff)",0x19bcB0x793,v19d2V793,"0,v7a3,v19c8V793",AND,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    0x19d3S0x793: v19d3V793(0x44) = CONST ,0x19bcB0x793,v19d3V793,0,CONST,tokensForETH,public,False,0x44,0,0x1c66B0x19bcB0x793
"    0x19d6S0x793: v19d6V793 = ADD v19c0V793, v19d3V793(0x44)",0x19bcB0x793,v19d6V793,"0,v19c0V793,v19d3V793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,0x1c66B0x19bcB0x793
"    0x19d7S0x793: MSTORE v19d6V793, v19d2V793",0x19bcB0x793,tokensForETH&m0x40+0x44,"0,v19d6V793,v19d2V793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,0x1c66B0x19bcB0x793
    0x19d8S0x793: v19d8V793(0x64) = CONST ,0x19bcB0x793,v19d8V793,0,CONST,tokensForETH,public,False,0x64,0,0x1c66B0x19bcB0x793
"    0x19dcS0x793: v19dcV793 = ADD v19c0V793, v19d8V793(0x64)",0x19bcB0x793,v19dcV793,"0,v19c0V793,v19d8V793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x64,0x1c66B0x19bcB0x793
"    0x19dfS0x793: MSTORE v19dcV793, v265",0x19bcB0x793,tokensForETH&m0x40+0x64,"0,v19dcV793,v265",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x64,0x1c66B0x19bcB0x793
    0x19e1S0x793: v19e1V793 = MLOAD v19bdV793(0x40),0x19bcB0x793,v19e1V793,"0,v19bdV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1c66B0x19bcB0x793
"    0x19e4S0x793: v19e4V793(0x0) = SUB v19c0V793, v19e1V793",0x19bcB0x793,v19e4V793,"0,v19c0V793,v19e1V793",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,0x1c66B0x19bcB0x793
"    0x19e7S0x793: v19e7V793(0x64) = ADD v19d8V793(0x64), v19e4V793(0x0)",0x19bcB0x793,v19e7V793,"0,v19d8V793,v19e4V793",ADD,tokensForETH,public,False,0x64,tokensForETH&m0x40-0x0+0x64,0x1c66B0x19bcB0x793
"    0x19e9S0x793: MSTORE v19e1V793, v19e7V793(0x64)",0x19bcB0x793,tokensForETH&m0x40,"0,v19e1V793,v19e7V793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,0x1c66B0x19bcB0x793
    0x19eaS0x793: v19eaV793(0x84) = CONST ,0x19bcB0x793,v19eaV793,0,CONST,tokensForETH,public,False,0x84,0,0x1c66B0x19bcB0x793
"    0x19eeS0x793: v19eeV793 = ADD v19c0V793, v19eaV793(0x84)",0x19bcB0x793,v19eeV793,"0,v19c0V793,v19eaV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x84,0x1c66B0x19bcB0x793
"    0x19f1S0x793: MSTORE v19bdV793(0x40), v19eeV793",0x19bcB0x793,0,"0,v19bdV793,v19eeV793",MSTORE,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    0x19f2S0x793: v19f2V793(0x20) = CONST ,0x19bcB0x793,v19f2V793,0,CONST,tokensForETH,public,False,0x20,0,0x1c66B0x19bcB0x793
"    0x19f5S0x793: v19f5V793 = ADD v19e1V793, v19f2V793(0x20)",0x19bcB0x793,v19f5V793,"0,v19e1V793,v19f2V793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1c66B0x19bcB0x793
    0x19f7S0x793: v19f7V793 = MLOAD v19f5V793,0x19bcB0x793,v19f7V793,"0,v19f5V793",MLOAD,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    0x19f8S0x793: v19f8V793(0x1) = CONST ,0x19bcB0x793,v19f8V793,0,CONST,tokensForETH,public,False,0x1,0,0x1c66B0x19bcB0x793
    0x19faS0x793: v19faV793(0x1) = CONST ,0x19bcB0x793,v19faV793,0,CONST,tokensForETH,public,False,0x1,0,0x1c66B0x19bcB0x793
    0x19fcS0x793: v19fcV793(0xe0) = CONST ,0x19bcB0x793,v19fcV793,0,CONST,tokensForETH,public,False,0xe0,0,0x1c66B0x19bcB0x793
"    0x19feS0x793: v19feV793(0x100000000000000000000000000000000000000000000000000000000) = SHL v19fcV793(0xe0), v19faV793(0x1)",0x19bcB0x793,v19feV793,"0,v19fcV793,v19faV793",SHL,tokensForETH,public,False,0x100000000000000000000000000000000000000000000000000000000,0,0x1c66B0x19bcB0x793
"    0x19ffS0x793: v19ffV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v19feV793(0x100000000000000000000000000000000000000000000000000000000), v19f8V793(0x1)",0x19bcB0x793,v19ffV793,"0,v19feV793,v19f8V793",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x1c66B0x19bcB0x793
"    0x1a00S0x793: v1a00V793 = AND v19ffV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v19f7V793",0x19bcB0x793,v1a00V793,"0,v19ffV793,v19f7V793",AND,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    0x1a01S0x793: v1a01V793(0x23b872dd) = CONST ,0x19bcB0x793,v1a01V793,0,CONST,tokensForETH,public,False,0x23b872dd,0,0x1c66B0x19bcB0x793
    0x1a06S0x793: v1a06V793(0xe0) = CONST ,0x19bcB0x793,v1a06V793,0,CONST,tokensForETH,public,False,0xe0,0,0x1c66B0x19bcB0x793
"    0x1a08S0x793: v1a08V793(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v1a06V793(0xe0), v1a01V793(0x23b872dd)",0x19bcB0x793,v1a08V793,"0,v1a06V793,v1a01V793",SHL,tokensForETH,public,False,0x23b872dd00000000000000000000000000000000000000000000000000000000,0,0x1c66B0x19bcB0x793
"    0x1a09S0x793: v1a09V793 = OR v1a08V793(0x23b872dd00000000000000000000000000000000000000000000000000000000), v1a00V793",0x19bcB0x793,v1a09V793,"0,v1a08V793,v1a00V793",OR,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
"    0x1a0bS0x793: MSTORE v19f5V793, v1a09V793",0x19bcB0x793,tokensForETH&m0x40+0x20,"0,v19f5V793,v1a09V793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1c66B0x19bcB0x793
    0x1a0cS0x793: v1a0cV793(0x1a18) = CONST ,0x19bcB0x793,v1a0cV793,0,CONST,tokensForETH,public,False,0x1a18,0,0x1c66B0x19bcB0x793
    0x1a13S0x793: v1a13V793(0x1c66) = CONST ,0x19bcB0x793,v1a13V793,0,CONST,tokensForETH,public,False,0x1c66,0,0x1c66B0x19bcB0x793
"    0x1a17S0x793: JUMP v1a13V793(0x1c66), v19e1V793, v7a1, v1a0cV793(0x1a18)",0x19bcB0x793,0,"0,v1a13V793,v19e1V793,v7a1,v1a0cV793",JUMP,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
    Begin block 0x1c66B0x19bcB0x793,0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1c66B0x19bcB0x793
"    prev=[0x19bcB0x793], succ=[0x1e26B0x1c66B0x19bcB0x793]",0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
    0x1c67S0x19bcS0x793: v1c67V19bcV793(0x60) = CONST ,0x1c66B0x19bcB0x793,v1c67V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,0x1e26B0x1c66B0x19bcB0x793
    0x1c69S0x19bcS0x793: v1c69V19bcV793(0x1cbd) = CONST ,0x1c66B0x19bcB0x793,v1c69V19bcV793,0,CONST,tokensForETH,public,False,0x1cbd,0,0x1e26B0x1c66B0x19bcB0x793
    0x1c6eS0x19bcS0x793: v1c6eV19bcV793(0x40) = CONST ,0x1c66B0x19bcB0x793,v1c6eV19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1e26B0x1c66B0x19bcB0x793
    0x1c70S0x19bcS0x793: v1c70V19bcV793 = MLOAD v1c6eV19bcV793(0x40),0x1c66B0x19bcB0x793,v1c70V19bcV793,"0,v1c6eV19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1e26B0x1c66B0x19bcB0x793
    0x1c72S0x19bcS0x793: v1c72V19bcV793(0x40) = CONST ,0x1c66B0x19bcB0x793,v1c72V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1c74S0x19bcS0x793: v1c74V19bcV793 = ADD v1c72V19bcV793(0x40), v1c70V19bcV793",0x1c66B0x19bcB0x793,v1c74V19bcV793,"0,v1c72V19bcV793,v1c70V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x40,0x1e26B0x1c66B0x19bcB0x793
    0x1c75S0x19bcS0x793: v1c75V19bcV793(0x40) = CONST ,0x1c66B0x19bcB0x793,v1c75V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1c77S0x19bcS0x793: MSTORE v1c75V19bcV793(0x40), v1c74V19bcV793",0x1c66B0x19bcB0x793,0,"0,v1c75V19bcV793,v1c74V19bcV793",MSTORE,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
    0x1c79S0x19bcS0x793: v1c79V19bcV793(0x20) = CONST ,0x1c66B0x19bcB0x793,v1c79V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1c7cS0x19bcS0x793: MSTORE v1c70V19bcV793, v1c79V19bcV793(0x20)",0x1c66B0x19bcB0x793,tokensForETH&m0x40,"0,v1c70V19bcV793,v1c79V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,0x1e26B0x1c66B0x19bcB0x793
    0x1c7dS0x19bcS0x793: v1c7dV19bcV793(0x20) = CONST ,0x1c66B0x19bcB0x793,v1c7dV19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1c7fS0x19bcS0x793: v1c7fV19bcV793 = ADD v1c7dV19bcV793(0x20), v1c70V19bcV793",0x1c66B0x19bcB0x793,v1c7fV19bcV793,"0,v1c7dV19bcV793,v1c70V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1e26B0x1c66B0x19bcB0x793
    0x1c80S0x19bcS0x793: v1c80V19bcV793(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564) = CONST ,0x1c66B0x19bcB0x793,v1c80V19bcV793,0,CONST,tokensForETH,public,False,0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1ca2S0x19bcS0x793: MSTORE v1c7fV19bcV793, v1c80V19bcV793(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564)",0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x20,"0,v1c7fV19bcV793,v1c80V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1e26B0x1c66B0x19bcB0x793
    0x1ca5S0x19bcS0x793: v1ca5V19bcV793(0x1) = CONST ,0x1c66B0x19bcB0x793,v1ca5V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,0x1e26B0x1c66B0x19bcB0x793
    0x1ca7S0x19bcS0x793: v1ca7V19bcV793(0x1) = CONST ,0x1c66B0x19bcB0x793,v1ca7V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,0x1e26B0x1c66B0x19bcB0x793
    0x1ca9S0x19bcS0x793: v1ca9V19bcV793(0xa0) = CONST ,0x1c66B0x19bcB0x793,v1ca9V19bcV793,0,CONST,tokensForETH,public,False,0xa0,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1cabS0x19bcS0x793: v1cabV19bcV793(0x10000000000000000000000000000000000000000) = SHL v1ca9V19bcV793(0xa0), v1ca7V19bcV793(0x1)",0x1c66B0x19bcB0x793,v1cabV19bcV793,"0,v1ca9V19bcV793,v1ca7V19bcV793",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1cacS0x19bcS0x793: v1cacV19bcV793(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1cabV19bcV793(0x10000000000000000000000000000000000000000), v1ca5V19bcV793(0x1)",0x1c66B0x19bcB0x793,v1cacV19bcV793,"0,v1cabV19bcV793,v1ca5V19bcV793",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1cadS0x19bcS0x793: v1cadV19bcV793 = AND v1cacV19bcV793(0xffffffffffffffffffffffffffffffffffffffff), v7a1",0x1c66B0x19bcB0x793,v1cadV19bcV793,"0,v1cacV19bcV793,v7a1",AND,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
    0x1caeS0x19bcS0x793: v1caeV19bcV793(0x1e26) = CONST ,0x1c66B0x19bcB0x793,v1caeV19bcV793,0,CONST,tokensForETH,public,False,0x1e26,0,0x1e26B0x1c66B0x19bcB0x793
    0x1cb6S0x19bcS0x793: v1cb6V19bcV793(0xffffffff) = CONST ,0x1c66B0x19bcB0x793,v1cb6V19bcV793,0,CONST,tokensForETH,public,False,0xffffffff,0,0x1e26B0x1c66B0x19bcB0x793
"    0x1cbbS0x19bcS0x793: v1cbbV19bcV793(0x1e26) = AND v1cb6V19bcV793(0xffffffff), v1caeV19bcV793(0x1e26)",0x1c66B0x19bcB0x793,v1cbbV19bcV793,"0,v1cb6V19bcV793,v1caeV19bcV793",AND,tokensForETH,public,False,0x1e26,0,0x1e26B0x1c66B0x19bcB0x793
    0x1cbcS0x19bcS0x793: JUMP v1cbbV19bcV793(0x1e26),0x1c66B0x19bcB0x793,0,"0,v1cbbV19bcV793",JUMP,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1e26B0x1c66B0x19bcB0x793,0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1c66B0x19bcB0x793], succ=[0x1e3fB0x1e26B0x1c66B0x19bcB0x793]",0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    0x1e27S0x1c66S0x19bcS0x793: v1e27V1c66V19bcV793(0x60) = CONST ,0x1e26B0x1c66B0x19bcB0x793,v1e27V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    0x1e29S0x1c66S0x19bcS0x793: v1e29V1c66V19bcV793(0x1e37) = CONST ,0x1e26B0x1c66B0x19bcB0x793,v1e29V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1e37,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    0x1e2fS0x1c66S0x19bcS0x793: v1e2fV1c66V19bcV793(0x0) = CONST ,0x1e26B0x1c66B0x19bcB0x793,v1e2fV1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    0x1e32S0x1c66S0x19bcS0x793: v1e32V1c66V19bcV793(0x1e3f) = CONST ,0x1e26B0x1c66B0x19bcB0x793,v1e32V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1e3f,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    0x1e36S0x1c66S0x19bcS0x793: JUMP v1e32V1c66V19bcV793(0x1e3f),0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e32V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1e3fB0x1e26B0x1c66B0x19bcB0x793,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e3fB0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1e26B0x1c66B0x19bcB0x793], succ=[0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793]",0x1e3fB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e40S0x1e26S0x1c66S0x19bcS0x793: v1e40V1e26V1c66V19bcV793(0x60) = CONST ,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,v1e40V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e43S0x1e26S0x1c66S0x19bcS0x793: v1e43V1e26V1c66V19bcV793 = SELFBALANCE ,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,v1e43V1e26V1c66V19bcV793,0,SELFBALANCE,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e44S0x1e26S0x1c66S0x19bcS0x793: v1e44V1e26V1c66V19bcV793 = LT v1e43V1e26V1c66V19bcV793, v1e2fV1c66V19bcV793(0x0)",0x1e3fB0x1e26B0x1c66B0x19bcB0x793,v1e44V1e26V1c66V19bcV793,"0,v1e43V1e26V1c66V19bcV793,v1e2fV1c66V19bcV793",LT,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e45S0x1e26S0x1c66S0x19bcS0x793: v1e45V1e26V1c66V19bcV793 = ISZERO v1e44V1e26V1c66V19bcV793,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,v1e45V1e26V1c66V19bcV793,"0,v1e44V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e46S0x1e26S0x1c66S0x19bcS0x793: v1e46V1e26V1c66V19bcV793(0x1e82) = CONST ,0x1e3fB0x1e26B0x1c66B0x19bcB0x793,v1e46V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1e82,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e4aS0x1e26S0x1c66S0x19bcS0x793: JUMPI v1e46V1e26V1c66V19bcV793(0x1e82), v1e45V1e26V1c66V19bcV793",0x1e3fB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e46V1e26V1c66V19bcV793,v1e45V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1e3fB0x1e26B0x1c66B0x19bcB0x793], succ=[]",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e4bS0x1e26S0x1c66S0x19bcS0x793: v1e4bV1e26V1c66V19bcV793(0x40) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e4bV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e4dS0x1e26S0x1c66S0x19bcS0x793: v1e4dV1e26V1c66V19bcV793 = MLOAD v1e4bV1e26V1c66V19bcV793(0x40),0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e4dV1e26V1c66V19bcV793,"0,v1e4bV1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e4eS0x1e26S0x1c66S0x19bcS0x793: v1e4eV1e26V1c66V19bcV793(0x461bcd) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e4eV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x461bcd,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e52S0x1e26S0x1c66S0x19bcS0x793: v1e52V1e26V1c66V19bcV793(0xe5) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e52V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0xe5,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e54S0x1e26S0x1c66S0x19bcS0x793: v1e54V1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1e52V1e26V1c66V19bcV793(0xe5), v1e4eV1e26V1c66V19bcV793(0x461bcd)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e54V1e26V1c66V19bcV793,"0,v1e52V1e26V1c66V19bcV793,v1e4eV1e26V1c66V19bcV793",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e56S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1e4dV1e26V1c66V19bcV793, v1e54V1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40,"0,v1e4dV1e26V1c66V19bcV793,v1e54V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e57S0x1e26S0x1c66S0x19bcS0x793: v1e57V1e26V1c66V19bcV793(0x4) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e57V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x4,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e59S0x1e26S0x1c66S0x19bcS0x793: v1e59V1e26V1c66V19bcV793 = ADD v1e57V1e26V1c66V19bcV793(0x4), v1e4dV1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e59V1e26V1c66V19bcV793,"0,v1e57V1e26V1c66V19bcV793,v1e4dV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e5cS0x1e26S0x1c66S0x19bcS0x793: v1e5cV1e26V1c66V19bcV793(0x20) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e5cV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e5eS0x1e26S0x1c66S0x19bcS0x793: v1e5eV1e26V1c66V19bcV793 = ADD v1e5cV1e26V1c66V19bcV793(0x20), v1e59V1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e5eV1e26V1c66V19bcV793,"0,v1e5cV1e26V1c66V19bcV793,v1e59V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e61S0x1e26S0x1c66S0x19bcS0x793: v1e61V1e26V1c66V19bcV793(0x20) = SUB v1e5eV1e26V1c66V19bcV793, v1e59V1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e61V1e26V1c66V19bcV793,"0,v1e5eV1e26V1c66V19bcV793,v1e59V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x20,tokensForETH&m0x40+0x4+0x20-0x20,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e63S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1e59V1e26V1c66V19bcV793, v1e61V1e26V1c66V19bcV793(0x20)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x4,"0,v1e59V1e26V1c66V19bcV793,v1e61V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e64S0x1e26S0x1c66S0x19bcS0x793: v1e64V1e26V1c66V19bcV793(0x26) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e64V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x26,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e67S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1e5eV1e26V1c66V19bcV793, v1e64V1e26V1c66V19bcV793(0x26)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x4+0x20,"0,v1e5eV1e26V1c66V19bcV793,v1e64V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e68S0x1e26S0x1c66S0x19bcS0x793: v1e68V1e26V1c66V19bcV793(0x20) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e68V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e6aS0x1e26S0x1c66S0x19bcS0x793: v1e6aV1e26V1c66V19bcV793 = ADD v1e68V1e26V1c66V19bcV793(0x20), v1e5eV1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e6aV1e26V1c66V19bcV793,"0,v1e68V1e26V1c66V19bcV793,v1e5eV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e6cS0x1e26S0x1c66S0x19bcS0x793: v1e6cV1e26V1c66V19bcV793(0x33f5) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e6cV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x33f5,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e70S0x1e26S0x1c66S0x19bcS0x793: v1e70V1e26V1c66V19bcV793(0x26) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e70V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x26,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e73S0x1e26S0x1c66S0x19bcS0x793: CODECOPY v1e6aV1e26V1c66V19bcV793, v1e6cV1e26V1c66V19bcV793(0x33f5), v1e70V1e26V1c66V19bcV793(0x26)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e6aV1e26V1c66V19bcV793,v1e6cV1e26V1c66V19bcV793,v1e70V1e26V1c66V19bcV793",CODECOPY,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e74S0x1e26S0x1c66S0x19bcS0x793: v1e74V1e26V1c66V19bcV793(0x40) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e74V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e76S0x1e26S0x1c66S0x19bcS0x793: v1e76V1e26V1c66V19bcV793 = ADD v1e74V1e26V1c66V19bcV793(0x40), v1e6aV1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e76V1e26V1c66V19bcV793,"0,v1e74V1e26V1c66V19bcV793,v1e6aV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x40,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e7aS0x1e26S0x1c66S0x19bcS0x793: v1e7aV1e26V1c66V19bcV793(0x40) = CONST ,0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e7aV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    0x1e7cS0x1e26S0x1c66S0x19bcS0x793: v1e7cV1e26V1c66V19bcV793 = MLOAD v1e7aV1e26V1c66V19bcV793(0x40),0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e7cV1e26V1c66V19bcV793,"0,v1e7aV1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e7fS0x1e26S0x1c66S0x19bcS0x793: v1e7fV1e26V1c66V19bcV793(0x84) = SUB v1e76V1e26V1c66V19bcV793, v1e7cV1e26V1c66V19bcV793",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,v1e7fV1e26V1c66V19bcV793,"0,v1e76V1e26V1c66V19bcV793,v1e7cV1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x84,tokensForETH&m0x40+0x4+0x20+0x20+0x40-0x84,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    0x1e81S0x1e26S0x1c66S0x19bcS0x793: REVERT v1e7cV1e26V1c66V19bcV793, v1e7fV1e26V1c66V19bcV793(0x84)",0x1e4bB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e7cV1e26V1c66V19bcV793,v1e7fV1e26V1c66V19bcV793",REVERT,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1e82B0x1e26B0x1c66B0x19bcB0x793,0x1e82B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e4bB0x1e26B0x1c66B0x19bcB0x793, 0x1e82B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1e3fB0x1e26B0x1c66B0x19bcB0x793], succ=[0x1fa6B0x1e26B0x1c66B0x19bcB0x793]",0x1e82B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1e82B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
    0x1e83S0x1e26S0x1c66S0x19bcS0x793: v1e83V1e26V1c66V19bcV793(0x1e8d) = CONST ,0x1e82B0x1e26B0x1c66B0x19bcB0x793,v1e83V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1e8d,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
    0x1e88S0x1e26S0x1c66S0x19bcS0x793: v1e88V1e26V1c66V19bcV793(0x1fa6) = CONST ,0x1e82B0x1e26B0x1c66B0x19bcB0x793,v1e88V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1fa6,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
    0x1e8cS0x1e26S0x1c66S0x19bcS0x793: JUMP v1e88V1e26V1c66V19bcV793(0x1fa6),0x1e82B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e88V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1fa6B0x1e26B0x1c66B0x19bcB0x793,0x1fa6B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1fa6B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1e82B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1e8dB0x1e26B0x1c66B0x19bcB0x793]",0x1fa6B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1fa6B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    0x1fa7S0x1e26S0x1c66S0x19bcS0x793: v1fa7V1e26V1c66V19bcV793 = EXTCODESIZE v1cadV19bcV793,0x1fa6B0x1e26B0x1c66B0x19bcB0x793,v1fa7V1e26V1c66V19bcV793,"0,v1cadV19bcV793",EXTCODESIZE,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    0x1fa8S0x1e26S0x1c66S0x19bcS0x793: v1fa8V1e26V1c66V19bcV793 = ISZERO v1fa7V1e26V1c66V19bcV793,0x1fa6B0x1e26B0x1c66B0x19bcB0x793,v1fa8V1e26V1c66V19bcV793,"0,v1fa7V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    0x1fa9S0x1e26S0x1c66S0x19bcS0x793: v1fa9V1e26V1c66V19bcV793 = ISZERO v1fa8V1e26V1c66V19bcV793,0x1fa6B0x1e26B0x1c66B0x19bcB0x793,v1fa9V1e26V1c66V19bcV793,"0,v1fa8V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    0x1fabS0x1e26S0x1c66S0x19bcS0x793: JUMP v1e83V1e26V1c66V19bcV793(0x1e8d),0x1fa6B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e83V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1e8dB0x1e26B0x1c66B0x19bcB0x793,0x1e8dB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e8dB0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1fa6B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793]",0x1e8dB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1e8dB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1e8eS0x1e26S0x1c66S0x19bcS0x793: v1e8eV1e26V1c66V19bcV793(0x1edf) = CONST ,0x1e8dB0x1e26B0x1c66B0x19bcB0x793,v1e8eV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1edf,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1e92S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1e8eV1e26V1c66V19bcV793(0x1edf), v1fa9V1e26V1c66V19bcV793",0x1e8dB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e8eV1e26V1c66V19bcV793,v1fa9V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1e93B0x1e26B0x1c66B0x19bcB0x793,0x1e93B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1e8dB0x1e26B0x1c66B0x19bcB0x793], succ=[]",0x1e93B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1e93B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1e93S0x1e26S0x1c66S0x19bcS0x793: v1e93V1e26V1c66V19bcV793(0x40) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1e93V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1e96S0x1e26S0x1c66S0x19bcS0x793: v1e96V1e26V1c66V19bcV793 = MLOAD v1e93V1e26V1c66V19bcV793(0x40),0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1e96V1e26V1c66V19bcV793,"0,v1e93V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1e97S0x1e26S0x1c66S0x19bcS0x793: v1e97V1e26V1c66V19bcV793(0x461bcd) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1e97V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x461bcd,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1e9bS0x1e26S0x1c66S0x19bcS0x793: v1e9bV1e26V1c66V19bcV793(0xe5) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1e9bV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0xe5,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1e9dS0x1e26S0x1c66S0x19bcS0x793: v1e9dV1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1e9bV1e26V1c66V19bcV793(0xe5), v1e97V1e26V1c66V19bcV793(0x461bcd)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1e9dV1e26V1c66V19bcV793,"0,v1e9bV1e26V1c66V19bcV793,v1e97V1e26V1c66V19bcV793",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1e9fS0x1e26S0x1c66S0x19bcS0x793: MSTORE v1e96V1e26V1c66V19bcV793, v1e9dV1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40,"0,v1e96V1e26V1c66V19bcV793,v1e9dV1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ea0S0x1e26S0x1c66S0x19bcS0x793: v1ea0V1e26V1c66V19bcV793(0x20) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ea0V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ea2S0x1e26S0x1c66S0x19bcS0x793: v1ea2V1e26V1c66V19bcV793(0x4) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ea2V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x4,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1ea5S0x1e26S0x1c66S0x19bcS0x793: v1ea5V1e26V1c66V19bcV793 = ADD v1e96V1e26V1c66V19bcV793, v1ea2V1e26V1c66V19bcV793(0x4)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ea5V1e26V1c66V19bcV793,"0,v1e96V1e26V1c66V19bcV793,v1ea2V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1ea6S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1ea5V1e26V1c66V19bcV793, v1ea0V1e26V1c66V19bcV793(0x20)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x4,"0,v1ea5V1e26V1c66V19bcV793,v1ea0V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ea7S0x1e26S0x1c66S0x19bcS0x793: v1ea7V1e26V1c66V19bcV793(0x1d) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ea7V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1d,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ea9S0x1e26S0x1c66S0x19bcS0x793: v1ea9V1e26V1c66V19bcV793(0x24) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ea9V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x24,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1eacS0x1e26S0x1c66S0x19bcS0x793: v1eacV1e26V1c66V19bcV793 = ADD v1e96V1e26V1c66V19bcV793, v1ea9V1e26V1c66V19bcV793(0x24)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1eacV1e26V1c66V19bcV793,"0,v1e96V1e26V1c66V19bcV793,v1ea9V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1eadS0x1e26S0x1c66S0x19bcS0x793: MSTORE v1eacV1e26V1c66V19bcV793, v1ea7V1e26V1c66V19bcV793(0x1d)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x24,"0,v1eacV1e26V1c66V19bcV793,v1ea7V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1eaeS0x1e26S0x1c66S0x19bcS0x793: v1eaeV1e26V1c66V19bcV793(0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1eaeV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ecfS0x1e26S0x1c66S0x19bcS0x793: v1ecfV1e26V1c66V19bcV793(0x44) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ecfV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x44,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1ed2S0x1e26S0x1c66S0x19bcS0x793: v1ed2V1e26V1c66V19bcV793 = ADD v1e96V1e26V1c66V19bcV793, v1ecfV1e26V1c66V19bcV793(0x44)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ed2V1e26V1c66V19bcV793,"0,v1e96V1e26V1c66V19bcV793,v1ecfV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1ed3S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1ed2V1e26V1c66V19bcV793, v1eaeV1e26V1c66V19bcV793(0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x44,"0,v1ed2V1e26V1c66V19bcV793,v1eaeV1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1ed5S0x1e26S0x1c66S0x19bcS0x793: v1ed5V1e26V1c66V19bcV793 = MLOAD v1e93V1e26V1c66V19bcV793(0x40),0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ed5V1e26V1c66V19bcV793,"0,v1e93V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1ed9S0x1e26S0x1c66S0x19bcS0x793: v1ed9V1e26V1c66V19bcV793(0x0) = SUB v1e96V1e26V1c66V19bcV793, v1ed5V1e26V1c66V19bcV793",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1ed9V1e26V1c66V19bcV793,"0,v1e96V1e26V1c66V19bcV793,v1ed5V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    0x1edaS0x1e26S0x1c66S0x19bcS0x793: v1edaV1e26V1c66V19bcV793(0x64) = CONST ,0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1edaV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x64,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1edcS0x1e26S0x1c66S0x19bcS0x793: v1edcV1e26V1c66V19bcV793(0x64) = ADD v1edaV1e26V1c66V19bcV793(0x64), v1ed9V1e26V1c66V19bcV793(0x0)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,v1edcV1e26V1c66V19bcV793,"0,v1edaV1e26V1c66V19bcV793,v1ed9V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0x64,tokensForETH&m0x40-0x0+0x64,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    0x1edeS0x1e26S0x1c66S0x19bcS0x793: REVERT v1ed5V1e26V1c66V19bcV793, v1edcV1e26V1c66V19bcV793(0x64)",0x1e93B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1ed5V1e26V1c66V19bcV793,v1edcV1e26V1c66V19bcV793",REVERT,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1edfB0x1e26B0x1c66B0x19bcB0x793,0x1edfB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1e93B0x1e26B0x1c66B0x19bcB0x793, 0x1edfB0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1e8dB0x1e26B0x1c66B0x19bcB0x793], succ=[0x1effB0x1e26B0x1c66B0x19bcB0x793]",0x1edfB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1edfB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ee0S0x1e26S0x1c66S0x19bcS0x793: v1ee0V1e26V1c66V19bcV793(0x0) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ee0V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ee2S0x1e26S0x1c66S0x19bcS0x793: v1ee2V1e26V1c66V19bcV793(0x60) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ee2V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ee5S0x1e26S0x1c66S0x19bcS0x793: v1ee5V1e26V1c66V19bcV793(0x1) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ee5V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ee7S0x1e26S0x1c66S0x19bcS0x793: v1ee7V1e26V1c66V19bcV793(0x1) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ee7V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ee9S0x1e26S0x1c66S0x19bcS0x793: v1ee9V1e26V1c66V19bcV793(0xa0) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ee9V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0xa0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1eebS0x1e26S0x1c66S0x19bcS0x793: v1eebV1e26V1c66V19bcV793(0x10000000000000000000000000000000000000000) = SHL v1ee9V1e26V1c66V19bcV793(0xa0), v1ee7V1e26V1c66V19bcV793(0x1)",0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1eebV1e26V1c66V19bcV793,"0,v1ee9V1e26V1c66V19bcV793,v1ee7V1e26V1c66V19bcV793",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1eecS0x1e26S0x1c66S0x19bcS0x793: v1eecV1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1eebV1e26V1c66V19bcV793(0x10000000000000000000000000000000000000000), v1ee5V1e26V1c66V19bcV793(0x1)",0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1eecV1e26V1c66V19bcV793,"0,v1eebV1e26V1c66V19bcV793,v1ee5V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1eedS0x1e26S0x1c66S0x19bcS0x793: v1eedV1e26V1c66V19bcV793 = AND v1eecV1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffff), v1cadV19bcV793",0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1eedV1e26V1c66V19bcV793,"0,v1eecV1e26V1c66V19bcV793,v1cadV19bcV793",AND,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ef0S0x1e26S0x1c66S0x19bcS0x793: v1ef0V1e26V1c66V19bcV793(0x40) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ef0V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ef2S0x1e26S0x1c66S0x19bcS0x793: v1ef2V1e26V1c66V19bcV793 = MLOAD v1ef0V1e26V1c66V19bcV793(0x40),0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ef2V1e26V1c66V19bcV793,"0,v1ef0V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ef6S0x1e26S0x1c66S0x19bcS0x793: v1ef6V1e26V1c66V19bcV793(0x64) = MLOAD v19e1V793,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ef6V1e26V1c66V19bcV793,"0,v19e1V793",MLOAD,tokensForETH,public,False,0x64,tokensForETH&m0x64,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1ef8S0x1e26S0x1c66S0x19bcS0x793: v1ef8V1e26V1c66V19bcV793(0x20) = CONST ,0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1ef8V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1efaS0x1e26S0x1c66S0x19bcS0x793: v1efaV1e26V1c66V19bcV793 = ADD v1ef8V1e26V1c66V19bcV793(0x20), v19e1V793",0x1edfB0x1e26B0x1c66B0x19bcB0x793,v1efaV1e26V1c66V19bcV793,"0,v1ef8V1e26V1c66V19bcV793,v19e1V793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1effB0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1effB0x1e26B0x1c66B0x19bcB0x793,0x1effB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1edfB0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793]",0x1effB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1effB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
"    0x1eff_0x2S0x1e26S0x1c66S0x19bcS0x793: v1eff_2V1e26V1c66V19bcV793 = PHI v1ef6V1e26V1c66V19bcV793(0x64), v1f12V1e26V1c66V19bcV793",0x1effB0x1e26B0x1c66B0x19bcB0x793,v1eff_2V1e26V1c66V19bcV793,"0,v1ef6V1e26V1c66V19bcV793,v1f12V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
    0x1f00S0x1e26S0x1c66S0x19bcS0x793: v1f00V1e26V1c66V19bcV793(0x20) = CONST ,0x1effB0x1e26B0x1c66B0x19bcB0x793,v1f00V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f03S0x1e26S0x1c66S0x19bcS0x793: v1f03V1e26V1c66V19bcV793 = LT v1eff_2V1e26V1c66V19bcV793, v1f00V1e26V1c66V19bcV793(0x20)",0x1effB0x1e26B0x1c66B0x19bcB0x793,v1f03V1e26V1c66V19bcV793,"0,v1eff_2V1e26V1c66V19bcV793,v1f00V1e26V1c66V19bcV793",LT,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
    0x1f04S0x1e26S0x1c66S0x19bcS0x793: v1f04V1e26V1c66V19bcV793(0x1f20) = CONST ,0x1effB0x1e26B0x1c66B0x19bcB0x793,v1f04V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f20,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f08S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1f04V1e26V1c66V19bcV793(0x1f20), v1f03V1e26V1c66V19bcV793",0x1effB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f04V1e26V1c66V19bcV793,v1f03V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1f20B0x1e26B0x1c66B0x19bcB0x793,0x1f20B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f20B0x1e26B0x1c66B0x19bcB0x793, 0x1f09B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1effB0x1e26B0x1c66B0x19bcB0x793], succ=[0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793]",0x1f20B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1f20B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f20_0x0S0x1e26S0x1c66S0x19bcS0x793: v1f20_0V1e26V1c66V19bcV793 = PHI v1efaV1e26V1c66V19bcV793, v1f1aV1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f20_0V1e26V1c66V19bcV793,"0,v1efaV1e26V1c66V19bcV793,v1f1aV1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f20_0x1S0x1e26S0x1c66S0x19bcS0x793: v1f20_1V1e26V1c66V19bcV793 = PHI v1ef2V1e26V1c66V19bcV793, v1f18V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f20_1V1e26V1c66V19bcV793,"0,v1ef2V1e26V1c66V19bcV793,v1f18V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f20_0x2S0x1e26S0x1c66S0x19bcS0x793: v1f20_2V1e26V1c66V19bcV793 = PHI v1ef6V1e26V1c66V19bcV793(0x64), v1f12V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f20_2V1e26V1c66V19bcV793,"0,v1ef6V1e26V1c66V19bcV793,v1f12V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f21S0x1e26S0x1c66S0x19bcS0x793: v1f21V1e26V1c66V19bcV793(0x1) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f21V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f24S0x1e26S0x1c66S0x19bcS0x793: v1f24V1e26V1c66V19bcV793(0x20) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f24V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f26S0x1e26S0x1c66S0x19bcS0x793: v1f26V1e26V1c66V19bcV793 = SUB v1f24V1e26V1c66V19bcV793(0x20), v1f20_2V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f26V1e26V1c66V19bcV793,"0,v1f24V1e26V1c66V19bcV793,v1f20_2V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f27S0x1e26S0x1c66S0x19bcS0x793: v1f27V1e26V1c66V19bcV793(0x100) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f27V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x100,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f2aS0x1e26S0x1c66S0x19bcS0x793: v1f2aV1e26V1c66V19bcV793 = EXP v1f27V1e26V1c66V19bcV793(0x100), v1f26V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f2aV1e26V1c66V19bcV793,"0,v1f27V1e26V1c66V19bcV793,v1f26V1e26V1c66V19bcV793",EXP,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f2bS0x1e26S0x1c66S0x19bcS0x793: v1f2bV1e26V1c66V19bcV793 = SUB v1f2aV1e26V1c66V19bcV793, v1f21V1e26V1c66V19bcV793(0x1)",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f2bV1e26V1c66V19bcV793,"0,v1f2aV1e26V1c66V19bcV793,v1f21V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f2dS0x1e26S0x1c66S0x19bcS0x793: v1f2dV1e26V1c66V19bcV793 = NOT v1f2bV1e26V1c66V19bcV793,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f2dV1e26V1c66V19bcV793,"0,v1f2bV1e26V1c66V19bcV793",NOT,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f2fS0x1e26S0x1c66S0x19bcS0x793: v1f2fV1e26V1c66V19bcV793 = MLOAD v1f20_0V1e26V1c66V19bcV793,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f2fV1e26V1c66V19bcV793,"0,v1f20_0V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f30S0x1e26S0x1c66S0x19bcS0x793: v1f30V1e26V1c66V19bcV793 = AND v1f2fV1e26V1c66V19bcV793, v1f2dV1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f30V1e26V1c66V19bcV793,"0,v1f2fV1e26V1c66V19bcV793,v1f2dV1e26V1c66V19bcV793",AND,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f33S0x1e26S0x1c66S0x19bcS0x793: v1f33V1e26V1c66V19bcV793 = MLOAD v1f20_1V1e26V1c66V19bcV793,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f33V1e26V1c66V19bcV793,"0,v1f20_1V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f34S0x1e26S0x1c66S0x19bcS0x793: v1f34V1e26V1c66V19bcV793 = AND v1f33V1e26V1c66V19bcV793, v1f2bV1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f34V1e26V1c66V19bcV793,"0,v1f33V1e26V1c66V19bcV793,v1f2bV1e26V1c66V19bcV793",AND,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f37S0x1e26S0x1c66S0x19bcS0x793: v1f37V1e26V1c66V19bcV793 = OR v1f30V1e26V1c66V19bcV793, v1f34V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f37V1e26V1c66V19bcV793,"0,v1f30V1e26V1c66V19bcV793,v1f34V1e26V1c66V19bcV793",OR,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f39S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1f20_1V1e26V1c66V19bcV793, v1f37V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f20_1V1e26V1c66V19bcV793,v1f37V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f42S0x1e26S0x1c66S0x19bcS0x793: v1f42V1e26V1c66V19bcV793 = ADD v1ef6V1e26V1c66V19bcV793(0x64), v1ef2V1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f42V1e26V1c66V19bcV793,"0,v1ef6V1e26V1c66V19bcV793,v1ef2V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x64,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f46S0x1e26S0x1c66S0x19bcS0x793: v1f46V1e26V1c66V19bcV793(0x0) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f46V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f48S0x1e26S0x1c66S0x19bcS0x793: v1f48V1e26V1c66V19bcV793(0x40) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f48V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f4aS0x1e26S0x1c66S0x19bcS0x793: v1f4aV1e26V1c66V19bcV793 = MLOAD v1f48V1e26V1c66V19bcV793(0x40),0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f4aV1e26V1c66V19bcV793,"0,v1f48V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f4dS0x1e26S0x1c66S0x19bcS0x793: v1f4dV1e26V1c66V19bcV793(0x64) = SUB v1f42V1e26V1c66V19bcV793, v1f4aV1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f4dV1e26V1c66V19bcV793,"0,v1f42V1e26V1c66V19bcV793,v1f4aV1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x64,tokensForETH&m0x40+0x64-0x64,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f51S0x1e26S0x1c66S0x19bcS0x793: v1f51V1e26V1c66V19bcV793 = GAS ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f51V1e26V1c66V19bcV793,0,GAS,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f52S0x1e26S0x1c66S0x19bcS0x793: v1f52V1e26V1c66V19bcV793 = CALL v1f51V1e26V1c66V19bcV793, v1eedV1e26V1c66V19bcV793, v1e2fV1c66V19bcV793(0x0), v1f4aV1e26V1c66V19bcV793, v1f4dV1e26V1c66V19bcV793(0x64), v1f4aV1e26V1c66V19bcV793, v1f46V1e26V1c66V19bcV793(0x0)",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f52V1e26V1c66V19bcV793,"0,v1f51V1e26V1c66V19bcV793,v1eedV1e26V1c66V19bcV793,v1e2fV1c66V19bcV793,v1f4aV1e26V1c66V19bcV793,v1f4dV1e26V1c66V19bcV793,v1f4aV1e26V1c66V19bcV793,v1f46V1e26V1c66V19bcV793",CALL,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f57S0x1e26S0x1c66S0x19bcS0x793: v1f57V1e26V1c66V19bcV793 = RETURNDATASIZE ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f57V1e26V1c66V19bcV793,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f59S0x1e26S0x1c66S0x19bcS0x793: v1f59V1e26V1c66V19bcV793(0x0) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f59V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f5cS0x1e26S0x1c66S0x19bcS0x793: v1f5cV1e26V1c66V19bcV793 = EQ v1f57V1e26V1c66V19bcV793, v1f59V1e26V1c66V19bcV793(0x0)",0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f5cV1e26V1c66V19bcV793,"0,v1f57V1e26V1c66V19bcV793,v1f59V1e26V1c66V19bcV793",EQ,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    0x1f5dS0x1e26S0x1c66S0x19bcS0x793: v1f5dV1e26V1c66V19bcV793(0x1f84) = CONST ,0x1f20B0x1e26B0x1c66B0x19bcB0x793,v1f5dV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f84,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    0x1f61S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1f5dV1e26V1c66V19bcV793(0x1f84), v1f5cV1e26V1c66V19bcV793",0x1f20B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f5dV1e26V1c66V19bcV793,v1f5cV1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1f62B0x1e26B0x1c66B0x19bcB0x793,0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1f20B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f62S0x1e26S0x1c66S0x19bcS0x793: v1f62V1e26V1c66V19bcV793(0x40) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f62V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f64S0x1e26S0x1c66S0x19bcS0x793: v1f64V1e26V1c66V19bcV793 = MLOAD v1f62V1e26V1c66V19bcV793(0x40),0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f64V1e26V1c66V19bcV793,"0,v1f62V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f67S0x1e26S0x1c66S0x19bcS0x793: v1f67V1e26V1c66V19bcV793(0x1f) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f67V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f69S0x1e26S0x1c66S0x19bcS0x793: v1f69V1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1f67V1e26V1c66V19bcV793(0x1f),0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f69V1e26V1c66V19bcV793,"0,v1f67V1e26V1c66V19bcV793",NOT,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f6aS0x1e26S0x1c66S0x19bcS0x793: v1f6aV1e26V1c66V19bcV793(0x3f) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f6aV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x3f,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f6cS0x1e26S0x1c66S0x19bcS0x793: v1f6cV1e26V1c66V19bcV793 = RETURNDATASIZE ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f6cV1e26V1c66V19bcV793,0,RETURNDATASIZE,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f6dS0x1e26S0x1c66S0x19bcS0x793: v1f6dV1e26V1c66V19bcV793 = ADD v1f6cV1e26V1c66V19bcV793, v1f6aV1e26V1c66V19bcV793(0x3f)",0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f6dV1e26V1c66V19bcV793,"0,v1f6cV1e26V1c66V19bcV793,v1f6aV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f6eS0x1e26S0x1c66S0x19bcS0x793: v1f6eV1e26V1c66V19bcV793 = AND v1f6dV1e26V1c66V19bcV793, v1f69V1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f6eV1e26V1c66V19bcV793,"0,v1f6dV1e26V1c66V19bcV793,v1f69V1e26V1c66V19bcV793",AND,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f70S0x1e26S0x1c66S0x19bcS0x793: v1f70V1e26V1c66V19bcV793 = ADD v1f64V1e26V1c66V19bcV793, v1f6eV1e26V1c66V19bcV793",0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f70V1e26V1c66V19bcV793,"0,v1f64V1e26V1c66V19bcV793,v1f6eV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f71S0x1e26S0x1c66S0x19bcS0x793: v1f71V1e26V1c66V19bcV793(0x40) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f71V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f73S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1f71V1e26V1c66V19bcV793(0x40), v1f70V1e26V1c66V19bcV793",0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f71V1e26V1c66V19bcV793,v1f70V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f74S0x1e26S0x1c66S0x19bcS0x793: v1f74V1e26V1c66V19bcV793 = RETURNDATASIZE ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f74V1e26V1c66V19bcV793,0,RETURNDATASIZE,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f76S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1f64V1e26V1c66V19bcV793, v1f74V1e26V1c66V19bcV793",0x1f62B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40,"0,v1f64V1e26V1c66V19bcV793,v1f74V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f77S0x1e26S0x1c66S0x19bcS0x793: v1f77V1e26V1c66V19bcV793 = RETURNDATASIZE ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f77V1e26V1c66V19bcV793,0,RETURNDATASIZE,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f78S0x1e26S0x1c66S0x19bcS0x793: v1f78V1e26V1c66V19bcV793(0x0) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f78V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f7aS0x1e26S0x1c66S0x19bcS0x793: v1f7aV1e26V1c66V19bcV793(0x20) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f7aV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f7dS0x1e26S0x1c66S0x19bcS0x793: v1f7dV1e26V1c66V19bcV793 = ADD v1f64V1e26V1c66V19bcV793, v1f7aV1e26V1c66V19bcV793(0x20)",0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f7dV1e26V1c66V19bcV793,"0,v1f64V1e26V1c66V19bcV793,v1f7aV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f7eS0x1e26S0x1c66S0x19bcS0x793: RETURNDATACOPY v1f7dV1e26V1c66V19bcV793, v1f78V1e26V1c66V19bcV793(0x0), v1f77V1e26V1c66V19bcV793",0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f7dV1e26V1c66V19bcV793,v1f78V1e26V1c66V19bcV793,v1f77V1e26V1c66V19bcV793",RETURNDATACOPY,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f7fS0x1e26S0x1c66S0x19bcS0x793: v1f7fV1e26V1c66V19bcV793(0x1f89) = CONST ,0x1f62B0x1e26B0x1c66B0x19bcB0x793,v1f7fV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f89,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f83S0x1e26S0x1c66S0x19bcS0x793: JUMP v1f7fV1e26V1c66V19bcV793(0x1f89),0x1f62B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f7fV1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1f62B0x1e26B0x1c66B0x19bcB0x793, 0x1f84B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1f89_0x1S0x1e26S0x1c66S0x19bcS0x793: v1f89_1V1e26V1c66V19bcV793 = PHI v1f64V1e26V1c66V19bcV793, v1f85V1e26V1c66V19bcV793(0x60)",0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1f89_1V1e26V1c66V19bcV793,"0,v1f64V1e26V1c66V19bcV793,v1f85V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f8fS0x1e26S0x1c66S0x19bcS0x793: v1f8fV1e26V1c66V19bcV793(0x1f9b) = CONST ,0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1f8fV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f9b,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f96S0x1e26S0x1c66S0x19bcS0x793: v1f96V1e26V1c66V19bcV793(0x1fac) = CONST ,0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1f96V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1fac,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f9aS0x1e26S0x1c66S0x19bcS0x793: JUMP v1f96V1e26V1c66V19bcV793(0x1fac),0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f96V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fadS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fadV1f89V1e26V1c66V19bcV793(0x60) = CONST ,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fadV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fb0S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fb0V1f89V1e26V1c66V19bcV793 = ISZERO v1f52V1e26V1c66V19bcV793,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fb0V1f89V1e26V1c66V19bcV793,"0,v1f52V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fb1S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fb1V1f89V1e26V1c66V19bcV793(0x1fbd) = CONST ,0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fb1V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1fbd,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fb5S0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1fb1V1f89V1e26V1c66V19bcV793(0x1fbd), v1fb0V1f89V1e26V1c66V19bcV793",0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fb1V1f89V1e26V1c66V19bcV793,v1fb0V1f89V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fbfS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fbfV1f89V1e26V1c66V19bcV793 = MLOAD v1f89_1V1e26V1c66V19bcV793,0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fbfV1f89V1e26V1c66V19bcV793,"0,v1f89_1V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fc0S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fc0V1f89V1e26V1c66V19bcV793 = ISZERO v1fbfV1f89V1e26V1c66V19bcV793,0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fc0V1f89V1e26V1c66V19bcV793,"0,v1fbfV1f89V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fc1S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fc1V1f89V1e26V1c66V19bcV793(0x1fce) = CONST ,0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fc1V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1fce,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fc5S0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1fc1V1f89V1e26V1c66V19bcV793(0x1fce), v1fc0V1f89V1e26V1c66V19bcV793",0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fc1V1f89V1e26V1c66V19bcV793,v1fc0V1f89V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fcfS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fcfV1f89V1e26V1c66V19bcV793(0x40) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fcfV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fd1S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fd1V1f89V1e26V1c66V19bcV793 = MLOAD v1fcfV1f89V1e26V1c66V19bcV793(0x40),0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fd1V1f89V1e26V1c66V19bcV793,"0,v1fcfV1f89V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fd2S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fd2V1f89V1e26V1c66V19bcV793(0x461bcd) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fd2V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x461bcd,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fd6S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fd6V1f89V1e26V1c66V19bcV793(0xe5) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fd6V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0xe5,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fd8S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fd8V1f89V1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1fd6V1f89V1e26V1c66V19bcV793(0xe5), v1fd2V1f89V1e26V1c66V19bcV793(0x461bcd)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fd8V1f89V1e26V1c66V19bcV793,"0,v1fd6V1f89V1e26V1c66V19bcV793,v1fd2V1f89V1e26V1c66V19bcV793",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fdaS0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1fd1V1f89V1e26V1c66V19bcV793, v1fd8V1f89V1e26V1c66V19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40,"0,v1fd1V1f89V1e26V1c66V19bcV793,v1fd8V1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fdbS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fdbV1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fdbV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fddS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fddV1f89V1e26V1c66V19bcV793(0x4) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fddV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x4,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fe0S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fe0V1f89V1e26V1c66V19bcV793 = ADD v1fd1V1f89V1e26V1c66V19bcV793, v1fddV1f89V1e26V1c66V19bcV793(0x4)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fe0V1f89V1e26V1c66V19bcV793,"0,v1fd1V1f89V1e26V1c66V19bcV793,v1fddV1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fe3S0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1fe0V1f89V1e26V1c66V19bcV793, v1fdbV1f89V1e26V1c66V19bcV793(0x20)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x4,"0,v1fe0V1f89V1e26V1c66V19bcV793,v1fdbV1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fe5S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fe5V1f89V1e26V1c66V19bcV793(0x20) = MLOAD v1c70V19bcV793,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fe5V1f89V1e26V1c66V19bcV793,"0,v1c70V19bcV793",MLOAD,tokensForETH,public,False,0x20,tokensForETH&m0x20,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fe6S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fe6V1f89V1e26V1c66V19bcV793(0x24) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fe6V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x24,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1fe9S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fe9V1f89V1e26V1c66V19bcV793 = ADD v1fd1V1f89V1e26V1c66V19bcV793, v1fe6V1f89V1e26V1c66V19bcV793(0x24)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fe9V1f89V1e26V1c66V19bcV793,"0,v1fd1V1f89V1e26V1c66V19bcV793,v1fe6V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1feaS0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1fe9V1f89V1e26V1c66V19bcV793, v1fe5V1f89V1e26V1c66V19bcV793(0x20)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x24,"0,v1fe9V1f89V1e26V1c66V19bcV793,v1fe5V1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1fecS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fecV1f89V1e26V1c66V19bcV793(0x20) = MLOAD v1c70V19bcV793,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fecV1f89V1e26V1c66V19bcV793,"0,v1c70V19bcV793",MLOAD,tokensForETH,public,False,0x20,tokensForETH&m0x20,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1ff3S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1ff3V1f89V1e26V1c66V19bcV793(0x44) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1ff3V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x44,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1ff5S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1ff5V1f89V1e26V1c66V19bcV793 = ADD v1ff3V1f89V1e26V1c66V19bcV793(0x44), v1fd1V1f89V1e26V1c66V19bcV793",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1ff5V1f89V1e26V1c66V19bcV793,"0,v1ff3V1f89V1e26V1c66V19bcV793,v1fd1V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1ff9S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1ff9V1f89V1e26V1c66V19bcV793 = ADD v1c70V19bcV793, v1fdbV1f89V1e26V1c66V19bcV793(0x20)",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1ff9V1f89V1e26V1c66V19bcV793,"0,v1c70V19bcV793,v1fdbV1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1ffeS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1ffeV1f89V1e26V1c66V19bcV793(0x0) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1ffeV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x2001S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v2001V1f89V1e26V1c66V19bcV793 = ISZERO v1fecV1f89V1e26V1c66V19bcV793(0x20),0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v2001V1f89V1e26V1c66V19bcV793,"0,v1fecV1f89V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x2002S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v2002V1f89V1e26V1c66V19bcV793(0x1d76) = CONST ,0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v2002V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1d76,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x2006S0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMPI v2002V1f89V1e26V1c66V19bcV793(0x1d76), v2001V1f89V1e26V1c66V19bcV793",0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v2002V1f89V1e26V1c66V19bcV793,v2001V1f89V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x2009S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v2009V1f89V1e26V1c66V19bcV793 = ADD v1ffeV1f89V1e26V1c66V19bcV793(0x0), v1ff9V1f89V1e26V1c66V19bcV793",0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v2009V1f89V1e26V1c66V19bcV793,"0,v1ffeV1f89V1e26V1c66V19bcV793,v1ff9V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20+0x0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x200aS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v200aV1f89V1e26V1c66V19bcV793 = MLOAD v2009V1f89V1e26V1c66V19bcV793,0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v200aV1f89V1e26V1c66V19bcV793,"0,v2009V1f89V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x200dS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v200dV1f89V1e26V1c66V19bcV793 = ADD v1ffeV1f89V1e26V1c66V19bcV793(0x0), v1ff5V1f89V1e26V1c66V19bcV793",0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v200dV1f89V1e26V1c66V19bcV793,"0,v1ffeV1f89V1e26V1c66V19bcV793,v1ff5V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x200eS0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v200dV1f89V1e26V1c66V19bcV793, v200aV1f89V1e26V1c66V19bcV793",0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x44+0x0,"0,v200dV1f89V1e26V1c66V19bcV793,v200aV1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x200fS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v200fV1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v200fV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x2011S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v2011V1f89V1e26V1c66V19bcV793(0x20) = ADD v200fV1f89V1e26V1c66V19bcV793(0x20), v1ffeV1f89V1e26V1c66V19bcV793(0x0)",0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v2011V1f89V1e26V1c66V19bcV793,"0,v200fV1f89V1e26V1c66V19bcV793,v1ffeV1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0x20,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x2012S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v2012V1f89V1e26V1c66V19bcV793(0x1d5c) = CONST ,0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v2012V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1d5c,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x2016S0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMP v2012V1f89V1e26V1c66V19bcV793(0x1d5c),0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v2012V1f89V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x2007B0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d5c0x1fac_0x0S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1d5c1fac_0V1f89V1e26V1c66V19bcV793 = PHI v2011V1f89V1e26V1c66V19bcV793(0x20), v1fac1d70V1f89V1e26V1c66V19bcV793",0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1d5c1fac_0V1f89V1e26V1c66V19bcV793,"0,v2011V1f89V1e26V1c66V19bcV793,v1fac1d70V1f89V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d5f0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d5fV1f89V1e26V1c66V19bcV793 = LT v1d5c1fac_0V1f89V1e26V1c66V19bcV793, v1fecV1f89V1e26V1c66V19bcV793(0x20)",0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d5fV1f89V1e26V1c66V19bcV793,"0,v1d5c1fac_0V1f89V1e26V1c66V19bcV793,v1fecV1f89V1e26V1c66V19bcV793",LT,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1d600x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d60V1f89V1e26V1c66V19bcV793 = ISZERO v1fac1d5fV1f89V1e26V1c66V19bcV793,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d60V1f89V1e26V1c66V19bcV793,"0,v1fac1d5fV1f89V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1d610x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d61V1f89V1e26V1c66V19bcV793(0x1d76) = CONST ,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d61V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1d76,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d650x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1fac1d61V1f89V1e26V1c66V19bcV793(0x1d76), v1fac1d60V1f89V1e26V1c66V19bcV793",0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fac1d61V1f89V1e26V1c66V19bcV793,v1fac1d60V1f89V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d660x1fac_0x0S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1d661fac_0V1f89V1e26V1c66V19bcV793 = PHI v2011V1f89V1e26V1c66V19bcV793(0x20), v1fac1d70V1f89V1e26V1c66V19bcV793",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1d661fac_0V1f89V1e26V1c66V19bcV793,"0,v2011V1f89V1e26V1c66V19bcV793,v1fac1d70V1f89V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d680x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d68V1f89V1e26V1c66V19bcV793 = ADD v1d661fac_0V1f89V1e26V1c66V19bcV793, v1ff9V1f89V1e26V1c66V19bcV793",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d68V1f89V1e26V1c66V19bcV793,"0,v1d661fac_0V1f89V1e26V1c66V19bcV793,v1ff9V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d690x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d69V1f89V1e26V1c66V19bcV793 = MLOAD v1fac1d68V1f89V1e26V1c66V19bcV793,0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d69V1f89V1e26V1c66V19bcV793,"0,v1fac1d68V1f89V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d6c0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d6cV1f89V1e26V1c66V19bcV793 = ADD v1d661fac_0V1f89V1e26V1c66V19bcV793, v1ff5V1f89V1e26V1c66V19bcV793",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d6cV1f89V1e26V1c66V19bcV793,"0,v1d661fac_0V1f89V1e26V1c66V19bcV793,v1ff5V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d6d0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1fac1d6cV1f89V1e26V1c66V19bcV793, v1fac1d69V1f89V1e26V1c66V19bcV793",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fac1d6cV1f89V1e26V1c66V19bcV793,v1fac1d69V1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d6e0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d6eV1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d6eV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d700x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d70V1f89V1e26V1c66V19bcV793 = ADD v1fac1d6eV1f89V1e26V1c66V19bcV793(0x20), v1d661fac_0V1f89V1e26V1c66V19bcV793",0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d70V1f89V1e26V1c66V19bcV793,"0,v1fac1d6eV1f89V1e26V1c66V19bcV793,v1d661fac_0V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d710x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d71V1f89V1e26V1c66V19bcV793(0x1d5c) = CONST ,0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d71V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1d5c,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d750x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMP v1fac1d71V1f89V1e26V1c66V19bcV793(0x1d5c),0x1d660x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fac1d71V1f89V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1fceB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d5c0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    =================================,0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d7f0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d7fV1f89V1e26V1c66V19bcV793 = ADD v1fecV1f89V1e26V1c66V19bcV793(0x20), v1ff5V1f89V1e26V1c66V19bcV793",0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d7fV1f89V1e26V1c66V19bcV793,"0,v1fecV1f89V1e26V1c66V19bcV793,v1ff5V1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x20,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1d810x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d81V1f89V1e26V1c66V19bcV793(0x1f) = CONST ,0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d81V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d830x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d83V1f89V1e26V1c66V19bcV793(0x0) = AND v1fac1d81V1f89V1e26V1c66V19bcV793(0x1f), v1fecV1f89V1e26V1c66V19bcV793(0x20)",0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d83V1f89V1e26V1c66V19bcV793,"0,v1fac1d81V1f89V1e26V1c66V19bcV793,v1fecV1f89V1e26V1c66V19bcV793",AND,tokensForETH,public,False,0x0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1d850x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d85V1f89V1e26V1c66V19bcV793 = ISZERO v1fac1d83V1f89V1e26V1c66V19bcV793(0x0),0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d85V1f89V1e26V1c66V19bcV793,"0,v1fac1d83V1f89V1e26V1c66V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    0x1d860x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d86V1f89V1e26V1c66V19bcV793(0x1da4) = CONST ,0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d86V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1da4,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    0x1d8a0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMPI v1fac1d86V1f89V1e26V1c66V19bcV793(0x1da4), v1fac1d85V1f89V1e26V1c66V19bcV793",0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fac1d86V1f89V1e26V1c66V19bcV793,v1fac1d85V1f89V1e26V1c66V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
    Begin block 0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793"
"    prev=[0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d8d0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d8dV1f89V1e26V1c66V19bcV793 = SUB v1fac1d7fV1f89V1e26V1c66V19bcV793, v1fac1d83V1f89V1e26V1c66V19bcV793(0x0)",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d8dV1f89V1e26V1c66V19bcV793,"0,v1fac1d7fV1f89V1e26V1c66V19bcV793,v1fac1d83V1f89V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x20-0x0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d8f0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d8fV1f89V1e26V1c66V19bcV793 = MLOAD v1fac1d8dV1f89V1e26V1c66V19bcV793,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d8fV1f89V1e26V1c66V19bcV793,"0,v1fac1d8dV1f89V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d900x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d90V1f89V1e26V1c66V19bcV793(0x1) = CONST ,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d90V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d930x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d93V1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d93V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d950x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d95V1f89V1e26V1c66V19bcV793(0x20) = SUB v1fac1d93V1f89V1e26V1c66V19bcV793(0x20), v1fac1d83V1f89V1e26V1c66V19bcV793(0x0)",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d95V1f89V1e26V1c66V19bcV793,"0,v1fac1d93V1f89V1e26V1c66V19bcV793,v1fac1d83V1f89V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x20,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d960x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d96V1f89V1e26V1c66V19bcV793(0x100) = CONST ,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d96V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x100,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d990x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d99V1f89V1e26V1c66V19bcV793(0x1) = EXP v1fac1d96V1f89V1e26V1c66V19bcV793(0x100), v1fac1d95V1f89V1e26V1c66V19bcV793(0x20)",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d99V1f89V1e26V1c66V19bcV793,"0,v1fac1d96V1f89V1e26V1c66V19bcV793,v1fac1d95V1f89V1e26V1c66V19bcV793",EXP,tokensForETH,public,False,0x1,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d9a0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d9aV1f89V1e26V1c66V19bcV793(0x0) = SUB v1fac1d99V1f89V1e26V1c66V19bcV793(0x1), v1fac1d90V1f89V1e26V1c66V19bcV793(0x1)",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d9aV1f89V1e26V1c66V19bcV793,"0,v1fac1d99V1f89V1e26V1c66V19bcV793,v1fac1d90V1f89V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0x0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d9b0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d9bV1f89V1e26V1c66V19bcV793 = NOT v1fac1d9aV1f89V1e26V1c66V19bcV793(0x0),0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d9bV1f89V1e26V1c66V19bcV793,"0,v1fac1d9aV1f89V1e26V1c66V19bcV793",NOT,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d9c0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d9cV1f89V1e26V1c66V19bcV793 = AND v1fac1d9bV1f89V1e26V1c66V19bcV793, v1fac1d8fV1f89V1e26V1c66V19bcV793",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d9cV1f89V1e26V1c66V19bcV793,"0,v1fac1d9bV1f89V1e26V1c66V19bcV793,v1fac1d8fV1f89V1e26V1c66V19bcV793",AND,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1d9e0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: MSTORE v1fac1d8dV1f89V1e26V1c66V19bcV793, v1fac1d9cV1f89V1e26V1c66V19bcV793",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,tokensForETH&m0x40+0x44+0x20-0x0,"0,v1fac1d8dV1f89V1e26V1c66V19bcV793,v1fac1d9cV1f89V1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x20-0x0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1d9f0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1d9fV1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1d9fV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1da10x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1da1V1f89V1e26V1c66V19bcV793 = ADD v1fac1d9fV1f89V1e26V1c66V19bcV793(0x20), v1fac1d8dV1f89V1e26V1c66V19bcV793",0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1da1V1f89V1e26V1c66V19bcV793,"0,v1fac1d9fV1f89V1e26V1c66V19bcV793,v1fac1d8dV1f89V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44+0x20-0x0+0x20,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1d760x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793, 0x1d8b0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[]",0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1da40x1fac_0x1S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1da41fac_1V1f89V1e26V1c66V19bcV793 = PHI v1fac1d7fV1f89V1e26V1c66V19bcV793, v1fac1da1V1f89V1e26V1c66V19bcV793",0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1da41fac_1V1f89V1e26V1c66V19bcV793,"0,v1fac1d7fV1f89V1e26V1c66V19bcV793,v1fac1da1V1f89V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1daa0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1daaV1f89V1e26V1c66V19bcV793(0x40) = CONST ,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1daaV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1dac0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1dacV1f89V1e26V1c66V19bcV793 = MLOAD v1fac1daaV1f89V1e26V1c66V19bcV793(0x40),0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1dacV1f89V1e26V1c66V19bcV793,"0,v1fac1daaV1f89V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1daf0x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fac1dafV1f89V1e26V1c66V19bcV793 = SUB v1da41fac_1V1f89V1e26V1c66V19bcV793, v1fac1dacV1f89V1e26V1c66V19bcV793",0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fac1dafV1f89V1e26V1c66V19bcV793,"0,v1da41fac_1V1f89V1e26V1c66V19bcV793,v1fac1dacV1f89V1e26V1c66V19bcV793",SUB,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1db10x1facS0x1f89S0x1e26S0x1c66S0x19bcS0x793: REVERT v1fac1dacV1f89V1e26V1c66V19bcV793, v1fac1dafV1f89V1e26V1c66V19bcV793",0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fac1dacV1f89V1e26V1c66V19bcV793,v1fac1dafV1f89V1e26V1c66V19bcV793",REVERT,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1fbdB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[]",0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1fc7S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fc7V1f89V1e26V1c66V19bcV793 = MLOAD v1f89_1V1e26V1c66V19bcV793,0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fc7V1f89V1e26V1c66V19bcV793,"0,v1f89_1V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1fcaS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fcaV1f89V1e26V1c66V19bcV793(0x20) = CONST ,0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fcaV1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1fccS0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fccV1f89V1e26V1c66V19bcV793 = ADD v1fcaV1f89V1e26V1c66V19bcV793(0x20), v1f89_1V1e26V1c66V19bcV793",0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fccV1f89V1e26V1c66V19bcV793,"0,v1fcaV1f89V1e26V1c66V19bcV793,v1f89_1V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    0x1fcdS0x1f89S0x1e26S0x1c66S0x19bcS0x793: REVERT v1fccV1f89V1e26V1c66V19bcV793, v1fc7V1f89V1e26V1c66V19bcV793",0x1fc6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fccV1f89V1e26V1c66V19bcV793,v1fc7V1f89V1e26V1c66V19bcV793",REVERT,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1da40x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1facB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1fb8S0x1f89S0x1e26S0x1c66S0x19bcS0x793: v1fb8V1f89V1e26V1c66V19bcV793(0x3cbc) = CONST ,0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,v1fb8V1f89V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x3cbc,0,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1fbcS0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMP v1fb8V1f89V1e26V1c66V19bcV793(0x3cbc),0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1fb8V1f89V1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1fb6B0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1f9bB0x1e26B0x1c66B0x19bcB0x793]",0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f9bB0x1e26B0x1c66B0x19bcB0x793
    =================================,0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f9bB0x1e26B0x1c66B0x19bcB0x793
    0x3cc2S0x1f89S0x1e26S0x1c66S0x19bcS0x793: JUMP v1f8fV1e26V1c66V19bcV793(0x1f9b),0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f8fV1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1f9bB0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1f9bB0x1e26B0x1c66B0x19bcB0x793,0x1f9bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f9bB0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x3cbcB0x1f89B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1e37B0x1c66B0x19bcB0x793]",0x1f9bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e37B0x1c66B0x19bcB0x793
    =================================,0x1f9bB0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e37B0x1c66B0x19bcB0x793
    0x1fa5S0x1e26S0x1c66S0x19bcS0x793: JUMP v1e29V1c66V19bcV793(0x1e37),0x1f9bB0x1e26B0x1c66B0x19bcB0x793,0,"0,v1e29V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1e37B0x1c66B0x19bcB0x793
    Begin block 0x1e37B0x1c66B0x19bcB0x793,0x1e37B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1e37B0x1c66B0x19bcB0x793
"    prev=[0x1f9bB0x1e26B0x1c66B0x19bcB0x793], succ=[0x1cbdB0x19bcB0x793]",0x1e37B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1cbdB0x19bcB0x793
    =================================,0x1e37B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1cbdB0x19bcB0x793
    0x1e3eS0x1c66S0x19bcS0x793: JUMP v1c69V19bcV793(0x1cbd),0x1e37B0x1c66B0x19bcB0x793,0,"0,v1c69V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1cbdB0x19bcB0x793
    Begin block 0x1cbdB0x19bcB0x793,0x1cbdB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1cbdB0x19bcB0x793
"    prev=[0x1e37B0x1c66B0x19bcB0x793], succ=[0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793]",0x1cbdB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
    =================================,0x1cbdB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
    0x1cbfS0x19bcS0x793: v1cbfV19bcV793 = MLOAD v1f89_1V1e26V1c66V19bcV793,0x1cbdB0x19bcB0x793,v1cbfV19bcV793,"0,v1f89_1V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
    0x1cc3S0x19bcS0x793: v1cc3V19bcV793 = ISZERO v1cbfV19bcV793,0x1cbdB0x19bcB0x793,v1cc3V19bcV793,"0,v1cbfV19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
    0x1cc4S0x19bcS0x793: v1cc4V19bcV793(0x3c74) = CONST ,0x1cbdB0x19bcB0x793,v1cc4V19bcV793,0,CONST,tokensForETH,public,False,0x3c74,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
"    0x1cc8S0x19bcS0x793: JUMPI v1cc4V19bcV793(0x3c74), v1cc3V19bcV793",0x1cbdB0x19bcB0x793,0,"0,v1cc4V19bcV793,v1cc3V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
    Begin block 0x3c74B0x19bcB0x793,0x3c74B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x3c74B0x19bcB0x793, 0x1cc9B0x19bcB0x793"
"    prev=[0x1cbdB0x19bcB0x793], succ=[0x1a18B0x793]",0x3c74B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
    =================================,0x3c74B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
    0x3c78S0x19bcS0x793: JUMP v1a0cV793(0x1a18),0x3c74B0x19bcB0x793,0,"0,v1a0cV793",JUMP,tokensForETH,public,False,0,0,0x1a18B0x793
    Begin block 0x1a18B0x793,0x1a18B0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
"    prev=[0x3c74B0x19bcB0x793, 0x3c98B0x19bcB0x793], succ=[0x7aa]",0x1a18B0x793,0,0,0,tokensForETH,public,False,0,0,0x7aa
    =================================,0x1a18B0x793,0,0,0,tokensForETH,public,False,0,0,0x7aa
    0x1a1dS0x793: JUMP v794(0x7aa),0x1a18B0x793,0,"0,v794",JUMP,tokensForETH,public,False,0,0,0x7aa
    Begin block 0x7aa,0x7aa,0,0,0,tokensForETH,public,False,0,0,0x7aa
"    prev=[0x1a18B0x793], succ=[0x7e6, 0x7ea]",0x7aa,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    =================================,0x7aa,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7ab: v7ab(0x0) = CONST ,0x7aa,v7ab,0,CONST,tokensForETH,public,False,0x0,0,"0x7e6, 0x7ea"
    0x7ad: v7ad(0x844) = CONST ,0x7aa,v7ad,0,CONST,tokensForETH,public,False,0x844,0,"0x7e6, 0x7ea"
    0x7b2: v7b2(0x1) = CONST ,0x7aa,v7b2,0,CONST,tokensForETH,public,False,0x1,0,"0x7e6, 0x7ea"
    0x7b4: v7b4(0x1) = CONST ,0x7aa,v7b4,0,CONST,tokensForETH,public,False,0x1,0,"0x7e6, 0x7ea"
    0x7b6: v7b6(0xa0) = CONST ,0x7aa,v7b6,0,CONST,tokensForETH,public,False,0xa0,0,"0x7e6, 0x7ea"
"    0x7b8: v7b8(0x10000000000000000000000000000000000000000) = SHL v7b6(0xa0), v7b4(0x1)",0x7aa,v7b8,"0,v7b6,v7b4",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0x7e6, 0x7ea"
"    0x7b9: v7b9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7b8(0x10000000000000000000000000000000000000000), v7b2(0x1)",0x7aa,v7b9,"0,v7b8,v7b2",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x7e6, 0x7ea"
"    0x7ba: v7ba = AND v7b9(0xffffffffffffffffffffffffffffffffffffffff), v260",0x7aa,v7ba,"0,v7b9,v260",AND,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7bb: v7bb(0x18160ddd) = CONST ,0x7aa,v7bb,0,CONST,tokensForETH,public,False,0x18160ddd,0,"0x7e6, 0x7ea"
    0x7c0: v7c0(0x40) = CONST ,0x7aa,v7c0,0,CONST,tokensForETH,public,False,0x40,0,"0x7e6, 0x7ea"
    0x7c2: v7c2 = MLOAD v7c0(0x40),0x7aa,v7c2,"0,v7c0",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x7e6, 0x7ea"
    0x7c4: v7c4(0xffffffff) = CONST ,0x7aa,v7c4,0,CONST,tokensForETH,public,False,0xffffffff,0,"0x7e6, 0x7ea"
"    0x7c9: v7c9(0x18160ddd) = AND v7c4(0xffffffff), v7bb(0x18160ddd)",0x7aa,v7c9,"0,v7c4,v7bb",AND,tokensForETH,public,False,0x18160ddd,0,"0x7e6, 0x7ea"
    0x7ca: v7ca(0xe0) = CONST ,0x7aa,v7ca,0,CONST,tokensForETH,public,False,0xe0,0,"0x7e6, 0x7ea"
"    0x7cc: v7cc(0x18160ddd00000000000000000000000000000000000000000000000000000000) = SHL v7ca(0xe0), v7c9(0x18160ddd)",0x7aa,v7cc,"0,v7ca,v7c9",SHL,tokensForETH,public,False,0x18160ddd00000000000000000000000000000000000000000000000000000000,0,"0x7e6, 0x7ea"
"    0x7ce: MSTORE v7c2, v7cc(0x18160ddd00000000000000000000000000000000000000000000000000000000)",0x7aa,tokensForETH&m0x40,"0,v7c2,v7cc",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x7e6, 0x7ea"
    0x7cf: v7cf(0x4) = CONST ,0x7aa,v7cf,0,CONST,tokensForETH,public,False,0x4,0,"0x7e6, 0x7ea"
"    0x7d1: v7d1 = ADD v7cf(0x4), v7c2",0x7aa,v7d1,"0,v7cf,v7c2",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x7e6, 0x7ea"
    0x7d2: v7d2(0x20) = CONST ,0x7aa,v7d2,0,CONST,tokensForETH,public,False,0x20,0,"0x7e6, 0x7ea"
    0x7d4: v7d4(0x40) = CONST ,0x7aa,v7d4,0,CONST,tokensForETH,public,False,0x40,0,"0x7e6, 0x7ea"
    0x7d6: v7d6 = MLOAD v7d4(0x40),0x7aa,v7d6,"0,v7d4",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x7e6, 0x7ea"
"    0x7d9: v7d9(0x4) = SUB v7d1, v7d6",0x7aa,v7d9,"0,v7d1,v7d6",SUB,tokensForETH,public,False,0x4,tokensForETH&m0x40+0x4-0x4,"0x7e6, 0x7ea"
    0x7dd: v7dd = EXTCODESIZE v7ba,0x7aa,v7dd,"0,v7ba",EXTCODESIZE,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7de: v7de = ISZERO v7dd,0x7aa,v7de,"0,v7dd",ISZERO,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7e0: v7e0 = ISZERO v7de,0x7aa,v7e0,"0,v7de",ISZERO,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7e1: v7e1(0x7ea) = CONST ,0x7aa,v7e1,0,CONST,tokensForETH,public,False,0x7ea,0,"0x7e6, 0x7ea"
"    0x7e5: JUMPI v7e1(0x7ea), v7e0",0x7aa,0,"0,v7e1,v7e0",JUMPI,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    Begin block 0x7e6,0x7e6,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
"    prev=[0x7aa], succ=[]",0x7e6,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    =================================,0x7e6,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    0x7e6: v7e6(0x0) = CONST ,0x7e6,v7e6,0,CONST,tokensForETH,public,False,0x0,0,"0x7e6, 0x7ea"
"    0x7e9: REVERT v7e6(0x0), v7e6(0x0)",0x7e6,0,"0,v7e6,v7e6",REVERT,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
    Begin block 0x7ea,0x7ea,0,0,0,tokensForETH,public,False,0,0,"0x7e6, 0x7ea"
"    prev=[0x7aa], succ=[0x7f6, 0x7ff]",0x7ea,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    =================================,0x7ea,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7ec: v7ec = GAS ,0x7ea,v7ec,0,GAS,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
"    0x7ed: v7ed = STATICCALL v7ec, v7ba, v7d6, v7d9(0x4), v7d6, v7d2(0x20)",0x7ea,v7ed,"0,v7ec,v7ba,v7d6,v7d9,v7d6,v7d2",STATICCALL,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7ee: v7ee = ISZERO v7ed,0x7ea,v7ee,"0,v7ed",ISZERO,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7f0: v7f0 = ISZERO v7ee,0x7ea,v7f0,"0,v7ee",ISZERO,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7f1: v7f1(0x7ff) = CONST ,0x7ea,v7f1,0,CONST,tokensForETH,public,False,0x7ff,0,"0x7f6, 0x7ff"
"    0x7f5: JUMPI v7f1(0x7ff), v7f0",0x7ea,0,"0,v7f1,v7f0",JUMPI,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    Begin block 0x7f6,0x7f6,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
"    prev=[0x7ea], succ=[]",0x7f6,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    =================================,0x7f6,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7f6: v7f6 = RETURNDATASIZE ,0x7f6,v7f6,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7f7: v7f7(0x0) = CONST ,0x7f6,v7f7,0,CONST,tokensForETH,public,False,0x0,0,"0x7f6, 0x7ff"
"    0x7fa: RETURNDATACOPY v7f7(0x0), v7f7(0x0), v7f6",0x7f6,0,"0,v7f7,v7f7,v7f6",RETURNDATACOPY,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7fb: v7fb = RETURNDATASIZE ,0x7f6,v7fb,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    0x7fc: v7fc(0x0) = CONST ,0x7f6,v7fc,0,CONST,tokensForETH,public,False,0x0,0,"0x7f6, 0x7ff"
"    0x7fe: REVERT v7fc(0x0), v7fb",0x7f6,0,"0,v7fc,v7fb",REVERT,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
    Begin block 0x7ff,0x7ff,0,0,0,tokensForETH,public,False,0,0,"0x7f6, 0x7ff"
"    prev=[0x7ea], succ=[0x812, 0x816]",0x7ff,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
    =================================,0x7ff,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
    0x804: v804(0x40) = CONST ,0x7ff,v804,0,CONST,tokensForETH,public,False,0x40,0,"0x812, 0x816"
    0x806: v806 = MLOAD v804(0x40),0x7ff,v806,"0,v804",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x812, 0x816"
    0x807: v807 = RETURNDATASIZE ,0x7ff,v807,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x812, 0x816"
    0x808: v808(0x20) = CONST ,0x7ff,v808,0,CONST,tokensForETH,public,False,0x20,0,"0x812, 0x816"
"    0x80b: v80b = LT v807, v808(0x20)",0x7ff,v80b,"0,v807,v808",LT,tokensForETH,public,False,0,0,"0x812, 0x816"
    0x80c: v80c = ISZERO v80b,0x7ff,v80c,"0,v80b",ISZERO,tokensForETH,public,False,0,0,"0x812, 0x816"
    0x80d: v80d(0x816) = CONST ,0x7ff,v80d,0,CONST,tokensForETH,public,False,0x816,0,"0x812, 0x816"
"    0x811: JUMPI v80d(0x816), v80c",0x7ff,0,"0,v80d,v80c",JUMPI,tokensForETH,public,False,0,0,"0x812, 0x816"
    Begin block 0x812,0x812,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
"    prev=[0x7ff], succ=[]",0x812,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
    =================================,0x812,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
    0x812: v812(0x0) = CONST ,0x812,v812,0,CONST,tokensForETH,public,False,0x0,0,"0x812, 0x816"
"    0x815: REVERT v812(0x0), v812(0x0)",0x812,0,"0,v812,v812",REVERT,tokensForETH,public,False,0,0,"0x812, 0x816"
    Begin block 0x816,0x816,0,0,0,tokensForETH,public,False,0,0,"0x812, 0x816"
"    prev=[0x7ff], succ=[0x3a38]",0x816,0,0,0,tokensForETH,public,False,0,0,0x3a38
    =================================,0x816,0,0,0,tokensForETH,public,False,0,0,0x3a38
    0x818: v818 = MLOAD v806,0x816,v818,"0,v806",MLOAD,tokensForETH,public,False,0,0,0x3a38
    0x819: v819(0x1) = CONST ,0x816,v819,0,CONST,tokensForETH,public,False,0x1,0,0x3a38
    0x81b: v81b(0x1) = CONST ,0x816,v81b,0,CONST,tokensForETH,public,False,0x1,0,0x3a38
    0x81d: v81d(0xa0) = CONST ,0x816,v81d,0,CONST,tokensForETH,public,False,0xa0,0,0x3a38
"    0x81f: v81f(0x10000000000000000000000000000000000000000) = SHL v81d(0xa0), v81b(0x1)",0x816,v81f,"0,v81d,v81b",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x3a38
"    0x820: v820(0xffffffffffffffffffffffffffffffffffffffff) = SUB v81f(0x10000000000000000000000000000000000000000), v819(0x1)",0x816,v820,"0,v81f,v819",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3a38
"    0x822: v822 = AND v257, v820(0xffffffffffffffffffffffffffffffffffffffff)",0x816,v822,"0,v257,v820",AND,tokensForETH,public,False,0,0,0x3a38
    0x823: v823(0x0) = CONST ,0x816,v823,0,CONST,tokensForETH,public,False,0x0,0,0x3a38
"    0x827: MSTORE v823(0x0), v822",0x816,0,"0,v823,v822",MSTORE,tokensForETH,public,False,0,0,0x3a38
    0x828: v828(0x3) = CONST ,0x816,v828,0,CONST,tokensForETH,public,False,0x3,0,0x3a38
    0x82a: v82a(0x20) = CONST ,0x816,v82a,0,CONST,tokensForETH,public,False,0x20,0,0x3a38
"    0x82c: MSTORE v82a(0x20), v828(0x3)",0x816,0,"0,v82a,v828",MSTORE,tokensForETH,public,False,0,0,0x3a38
    0x82d: v82d(0x40) = CONST ,0x816,v82d,0,CONST,tokensForETH,public,False,0x40,0,0x3a38
"    0x830: v830 = SHA3 v823(0x0), v82d(0x40)",0x816,v830,"0,v823,v82d",SHA3,tokensForETH,public,False,0,0,0x3a38
    0x831: v831 = SLOAD v830,0x816,v831,"0,v830",SLOAD,tokensForETH,public,False,0,0,0x3a38
    0x832: v832(0x3a38) = CONST ,0x816,v832,0,CONST,tokensForETH,public,False,0x3a38,0,0x3a38
    0x838: v838(0x1a1e) = CONST ,0x816,v838,0,CONST,tokensForETH,public,False,0x1a1e,0,0x3a38
"    0x83c: v83c_0 = CALLPRIVATE v838(0x1a1e), v265, v831, v832(0x3a38)",0x816,v83c_0,"0,v838,v265,v831,v832",CALLPRIVATE,tokensForETH,public,False,0,0,0x3a38
    Begin block 0x3a38,0x3a38,0,0,0,tokensForETH,public,False,0,0,0x3a38
"    prev=[0x816], succ=[0x1a830x224]",0x3a38,0,0,0,tokensForETH,public,False,0,0,0x1a830x224
    =================================,0x3a38,0,0,0,tokensForETH,public,False,0,0,0x1a830x224
    0x3a3a: v3a3a(0x1a83) = CONST ,0x3a38,v3a3a,0,CONST,tokensForETH,public,False,0x1a83,0,0x1a830x224
    0x3a3e: JUMP v3a3a(0x1a83),0x3a38,0,"0,v3a3a",JUMP,tokensForETH,public,False,0,0,0x1a830x224
    Begin block 0x1a830x224,0x1a830x224,0,0,0,tokensForETH,public,False,0,0,0x1a830x224
"    prev=[0x3a38], succ=[0x1d220x224]",0x1a830x224,0,0,0,tokensForETH,public,False,0,0,0x1d220x224
    =================================,0x1a830x224,0,0,0,tokensForETH,public,False,0,0,0x1d220x224
    0x1a840x224: v2241a84(0x0) = CONST ,0x1a830x224,v2241a84,0,CONST,tokensForETH,public,False,0x0,0,0x1d220x224
    0x1a860x224: v2241a86(0x3c02) = CONST ,0x1a830x224,v2241a86,0,CONST,tokensForETH,public,False,0x3c02,0,0x1d220x224
    0x1a8c0x224: v2241a8c(0x40) = CONST ,0x1a830x224,v2241a8c,0,CONST,tokensForETH,public,False,0x40,0,0x1d220x224
    0x1a8e0x224: v2241a8e = MLOAD v2241a8c(0x40),0x1a830x224,v2241a8e,"0,v2241a8c",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1d220x224
    0x1a900x224: v2241a90(0x40) = CONST ,0x1a830x224,v2241a90,0,CONST,tokensForETH,public,False,0x40,0,0x1d220x224
"    0x1a920x224: v2241a92 = ADD v2241a90(0x40), v2241a8e",0x1a830x224,v2241a92,"0,v2241a90,v2241a8e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x40,0x1d220x224
    0x1a930x224: v2241a93(0x40) = CONST ,0x1a830x224,v2241a93,0,CONST,tokensForETH,public,False,0x40,0,0x1d220x224
"    0x1a950x224: MSTORE v2241a93(0x40), v2241a92",0x1a830x224,0,"0,v2241a93,v2241a92",MSTORE,tokensForETH,public,False,0,0,0x1d220x224
    0x1a970x224: v2241a97(0x1a) = CONST ,0x1a830x224,v2241a97,0,CONST,tokensForETH,public,False,0x1a,0,0x1d220x224
"    0x1a9a0x224: MSTORE v2241a8e, v2241a97(0x1a)",0x1a830x224,tokensForETH&m0x40,"0,v2241a8e,v2241a97",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,0x1d220x224
    0x1a9b0x224: v2241a9b(0x20) = CONST ,0x1a830x224,v2241a9b,0,CONST,tokensForETH,public,False,0x20,0,0x1d220x224
"    0x1a9d0x224: v2241a9d = ADD v2241a9b(0x20), v2241a8e",0x1a830x224,v2241a9d,"0,v2241a9b,v2241a8e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1d220x224
    0x1a9e0x224: v2241a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000) = CONST ,0x1a830x224,v2241a9e,0,CONST,tokensForETH,public,False,0x536166654d6174683a206469766973696f6e206279207a65726f000000000000,0,0x1d220x224
"    0x1ac00x224: MSTORE v2241a9d, v2241a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000)",0x1a830x224,tokensForETH&m0x40+0x20,"0,v2241a9d,v2241a9e",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1d220x224
    0x1ac20x224: v2241ac2(0x1d22) = CONST ,0x1a830x224,v2241ac2,0,CONST,tokensForETH,public,False,0x1d22,0,0x1d220x224
    0x1ac60x224: JUMP v2241ac2(0x1d22),0x1a830x224,0,"0,v2241ac2",JUMP,tokensForETH,public,False,0,0,0x1d220x224
    Begin block 0x1d220x224,0x1d220x224,0,0,0,tokensForETH,public,False,0,0,0x1d220x224
"    prev=[0x1a830x224], succ=[0x1d2c0x224, 0x1db20x224]",0x1d220x224,0,0,0,tokensForETH,public,False,0,0,"0x1d2c0x224, 0x1db20x224"
    =================================,0x1d220x224,0,0,0,tokensForETH,public,False,0,0,"0x1d2c0x224, 0x1db20x224"
    0x1d230x224: v2241d23(0x0) = CONST ,0x1d220x224,v2241d23,0,CONST,tokensForETH,public,False,0x0,0,"0x1d2c0x224, 0x1db20x224"
    0x1d270x224: v2241d27(0x1db2) = CONST ,0x1d220x224,v2241d27,0,CONST,tokensForETH,public,False,0x1db2,0,"0x1d2c0x224, 0x1db20x224"
"    0x1d2b0x224: JUMPI v2241d27(0x1db2), v818",0x1d220x224,0,"0,v2241d27,v818",JUMPI,tokensForETH,public,False,0,0,"0x1d2c0x224, 0x1db20x224"
    Begin block 0x1d2c0x224,0x1d2c0x224,0,0,0,tokensForETH,public,False,0,0,"0x1d2c0x224, 0x1db20x224"
"    prev=[0x1d220x224], succ=[0x1d5c0x224]",0x1d2c0x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
    =================================,0x1d2c0x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
    0x1d2c0x224: v2241d2c(0x40) = CONST ,0x1d2c0x224,v2241d2c,0,CONST,tokensForETH,public,False,0x40,0,0x1d5c0x224
    0x1d2e0x224: v2241d2e = MLOAD v2241d2c(0x40),0x1d2c0x224,v2241d2e,"0,v2241d2c",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,0x1d5c0x224
    0x1d2f0x224: v2241d2f(0x461bcd) = CONST ,0x1d2c0x224,v2241d2f,0,CONST,tokensForETH,public,False,0x461bcd,0,0x1d5c0x224
    0x1d330x224: v2241d33(0xe5) = CONST ,0x1d2c0x224,v2241d33,0,CONST,tokensForETH,public,False,0xe5,0,0x1d5c0x224
"    0x1d350x224: v2241d35(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2241d33(0xe5), v2241d2f(0x461bcd)",0x1d2c0x224,v2241d35,"0,v2241d33,v2241d2f",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,0x1d5c0x224
"    0x1d370x224: MSTORE v2241d2e, v2241d35(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1d2c0x224,tokensForETH&m0x40,"0,v2241d2e,v2241d35",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,0x1d5c0x224
    0x1d380x224: v2241d38(0x4) = CONST ,0x1d2c0x224,v2241d38,0,CONST,tokensForETH,public,False,0x4,0,0x1d5c0x224
"    0x1d3a0x224: v2241d3a = ADD v2241d38(0x4), v2241d2e",0x1d2c0x224,v2241d3a,"0,v2241d38,v2241d2e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,0x1d5c0x224
    0x1d3d0x224: v2241d3d(0x20) = CONST ,0x1d2c0x224,v2241d3d,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x224
"    0x1d3f0x224: v2241d3f = ADD v2241d3d(0x20), v2241d3a",0x1d2c0x224,v2241d3f,"0,v2241d3d,v2241d3a",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,0x1d5c0x224
"    0x1d420x224: v2241d42(0x20) = SUB v2241d3f, v2241d3a",0x1d2c0x224,v2241d42,"0,v2241d3f,v2241d3a",SUB,tokensForETH,public,False,0x20,tokensForETH&m0x40+0x4+0x20-0x20,0x1d5c0x224
"    0x1d440x224: MSTORE v2241d3a, v2241d42(0x20)",0x1d2c0x224,tokensForETH&m0x40+0x4,"0,v2241d3a,v2241d42",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,0x1d5c0x224
    0x1d480x224: v2241d48(0x1a) = MLOAD v2241a8e,0x1d2c0x224,v2241d48,"0,v2241a8e",MLOAD,tokensForETH,public,False,0x1a,tokensForETH&m0x1a,0x1d5c0x224
"    0x1d4a0x224: MSTORE v2241d3f, v2241d48(0x1a)",0x1d2c0x224,tokensForETH&m0x40+0x4+0x20,"0,v2241d3f,v2241d48",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,0x1d5c0x224
    0x1d4b0x224: v2241d4b(0x20) = CONST ,0x1d2c0x224,v2241d4b,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x224
"    0x1d4d0x224: v2241d4d = ADD v2241d4b(0x20), v2241d3f",0x1d2c0x224,v2241d4d,"0,v2241d4b,v2241d3f",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20,0x1d5c0x224
    0x1d510x224: v2241d51(0x1a) = MLOAD v2241a8e,0x1d2c0x224,v2241d51,"0,v2241a8e",MLOAD,tokensForETH,public,False,0x1a,tokensForETH&m0x1a,0x1d5c0x224
    0x1d530x224: v2241d53(0x20) = CONST ,0x1d2c0x224,v2241d53,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x224
"    0x1d550x224: v2241d55 = ADD v2241d53(0x20), v2241a8e",0x1d2c0x224,v2241d55,"0,v2241d53,v2241a8e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x20,0x1d5c0x224
    0x1d5a0x224: v2241d5a(0x0) = CONST ,0x1d2c0x224,v2241d5a,0,CONST,tokensForETH,public,False,0x0,0,0x1d5c0x224
    Begin block 0x1d5c0x224,0x1d5c0x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
"    prev=[0x1d2c0x224, 0x1d660x224], succ=[0x1d760x224, 0x1d660x224]",0x1d5c0x224,0,0,0,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
    =================================,0x1d5c0x224,0,0,0,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
"    0x1d5c0x224_0x0: v1d5c224_0 = PHI v2241d70, v2241d5a(0x0)",0x1d5c0x224,v1d5c224_0,"0,v2241d70,v2241d5a",PHI,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
"    0x1d5f0x224: v2241d5f = LT v1d5c224_0, v2241d51(0x1a)",0x1d5c0x224,v2241d5f,"0,v1d5c224_0,v2241d51",LT,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
    0x1d600x224: v2241d60 = ISZERO v2241d5f,0x1d5c0x224,v2241d60,"0,v2241d5f",ISZERO,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
    0x1d610x224: v2241d61(0x1d76) = CONST ,0x1d5c0x224,v2241d61,0,CONST,tokensForETH,public,False,0x1d76,0,"0x1d760x224, 0x1d660x224"
"    0x1d650x224: JUMPI v2241d61(0x1d76), v2241d60",0x1d5c0x224,0,"0,v2241d61,v2241d60",JUMPI,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
    Begin block 0x1d760x224,0x1d760x224,0,0,0,tokensForETH,public,False,0,0,"0x1d760x224, 0x1d660x224"
"    prev=[0x1d5c0x224], succ=[0x1da40x224, 0x1d8b0x224]",0x1d760x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    =================================,0x1d760x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
"    0x1d7f0x224: v2241d7f = ADD v2241d51(0x1a), v2241d4d",0x1d760x224,v2241d7f,"0,v2241d51,v2241d4d",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x1a,"0x1da40x224, 0x1d8b0x224"
    0x1d810x224: v2241d81(0x1f) = CONST ,0x1d760x224,v2241d81,0,CONST,tokensForETH,public,False,0x1f,0,"0x1da40x224, 0x1d8b0x224"
"    0x1d830x224: v2241d83(0x1a) = AND v2241d81(0x1f), v2241d51(0x1a)",0x1d760x224,v2241d83,"0,v2241d81,v2241d51",AND,tokensForETH,public,False,0x1a,0,"0x1da40x224, 0x1d8b0x224"
    0x1d850x224: v2241d85 = ISZERO v2241d83(0x1a),0x1d760x224,v2241d85,"0,v2241d83",ISZERO,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    0x1d860x224: v2241d86(0x1da4) = CONST ,0x1d760x224,v2241d86,0,CONST,tokensForETH,public,False,0x1da4,0,"0x1da40x224, 0x1d8b0x224"
"    0x1d8a0x224: JUMPI v2241d86(0x1da4), v2241d85",0x1d760x224,0,"0,v2241d86,v2241d85",JUMPI,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    Begin block 0x1da40x224,0x1da40x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
"    prev=[0x1d760x224, 0x1d8b0x224], succ=[]",0x1da40x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    =================================,0x1da40x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
"    0x1da40x224_0x1: v1da4224_1 = PHI v2241da1, v2241d7f",0x1da40x224,v1da4224_1,"0,v2241da1,v2241d7f",PHI,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    0x1daa0x224: v2241daa(0x40) = CONST ,0x1da40x224,v2241daa,0,CONST,tokensForETH,public,False,0x40,0,"0x1da40x224, 0x1d8b0x224"
    0x1dac0x224: v2241dac = MLOAD v2241daa(0x40),0x1da40x224,v2241dac,"0,v2241daa",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1da40x224, 0x1d8b0x224"
"    0x1daf0x224: v2241daf = SUB v1da4224_1, v2241dac",0x1da40x224,v2241daf,"0,v1da4224_1,v2241dac",SUB,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
"    0x1db10x224: REVERT v2241dac, v2241daf",0x1da40x224,0,"0,v2241dac,v2241daf",REVERT,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
    Begin block 0x1d8b0x224,0x1d8b0x224,0,0,0,tokensForETH,public,False,0,0,"0x1da40x224, 0x1d8b0x224"
"    prev=[0x1d760x224], succ=[0x1da40x224]",0x1d8b0x224,0,0,0,tokensForETH,public,False,0,0,0x1da40x224
    =================================,0x1d8b0x224,0,0,0,tokensForETH,public,False,0,0,0x1da40x224
"    0x1d8d0x224: v2241d8d = SUB v2241d7f, v2241d83(0x1a)",0x1d8b0x224,v2241d8d,"0,v2241d7f,v2241d83",SUB,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x224
    0x1d8f0x224: v2241d8f = MLOAD v2241d8d,0x1d8b0x224,v2241d8f,"0,v2241d8d",MLOAD,tokensForETH,public,False,0,0,0x1da40x224
    0x1d900x224: v2241d90(0x1) = CONST ,0x1d8b0x224,v2241d90,0,CONST,tokensForETH,public,False,0x1,0,0x1da40x224
    0x1d930x224: v2241d93(0x20) = CONST ,0x1d8b0x224,v2241d93,0,CONST,tokensForETH,public,False,0x20,0,0x1da40x224
"    0x1d950x224: v2241d95(0x6) = SUB v2241d93(0x20), v2241d83(0x1a)",0x1d8b0x224,v2241d95,"0,v2241d93,v2241d83",SUB,tokensForETH,public,False,0x6,0,0x1da40x224
    0x1d960x224: v2241d96(0x100) = CONST ,0x1d8b0x224,v2241d96,0,CONST,tokensForETH,public,False,0x100,0,0x1da40x224
"    0x1d990x224: v2241d99(0x1000000000000) = EXP v2241d96(0x100), v2241d95(0x6)",0x1d8b0x224,v2241d99,"0,v2241d96,v2241d95",EXP,tokensForETH,public,False,0x1000000000000,0,0x1da40x224
"    0x1d9a0x224: v2241d9a(0xffffffffffff) = SUB v2241d99(0x1000000000000), v2241d90(0x1)",0x1d8b0x224,v2241d9a,"0,v2241d99,v2241d90",SUB,tokensForETH,public,False,0xffffffffffff,0,0x1da40x224
    0x1d9b0x224: v2241d9b = NOT v2241d9a(0xffffffffffff),0x1d8b0x224,v2241d9b,"0,v2241d9a",NOT,tokensForETH,public,False,0,0,0x1da40x224
"    0x1d9c0x224: v2241d9c = AND v2241d9b, v2241d8f",0x1d8b0x224,v2241d9c,"0,v2241d9b,v2241d8f",AND,tokensForETH,public,False,0,0,0x1da40x224
"    0x1d9e0x224: MSTORE v2241d8d, v2241d9c",0x1d8b0x224,tokensForETH&m0x40+0x4+0x20+0x20+0x1a-0x1a,"0,v2241d8d,v2241d9c",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x224
    0x1d9f0x224: v2241d9f(0x20) = CONST ,0x1d8b0x224,v2241d9f,0,CONST,tokensForETH,public,False,0x20,0,0x1da40x224
"    0x1da10x224: v2241da1 = ADD v2241d9f(0x20), v2241d8d",0x1d8b0x224,v2241da1,"0,v2241d9f,v2241d8d",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x1a-0x1a+0x20,0x1da40x224
    Begin block 0x1d660x224,0x1d660x224,0,0,0,tokensForETH,public,False,0,0,0x1da40x224
"    prev=[0x1d5c0x224], succ=[0x1d5c0x224]",0x1d660x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
    =================================,0x1d660x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
"    0x1d660x224_0x0: v1d66224_0 = PHI v2241d70, v2241d5a(0x0)",0x1d660x224,v1d66224_0,"0,v2241d70,v2241d5a",PHI,tokensForETH,public,False,0,0,0x1d5c0x224
"    0x1d680x224: v2241d68 = ADD v1d66224_0, v2241d55",0x1d660x224,v2241d68,"0,v1d66224_0,v2241d55",ADD,tokensForETH,public,False,0,0,0x1d5c0x224
    0x1d690x224: v2241d69 = MLOAD v2241d68,0x1d660x224,v2241d69,"0,v2241d68",MLOAD,tokensForETH,public,False,0,0,0x1d5c0x224
"    0x1d6c0x224: v2241d6c = ADD v1d66224_0, v2241d4d",0x1d660x224,v2241d6c,"0,v1d66224_0,v2241d4d",ADD,tokensForETH,public,False,0,0,0x1d5c0x224
"    0x1d6d0x224: MSTORE v2241d6c, v2241d69",0x1d660x224,0,"0,v2241d6c,v2241d69",MSTORE,tokensForETH,public,False,0,0,0x1d5c0x224
    0x1d6e0x224: v2241d6e(0x20) = CONST ,0x1d660x224,v2241d6e,0,CONST,tokensForETH,public,False,0x20,0,0x1d5c0x224
"    0x1d700x224: v2241d70 = ADD v2241d6e(0x20), v1d66224_0",0x1d660x224,v2241d70,"0,v2241d6e,v1d66224_0",ADD,tokensForETH,public,False,0,0,0x1d5c0x224
    0x1d710x224: v2241d71(0x1d5c) = CONST ,0x1d660x224,v2241d71,0,CONST,tokensForETH,public,False,0x1d5c,0,0x1d5c0x224
    0x1d750x224: JUMP v2241d71(0x1d5c),0x1d660x224,0,"0,v2241d71",JUMP,tokensForETH,public,False,0,0,0x1d5c0x224
    Begin block 0x1db20x224,0x1db20x224,0,0,0,tokensForETH,public,False,0,0,0x1d5c0x224
"    prev=[0x1d220x224], succ=[0x1dbe0x224, 0x1dbf0x224]",0x1db20x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    =================================,0x1db20x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    0x1db40x224: v2241db4(0x0) = CONST ,0x1db20x224,v2241db4,0,CONST,tokensForETH,public,False,0x0,0,"0x1dbe0x224, 0x1dbf0x224"
    0x1db90x224: v2241db9(0x1dbf) = CONST ,0x1db20x224,v2241db9,0,CONST,tokensForETH,public,False,0x1dbf,0,"0x1dbe0x224, 0x1dbf0x224"
"    0x1dbd0x224: JUMPI v2241db9(0x1dbf), v818",0x1db20x224,0,"0,v2241db9,v818",JUMPI,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    Begin block 0x1dbe0x224,0x1dbe0x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
"    prev=[0x1db20x224], succ=[]",0x1dbe0x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    =================================,0x1dbe0x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    0x1dbe0x224: THROW ,0x1dbe0x224,0,0,THROW,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
    Begin block 0x1dbf0x224,0x1dbf0x224,0,0,0,tokensForETH,public,False,0,0,"0x1dbe0x224, 0x1dbf0x224"
"    prev=[0x1db20x224], succ=[0x3c020x224]",0x1dbf0x224,0,0,0,tokensForETH,public,False,0,0,0x3c020x224
    =================================,0x1dbf0x224,0,0,0,tokensForETH,public,False,0,0,0x3c020x224
"    0x1dc00x224: v2241dc0 = DIV v83c_0, v818",0x1dbf0x224,v2241dc0,"0,v83c_0,v818",DIV,tokensForETH,public,False,0,0,0x3c020x224
    0x1dc80x224: JUMP v2241a86(0x3c02),0x1dbf0x224,0,"0,v2241a86",JUMP,tokensForETH,public,False,0,0,0x3c020x224
    Begin block 0x3c020x224,0x3c020x224,0,0,0,tokensForETH,public,False,0,0,0x3c020x224
"    prev=[0x1dbf0x224], succ=[0x844]",0x3c020x224,0,0,0,tokensForETH,public,False,0,0,0x844
    =================================,0x3c020x224,0,0,0,tokensForETH,public,False,0,0,0x844
    0x3c080x224: JUMP v7ad(0x844),0x3c020x224,0,"0,v7ad",JUMP,tokensForETH,public,False,0,0,0x844
    Begin block 0x844,0x844,0,0,0,tokensForETH,public,False,0,0,0x844
"    prev=[0x3c020x224], succ=[0x897, 0x89b]",0x844,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
    =================================,0x844,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x845: v845(0x6) = CONST ,0x844,v845,0,CONST,tokensForETH,public,False,0x6,0,"0x897, 0x89b"
    0x847: v847 = SLOAD v845(0x6),0x844,v847,"0,v845",SLOAD,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x848: v848(0x40) = CONST ,0x844,v848,0,CONST,tokensForETH,public,False,0x40,0,"0x897, 0x89b"
    0x84b: v84b = MLOAD v848(0x40),0x844,v84b,"0,v848",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x897, 0x89b"
    0x84c: v84c(0x7dc5bcc9) = CONST ,0x844,v84c,0,CONST,tokensForETH,public,False,0x7dc5bcc9,0,"0x897, 0x89b"
    0x851: v851(0xe1) = CONST ,0x844,v851,0,CONST,tokensForETH,public,False,0xe1,0,"0x897, 0x89b"
"    0x853: v853(0xfb8b799200000000000000000000000000000000000000000000000000000000) = SHL v851(0xe1), v84c(0x7dc5bcc9)",0x844,v853,"0,v851,v84c",SHL,tokensForETH,public,False,0xfb8b799200000000000000000000000000000000000000000000000000000000,0,"0x897, 0x89b"
"    0x855: MSTORE v84b, v853(0xfb8b799200000000000000000000000000000000000000000000000000000000)",0x844,tokensForETH&m0x40,"0,v84b,v853",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x897, 0x89b"
    0x856: v856(0x4) = CONST ,0x844,v856,0,CONST,tokensForETH,public,False,0x4,0,"0x897, 0x89b"
"    0x859: v859 = ADD v84b, v856(0x4)",0x844,v859,"0,v84b,v856",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x897, 0x89b"
"    0x85c: MSTORE v859, v2241dc0",0x844,tokensForETH&m0x40+0x4,"0,v859,v2241dc0",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x897, 0x89b"
    0x85d: v85d = CALLER ,0x844,v85d,0,CALLER,tokensForETH,public,True,0,0,"0x897, 0x89b"
    0x85e: v85e(0x24) = CONST ,0x844,v85e,0,CONST,tokensForETH,public,False,0x24,0,"0x897, 0x89b"
"    0x861: v861 = ADD v84b, v85e(0x24)",0x844,v861,"0,v84b,v85e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x897, 0x89b"
"    0x862: MSTORE v861, v85d",0x844,tokensForETH&m0x40+0x24,"0,v861,v85d",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x897, 0x89b"
    0x864: v864 = MLOAD v848(0x40),0x844,v864,"0,v848",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x897, 0x89b"
    0x868: v868(0x1) = CONST ,0x844,v868,0,CONST,tokensForETH,public,False,0x1,0,"0x897, 0x89b"
    0x86a: v86a(0x1) = CONST ,0x844,v86a,0,CONST,tokensForETH,public,False,0x1,0,"0x897, 0x89b"
    0x86c: v86c(0xa0) = CONST ,0x844,v86c,0,CONST,tokensForETH,public,False,0xa0,0,"0x897, 0x89b"
"    0x86e: v86e(0x10000000000000000000000000000000000000000) = SHL v86c(0xa0), v86a(0x1)",0x844,v86e,"0,v86c,v86a",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0x897, 0x89b"
"    0x86f: v86f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v86e(0x10000000000000000000000000000000000000000), v868(0x1)",0x844,v86f,"0,v86e,v868",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x897, 0x89b"
"    0x872: v872 = AND v847, v86f(0xffffffffffffffffffffffffffffffffffffffff)",0x844,v872,"0,v847,v86f",AND,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x874: v874(0xfb8b7992) = CONST ,0x844,v874,0,CONST,tokensForETH,public,False,0xfb8b7992,0,"0x897, 0x89b"
    0x87a: v87a(0x44) = CONST ,0x844,v87a,0,CONST,tokensForETH,public,False,0x44,0,"0x897, 0x89b"
"    0x87e: v87e = ADD v84b, v87a(0x44)",0x844,v87e,"0,v84b,v87a",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x897, 0x89b"
    0x880: v880(0x0) = CONST ,0x844,v880,0,CONST,tokensForETH,public,False,0x0,0,"0x897, 0x89b"
"    0x888: v888(0x0) = SUB v84b, v864",0x844,v888,"0,v84b,v864",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,"0x897, 0x89b"
"    0x889: v889(0x44) = ADD v888(0x0), v87a(0x44)",0x844,v889,"0,v888,v87a",ADD,tokensForETH,public,False,0x44,tokensForETH&m0x40-0x0+0x44,"0x897, 0x89b"
    0x88e: v88e = EXTCODESIZE v872,0x844,v88e,"0,v872",EXTCODESIZE,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x88f: v88f = ISZERO v88e,0x844,v88f,"0,v88e",ISZERO,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x891: v891 = ISZERO v88f,0x844,v891,"0,v88f",ISZERO,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x892: v892(0x89b) = CONST ,0x844,v892,0,CONST,tokensForETH,public,False,0x89b,0,"0x897, 0x89b"
"    0x896: JUMPI v892(0x89b), v891",0x844,0,"0,v892,v891",JUMPI,tokensForETH,public,False,0,0,"0x897, 0x89b"
    Begin block 0x897,0x897,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
"    prev=[0x844], succ=[]",0x897,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
    =================================,0x897,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
    0x897: v897(0x0) = CONST ,0x897,v897,0,CONST,tokensForETH,public,False,0x0,0,"0x897, 0x89b"
"    0x89a: REVERT v897(0x0), v897(0x0)",0x897,0,"0,v897,v897",REVERT,tokensForETH,public,False,0,0,"0x897, 0x89b"
    Begin block 0x89b,0x89b,0,0,0,tokensForETH,public,False,0,0,"0x897, 0x89b"
"    prev=[0x844], succ=[0x8a7, 0x8b0]",0x89b,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    =================================,0x89b,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x89d: v89d = GAS ,0x89b,v89d,0,GAS,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
"    0x89e: v89e = CALL v89d, v872, v880(0x0), v864, v889(0x44), v864, v880(0x0)",0x89b,v89e,"0,v89d,v872,v880,v864,v889,v864,v880",CALL,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x89f: v89f = ISZERO v89e,0x89b,v89f,"0,v89e",ISZERO,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8a1: v8a1 = ISZERO v89f,0x89b,v8a1,"0,v89f",ISZERO,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8a2: v8a2(0x8b0) = CONST ,0x89b,v8a2,0,CONST,tokensForETH,public,False,0x8b0,0,"0x8a7, 0x8b0"
"    0x8a6: JUMPI v8a2(0x8b0), v8a1",0x89b,0,"0,v8a2,v8a1",JUMPI,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    Begin block 0x8a7,0x8a7,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
"    prev=[0x89b], succ=[]",0x8a7,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    =================================,0x8a7,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8a7: v8a7 = RETURNDATASIZE ,0x8a7,v8a7,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8a8: v8a8(0x0) = CONST ,0x8a7,v8a8,0,CONST,tokensForETH,public,False,0x0,0,"0x8a7, 0x8b0"
"    0x8ab: RETURNDATACOPY v8a8(0x0), v8a8(0x0), v8a7",0x8a7,0,"0,v8a8,v8a8,v8a7",RETURNDATACOPY,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8ac: v8ac = RETURNDATASIZE ,0x8a7,v8ac,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    0x8ad: v8ad(0x0) = CONST ,0x8a7,v8ad,0,CONST,tokensForETH,public,False,0x0,0,"0x8a7, 0x8b0"
"    0x8af: REVERT v8ad(0x0), v8ac",0x8a7,0,"0,v8ad,v8ac",REVERT,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
    Begin block 0x8b0,0x8b0,0,0,0,tokensForETH,public,False,0,0,"0x8a7, 0x8b0"
"    prev=[0x89b], succ=[0x92a, 0x92e]",0x8b0,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    =================================,0x8b0,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x8b3: v8b3(0x5) = CONST ,0x8b0,v8b3,0,CONST,tokensForETH,public,False,0x5,0,"0x92a, 0x92e"
    0x8b5: v8b5 = SLOAD v8b3(0x5),0x8b0,v8b5,"0,v8b3",SLOAD,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x8b6: v8b6(0x40) = CONST ,0x8b0,v8b6,0,CONST,tokensForETH,public,False,0x40,0,"0x92a, 0x92e"
    0x8b9: v8b9 = MLOAD v8b6(0x40),0x8b0,v8b9,"0,v8b6",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x92a, 0x92e"
    0x8ba: v8ba(0x75b04b15) = CONST ,0x8b0,v8ba,0,CONST,tokensForETH,public,False,0x75b04b15,0,"0x92a, 0x92e"
    0x8bf: v8bf(0xe1) = CONST ,0x8b0,v8bf,0,CONST,tokensForETH,public,False,0xe1,0,"0x92a, 0x92e"
"    0x8c1: v8c1(0xeb60962a00000000000000000000000000000000000000000000000000000000) = SHL v8bf(0xe1), v8ba(0x75b04b15)",0x8b0,v8c1,"0,v8bf,v8ba",SHL,tokensForETH,public,False,0xeb60962a00000000000000000000000000000000000000000000000000000000,0,"0x92a, 0x92e"
"    0x8c3: MSTORE v8b9, v8c1(0xeb60962a00000000000000000000000000000000000000000000000000000000)",0x8b0,tokensForETH&m0x40,"0,v8b9,v8c1",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x92a, 0x92e"
    0x8c4: v8c4(0x1) = CONST ,0x8b0,v8c4,0,CONST,tokensForETH,public,False,0x1,0,"0x92a, 0x92e"
    0x8c6: v8c6(0x1) = CONST ,0x8b0,v8c6,0,CONST,tokensForETH,public,False,0x1,0,"0x92a, 0x92e"
    0x8c8: v8c8(0xa0) = CONST ,0x8b0,v8c8,0,CONST,tokensForETH,public,False,0xa0,0,"0x92a, 0x92e"
"    0x8ca: v8ca(0x10000000000000000000000000000000000000000) = SHL v8c8(0xa0), v8c6(0x1)",0x8b0,v8ca,"0,v8c8,v8c6",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0x92a, 0x92e"
"    0x8cb: v8cb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8ca(0x10000000000000000000000000000000000000000), v8c4(0x1)",0x8b0,v8cb,"0,v8ca,v8c4",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x92a, 0x92e"
"    0x8ce: v8ce = AND v8cb(0xffffffffffffffffffffffffffffffffffffffff), v257",0x8b0,v8ce,"0,v8cb,v257",AND,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x8cf: v8cf(0x4) = CONST ,0x8b0,v8cf,0,CONST,tokensForETH,public,False,0x4,0,"0x92a, 0x92e"
"    0x8d2: v8d2 = ADD v8b9, v8cf(0x4)",0x8b0,v8d2,"0,v8b9,v8cf",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x92a, 0x92e"
"    0x8d3: MSTORE v8d2, v8ce",0x8b0,tokensForETH&m0x40+0x4,"0,v8d2,v8ce",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x92a, 0x92e"
    0x8d4: v8d4 = CALLER ,0x8b0,v8d4,0,CALLER,tokensForETH,public,True,0,0,"0x92a, 0x92e"
    0x8d5: v8d5(0x44) = CONST ,0x8b0,v8d5,0,CONST,tokensForETH,public,False,0x44,0,"0x92a, 0x92e"
"    0x8d8: v8d8 = ADD v8b9, v8d5(0x44)",0x8b0,v8d8,"0,v8b9,v8d5",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x92a, 0x92e"
"    0x8d9: MSTORE v8d8, v8d4",0x8b0,tokensForETH&m0x40+0x44,"0,v8d8,v8d4",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x92a, 0x92e"
    0x8da: v8da(0x60) = CONST ,0x8b0,v8da,0,CONST,tokensForETH,public,False,0x60,0,"0x92a, 0x92e"
    0x8dc: v8dc(0x24) = CONST ,0x8b0,v8dc,0,CONST,tokensForETH,public,False,0x24,0,"0x92a, 0x92e"
"    0x8df: v8df = ADD v8b9, v8dc(0x24)",0x8b0,v8df,"0,v8b9,v8dc",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x92a, 0x92e"
"    0x8e0: MSTORE v8df, v8da(0x60)",0x8b0,tokensForETH&m0x40+0x24,"0,v8df,v8da",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x92a, 0x92e"
    0x8e1: v8e1(0xe) = CONST ,0x8b0,v8e1,0,CONST,tokensForETH,public,False,0xe,0,"0x92a, 0x92e"
    0x8e3: v8e3(0x64) = CONST ,0x8b0,v8e3,0,CONST,tokensForETH,public,False,0x64,0,"0x92a, 0x92e"
"    0x8e6: v8e6 = ADD v8b9, v8e3(0x64)",0x8b0,v8e6,"0,v8b9,v8e3",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x64,"0x92a, 0x92e"
"    0x8e7: MSTORE v8e6, v8e1(0xe)",0x8b0,tokensForETH&m0x40+0x64,"0,v8e6,v8e1",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x64,"0x92a, 0x92e"
    0x8e8: v8e8(0x115512081dda5d1a191c985dd85b) = CONST ,0x8b0,v8e8,0,CONST,tokensForETH,public,False,0x115512081dda5d1a191c985dd85b,0,"0x92a, 0x92e"
    0x8f7: v8f7(0x92) = CONST ,0x8b0,v8f7,0,CONST,tokensForETH,public,False,0x92,0,"0x92a, 0x92e"
"    0x8f9: v8f9(0x455448207769746864726177616c000000000000000000000000000000000000) = SHL v8f7(0x92), v8e8(0x115512081dda5d1a191c985dd85b)",0x8b0,v8f9,"0,v8f7,v8e8",SHL,tokensForETH,public,False,0x455448207769746864726177616c000000000000000000000000000000000000,0,"0x92a, 0x92e"
    0x8fa: v8fa(0x84) = CONST ,0x8b0,v8fa,0,CONST,tokensForETH,public,False,0x84,0,"0x92a, 0x92e"
"    0x8fd: v8fd = ADD v8b9, v8fa(0x84)",0x8b0,v8fd,"0,v8b9,v8fa",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x84,"0x92a, 0x92e"
"    0x8fe: MSTORE v8fd, v8f9(0x455448207769746864726177616c000000000000000000000000000000000000)",0x8b0,tokensForETH&m0x40+0x84,"0,v8fd,v8f9",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x84,"0x92a, 0x92e"
    0x900: v900 = MLOAD v8b6(0x40),0x8b0,v900,"0,v8b6",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x92a, 0x92e"
"    0x904: v904 = AND v8b5, v8cb(0xffffffffffffffffffffffffffffffffffffffff)",0x8b0,v904,"0,v8b5,v8cb",AND,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x907: v907(0xeb60962a) = CONST ,0x8b0,v907,0,CONST,tokensForETH,public,False,0xeb60962a,0,"0x92a, 0x92e"
    0x90e: v90e(0xa4) = CONST ,0x8b0,v90e,0,CONST,tokensForETH,public,False,0xa4,0,"0x92a, 0x92e"
"    0x912: v912 = ADD v8b9, v90e(0xa4)",0x8b0,v912,"0,v8b9,v90e",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0xa4,"0x92a, 0x92e"
    0x914: v914(0x0) = CONST ,0x8b0,v914,0,CONST,tokensForETH,public,False,0x0,0,"0x92a, 0x92e"
"    0x91b: v91b(0x0) = SUB v8b9, v900",0x8b0,v91b,"0,v8b9,v900",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,"0x92a, 0x92e"
"    0x91c: v91c(0xa4) = ADD v91b(0x0), v90e(0xa4)",0x8b0,v91c,"0,v91b,v90e",ADD,tokensForETH,public,False,0xa4,tokensForETH&m0x40-0x0+0xa4,"0x92a, 0x92e"
    0x921: v921 = EXTCODESIZE v904,0x8b0,v921,"0,v904",EXTCODESIZE,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x922: v922 = ISZERO v921,0x8b0,v922,"0,v921",ISZERO,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x924: v924 = ISZERO v922,0x8b0,v924,"0,v922",ISZERO,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x925: v925(0x92e) = CONST ,0x8b0,v925,0,CONST,tokensForETH,public,False,0x92e,0,"0x92a, 0x92e"
"    0x929: JUMPI v925(0x92e), v924",0x8b0,0,"0,v925,v924",JUMPI,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    Begin block 0x92a,0x92a,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
"    prev=[0x8b0], succ=[]",0x92a,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    =================================,0x92a,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    0x92a: v92a(0x0) = CONST ,0x92a,v92a,0,CONST,tokensForETH,public,False,0x0,0,"0x92a, 0x92e"
"    0x92d: REVERT v92a(0x0), v92a(0x0)",0x92a,0,"0,v92a,v92a",REVERT,tokensForETH,public,False,0,0,"0x92a, 0x92e"
    Begin block 0x92e,0x92e,0,0,0,tokensForETH,public,False,0,0,"0x92a, 0x92e"
"    prev=[0x8b0], succ=[0x93a, 0x943]",0x92e,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
    =================================,0x92e,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x930: v930 = GAS ,0x92e,v930,0,GAS,tokensForETH,public,False,0,0,"0x93a, 0x943"
"    0x931: v931 = CALL v930, v904, v914(0x0), v900, v91c(0xa4), v900, v914(0x0)",0x92e,v931,"0,v930,v904,v914,v900,v91c,v900,v914",CALL,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x932: v932 = ISZERO v931,0x92e,v932,"0,v931",ISZERO,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x934: v934 = ISZERO v932,0x92e,v934,"0,v932",ISZERO,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x935: v935(0x943) = CONST ,0x92e,v935,0,CONST,tokensForETH,public,False,0x943,0,"0x93a, 0x943"
"    0x939: JUMPI v935(0x943), v934",0x92e,0,"0,v935,v934",JUMPI,tokensForETH,public,False,0,0,"0x93a, 0x943"
    Begin block 0x93a,0x93a,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
"    prev=[0x92e], succ=[]",0x93a,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
    =================================,0x93a,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x93a: v93a = RETURNDATASIZE ,0x93a,v93a,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x93b: v93b(0x0) = CONST ,0x93a,v93b,0,CONST,tokensForETH,public,False,0x0,0,"0x93a, 0x943"
"    0x93e: RETURNDATACOPY v93b(0x0), v93b(0x0), v93a",0x93a,0,"0,v93b,v93b,v93a",RETURNDATACOPY,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x93f: v93f = RETURNDATASIZE ,0x93a,v93f,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x93a, 0x943"
    0x940: v940(0x0) = CONST ,0x93a,v940,0,CONST,tokensForETH,public,False,0x0,0,"0x93a, 0x943"
"    0x942: REVERT v940(0x0), v93f",0x93a,0,"0,v940,v93f",REVERT,tokensForETH,public,False,0,0,"0x93a, 0x943"
    Begin block 0x943,0x943,0,0,0,tokensForETH,public,False,0,0,"0x93a, 0x943"
"    prev=[0x92e], succ=[0x96c]",0x943,0,0,0,tokensForETH,public,False,0,0,0x96c
    =================================,0x943,0,0,0,tokensForETH,public,False,0,0,0x96c
    0x947: v947(0x1) = CONST ,0x943,v947,0,CONST,tokensForETH,public,False,0x1,0,0x96c
    0x949: v949(0x1) = CONST ,0x943,v949,0,CONST,tokensForETH,public,False,0x1,0,0x96c
    0x94b: v94b(0xa0) = CONST ,0x943,v94b,0,CONST,tokensForETH,public,False,0xa0,0,0x96c
"    0x94d: v94d(0x10000000000000000000000000000000000000000) = SHL v94b(0xa0), v949(0x1)",0x943,v94d,"0,v94b,v949",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,0x96c
"    0x94e: v94e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v94d(0x10000000000000000000000000000000000000000), v947(0x1)",0x943,v94e,"0,v94d,v947",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x96c
"    0x950: v950 = AND v257, v94e(0xffffffffffffffffffffffffffffffffffffffff)",0x943,v950,"0,v257,v94e",AND,tokensForETH,public,False,0,0,0x96c
    0x951: v951(0x0) = CONST ,0x943,v951,0,CONST,tokensForETH,public,False,0x0,0,0x96c
"    0x955: MSTORE v951(0x0), v950",0x943,0,"0,v951,v950",MSTORE,tokensForETH,public,False,0,0,0x96c
    0x956: v956(0x3) = CONST ,0x943,v956,0,CONST,tokensForETH,public,False,0x3,0,0x96c
    0x958: v958(0x20) = CONST ,0x943,v958,0,CONST,tokensForETH,public,False,0x20,0,0x96c
"    0x95a: MSTORE v958(0x20), v956(0x3)",0x943,0,"0,v958,v956",MSTORE,tokensForETH,public,False,0,0,0x96c
    0x95b: v95b(0x40) = CONST ,0x943,v95b,0,CONST,tokensForETH,public,False,0x40,0,0x96c
"    0x95e: v95e = SHA3 v951(0x0), v95b(0x40)",0x943,v95e,"0,v951,v95b",SHA3,tokensForETH,public,False,0,0,0x96c
    0x95f: v95f = SLOAD v95e,0x943,v95f,"0,v95e",SLOAD,tokensForETH,public,False,0,0,0x96c
    0x960: v960(0x96c) = CONST ,0x943,v960,0,CONST,tokensForETH,public,False,0x96c,0,0x96c
    0x967: v967(0x1ac7) = CONST ,0x943,v967,0,CONST,tokensForETH,public,False,0x1ac7,0,0x96c
"    0x96b: v96b_0 = CALLPRIVATE v967(0x1ac7), v2241dc0, v95f, v960(0x96c)",0x943,v96b_0,"0,v967,v2241dc0,v95f,v960",CALLPRIVATE,tokensForETH,public,False,0,0,0x96c
    Begin block 0x96c,0x96c,0,0,0,tokensForETH,public,False,0,0,0x96c
"    prev=[0x943], succ=[0x9e0, 0x9e4]",0x96c,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    =================================,0x96c,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x96d: v96d(0x1) = CONST ,0x96c,v96d,0,CONST,tokensForETH,public,False,0x1,0,"0x9e0, 0x9e4"
    0x96f: v96f(0x1) = CONST ,0x96c,v96f,0,CONST,tokensForETH,public,False,0x1,0,"0x9e0, 0x9e4"
    0x971: v971(0xa0) = CONST ,0x96c,v971,0,CONST,tokensForETH,public,False,0xa0,0,"0x9e0, 0x9e4"
"    0x973: v973(0x10000000000000000000000000000000000000000) = SHL v971(0xa0), v96f(0x1)",0x96c,v973,"0,v971,v96f",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0x9e0, 0x9e4"
"    0x974: v974(0xffffffffffffffffffffffffffffffffffffffff) = SUB v973(0x10000000000000000000000000000000000000000), v96d(0x1)",0x96c,v974,"0,v973,v96d",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x9e0, 0x9e4"
"    0x977: v977 = AND v257, v974(0xffffffffffffffffffffffffffffffffffffffff)",0x96c,v977,"0,v257,v974",AND,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x978: v978(0x0) = CONST ,0x96c,v978,0,CONST,tokensForETH,public,False,0x0,0,"0x9e0, 0x9e4"
"    0x97c: MSTORE v978(0x0), v977",0x96c,0,"0,v978,v977",MSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x97d: v97d(0x3) = CONST ,0x96c,v97d,0,CONST,tokensForETH,public,False,0x3,0,"0x9e0, 0x9e4"
    0x97f: v97f(0x20) = CONST ,0x96c,v97f,0,CONST,tokensForETH,public,False,0x20,0,"0x9e0, 0x9e4"
"    0x983: MSTORE v97f(0x20), v97d(0x3)",0x96c,0,"0,v97f,v97d",MSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x984: v984(0x40) = CONST ,0x96c,v984,0,CONST,tokensForETH,public,False,0x40,0,"0x9e0, 0x9e4"
"    0x988: v988 = SHA3 v978(0x0), v984(0x40)",0x96c,v988,"0,v978,v984",SHA3,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x98b: SSTORE v988, v96b_0",0x96c,0,"0,v988,v96b_0",SSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x98c: v98c(0x7) = CONST ,0x96c,v98c,0,CONST,tokensForETH,public,False,0x7,0,"0x9e0, 0x9e4"
"    0x98e: v98e = ADD v98c(0x7), v988",0x96c,v98e,"0,v98c,v988",ADD,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x990: v990 = SLOAD v98e,0x96c,v990,"0,v98e",SLOAD,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x991: v991(0x1) = CONST ,0x96c,v991,0,CONST,tokensForETH,public,False,0x1,0,"0x9e0, 0x9e4"
"    0x994: v994 = ADD v990, v991(0x1)",0x96c,v994,"0,v990,v991",ADD,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x996: SSTORE v98e, v994",0x96c,0,"0,v98e,v994",SSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x999: MSTORE v978(0x0), v98e",0x96c,0,"0,v978,v98e",MSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x99c: v99c = SHA3 v978(0x0), v97f(0x20)",0x96c,v99c,"0,v978,v97f",SHA3,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x99d: v99d = ADD v99c, v990",0x96c,v99d,"0,v99c,v990",ADD,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    0x9a1: SSTORE v99d, v96b_0",0x96c,0,"0,v99d,v96b_0",SSTORE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9a3: v9a3 = MLOAD v984(0x40),0x96c,v9a3,"0,v984",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x9e0, 0x9e4"
    0x9a4: v9a4(0x95ea7b3) = CONST ,0x96c,v9a4,0,CONST,tokensForETH,public,False,0x95ea7b3,0,"0x9e0, 0x9e4"
    0x9a9: v9a9(0xe0) = CONST ,0x96c,v9a9,0,CONST,tokensForETH,public,False,0xe0,0,"0x9e0, 0x9e4"
"    0x9ab: v9ab(0x95ea7b300000000000000000000000000000000000000000000000000000000) = SHL v9a9(0xe0), v9a4(0x95ea7b3)",0x96c,v9ab,"0,v9a9,v9a4",SHL,tokensForETH,public,False,0x95ea7b300000000000000000000000000000000000000000000000000000000,0,"0x9e0, 0x9e4"
"    0x9ad: MSTORE v9a3, v9ab(0x95ea7b300000000000000000000000000000000000000000000000000000000)",0x96c,tokensForETH&m0x40,"0,v9a3,v9ab",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x9e0, 0x9e4"
"    0x9b0: v9b0 = AND v260, v974(0xffffffffffffffffffffffffffffffffffffffff)",0x96c,v9b0,"0,v260,v974",AND,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9b1: v9b1(0x4) = CONST ,0x96c,v9b1,0,CONST,tokensForETH,public,False,0x4,0,"0x9e0, 0x9e4"
"    0x9b4: v9b4 = ADD v9a3, v9b1(0x4)",0x96c,v9b4,"0,v9a3,v9b1",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x9e0, 0x9e4"
"    0x9b7: MSTORE v9b4, v9b0",0x96c,tokensForETH&m0x40+0x4,"0,v9b4,v9b0",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x9e0, 0x9e4"
    0x9b8: v9b8(0x24) = CONST ,0x96c,v9b8,0,CONST,tokensForETH,public,False,0x24,0,"0x9e0, 0x9e4"
"    0x9bb: v9bb = ADD v9a3, v9b8(0x24)",0x96c,v9bb,"0,v9a3,v9b8",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x9e0, 0x9e4"
"    0x9be: MSTORE v9bb, v265",0x96c,tokensForETH&m0x40+0x24,"0,v9bb,v265",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0x9e0, 0x9e4"
    0x9c0: v9c0 = MLOAD v984(0x40),0x96c,v9c0,"0,v984",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x9e0, 0x9e4"
    0x9c1: v9c1(0x95ea7b3) = CONST ,0x96c,v9c1,0,CONST,tokensForETH,public,False,0x95ea7b3,0,"0x9e0, 0x9e4"
    0x9c7: v9c7(0x44) = CONST ,0x96c,v9c7,0,CONST,tokensForETH,public,False,0x44,0,"0x9e0, 0x9e4"
"    0x9cb: v9cb = ADD v9a3, v9c7(0x44)",0x96c,v9cb,"0,v9a3,v9c7",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x44,"0x9e0, 0x9e4"
"    0x9d0: v9d0(0x0) = SUB v9a3, v9c0",0x96c,v9d0,"0,v9a3,v9c0",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,"0x9e0, 0x9e4"
"    0x9d1: v9d1(0x44) = ADD v9d0(0x0), v9c7(0x44)",0x96c,v9d1,"0,v9d0,v9c7",ADD,tokensForETH,public,False,0x44,tokensForETH&m0x40-0x0+0x44,"0x9e0, 0x9e4"
    0x9d7: v9d7 = EXTCODESIZE v9b0,0x96c,v9d7,"0,v9b0",EXTCODESIZE,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9d8: v9d8 = ISZERO v9d7,0x96c,v9d8,"0,v9d7",ISZERO,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9da: v9da = ISZERO v9d8,0x96c,v9da,"0,v9d8",ISZERO,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9db: v9db(0x9e4) = CONST ,0x96c,v9db,0,CONST,tokensForETH,public,False,0x9e4,0,"0x9e0, 0x9e4"
"    0x9df: JUMPI v9db(0x9e4), v9da",0x96c,0,"0,v9db,v9da",JUMPI,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    Begin block 0x9e0,0x9e0,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    prev=[0x96c], succ=[]",0x9e0,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    =================================,0x9e0,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    0x9e0: v9e0(0x0) = CONST ,0x9e0,v9e0,0,CONST,tokensForETH,public,False,0x0,0,"0x9e0, 0x9e4"
"    0x9e3: REVERT v9e0(0x0), v9e0(0x0)",0x9e0,0,"0,v9e0,v9e0",REVERT,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
    Begin block 0x9e4,0x9e4,0,0,0,tokensForETH,public,False,0,0,"0x9e0, 0x9e4"
"    prev=[0x96c], succ=[0x9f0, 0x9f9]",0x9e4,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    =================================,0x9e4,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9e6: v9e6 = GAS ,0x9e4,v9e6,0,GAS,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
"    0x9e7: v9e7 = CALL v9e6, v9b0, v978(0x0), v9c0, v9d1(0x44), v9c0, v97f(0x20)",0x9e4,v9e7,"0,v9e6,v9b0,v978,v9c0,v9d1,v9c0,v97f",CALL,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9e8: v9e8 = ISZERO v9e7,0x9e4,v9e8,"0,v9e7",ISZERO,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9ea: v9ea = ISZERO v9e8,0x9e4,v9ea,"0,v9e8",ISZERO,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9eb: v9eb(0x9f9) = CONST ,0x9e4,v9eb,0,CONST,tokensForETH,public,False,0x9f9,0,"0x9f0, 0x9f9"
"    0x9ef: JUMPI v9eb(0x9f9), v9ea",0x9e4,0,"0,v9eb,v9ea",JUMPI,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    Begin block 0x9f0,0x9f0,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
"    prev=[0x9e4], succ=[]",0x9f0,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    =================================,0x9f0,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9f0: v9f0 = RETURNDATASIZE ,0x9f0,v9f0,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9f1: v9f1(0x0) = CONST ,0x9f0,v9f1,0,CONST,tokensForETH,public,False,0x0,0,"0x9f0, 0x9f9"
"    0x9f4: RETURNDATACOPY v9f1(0x0), v9f1(0x0), v9f0",0x9f0,0,"0,v9f1,v9f1,v9f0",RETURNDATACOPY,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9f5: v9f5 = RETURNDATASIZE ,0x9f0,v9f5,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    0x9f6: v9f6(0x0) = CONST ,0x9f0,v9f6,0,CONST,tokensForETH,public,False,0x0,0,"0x9f0, 0x9f9"
"    0x9f8: REVERT v9f6(0x0), v9f5",0x9f0,0,"0,v9f6,v9f5",REVERT,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
    Begin block 0x9f9,0x9f9,0,0,0,tokensForETH,public,False,0,0,"0x9f0, 0x9f9"
"    prev=[0x9e4], succ=[0xa0c, 0xa10]",0x9f9,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    =================================,0x9f9,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    0x9fe: v9fe(0x40) = CONST ,0x9f9,v9fe,0,CONST,tokensForETH,public,False,0x40,0,"0xa0c, 0xa10"
    0xa00: va00 = MLOAD v9fe(0x40),0x9f9,va00,"0,v9fe",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0xa0c, 0xa10"
    0xa01: va01 = RETURNDATASIZE ,0x9f9,va01,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    0xa02: va02(0x20) = CONST ,0x9f9,va02,0,CONST,tokensForETH,public,False,0x20,0,"0xa0c, 0xa10"
"    0xa05: va05 = LT va01, va02(0x20)",0x9f9,va05,"0,va01,va02",LT,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    0xa06: va06 = ISZERO va05,0x9f9,va06,"0,va05",ISZERO,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    0xa07: va07(0xa10) = CONST ,0x9f9,va07,0,CONST,tokensForETH,public,False,0xa10,0,"0xa0c, 0xa10"
"    0xa0b: JUMPI va07(0xa10), va06",0x9f9,0,"0,va07,va06",JUMPI,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    Begin block 0xa0c,0xa0c,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
"    prev=[0x9f9], succ=[]",0xa0c,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    =================================,0xa0c,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    0xa0c: va0c(0x0) = CONST ,0xa0c,va0c,0,CONST,tokensForETH,public,False,0x0,0,"0xa0c, 0xa10"
"    0xa0f: REVERT va0c(0x0), va0c(0x0)",0xa0c,0,"0,va0c,va0c",REVERT,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
    Begin block 0xa10,0xa10,0,0,0,tokensForETH,public,False,0,0,"0xa0c, 0xa10"
"    prev=[0x9f9], succ=[0xa57, 0xa5b]",0xa10,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    =================================,0xa10,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa13: va13(0x40) = CONST ,0xa10,va13,0,CONST,tokensForETH,public,False,0x40,0,"0xa57, 0xa5b"
    0xa16: va16 = MLOAD va13(0x40),0xa10,va16,"0,va13",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0xa57, 0xa5b"
    0xa17: va17(0x6d1b229d) = CONST ,0xa10,va17,0,CONST,tokensForETH,public,False,0x6d1b229d,0,"0xa57, 0xa5b"
    0xa1c: va1c(0xe0) = CONST ,0xa10,va1c,0,CONST,tokensForETH,public,False,0xe0,0,"0xa57, 0xa5b"
"    0xa1e: va1e(0x6d1b229d00000000000000000000000000000000000000000000000000000000) = SHL va1c(0xe0), va17(0x6d1b229d)",0xa10,va1e,"0,va1c,va17",SHL,tokensForETH,public,False,0x6d1b229d00000000000000000000000000000000000000000000000000000000,0,"0xa57, 0xa5b"
"    0xa20: MSTORE va16, va1e(0x6d1b229d00000000000000000000000000000000000000000000000000000000)",0xa10,tokensForETH&m0x40,"0,va16,va1e",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0xa57, 0xa5b"
    0xa21: va21(0x4) = CONST ,0xa10,va21,0,CONST,tokensForETH,public,False,0x4,0,"0xa57, 0xa5b"
"    0xa24: va24 = ADD va16, va21(0x4)",0xa10,va24,"0,va16,va21",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0xa57, 0xa5b"
"    0xa27: MSTORE va24, v265",0xa10,tokensForETH&m0x40+0x4,"0,va24,v265",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0xa57, 0xa5b"
    0xa29: va29 = MLOAD va13(0x40),0xa10,va29,"0,va13",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0xa57, 0xa5b"
    0xa2a: va2a(0x1) = CONST ,0xa10,va2a,0,CONST,tokensForETH,public,False,0x1,0,"0xa57, 0xa5b"
    0xa2c: va2c(0x1) = CONST ,0xa10,va2c,0,CONST,tokensForETH,public,False,0x1,0,"0xa57, 0xa5b"
    0xa2e: va2e(0xa0) = CONST ,0xa10,va2e,0,CONST,tokensForETH,public,False,0xa0,0,"0xa57, 0xa5b"
"    0xa30: va30(0x10000000000000000000000000000000000000000) = SHL va2e(0xa0), va2c(0x1)",0xa10,va30,"0,va2e,va2c",SHL,tokensForETH,public,False,0x10000000000000000000000000000000000000000,0,"0xa57, 0xa5b"
"    0xa31: va31(0xffffffffffffffffffffffffffffffffffffffff) = SUB va30(0x10000000000000000000000000000000000000000), va2a(0x1)",0xa10,va31,"0,va30,va2a",SUB,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xa57, 0xa5b"
"    0xa33: va33 = AND v260, va31(0xffffffffffffffffffffffffffffffffffffffff)",0xa10,va33,"0,v260,va31",AND,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa35: va35(0x6d1b229d) = CONST ,0xa10,va35,0,CONST,tokensForETH,public,False,0x6d1b229d,0,"0xa57, 0xa5b"
    0xa3b: va3b(0x24) = CONST ,0xa10,va3b,0,CONST,tokensForETH,public,False,0x24,0,"0xa57, 0xa5b"
"    0xa3f: va3f = ADD va16, va3b(0x24)",0xa10,va3f,"0,va16,va3b",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x24,"0xa57, 0xa5b"
    0xa41: va41(0x0) = CONST ,0xa10,va41,0,CONST,tokensForETH,public,False,0x0,0,"0xa57, 0xa5b"
"    0xa48: va48(0x0) = SUB va16, va29",0xa10,va48,"0,va16,va29",SUB,tokensForETH,public,False,0x0,tokensForETH&m0x40-0x0,"0xa57, 0xa5b"
"    0xa49: va49(0x24) = ADD va48(0x0), va3b(0x24)",0xa10,va49,"0,va48,va3b",ADD,tokensForETH,public,False,0x24,tokensForETH&m0x40-0x0+0x24,"0xa57, 0xa5b"
    0xa4e: va4e = EXTCODESIZE va33,0xa10,va4e,"0,va33",EXTCODESIZE,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa4f: va4f = ISZERO va4e,0xa10,va4f,"0,va4e",ISZERO,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa51: va51 = ISZERO va4f,0xa10,va51,"0,va4f",ISZERO,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa52: va52(0xa5b) = CONST ,0xa10,va52,0,CONST,tokensForETH,public,False,0xa5b,0,"0xa57, 0xa5b"
"    0xa56: JUMPI va52(0xa5b), va51",0xa10,0,"0,va52,va51",JUMPI,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    Begin block 0xa57,0xa57,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
"    prev=[0xa10], succ=[]",0xa57,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    =================================,0xa57,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    0xa57: va57(0x0) = CONST ,0xa57,va57,0,CONST,tokensForETH,public,False,0x0,0,"0xa57, 0xa5b"
"    0xa5a: REVERT va57(0x0), va57(0x0)",0xa57,0,"0,va57,va57",REVERT,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
    Begin block 0xa5b,0xa5b,0,0,0,tokensForETH,public,False,0,0,"0xa57, 0xa5b"
"    prev=[0xa10], succ=[0xa67, 0xa70]",0xa5b,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    =================================,0xa5b,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa5d: va5d = GAS ,0xa5b,va5d,0,GAS,tokensForETH,public,False,0,0,"0xa67, 0xa70"
"    0xa5e: va5e = CALL va5d, va33, va41(0x0), va29, va49(0x24), va29, va41(0x0)",0xa5b,va5e,"0,va5d,va33,va41,va29,va49,va29,va41",CALL,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa5f: va5f = ISZERO va5e,0xa5b,va5f,"0,va5e",ISZERO,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa61: va61 = ISZERO va5f,0xa5b,va61,"0,va5f",ISZERO,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa62: va62(0xa70) = CONST ,0xa5b,va62,0,CONST,tokensForETH,public,False,0xa70,0,"0xa67, 0xa70"
"    0xa66: JUMPI va62(0xa70), va61",0xa5b,0,"0,va62,va61",JUMPI,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    Begin block 0xa67,0xa67,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
"    prev=[0xa5b], succ=[]",0xa67,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    =================================,0xa67,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa67: va67 = RETURNDATASIZE ,0xa67,va67,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa68: va68(0x0) = CONST ,0xa67,va68,0,CONST,tokensForETH,public,False,0x0,0,"0xa67, 0xa70"
"    0xa6b: RETURNDATACOPY va68(0x0), va68(0x0), va67",0xa67,0,"0,va68,va68,va67",RETURNDATACOPY,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa6c: va6c = RETURNDATASIZE ,0xa67,va6c,0,RETURNDATASIZE,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    0xa6d: va6d(0x0) = CONST ,0xa67,va6d,0,CONST,tokensForETH,public,False,0x0,0,"0xa67, 0xa70"
"    0xa6f: REVERT va6d(0x0), va6c",0xa67,0,"0,va6d,va6c",REVERT,tokensForETH,public,False,0,0,"0xa67, 0xa70"
    Begin block 0xa70,0xa70,0,0,0,tokensForETH,public,False,0,0,"0xa67, 0xa70"
"    prev=[0xa5b], succ=[0x3735]",0xa70,0,0,0,tokensForETH,public,False,0,0,0x3735
    =================================,0xa70,0,0,0,tokensForETH,public,False,0,0,0x3735
    0xa79: JUMP v233(0x3735),0xa70,0,"0,v233",JUMP,tokensForETH,public,False,0,0,0x3735
    Begin block 0x3735,0x3735,0,0,0,tokensForETH,public,False,0,0,0x3735
"    prev=[0xa70], succ=[]",0x3735,0,0,0,tokensForETH,public,False,0,0,0x3735
    =================================,0x3735,0,0,0,tokensForETH,public,False,0,0,0x3735
    0x3736: STOP ,0x3735,0,0,STOP,tokensForETH,public,False,0,0,0x3735
    Begin block 0x1cc9B0x19bcB0x793,0x1cc9B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x3735
"    prev=[0x1cbdB0x19bcB0x793], succ=[0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793]",0x1cc9B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    =================================,0x1cc9B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1ccbS0x19bcS0x793: v1ccbV19bcV793(0x20) = CONST ,0x1cc9B0x19bcB0x793,v1ccbV19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    0x1ccdS0x19bcS0x793: v1ccdV19bcV793 = ADD v1ccbV19bcV793(0x20), v1f89_1V1e26V1c66V19bcV793",0x1cc9B0x19bcB0x793,v1ccdV19bcV793,"0,v1ccbV19bcV793,v1f89_1V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1ccfS0x19bcS0x793: v1ccfV19bcV793 = MLOAD v1f89_1V1e26V1c66V19bcV793,0x1cc9B0x19bcB0x793,v1ccfV19bcV793,"0,v1f89_1V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1cd0S0x19bcS0x793: v1cd0V19bcV793(0x20) = CONST ,0x1cc9B0x19bcB0x793,v1cd0V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    0x1cd3S0x19bcS0x793: v1cd3V19bcV793 = LT v1ccfV19bcV793, v1cd0V19bcV793(0x20)",0x1cc9B0x19bcB0x793,v1cd3V19bcV793,"0,v1ccfV19bcV793,v1cd0V19bcV793",LT,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1cd4S0x19bcS0x793: v1cd4V19bcV793 = ISZERO v1cd3V19bcV793,0x1cc9B0x19bcB0x793,v1cd4V19bcV793,"0,v1cd3V19bcV793",ISZERO,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1cd5S0x19bcS0x793: v1cd5V19bcV793(0x1cde) = CONST ,0x1cc9B0x19bcB0x793,v1cd5V19bcV793,0,CONST,tokensForETH,public,False,0x1cde,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    0x1cd9S0x19bcS0x793: JUMPI v1cd5V19bcV793(0x1cde), v1cd4V19bcV793",0x1cc9B0x19bcB0x793,0,"0,v1cd5V19bcV793,v1cd4V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    Begin block 0x1cdaB0x19bcB0x793,0x1cdaB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    prev=[0x1cc9B0x19bcB0x793], succ=[]",0x1cdaB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    =================================,0x1cdaB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    0x1cdaS0x19bcS0x793: v1cdaV19bcV793(0x0) = CONST ,0x1cdaB0x19bcB0x793,v1cdaV19bcV793,0,CONST,tokensForETH,public,False,0x0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    0x1cddS0x19bcS0x793: REVERT v1cdaV19bcV793(0x0), v1cdaV19bcV793(0x0)",0x1cdaB0x19bcB0x793,0,"0,v1cdaV19bcV793,v1cdaV19bcV793",REVERT,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
    Begin block 0x1cdeB0x19bcB0x793,0x1cdeB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1cdaB0x19bcB0x793, 0x1cdeB0x19bcB0x793"
"    prev=[0x1cc9B0x19bcB0x793], succ=[0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793]",0x1cdeB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    =================================,0x1cdeB0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1ce0S0x19bcS0x793: v1ce0V19bcV793 = MLOAD v1ccdV19bcV793,0x1cdeB0x19bcB0x793,v1ce0V19bcV793,"0,v1ccdV19bcV793",MLOAD,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1ce1S0x19bcS0x793: v1ce1V19bcV793(0x3c98) = CONST ,0x1cdeB0x19bcB0x793,v1ce1V19bcV793,0,CONST,tokensForETH,public,False,0x3c98,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1ce5S0x19bcS0x793: JUMPI v1ce1V19bcV793(0x3c98), v1ce0V19bcV793",0x1cdeB0x19bcB0x793,0,"0,v1ce1V19bcV793,v1ce0V19bcV793",JUMPI,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    Begin block 0x1ce6B0x19bcB0x793,0x1ce6B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    prev=[0x1cdeB0x19bcB0x793], succ=[]",0x1ce6B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    =================================,0x1ce6B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1ce6S0x19bcS0x793: v1ce6V19bcV793(0x40) = CONST ,0x1ce6B0x19bcB0x793,v1ce6V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1ce8S0x19bcS0x793: v1ce8V19bcV793 = MLOAD v1ce6V19bcV793(0x40),0x1ce6B0x19bcB0x793,v1ce8V19bcV793,"0,v1ce6V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1ce9S0x19bcS0x793: v1ce9V19bcV793(0x461bcd) = CONST ,0x1ce6B0x19bcB0x793,v1ce9V19bcV793,0,CONST,tokensForETH,public,False,0x461bcd,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1cedS0x19bcS0x793: v1cedV19bcV793(0xe5) = CONST ,0x1ce6B0x19bcB0x793,v1cedV19bcV793,0,CONST,tokensForETH,public,False,0xe5,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cefS0x19bcS0x793: v1cefV19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1cedV19bcV793(0xe5), v1ce9V19bcV793(0x461bcd)",0x1ce6B0x19bcB0x793,v1cefV19bcV793,"0,v1cedV19bcV793,v1ce9V19bcV793",SHL,tokensForETH,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cf1S0x19bcS0x793: MSTORE v1ce8V19bcV793, v1cefV19bcV793(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1ce6B0x19bcB0x793,tokensForETH&m0x40,"0,v1ce8V19bcV793,v1cefV19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1cf2S0x19bcS0x793: v1cf2V19bcV793(0x4) = CONST ,0x1ce6B0x19bcB0x793,v1cf2V19bcV793,0,CONST,tokensForETH,public,False,0x4,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cf4S0x19bcS0x793: v1cf4V19bcV793 = ADD v1cf2V19bcV793(0x4), v1ce8V19bcV793",0x1ce6B0x19bcB0x793,v1cf4V19bcV793,"0,v1cf2V19bcV793,v1ce8V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1cf7S0x19bcS0x793: v1cf7V19bcV793(0x20) = CONST ,0x1ce6B0x19bcB0x793,v1cf7V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cf9S0x19bcS0x793: v1cf9V19bcV793 = ADD v1cf7V19bcV793(0x20), v1cf4V19bcV793",0x1ce6B0x19bcB0x793,v1cf9V19bcV793,"0,v1cf7V19bcV793,v1cf4V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cfcS0x19bcS0x793: v1cfcV19bcV793(0x20) = SUB v1cf9V19bcV793, v1cf4V19bcV793",0x1ce6B0x19bcB0x793,v1cfcV19bcV793,"0,v1cf9V19bcV793,v1cf4V19bcV793",SUB,tokensForETH,public,False,0x20,tokensForETH&m0x40+0x4+0x20-0x20,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1cfeS0x19bcS0x793: MSTORE v1cf4V19bcV793, v1cfcV19bcV793(0x20)",0x1ce6B0x19bcB0x793,tokensForETH&m0x40+0x4,"0,v1cf4V19bcV793,v1cfcV19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1cffS0x19bcS0x793: v1cffV19bcV793(0x2a) = CONST ,0x1ce6B0x19bcB0x793,v1cffV19bcV793,0,CONST,tokensForETH,public,False,0x2a,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d02S0x19bcS0x793: MSTORE v1cf9V19bcV793, v1cffV19bcV793(0x2a)",0x1ce6B0x19bcB0x793,tokensForETH&m0x40+0x4+0x20,"0,v1cf9V19bcV793,v1cffV19bcV793",MSTORE,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d03S0x19bcS0x793: v1d03V19bcV793(0x20) = CONST ,0x1ce6B0x19bcB0x793,v1d03V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d05S0x19bcS0x793: v1d05V19bcV793 = ADD v1d03V19bcV793(0x20), v1cf9V19bcV793",0x1ce6B0x19bcB0x793,v1d05V19bcV793,"0,v1d03V19bcV793,v1cf9V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d07S0x19bcS0x793: v1d07V19bcV793(0x343c) = CONST ,0x1ce6B0x19bcB0x793,v1d07V19bcV793,0,CONST,tokensForETH,public,False,0x343c,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d0bS0x19bcS0x793: v1d0bV19bcV793(0x2a) = CONST ,0x1ce6B0x19bcB0x793,v1d0bV19bcV793,0,CONST,tokensForETH,public,False,0x2a,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d0eS0x19bcS0x793: CODECOPY v1d05V19bcV793, v1d07V19bcV793(0x343c), v1d0bV19bcV793(0x2a)",0x1ce6B0x19bcB0x793,0,"0,v1d05V19bcV793,v1d07V19bcV793,v1d0bV19bcV793",CODECOPY,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d0fS0x19bcS0x793: v1d0fV19bcV793(0x40) = CONST ,0x1ce6B0x19bcB0x793,v1d0fV19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d11S0x19bcS0x793: v1d11V19bcV793 = ADD v1d0fV19bcV793(0x40), v1d05V19bcV793",0x1ce6B0x19bcB0x793,v1d11V19bcV793,"0,v1d0fV19bcV793,v1d05V19bcV793",ADD,tokensForETH,public,False,0,tokensForETH&m0x40+0x4+0x20+0x20+0x40,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d15S0x19bcS0x793: v1d15V19bcV793(0x40) = CONST ,0x1ce6B0x19bcB0x793,v1d15V19bcV793,0,CONST,tokensForETH,public,False,0x40,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    0x1d17S0x19bcS0x793: v1d17V19bcV793 = MLOAD v1d15V19bcV793(0x40),0x1ce6B0x19bcB0x793,v1d17V19bcV793,"0,v1d15V19bcV793",MLOAD,tokensForETH,public,False,0,tokensForETH&m0x40,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d1aS0x19bcS0x793: v1d1aV19bcV793(0x84) = SUB v1d11V19bcV793, v1d17V19bcV793",0x1ce6B0x19bcB0x793,v1d1aV19bcV793,"0,v1d11V19bcV793,v1d17V19bcV793",SUB,tokensForETH,public,False,0x84,tokensForETH&m0x40+0x4+0x20+0x20+0x40-0x84,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    0x1d1cS0x19bcS0x793: REVERT v1d17V19bcV793, v1d1aV19bcV793(0x84)",0x1ce6B0x19bcB0x793,0,"0,v1d17V19bcV793,v1d1aV19bcV793",REVERT,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
    Begin block 0x3c98B0x19bcB0x793,0x3c98B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,"0x1ce6B0x19bcB0x793, 0x3c98B0x19bcB0x793"
"    prev=[0x1cdeB0x19bcB0x793], succ=[0x1a18B0x793]",0x3c98B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
    =================================,0x3c98B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
    0x3c9cS0x19bcS0x793: JUMP v1a0cV793(0x1a18),0x3c98B0x19bcB0x793,0,"0,v1a0cV793",JUMP,tokensForETH,public,False,0,0,0x1a18B0x793
    Begin block 0x1f84B0x1e26B0x1c66B0x19bcB0x793,0x1f84B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1a18B0x793
"    prev=[0x1f20B0x1e26B0x1c66B0x19bcB0x793], succ=[0x1f89B0x1e26B0x1c66B0x19bcB0x793]",0x1f84B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1f84B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    0x1f85S0x1e26S0x1c66S0x19bcS0x793: v1f85V1e26V1c66V19bcV793(0x60) = CONST ,0x1f84B0x1e26B0x1c66B0x19bcB0x793,v1f85V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x60,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x1f09B0x1e26B0x1c66B0x19bcB0x793,0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1f89B0x1e26B0x1c66B0x19bcB0x793
"    prev=[0x1effB0x1e26B0x1c66B0x19bcB0x793], succ=[0x1effB0x1e26B0x1c66B0x19bcB0x793]",0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    =================================,0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f09_0x0S0x1e26S0x1c66S0x19bcS0x793: v1f09_0V1e26V1c66V19bcV793 = PHI v1efaV1e26V1c66V19bcV793, v1f1aV1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f09_0V1e26V1c66V19bcV793,"0,v1efaV1e26V1c66V19bcV793,v1f1aV1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f09_0x1S0x1e26S0x1c66S0x19bcS0x793: v1f09_1V1e26V1c66V19bcV793 = PHI v1ef2V1e26V1c66V19bcV793, v1f18V1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f09_1V1e26V1c66V19bcV793,"0,v1ef2V1e26V1c66V19bcV793,v1f18V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f09_0x2S0x1e26S0x1c66S0x19bcS0x793: v1f09_2V1e26V1c66V19bcV793 = PHI v1ef6V1e26V1c66V19bcV793(0x64), v1f12V1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f09_2V1e26V1c66V19bcV793,"0,v1ef6V1e26V1c66V19bcV793,v1f12V1e26V1c66V19bcV793",PHI,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f0aS0x1e26S0x1c66S0x19bcS0x793: v1f0aV1e26V1c66V19bcV793 = MLOAD v1f09_0V1e26V1c66V19bcV793,0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f0aV1e26V1c66V19bcV793,"0,v1f09_0V1e26V1c66V19bcV793",MLOAD,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f0cS0x1e26S0x1c66S0x19bcS0x793: MSTORE v1f09_1V1e26V1c66V19bcV793, v1f0aV1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f09_1V1e26V1c66V19bcV793,v1f0aV1e26V1c66V19bcV793",MSTORE,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f0dS0x1e26S0x1c66S0x19bcS0x793: v1f0dV1e26V1c66V19bcV793(0x1f) = CONST ,0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f0dV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1f,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f0fS0x1e26S0x1c66S0x19bcS0x793: v1f0fV1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1f0dV1e26V1c66V19bcV793(0x1f),0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f0fV1e26V1c66V19bcV793,"0,v1f0dV1e26V1c66V19bcV793",NOT,tokensForETH,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f12S0x1e26S0x1c66S0x19bcS0x793: v1f12V1e26V1c66V19bcV793 = ADD v1f09_2V1e26V1c66V19bcV793, v1f0fV1e26V1c66V19bcV793(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f12V1e26V1c66V19bcV793,"0,v1f09_2V1e26V1c66V19bcV793,v1f0fV1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f14S0x1e26S0x1c66S0x19bcS0x793: v1f14V1e26V1c66V19bcV793(0x20) = CONST ,0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f14V1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x20,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f18S0x1e26S0x1c66S0x19bcS0x793: v1f18V1e26V1c66V19bcV793 = ADD v1f14V1e26V1c66V19bcV793(0x20), v1f09_1V1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f18V1e26V1c66V19bcV793,"0,v1f14V1e26V1c66V19bcV793,v1f09_1V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    0x1f1aS0x1e26S0x1c66S0x19bcS0x793: v1f1aV1e26V1c66V19bcV793 = ADD v1f14V1e26V1c66V19bcV793(0x20), v1f09_0V1e26V1c66V19bcV793",0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f1aV1e26V1c66V19bcV793,"0,v1f14V1e26V1c66V19bcV793,v1f09_0V1e26V1c66V19bcV793",ADD,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f1bS0x1e26S0x1c66S0x19bcS0x793: v1f1bV1e26V1c66V19bcV793(0x1eff) = CONST ,0x1f09B0x1e26B0x1c66B0x19bcB0x793,v1f1bV1e26V1c66V19bcV793,0,CONST,tokensForETH,public,False,0x1eff,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    0x1f1fS0x1e26S0x1c66S0x19bcS0x793: JUMP v1f1bV1e26V1c66V19bcV793(0x1eff),0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,"0,v1f1bV1e26V1c66V19bcV793",JUMP,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
},0x1f09B0x1e26B0x1c66B0x19bcB0x793,0,0,0,tokensForETH,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
function updateCode(address)() public {,0x26d,0,0,public,updateCode,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
    Begin block 0x26d,0x26d,0,0,0,updateCode,public,False,0,0,0x1effB0x1e26B0x1c66B0x19bcB0x793
"    prev=[], succ=[0x276, 0x27a]",0x26d,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
    =================================,0x26d,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
    0x26e: v26e = CALLVALUE ,0x26d,v26e,0,CALLVALUE,updateCode,public,False,0,0,"0x276, 0x27a"
    0x270: v270 = ISZERO v26e,0x26d,v270,"0,v26e",ISZERO,updateCode,public,False,0,0,"0x276, 0x27a"
    0x271: v271(0x27a) = CONST ,0x26d,v271,0,CONST,updateCode,public,False,0x27a,0,"0x276, 0x27a"
"    0x275: JUMPI v271(0x27a), v270",0x26d,0,"0,v271,v270",JUMPI,updateCode,public,False,0,0,"0x276, 0x27a"
    Begin block 0x276,0x276,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
"    prev=[0x26d], succ=[]",0x276,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
    =================================,0x276,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
    0x276: v276(0x0) = CONST ,0x276,v276,0,CONST,updateCode,public,False,0x0,0,"0x276, 0x27a"
"    0x279: REVERT v276(0x0), v276(0x0)",0x276,0,"0,v276,v276",REVERT,updateCode,public,False,0,0,"0x276, 0x27a"
    Begin block 0x27a,0x27a,0,0,0,updateCode,public,False,0,0,"0x276, 0x27a"
"    prev=[0x26d], succ=[0x28f, 0x293]",0x27a,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
    =================================,0x27a,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
    0x27c: v27c(0x3756) = CONST ,0x27a,v27c,0,CONST,updateCode,public,False,0x3756,0,"0x28f, 0x293"
    0x280: v280(0x4) = CONST ,0x27a,v280,0,CONST,updateCode,public,False,0x4,0,"0x28f, 0x293"
    0x283: v283 = CALLDATASIZE ,0x27a,v283,0,CALLDATASIZE,updateCode,public,False,0,0,"0x28f, 0x293"
"    0x284: v284 = SUB v283, v280(0x4)",0x27a,v284,"0,v283,v280",SUB,updateCode,public,False,0,0,"0x28f, 0x293"
    0x285: v285(0x20) = CONST ,0x27a,v285,0,CONST,updateCode,public,False,0x20,0,"0x28f, 0x293"
"    0x288: v288 = LT v284, v285(0x20)",0x27a,v288,"0,v284,v285",LT,updateCode,public,False,0,0,"0x28f, 0x293"
    0x289: v289 = ISZERO v288,0x27a,v289,"0,v288",ISZERO,updateCode,public,False,0,0,"0x28f, 0x293"
    0x28a: v28a(0x293) = CONST ,0x27a,v28a,0,CONST,updateCode,public,False,0x293,0,"0x28f, 0x293"
"    0x28e: JUMPI v28a(0x293), v289",0x27a,0,"0,v28a,v289",JUMPI,updateCode,public,False,0,0,"0x28f, 0x293"
    Begin block 0x28f,0x28f,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
"    prev=[0x27a], succ=[]",0x28f,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
    =================================,0x28f,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
    0x28f: v28f(0x0) = CONST ,0x28f,v28f,0,CONST,updateCode,public,False,0x0,0,"0x28f, 0x293"
"    0x292: REVERT v28f(0x0), v28f(0x0)",0x28f,0,"0,v28f,v28f",REVERT,updateCode,public,False,0,0,"0x28f, 0x293"
    Begin block 0x293,0x293,0,0,0,updateCode,public,False,0,0,"0x28f, 0x293"
"    prev=[0x27a], succ=[0xa7a]",0x293,0,0,0,updateCode,public,False,0,0,0xa7a
    =================================,0x293,0,0,0,updateCode,public,False,0,0,0xa7a
    0x295: v295 = CALLDATALOAD v280(0x4),0x293,v295,"0,v280",CALLDATALOAD,updateCode,public,False,0,0,0xa7a
    0x296: v296(0x1) = CONST ,0x293,v296,0,CONST,updateCode,public,False,0x1,0,0xa7a
    0x298: v298(0x1) = CONST ,0x293,v298,0,CONST,updateCode,public,False,0x1,0,0xa7a
    0x29a: v29a(0xa0) = CONST ,0x293,v29a,0,CONST,updateCode,public,False,0xa0,0,0xa7a
"    0x29c: v29c(0x10000000000000000000000000000000000000000) = SHL v29a(0xa0), v298(0x1)",0x293,v29c,"0,v29a,v298",SHL,updateCode,public,False,0x10000000000000000000000000000000000000000,0,0xa7a
"    0x29d: v29d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v29c(0x10000000000000000000000000000000000000000), v296(0x1)",0x293,v29d,"0,v29c,v296",SUB,updateCode,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xa7a
"    0x29e: v29e = AND v29d(0xffffffffffffffffffffffffffffffffffffffff), v295",0x293,v29e,"0,v29d,v295",AND,updateCode,public,False,0,0,0xa7a
    0x29f: v29f(0xa7a) = CONST ,0x293,v29f,0,CONST,updateCode,public,False,0xa7a,0,0xa7a
    0x2a3: JUMP v29f(0xa7a),0x293,0,"0,v29f",JUMP,updateCode,public,False,0,0,0xa7a
    Begin block 0xa7a,0xa7a,0,0,0,updateCode,public,False,0,0,0xa7a
"    prev=[0x293], succ=[0xa8b, 0xac2]",0xa7a,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
    =================================,0xa7a,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa7b: va7b(0x0) = CONST ,0xa7a,va7b,0,CONST,updateCode,public,False,0x0,0,"0xa8b, 0xac2"
    0xa7d: va7d = SLOAD va7b(0x0),0xa7a,va7d,"0,va7b",SLOAD,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa7e: va7e(0xff) = CONST ,0xa7a,va7e,0,CONST,updateCode,public,False,0xff,0,"0xa8b, 0xac2"
"    0xa80: va80 = AND va7e(0xff), va7d",0xa7a,va80,"0,va7e,va7d",AND,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa81: va81 = ISZERO va80,0xa7a,va81,"0,va80",ISZERO,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa82: va82 = ISZERO va81,0xa7a,va82,"0,va81",ISZERO,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa83: va83(0x1) = CONST ,0xa7a,va83,0,CONST,updateCode,public,False,0x1,0,"0xa8b, 0xac2"
"    0xa85: va85 = EQ va83(0x1), va82",0xa7a,va85,"0,va83,va82",EQ,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa86: va86(0xac2) = CONST ,0xa7a,va86,0,CONST,updateCode,public,False,0xac2,0,"0xa8b, 0xac2"
"    0xa8a: JUMPI va86(0xac2), va85",0xa7a,0,"0,va86,va85",JUMPI,updateCode,public,False,0,0,"0xa8b, 0xac2"
    Begin block 0xa8b,0xa8b,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
"    prev=[0xa7a], succ=[]",0xa8b,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
    =================================,0xa8b,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xa8b: va8b(0x40) = CONST ,0xa8b,va8b,0,CONST,updateCode,public,False,0x40,0,"0xa8b, 0xac2"
    0xa8d: va8d = MLOAD va8b(0x40),0xa8b,va8d,"0,va8b",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0xa8b, 0xac2"
    0xa8e: va8e(0x461bcd) = CONST ,0xa8b,va8e,0,CONST,updateCode,public,False,0x461bcd,0,"0xa8b, 0xac2"
    0xa92: va92(0xe5) = CONST ,0xa8b,va92,0,CONST,updateCode,public,False,0xe5,0,"0xa8b, 0xac2"
"    0xa94: va94(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va92(0xe5), va8e(0x461bcd)",0xa8b,va94,"0,va92,va8e",SHL,updateCode,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xa8b, 0xac2"
"    0xa96: MSTORE va8d, va94(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xa8b,updateCode&m0x40,"0,va8d,va94",MSTORE,updateCode,public,False,0,updateCode&m0x40,"0xa8b, 0xac2"
    0xa97: va97(0x4) = CONST ,0xa8b,va97,0,CONST,updateCode,public,False,0x4,0,"0xa8b, 0xac2"
"    0xa99: va99 = ADD va97(0x4), va8d",0xa8b,va99,"0,va97,va8d",ADD,updateCode,public,False,0,updateCode&m0x40+0x4,"0xa8b, 0xac2"
    0xa9c: va9c(0x20) = CONST ,0xa8b,va9c,0,CONST,updateCode,public,False,0x20,0,"0xa8b, 0xac2"
"    0xa9e: va9e = ADD va9c(0x20), va99",0xa8b,va9e,"0,va9c,va99",ADD,updateCode,public,False,0,updateCode&m0x40+0x4+0x20,"0xa8b, 0xac2"
"    0xaa1: vaa1(0x20) = SUB va9e, va99",0xa8b,vaa1,"0,va9e,va99",SUB,updateCode,public,False,0x20,updateCode&m0x40+0x4+0x20-0x20,"0xa8b, 0xac2"
"    0xaa3: MSTORE va99, vaa1(0x20)",0xa8b,updateCode&m0x40+0x4,"0,va99,vaa1",MSTORE,updateCode,public,False,0,updateCode&m0x40+0x4,"0xa8b, 0xac2"
    0xaa4: vaa4(0x32) = CONST ,0xa8b,vaa4,0,CONST,updateCode,public,False,0x32,0,"0xa8b, 0xac2"
"    0xaa7: MSTORE va9e, vaa4(0x32)",0xa8b,updateCode&m0x40+0x4+0x20,"0,va9e,vaa4",MSTORE,updateCode,public,False,0,updateCode&m0x40+0x4+0x20,"0xa8b, 0xac2"
    0xaa8: vaa8(0x20) = CONST ,0xa8b,vaa8,0,CONST,updateCode,public,False,0x20,0,"0xa8b, 0xac2"
"    0xaaa: vaaa = ADD vaa8(0x20), va9e",0xa8b,vaaa,"0,vaa8,va9e",ADD,updateCode,public,False,0,updateCode&m0x40+0x4+0x20+0x20,"0xa8b, 0xac2"
    0xaac: vaac(0x3466) = CONST ,0xa8b,vaac,0,CONST,updateCode,public,False,0x3466,0,"0xa8b, 0xac2"
    0xab0: vab0(0x32) = CONST ,0xa8b,vab0,0,CONST,updateCode,public,False,0x32,0,"0xa8b, 0xac2"
"    0xab3: CODECOPY vaaa, vaac(0x3466), vab0(0x32)",0xa8b,0,"0,vaaa,vaac,vab0",CODECOPY,updateCode,public,False,0,0,"0xa8b, 0xac2"
    0xab4: vab4(0x40) = CONST ,0xa8b,vab4,0,CONST,updateCode,public,False,0x40,0,"0xa8b, 0xac2"
"    0xab6: vab6 = ADD vab4(0x40), vaaa",0xa8b,vab6,"0,vab4,vaaa",ADD,updateCode,public,False,0,updateCode&m0x40+0x4+0x20+0x20+0x40,"0xa8b, 0xac2"
    0xaba: vaba(0x40) = CONST ,0xa8b,vaba,0,CONST,updateCode,public,False,0x40,0,"0xa8b, 0xac2"
    0xabc: vabc = MLOAD vaba(0x40),0xa8b,vabc,"0,vaba",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0xa8b, 0xac2"
"    0xabf: vabf(0x84) = SUB vab6, vabc",0xa8b,vabf,"0,vab6,vabc",SUB,updateCode,public,False,0x84,updateCode&m0x40+0x4+0x20+0x20+0x40-0x84,"0xa8b, 0xac2"
"    0xac1: REVERT vabc, vabf(0x84)",0xa8b,0,"0,vabc,vabf",REVERT,updateCode,public,False,0,0,"0xa8b, 0xac2"
    Begin block 0xac2,0xac2,0,0,0,updateCode,public,False,0,0,"0xa8b, 0xac2"
"    prev=[0xa7a], succ=[0xad9, 0xaf6]",0xac2,0,0,0,updateCode,public,False,0,0,"0xad9, 0xaf6"
    =================================,0xac2,0,0,0,updateCode,public,False,0,0,"0xad9, 0xaf6"
    0xac3: vac3(0x0) = CONST ,0xac2,vac3,0,CONST,updateCode,public,False,0x0,0,"0xad9, 0xaf6"
    0xac5: vac5 = SLOAD vac3(0x0),0xac2,vac5,"0,vac3",SLOAD,updateCode,public,False,0,0,"0xad9, 0xaf6"
    0xac6: vac6(0x100) = CONST ,0xac2,vac6,0,CONST,updateCode,public,False,0x100,0,"0xad9, 0xaf6"
"    0xaca: vaca = DIV vac5, vac6(0x100)",0xac2,vaca,"0,vac5,vac6",DIV,updateCode,public,False,0,0,"0xad9, 0xaf6"
    0xacb: vacb(0x1) = CONST ,0xac2,vacb,0,CONST,updateCode,public,False,0x1,0,"0xad9, 0xaf6"
    0xacd: vacd(0x1) = CONST ,0xac2,vacd,0,CONST,updateCode,public,False,0x1,0,"0xad9, 0xaf6"
    0xacf: vacf(0xa0) = CONST ,0xac2,vacf,0,CONST,updateCode,public,False,0xa0,0,"0xad9, 0xaf6"
"    0xad1: vad1(0x10000000000000000000000000000000000000000) = SHL vacf(0xa0), vacd(0x1)",0xac2,vad1,"0,vacf,vacd",SHL,updateCode,public,False,0x10000000000000000000000000000000000000000,0,"0xad9, 0xaf6"
"    0xad2: vad2(0xffffffffffffffffffffffffffffffffffffffff) = SUB vad1(0x10000000000000000000000000000000000000000), vacb(0x1)",0xac2,vad2,"0,vad1,vacb",SUB,updateCode,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xad9, 0xaf6"
"    0xad3: vad3 = AND vad2(0xffffffffffffffffffffffffffffffffffffffff), vaca",0xac2,vad3,"0,vad2,vaca",AND,updateCode,public,False,0,0,"0xad9, 0xaf6"
    0xad4: vad4(0xaf6) = CONST ,0xac2,vad4,0,CONST,updateCode,public,False,0xaf6,0,"0xad9, 0xaf6"
"    0xad8: JUMPI vad4(0xaf6), vad3",0xac2,0,"0,vad4,vad3",JUMPI,updateCode,public,False,0,0,"0xad9, 0xaf6"
    Begin block 0xad9,0xad9,0,0,0,updateCode,public,False,0,0,"0xad9, 0xaf6"
"    prev=[0xac2], succ=[0xaec, 0xaf0]",0xad9,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
    =================================,0xad9,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
    0xad9: vad9(0xb) = CONST ,0xad9,vad9,0,CONST,updateCode,public,False,0xb,0,"0xaec, 0xaf0"
    0xadb: vadb = SLOAD vad9(0xb),0xad9,vadb,"0,vad9",SLOAD,updateCode,public,False,0,0,"0xaec, 0xaf0"
    0xadc: vadc(0x1) = CONST ,0xad9,vadc,0,CONST,updateCode,public,False,0x1,0,"0xaec, 0xaf0"
    0xade: vade(0x1) = CONST ,0xad9,vade,0,CONST,updateCode,public,False,0x1,0,"0xaec, 0xaf0"
    0xae0: vae0(0xa0) = CONST ,0xad9,vae0,0,CONST,updateCode,public,False,0xa0,0,"0xaec, 0xaf0"
"    0xae2: vae2(0x10000000000000000000000000000000000000000) = SHL vae0(0xa0), vade(0x1)",0xad9,vae2,"0,vae0,vade",SHL,updateCode,public,False,0x10000000000000000000000000000000000000000,0,"0xaec, 0xaf0"
"    0xae3: vae3(0xffffffffffffffffffffffffffffffffffffffff) = SUB vae2(0x10000000000000000000000000000000000000000), vadc(0x1)",0xad9,vae3,"0,vae2,vadc",SUB,updateCode,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xaec, 0xaf0"
"    0xae4: vae4 = AND vae3(0xffffffffffffffffffffffffffffffffffffffff), vadb",0xad9,vae4,"0,vae3,vadb",AND,updateCode,public,False,0,0,"0xaec, 0xaf0"
    0xae5: vae5 = CALLER ,0xad9,vae5,0,CALLER,updateCode,public,True,0,0,"0xaec, 0xaf0"
"    0xae6: vae6 = EQ vae5, vae4",0xad9,vae6,"0,vae5,vae4",EQ,updateCode,public,False,0,0,"0xaec, 0xaf0"
    0xae7: vae7(0xaf0) = CONST ,0xad9,vae7,0,CONST,updateCode,public,False,0xaf0,0,"0xaec, 0xaf0"
"    0xaeb: JUMPI vae7(0xaf0), vae6",0xad9,0,"0,vae7,vae6",JUMPI,updateCode,public,False,0,0,"0xaec, 0xaf0"
    Begin block 0xaec,0xaec,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
"    prev=[0xad9], succ=[]",0xaec,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
    =================================,0xaec,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
    0xaec: vaec(0x0) = CONST ,0xaec,vaec,0,CONST,updateCode,public,False,0x0,0,"0xaec, 0xaf0"
"    0xaef: REVERT vaec(0x0), vaec(0x0)",0xaec,0,"0,vaec,vaec",REVERT,updateCode,public,False,0,0,"0xaec, 0xaf0"
    Begin block 0xaf0,0xaf0,0,0,0,updateCode,public,False,0,0,"0xaec, 0xaf0"
"    prev=[0xad9], succ=[0xb13]",0xaf0,0,0,0,updateCode,public,False,0,0,0xb13
    =================================,0xaf0,0,0,0,updateCode,public,False,0,0,0xb13
    0xaf1: vaf1(0xb13) = CONST ,0xaf0,vaf1,0,CONST,updateCode,public,False,0xb13,0,0xb13
    0xaf5: JUMP vaf1(0xb13),0xaf0,0,"0,vaf1",JUMP,updateCode,public,False,0,0,0xb13
    Begin block 0xb13,0xb13,0,0,0,updateCode,public,False,0,0,0xb13
"    prev=[0xaf6, 0xaf0], succ=[0x1b0b]",0xb13,0,0,0,updateCode,public,False,0,0,0x1b0b
    =================================,0xb13,0,0,0,updateCode,public,False,0,0,0x1b0b
    0xb14: vb14(0x3a5e) = CONST ,0xb13,vb14,0,CONST,updateCode,public,False,0x3a5e,0,0x1b0b
    0xb19: vb19(0x1b0b) = CONST ,0xb13,vb19,0,CONST,updateCode,public,False,0x1b0b,0,0x1b0b
    0xb1d: JUMP vb19(0x1b0b),0xb13,0,"0,vb19",JUMP,updateCode,public,False,0,0,0x1b0b
    Begin block 0x1b0b,0x1b0b,0,0,0,updateCode,public,False,0,0,0x1b0b
"    prev=[0xb13], succ=[0x1b41, 0x1b45]",0x1b0b,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    =================================,0x1b0b,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b0d: v1b0d(0x1) = CONST ,0x1b0b,v1b0d,0,CONST,updateCode,public,False,0x1,0,"0x1b41, 0x1b45"
    0x1b0f: v1b0f(0x1) = CONST ,0x1b0b,v1b0f,0,CONST,updateCode,public,False,0x1,0,"0x1b41, 0x1b45"
    0x1b11: v1b11(0xa0) = CONST ,0x1b0b,v1b11,0,CONST,updateCode,public,False,0xa0,0,"0x1b41, 0x1b45"
"    0x1b13: v1b13(0x10000000000000000000000000000000000000000) = SHL v1b11(0xa0), v1b0f(0x1)",0x1b0b,v1b13,"0,v1b11,v1b0f",SHL,updateCode,public,False,0x10000000000000000000000000000000000000000,0,"0x1b41, 0x1b45"
"    0x1b14: v1b14(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b13(0x10000000000000000000000000000000000000000), v1b0d(0x1)",0x1b0b,v1b14,"0,v1b13,v1b0d",SUB,updateCode,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1b41, 0x1b45"
"    0x1b15: v1b15 = AND v1b14(0xffffffffffffffffffffffffffffffffffffffff), v29e",0x1b0b,v1b15,"0,v1b14,v29e",AND,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b16: v1b16(0x52d1902d) = CONST ,0x1b0b,v1b16,0,CONST,updateCode,public,False,0x52d1902d,0,"0x1b41, 0x1b45"
    0x1b1b: v1b1b(0x40) = CONST ,0x1b0b,v1b1b,0,CONST,updateCode,public,False,0x40,0,"0x1b41, 0x1b45"
    0x1b1d: v1b1d = MLOAD v1b1b(0x40),0x1b0b,v1b1d,"0,v1b1b",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0x1b41, 0x1b45"
    0x1b1f: v1b1f(0xffffffff) = CONST ,0x1b0b,v1b1f,0,CONST,updateCode,public,False,0xffffffff,0,"0x1b41, 0x1b45"
"    0x1b24: v1b24(0x52d1902d) = AND v1b1f(0xffffffff), v1b16(0x52d1902d)",0x1b0b,v1b24,"0,v1b1f,v1b16",AND,updateCode,public,False,0x52d1902d,0,"0x1b41, 0x1b45"
    0x1b25: v1b25(0xe0) = CONST ,0x1b0b,v1b25,0,CONST,updateCode,public,False,0xe0,0,"0x1b41, 0x1b45"
"    0x1b27: v1b27(0x52d1902d00000000000000000000000000000000000000000000000000000000) = SHL v1b25(0xe0), v1b24(0x52d1902d)",0x1b0b,v1b27,"0,v1b25,v1b24",SHL,updateCode,public,False,0x52d1902d00000000000000000000000000000000000000000000000000000000,0,"0x1b41, 0x1b45"
"    0x1b29: MSTORE v1b1d, v1b27(0x52d1902d00000000000000000000000000000000000000000000000000000000)",0x1b0b,updateCode&m0x40,"0,v1b1d,v1b27",MSTORE,updateCode,public,False,0,updateCode&m0x40,"0x1b41, 0x1b45"
    0x1b2a: v1b2a(0x4) = CONST ,0x1b0b,v1b2a,0,CONST,updateCode,public,False,0x4,0,"0x1b41, 0x1b45"
"    0x1b2c: v1b2c = ADD v1b2a(0x4), v1b1d",0x1b0b,v1b2c,"0,v1b2a,v1b1d",ADD,updateCode,public,False,0,updateCode&m0x40+0x4,"0x1b41, 0x1b45"
    0x1b2d: v1b2d(0x20) = CONST ,0x1b0b,v1b2d,0,CONST,updateCode,public,False,0x20,0,"0x1b41, 0x1b45"
    0x1b2f: v1b2f(0x40) = CONST ,0x1b0b,v1b2f,0,CONST,updateCode,public,False,0x40,0,"0x1b41, 0x1b45"
    0x1b31: v1b31 = MLOAD v1b2f(0x40),0x1b0b,v1b31,"0,v1b2f",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0x1b41, 0x1b45"
"    0x1b34: v1b34(0x4) = SUB v1b2c, v1b31",0x1b0b,v1b34,"0,v1b2c,v1b31",SUB,updateCode,public,False,0x4,updateCode&m0x40+0x4-0x4,"0x1b41, 0x1b45"
    0x1b38: v1b38 = EXTCODESIZE v1b15,0x1b0b,v1b38,"0,v1b15",EXTCODESIZE,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b39: v1b39 = ISZERO v1b38,0x1b0b,v1b39,"0,v1b38",ISZERO,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b3b: v1b3b = ISZERO v1b39,0x1b0b,v1b3b,"0,v1b39",ISZERO,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b3c: v1b3c(0x1b45) = CONST ,0x1b0b,v1b3c,0,CONST,updateCode,public,False,0x1b45,0,"0x1b41, 0x1b45"
"    0x1b40: JUMPI v1b3c(0x1b45), v1b3b",0x1b0b,0,"0,v1b3c,v1b3b",JUMPI,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    Begin block 0x1b41,0x1b41,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
"    prev=[0x1b0b], succ=[]",0x1b41,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    =================================,0x1b41,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    0x1b41: v1b41(0x0) = CONST ,0x1b41,v1b41,0,CONST,updateCode,public,False,0x0,0,"0x1b41, 0x1b45"
"    0x1b44: REVERT v1b41(0x0), v1b41(0x0)",0x1b41,0,"0,v1b41,v1b41",REVERT,updateCode,public,False,0,0,"0x1b41, 0x1b45"
    Begin block 0x1b45,0x1b45,0,0,0,updateCode,public,False,0,0,"0x1b41, 0x1b45"
"    prev=[0x1b0b], succ=[0x1b51, 0x1b5a]",0x1b45,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    =================================,0x1b45,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b47: v1b47 = GAS ,0x1b45,v1b47,0,GAS,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
"    0x1b48: v1b48 = STATICCALL v1b47, v1b15, v1b31, v1b34(0x4), v1b31, v1b2d(0x20)",0x1b45,v1b48,"0,v1b47,v1b15,v1b31,v1b34,v1b31,v1b2d",STATICCALL,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b49: v1b49 = ISZERO v1b48,0x1b45,v1b49,"0,v1b48",ISZERO,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b4b: v1b4b = ISZERO v1b49,0x1b45,v1b4b,"0,v1b49",ISZERO,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b4c: v1b4c(0x1b5a) = CONST ,0x1b45,v1b4c,0,CONST,updateCode,public,False,0x1b5a,0,"0x1b51, 0x1b5a"
"    0x1b50: JUMPI v1b4c(0x1b5a), v1b4b",0x1b45,0,"0,v1b4c,v1b4b",JUMPI,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    Begin block 0x1b51,0x1b51,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
"    prev=[0x1b45], succ=[]",0x1b51,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    =================================,0x1b51,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b51: v1b51 = RETURNDATASIZE ,0x1b51,v1b51,0,RETURNDATASIZE,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b52: v1b52(0x0) = CONST ,0x1b51,v1b52,0,CONST,updateCode,public,False,0x0,0,"0x1b51, 0x1b5a"
"    0x1b55: RETURNDATACOPY v1b52(0x0), v1b52(0x0), v1b51",0x1b51,0,"0,v1b52,v1b52,v1b51",RETURNDATACOPY,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b56: v1b56 = RETURNDATASIZE ,0x1b51,v1b56,0,RETURNDATASIZE,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    0x1b57: v1b57(0x0) = CONST ,0x1b51,v1b57,0,CONST,updateCode,public,False,0x0,0,"0x1b51, 0x1b5a"
"    0x1b59: REVERT v1b57(0x0), v1b56",0x1b51,0,"0,v1b57,v1b56",REVERT,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
    Begin block 0x1b5a,0x1b5a,0,0,0,updateCode,public,False,0,0,"0x1b51, 0x1b5a"
"    prev=[0x1b45], succ=[0x1b6d, 0x1b71]",0x1b5a,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    =================================,0x1b5a,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    0x1b5f: v1b5f(0x40) = CONST ,0x1b5a,v1b5f,0,CONST,updateCode,public,False,0x40,0,"0x1b6d, 0x1b71"
    0x1b61: v1b61 = MLOAD v1b5f(0x40),0x1b5a,v1b61,"0,v1b5f",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0x1b6d, 0x1b71"
    0x1b62: v1b62 = RETURNDATASIZE ,0x1b5a,v1b62,0,RETURNDATASIZE,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    0x1b63: v1b63(0x20) = CONST ,0x1b5a,v1b63,0,CONST,updateCode,public,False,0x20,0,"0x1b6d, 0x1b71"
"    0x1b66: v1b66 = LT v1b62, v1b63(0x20)",0x1b5a,v1b66,"0,v1b62,v1b63",LT,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    0x1b67: v1b67 = ISZERO v1b66,0x1b5a,v1b67,"0,v1b66",ISZERO,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    0x1b68: v1b68(0x1b71) = CONST ,0x1b5a,v1b68,0,CONST,updateCode,public,False,0x1b71,0,"0x1b6d, 0x1b71"
"    0x1b6c: JUMPI v1b68(0x1b71), v1b67",0x1b5a,0,"0,v1b68,v1b67",JUMPI,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    Begin block 0x1b6d,0x1b6d,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
"    prev=[0x1b5a], succ=[]",0x1b6d,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    =================================,0x1b6d,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    0x1b6d: v1b6d(0x0) = CONST ,0x1b6d,v1b6d,0,CONST,updateCode,public,False,0x0,0,"0x1b6d, 0x1b71"
"    0x1b70: REVERT v1b6d(0x0), v1b6d(0x0)",0x1b6d,0,"0,v1b6d,v1b6d",REVERT,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
    Begin block 0x1b71,0x1b71,0,0,0,updateCode,public,False,0,0,"0x1b6d, 0x1b71"
"    prev=[0x1b5a], succ=[0x1b9b, 0x1bd8]",0x1b71,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    =================================,0x1b71,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    0x1b73: v1b73 = MLOAD v1b61,0x1b71,v1b73,"0,v1b61",MLOAD,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    0x1b74: v1b74(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) = CONST ,0x1b71,v1b74,0,CONST,updateCode,public,False,0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,0,"0x1b9b, 0x1bd8"
"    0x1b95: v1b95 = EQ v1b74(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7), v1b73",0x1b71,v1b95,"0,v1b74,v1b73",EQ,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    0x1b96: v1b96(0x1bd8) = CONST ,0x1b71,v1b96,0,CONST,updateCode,public,False,0x1bd8,0,"0x1b9b, 0x1bd8"
"    0x1b9a: JUMPI v1b96(0x1bd8), v1b95",0x1b71,0,"0,v1b96,v1b95",JUMPI,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    Begin block 0x1b9b,0x1b9b,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
"    prev=[0x1b71], succ=[]",0x1b9b,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    =================================,0x1b9b,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    0x1b9b: v1b9b(0x40) = CONST ,0x1b9b,v1b9b,0,CONST,updateCode,public,False,0x40,0,"0x1b9b, 0x1bd8"
    0x1b9e: v1b9e = MLOAD v1b9b(0x40),0x1b9b,v1b9e,"0,v1b9b",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0x1b9b, 0x1bd8"
    0x1b9f: v1b9f(0x461bcd) = CONST ,0x1b9b,v1b9f,0,CONST,updateCode,public,False,0x461bcd,0,"0x1b9b, 0x1bd8"
    0x1ba3: v1ba3(0xe5) = CONST ,0x1b9b,v1ba3,0,CONST,updateCode,public,False,0xe5,0,"0x1b9b, 0x1bd8"
"    0x1ba5: v1ba5(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1ba3(0xe5), v1b9f(0x461bcd)",0x1b9b,v1ba5,"0,v1ba3,v1b9f",SHL,updateCode,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1b9b, 0x1bd8"
"    0x1ba7: MSTORE v1b9e, v1ba5(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1b9b,updateCode&m0x40,"0,v1b9e,v1ba5",MSTORE,updateCode,public,False,0,updateCode&m0x40,"0x1b9b, 0x1bd8"
    0x1ba8: v1ba8(0x20) = CONST ,0x1b9b,v1ba8,0,CONST,updateCode,public,False,0x20,0,"0x1b9b, 0x1bd8"
    0x1baa: v1baa(0x4) = CONST ,0x1b9b,v1baa,0,CONST,updateCode,public,False,0x4,0,"0x1b9b, 0x1bd8"
"    0x1bad: v1bad = ADD v1b9e, v1baa(0x4)",0x1b9b,v1bad,"0,v1b9e,v1baa",ADD,updateCode,public,False,0,updateCode&m0x40+0x4,"0x1b9b, 0x1bd8"
"    0x1bae: MSTORE v1bad, v1ba8(0x20)",0x1b9b,updateCode&m0x40+0x4,"0,v1bad,v1ba8",MSTORE,updateCode,public,False,0,updateCode&m0x40+0x4,"0x1b9b, 0x1bd8"
    0x1baf: v1baf(0xe) = CONST ,0x1b9b,v1baf,0,CONST,updateCode,public,False,0xe,0,"0x1b9b, 0x1bd8"
    0x1bb1: v1bb1(0x24) = CONST ,0x1b9b,v1bb1,0,CONST,updateCode,public,False,0x24,0,"0x1b9b, 0x1bd8"
"    0x1bb4: v1bb4 = ADD v1b9e, v1bb1(0x24)",0x1b9b,v1bb4,"0,v1b9e,v1bb1",ADD,updateCode,public,False,0,updateCode&m0x40+0x24,"0x1b9b, 0x1bd8"
"    0x1bb5: MSTORE v1bb4, v1baf(0xe)",0x1b9b,updateCode&m0x40+0x24,"0,v1bb4,v1baf",MSTORE,updateCode,public,False,0,updateCode&m0x40+0x24,"0x1b9b, 0x1bd8"
    0x1bb6: v1bb6(0x4e6f7420636f6d70617469626c65) = CONST ,0x1b9b,v1bb6,0,CONST,updateCode,public,False,0x4e6f7420636f6d70617469626c65,0,"0x1b9b, 0x1bd8"
    0x1bc5: v1bc5(0x90) = CONST ,0x1b9b,v1bc5,0,CONST,updateCode,public,False,0x90,0,"0x1b9b, 0x1bd8"
"    0x1bc7: v1bc7(0x4e6f7420636f6d70617469626c65000000000000000000000000000000000000) = SHL v1bc5(0x90), v1bb6(0x4e6f7420636f6d70617469626c65)",0x1b9b,v1bc7,"0,v1bc5,v1bb6",SHL,updateCode,public,False,0x4e6f7420636f6d70617469626c65000000000000000000000000000000000000,0,"0x1b9b, 0x1bd8"
    0x1bc8: v1bc8(0x44) = CONST ,0x1b9b,v1bc8,0,CONST,updateCode,public,False,0x44,0,"0x1b9b, 0x1bd8"
"    0x1bcb: v1bcb = ADD v1b9e, v1bc8(0x44)",0x1b9b,v1bcb,"0,v1b9e,v1bc8",ADD,updateCode,public,False,0,updateCode&m0x40+0x44,"0x1b9b, 0x1bd8"
"    0x1bcc: MSTORE v1bcb, v1bc7(0x4e6f7420636f6d70617469626c65000000000000000000000000000000000000)",0x1b9b,updateCode&m0x40+0x44,"0,v1bcb,v1bc7",MSTORE,updateCode,public,False,0,updateCode&m0x40+0x44,"0x1b9b, 0x1bd8"
    0x1bce: v1bce = MLOAD v1b9b(0x40),0x1b9b,v1bce,"0,v1b9b",MLOAD,updateCode,public,False,0,updateCode&m0x40,"0x1b9b, 0x1bd8"
"    0x1bd2: v1bd2(0x0) = SUB v1b9e, v1bce",0x1b9b,v1bd2,"0,v1b9e,v1bce",SUB,updateCode,public,False,0x0,updateCode&m0x40-0x0,"0x1b9b, 0x1bd8"
    0x1bd3: v1bd3(0x64) = CONST ,0x1b9b,v1bd3,0,CONST,updateCode,public,False,0x64,0,"0x1b9b, 0x1bd8"
"    0x1bd5: v1bd5(0x64) = ADD v1bd3(0x64), v1bd2(0x0)",0x1b9b,v1bd5,"0,v1bd3,v1bd2",ADD,updateCode,public,False,0x64,updateCode&m0x40-0x0+0x64,"0x1b9b, 0x1bd8"
"    0x1bd7: REVERT v1bce, v1bd5(0x64)",0x1b9b,0,"0,v1bce,v1bd5",REVERT,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
    Begin block 0x1bd8,0x1bd8,0,0,0,updateCode,public,False,0,0,"0x1b9b, 0x1bd8"
"    prev=[0x1b71], succ=[0x3a5e]",0x1bd8,0,0,0,updateCode,public,False,0,0,0x3a5e
    =================================,0x1bd8,0,0,0,updateCode,public,False,0,0,0x3a5e
    0x1bd9: v1bd9(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) = CONST ,0x1bd8,v1bd9,0,CONST,updateCode,public,False,0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,0,0x3a5e
"    0x1bfa: SSTORE v1bd9(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7), v29e",0x1bd8,0,"0,v1bd9,v29e",SSTORE,updateCode,public,False,0,0,0x3a5e
    0x1bfb: JUMP vb14(0x3a5e),0x1bd8,0,"0,vb14",JUMP,updateCode,public,False,0,0,0x3a5e
    Begin block 0x3a5e,0x3a5e,0,0,0,updateCode,public,False,0,0,0x3a5e
"    prev=[0x1bd8], succ=[0x3756]",0x3a5e,0,0,0,updateCode,public,False,0,0,0x3756
    =================================,0x3a5e,0,0,0,updateCode,public,False,0,0,0x3756
    0x3a60: JUMP v27c(0x3756),0x3a5e,0,"0,v27c",JUMP,updateCode,public,False,0,0,0x3756
    Begin block 0x3756,0x3756,0,0,0,updateCode,public,False,0,0,0x3756
"    prev=[0x3a5e], succ=[]",0x3756,0,0,0,updateCode,public,False,0,0,0x3756
    =================================,0x3756,0,0,0,updateCode,public,False,0,0,0x3756
    0x3757: STOP ,0x3756,0,0,STOP,updateCode,public,False,0,0,0x3756
    Begin block 0xaf6,0xaf6,0,0,0,updateCode,public,False,0,0,0x3756
"    prev=[0xac2], succ=[0xb0f, 0xb13]",0xaf6,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
    =================================,0xaf6,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xaf7: vaf7(0x0) = CONST ,0xaf6,vaf7,0,CONST,updateCode,public,False,0x0,0,"0xb0f, 0xb13"
    0xaf9: vaf9 = SLOAD vaf7(0x0),0xaf6,vaf9,"0,vaf7",SLOAD,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xafa: vafa(0x100) = CONST ,0xaf6,vafa,0,CONST,updateCode,public,False,0x100,0,"0xb0f, 0xb13"
"    0xafe: vafe = DIV vaf9, vafa(0x100)",0xaf6,vafe,"0,vaf9,vafa",DIV,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xaff: vaff(0x1) = CONST ,0xaf6,vaff,0,CONST,updateCode,public,False,0x1,0,"0xb0f, 0xb13"
    0xb01: vb01(0x1) = CONST ,0xaf6,vb01,0,CONST,updateCode,public,False,0x1,0,"0xb0f, 0xb13"
    0xb03: vb03(0xa0) = CONST ,0xaf6,vb03,0,CONST,updateCode,public,False,0xa0,0,"0xb0f, 0xb13"
"    0xb05: vb05(0x10000000000000000000000000000000000000000) = SHL vb03(0xa0), vb01(0x1)",0xaf6,vb05,"0,vb03,vb01",SHL,updateCode,public,False,0x10000000000000000000000000000000000000000,0,"0xb0f, 0xb13"
"    0xb06: vb06(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb05(0x10000000000000000000000000000000000000000), vaff(0x1)",0xaf6,vb06,"0,vb05,vaff",SUB,updateCode,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xb0f, 0xb13"
"    0xb07: vb07 = AND vb06(0xffffffffffffffffffffffffffffffffffffffff), vafe",0xaf6,vb07,"0,vb06,vafe",AND,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xb08: vb08 = CALLER ,0xaf6,vb08,0,CALLER,updateCode,public,True,0,0,"0xb0f, 0xb13"
"    0xb09: vb09 = EQ vb08, vb07",0xaf6,vb09,"0,vb08,vb07",EQ,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xb0a: vb0a(0xb13) = CONST ,0xaf6,vb0a,0,CONST,updateCode,public,False,0xb13,0,"0xb0f, 0xb13"
"    0xb0e: JUMPI vb0a(0xb13), vb09",0xaf6,0,"0,vb0a,vb09",JUMPI,updateCode,public,False,0,0,"0xb0f, 0xb13"
    Begin block 0xb0f,0xb0f,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
"    prev=[0xaf6], succ=[]",0xb0f,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
    =================================,0xb0f,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
    0xb0f: vb0f(0x0) = CONST ,0xb0f,vb0f,0,CONST,updateCode,public,False,0x0,0,"0xb0f, 0xb13"
"    0xb12: REVERT vb0f(0x0), vb0f(0x0)",0xb0f,0,"0,vb0f,vb0f",REVERT,updateCode,public,False,0,0,"0xb0f, 0xb13"
},0xb0f,0,0,0,updateCode,public,False,0,0,"0xb0f, 0xb13"
function proxiableUUID()() public {,0x2a4,0,0,public,proxiableUUID,public,False,0,0,"0xb0f, 0xb13"
    Begin block 0x2a4,0x2a4,0,0,0,proxiableUUID,public,False,0,0,"0xb0f, 0xb13"
"    prev=[], succ=[0x2ad, 0x2b1]",0x2a4,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    =================================,0x2a4,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    0x2a5: v2a5 = CALLVALUE ,0x2a4,v2a5,0,CALLVALUE,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    0x2a7: v2a7 = ISZERO v2a5,0x2a4,v2a7,"0,v2a5",ISZERO,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    0x2a8: v2a8(0x2b1) = CONST ,0x2a4,v2a8,0,CONST,proxiableUUID,public,False,0x2b1,0,"0x2ad, 0x2b1"
"    0x2ac: JUMPI v2a8(0x2b1), v2a7",0x2a4,0,"0,v2a8,v2a7",JUMPI,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    Begin block 0x2ad,0x2ad,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
"    prev=[0x2a4], succ=[]",0x2ad,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    =================================,0x2ad,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    0x2ad: v2ad(0x0) = CONST ,0x2ad,v2ad,0,CONST,proxiableUUID,public,False,0x0,0,"0x2ad, 0x2b1"
"    0x2b0: REVERT v2ad(0x0), v2ad(0x0)",0x2ad,0,"0,v2ad,v2ad",REVERT,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
    Begin block 0x2b1,0x2b1,0,0,0,proxiableUUID,public,False,0,0,"0x2ad, 0x2b1"
"    prev=[0x2a4], succ=[0xb21]",0x2b1,0,0,0,proxiableUUID,public,False,0,0,0xb21
    =================================,0x2b1,0,0,0,proxiableUUID,public,False,0,0,0xb21
    0x2b3: v2b3(0x2bc) = CONST ,0x2b1,v2b3,0,CONST,proxiableUUID,public,False,0x2bc,0,0xb21
    0x2b7: v2b7(0xb21) = CONST ,0x2b1,v2b7,0,CONST,proxiableUUID,public,False,0xb21,0,0xb21
    0x2bb: JUMP v2b7(0xb21),0x2b1,0,"0,v2b7",JUMP,proxiableUUID,public,False,0,0,0xb21
    Begin block 0xb21,0xb21,0,0,0,proxiableUUID,public,False,0,0,0xb21
"    prev=[0x2b1], succ=[0x2bc]",0xb21,0,0,0,proxiableUUID,public,False,0,0,0x2bc
    =================================,0xb21,0,0,0,proxiableUUID,public,False,0,0,0x2bc
    0xb22: vb22(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) = CONST ,0xb21,vb22,0,CONST,proxiableUUID,public,False,0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,0,0x2bc
    0xb44: JUMP v2b3(0x2bc),0xb21,0,"0,v2b3",JUMP,proxiableUUID,public,False,0,0,0x2bc
    Begin block 0x2bc,0x2bc,0,0,0,proxiableUUID,public,False,0,0,0x2bc
"    prev=[0xb21], succ=[]",0x2bc,0,0,0,proxiableUUID,public,False,0,0,0x2bc
    =================================,0x2bc,0,0,0,proxiableUUID,public,False,0,0,0x2bc
    0x2bd: v2bd(0x40) = CONST ,0x2bc,v2bd,0,CONST,proxiableUUID,public,False,0x40,0,0x2bc
    0x2c0: v2c0 = MLOAD v2bd(0x40),0x2bc,v2c0,"0,v2bd",MLOAD,proxiableUUID,public,False,0,proxiableUUID&m0x40,0x2bc
"    0x2c3: MSTORE v2c0, vb22(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)",0x2bc,proxiableUUID&m0x40,"0,v2c0,vb22",MSTORE,proxiableUUID,public,False,0,proxiableUUID&m0x40,0x2bc
    0x2c4: v2c4 = MLOAD v2bd(0x40),0x2bc,v2c4,"0,v2bd",MLOAD,proxiableUUID,public,False,0,proxiableUUID&m0x40,0x2bc
"    0x2c8: v2c8(0x0) = SUB v2c0, v2c4",0x2bc,v2c8,"0,v2c0,v2c4",SUB,proxiableUUID,public,False,0x0,proxiableUUID&m0x40-0x0,0x2bc
    0x2c9: v2c9(0x20) = CONST ,0x2bc,v2c9,0,CONST,proxiableUUID,public,False,0x20,0,0x2bc
"    0x2cb: v2cb(0x20) = ADD v2c9(0x20), v2c8(0x0)",0x2bc,v2cb,"0,v2c9,v2c8",ADD,proxiableUUID,public,False,0x20,proxiableUUID&m0x40-0x0+0x20,0x2bc
"    0x2cd: RETURN v2c4, v2cb(0x20)",0x2bc,0,"0,v2c4,v2cb",RETURN,proxiableUUID,public,False,0,0,0x2bc
},0x2bc,0,0,0,proxiableUUID,public,False,0,0,0x2bc
function setContracts(address)() public {,0x2ce,0,0,public,setContracts,public,False,0,0,0x2bc
    Begin block 0x2ce,0x2ce,0,0,0,setContracts,public,False,0,0,0x2bc
"    prev=[], succ=[0x2d7, 0x2db]",0x2ce,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
    =================================,0x2ce,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
    0x2cf: v2cf = CALLVALUE ,0x2ce,v2cf,0,CALLVALUE,setContracts,public,False,0,0,"0x2d7, 0x2db"
    0x2d1: v2d1 = ISZERO v2cf,0x2ce,v2d1,"0,v2cf",ISZERO,setContracts,public,False,0,0,"0x2d7, 0x2db"
    0x2d2: v2d2(0x2db) = CONST ,0x2ce,v2d2,0,CONST,setContracts,public,False,0x2db,0,"0x2d7, 0x2db"
"    0x2d6: JUMPI v2d2(0x2db), v2d1",0x2ce,0,"0,v2d2,v2d1",JUMPI,setContracts,public,False,0,0,"0x2d7, 0x2db"
    Begin block 0x2d7,0x2d7,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
"    prev=[0x2ce], succ=[]",0x2d7,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
    =================================,0x2d7,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
    0x2d7: v2d7(0x0) = CONST ,0x2d7,v2d7,0,CONST,setContracts,public,False,0x0,0,"0x2d7, 0x2db"
"    0x2da: REVERT v2d7(0x0), v2d7(0x0)",0x2d7,0,"0,v2d7,v2d7",REVERT,setContracts,public,False,0,0,"0x2d7, 0x2db"
    Begin block 0x2db,0x2db,0,0,0,setContracts,public,False,0,0,"0x2d7, 0x2db"
"    prev=[0x2ce], succ=[0x2f0, 0x2f4]",0x2db,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    =================================,0x2db,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    0x2dd: v2dd(0x3777) = CONST ,0x2db,v2dd,0,CONST,setContracts,public,False,0x3777,0,"0x2f0, 0x2f4"
    0x2e1: v2e1(0x4) = CONST ,0x2db,v2e1,0,CONST,setContracts,public,False,0x4,0,"0x2f0, 0x2f4"
    0x2e4: v2e4 = CALLDATASIZE ,0x2db,v2e4,0,CALLDATASIZE,setContracts,public,False,0,0,"0x2f0, 0x2f4"
"    0x2e5: v2e5 = SUB v2e4, v2e1(0x4)",0x2db,v2e5,"0,v2e4,v2e1",SUB,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    0x2e6: v2e6(0x20) = CONST ,0x2db,v2e6,0,CONST,setContracts,public,False,0x20,0,"0x2f0, 0x2f4"
"    0x2e9: v2e9 = LT v2e5, v2e6(0x20)",0x2db,v2e9,"0,v2e5,v2e6",LT,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    0x2ea: v2ea = ISZERO v2e9,0x2db,v2ea,"0,v2e9",ISZERO,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    0x2eb: v2eb(0x2f4) = CONST ,0x2db,v2eb,0,CONST,setContracts,public,False,0x2f4,0,"0x2f0, 0x2f4"
"    0x2ef: JUMPI v2eb(0x2f4), v2ea",0x2db,0,"0,v2eb,v2ea",JUMPI,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    Begin block 0x2f0,0x2f0,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
"    prev=[0x2db], succ=[]",0x2f0,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    =================================,0x2f0,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    0x2f0: v2f0(0x0) = CONST ,0x2f0,v2f0,0,CONST,setContracts,public,False,0x0,0,"0x2f0, 0x2f4"
"    0x2f3: REVERT v2f0(0x0), v2f0(0x0)",0x2f0,0,"0,v2f0,v2f0",REVERT,setContracts,public,False,0,0,"0x2f0, 0x2f4"
    Begin block 0x2f4,0x2f4,0,0,0,setContracts,public,False,0,0,"0x2f0, 0x2f4"
"    prev=[0x2db], succ=[0xb45]",0x2f4,0,0,0,setContracts,public,False,0,0,0xb45
    =================================,0x2f4,0,0,0,setContracts,public,False,0,0,0xb45
    0x2f6: v2f6 = CALLDATALOAD v2e1(0x4),0x2f4,v2f6,"0,v2e1",CALLDATALOAD,setContracts,public,False,0,0,0xb45
    0x2f7: v2f7(0x1) = CONST ,0x2f4,v2f7,0,CONST,setContracts,public,False,0x1,0,0xb45
    0x2f9: v2f9(0x1) = CONST ,0x2f4,v2f9,0,CONST,setContracts,public,False,0x1,0,0xb45
    0x2fb: v2fb(0xa0) = CONST ,0x2f4,v2fb,0,CONST,setContracts,public,False,0xa0,0,0xb45
"    0x2fd: v2fd(0x10000000000000000000000000000000000000000) = SHL v2fb(0xa0), v2f9(0x1)",0x2f4,v2fd,"0,v2fb,v2f9",SHL,setContracts,public,False,0x10000000000000000000000000000000000000000,0,0xb45
"    0x2fe: v2fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2fd(0x10000000000000000000000000000000000000000), v2f7(0x1)",0x2f4,v2fe,"0,v2fd,v2f7",SUB,setContracts,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xb45
"    0x2ff: v2ff = AND v2fe(0xffffffffffffffffffffffffffffffffffffffff), v2f6",0x2f4,v2ff,"0,v2fe,v2f6",AND,setContracts,public,False,0,0,0xb45
    0x300: v300(0xb45) = CONST ,0x2f4,v300,0,CONST,setContracts,public,False,0xb45,0,0xb45
    0x304: JUMP v300(0xb45),0x2f4,0,"0,v300",JUMP,setContracts,public,False,0,0,0xb45
    Begin block 0xb45,0xb45,0,0,0,setContracts,public,False,0,0,0xb45
"    prev=[0x2f4], succ=[0xb56, 0xb8d]",0xb45,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
    =================================,0xb45,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb46: vb46(0x0) = CONST ,0xb45,vb46,0,CONST,setContracts,public,False,0x0,0,"0xb56, 0xb8d"
    0xb48: vb48 = SLOAD vb46(0x0),0xb45,vb48,"0,vb46",SLOAD,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb49: vb49(0xff) = CONST ,0xb45,vb49,0,CONST,setContracts,public,False,0xff,0,"0xb56, 0xb8d"
"    0xb4b: vb4b = AND vb49(0xff), vb48",0xb45,vb4b,"0,vb49,vb48",AND,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb4c: vb4c = ISZERO vb4b,0xb45,vb4c,"0,vb4b",ISZERO,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb4d: vb4d = ISZERO vb4c,0xb45,vb4d,"0,vb4c",ISZERO,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb4e: vb4e(0x1) = CONST ,0xb45,vb4e,0,CONST,setContracts,public,False,0x1,0,"0xb56, 0xb8d"
"    0xb50: vb50 = EQ vb4e(0x1), vb4d",0xb45,vb50,"0,vb4e,vb4d",EQ,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb51: vb51(0xb8d) = CONST ,0xb45,vb51,0,CONST,setContracts,public,False,0xb8d,0,"0xb56, 0xb8d"
"    0xb55: JUMPI vb51(0xb8d), vb50",0xb45,0,"0,vb51,vb50",JUMPI,setContracts,public,False,0,0,"0xb56, 0xb8d"
    Begin block 0xb56,0xb56,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
"    prev=[0xb45], succ=[]",0xb56,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
    =================================,0xb56,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb56: vb56(0x40) = CONST ,0xb56,vb56,0,CONST,setContracts,public,False,0x40,0,"0xb56, 0xb8d"
    0xb58: vb58 = MLOAD vb56(0x40),0xb56,vb58,"0,vb56",MLOAD,setContracts,public,False,0,setContracts&m0x40,"0xb56, 0xb8d"
    0xb59: vb59(0x461bcd) = CONST ,0xb56,vb59,0,CONST,setContracts,public,False,0x461bcd,0,"0xb56, 0xb8d"
    0xb5d: vb5d(0xe5) = CONST ,0xb56,vb5d,0,CONST,setContracts,public,False,0xe5,0,"0xb56, 0xb8d"
"    0xb5f: vb5f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vb5d(0xe5), vb59(0x461bcd)",0xb56,vb5f,"0,vb5d,vb59",SHL,setContracts,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xb56, 0xb8d"
"    0xb61: MSTORE vb58, vb5f(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xb56,setContracts&m0x40,"0,vb58,vb5f",MSTORE,setContracts,public,False,0,setContracts&m0x40,"0xb56, 0xb8d"
    0xb62: vb62(0x4) = CONST ,0xb56,vb62,0,CONST,setContracts,public,False,0x4,0,"0xb56, 0xb8d"
"    0xb64: vb64 = ADD vb62(0x4), vb58",0xb56,vb64,"0,vb62,vb58",ADD,setContracts,public,False,0,setContracts&m0x40+0x4,"0xb56, 0xb8d"
    0xb67: vb67(0x20) = CONST ,0xb56,vb67,0,CONST,setContracts,public,False,0x20,0,"0xb56, 0xb8d"
"    0xb69: vb69 = ADD vb67(0x20), vb64",0xb56,vb69,"0,vb67,vb64",ADD,setContracts,public,False,0,setContracts&m0x40+0x4+0x20,"0xb56, 0xb8d"
"    0xb6c: vb6c(0x20) = SUB vb69, vb64",0xb56,vb6c,"0,vb69,vb64",SUB,setContracts,public,False,0x20,setContracts&m0x40+0x4+0x20-0x20,"0xb56, 0xb8d"
"    0xb6e: MSTORE vb64, vb6c(0x20)",0xb56,setContracts&m0x40+0x4,"0,vb64,vb6c",MSTORE,setContracts,public,False,0,setContracts&m0x40+0x4,"0xb56, 0xb8d"
    0xb6f: vb6f(0x32) = CONST ,0xb56,vb6f,0,CONST,setContracts,public,False,0x32,0,"0xb56, 0xb8d"
"    0xb72: MSTORE vb69, vb6f(0x32)",0xb56,setContracts&m0x40+0x4+0x20,"0,vb69,vb6f",MSTORE,setContracts,public,False,0,setContracts&m0x40+0x4+0x20,"0xb56, 0xb8d"
    0xb73: vb73(0x20) = CONST ,0xb56,vb73,0,CONST,setContracts,public,False,0x20,0,"0xb56, 0xb8d"
"    0xb75: vb75 = ADD vb73(0x20), vb69",0xb56,vb75,"0,vb73,vb69",ADD,setContracts,public,False,0,setContracts&m0x40+0x4+0x20+0x20,"0xb56, 0xb8d"
    0xb77: vb77(0x3466) = CONST ,0xb56,vb77,0,CONST,setContracts,public,False,0x3466,0,"0xb56, 0xb8d"
    0xb7b: vb7b(0x32) = CONST ,0xb56,vb7b,0,CONST,setContracts,public,False,0x32,0,"0xb56, 0xb8d"
"    0xb7e: CODECOPY vb75, vb77(0x3466), vb7b(0x32)",0xb56,0,"0,vb75,vb77,vb7b",CODECOPY,setContracts,public,False,0,0,"0xb56, 0xb8d"
    0xb7f: vb7f(0x40) = CONST ,0xb56,vb7f,0,CONST,setContracts,public,False,0x40,0,"0xb56, 0xb8d"
"    0xb81: vb81 = ADD vb7f(0x40), vb75",0xb56,vb81,"0,vb7f,vb75",ADD,setContracts,public,False,0,setContracts&m0x40+0x4+0x20+0x20+0x40,"0xb56, 0xb8d"
    0xb85: vb85(0x40) = CONST ,0xb56,vb85,0,CONST,setContracts,public,False,0x40,0,"0xb56, 0xb8d"
    0xb87: vb87 = MLOAD vb85(0x40),0xb56,vb87,"0,vb85",MLOAD,setContracts,public,False,0,setContracts&m0x40,"0xb56, 0xb8d"
"    0xb8a: vb8a(0x84) = SUB vb81, vb87",0xb56,vb8a,"0,vb81,vb87",SUB,setContracts,public,False,0x84,setContracts&m0x40+0x4+0x20+0x20+0x40-0x84,"0xb56, 0xb8d"
"    0xb8c: REVERT vb87, vb8a(0x84)",0xb56,0,"0,vb87,vb8a",REVERT,setContracts,public,False,0,0,"0xb56, 0xb8d"
    Begin block 0xb8d,0xb8d,0,0,0,setContracts,public,False,0,0,"0xb56, 0xb8d"
"    prev=[0xb45], succ=[0xba6, 0xbaa]",0xb8d,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
    =================================,0xb8d,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xb8e: vb8e(0x0) = CONST ,0xb8d,vb8e,0,CONST,setContracts,public,False,0x0,0,"0xba6, 0xbaa"
    0xb90: vb90 = SLOAD vb8e(0x0),0xb8d,vb90,"0,vb8e",SLOAD,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xb91: vb91(0x100) = CONST ,0xb8d,vb91,0,CONST,setContracts,public,False,0x100,0,"0xba6, 0xbaa"
"    0xb95: vb95 = DIV vb90, vb91(0x100)",0xb8d,vb95,"0,vb90,vb91",DIV,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xb96: vb96(0x1) = CONST ,0xb8d,vb96,0,CONST,setContracts,public,False,0x1,0,"0xba6, 0xbaa"
    0xb98: vb98(0x1) = CONST ,0xb8d,vb98,0,CONST,setContracts,public,False,0x1,0,"0xba6, 0xbaa"
    0xb9a: vb9a(0xa0) = CONST ,0xb8d,vb9a,0,CONST,setContracts,public,False,0xa0,0,"0xba6, 0xbaa"
"    0xb9c: vb9c(0x10000000000000000000000000000000000000000) = SHL vb9a(0xa0), vb98(0x1)",0xb8d,vb9c,"0,vb9a,vb98",SHL,setContracts,public,False,0x10000000000000000000000000000000000000000,0,"0xba6, 0xbaa"
"    0xb9d: vb9d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb9c(0x10000000000000000000000000000000000000000), vb96(0x1)",0xb8d,vb9d,"0,vb9c,vb96",SUB,setContracts,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xba6, 0xbaa"
"    0xb9e: vb9e = AND vb9d(0xffffffffffffffffffffffffffffffffffffffff), vb95",0xb8d,vb9e,"0,vb9d,vb95",AND,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xb9f: vb9f = CALLER ,0xb8d,vb9f,0,CALLER,setContracts,public,True,0,0,"0xba6, 0xbaa"
"    0xba0: vba0 = EQ vb9f, vb9e",0xb8d,vba0,"0,vb9f,vb9e",EQ,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xba1: vba1(0xbaa) = CONST ,0xb8d,vba1,0,CONST,setContracts,public,False,0xbaa,0,"0xba6, 0xbaa"
"    0xba5: JUMPI vba1(0xbaa), vba0",0xb8d,0,"0,vba1,vba0",JUMPI,setContracts,public,False,0,0,"0xba6, 0xbaa"
    Begin block 0xba6,0xba6,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
"    prev=[0xb8d], succ=[]",0xba6,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
    =================================,0xba6,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
    0xba6: vba6(0x0) = CONST ,0xba6,vba6,0,CONST,setContracts,public,False,0x0,0,"0xba6, 0xbaa"
"    0xba9: REVERT vba6(0x0), vba6(0x0)",0xba6,0,"0,vba6,vba6",REVERT,setContracts,public,False,0,0,"0xba6, 0xbaa"
    Begin block 0xbaa,0xbaa,0,0,0,setContracts,public,False,0,0,"0xba6, 0xbaa"
"    prev=[0xb8d], succ=[0x3777]",0xbaa,0,0,0,setContracts,public,False,0,0,0x3777
    =================================,0xbaa,0,0,0,setContracts,public,False,0,0,0x3777
    0xbab: vbab(0xb) = CONST ,0xbaa,vbab,0,CONST,setContracts,public,False,0xb,0,0x3777
    0xbae: vbae = SLOAD vbab(0xb),0xbaa,vbae,"0,vbab",SLOAD,setContracts,public,False,0,0,0x3777
    0xbaf: vbaf(0x1) = CONST ,0xbaa,vbaf,0,CONST,setContracts,public,False,0x1,0,0x3777
    0xbb1: vbb1(0x1) = CONST ,0xbaa,vbb1,0,CONST,setContracts,public,False,0x1,0,0x3777
    0xbb3: vbb3(0xa0) = CONST ,0xbaa,vbb3,0,CONST,setContracts,public,False,0xa0,0,0x3777
"    0xbb5: vbb5(0x10000000000000000000000000000000000000000) = SHL vbb3(0xa0), vbb1(0x1)",0xbaa,vbb5,"0,vbb3,vbb1",SHL,setContracts,public,False,0x10000000000000000000000000000000000000000,0,0x3777
"    0xbb6: vbb6(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbb5(0x10000000000000000000000000000000000000000), vbaf(0x1)",0xbaa,vbb6,"0,vbb5,vbaf",SUB,setContracts,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3777
"    0xbb9: vbb9 = AND v2ff, vbb6(0xffffffffffffffffffffffffffffffffffffffff)",0xbaa,vbb9,"0,v2ff,vbb6",AND,setContracts,public,False,0,0,0x3777
    0xbba: vbba(0x1) = CONST ,0xbaa,vbba,0,CONST,setContracts,public,False,0x1,0,0x3777
    0xbbc: vbbc(0x1) = CONST ,0xbaa,vbbc,0,CONST,setContracts,public,False,0x1,0,0x3777
    0xbbe: vbbe(0xa0) = CONST ,0xbaa,vbbe,0,CONST,setContracts,public,False,0xa0,0,0x3777
"    0xbc0: vbc0(0x10000000000000000000000000000000000000000) = SHL vbbe(0xa0), vbbc(0x1)",0xbaa,vbc0,"0,vbbe,vbbc",SHL,setContracts,public,False,0x10000000000000000000000000000000000000000,0,0x3777
"    0xbc1: vbc1(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbc0(0x10000000000000000000000000000000000000000), vbba(0x1)",0xbaa,vbc1,"0,vbc0,vbba",SUB,setContracts,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3777
    0xbc2: vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vbc1(0xffffffffffffffffffffffffffffffffffffffff),0xbaa,vbc2,"0,vbc1",NOT,setContracts,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x3777
"    0xbc5: vbc5 = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vbae",0xbaa,vbc5,"0,vbc2,vbae",AND,setContracts,public,False,0,0,0x3777
"    0xbc6: vbc6 = OR vbc5, vbb9",0xbaa,vbc6,"0,vbc5,vbb9",OR,setContracts,public,False,0,0,0x3777
"    0xbc8: SSTORE vbab(0xb), vbc6",0xbaa,0,"0,vbab,vbc6",SSTORE,setContracts,public,False,0,0,0x3777
    0xbc9: vbc9(0x5) = CONST ,0xbaa,vbc9,0,CONST,setContracts,public,False,0x5,0,0x3777
    0xbcc: vbcc = SLOAD vbc9(0x5),0xbaa,vbcc,"0,vbc9",SLOAD,setContracts,public,False,0,0,0x3777
"    0xbce: vbce = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vbcc",0xbaa,vbce,"0,vbc2,vbcc",AND,setContracts,public,False,0,0,0x3777
    0xbcf: vbcf(0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5) = CONST ,0xbaa,vbcf,0,CONST,setContracts,public,False,0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5,0,0x3777
"    0xbe4: vbe4 = OR vbcf(0x2c9728ad35c1cfb16e3c1b5045bc9ba30f37fac5), vbce",0xbaa,vbe4,"0,vbcf,vbce",OR,setContracts,public,False,0,0,0x3777
"    0xbe6: SSTORE vbc9(0x5), vbe4",0xbaa,0,"0,vbc9,vbe4",SSTORE,setContracts,public,False,0,0,0x3777
    0xbe7: vbe7(0x6) = CONST ,0xbaa,vbe7,0,CONST,setContracts,public,False,0x6,0,0x3777
    0xbea: vbea = SLOAD vbe7(0x6),0xbaa,vbea,"0,vbe7",SLOAD,setContracts,public,False,0,0,0x3777
"    0xbec: vbec = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vbea",0xbaa,vbec,"0,vbc2,vbea",AND,setContracts,public,False,0,0,0x3777
    0xbed: vbed(0x60d70df1c783b1e5489721c443465684e2756555) = CONST ,0xbaa,vbed,0,CONST,setContracts,public,False,0x60d70df1c783b1e5489721c443465684e2756555,0,0x3777
"    0xc02: vc02 = OR vbed(0x60d70df1c783b1e5489721c443465684e2756555), vbec",0xbaa,vc02,"0,vbed,vbec",OR,setContracts,public,False,0,0,0x3777
"    0xc04: SSTORE vbe7(0x6), vc02",0xbaa,0,"0,vbe7,vc02",SSTORE,setContracts,public,False,0,0,0x3777
    0xc05: vc05(0x7) = CONST ,0xbaa,vc05,0,CONST,setContracts,public,False,0x7,0,0x3777
    0xc08: vc08 = SLOAD vc05(0x7),0xbaa,vc08,"0,vc05",SLOAD,setContracts,public,False,0,0,0x3777
"    0xc0a: vc0a = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc08",0xbaa,vc0a,"0,vbc2,vc08",AND,setContracts,public,False,0,0,0x3777
    0xc0b: vc0b(0x66bfd3ed6618d9c62dcf1ef706d9aacd5fdbccd6) = CONST ,0xbaa,vc0b,0,CONST,setContracts,public,False,0x66bfd3ed6618d9c62dcf1ef706d9aacd5fdbccd6,0,0x3777
"    0xc20: vc20 = OR vc0b(0x66bfd3ed6618d9c62dcf1ef706d9aacd5fdbccd6), vc0a",0xbaa,vc20,"0,vc0b,vc0a",OR,setContracts,public,False,0,0,0x3777
"    0xc22: SSTORE vc05(0x7), vc20",0xbaa,0,"0,vc05,vc20",SSTORE,setContracts,public,False,0,0,0x3777
    0xc23: vc23(0x8) = CONST ,0xbaa,vc23,0,CONST,setContracts,public,False,0x8,0,0x3777
    0xc26: vc26 = SLOAD vc23(0x8),0xbaa,vc26,"0,vc23",SLOAD,setContracts,public,False,0,0,0x3777
"    0xc28: vc28 = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc26",0xbaa,vc28,"0,vbc2,vc26",AND,setContracts,public,False,0,0,0x3777
    0xc29: vc29(0x868f7622f57b62330db8b282044d7eaf067facfe) = CONST ,0xbaa,vc29,0,CONST,setContracts,public,False,0x868f7622f57b62330db8b282044d7eaf067facfe,0,0x3777
"    0xc3e: vc3e = OR vc29(0x868f7622f57b62330db8b282044d7eaf067facfe), vc28",0xbaa,vc3e,"0,vc29,vc28",OR,setContracts,public,False,0,0,0x3777
"    0xc40: SSTORE vc23(0x8), vc3e",0xbaa,0,"0,vc23,vc3e",SSTORE,setContracts,public,False,0,0,0x3777
    0xc41: vc41(0x9) = CONST ,0xbaa,vc41,0,CONST,setContracts,public,False,0x9,0,0x3777
    0xc44: vc44 = SLOAD vc41(0x9),0xbaa,vc44,"0,vc41",SLOAD,setContracts,public,False,0,0,0x3777
"    0xc46: vc46 = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc44",0xbaa,vc46,"0,vbc2,vc44",AND,setContracts,public,False,0,0,0x3777
    0xc47: vc47(0xd66a9d2b706e225204f475c9e70a4c09eea62199) = CONST ,0xbaa,vc47,0,CONST,setContracts,public,False,0xd66a9d2b706e225204f475c9e70a4c09eea62199,0,0x3777
"    0xc5c: vc5c = OR vc47(0xd66a9d2b706e225204f475c9e70a4c09eea62199), vc46",0xbaa,vc5c,"0,vc47,vc46",OR,setContracts,public,False,0,0,0x3777
"    0xc5e: SSTORE vc41(0x9), vc5c",0xbaa,0,"0,vc41,vc5c",SSTORE,setContracts,public,False,0,0,0x3777
    0xc5f: vc5f(0xa) = CONST ,0xbaa,vc5f,0,CONST,setContracts,public,False,0xa,0,0x3777
    0xc62: vc62 = SLOAD vc5f(0xa),0xbaa,vc62,"0,vc5f",SLOAD,setContracts,public,False,0,0,0x3777
"    0xc65: vc65 = AND vbc2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc62",0xbaa,vc65,"0,vbc2,vc62",AND,setContracts,public,False,0,0,0x3777
    0xc66: vc66(0x74a9ec513bc45bd04769fdf7a502e9c2a39e2d0e) = CONST ,0xbaa,vc66,0,CONST,setContracts,public,False,0x74a9ec513bc45bd04769fdf7a502e9c2a39e2d0e,0,0x3777
"    0xc7b: vc7b = OR vc66(0x74a9ec513bc45bd04769fdf7a502e9c2a39e2d0e), vc65",0xbaa,vc7b,"0,vc66,vc65",OR,setContracts,public,False,0,0,0x3777
"    0xc7d: SSTORE vc5f(0xa), vc7b",0xbaa,0,"0,vc5f,vc7b",SSTORE,setContracts,public,False,0,0,0x3777
    0xc7e: JUMP v2dd(0x3777),0xbaa,0,"0,v2dd",JUMP,setContracts,public,False,0,0,0x3777
    Begin block 0x3777,0x3777,0,0,0,setContracts,public,False,0,0,0x3777
"    prev=[0xbaa], succ=[]",0x3777,0,0,0,setContracts,public,False,0,0,0x3777
    =================================,0x3777,0,0,0,setContracts,public,False,0,0,0x3777
    0x3778: STOP ,0x3777,0,0,STOP,setContracts,public,False,0,0,0x3777
},0x3777,0,0,0,setContracts,public,False,0,0,0x3777
"function checkManagerAllowance(address,uint256)() public {",0x305,0,0,,checkManagerAllowance,public,False,0,0,0x3777
    Begin block 0x305,0x305,0,0,0,checkManagerAllowance,public,False,0,0,0x3777
"    prev=[], succ=[0x30e, 0x312]",0x305,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    =================================,0x305,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    0x306: v306 = CALLVALUE ,0x305,v306,0,CALLVALUE,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    0x308: v308 = ISZERO v306,0x305,v308,"0,v306",ISZERO,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    0x309: v309(0x312) = CONST ,0x305,v309,0,CONST,checkManagerAllowance,public,False,0x312,0,"0x30e, 0x312"
"    0x30d: JUMPI v309(0x312), v308",0x305,0,"0,v309,v308",JUMPI,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    Begin block 0x30e,0x30e,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
"    prev=[0x305], succ=[]",0x30e,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    =================================,0x30e,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    0x30e: v30e(0x0) = CONST ,0x30e,v30e,0,CONST,checkManagerAllowance,public,False,0x0,0,"0x30e, 0x312"
"    0x311: REVERT v30e(0x0), v30e(0x0)",0x30e,0,"0,v30e,v30e",REVERT,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
    Begin block 0x312,0x312,0,0,0,checkManagerAllowance,public,False,0,0,"0x30e, 0x312"
"    prev=[0x305], succ=[0x327, 0x32b]",0x312,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    =================================,0x312,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    0x314: v314(0x3798) = CONST ,0x312,v314,0,CONST,checkManagerAllowance,public,False,0x3798,0,"0x327, 0x32b"
    0x318: v318(0x4) = CONST ,0x312,v318,0,CONST,checkManagerAllowance,public,False,0x4,0,"0x327, 0x32b"
    0x31b: v31b = CALLDATASIZE ,0x312,v31b,0,CALLDATASIZE,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
"    0x31c: v31c = SUB v31b, v318(0x4)",0x312,v31c,"0,v31b,v318",SUB,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    0x31d: v31d(0x40) = CONST ,0x312,v31d,0,CONST,checkManagerAllowance,public,False,0x40,0,"0x327, 0x32b"
"    0x320: v320 = LT v31c, v31d(0x40)",0x312,v320,"0,v31c,v31d",LT,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    0x321: v321 = ISZERO v320,0x312,v321,"0,v320",ISZERO,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    0x322: v322(0x32b) = CONST ,0x312,v322,0,CONST,checkManagerAllowance,public,False,0x32b,0,"0x327, 0x32b"
"    0x326: JUMPI v322(0x32b), v321",0x312,0,"0,v322,v321",JUMPI,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    Begin block 0x327,0x327,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
"    prev=[0x312], succ=[]",0x327,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    =================================,0x327,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    0x327: v327(0x0) = CONST ,0x327,v327,0,CONST,checkManagerAllowance,public,False,0x0,0,"0x327, 0x32b"
"    0x32a: REVERT v327(0x0), v327(0x0)",0x327,0,"0,v327,v327",REVERT,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
    Begin block 0x32b,0x32b,0,0,0,checkManagerAllowance,public,False,0,0,"0x327, 0x32b"
"    prev=[0x312], succ=[0xc7f]",0x32b,0,0,0,checkManagerAllowance,public,False,0,0,0xc7f
    =================================,0x32b,0,0,0,checkManagerAllowance,public,False,0,0,0xc7f
    0x32d: v32d(0x1) = CONST ,0x32b,v32d,0,CONST,checkManagerAllowance,public,False,0x1,0,0xc7f
    0x32f: v32f(0x1) = CONST ,0x32b,v32f,0,CONST,checkManagerAllowance,public,False,0x1,0,0xc7f
    0x331: v331(0xa0) = CONST ,0x32b,v331,0,CONST,checkManagerAllowance,public,False,0xa0,0,0xc7f
"    0x333: v333(0x10000000000000000000000000000000000000000) = SHL v331(0xa0), v32f(0x1)",0x32b,v333,"0,v331,v32f",SHL,checkManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0xc7f
"    0x334: v334(0xffffffffffffffffffffffffffffffffffffffff) = SUB v333(0x10000000000000000000000000000000000000000), v32d(0x1)",0x32b,v334,"0,v333,v32d",SUB,checkManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xc7f
    0x336: v336 = CALLDATALOAD v318(0x4),0x32b,v336,"0,v318",CALLDATALOAD,checkManagerAllowance,public,False,0,0,0xc7f
"    0x337: v337 = AND v336, v334(0xffffffffffffffffffffffffffffffffffffffff)",0x32b,v337,"0,v336,v334",AND,checkManagerAllowance,public,False,0,0,0xc7f
    0x339: v339(0x20) = CONST ,0x32b,v339,0,CONST,checkManagerAllowance,public,False,0x20,0,0xc7f
"    0x33b: v33b(0x24) = ADD v339(0x20), v318(0x4)",0x32b,v33b,"0,v339,v318",ADD,checkManagerAllowance,public,False,0x24,0,0xc7f
    0x33c: v33c = CALLDATALOAD v33b(0x24),0x32b,v33c,"0,v33b",CALLDATALOAD,checkManagerAllowance,public,False,0,0,0xc7f
    0x33d: v33d(0xc7f) = CONST ,0x32b,v33d,0,CONST,checkManagerAllowance,public,False,0xc7f,0,0xc7f
    0x341: JUMP v33d(0xc7f),0x32b,0,"0,v33d",JUMP,checkManagerAllowance,public,False,0,0,0xc7f
    Begin block 0xc7f,0xc7f,0,0,0,checkManagerAllowance,public,False,0,0,0xc7f
"    prev=[0x32b], succ=[0xc96, 0xc9a]",0xc7f,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    =================================,0xc7f,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    0xc80: vc80(0x7) = CONST ,0xc7f,vc80,0,CONST,checkManagerAllowance,public,False,0x7,0,"0xc96, 0xc9a"
    0xc82: vc82 = SLOAD vc80(0x7),0xc7f,vc82,"0,vc80",SLOAD,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    0xc83: vc83(0x0) = CONST ,0xc7f,vc83,0,CONST,checkManagerAllowance,public,False,0x0,0,"0xc96, 0xc9a"
    0xc86: vc86(0x1) = CONST ,0xc7f,vc86,0,CONST,checkManagerAllowance,public,False,0x1,0,"0xc96, 0xc9a"
    0xc88: vc88(0x1) = CONST ,0xc7f,vc88,0,CONST,checkManagerAllowance,public,False,0x1,0,"0xc96, 0xc9a"
    0xc8a: vc8a(0xa0) = CONST ,0xc7f,vc8a,0,CONST,checkManagerAllowance,public,False,0xa0,0,"0xc96, 0xc9a"
"    0xc8c: vc8c(0x10000000000000000000000000000000000000000) = SHL vc8a(0xa0), vc88(0x1)",0xc7f,vc8c,"0,vc8a,vc88",SHL,checkManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,"0xc96, 0xc9a"
"    0xc8d: vc8d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc8c(0x10000000000000000000000000000000000000000), vc86(0x1)",0xc7f,vc8d,"0,vc8c,vc86",SUB,checkManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc96, 0xc9a"
"    0xc8e: vc8e = AND vc8d(0xffffffffffffffffffffffffffffffffffffffff), vc82",0xc7f,vc8e,"0,vc8d,vc82",AND,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    0xc8f: vc8f = CALLER ,0xc7f,vc8f,0,CALLER,checkManagerAllowance,public,True,0,0,"0xc96, 0xc9a"
"    0xc90: vc90 = EQ vc8f, vc8e",0xc7f,vc90,"0,vc8f,vc8e",EQ,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    0xc91: vc91(0xc9a) = CONST ,0xc7f,vc91,0,CONST,checkManagerAllowance,public,False,0xc9a,0,"0xc96, 0xc9a"
"    0xc95: JUMPI vc91(0xc9a), vc90",0xc7f,0,"0,vc91,vc90",JUMPI,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    Begin block 0xc96,0xc96,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
"    prev=[0xc7f], succ=[]",0xc96,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    =================================,0xc96,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    0xc96: vc96(0x0) = CONST ,0xc96,vc96,0,CONST,checkManagerAllowance,public,False,0x0,0,"0xc96, 0xc9a"
"    0xc99: REVERT vc96(0x0), vc96(0x0)",0xc96,0,"0,vc96,vc96",REVERT,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
    Begin block 0xc9a,0xc9a,0,0,0,checkManagerAllowance,public,False,0,0,"0xc96, 0xc9a"
"    prev=[0xc7f], succ=[0xcbc, 0xd08]",0xc9a,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    =================================,0xc9a,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xc9b: vc9b(0x1) = CONST ,0xc9a,vc9b,0,CONST,checkManagerAllowance,public,False,0x1,0,"0xcbc, 0xd08"
    0xc9d: vc9d(0x1) = CONST ,0xc9a,vc9d,0,CONST,checkManagerAllowance,public,False,0x1,0,"0xcbc, 0xd08"
    0xc9f: vc9f(0xa0) = CONST ,0xc9a,vc9f,0,CONST,checkManagerAllowance,public,False,0xa0,0,"0xcbc, 0xd08"
"    0xca1: vca1(0x10000000000000000000000000000000000000000) = SHL vc9f(0xa0), vc9d(0x1)",0xc9a,vca1,"0,vc9f,vc9d",SHL,checkManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,"0xcbc, 0xd08"
"    0xca2: vca2(0xffffffffffffffffffffffffffffffffffffffff) = SUB vca1(0x10000000000000000000000000000000000000000), vc9b(0x1)",0xc9a,vca2,"0,vca1,vc9b",SUB,checkManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xcbc, 0xd08"
"    0xca4: vca4 = AND v337, vca2(0xffffffffffffffffffffffffffffffffffffffff)",0xc9a,vca4,"0,v337,vca2",AND,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xca5: vca5(0x0) = CONST ,0xc9a,vca5,0,CONST,checkManagerAllowance,public,False,0x0,0,"0xcbc, 0xd08"
"    0xca9: MSTORE vca5(0x0), vca4",0xc9a,0,"0,vca5,vca4",MSTORE,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcaa: vcaa(0x3) = CONST ,0xc9a,vcaa,0,CONST,checkManagerAllowance,public,False,0x3,0,"0xcbc, 0xd08"
    0xcac: vcac(0x20) = CONST ,0xc9a,vcac,0,CONST,checkManagerAllowance,public,False,0x20,0,"0xcbc, 0xd08"
"    0xcae: MSTORE vcac(0x20), vcaa(0x3)",0xc9a,0,"0,vcac,vcaa",MSTORE,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcaf: vcaf(0x40) = CONST ,0xc9a,vcaf,0,CONST,checkManagerAllowance,public,False,0x40,0,"0xcbc, 0xd08"
"    0xcb2: vcb2 = SHA3 vca5(0x0), vcaf(0x40)",0xc9a,vcb2,"0,vca5,vcaf",SHA3,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcb3: vcb3 = SLOAD vcb2,0xc9a,vcb3,"0,vcb2",SLOAD,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
"    0xcb5: vcb5 = GT v33c, vcb3",0xc9a,vcb5,"0,v33c,vcb3",GT,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcb6: vcb6 = ISZERO vcb5,0xc9a,vcb6,"0,vcb5",ISZERO,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcb7: vcb7(0xd08) = CONST ,0xc9a,vcb7,0,CONST,checkManagerAllowance,public,False,0xd08,0,"0xcbc, 0xd08"
"    0xcbb: JUMPI vcb7(0xd08), vcb6",0xc9a,0,"0,vcb7,vcb6",JUMPI,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    Begin block 0xcbc,0xcbc,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
"    prev=[0xc9a], succ=[]",0xcbc,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    =================================,0xcbc,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    0xcbc: vcbc(0x40) = CONST ,0xcbc,vcbc,0,CONST,checkManagerAllowance,public,False,0x40,0,"0xcbc, 0xd08"
    0xcbf: vcbf = MLOAD vcbc(0x40),0xcbc,vcbf,"0,vcbc",MLOAD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,"0xcbc, 0xd08"
    0xcc0: vcc0(0x461bcd) = CONST ,0xcbc,vcc0,0,CONST,checkManagerAllowance,public,False,0x461bcd,0,"0xcbc, 0xd08"
    0xcc4: vcc4(0xe5) = CONST ,0xcbc,vcc4,0,CONST,checkManagerAllowance,public,False,0xe5,0,"0xcbc, 0xd08"
"    0xcc6: vcc6(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vcc4(0xe5), vcc0(0x461bcd)",0xcbc,vcc6,"0,vcc4,vcc0",SHL,checkManagerAllowance,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xcbc, 0xd08"
"    0xcc8: MSTORE vcbf, vcc6(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xcbc,checkManagerAllowance&m0x40,"0,vcbf,vcc6",MSTORE,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,"0xcbc, 0xd08"
    0xcc9: vcc9(0x20) = CONST ,0xcbc,vcc9,0,CONST,checkManagerAllowance,public,False,0x20,0,"0xcbc, 0xd08"
    0xccb: vccb(0x4) = CONST ,0xcbc,vccb,0,CONST,checkManagerAllowance,public,False,0x4,0,"0xcbc, 0xd08"
"    0xcce: vcce = ADD vcbf, vccb(0x4)",0xcbc,vcce,"0,vcbf,vccb",ADD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x4,"0xcbc, 0xd08"
"    0xccf: MSTORE vcce, vcc9(0x20)",0xcbc,checkManagerAllowance&m0x40+0x4,"0,vcce,vcc9",MSTORE,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x4,"0xcbc, 0xd08"
    0xcd0: vcd0(0x1e) = CONST ,0xcbc,vcd0,0,CONST,checkManagerAllowance,public,False,0x1e,0,"0xcbc, 0xd08"
    0xcd2: vcd2(0x24) = CONST ,0xcbc,vcd2,0,CONST,checkManagerAllowance,public,False,0x24,0,"0xcbc, 0xd08"
"    0xcd5: vcd5 = ADD vcbf, vcd2(0x24)",0xcbc,vcd5,"0,vcbf,vcd2",ADD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x24,"0xcbc, 0xd08"
"    0xcd6: MSTORE vcd5, vcd0(0x1e)",0xcbc,checkManagerAllowance&m0x40+0x24,"0,vcd5,vcd0",MSTORE,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x24,"0xcbc, 0xd08"
    0xcd7: vcd7(0x4d616e616765723a20496e73756666696369656e7420686f6c64696e67730000) = CONST ,0xcbc,vcd7,0,CONST,checkManagerAllowance,public,False,0x4d616e616765723a20496e73756666696369656e7420686f6c64696e67730000,0,"0xcbc, 0xd08"
    0xcf8: vcf8(0x44) = CONST ,0xcbc,vcf8,0,CONST,checkManagerAllowance,public,False,0x44,0,"0xcbc, 0xd08"
"    0xcfb: vcfb = ADD vcbf, vcf8(0x44)",0xcbc,vcfb,"0,vcbf,vcf8",ADD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x44,"0xcbc, 0xd08"
"    0xcfc: MSTORE vcfb, vcd7(0x4d616e616765723a20496e73756666696369656e7420686f6c64696e67730000)",0xcbc,checkManagerAllowance&m0x40+0x44,"0,vcfb,vcd7",MSTORE,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40+0x44,"0xcbc, 0xd08"
    0xcfe: vcfe = MLOAD vcbc(0x40),0xcbc,vcfe,"0,vcbc",MLOAD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,"0xcbc, 0xd08"
"    0xd02: vd02(0x0) = SUB vcbf, vcfe",0xcbc,vd02,"0,vcbf,vcfe",SUB,checkManagerAllowance,public,False,0x0,checkManagerAllowance&m0x40-0x0,"0xcbc, 0xd08"
    0xd03: vd03(0x64) = CONST ,0xcbc,vd03,0,CONST,checkManagerAllowance,public,False,0x64,0,"0xcbc, 0xd08"
"    0xd05: vd05(0x64) = ADD vd03(0x64), vd02(0x0)",0xcbc,vd05,"0,vd03,vd02",ADD,checkManagerAllowance,public,False,0x64,checkManagerAllowance&m0x40-0x0+0x64,"0xcbc, 0xd08"
"    0xd07: REVERT vcfe, vd05(0x64)",0xcbc,0,"0,vcfe,vd05",REVERT,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
    Begin block 0xd08,0xd08,0,0,0,checkManagerAllowance,public,False,0,0,"0xcbc, 0xd08"
"    prev=[0xc9a], succ=[0xd2d]",0xd08,0,0,0,checkManagerAllowance,public,False,0,0,0xd2d
    =================================,0xd08,0,0,0,checkManagerAllowance,public,False,0,0,0xd2d
    0xd09: vd09(0x1) = CONST ,0xd08,vd09,0,CONST,checkManagerAllowance,public,False,0x1,0,0xd2d
    0xd0b: vd0b(0x1) = CONST ,0xd08,vd0b,0,CONST,checkManagerAllowance,public,False,0x1,0,0xd2d
    0xd0d: vd0d(0xa0) = CONST ,0xd08,vd0d,0,CONST,checkManagerAllowance,public,False,0xa0,0,0xd2d
"    0xd0f: vd0f(0x10000000000000000000000000000000000000000) = SHL vd0d(0xa0), vd0b(0x1)",0xd08,vd0f,"0,vd0d,vd0b",SHL,checkManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0xd2d
"    0xd10: vd10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd0f(0x10000000000000000000000000000000000000000), vd09(0x1)",0xd08,vd10,"0,vd0f,vd09",SUB,checkManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd2d
"    0xd12: vd12 = AND v337, vd10(0xffffffffffffffffffffffffffffffffffffffff)",0xd08,vd12,"0,v337,vd10",AND,checkManagerAllowance,public,False,0,0,0xd2d
    0xd13: vd13(0x0) = CONST ,0xd08,vd13,0,CONST,checkManagerAllowance,public,False,0x0,0,0xd2d
"    0xd17: MSTORE vd13(0x0), vd12",0xd08,0,"0,vd13,vd12",MSTORE,checkManagerAllowance,public,False,0,0,0xd2d
    0xd18: vd18(0x3) = CONST ,0xd08,vd18,0,CONST,checkManagerAllowance,public,False,0x3,0,0xd2d
    0xd1a: vd1a(0x20) = CONST ,0xd08,vd1a,0,CONST,checkManagerAllowance,public,False,0x20,0,0xd2d
"    0xd1c: MSTORE vd1a(0x20), vd18(0x3)",0xd08,0,"0,vd1a,vd18",MSTORE,checkManagerAllowance,public,False,0,0,0xd2d
    0xd1d: vd1d(0x40) = CONST ,0xd08,vd1d,0,CONST,checkManagerAllowance,public,False,0x40,0,0xd2d
"    0xd20: vd20 = SHA3 vd13(0x0), vd1d(0x40)",0xd08,vd20,"0,vd13,vd1d",SHA3,checkManagerAllowance,public,False,0,0,0xd2d
    0xd21: vd21 = SLOAD vd20,0xd08,vd21,"0,vd20",SLOAD,checkManagerAllowance,public,False,0,0,0xd2d
    0xd22: vd22(0xd2d) = CONST ,0xd08,vd22,0,CONST,checkManagerAllowance,public,False,0xd2d,0,0xd2d
    0xd28: vd28(0x1ac7) = CONST ,0xd08,vd28,0,CONST,checkManagerAllowance,public,False,0x1ac7,0,0xd2d
"    0xd2c: vd2c_0 = CALLPRIVATE vd28(0x1ac7), v33c, vd21, vd22(0xd2d)",0xd08,vd2c_0,"0,vd28,v33c,vd21,vd22",CALLPRIVATE,checkManagerAllowance,public,False,0,0,0xd2d
    Begin block 0xd2d,0xd2d,0,0,0,checkManagerAllowance,public,False,0,0,0xd2d
"    prev=[0xd08], succ=[0xd650x305]",0xd2d,0,0,0,checkManagerAllowance,public,False,0,0,0xd650x305
    =================================,0xd2d,0,0,0,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd2e: vd2e(0x1) = CONST ,0xd2d,vd2e,0,CONST,checkManagerAllowance,public,False,0x1,0,0xd650x305
    0xd30: vd30(0x1) = CONST ,0xd2d,vd30,0,CONST,checkManagerAllowance,public,False,0x1,0,0xd650x305
    0xd32: vd32(0xa0) = CONST ,0xd2d,vd32,0,CONST,checkManagerAllowance,public,False,0xa0,0,0xd650x305
"    0xd34: vd34(0x10000000000000000000000000000000000000000) = SHL vd32(0xa0), vd30(0x1)",0xd2d,vd34,"0,vd32,vd30",SHL,checkManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0xd650x305
"    0xd35: vd35(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd34(0x10000000000000000000000000000000000000000), vd2e(0x1)",0xd2d,vd35,"0,vd34,vd2e",SUB,checkManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd650x305
"    0xd37: vd37 = AND v337, vd35(0xffffffffffffffffffffffffffffffffffffffff)",0xd2d,vd37,"0,v337,vd35",AND,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd38: vd38(0x0) = CONST ,0xd2d,vd38,0,CONST,checkManagerAllowance,public,False,0x0,0,0xd650x305
"    0xd3c: MSTORE vd38(0x0), vd37",0xd2d,0,"0,vd38,vd37",MSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd3d: vd3d(0x3) = CONST ,0xd2d,vd3d,0,CONST,checkManagerAllowance,public,False,0x3,0,0xd650x305
    0xd3f: vd3f(0x20) = CONST ,0xd2d,vd3f,0,CONST,checkManagerAllowance,public,False,0x20,0,0xd650x305
"    0xd43: MSTORE vd3f(0x20), vd3d(0x3)",0xd2d,0,"0,vd3f,vd3d",MSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd44: vd44(0x40) = CONST ,0xd2d,vd44,0,CONST,checkManagerAllowance,public,False,0x40,0,0xd650x305
"    0xd47: vd47 = SHA3 vd38(0x0), vd44(0x40)",0xd2d,vd47,"0,vd38,vd44",SHA3,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd4a: SSTORE vd47, vd2c_0",0xd2d,0,"0,vd47,vd2c_0",SSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd4b: vd4b(0x7) = CONST ,0xd2d,vd4b,0,CONST,checkManagerAllowance,public,False,0x7,0,0xd650x305
"    0xd4d: vd4d = ADD vd4b(0x7), vd47",0xd2d,vd4d,"0,vd4b,vd47",ADD,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd4f: vd4f = SLOAD vd4d,0xd2d,vd4f,"0,vd4d",SLOAD,checkManagerAllowance,public,False,0,0,0xd650x305
    0xd50: vd50(0x1) = CONST ,0xd2d,vd50,0,CONST,checkManagerAllowance,public,False,0x1,0,0xd650x305
"    0xd54: vd54 = ADD vd50(0x1), vd4f",0xd2d,vd54,"0,vd50,vd4f",ADD,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd56: SSTORE vd4d, vd54",0xd2d,0,"0,vd4d,vd54",SSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd59: MSTORE vd38(0x0), vd4d",0xd2d,0,"0,vd38,vd4d",MSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd5d: vd5d = SHA3 vd38(0x0), vd3f(0x20)",0xd2d,vd5d,"0,vd38,vd3f",SHA3,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd5e: vd5e = ADD vd5d, vd4f",0xd2d,vd5e,"0,vd5d,vd4f",ADD,checkManagerAllowance,public,False,0,0,0xd650x305
"    0xd62: SSTORE vd5e, vd2c_0",0xd2d,0,"0,vd5e,vd2c_0",SSTORE,checkManagerAllowance,public,False,0,0,0xd650x305
    Begin block 0xd650x305,0xd650x305,0,0,0,checkManagerAllowance,public,False,0,0,0xd650x305
"    prev=[0xd2d], succ=[0x3798]",0xd650x305,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
    =================================,0xd650x305,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
    0xd6a0x305: JUMP v314(0x3798),0xd650x305,0,"0,v314",JUMP,checkManagerAllowance,public,False,0,0,0x3798
    Begin block 0x3798,0x3798,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
"    prev=[0xd650x305], succ=[]",0x3798,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
    =================================,0x3798,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
    0x3799: v3799(0x40) = CONST ,0x3798,v3799,0,CONST,checkManagerAllowance,public,False,0x40,0,0x3798
    0x379c: v379c = MLOAD v3799(0x40),0x3798,v379c,"0,v3799",MLOAD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,0x3798
    0x379e: v379e = ISZERO vd50(0x1),0x3798,v379e,"0,vd50",ISZERO,checkManagerAllowance,public,False,0,0,0x3798
    0x379f: v379f = ISZERO v379e,0x3798,v379f,"0,v379e",ISZERO,checkManagerAllowance,public,False,0,0,0x3798
"    0x37a1: MSTORE v379c, v379f",0x3798,checkManagerAllowance&m0x40,"0,v379c,v379f",MSTORE,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,0x3798
    0x37a2: v37a2 = MLOAD v3799(0x40),0x3798,v37a2,"0,v3799",MLOAD,checkManagerAllowance,public,False,0,checkManagerAllowance&m0x40,0x3798
"    0x37a6: v37a6(0x0) = SUB v379c, v37a2",0x3798,v37a6,"0,v379c,v37a2",SUB,checkManagerAllowance,public,False,0x0,checkManagerAllowance&m0x40-0x0,0x3798
    0x37a7: v37a7(0x20) = CONST ,0x3798,v37a7,0,CONST,checkManagerAllowance,public,False,0x20,0,0x3798
"    0x37a9: v37a9(0x20) = ADD v37a7(0x20), v37a6(0x0)",0x3798,v37a9,"0,v37a7,v37a6",ADD,checkManagerAllowance,public,False,0x20,checkManagerAllowance&m0x40-0x0+0x20,0x3798
"    0x37ab: RETURN v37a2, v37a9(0x20)",0x3798,0,"0,v37a2,v37a9",RETURN,checkManagerAllowance,public,False,0,0,0x3798
},0x3798,0,0,0,checkManagerAllowance,public,False,0,0,0x3798
"function allowance(address,address)() public {",0x342,0,0,,allowance,public,False,0,0,0x3798
    Begin block 0x342,0x342,0,0,0,allowance,public,False,0,0,0x3798
"    prev=[], succ=[0x34b, 0x34f]",0x342,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
    =================================,0x342,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
    0x343: v343 = CALLVALUE ,0x342,v343,0,CALLVALUE,allowance,public,False,0,0,"0x34b, 0x34f"
    0x345: v345 = ISZERO v343,0x342,v345,"0,v343",ISZERO,allowance,public,False,0,0,"0x34b, 0x34f"
    0x346: v346(0x34f) = CONST ,0x342,v346,0,CONST,allowance,public,False,0x34f,0,"0x34b, 0x34f"
"    0x34a: JUMPI v346(0x34f), v345",0x342,0,"0,v346,v345",JUMPI,allowance,public,False,0,0,"0x34b, 0x34f"
    Begin block 0x34b,0x34b,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
"    prev=[0x342], succ=[]",0x34b,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
    =================================,0x34b,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
    0x34b: v34b(0x0) = CONST ,0x34b,v34b,0,CONST,allowance,public,False,0x0,0,"0x34b, 0x34f"
"    0x34e: REVERT v34b(0x0), v34b(0x0)",0x34b,0,"0,v34b,v34b",REVERT,allowance,public,False,0,0,"0x34b, 0x34f"
    Begin block 0x34f,0x34f,0,0,0,allowance,public,False,0,0,"0x34b, 0x34f"
"    prev=[0x342], succ=[0xd6b]",0x34f,0,0,0,allowance,public,False,0,0,0xd6b
    =================================,0x34f,0,0,0,allowance,public,False,0,0,0xd6b
    0x351: v351(0x37cb) = CONST ,0x34f,v351,0,CONST,allowance,public,False,0x37cb,0,0xd6b
    0x355: v355(0xd6b) = CONST ,0x34f,v355,0,CONST,allowance,public,False,0xd6b,0,0xd6b
    0x359: JUMP v355(0xd6b),0x34f,0,"0,v355",JUMP,allowance,public,False,0,0,0xd6b
    Begin block 0xd6b,0xd6b,0,0,0,allowance,public,False,0,0,0xd6b
"    prev=[0x34f], succ=[0x37cb]",0xd6b,0,0,0,allowance,public,False,0,0,0x37cb
    =================================,0xd6b,0,0,0,allowance,public,False,0,0,0x37cb
    0xd6c: vd6c(0x7) = CONST ,0xd6b,vd6c,0,CONST,allowance,public,False,0x7,0,0x37cb
    0xd6e: vd6e = SLOAD vd6c(0x7),0xd6b,vd6e,"0,vd6c",SLOAD,allowance,public,False,0,0,0x37cb
    0xd6f: vd6f(0x1) = CONST ,0xd6b,vd6f,0,CONST,allowance,public,False,0x1,0,0x37cb
    0xd71: vd71(0x1) = CONST ,0xd6b,vd71,0,CONST,allowance,public,False,0x1,0,0x37cb
    0xd73: vd73(0xa0) = CONST ,0xd6b,vd73,0,CONST,allowance,public,False,0xa0,0,0x37cb
"    0xd75: vd75(0x10000000000000000000000000000000000000000) = SHL vd73(0xa0), vd71(0x1)",0xd6b,vd75,"0,vd73,vd71",SHL,allowance,public,False,0x10000000000000000000000000000000000000000,0,0x37cb
"    0xd76: vd76(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd75(0x10000000000000000000000000000000000000000), vd6f(0x1)",0xd6b,vd76,"0,vd75,vd6f",SUB,allowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x37cb
"    0xd77: vd77 = AND vd76(0xffffffffffffffffffffffffffffffffffffffff), vd6e",0xd6b,vd77,"0,vd76,vd6e",AND,allowance,public,False,0,0,0x37cb
    0xd79: JUMP v351(0x37cb),0xd6b,0,"0,v351",JUMP,allowance,public,False,0,0,0x37cb
    Begin block 0x37cb,0x37cb,0,0,0,allowance,public,False,0,0,0x37cb
"    prev=[0xd6b], succ=[]",0x37cb,0,0,0,allowance,public,False,0,0,0x37cb
    =================================,0x37cb,0,0,0,allowance,public,False,0,0,0x37cb
    0x37cc: v37cc(0x40) = CONST ,0x37cb,v37cc,0,CONST,allowance,public,False,0x40,0,0x37cb
    0x37cf: v37cf = MLOAD v37cc(0x40),0x37cb,v37cf,"0,v37cc",MLOAD,allowance,public,False,0,allowance&m0x40,0x37cb
    0x37d0: v37d0(0x1) = CONST ,0x37cb,v37d0,0,CONST,allowance,public,False,0x1,0,0x37cb
    0x37d2: v37d2(0x1) = CONST ,0x37cb,v37d2,0,CONST,allowance,public,False,0x1,0,0x37cb
    0x37d4: v37d4(0xa0) = CONST ,0x37cb,v37d4,0,CONST,allowance,public,False,0xa0,0,0x37cb
"    0x37d6: v37d6(0x10000000000000000000000000000000000000000) = SHL v37d4(0xa0), v37d2(0x1)",0x37cb,v37d6,"0,v37d4,v37d2",SHL,allowance,public,False,0x10000000000000000000000000000000000000000,0,0x37cb
"    0x37d7: v37d7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v37d6(0x10000000000000000000000000000000000000000), v37d0(0x1)",0x37cb,v37d7,"0,v37d6,v37d0",SUB,allowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x37cb
"    0x37da: v37da = AND vd77, v37d7(0xffffffffffffffffffffffffffffffffffffffff)",0x37cb,v37da,"0,vd77,v37d7",AND,allowance,public,False,0,0,0x37cb
"    0x37dc: MSTORE v37cf, v37da",0x37cb,allowance&m0x40,"0,v37cf,v37da",MSTORE,allowance,public,False,0,allowance&m0x40,0x37cb
    0x37dd: v37dd = MLOAD v37cc(0x40),0x37cb,v37dd,"0,v37cc",MLOAD,allowance,public,False,0,allowance&m0x40,0x37cb
"    0x37e1: v37e1(0x0) = SUB v37cf, v37dd",0x37cb,v37e1,"0,v37cf,v37dd",SUB,allowance,public,False,0x0,allowance&m0x40-0x0,0x37cb
    0x37e2: v37e2(0x20) = CONST ,0x37cb,v37e2,0,CONST,allowance,public,False,0x20,0,0x37cb
"    0x37e4: v37e4(0x20) = ADD v37e2(0x20), v37e1(0x0)",0x37cb,v37e4,"0,v37e2,v37e1",ADD,allowance,public,False,0x20,allowance&m0x40-0x0+0x20,0x37cb
"    0x37e6: RETURN v37dd, v37e4(0x20)",0x37cb,0,"0,v37dd,v37e4",RETURN,allowance,public,False,0,0,0x37cb
},0x37cb,0,0,0,allowance,public,False,0,0,0x37cb
"function ETHForTokens(address,address)() public {",0x35a,0,0,,ETHForTokens,public,False,0,0,0x37cb
    Begin block 0x35a,0x35a,0,0,0,ETHForTokens,public,False,0,0,0x37cb
"    prev=[], succ=[0x36e, 0x372]",0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    =================================,0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    0x35b: v35b(0x3806) = CONST ,0x35a,v35b,0,CONST,ETHForTokens,public,False,0x3806,0,"0x36e, 0x372"
    0x35f: v35f(0x4) = CONST ,0x35a,v35f,0,CONST,ETHForTokens,public,False,0x4,0,"0x36e, 0x372"
    0x362: v362 = CALLDATASIZE ,0x35a,v362,0,CALLDATASIZE,ETHForTokens,public,False,0,0,"0x36e, 0x372"
"    0x363: v363 = SUB v362, v35f(0x4)",0x35a,v363,"0,v362,v35f",SUB,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    0x364: v364(0x40) = CONST ,0x35a,v364,0,CONST,ETHForTokens,public,False,0x40,0,"0x36e, 0x372"
"    0x367: v367 = LT v363, v364(0x40)",0x35a,v367,"0,v363,v364",LT,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    0x368: v368 = ISZERO v367,0x35a,v368,"0,v367",ISZERO,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    0x369: v369(0x372) = CONST ,0x35a,v369,0,CONST,ETHForTokens,public,False,0x372,0,"0x36e, 0x372"
"    0x36d: JUMPI v369(0x372), v368",0x35a,0,"0,v369,v368",JUMPI,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    Begin block 0x36e,0x36e,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
"    prev=[0x35a], succ=[]",0x36e,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    =================================,0x36e,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    0x36e: v36e(0x0) = CONST ,0x36e,v36e,0,CONST,ETHForTokens,public,False,0x0,0,"0x36e, 0x372"
"    0x371: REVERT v36e(0x0), v36e(0x0)",0x36e,0,"0,v36e,v36e",REVERT,ETHForTokens,public,False,0,0,"0x36e, 0x372"
    Begin block 0x372,0x372,0,0,0,ETHForTokens,public,False,0,0,"0x36e, 0x372"
"    prev=[0x35a], succ=[0xd7a]",0x372,0,0,0,ETHForTokens,public,False,0,0,0xd7a
    =================================,0x372,0,0,0,ETHForTokens,public,False,0,0,0xd7a
    0x374: v374(0x1) = CONST ,0x372,v374,0,CONST,ETHForTokens,public,False,0x1,0,0xd7a
    0x376: v376(0x1) = CONST ,0x372,v376,0,CONST,ETHForTokens,public,False,0x1,0,0xd7a
    0x378: v378(0xa0) = CONST ,0x372,v378,0,CONST,ETHForTokens,public,False,0xa0,0,0xd7a
"    0x37a: v37a(0x10000000000000000000000000000000000000000) = SHL v378(0xa0), v376(0x1)",0x372,v37a,"0,v378,v376",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0xd7a
"    0x37b: v37b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v37a(0x10000000000000000000000000000000000000000), v374(0x1)",0x372,v37b,"0,v37a,v374",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd7a
    0x37d: v37d = CALLDATALOAD v35f(0x4),0x372,v37d,"0,v35f",CALLDATALOAD,ETHForTokens,public,False,0,0,0xd7a
"    0x37f: v37f = AND v37b(0xffffffffffffffffffffffffffffffffffffffff), v37d",0x372,v37f,"0,v37b,v37d",AND,ETHForTokens,public,False,0,0,0xd7a
    0x381: v381(0x20) = CONST ,0x372,v381,0,CONST,ETHForTokens,public,False,0x20,0,0xd7a
"    0x383: v383(0x24) = ADD v381(0x20), v35f(0x4)",0x372,v383,"0,v381,v35f",ADD,ETHForTokens,public,False,0x24,0,0xd7a
    0x384: v384 = CALLDATALOAD v383(0x24),0x372,v384,"0,v383",CALLDATALOAD,ETHForTokens,public,False,0,0,0xd7a
"    0x385: v385 = AND v384, v37b(0xffffffffffffffffffffffffffffffffffffffff)",0x372,v385,"0,v384,v37b",AND,ETHForTokens,public,False,0,0,0xd7a
    0x386: v386(0xd7a) = CONST ,0x372,v386,0,CONST,ETHForTokens,public,False,0xd7a,0,0xd7a
    0x38a: JUMP v386(0xd7a),0x372,0,"0,v386",JUMP,ETHForTokens,public,False,0,0,0xd7a
    Begin block 0xd7a,0xd7a,0,0,0,ETHForTokens,public,False,0,0,0xd7a
"    prev=[0x372], succ=[0xd8b, 0xdc2]",0xd7a,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    =================================,0xd7a,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd7b: vd7b(0x0) = CONST ,0xd7a,vd7b,0,CONST,ETHForTokens,public,False,0x0,0,"0xd8b, 0xdc2"
    0xd7d: vd7d = SLOAD vd7b(0x0),0xd7a,vd7d,"0,vd7b",SLOAD,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd7e: vd7e(0xff) = CONST ,0xd7a,vd7e,0,CONST,ETHForTokens,public,False,0xff,0,"0xd8b, 0xdc2"
"    0xd80: vd80 = AND vd7e(0xff), vd7d",0xd7a,vd80,"0,vd7e,vd7d",AND,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd81: vd81 = ISZERO vd80,0xd7a,vd81,"0,vd80",ISZERO,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd82: vd82 = ISZERO vd81,0xd7a,vd82,"0,vd81",ISZERO,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd83: vd83(0x1) = CONST ,0xd7a,vd83,0,CONST,ETHForTokens,public,False,0x1,0,"0xd8b, 0xdc2"
"    0xd85: vd85 = EQ vd83(0x1), vd82",0xd7a,vd85,"0,vd83,vd82",EQ,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd86: vd86(0xdc2) = CONST ,0xd7a,vd86,0,CONST,ETHForTokens,public,False,0xdc2,0,"0xd8b, 0xdc2"
"    0xd8a: JUMPI vd86(0xdc2), vd85",0xd7a,0,"0,vd86,vd85",JUMPI,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    Begin block 0xd8b,0xd8b,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
"    prev=[0xd7a], succ=[]",0xd8b,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    =================================,0xd8b,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xd8b: vd8b(0x40) = CONST ,0xd8b,vd8b,0,CONST,ETHForTokens,public,False,0x40,0,"0xd8b, 0xdc2"
    0xd8d: vd8d = MLOAD vd8b(0x40),0xd8b,vd8d,"0,vd8b",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xd8b, 0xdc2"
    0xd8e: vd8e(0x461bcd) = CONST ,0xd8b,vd8e,0,CONST,ETHForTokens,public,False,0x461bcd,0,"0xd8b, 0xdc2"
    0xd92: vd92(0xe5) = CONST ,0xd8b,vd92,0,CONST,ETHForTokens,public,False,0xe5,0,"0xd8b, 0xdc2"
"    0xd94: vd94(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vd92(0xe5), vd8e(0x461bcd)",0xd8b,vd94,"0,vd92,vd8e",SHL,ETHForTokens,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xd8b, 0xdc2"
"    0xd96: MSTORE vd8d, vd94(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xd8b,ETHForTokens&m0x40,"0,vd8d,vd94",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xd8b, 0xdc2"
    0xd97: vd97(0x4) = CONST ,0xd8b,vd97,0,CONST,ETHForTokens,public,False,0x4,0,"0xd8b, 0xdc2"
"    0xd99: vd99 = ADD vd97(0x4), vd8d",0xd8b,vd99,"0,vd97,vd8d",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0xd8b, 0xdc2"
    0xd9c: vd9c(0x20) = CONST ,0xd8b,vd9c,0,CONST,ETHForTokens,public,False,0x20,0,"0xd8b, 0xdc2"
"    0xd9e: vd9e = ADD vd9c(0x20), vd99",0xd8b,vd9e,"0,vd9c,vd99",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20,"0xd8b, 0xdc2"
"    0xda1: vda1(0x20) = SUB vd9e, vd99",0xd8b,vda1,"0,vd9e,vd99",SUB,ETHForTokens,public,False,0x20,ETHForTokens&m0x40+0x4+0x20-0x20,"0xd8b, 0xdc2"
"    0xda3: MSTORE vd99, vda1(0x20)",0xd8b,ETHForTokens&m0x40+0x4,"0,vd99,vda1",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0xd8b, 0xdc2"
    0xda4: vda4(0x32) = CONST ,0xd8b,vda4,0,CONST,ETHForTokens,public,False,0x32,0,"0xd8b, 0xdc2"
"    0xda7: MSTORE vd9e, vda4(0x32)",0xd8b,ETHForTokens&m0x40+0x4+0x20,"0,vd9e,vda4",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20,"0xd8b, 0xdc2"
    0xda8: vda8(0x20) = CONST ,0xd8b,vda8,0,CONST,ETHForTokens,public,False,0x20,0,"0xd8b, 0xdc2"
"    0xdaa: vdaa = ADD vda8(0x20), vd9e",0xd8b,vdaa,"0,vda8,vd9e",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20+0x20,"0xd8b, 0xdc2"
    0xdac: vdac(0x3466) = CONST ,0xd8b,vdac,0,CONST,ETHForTokens,public,False,0x3466,0,"0xd8b, 0xdc2"
    0xdb0: vdb0(0x32) = CONST ,0xd8b,vdb0,0,CONST,ETHForTokens,public,False,0x32,0,"0xd8b, 0xdc2"
"    0xdb3: CODECOPY vdaa, vdac(0x3466), vdb0(0x32)",0xd8b,0,"0,vdaa,vdac,vdb0",CODECOPY,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    0xdb4: vdb4(0x40) = CONST ,0xd8b,vdb4,0,CONST,ETHForTokens,public,False,0x40,0,"0xd8b, 0xdc2"
"    0xdb6: vdb6 = ADD vdb4(0x40), vdaa",0xd8b,vdb6,"0,vdb4,vdaa",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20+0x20+0x40,"0xd8b, 0xdc2"
    0xdba: vdba(0x40) = CONST ,0xd8b,vdba,0,CONST,ETHForTokens,public,False,0x40,0,"0xd8b, 0xdc2"
    0xdbc: vdbc = MLOAD vdba(0x40),0xd8b,vdbc,"0,vdba",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xd8b, 0xdc2"
"    0xdbf: vdbf(0x84) = SUB vdb6, vdbc",0xd8b,vdbf,"0,vdb6,vdbc",SUB,ETHForTokens,public,False,0x84,ETHForTokens&m0x40+0x4+0x20+0x20+0x40-0x84,"0xd8b, 0xdc2"
"    0xdc1: REVERT vdbc, vdbf(0x84)",0xd8b,0,"0,vdbc,vdbf",REVERT,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
    Begin block 0xdc2,0xdc2,0,0,0,ETHForTokens,public,False,0,0,"0xd8b, 0xdc2"
"    prev=[0xd7a], succ=[0xdeb, 0xdef]",0xdc2,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    =================================,0xdc2,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xdc3: vdc3(0x1) = CONST ,0xdc2,vdc3,0,CONST,ETHForTokens,public,False,0x1,0,"0xdeb, 0xdef"
    0xdc5: vdc5(0x1) = CONST ,0xdc2,vdc5,0,CONST,ETHForTokens,public,False,0x1,0,"0xdeb, 0xdef"
    0xdc7: vdc7(0xa0) = CONST ,0xdc2,vdc7,0,CONST,ETHForTokens,public,False,0xa0,0,"0xdeb, 0xdef"
"    0xdc9: vdc9(0x10000000000000000000000000000000000000000) = SHL vdc7(0xa0), vdc5(0x1)",0xdc2,vdc9,"0,vdc7,vdc5",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,"0xdeb, 0xdef"
"    0xdca: vdca(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdc9(0x10000000000000000000000000000000000000000), vdc3(0x1)",0xdc2,vdca,"0,vdc9,vdc3",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xdeb, 0xdef"
"    0xdcd: vdcd = AND vdca(0xffffffffffffffffffffffffffffffffffffffff), v37f",0xdc2,vdcd,"0,vdca,v37f",AND,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xdce: vdce(0x0) = CONST ,0xdc2,vdce,0,CONST,ETHForTokens,public,False,0x0,0,"0xdeb, 0xdef"
"    0xdd2: MSTORE vdce(0x0), vdcd",0xdc2,0,"0,vdce,vdcd",MSTORE,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xdd3: vdd3(0x3) = CONST ,0xdc2,vdd3,0,CONST,ETHForTokens,public,False,0x3,0,"0xdeb, 0xdef"
    0xdd5: vdd5(0x20) = CONST ,0xdc2,vdd5,0,CONST,ETHForTokens,public,False,0x20,0,"0xdeb, 0xdef"
"    0xdd7: MSTORE vdd5(0x20), vdd3(0x3)",0xdc2,0,"0,vdd5,vdd3",MSTORE,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xdd8: vdd8(0x40) = CONST ,0xdc2,vdd8,0,CONST,ETHForTokens,public,False,0x40,0,"0xdeb, 0xdef"
"    0xddb: vddb = SHA3 vdce(0x0), vdd8(0x40)",0xdc2,vddb,"0,vdce,vdd8",SHA3,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xddc: vddc(0x9) = CONST ,0xdc2,vddc,0,CONST,ETHForTokens,public,False,0x9,0,"0xdeb, 0xdef"
"    0xdde: vdde = ADD vddc(0x9), vddb",0xdc2,vdde,"0,vddc,vddb",ADD,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xddf: vddf = SLOAD vdde,0xdc2,vddf,"0,vdde",SLOAD,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
"    0xde1: vde1 = AND vdca(0xffffffffffffffffffffffffffffffffffffffff), vddf",0xdc2,vde1,"0,vdca,vddf",AND,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
"    0xde4: vde4 = AND v385, vdca(0xffffffffffffffffffffffffffffffffffffffff)",0xdc2,vde4,"0,v385,vdca",AND,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
"    0xde5: vde5 = EQ vde4, vde1",0xdc2,vde5,"0,vde4,vde1",EQ,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xde6: vde6(0xdef) = CONST ,0xdc2,vde6,0,CONST,ETHForTokens,public,False,0xdef,0,"0xdeb, 0xdef"
"    0xdea: JUMPI vde6(0xdef), vde5",0xdc2,0,"0,vde6,vde5",JUMPI,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    Begin block 0xdeb,0xdeb,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
"    prev=[0xdc2], succ=[]",0xdeb,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    =================================,0xdeb,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    0xdeb: vdeb(0x0) = CONST ,0xdeb,vdeb,0,CONST,ETHForTokens,public,False,0x0,0,"0xdeb, 0xdef"
"    0xdee: REVERT vdeb(0x0), vdeb(0x0)",0xdeb,0,"0,vdeb,vdeb",REVERT,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
    Begin block 0xdef,0xdef,0,0,0,ETHForTokens,public,False,0,0,"0xdeb, 0xdef"
"    prev=[0xdc2], succ=[0x3a80]",0xdef,0,0,0,ETHForTokens,public,False,0,0,0x3a80
    =================================,0xdef,0,0,0,ETHForTokens,public,False,0,0,0x3a80
    0xdf0: vdf0(0x0) = CONST ,0xdef,vdf0,0,CONST,ETHForTokens,public,False,0x0,0,0x3a80
    0xdf2: vdf2(0xe11) = CONST ,0xdef,vdf2,0,CONST,ETHForTokens,public,False,0xe11,0,0x3a80
    0xdf6: vdf6(0xa) = CONST ,0xdef,vdf6,0,CONST,ETHForTokens,public,False,0xa,0,0x3a80
    0xdf8: vdf8(0xe0a) = CONST ,0xdef,vdf8,0,CONST,ETHForTokens,public,False,0xe0a,0,0x3a80
    0xdfc: vdfc(0x64) = CONST ,0xdef,vdfc,0,CONST,ETHForTokens,public,False,0x64,0,0x3a80
    0xdfe: vdfe(0x3a80) = CONST ,0xdef,vdfe,0,CONST,ETHForTokens,public,False,0x3a80,0,0x3a80
    0xe02: ve02 = CALLVALUE ,0xdef,ve02,0,CALLVALUE,ETHForTokens,public,False,0,0,0x3a80
    0xe03: ve03(0x1) = CONST ,0xdef,ve03,0,CONST,ETHForTokens,public,False,0x1,0,0x3a80
    0xe05: ve05(0x1a1e) = CONST ,0xdef,ve05,0,CONST,ETHForTokens,public,False,0x1a1e,0,0x3a80
"    0xe09: ve09_0 = CALLPRIVATE ve05(0x1a1e), ve03(0x1), ve02, vdfe(0x3a80)",0xdef,ve09_0,"0,ve05,ve03,ve02,vdfe",CALLPRIVATE,ETHForTokens,public,False,0,0,0x3a80
    Begin block 0x3a80,0x3a80,0,0,0,ETHForTokens,public,False,0,0,0x3a80
"    prev=[0xdef], succ=[0xe0a]",0x3a80,0,0,0,ETHForTokens,public,False,0,0,0xe0a
    =================================,0x3a80,0,0,0,ETHForTokens,public,False,0,0,0xe0a
    0x3a82: v3a82(0x1a83) = CONST ,0x3a80,v3a82,0,CONST,ETHForTokens,public,False,0x1a83,0,0xe0a
"    0x3a86: v3a86_0 = CALLPRIVATE v3a82(0x1a83), vdfc(0x64), ve09_0, vdf8(0xe0a)",0x3a80,v3a86_0,"0,v3a82,vdfc,ve09_0,vdf8",CALLPRIVATE,ETHForTokens,public,False,0,0,0xe0a
    Begin block 0xe0a,0xe0a,0,0,0,ETHForTokens,public,False,0,0,0xe0a
"    prev=[0x3a80], succ=[0x1bfcB0xe0a]",0xe0a,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0xe0a
    =================================,0xe0a,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0xe0a
    0xe0c: ve0c(0x1bfc) = CONST ,0xe0a,ve0c,0,CONST,ETHForTokens,public,False,0x1bfc,0,0x1bfcB0xe0a
    0xe10: JUMP ve0c(0x1bfc),0xe0a,0,"0,ve0c",JUMP,ETHForTokens,public,False,0,0,0x1bfcB0xe0a
    Begin block 0x1bfcB0xe0a,0x1bfcB0xe0a,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0xe0a
"    prev=[0xe0a], succ=[0x1c0bB0xe0a, 0x3c4eB0xe0a]",0x1bfcB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    =================================,0x1bfcB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1bfdS0xe0a: v1bfdVe0a(0x0) = CONST ,0x1bfcB0xe0a,v1bfdVe0a,0,CONST,ETHForTokens,public,False,0x0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c01S0xe0a: v1c01Ve0a = ADD vdf6(0xa), v3a86_0",0x1bfcB0xe0a,v1c01Ve0a,"0,vdf6,v3a86_0",ADD,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c04S0xe0a: v1c04Ve0a = LT v1c01Ve0a, v3a86_0",0x1bfcB0xe0a,v1c04Ve0a,"0,v1c01Ve0a,v3a86_0",LT,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c05S0xe0a: v1c05Ve0a = ISZERO v1c04Ve0a,0x1bfcB0xe0a,v1c05Ve0a,"0,v1c04Ve0a",ISZERO,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c06S0xe0a: v1c06Ve0a(0x3c4e) = CONST ,0x1bfcB0xe0a,v1c06Ve0a,0,CONST,ETHForTokens,public,False,0x3c4e,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c0aS0xe0a: JUMPI v1c06Ve0a(0x3c4e), v1c05Ve0a",0x1bfcB0xe0a,0,"0,v1c06Ve0a,v1c05Ve0a",JUMPI,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    Begin block 0x1c0bB0xe0a,0x1c0bB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    prev=[0x1bfcB0xe0a], succ=[]",0x1c0bB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    =================================,0x1c0bB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c0bS0xe0a: v1c0bVe0a(0x40) = CONST ,0x1c0bB0xe0a,v1c0bVe0a,0,CONST,ETHForTokens,public,False,0x40,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c0eS0xe0a: v1c0eVe0a = MLOAD v1c0bVe0a(0x40),0x1c0bB0xe0a,v1c0eVe0a,"0,v1c0bVe0a",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c0fS0xe0a: v1c0fVe0a(0x461bcd) = CONST ,0x1c0bB0xe0a,v1c0fVe0a,0,CONST,ETHForTokens,public,False,0x461bcd,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c13S0xe0a: v1c13Ve0a(0xe5) = CONST ,0x1c0bB0xe0a,v1c13Ve0a,0,CONST,ETHForTokens,public,False,0xe5,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c15S0xe0a: v1c15Ve0a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1c13Ve0a(0xe5), v1c0fVe0a(0x461bcd)",0x1c0bB0xe0a,v1c15Ve0a,"0,v1c13Ve0a,v1c0fVe0a",SHL,ETHForTokens,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c17S0xe0a: MSTORE v1c0eVe0a, v1c15Ve0a(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1c0bB0xe0a,ETHForTokens&m0x40,"0,v1c0eVe0a,v1c15Ve0a",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c18S0xe0a: v1c18Ve0a(0x20) = CONST ,0x1c0bB0xe0a,v1c18Ve0a,0,CONST,ETHForTokens,public,False,0x20,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c1aS0xe0a: v1c1aVe0a(0x4) = CONST ,0x1c0bB0xe0a,v1c1aVe0a,0,CONST,ETHForTokens,public,False,0x4,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c1dS0xe0a: v1c1dVe0a = ADD v1c0eVe0a, v1c1aVe0a(0x4)",0x1c0bB0xe0a,v1c1dVe0a,"0,v1c0eVe0a,v1c1aVe0a",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c1eS0xe0a: MSTORE v1c1dVe0a, v1c18Ve0a(0x20)",0x1c0bB0xe0a,ETHForTokens&m0x40+0x4,"0,v1c1dVe0a,v1c18Ve0a",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c1fS0xe0a: v1c1fVe0a(0x1b) = CONST ,0x1c0bB0xe0a,v1c1fVe0a,0,CONST,ETHForTokens,public,False,0x1b,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c21S0xe0a: v1c21Ve0a(0x24) = CONST ,0x1c0bB0xe0a,v1c21Ve0a,0,CONST,ETHForTokens,public,False,0x24,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c24S0xe0a: v1c24Ve0a = ADD v1c0eVe0a, v1c21Ve0a(0x24)",0x1c0bB0xe0a,v1c24Ve0a,"0,v1c0eVe0a,v1c21Ve0a",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c25S0xe0a: MSTORE v1c24Ve0a, v1c1fVe0a(0x1b)",0x1c0bB0xe0a,ETHForTokens&m0x40+0x24,"0,v1c24Ve0a,v1c1fVe0a",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c26S0xe0a: v1c26Ve0a(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST ,0x1c0bB0xe0a,v1c26Ve0a,0,CONST,ETHForTokens,public,False,0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c47S0xe0a: v1c47Ve0a(0x44) = CONST ,0x1c0bB0xe0a,v1c47Ve0a,0,CONST,ETHForTokens,public,False,0x44,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c4aS0xe0a: v1c4aVe0a = ADD v1c0eVe0a, v1c47Ve0a(0x44)",0x1c0bB0xe0a,v1c4aVe0a,"0,v1c0eVe0a,v1c47Ve0a",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c4bS0xe0a: MSTORE v1c4aVe0a, v1c26Ve0a(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)",0x1c0bB0xe0a,ETHForTokens&m0x40+0x44,"0,v1c4aVe0a,v1c26Ve0a",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c4dS0xe0a: v1c4dVe0a = MLOAD v1c0bVe0a(0x40),0x1c0bB0xe0a,v1c4dVe0a,"0,v1c0bVe0a",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c51S0xe0a: v1c51Ve0a(0x0) = SUB v1c0eVe0a, v1c4dVe0a",0x1c0bB0xe0a,v1c51Ve0a,"0,v1c0eVe0a,v1c4dVe0a",SUB,ETHForTokens,public,False,0x0,ETHForTokens&m0x40-0x0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    0x1c52S0xe0a: v1c52Ve0a(0x64) = CONST ,0x1c0bB0xe0a,v1c52Ve0a,0,CONST,ETHForTokens,public,False,0x64,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c54S0xe0a: v1c54Ve0a(0x64) = ADD v1c52Ve0a(0x64), v1c51Ve0a(0x0)",0x1c0bB0xe0a,v1c54Ve0a,"0,v1c52Ve0a,v1c51Ve0a",ADD,ETHForTokens,public,False,0x64,ETHForTokens&m0x40-0x0+0x64,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    0x1c56S0xe0a: REVERT v1c4dVe0a, v1c54Ve0a(0x64)",0x1c0bB0xe0a,0,"0,v1c4dVe0a,v1c54Ve0a",REVERT,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
    Begin block 0x3c4eB0xe0a,0x3c4eB0xe0a,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0xe0a, 0x3c4eB0xe0a"
"    prev=[0x1bfcB0xe0a], succ=[0xe11]",0x3c4eB0xe0a,0,0,0,ETHForTokens,public,False,0,0,0xe11
    =================================,0x3c4eB0xe0a,0,0,0,ETHForTokens,public,False,0,0,0xe11
    0x3c54S0xe0a: JUMP vdf2(0xe11),0x3c4eB0xe0a,0,"0,vdf2",JUMP,ETHForTokens,public,False,0,0,0xe11
    Begin block 0xe11,0xe11,0,0,0,ETHForTokens,public,False,0,0,0xe11
"    prev=[0x3c4eB0xe0a], succ=[0xe2d]",0xe11,0,0,0,ETHForTokens,public,False,0,0,0xe2d
    =================================,0xe11,0,0,0,ETHForTokens,public,False,0,0,0xe2d
    0xe12: ve12(0x9) = CONST ,0xe11,ve12,0,CONST,ETHForTokens,public,False,0x9,0,0xe2d
    0xe14: ve14 = SLOAD ve12(0x9),0xe11,ve14,"0,ve12",SLOAD,ETHForTokens,public,False,0,0,0xe2d
    0xe18: ve18(0x1) = CONST ,0xe11,ve18,0,CONST,ETHForTokens,public,False,0x1,0,0xe2d
    0xe1a: ve1a(0x1) = CONST ,0xe11,ve1a,0,CONST,ETHForTokens,public,False,0x1,0,0xe2d
    0xe1c: ve1c(0xa0) = CONST ,0xe11,ve1c,0,CONST,ETHForTokens,public,False,0xa0,0,0xe2d
"    0xe1e: ve1e(0x10000000000000000000000000000000000000000) = SHL ve1c(0xa0), ve1a(0x1)",0xe11,ve1e,"0,ve1c,ve1a",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0xe2d
"    0xe1f: ve1f(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve1e(0x10000000000000000000000000000000000000000), ve18(0x1)",0xe11,ve1f,"0,ve1e,ve18",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xe2d
"    0xe20: ve20 = AND ve1f(0xffffffffffffffffffffffffffffffffffffffff), ve14",0xe11,ve20,"0,ve1f,ve14",AND,ETHForTokens,public,False,0,0,0xe2d
    0xe21: ve21(0xe2d) = CONST ,0xe11,ve21,0,CONST,ETHForTokens,public,False,0xe2d,0,0xe2d
    0xe26: ve26(0xa) = CONST ,0xe11,ve26,0,CONST,ETHForTokens,public,False,0xa,0,0xe2d
    0xe28: ve28(0x1a83) = CONST ,0xe11,ve28,0,CONST,ETHForTokens,public,False,0x1a83,0,0xe2d
"    0xe2c: ve2c_0 = CALLPRIVATE ve28(0x1a83), ve26(0xa), v1c01Ve0a, ve21(0xe2d)",0xe11,ve2c_0,"0,ve28,ve26,v1c01Ve0a,ve21",CALLPRIVATE,ETHForTokens,public,False,0,0,0xe2d
    Begin block 0xe2d,0xe2d,0,0,0,ETHForTokens,public,False,0,0,0xe2d
"    prev=[0xe11], succ=[0xe49, 0xe6b]",0xe2d,0,0,0,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    =================================,0xe2d,0,0,0,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    0xe2e: ve2e(0x40) = CONST ,0xe2d,ve2e,0,CONST,ETHForTokens,public,False,0x40,0,"0xe49, 0xe6b"
    0xe30: ve30 = MLOAD ve2e(0x40),0xe2d,ve30,"0,ve2e",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xe49, 0xe6b"
    0xe31: ve31(0x0) = CONST ,0xe2d,ve31,0,CONST,ETHForTokens,public,False,0x0,0,"0xe49, 0xe6b"
    0xe38: ve38 = GAS ,0xe2d,ve38,0,GAS,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
"    0xe39: ve39 = CALL ve38, ve20, ve2c_0, ve30, ve31(0x0), ve30, ve31(0x0)",0xe2d,ve39,"0,ve38,ve20,ve2c_0,ve30,ve31,ve30,ve31",CALL,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    0xe3e: ve3e = RETURNDATASIZE ,0xe2d,ve3e,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    0xe40: ve40(0x0) = CONST ,0xe2d,ve40,0,CONST,ETHForTokens,public,False,0x0,0,"0xe49, 0xe6b"
"    0xe43: ve43 = EQ ve3e, ve40(0x0)",0xe2d,ve43,"0,ve3e,ve40",EQ,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    0xe44: ve44(0xe6b) = CONST ,0xe2d,ve44,0,CONST,ETHForTokens,public,False,0xe6b,0,"0xe49, 0xe6b"
"    0xe48: JUMPI ve44(0xe6b), ve43",0xe2d,0,"0,ve44,ve43",JUMPI,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
    Begin block 0xe49,0xe49,0,0,0,ETHForTokens,public,False,0,0,"0xe49, 0xe6b"
"    prev=[0xe2d], succ=[0xe70]",0xe49,0,0,0,ETHForTokens,public,False,0,0,0xe70
    =================================,0xe49,0,0,0,ETHForTokens,public,False,0,0,0xe70
    0xe49: ve49(0x40) = CONST ,0xe49,ve49,0,CONST,ETHForTokens,public,False,0x40,0,0xe70
    0xe4b: ve4b = MLOAD ve49(0x40),0xe49,ve4b,"0,ve49",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xe70
    0xe4e: ve4e(0x1f) = CONST ,0xe49,ve4e,0,CONST,ETHForTokens,public,False,0x1f,0,0xe70
    0xe50: ve50(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT ve4e(0x1f),0xe49,ve50,"0,ve4e",NOT,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xe70
    0xe51: ve51(0x3f) = CONST ,0xe49,ve51,0,CONST,ETHForTokens,public,False,0x3f,0,0xe70
    0xe53: ve53 = RETURNDATASIZE ,0xe49,ve53,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xe70
"    0xe54: ve54 = ADD ve53, ve51(0x3f)",0xe49,ve54,"0,ve53,ve51",ADD,ETHForTokens,public,False,0,0,0xe70
"    0xe55: ve55 = AND ve54, ve50(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xe49,ve55,"0,ve54,ve50",AND,ETHForTokens,public,False,0,0,0xe70
"    0xe57: ve57 = ADD ve4b, ve55",0xe49,ve57,"0,ve4b,ve55",ADD,ETHForTokens,public,False,0,0,0xe70
    0xe58: ve58(0x40) = CONST ,0xe49,ve58,0,CONST,ETHForTokens,public,False,0x40,0,0xe70
"    0xe5a: MSTORE ve58(0x40), ve57",0xe49,0,"0,ve58,ve57",MSTORE,ETHForTokens,public,False,0,0,0xe70
    0xe5b: ve5b = RETURNDATASIZE ,0xe49,ve5b,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xe70
"    0xe5d: MSTORE ve4b, ve5b",0xe49,ETHForTokens&m0x40,"0,ve4b,ve5b",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xe70
    0xe5e: ve5e = RETURNDATASIZE ,0xe49,ve5e,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xe70
    0xe5f: ve5f(0x0) = CONST ,0xe49,ve5f,0,CONST,ETHForTokens,public,False,0x0,0,0xe70
    0xe61: ve61(0x20) = CONST ,0xe49,ve61,0,CONST,ETHForTokens,public,False,0x20,0,0xe70
"    0xe64: ve64 = ADD ve4b, ve61(0x20)",0xe49,ve64,"0,ve4b,ve61",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x20,0xe70
"    0xe65: RETURNDATACOPY ve64, ve5f(0x0), ve5e",0xe49,0,"0,ve64,ve5f,ve5e",RETURNDATACOPY,ETHForTokens,public,False,0,0,0xe70
    0xe66: ve66(0xe70) = CONST ,0xe49,ve66,0,CONST,ETHForTokens,public,False,0xe70,0,0xe70
    0xe6a: JUMP ve66(0xe70),0xe49,0,"0,ve66",JUMP,ETHForTokens,public,False,0,0,0xe70
    Begin block 0xe70,0xe70,0,0,0,ETHForTokens,public,False,0,0,0xe70
"    prev=[0xe49, 0xe6b], succ=[0xe91]",0xe70,0,0,0,ETHForTokens,public,False,0,0,0xe91
    =================================,0xe70,0,0,0,ETHForTokens,public,False,0,0,0xe91
    0xe73: ve73(0x8) = CONST ,0xe70,ve73,0,CONST,ETHForTokens,public,False,0x8,0,0xe91
    0xe75: ve75 = SLOAD ve73(0x8),0xe70,ve75,"0,ve73",SLOAD,ETHForTokens,public,False,0,0,0xe91
    0xe76: ve76(0x1) = CONST ,0xe70,ve76,0,CONST,ETHForTokens,public,False,0x1,0,0xe91
    0xe78: ve78(0x1) = CONST ,0xe70,ve78,0,CONST,ETHForTokens,public,False,0x1,0,0xe91
    0xe7a: ve7a(0xa0) = CONST ,0xe70,ve7a,0,CONST,ETHForTokens,public,False,0xa0,0,0xe91
"    0xe7c: ve7c(0x10000000000000000000000000000000000000000) = SHL ve7a(0xa0), ve78(0x1)",0xe70,ve7c,"0,ve7a,ve78",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0xe91
"    0xe7d: ve7d(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve7c(0x10000000000000000000000000000000000000000), ve76(0x1)",0xe70,ve7d,"0,ve7c,ve76",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xe91
"    0xe7e: ve7e = AND ve7d(0xffffffffffffffffffffffffffffffffffffffff), ve75",0xe70,ve7e,"0,ve7d,ve75",AND,ETHForTokens,public,False,0,0,0xe91
    0xe81: ve81(0xe99) = CONST ,0xe70,ve81,0,CONST,ETHForTokens,public,False,0xe99,0,0xe91
    0xe85: ve85(0xe91) = CONST ,0xe70,ve85,0,CONST,ETHForTokens,public,False,0xe91,0,0xe91
    0xe8a: ve8a(0xa) = CONST ,0xe70,ve8a,0,CONST,ETHForTokens,public,False,0xa,0,0xe91
    0xe8c: ve8c(0x1a83) = CONST ,0xe70,ve8c,0,CONST,ETHForTokens,public,False,0x1a83,0,0xe91
"    0xe90: ve90_0 = CALLPRIVATE ve8c(0x1a83), ve8a(0xa), v1c01Ve0a, ve85(0xe91)",0xe70,ve90_0,"0,ve8c,ve8a,v1c01Ve0a,ve85",CALLPRIVATE,ETHForTokens,public,False,0,0,0xe91
    Begin block 0xe91,0xe91,0,0,0,ETHForTokens,public,False,0,0,0xe91
"    prev=[0xe70], succ=[0xe99]",0xe91,0,0,0,ETHForTokens,public,False,0,0,0xe99
    =================================,0xe91,0,0,0,ETHForTokens,public,False,0,0,0xe99
    0xe94: ve94(0x1ac7) = CONST ,0xe91,ve94,0,CONST,ETHForTokens,public,False,0x1ac7,0,0xe99
"    0xe98: ve98_0 = CALLPRIVATE ve94(0x1ac7), ve90_0, v1c01Ve0a, ve81(0xe99)",0xe91,ve98_0,"0,ve94,ve90_0,v1c01Ve0a,ve81",CALLPRIVATE,ETHForTokens,public,False,0,0,0xe99
    Begin block 0xe99,0xe99,0,0,0,ETHForTokens,public,False,0,0,0xe99
"    prev=[0xe91], succ=[0xeb5, 0xed7]",0xe99,0,0,0,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    =================================,0xe99,0,0,0,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    0xe9a: ve9a(0x40) = CONST ,0xe99,ve9a,0,CONST,ETHForTokens,public,False,0x40,0,"0xeb5, 0xed7"
    0xe9c: ve9c = MLOAD ve9a(0x40),0xe99,ve9c,"0,ve9a",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xeb5, 0xed7"
    0xe9d: ve9d(0x0) = CONST ,0xe99,ve9d,0,CONST,ETHForTokens,public,False,0x0,0,"0xeb5, 0xed7"
    0xea4: vea4 = GAS ,0xe99,vea4,0,GAS,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
"    0xea5: vea5 = CALL vea4, ve7e, ve98_0, ve9c, ve9d(0x0), ve9c, ve9d(0x0)",0xe99,vea5,"0,vea4,ve7e,ve98_0,ve9c,ve9d,ve9c,ve9d",CALL,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    0xeaa: veaa = RETURNDATASIZE ,0xe99,veaa,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    0xeac: veac(0x0) = CONST ,0xe99,veac,0,CONST,ETHForTokens,public,False,0x0,0,"0xeb5, 0xed7"
"    0xeaf: veaf = EQ veaa, veac(0x0)",0xe99,veaf,"0,veaa,veac",EQ,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    0xeb0: veb0(0xed7) = CONST ,0xe99,veb0,0,CONST,ETHForTokens,public,False,0xed7,0,"0xeb5, 0xed7"
"    0xeb4: JUMPI veb0(0xed7), veaf",0xe99,0,"0,veb0,veaf",JUMPI,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
    Begin block 0xeb5,0xeb5,0,0,0,ETHForTokens,public,False,0,0,"0xeb5, 0xed7"
"    prev=[0xe99], succ=[0xedc]",0xeb5,0,0,0,ETHForTokens,public,False,0,0,0xedc
    =================================,0xeb5,0,0,0,ETHForTokens,public,False,0,0,0xedc
    0xeb5: veb5(0x40) = CONST ,0xeb5,veb5,0,CONST,ETHForTokens,public,False,0x40,0,0xedc
    0xeb7: veb7 = MLOAD veb5(0x40),0xeb5,veb7,"0,veb5",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xedc
    0xeba: veba(0x1f) = CONST ,0xeb5,veba,0,CONST,ETHForTokens,public,False,0x1f,0,0xedc
    0xebc: vebc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT veba(0x1f),0xeb5,vebc,"0,veba",NOT,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xedc
    0xebd: vebd(0x3f) = CONST ,0xeb5,vebd,0,CONST,ETHForTokens,public,False,0x3f,0,0xedc
    0xebf: vebf = RETURNDATASIZE ,0xeb5,vebf,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xedc
"    0xec0: vec0 = ADD vebf, vebd(0x3f)",0xeb5,vec0,"0,vebf,vebd",ADD,ETHForTokens,public,False,0,0,0xedc
"    0xec1: vec1 = AND vec0, vebc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xeb5,vec1,"0,vec0,vebc",AND,ETHForTokens,public,False,0,0,0xedc
"    0xec3: vec3 = ADD veb7, vec1",0xeb5,vec3,"0,veb7,vec1",ADD,ETHForTokens,public,False,0,0,0xedc
    0xec4: vec4(0x40) = CONST ,0xeb5,vec4,0,CONST,ETHForTokens,public,False,0x40,0,0xedc
"    0xec6: MSTORE vec4(0x40), vec3",0xeb5,0,"0,vec4,vec3",MSTORE,ETHForTokens,public,False,0,0,0xedc
    0xec7: vec7 = RETURNDATASIZE ,0xeb5,vec7,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xedc
"    0xec9: MSTORE veb7, vec7",0xeb5,ETHForTokens&m0x40,"0,veb7,vec7",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xedc
    0xeca: veca = RETURNDATASIZE ,0xeb5,veca,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xedc
    0xecb: vecb(0x0) = CONST ,0xeb5,vecb,0,CONST,ETHForTokens,public,False,0x0,0,0xedc
    0xecd: vecd(0x20) = CONST ,0xeb5,vecd,0,CONST,ETHForTokens,public,False,0x20,0,0xedc
"    0xed0: ved0 = ADD veb7, vecd(0x20)",0xeb5,ved0,"0,veb7,vecd",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x20,0xedc
"    0xed1: RETURNDATACOPY ved0, vecb(0x0), veca",0xeb5,0,"0,ved0,vecb,veca",RETURNDATACOPY,ETHForTokens,public,False,0,0,0xedc
    0xed2: ved2(0xedc) = CONST ,0xeb5,ved2,0,CONST,ETHForTokens,public,False,0xedc,0,0xedc
    0xed6: JUMP ved2(0xedc),0xeb5,0,"0,ved2",JUMP,ETHForTokens,public,False,0,0,0xedc
    Begin block 0xedc,0xedc,0,0,0,ETHForTokens,public,False,0,0,0xedc
"    prev=[0xeb5, 0xed7], succ=[0xef8]",0xedc,0,0,0,ETHForTokens,public,False,0,0,0xef8
    =================================,0xedc,0,0,0,ETHForTokens,public,False,0,0,0xef8
    0xedf: vedf(0x5) = CONST ,0xedc,vedf,0,CONST,ETHForTokens,public,False,0x5,0,0xef8
    0xee1: vee1 = SLOAD vedf(0x5),0xedc,vee1,"0,vedf",SLOAD,ETHForTokens,public,False,0,0,0xef8
    0xee2: vee2(0x1) = CONST ,0xedc,vee2,0,CONST,ETHForTokens,public,False,0x1,0,0xef8
    0xee4: vee4(0x1) = CONST ,0xedc,vee4,0,CONST,ETHForTokens,public,False,0x1,0,0xef8
    0xee6: vee6(0xa0) = CONST ,0xedc,vee6,0,CONST,ETHForTokens,public,False,0xa0,0,0xef8
"    0xee8: vee8(0x10000000000000000000000000000000000000000) = SHL vee6(0xa0), vee4(0x1)",0xedc,vee8,"0,vee6,vee4",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0xef8
"    0xee9: vee9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vee8(0x10000000000000000000000000000000000000000), vee2(0x1)",0xedc,vee9,"0,vee8,vee2",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xef8
"    0xeea: veea = AND vee9(0xffffffffffffffffffffffffffffffffffffffff), vee1",0xedc,veea,"0,vee9,vee1",AND,ETHForTokens,public,False,0,0,0xef8
    0xeed: veed(0xef8) = CONST ,0xedc,veed,0,CONST,ETHForTokens,public,False,0xef8,0,0xef8
    0xef1: vef1 = CALLVALUE ,0xedc,vef1,0,CALLVALUE,ETHForTokens,public,False,0,0,0xef8
    0xef3: vef3(0x1ac7) = CONST ,0xedc,vef3,0,CONST,ETHForTokens,public,False,0x1ac7,0,0xef8
"    0xef7: vef7_0 = CALLPRIVATE vef3(0x1ac7), v1c01Ve0a, vef1, veed(0xef8)",0xedc,vef7_0,"0,vef3,v1c01Ve0a,vef1,veed",CALLPRIVATE,ETHForTokens,public,False,0,0,0xef8
    Begin block 0xef8,0xef8,0,0,0,ETHForTokens,public,False,0,0,0xef8
"    prev=[0xedc], succ=[0xf14, 0xf36]",0xef8,0,0,0,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    =================================,0xef8,0,0,0,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    0xef9: vef9(0x40) = CONST ,0xef8,vef9,0,CONST,ETHForTokens,public,False,0x40,0,"0xf14, 0xf36"
    0xefb: vefb = MLOAD vef9(0x40),0xef8,vefb,"0,vef9",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xf14, 0xf36"
    0xefc: vefc(0x0) = CONST ,0xef8,vefc,0,CONST,ETHForTokens,public,False,0x0,0,"0xf14, 0xf36"
    0xf03: vf03 = GAS ,0xef8,vf03,0,GAS,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
"    0xf04: vf04 = CALL vf03, veea, vef7_0, vefb, vefc(0x0), vefb, vefc(0x0)",0xef8,vf04,"0,vf03,veea,vef7_0,vefb,vefc,vefb,vefc",CALL,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    0xf09: vf09 = RETURNDATASIZE ,0xef8,vf09,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    0xf0b: vf0b(0x0) = CONST ,0xef8,vf0b,0,CONST,ETHForTokens,public,False,0x0,0,"0xf14, 0xf36"
"    0xf0e: vf0e = EQ vf09, vf0b(0x0)",0xef8,vf0e,"0,vf09,vf0b",EQ,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    0xf0f: vf0f(0xf36) = CONST ,0xef8,vf0f,0,CONST,ETHForTokens,public,False,0xf36,0,"0xf14, 0xf36"
"    0xf13: JUMPI vf0f(0xf36), vf0e",0xef8,0,"0,vf0f,vf0e",JUMPI,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
    Begin block 0xf14,0xf14,0,0,0,ETHForTokens,public,False,0,0,"0xf14, 0xf36"
"    prev=[0xef8], succ=[0xf3b]",0xf14,0,0,0,ETHForTokens,public,False,0,0,0xf3b
    =================================,0xf14,0,0,0,ETHForTokens,public,False,0,0,0xf3b
    0xf14: vf14(0x40) = CONST ,0xf14,vf14,0,CONST,ETHForTokens,public,False,0x40,0,0xf3b
    0xf16: vf16 = MLOAD vf14(0x40),0xf14,vf16,"0,vf14",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xf3b
    0xf19: vf19(0x1f) = CONST ,0xf14,vf19,0,CONST,ETHForTokens,public,False,0x1f,0,0xf3b
    0xf1b: vf1b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT vf19(0x1f),0xf14,vf1b,"0,vf19",NOT,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xf3b
    0xf1c: vf1c(0x3f) = CONST ,0xf14,vf1c,0,CONST,ETHForTokens,public,False,0x3f,0,0xf3b
    0xf1e: vf1e = RETURNDATASIZE ,0xf14,vf1e,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xf3b
"    0xf1f: vf1f = ADD vf1e, vf1c(0x3f)",0xf14,vf1f,"0,vf1e,vf1c",ADD,ETHForTokens,public,False,0,0,0xf3b
"    0xf20: vf20 = AND vf1f, vf1b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xf14,vf20,"0,vf1f,vf1b",AND,ETHForTokens,public,False,0,0,0xf3b
"    0xf22: vf22 = ADD vf16, vf20",0xf14,vf22,"0,vf16,vf20",ADD,ETHForTokens,public,False,0,0,0xf3b
    0xf23: vf23(0x40) = CONST ,0xf14,vf23,0,CONST,ETHForTokens,public,False,0x40,0,0xf3b
"    0xf25: MSTORE vf23(0x40), vf22",0xf14,0,"0,vf23,vf22",MSTORE,ETHForTokens,public,False,0,0,0xf3b
    0xf26: vf26 = RETURNDATASIZE ,0xf14,vf26,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xf3b
"    0xf28: MSTORE vf16, vf26",0xf14,ETHForTokens&m0x40,"0,vf16,vf26",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,0xf3b
    0xf29: vf29 = RETURNDATASIZE ,0xf14,vf29,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,0xf3b
    0xf2a: vf2a(0x0) = CONST ,0xf14,vf2a,0,CONST,ETHForTokens,public,False,0x0,0,0xf3b
    0xf2c: vf2c(0x20) = CONST ,0xf14,vf2c,0,CONST,ETHForTokens,public,False,0x20,0,0xf3b
"    0xf2f: vf2f = ADD vf16, vf2c(0x20)",0xf14,vf2f,"0,vf16,vf2c",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x20,0xf3b
"    0xf30: RETURNDATACOPY vf2f, vf2a(0x0), vf29",0xf14,0,"0,vf2f,vf2a,vf29",RETURNDATACOPY,ETHForTokens,public,False,0,0,0xf3b
    0xf31: vf31(0xf3b) = CONST ,0xf14,vf31,0,CONST,ETHForTokens,public,False,0xf3b,0,0xf3b
    0xf35: JUMP vf31(0xf3b),0xf14,0,"0,vf31",JUMP,ETHForTokens,public,False,0,0,0xf3b
    Begin block 0xf3b,0xf3b,0,0,0,ETHForTokens,public,False,0,0,0xf3b
"    prev=[0xf14, 0xf36], succ=[0xfba, 0xfbe]",0xf3b,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    =================================,0xf3b,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xf3e: vf3e(0x5) = CONST ,0xf3b,vf3e,0,CONST,ETHForTokens,public,False,0x5,0,"0xfba, 0xfbe"
    0xf40: vf40 = SLOAD vf3e(0x5),0xf3b,vf40,"0,vf3e",SLOAD,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xf41: vf41(0x40) = CONST ,0xf3b,vf41,0,CONST,ETHForTokens,public,False,0x40,0,"0xfba, 0xfbe"
    0xf44: vf44 = MLOAD vf41(0x40),0xf3b,vf44,"0,vf41",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xfba, 0xfbe"
    0xf45: vf45(0x75b04b15) = CONST ,0xf3b,vf45,0,CONST,ETHForTokens,public,False,0x75b04b15,0,"0xfba, 0xfbe"
    0xf4a: vf4a(0xe1) = CONST ,0xf3b,vf4a,0,CONST,ETHForTokens,public,False,0xe1,0,"0xfba, 0xfbe"
"    0xf4c: vf4c(0xeb60962a00000000000000000000000000000000000000000000000000000000) = SHL vf4a(0xe1), vf45(0x75b04b15)",0xf3b,vf4c,"0,vf4a,vf45",SHL,ETHForTokens,public,False,0xeb60962a00000000000000000000000000000000000000000000000000000000,0,"0xfba, 0xfbe"
"    0xf4e: MSTORE vf44, vf4c(0xeb60962a00000000000000000000000000000000000000000000000000000000)",0xf3b,ETHForTokens&m0x40,"0,vf44,vf4c",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xfba, 0xfbe"
    0xf4f: vf4f(0x1) = CONST ,0xf3b,vf4f,0,CONST,ETHForTokens,public,False,0x1,0,"0xfba, 0xfbe"
    0xf51: vf51(0x1) = CONST ,0xf3b,vf51,0,CONST,ETHForTokens,public,False,0x1,0,"0xfba, 0xfbe"
    0xf53: vf53(0xa0) = CONST ,0xf3b,vf53,0,CONST,ETHForTokens,public,False,0xa0,0,"0xfba, 0xfbe"
"    0xf55: vf55(0x10000000000000000000000000000000000000000) = SHL vf53(0xa0), vf51(0x1)",0xf3b,vf55,"0,vf53,vf51",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,"0xfba, 0xfbe"
"    0xf56: vf56(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf55(0x10000000000000000000000000000000000000000), vf4f(0x1)",0xf3b,vf56,"0,vf55,vf4f",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xfba, 0xfbe"
"    0xf59: vf59 = AND vf56(0xffffffffffffffffffffffffffffffffffffffff), v37f",0xf3b,vf59,"0,vf56,v37f",AND,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xf5a: vf5a(0x4) = CONST ,0xf3b,vf5a,0,CONST,ETHForTokens,public,False,0x4,0,"0xfba, 0xfbe"
"    0xf5d: vf5d = ADD vf44, vf5a(0x4)",0xf3b,vf5d,"0,vf44,vf5a",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0xfba, 0xfbe"
"    0xf5e: MSTORE vf5d, vf59",0xf3b,ETHForTokens&m0x40+0x4,"0,vf5d,vf59",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0xfba, 0xfbe"
"    0xf61: vf61 = AND vf40, vf56(0xffffffffffffffffffffffffffffffffffffffff)",0xf3b,vf61,"0,vf40,vf56",AND,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xf62: vf62(0x44) = CONST ,0xf3b,vf62,0,CONST,ETHForTokens,public,False,0x44,0,"0xfba, 0xfbe"
"    0xf65: vf65 = ADD vf44, vf62(0x44)",0xf3b,vf65,"0,vf44,vf62",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0xfba, 0xfbe"
"    0xf68: MSTORE vf65, vf61",0xf3b,ETHForTokens&m0x40+0x44,"0,vf65,vf61",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0xfba, 0xfbe"
    0xf69: vf69(0x60) = CONST ,0xf3b,vf69,0,CONST,ETHForTokens,public,False,0x60,0,"0xfba, 0xfbe"
    0xf6b: vf6b(0x24) = CONST ,0xf3b,vf6b,0,CONST,ETHForTokens,public,False,0x24,0,"0xfba, 0xfbe"
"    0xf6e: vf6e = ADD vf44, vf6b(0x24)",0xf3b,vf6e,"0,vf44,vf6b",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0xfba, 0xfbe"
"    0xf6f: MSTORE vf6e, vf69(0x60)",0xf3b,ETHForTokens&m0x40+0x24,"0,vf6e,vf69",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0xfba, 0xfbe"
    0xf70: vf70(0x12) = CONST ,0xf3b,vf70,0,CONST,ETHForTokens,public,False,0x12,0,"0xfba, 0xfbe"
    0xf72: vf72(0x64) = CONST ,0xf3b,vf72,0,CONST,ETHForTokens,public,False,0x64,0,"0xfba, 0xfbe"
"    0xf75: vf75 = ADD vf44, vf72(0x64)",0xf3b,vf75,"0,vf44,vf72",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x64,"0xfba, 0xfbe"
"    0xf76: MSTORE vf75, vf70(0x12)",0xf3b,ETHForTokens&m0x40+0x64,"0,vf75,vf70",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x64,"0xfba, 0xfbe"
    0xf77: vf77(0x19dbdd08185b881155120819195c1bdcda5d) = CONST ,0xf3b,vf77,0,CONST,ETHForTokens,public,False,0x19dbdd08185b881155120819195c1bdcda5d,0,"0xfba, 0xfbe"
    0xf8a: vf8a(0x72) = CONST ,0xf3b,vf8a,0,CONST,ETHForTokens,public,False,0x72,0,"0xfba, 0xfbe"
"    0xf8c: vf8c(0x676f7420616e20455448206465706f7369740000000000000000000000000000) = SHL vf8a(0x72), vf77(0x19dbdd08185b881155120819195c1bdcda5d)",0xf3b,vf8c,"0,vf8a,vf77",SHL,ETHForTokens,public,False,0x676f7420616e20455448206465706f7369740000000000000000000000000000,0,"0xfba, 0xfbe"
    0xf8d: vf8d(0x84) = CONST ,0xf3b,vf8d,0,CONST,ETHForTokens,public,False,0x84,0,"0xfba, 0xfbe"
"    0xf90: vf90 = ADD vf44, vf8d(0x84)",0xf3b,vf90,"0,vf44,vf8d",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x84,"0xfba, 0xfbe"
"    0xf91: MSTORE vf90, vf8c(0x676f7420616e20455448206465706f7369740000000000000000000000000000)",0xf3b,ETHForTokens&m0x40+0x84,"0,vf90,vf8c",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x84,"0xfba, 0xfbe"
    0xf93: vf93 = MLOAD vf41(0x40),0xf3b,vf93,"0,vf41",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0xfba, 0xfbe"
    0xf97: vf97(0xeb60962a) = CONST ,0xf3b,vf97,0,CONST,ETHForTokens,public,False,0xeb60962a,0,"0xfba, 0xfbe"
    0xf9d: vf9d(0xa4) = CONST ,0xf3b,vf9d,0,CONST,ETHForTokens,public,False,0xa4,0,"0xfba, 0xfbe"
"    0xfa1: vfa1 = ADD vf44, vf9d(0xa4)",0xf3b,vfa1,"0,vf44,vf9d",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0xa4,"0xfba, 0xfbe"
    0xfa3: vfa3(0x0) = CONST ,0xf3b,vfa3,0,CONST,ETHForTokens,public,False,0x0,0,"0xfba, 0xfbe"
"    0xfab: vfab(0x0) = SUB vf44, vf93",0xf3b,vfab,"0,vf44,vf93",SUB,ETHForTokens,public,False,0x0,ETHForTokens&m0x40-0x0,"0xfba, 0xfbe"
"    0xfac: vfac(0xa4) = ADD vfab(0x0), vf9d(0xa4)",0xf3b,vfac,"0,vfab,vf9d",ADD,ETHForTokens,public,False,0xa4,ETHForTokens&m0x40-0x0+0xa4,"0xfba, 0xfbe"
    0xfb1: vfb1 = EXTCODESIZE vf61,0xf3b,vfb1,"0,vf61",EXTCODESIZE,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xfb2: vfb2 = ISZERO vfb1,0xf3b,vfb2,"0,vfb1",ISZERO,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xfb4: vfb4 = ISZERO vfb2,0xf3b,vfb4,"0,vfb2",ISZERO,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xfb5: vfb5(0xfbe) = CONST ,0xf3b,vfb5,0,CONST,ETHForTokens,public,False,0xfbe,0,"0xfba, 0xfbe"
"    0xfb9: JUMPI vfb5(0xfbe), vfb4",0xf3b,0,"0,vfb5,vfb4",JUMPI,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    Begin block 0xfba,0xfba,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
"    prev=[0xf3b], succ=[]",0xfba,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    =================================,0xfba,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    0xfba: vfba(0x0) = CONST ,0xfba,vfba,0,CONST,ETHForTokens,public,False,0x0,0,"0xfba, 0xfbe"
"    0xfbd: REVERT vfba(0x0), vfba(0x0)",0xfba,0,"0,vfba,vfba",REVERT,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
    Begin block 0xfbe,0xfbe,0,0,0,ETHForTokens,public,False,0,0,"0xfba, 0xfbe"
"    prev=[0xf3b], succ=[0xfca, 0xfd3]",0xfbe,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    =================================,0xfbe,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfc0: vfc0 = GAS ,0xfbe,vfc0,0,GAS,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
"    0xfc1: vfc1 = CALL vfc0, vf61, vfa3(0x0), vf93, vfac(0xa4), vf93, vfa3(0x0)",0xfbe,vfc1,"0,vfc0,vf61,vfa3,vf93,vfac,vf93,vfa3",CALL,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfc2: vfc2 = ISZERO vfc1,0xfbe,vfc2,"0,vfc1",ISZERO,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfc4: vfc4 = ISZERO vfc2,0xfbe,vfc4,"0,vfc2",ISZERO,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfc5: vfc5(0xfd3) = CONST ,0xfbe,vfc5,0,CONST,ETHForTokens,public,False,0xfd3,0,"0xfca, 0xfd3"
"    0xfc9: JUMPI vfc5(0xfd3), vfc4",0xfbe,0,"0,vfc5,vfc4",JUMPI,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    Begin block 0xfca,0xfca,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
"    prev=[0xfbe], succ=[]",0xfca,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    =================================,0xfca,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfca: vfca = RETURNDATASIZE ,0xfca,vfca,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfcb: vfcb(0x0) = CONST ,0xfca,vfcb,0,CONST,ETHForTokens,public,False,0x0,0,"0xfca, 0xfd3"
"    0xfce: RETURNDATACOPY vfcb(0x0), vfcb(0x0), vfca",0xfca,0,"0,vfcb,vfcb,vfca",RETURNDATACOPY,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfcf: vfcf = RETURNDATASIZE ,0xfca,vfcf,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    0xfd0: vfd0(0x0) = CONST ,0xfca,vfd0,0,CONST,ETHForTokens,public,False,0x0,0,"0xfca, 0xfd3"
"    0xfd2: REVERT vfd0(0x0), vfcf",0xfca,0,"0,vfd0,vfcf",REVERT,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
    Begin block 0xfd3,0xfd3,0,0,0,ETHForTokens,public,False,0,0,"0xfca, 0xfd3"
"    prev=[0xfbe], succ=[0x3aa6]",0xfd3,0,0,0,ETHForTokens,public,False,0,0,0x3aa6
    =================================,0xfd3,0,0,0,ETHForTokens,public,False,0,0,0x3aa6
    0xfd8: vfd8(0x1010) = CONST ,0xfd3,vfd8,0,CONST,ETHForTokens,public,False,0x1010,0,0x3aa6
    0xfdc: vfdc(0x3aa6) = CONST ,0xfd3,vfdc,0,CONST,ETHForTokens,public,False,0x3aa6,0,0x3aa6
    0xfe1: vfe1 = CALLVALUE ,0xfd3,vfe1,0,CALLVALUE,ETHForTokens,public,False,0,0,0x3aa6
    0xfe2: vfe2(0x1ac7) = CONST ,0xfd3,vfe2,0,CONST,ETHForTokens,public,False,0x1ac7,0,0x3aa6
    0xfe9: vfe9(0xffffffff) = CONST ,0xfd3,vfe9,0,CONST,ETHForTokens,public,False,0xffffffff,0,0x3aa6
"    0xfee: vfee(0x1ac7) = AND vfe9(0xffffffff), vfe2(0x1ac7)",0xfd3,vfee,"0,vfe9,vfe2",AND,ETHForTokens,public,False,0x1ac7,0,0x3aa6
"    0xfef: vfef_0 = CALLPRIVATE vfee(0x1ac7), v1c01Ve0a, vfe1, vfdc(0x3aa6)",0xfd3,vfef_0,"0,vfee,v1c01Ve0a,vfe1,vfdc",CALLPRIVATE,ETHForTokens,public,False,0,0,0x3aa6
    Begin block 0x3aa6,0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x3aa6
"    prev=[0xfd3], succ=[0x1bfcB0x3aa6]",0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    =================================,0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3aa7: v3aa7(0x1) = CONST ,0x3aa6,v3aa7,0,CONST,ETHForTokens,public,False,0x1,0,0x1bfcB0x3aa6
    0x3aa9: v3aa9(0x1) = CONST ,0x3aa6,v3aa9,0,CONST,ETHForTokens,public,False,0x1,0,0x1bfcB0x3aa6
    0x3aab: v3aab(0xa0) = CONST ,0x3aa6,v3aab,0,CONST,ETHForTokens,public,False,0xa0,0,0x1bfcB0x3aa6
"    0x3aad: v3aad(0x10000000000000000000000000000000000000000) = SHL v3aab(0xa0), v3aa9(0x1)",0x3aa6,v3aad,"0,v3aab,v3aa9",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0x1bfcB0x3aa6
"    0x3aae: v3aae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3aad(0x10000000000000000000000000000000000000000), v3aa7(0x1)",0x3aa6,v3aae,"0,v3aad,v3aa7",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1bfcB0x3aa6
"    0x3ab0: v3ab0 = AND v37f, v3aae(0xffffffffffffffffffffffffffffffffffffffff)",0x3aa6,v3ab0,"0,v37f,v3aae",AND,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3ab1: v3ab1(0x0) = CONST ,0x3aa6,v3ab1,0,CONST,ETHForTokens,public,False,0x0,0,0x1bfcB0x3aa6
"    0x3ab5: MSTORE v3ab1(0x0), v3ab0",0x3aa6,0,"0,v3ab1,v3ab0",MSTORE,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3ab6: v3ab6(0x3) = CONST ,0x3aa6,v3ab6,0,CONST,ETHForTokens,public,False,0x3,0,0x1bfcB0x3aa6
    0x3ab8: v3ab8(0x20) = CONST ,0x3aa6,v3ab8,0,CONST,ETHForTokens,public,False,0x20,0,0x1bfcB0x3aa6
"    0x3aba: MSTORE v3ab8(0x20), v3ab6(0x3)",0x3aa6,0,"0,v3ab8,v3ab6",MSTORE,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3abb: v3abb(0x40) = CONST ,0x3aa6,v3abb,0,CONST,ETHForTokens,public,False,0x40,0,0x1bfcB0x3aa6
"    0x3abe: v3abe = SHA3 v3ab1(0x0), v3abb(0x40)",0x3aa6,v3abe,"0,v3ab1,v3abb",SHA3,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3abf: v3abf = SLOAD v3abe,0x3aa6,v3abf,"0,v3abe",SLOAD,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    0x3ac1: v3ac1(0x1bfc) = CONST ,0x3aa6,v3ac1,0,CONST,ETHForTokens,public,False,0x1bfc,0,0x1bfcB0x3aa6
    0x3ac5: JUMP v3ac1(0x1bfc),0x3aa6,0,"0,v3ac1",JUMP,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
    Begin block 0x1bfcB0x3aa6,0x1bfcB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x1bfcB0x3aa6
"    prev=[0x3aa6], succ=[0x1c0bB0x3aa6, 0x3c4eB0x3aa6]",0x1bfcB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    =================================,0x1bfcB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1bfdS0x3aa6: v1bfdV3aa6(0x0) = CONST ,0x1bfcB0x3aa6,v1bfdV3aa6,0,CONST,ETHForTokens,public,False,0x0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c01S0x3aa6: v1c01V3aa6 = ADD vfef_0, v3abf",0x1bfcB0x3aa6,v1c01V3aa6,"0,vfef_0,v3abf",ADD,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c04S0x3aa6: v1c04V3aa6 = LT v1c01V3aa6, v3abf",0x1bfcB0x3aa6,v1c04V3aa6,"0,v1c01V3aa6,v3abf",LT,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c05S0x3aa6: v1c05V3aa6 = ISZERO v1c04V3aa6,0x1bfcB0x3aa6,v1c05V3aa6,"0,v1c04V3aa6",ISZERO,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c06S0x3aa6: v1c06V3aa6(0x3c4e) = CONST ,0x1bfcB0x3aa6,v1c06V3aa6,0,CONST,ETHForTokens,public,False,0x3c4e,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c0aS0x3aa6: JUMPI v1c06V3aa6(0x3c4e), v1c05V3aa6",0x1bfcB0x3aa6,0,"0,v1c06V3aa6,v1c05V3aa6",JUMPI,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    Begin block 0x1c0bB0x3aa6,0x1c0bB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    prev=[0x1bfcB0x3aa6], succ=[]",0x1c0bB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    =================================,0x1c0bB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c0bS0x3aa6: v1c0bV3aa6(0x40) = CONST ,0x1c0bB0x3aa6,v1c0bV3aa6,0,CONST,ETHForTokens,public,False,0x40,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c0eS0x3aa6: v1c0eV3aa6 = MLOAD v1c0bV3aa6(0x40),0x1c0bB0x3aa6,v1c0eV3aa6,"0,v1c0bV3aa6",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c0fS0x3aa6: v1c0fV3aa6(0x461bcd) = CONST ,0x1c0bB0x3aa6,v1c0fV3aa6,0,CONST,ETHForTokens,public,False,0x461bcd,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c13S0x3aa6: v1c13V3aa6(0xe5) = CONST ,0x1c0bB0x3aa6,v1c13V3aa6,0,CONST,ETHForTokens,public,False,0xe5,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c15S0x3aa6: v1c15V3aa6(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1c13V3aa6(0xe5), v1c0fV3aa6(0x461bcd)",0x1c0bB0x3aa6,v1c15V3aa6,"0,v1c13V3aa6,v1c0fV3aa6",SHL,ETHForTokens,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c17S0x3aa6: MSTORE v1c0eV3aa6, v1c15V3aa6(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1c0bB0x3aa6,ETHForTokens&m0x40,"0,v1c0eV3aa6,v1c15V3aa6",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c18S0x3aa6: v1c18V3aa6(0x20) = CONST ,0x1c0bB0x3aa6,v1c18V3aa6,0,CONST,ETHForTokens,public,False,0x20,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c1aS0x3aa6: v1c1aV3aa6(0x4) = CONST ,0x1c0bB0x3aa6,v1c1aV3aa6,0,CONST,ETHForTokens,public,False,0x4,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c1dS0x3aa6: v1c1dV3aa6 = ADD v1c0eV3aa6, v1c1aV3aa6(0x4)",0x1c0bB0x3aa6,v1c1dV3aa6,"0,v1c0eV3aa6,v1c1aV3aa6",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c1eS0x3aa6: MSTORE v1c1dV3aa6, v1c18V3aa6(0x20)",0x1c0bB0x3aa6,ETHForTokens&m0x40+0x4,"0,v1c1dV3aa6,v1c18V3aa6",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c1fS0x3aa6: v1c1fV3aa6(0x1b) = CONST ,0x1c0bB0x3aa6,v1c1fV3aa6,0,CONST,ETHForTokens,public,False,0x1b,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c21S0x3aa6: v1c21V3aa6(0x24) = CONST ,0x1c0bB0x3aa6,v1c21V3aa6,0,CONST,ETHForTokens,public,False,0x24,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c24S0x3aa6: v1c24V3aa6 = ADD v1c0eV3aa6, v1c21V3aa6(0x24)",0x1c0bB0x3aa6,v1c24V3aa6,"0,v1c0eV3aa6,v1c21V3aa6",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c25S0x3aa6: MSTORE v1c24V3aa6, v1c1fV3aa6(0x1b)",0x1c0bB0x3aa6,ETHForTokens&m0x40+0x24,"0,v1c24V3aa6,v1c1fV3aa6",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x24,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c26S0x3aa6: v1c26V3aa6(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST ,0x1c0bB0x3aa6,v1c26V3aa6,0,CONST,ETHForTokens,public,False,0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c47S0x3aa6: v1c47V3aa6(0x44) = CONST ,0x1c0bB0x3aa6,v1c47V3aa6,0,CONST,ETHForTokens,public,False,0x44,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c4aS0x3aa6: v1c4aV3aa6 = ADD v1c0eV3aa6, v1c47V3aa6(0x44)",0x1c0bB0x3aa6,v1c4aV3aa6,"0,v1c0eV3aa6,v1c47V3aa6",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c4bS0x3aa6: MSTORE v1c4aV3aa6, v1c26V3aa6(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)",0x1c0bB0x3aa6,ETHForTokens&m0x40+0x44,"0,v1c4aV3aa6,v1c26V3aa6",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x44,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c4dS0x3aa6: v1c4dV3aa6 = MLOAD v1c0bV3aa6(0x40),0x1c0bB0x3aa6,v1c4dV3aa6,"0,v1c0bV3aa6",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c51S0x3aa6: v1c51V3aa6(0x0) = SUB v1c0eV3aa6, v1c4dV3aa6",0x1c0bB0x3aa6,v1c51V3aa6,"0,v1c0eV3aa6,v1c4dV3aa6",SUB,ETHForTokens,public,False,0x0,ETHForTokens&m0x40-0x0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    0x1c52S0x3aa6: v1c52V3aa6(0x64) = CONST ,0x1c0bB0x3aa6,v1c52V3aa6,0,CONST,ETHForTokens,public,False,0x64,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c54S0x3aa6: v1c54V3aa6(0x64) = ADD v1c52V3aa6(0x64), v1c51V3aa6(0x0)",0x1c0bB0x3aa6,v1c54V3aa6,"0,v1c52V3aa6,v1c51V3aa6",ADD,ETHForTokens,public,False,0x64,ETHForTokens&m0x40-0x0+0x64,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    0x1c56S0x3aa6: REVERT v1c4dV3aa6, v1c54V3aa6(0x64)",0x1c0bB0x3aa6,0,"0,v1c4dV3aa6,v1c54V3aa6",REVERT,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
    Begin block 0x3c4eB0x3aa6,0x3c4eB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,"0x1c0bB0x3aa6, 0x3c4eB0x3aa6"
"    prev=[0x1bfcB0x3aa6], succ=[0x1010]",0x3c4eB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x1010
    =================================,0x3c4eB0x3aa6,0,0,0,ETHForTokens,public,False,0,0,0x1010
    0x3c54S0x3aa6: JUMP vfd8(0x1010),0x3c4eB0x3aa6,0,"0,vfd8",JUMP,ETHForTokens,public,False,0,0,0x1010
    Begin block 0x1010,0x1010,0,0,0,ETHForTokens,public,False,0,0,0x1010
"    prev=[0x3c4eB0x3aa6], succ=[0x1057]",0x1010,0,0,0,ETHForTokens,public,False,0,0,0x1057
    =================================,0x1010,0,0,0,ETHForTokens,public,False,0,0,0x1057
    0x1011: v1011(0x1) = CONST ,0x1010,v1011,0,CONST,ETHForTokens,public,False,0x1,0,0x1057
    0x1013: v1013(0x1) = CONST ,0x1010,v1013,0,CONST,ETHForTokens,public,False,0x1,0,0x1057
    0x1015: v1015(0xa0) = CONST ,0x1010,v1015,0,CONST,ETHForTokens,public,False,0xa0,0,0x1057
"    0x1017: v1017(0x10000000000000000000000000000000000000000) = SHL v1015(0xa0), v1013(0x1)",0x1010,v1017,"0,v1015,v1013",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,0x1057
"    0x1018: v1018(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1017(0x10000000000000000000000000000000000000000), v1011(0x1)",0x1010,v1018,"0,v1017,v1011",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1057
"    0x101b: v101b = AND v37f, v1018(0xffffffffffffffffffffffffffffffffffffffff)",0x1010,v101b,"0,v37f,v1018",AND,ETHForTokens,public,False,0,0,0x1057
    0x101c: v101c(0x0) = CONST ,0x1010,v101c,0,CONST,ETHForTokens,public,False,0x0,0,0x1057
"    0x1020: MSTORE v101c(0x0), v101b",0x1010,0,"0,v101c,v101b",MSTORE,ETHForTokens,public,False,0,0,0x1057
    0x1021: v1021(0x3) = CONST ,0x1010,v1021,0,CONST,ETHForTokens,public,False,0x3,0,0x1057
    0x1023: v1023(0x20) = CONST ,0x1010,v1023,0,CONST,ETHForTokens,public,False,0x20,0,0x1057
"    0x1027: MSTORE v1023(0x20), v1021(0x3)",0x1010,0,"0,v1023,v1021",MSTORE,ETHForTokens,public,False,0,0,0x1057
    0x1028: v1028(0x40) = CONST ,0x1010,v1028,0,CONST,ETHForTokens,public,False,0x40,0,0x1057
"    0x102b: v102b = SHA3 v101c(0x0), v1028(0x40)",0x1010,v102b,"0,v101c,v1028",SHA3,ETHForTokens,public,False,0,0,0x1057
"    0x102e: SSTORE v102b, v1c01V3aa6",0x1010,0,"0,v102b,v1c01V3aa6",SSTORE,ETHForTokens,public,False,0,0,0x1057
    0x102f: v102f(0x7) = CONST ,0x1010,v102f,0,CONST,ETHForTokens,public,False,0x7,0,0x1057
"    0x1031: v1031 = ADD v102f(0x7), v102b",0x1010,v1031,"0,v102f,v102b",ADD,ETHForTokens,public,False,0,0,0x1057
    0x1033: v1033 = SLOAD v1031,0x1010,v1033,"0,v1031",SLOAD,ETHForTokens,public,False,0,0,0x1057
    0x1034: v1034(0x1) = CONST ,0x1010,v1034,0,CONST,ETHForTokens,public,False,0x1,0,0x1057
"    0x1037: v1037 = ADD v1033, v1034(0x1)",0x1010,v1037,"0,v1033,v1034",ADD,ETHForTokens,public,False,0,0,0x1057
"    0x1039: SSTORE v1031, v1037",0x1010,0,"0,v1031,v1037",SSTORE,ETHForTokens,public,False,0,0,0x1057
"    0x103c: MSTORE v101c(0x0), v1031",0x1010,0,"0,v101c,v1031",MSTORE,ETHForTokens,public,False,0,0,0x1057
"    0x103e: v103e = SHA3 v101c(0x0), v1023(0x20)",0x1010,v103e,"0,v101c,v1023",SHA3,ETHForTokens,public,False,0,0,0x1057
"    0x103f: v103f = ADD v103e, v1033",0x1010,v103f,"0,v103e,v1033",ADD,ETHForTokens,public,False,0,0,0x1057
"    0x1043: SSTORE v103f, v1c01V3aa6",0x1010,0,"0,v103f,v1c01V3aa6",SSTORE,ETHForTokens,public,False,0,0,0x1057
"    0x1045: v1045 = AND v385, v1018(0xffffffffffffffffffffffffffffffffffffffff)",0x1010,v1045,"0,v385,v1018",AND,ETHForTokens,public,False,0,0,0x1057
    0x1046: v1046(0xf0dda65c) = CONST ,0x1010,v1046,0,CONST,ETHForTokens,public,False,0xf0dda65c,0,0x1057
    0x104b: v104b = CALLER ,0x1010,v104b,0,CALLER,ETHForTokens,public,True,0,0,0x1057
    0x104c: v104c(0x1057) = CONST ,0x1010,v104c,0,CONST,ETHForTokens,public,False,0x1057,0,0x1057
    0x1050: v1050 = CALLVALUE ,0x1010,v1050,0,CALLVALUE,ETHForTokens,public,False,0,0,0x1057
    0x1052: v1052(0x1ac7) = CONST ,0x1010,v1052,0,CONST,ETHForTokens,public,False,0x1ac7,0,0x1057
"    0x1056: v1056_0 = CALLPRIVATE v1052(0x1ac7), v1c01Ve0a, v1050, v104c(0x1057)",0x1010,v1056_0,"0,v1052,v1c01Ve0a,v1050,v104c",CALLPRIVATE,ETHForTokens,public,False,0,0,0x1057
    Begin block 0x1057,0x1057,0,0,0,ETHForTokens,public,False,0,0,0x1057
"    prev=[0x1010], succ=[0x109a, 0x109e0x35a]",0x1057,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    =================================,0x1057,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    0x1058: v1058(0x40) = CONST ,0x1057,v1058,0,CONST,ETHForTokens,public,False,0x40,0,"0x109a, 0x109e0x35a"
    0x105a: v105a = MLOAD v1058(0x40),0x1057,v105a,"0,v1058",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x109a, 0x109e0x35a"
    0x105c: v105c(0xffffffff) = CONST ,0x1057,v105c,0,CONST,ETHForTokens,public,False,0xffffffff,0,"0x109a, 0x109e0x35a"
"    0x1061: v1061(0xf0dda65c) = AND v105c(0xffffffff), v1046(0xf0dda65c)",0x1057,v1061,"0,v105c,v1046",AND,ETHForTokens,public,False,0xf0dda65c,0,"0x109a, 0x109e0x35a"
    0x1062: v1062(0xe0) = CONST ,0x1057,v1062,0,CONST,ETHForTokens,public,False,0xe0,0,"0x109a, 0x109e0x35a"
"    0x1064: v1064(0xf0dda65c00000000000000000000000000000000000000000000000000000000) = SHL v1062(0xe0), v1061(0xf0dda65c)",0x1057,v1064,"0,v1062,v1061",SHL,ETHForTokens,public,False,0xf0dda65c00000000000000000000000000000000000000000000000000000000,0,"0x109a, 0x109e0x35a"
"    0x1066: MSTORE v105a, v1064(0xf0dda65c00000000000000000000000000000000000000000000000000000000)",0x1057,ETHForTokens&m0x40,"0,v105a,v1064",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x109a, 0x109e0x35a"
    0x1067: v1067(0x4) = CONST ,0x1057,v1067,0,CONST,ETHForTokens,public,False,0x4,0,"0x109a, 0x109e0x35a"
"    0x1069: v1069 = ADD v1067(0x4), v105a",0x1057,v1069,"0,v1067,v105a",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x109a, 0x109e0x35a"
    0x106c: v106c(0x1) = CONST ,0x1057,v106c,0,CONST,ETHForTokens,public,False,0x1,0,"0x109a, 0x109e0x35a"
    0x106e: v106e(0x1) = CONST ,0x1057,v106e,0,CONST,ETHForTokens,public,False,0x1,0,"0x109a, 0x109e0x35a"
    0x1070: v1070(0xa0) = CONST ,0x1057,v1070,0,CONST,ETHForTokens,public,False,0xa0,0,"0x109a, 0x109e0x35a"
"    0x1072: v1072(0x10000000000000000000000000000000000000000) = SHL v1070(0xa0), v106e(0x1)",0x1057,v1072,"0,v1070,v106e",SHL,ETHForTokens,public,False,0x10000000000000000000000000000000000000000,0,"0x109a, 0x109e0x35a"
"    0x1073: v1073(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1072(0x10000000000000000000000000000000000000000), v106c(0x1)",0x1057,v1073,"0,v1072,v106c",SUB,ETHForTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x109a, 0x109e0x35a"
"    0x1074: v1074 = AND v1073(0xffffffffffffffffffffffffffffffffffffffff), v104b",0x1057,v1074,"0,v1073,v104b",AND,ETHForTokens,public,True,0,0,"0x109a, 0x109e0x35a"
"    0x1076: MSTORE v1069, v1074",0x1057,ETHForTokens&m0x40+0x4,"0,v1069,v1074",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4,"0x109a, 0x109e0x35a"
    0x1077: v1077(0x20) = CONST ,0x1057,v1077,0,CONST,ETHForTokens,public,False,0x20,0,"0x109a, 0x109e0x35a"
"    0x1079: v1079 = ADD v1077(0x20), v1069",0x1057,v1079,"0,v1077,v1069",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20,"0x109a, 0x109e0x35a"
"    0x107c: MSTORE v1079, v1056_0",0x1057,ETHForTokens&m0x40+0x4+0x20,"0,v1079,v1056_0",MSTORE,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20,"0x109a, 0x109e0x35a"
    0x107d: v107d(0x20) = CONST ,0x1057,v107d,0,CONST,ETHForTokens,public,False,0x20,0,"0x109a, 0x109e0x35a"
"    0x107f: v107f = ADD v107d(0x20), v1079",0x1057,v107f,"0,v107d,v1079",ADD,ETHForTokens,public,False,0,ETHForTokens&m0x40+0x4+0x20+0x20,"0x109a, 0x109e0x35a"
    0x1084: v1084(0x0) = CONST ,0x1057,v1084,0,CONST,ETHForTokens,public,False,0x0,0,"0x109a, 0x109e0x35a"
    0x1086: v1086(0x40) = CONST ,0x1057,v1086,0,CONST,ETHForTokens,public,False,0x40,0,"0x109a, 0x109e0x35a"
    0x1088: v1088 = MLOAD v1086(0x40),0x1057,v1088,"0,v1086",MLOAD,ETHForTokens,public,False,0,ETHForTokens&m0x40,"0x109a, 0x109e0x35a"
"    0x108b: v108b(0x44) = SUB v107f, v1088",0x1057,v108b,"0,v107f,v1088",SUB,ETHForTokens,public,False,0x44,ETHForTokens&m0x40+0x4+0x20+0x20-0x44,"0x109a, 0x109e0x35a"
    0x108d: v108d(0x0) = CONST ,0x1057,v108d,0,CONST,ETHForTokens,public,False,0x0,0,"0x109a, 0x109e0x35a"
    0x1091: v1091 = EXTCODESIZE v1045,0x1057,v1091,"0,v1045",EXTCODESIZE,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    0x1092: v1092 = ISZERO v1091,0x1057,v1092,"0,v1091",ISZERO,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    0x1094: v1094 = ISZERO v1092,0x1057,v1094,"0,v1092",ISZERO,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    0x1095: v1095(0x109e) = CONST ,0x1057,v1095,0,CONST,ETHForTokens,public,False,0x109e,0,"0x109a, 0x109e0x35a"
"    0x1099: JUMPI v1095(0x109e), v1094",0x1057,0,"0,v1095,v1094",JUMPI,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    Begin block 0x109a,0x109a,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
"    prev=[0x1057], succ=[]",0x109a,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    =================================,0x109a,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    0x109a: v109a(0x0) = CONST ,0x109a,v109a,0,CONST,ETHForTokens,public,False,0x0,0,"0x109a, 0x109e0x35a"
"    0x109d: REVERT v109a(0x0), v109a(0x0)",0x109a,0,"0,v109a,v109a",REVERT,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
    Begin block 0x109e0x35a,0x109e0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x109a, 0x109e0x35a"
"    prev=[0x1057], succ=[0x10aa0x35a, 0x10b30x35a]",0x109e0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    =================================,0x109e0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10a00x35a: v35a10a0 = GAS ,0x109e0x35a,v35a10a0,0,GAS,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
"    0x10a10x35a: v35a10a1 = CALL v35a10a0, v1045, v108d(0x0), v1088, v108b(0x44), v1088, v1084(0x0)",0x109e0x35a,v35a10a1,"0,v35a10a0,v1045,v108d,v1088,v108b,v1088,v1084",CALL,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10a20x35a: v35a10a2 = ISZERO v35a10a1,0x109e0x35a,v35a10a2,"0,v35a10a1",ISZERO,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10a40x35a: v35a10a4 = ISZERO v35a10a2,0x109e0x35a,v35a10a4,"0,v35a10a2",ISZERO,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10a50x35a: v35a10a5(0x10b3) = CONST ,0x109e0x35a,v35a10a5,0,CONST,ETHForTokens,public,False,0x10b3,0,"0x10aa0x35a, 0x10b30x35a"
"    0x10a90x35a: JUMPI v35a10a5(0x10b3), v35a10a4",0x109e0x35a,0,"0,v35a10a5,v35a10a4",JUMPI,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    Begin block 0x10aa0x35a,0x10aa0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
"    prev=[0x109e0x35a], succ=[]",0x10aa0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    =================================,0x10aa0x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10aa0x35a: v35a10aa = RETURNDATASIZE ,0x10aa0x35a,v35a10aa,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10ab0x35a: v35a10ab(0x0) = CONST ,0x10aa0x35a,v35a10ab,0,CONST,ETHForTokens,public,False,0x0,0,"0x10aa0x35a, 0x10b30x35a"
"    0x10ae0x35a: RETURNDATACOPY v35a10ab(0x0), v35a10ab(0x0), v35a10aa",0x10aa0x35a,0,"0,v35a10ab,v35a10ab,v35a10aa",RETURNDATACOPY,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10af0x35a: v35a10af = RETURNDATASIZE ,0x10aa0x35a,v35a10af,0,RETURNDATASIZE,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    0x10b00x35a: v35a10b0(0x0) = CONST ,0x10aa0x35a,v35a10b0,0,CONST,ETHForTokens,public,False,0x0,0,"0x10aa0x35a, 0x10b30x35a"
"    0x10b20x35a: REVERT v35a10b0(0x0), v35a10af",0x10aa0x35a,0,"0,v35a10b0,v35a10af",REVERT,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
    Begin block 0x10b30x35a,0x10b30x35a,0,0,0,ETHForTokens,public,False,0,0,"0x10aa0x35a, 0x10b30x35a"
"    prev=[0x109e0x35a], succ=[0x3806]",0x10b30x35a,0,0,0,ETHForTokens,public,False,0,0,0x3806
    =================================,0x10b30x35a,0,0,0,ETHForTokens,public,False,0,0,0x3806
    0x10bb0x35a: JUMP v35b(0x3806),0x10b30x35a,0,"0,v35b",JUMP,ETHForTokens,public,False,0,0,0x3806
    Begin block 0x3806,0x3806,0,0,0,ETHForTokens,public,False,0,0,0x3806
"    prev=[0x10b30x35a], succ=[]",0x3806,0,0,0,ETHForTokens,public,False,0,0,0x3806
    =================================,0x3806,0,0,0,ETHForTokens,public,False,0,0,0x3806
    0x3807: STOP ,0x3806,0,0,STOP,ETHForTokens,public,False,0,0,0x3806
    Begin block 0xf36,0xf36,0,0,0,ETHForTokens,public,False,0,0,0x3806
"    prev=[0xef8], succ=[0xf3b]",0xf36,0,0,0,ETHForTokens,public,False,0,0,0xf3b
    =================================,0xf36,0,0,0,ETHForTokens,public,False,0,0,0xf3b
    0xf37: vf37(0x60) = CONST ,0xf36,vf37,0,CONST,ETHForTokens,public,False,0x60,0,0xf3b
    Begin block 0xed7,0xed7,0,0,0,ETHForTokens,public,False,0,0,0xf3b
"    prev=[0xe99], succ=[0xedc]",0xed7,0,0,0,ETHForTokens,public,False,0,0,0xedc
    =================================,0xed7,0,0,0,ETHForTokens,public,False,0,0,0xedc
    0xed8: ved8(0x60) = CONST ,0xed7,ved8,0,CONST,ETHForTokens,public,False,0x60,0,0xedc
    Begin block 0xe6b,0xe6b,0,0,0,ETHForTokens,public,False,0,0,0xedc
"    prev=[0xe2d], succ=[0xe70]",0xe6b,0,0,0,ETHForTokens,public,False,0,0,0xe70
    =================================,0xe6b,0,0,0,ETHForTokens,public,False,0,0,0xe70
    0xe6c: ve6c(0x60) = CONST ,0xe6b,ve6c,0,CONST,ETHForTokens,public,False,0x60,0,0xe70
},0xe6b,0,0,0,ETHForTokens,public,False,0,0,0xe70
function owner()() public {,0x38b,0,0,public,owner,public,False,0,0,0xe70
    Begin block 0x38b,0x38b,0,0,0,owner,public,False,0,0,0xe70
"    prev=[], succ=[0x394, 0x398]",0x38b,0,0,0,owner,public,False,0,0,"0x394, 0x398"
    =================================,0x38b,0,0,0,owner,public,False,0,0,"0x394, 0x398"
    0x38c: v38c = CALLVALUE ,0x38b,v38c,0,CALLVALUE,owner,public,False,0,0,"0x394, 0x398"
    0x38e: v38e = ISZERO v38c,0x38b,v38e,"0,v38c",ISZERO,owner,public,False,0,0,"0x394, 0x398"
    0x38f: v38f(0x398) = CONST ,0x38b,v38f,0,CONST,owner,public,False,0x398,0,"0x394, 0x398"
"    0x393: JUMPI v38f(0x398), v38e",0x38b,0,"0,v38f,v38e",JUMPI,owner,public,False,0,0,"0x394, 0x398"
    Begin block 0x394,0x394,0,0,0,owner,public,False,0,0,"0x394, 0x398"
"    prev=[0x38b], succ=[]",0x394,0,0,0,owner,public,False,0,0,"0x394, 0x398"
    =================================,0x394,0,0,0,owner,public,False,0,0,"0x394, 0x398"
    0x394: v394(0x0) = CONST ,0x394,v394,0,CONST,owner,public,False,0x0,0,"0x394, 0x398"
"    0x397: REVERT v394(0x0), v394(0x0)",0x394,0,"0,v394,v394",REVERT,owner,public,False,0,0,"0x394, 0x398"
    Begin block 0x398,0x398,0,0,0,owner,public,False,0,0,"0x394, 0x398"
"    prev=[0x38b], succ=[0x10bc]",0x398,0,0,0,owner,public,False,0,0,0x10bc
    =================================,0x398,0,0,0,owner,public,False,0,0,0x10bc
    0x39a: v39a(0x3827) = CONST ,0x398,v39a,0,CONST,owner,public,False,0x3827,0,0x10bc
    0x39e: v39e(0x10bc) = CONST ,0x398,v39e,0,CONST,owner,public,False,0x10bc,0,0x10bc
    0x3a2: JUMP v39e(0x10bc),0x398,0,"0,v39e",JUMP,owner,public,False,0,0,0x10bc
    Begin block 0x10bc,0x10bc,0,0,0,owner,public,False,0,0,0x10bc
"    prev=[0x398], succ=[0x3827]",0x10bc,0,0,0,owner,public,False,0,0,0x3827
    =================================,0x10bc,0,0,0,owner,public,False,0,0,0x3827
    0x10bd: v10bd(0x0) = CONST ,0x10bc,v10bd,0,CONST,owner,public,False,0x0,0,0x3827
    0x10bf: v10bf = SLOAD v10bd(0x0),0x10bc,v10bf,"0,v10bd",SLOAD,owner,public,False,0,0,0x3827
    0x10c0: v10c0(0x100) = CONST ,0x10bc,v10c0,0,CONST,owner,public,False,0x100,0,0x3827
"    0x10c4: v10c4 = DIV v10bf, v10c0(0x100)",0x10bc,v10c4,"0,v10bf,v10c0",DIV,owner,public,False,0,0,0x3827
    0x10c5: v10c5(0x1) = CONST ,0x10bc,v10c5,0,CONST,owner,public,False,0x1,0,0x3827
    0x10c7: v10c7(0x1) = CONST ,0x10bc,v10c7,0,CONST,owner,public,False,0x1,0,0x3827
    0x10c9: v10c9(0xa0) = CONST ,0x10bc,v10c9,0,CONST,owner,public,False,0xa0,0,0x3827
"    0x10cb: v10cb(0x10000000000000000000000000000000000000000) = SHL v10c9(0xa0), v10c7(0x1)",0x10bc,v10cb,"0,v10c9,v10c7",SHL,owner,public,False,0x10000000000000000000000000000000000000000,0,0x3827
"    0x10cc: v10cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10cb(0x10000000000000000000000000000000000000000), v10c5(0x1)",0x10bc,v10cc,"0,v10cb,v10c5",SUB,owner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3827
"    0x10cd: v10cd = AND v10cc(0xffffffffffffffffffffffffffffffffffffffff), v10c4",0x10bc,v10cd,"0,v10cc,v10c4",AND,owner,public,False,0,0,0x3827
    0x10cf: JUMP v39a(0x3827),0x10bc,0,"0,v39a",JUMP,owner,public,False,0,0,0x3827
    Begin block 0x3827,0x3827,0,0,0,owner,public,False,0,0,0x3827
"    prev=[0x10bc], succ=[]",0x3827,0,0,0,owner,public,False,0,0,0x3827
    =================================,0x3827,0,0,0,owner,public,False,0,0,0x3827
    0x3828: v3828(0x40) = CONST ,0x3827,v3828,0,CONST,owner,public,False,0x40,0,0x3827
    0x382b: v382b = MLOAD v3828(0x40),0x3827,v382b,"0,v3828",MLOAD,owner,public,False,0,owner&m0x40,0x3827
    0x382c: v382c(0x1) = CONST ,0x3827,v382c,0,CONST,owner,public,False,0x1,0,0x3827
    0x382e: v382e(0x1) = CONST ,0x3827,v382e,0,CONST,owner,public,False,0x1,0,0x3827
    0x3830: v3830(0xa0) = CONST ,0x3827,v3830,0,CONST,owner,public,False,0xa0,0,0x3827
"    0x3832: v3832(0x10000000000000000000000000000000000000000) = SHL v3830(0xa0), v382e(0x1)",0x3827,v3832,"0,v3830,v382e",SHL,owner,public,False,0x10000000000000000000000000000000000000000,0,0x3827
"    0x3833: v3833(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3832(0x10000000000000000000000000000000000000000), v382c(0x1)",0x3827,v3833,"0,v3832,v382c",SUB,owner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3827
"    0x3836: v3836 = AND v10cd, v3833(0xffffffffffffffffffffffffffffffffffffffff)",0x3827,v3836,"0,v10cd,v3833",AND,owner,public,False,0,0,0x3827
"    0x3838: MSTORE v382b, v3836",0x3827,owner&m0x40,"0,v382b,v3836",MSTORE,owner,public,False,0,owner&m0x40,0x3827
    0x3839: v3839 = MLOAD v3828(0x40),0x3827,v3839,"0,v3828",MLOAD,owner,public,False,0,owner&m0x40,0x3827
"    0x383d: v383d(0x0) = SUB v382b, v3839",0x3827,v383d,"0,v382b,v3839",SUB,owner,public,False,0x0,owner&m0x40-0x0,0x3827
    0x383e: v383e(0x20) = CONST ,0x3827,v383e,0,CONST,owner,public,False,0x20,0,0x3827
"    0x3840: v3840(0x20) = ADD v383e(0x20), v383d(0x0)",0x3827,v3840,"0,v383e,v383d",ADD,owner,public,False,0x20,owner&m0x40-0x0+0x20,0x3827
"    0x3842: RETURN v3839, v3840(0x20)",0x3827,0,"0,v3839,v3840",RETURN,owner,public,False,0,0,0x3827
},0x3827,0,0,0,owner,public,False,0,0,0x3827
function openPool(string)() public {,0x3a3,0,0,public,openPool,public,False,0,0,0x3827
    Begin block 0x3a3,0x3a3,0,0,0,openPool,public,False,0,0,0x3827
"    prev=[], succ=[0x3b7, 0x3bb]",0x3a3,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
    =================================,0x3a3,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
    0x3a4: v3a4(0x3862) = CONST ,0x3a3,v3a4,0,CONST,openPool,public,False,0x3862,0,"0x3b7, 0x3bb"
    0x3a8: v3a8(0x4) = CONST ,0x3a3,v3a8,0,CONST,openPool,public,False,0x4,0,"0x3b7, 0x3bb"
    0x3ab: v3ab = CALLDATASIZE ,0x3a3,v3ab,0,CALLDATASIZE,openPool,public,False,0,0,"0x3b7, 0x3bb"
"    0x3ac: v3ac = SUB v3ab, v3a8(0x4)",0x3a3,v3ac,"0,v3ab,v3a8",SUB,openPool,public,False,0,0,"0x3b7, 0x3bb"
    0x3ad: v3ad(0x20) = CONST ,0x3a3,v3ad,0,CONST,openPool,public,False,0x20,0,"0x3b7, 0x3bb"
"    0x3b0: v3b0 = LT v3ac, v3ad(0x20)",0x3a3,v3b0,"0,v3ac,v3ad",LT,openPool,public,False,0,0,"0x3b7, 0x3bb"
    0x3b1: v3b1 = ISZERO v3b0,0x3a3,v3b1,"0,v3b0",ISZERO,openPool,public,False,0,0,"0x3b7, 0x3bb"
    0x3b2: v3b2(0x3bb) = CONST ,0x3a3,v3b2,0,CONST,openPool,public,False,0x3bb,0,"0x3b7, 0x3bb"
"    0x3b6: JUMPI v3b2(0x3bb), v3b1",0x3a3,0,"0,v3b2,v3b1",JUMPI,openPool,public,False,0,0,"0x3b7, 0x3bb"
    Begin block 0x3b7,0x3b7,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
"    prev=[0x3a3], succ=[]",0x3b7,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
    =================================,0x3b7,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
    0x3b7: v3b7(0x0) = CONST ,0x3b7,v3b7,0,CONST,openPool,public,False,0x0,0,"0x3b7, 0x3bb"
"    0x3ba: REVERT v3b7(0x0), v3b7(0x0)",0x3b7,0,"0,v3b7,v3b7",REVERT,openPool,public,False,0,0,"0x3b7, 0x3bb"
    Begin block 0x3bb,0x3bb,0,0,0,openPool,public,False,0,0,"0x3b7, 0x3bb"
"    prev=[0x3a3], succ=[0x3d3, 0x3d7]",0x3bb,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
    =================================,0x3bb,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
"    0x3bd: v3bd = ADD v3a8(0x4), v3ac",0x3bb,v3bd,"0,v3a8,v3ac",ADD,openPool,public,False,0,0,"0x3d3, 0x3d7"
    0x3bf: v3bf(0x20) = CONST ,0x3bb,v3bf,0,CONST,openPool,public,False,0x20,0,"0x3d3, 0x3d7"
"    0x3c2: v3c2(0x24) = ADD v3a8(0x4), v3bf(0x20)",0x3bb,v3c2,"0,v3a8,v3bf",ADD,openPool,public,False,0x24,0,"0x3d3, 0x3d7"
    0x3c4: v3c4 = CALLDATALOAD v3a8(0x4),0x3bb,v3c4,"0,v3a8",CALLDATALOAD,openPool,public,False,0,0,"0x3d3, 0x3d7"
    0x3c5: v3c5(0x100000000) = CONST ,0x3bb,v3c5,0,CONST,openPool,public,False,0x100000000,0,"0x3d3, 0x3d7"
"    0x3cc: v3cc = GT v3c4, v3c5(0x100000000)",0x3bb,v3cc,"0,v3c4,v3c5",GT,openPool,public,False,0,0,"0x3d3, 0x3d7"
    0x3cd: v3cd = ISZERO v3cc,0x3bb,v3cd,"0,v3cc",ISZERO,openPool,public,False,0,0,"0x3d3, 0x3d7"
    0x3ce: v3ce(0x3d7) = CONST ,0x3bb,v3ce,0,CONST,openPool,public,False,0x3d7,0,"0x3d3, 0x3d7"
"    0x3d2: JUMPI v3ce(0x3d7), v3cd",0x3bb,0,"0,v3ce,v3cd",JUMPI,openPool,public,False,0,0,"0x3d3, 0x3d7"
    Begin block 0x3d3,0x3d3,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
"    prev=[0x3bb], succ=[]",0x3d3,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
    =================================,0x3d3,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
    0x3d3: v3d3(0x0) = CONST ,0x3d3,v3d3,0,CONST,openPool,public,False,0x0,0,"0x3d3, 0x3d7"
"    0x3d6: REVERT v3d3(0x0), v3d3(0x0)",0x3d3,0,"0,v3d3,v3d3",REVERT,openPool,public,False,0,0,"0x3d3, 0x3d7"
    Begin block 0x3d7,0x3d7,0,0,0,openPool,public,False,0,0,"0x3d3, 0x3d7"
"    prev=[0x3bb], succ=[0x3e6, 0x3ea]",0x3d7,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
    =================================,0x3d7,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
"    0x3d9: v3d9 = ADD v3a8(0x4), v3c4",0x3d7,v3d9,"0,v3a8,v3c4",ADD,openPool,public,False,0,0,"0x3e6, 0x3ea"
    0x3db: v3db(0x20) = CONST ,0x3d7,v3db,0,CONST,openPool,public,False,0x20,0,"0x3e6, 0x3ea"
"    0x3de: v3de = ADD v3d9, v3db(0x20)",0x3d7,v3de,"0,v3d9,v3db",ADD,openPool,public,False,0,0,"0x3e6, 0x3ea"
"    0x3df: v3df = GT v3de, v3bd",0x3d7,v3df,"0,v3de,v3bd",GT,openPool,public,False,0,0,"0x3e6, 0x3ea"
    0x3e0: v3e0 = ISZERO v3df,0x3d7,v3e0,"0,v3df",ISZERO,openPool,public,False,0,0,"0x3e6, 0x3ea"
    0x3e1: v3e1(0x3ea) = CONST ,0x3d7,v3e1,0,CONST,openPool,public,False,0x3ea,0,"0x3e6, 0x3ea"
"    0x3e5: JUMPI v3e1(0x3ea), v3e0",0x3d7,0,"0,v3e1,v3e0",JUMPI,openPool,public,False,0,0,"0x3e6, 0x3ea"
    Begin block 0x3e6,0x3e6,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
"    prev=[0x3d7], succ=[]",0x3e6,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
    =================================,0x3e6,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
    0x3e6: v3e6(0x0) = CONST ,0x3e6,v3e6,0,CONST,openPool,public,False,0x0,0,"0x3e6, 0x3ea"
"    0x3e9: REVERT v3e6(0x0), v3e6(0x0)",0x3e6,0,"0,v3e6,v3e6",REVERT,openPool,public,False,0,0,"0x3e6, 0x3ea"
    Begin block 0x3ea,0x3ea,0,0,0,openPool,public,False,0,0,"0x3e6, 0x3ea"
"    prev=[0x3d7], succ=[0x409, 0x40d]",0x3ea,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
    =================================,0x3ea,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
    0x3ec: v3ec = CALLDATALOAD v3d9,0x3ea,v3ec,"0,v3d9",CALLDATALOAD,openPool,public,False,0,0,"0x409, 0x40d"
    0x3ee: v3ee(0x20) = CONST ,0x3ea,v3ee,0,CONST,openPool,public,False,0x20,0,"0x409, 0x40d"
"    0x3f0: v3f0 = ADD v3ee(0x20), v3d9",0x3ea,v3f0,"0,v3ee,v3d9",ADD,openPool,public,False,0,0,"0x409, 0x40d"
    0x3f3: v3f3(0x1) = CONST ,0x3ea,v3f3,0,CONST,openPool,public,False,0x1,0,"0x409, 0x40d"
"    0x3f6: v3f6 = MUL v3ec, v3f3(0x1)",0x3ea,v3f6,"0,v3ec,v3f3",MUL,openPool,public,False,0,0,"0x409, 0x40d"
"    0x3f8: v3f8 = ADD v3f0, v3f6",0x3ea,v3f8,"0,v3f0,v3f6",ADD,openPool,public,False,0,0,"0x409, 0x40d"
"    0x3f9: v3f9 = GT v3f8, v3bd",0x3ea,v3f9,"0,v3f8,v3bd",GT,openPool,public,False,0,0,"0x409, 0x40d"
    0x3fa: v3fa(0x100000000) = CONST ,0x3ea,v3fa,0,CONST,openPool,public,False,0x100000000,0,"0x409, 0x40d"
"    0x401: v401 = GT v3ec, v3fa(0x100000000)",0x3ea,v401,"0,v3ec,v3fa",GT,openPool,public,False,0,0,"0x409, 0x40d"
"    0x402: v402 = OR v401, v3f9",0x3ea,v402,"0,v401,v3f9",OR,openPool,public,False,0,0,"0x409, 0x40d"
    0x403: v403 = ISZERO v402,0x3ea,v403,"0,v402",ISZERO,openPool,public,False,0,0,"0x409, 0x40d"
    0x404: v404(0x40d) = CONST ,0x3ea,v404,0,CONST,openPool,public,False,0x40d,0,"0x409, 0x40d"
"    0x408: JUMPI v404(0x40d), v403",0x3ea,0,"0,v404,v403",JUMPI,openPool,public,False,0,0,"0x409, 0x40d"
    Begin block 0x409,0x409,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
"    prev=[0x3ea], succ=[]",0x409,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
    =================================,0x409,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
    0x409: v409(0x0) = CONST ,0x409,v409,0,CONST,openPool,public,False,0x0,0,"0x409, 0x40d"
"    0x40c: REVERT v409(0x0), v409(0x0)",0x409,0,"0,v409,v409",REVERT,openPool,public,False,0,0,"0x409, 0x40d"
    Begin block 0x40d,0x40d,0,0,0,openPool,public,False,0,0,"0x409, 0x40d"
"    prev=[0x3ea], succ=[0x10d0]",0x40d,0,0,0,openPool,public,False,0,0,0x10d0
    =================================,0x40d,0,0,0,openPool,public,False,0,0,0x10d0
    0x412: v412(0x1f) = CONST ,0x40d,v412,0,CONST,openPool,public,False,0x1f,0,0x10d0
"    0x414: v414 = ADD v412(0x1f), v3ec",0x40d,v414,"0,v412,v3ec",ADD,openPool,public,False,0,0,0x10d0
    0x415: v415(0x20) = CONST ,0x40d,v415,0,CONST,openPool,public,False,0x20,0,0x10d0
"    0x419: v419 = DIV v414, v415(0x20)",0x40d,v419,"0,v414,v415",DIV,openPool,public,False,0,0,0x10d0
"    0x41a: v41a = MUL v419, v415(0x20)",0x40d,v41a,"0,v419,v415",MUL,openPool,public,False,0,0,0x10d0
    0x41b: v41b(0x20) = CONST ,0x40d,v41b,0,CONST,openPool,public,False,0x20,0,0x10d0
"    0x41d: v41d = ADD v41b(0x20), v41a",0x40d,v41d,"0,v41b,v41a",ADD,openPool,public,False,0,0,0x10d0
    0x41e: v41e(0x40) = CONST ,0x40d,v41e,0,CONST,openPool,public,False,0x40,0,0x10d0
    0x420: v420 = MLOAD v41e(0x40),0x40d,v420,"0,v41e",MLOAD,openPool,public,False,0,openPool&m0x40,0x10d0
"    0x423: v423 = ADD v420, v41d",0x40d,v423,"0,v420,v41d",ADD,openPool,public,False,0,0,0x10d0
    0x424: v424(0x40) = CONST ,0x40d,v424,0,CONST,openPool,public,False,0x40,0,0x10d0
"    0x426: MSTORE v424(0x40), v423",0x40d,0,"0,v424,v423",MSTORE,openPool,public,False,0,0,0x10d0
"    0x42e: MSTORE v420, v3ec",0x40d,openPool&m0x40,"0,v420,v3ec",MSTORE,openPool,public,False,0,openPool&m0x40,0x10d0
    0x42f: v42f(0x20) = CONST ,0x40d,v42f,0,CONST,openPool,public,False,0x20,0,0x10d0
"    0x431: v431 = ADD v42f(0x20), v420",0x40d,v431,"0,v42f,v420",ADD,openPool,public,False,0,openPool&m0x40+0x20,0x10d0
"    0x437: CALLDATACOPY v431, v3f0, v3ec",0x40d,0,"0,v431,v3f0,v3ec",CALLDATACOPY,openPool,public,False,0,0,0x10d0
    0x438: v438(0x0) = CONST ,0x40d,v438,0,CONST,openPool,public,False,0x0,0,0x10d0
"    0x43b: v43b = ADD v431, v3ec",0x40d,v43b,"0,v431,v3ec",ADD,openPool,public,False,0,0,0x10d0
"    0x43f: MSTORE v43b, v438(0x0)",0x40d,0,"0,v43b,v438",MSTORE,openPool,public,False,0,0,0x10d0
    0x444: v444(0x10d0) = CONST ,0x40d,v444,0,CONST,openPool,public,False,0x10d0,0,0x10d0
    0x44e: JUMP v444(0x10d0),0x40d,0,"0,v444",JUMP,openPool,public,False,0,0,0x10d0
    Begin block 0x10d0,0x10d0,0,0,0,openPool,public,False,0,0,0x10d0
"    prev=[0x40d], succ=[0x10e1, 0x1118]",0x10d0,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
    =================================,0x10d0,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10d1: v10d1(0x0) = CONST ,0x10d0,v10d1,0,CONST,openPool,public,False,0x0,0,"0x10e1, 0x1118"
    0x10d3: v10d3 = SLOAD v10d1(0x0),0x10d0,v10d3,"0,v10d1",SLOAD,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10d4: v10d4(0xff) = CONST ,0x10d0,v10d4,0,CONST,openPool,public,False,0xff,0,"0x10e1, 0x1118"
"    0x10d6: v10d6 = AND v10d4(0xff), v10d3",0x10d0,v10d6,"0,v10d4,v10d3",AND,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10d7: v10d7 = ISZERO v10d6,0x10d0,v10d7,"0,v10d6",ISZERO,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10d8: v10d8 = ISZERO v10d7,0x10d0,v10d8,"0,v10d7",ISZERO,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10d9: v10d9(0x1) = CONST ,0x10d0,v10d9,0,CONST,openPool,public,False,0x1,0,"0x10e1, 0x1118"
"    0x10db: v10db = EQ v10d9(0x1), v10d8",0x10d0,v10db,"0,v10d9,v10d8",EQ,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10dc: v10dc(0x1118) = CONST ,0x10d0,v10dc,0,CONST,openPool,public,False,0x1118,0,"0x10e1, 0x1118"
"    0x10e0: JUMPI v10dc(0x1118), v10db",0x10d0,0,"0,v10dc,v10db",JUMPI,openPool,public,False,0,0,"0x10e1, 0x1118"
    Begin block 0x10e1,0x10e1,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
"    prev=[0x10d0], succ=[]",0x10e1,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
    =================================,0x10e1,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x10e1: v10e1(0x40) = CONST ,0x10e1,v10e1,0,CONST,openPool,public,False,0x40,0,"0x10e1, 0x1118"
    0x10e3: v10e3 = MLOAD v10e1(0x40),0x10e1,v10e3,"0,v10e1",MLOAD,openPool,public,False,0,openPool&m0x40,"0x10e1, 0x1118"
    0x10e4: v10e4(0x461bcd) = CONST ,0x10e1,v10e4,0,CONST,openPool,public,False,0x461bcd,0,"0x10e1, 0x1118"
    0x10e8: v10e8(0xe5) = CONST ,0x10e1,v10e8,0,CONST,openPool,public,False,0xe5,0,"0x10e1, 0x1118"
"    0x10ea: v10ea(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v10e8(0xe5), v10e4(0x461bcd)",0x10e1,v10ea,"0,v10e8,v10e4",SHL,openPool,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x10e1, 0x1118"
"    0x10ec: MSTORE v10e3, v10ea(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x10e1,openPool&m0x40,"0,v10e3,v10ea",MSTORE,openPool,public,False,0,openPool&m0x40,"0x10e1, 0x1118"
    0x10ed: v10ed(0x4) = CONST ,0x10e1,v10ed,0,CONST,openPool,public,False,0x4,0,"0x10e1, 0x1118"
"    0x10ef: v10ef = ADD v10ed(0x4), v10e3",0x10e1,v10ef,"0,v10ed,v10e3",ADD,openPool,public,False,0,openPool&m0x40+0x4,"0x10e1, 0x1118"
    0x10f2: v10f2(0x20) = CONST ,0x10e1,v10f2,0,CONST,openPool,public,False,0x20,0,"0x10e1, 0x1118"
"    0x10f4: v10f4 = ADD v10f2(0x20), v10ef",0x10e1,v10f4,"0,v10f2,v10ef",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20,"0x10e1, 0x1118"
"    0x10f7: v10f7(0x20) = SUB v10f4, v10ef",0x10e1,v10f7,"0,v10f4,v10ef",SUB,openPool,public,False,0x20,openPool&m0x40+0x4+0x20-0x20,"0x10e1, 0x1118"
"    0x10f9: MSTORE v10ef, v10f7(0x20)",0x10e1,openPool&m0x40+0x4,"0,v10ef,v10f7",MSTORE,openPool,public,False,0,openPool&m0x40+0x4,"0x10e1, 0x1118"
    0x10fa: v10fa(0x32) = CONST ,0x10e1,v10fa,0,CONST,openPool,public,False,0x32,0,"0x10e1, 0x1118"
"    0x10fd: MSTORE v10f4, v10fa(0x32)",0x10e1,openPool&m0x40+0x4+0x20,"0,v10f4,v10fa",MSTORE,openPool,public,False,0,openPool&m0x40+0x4+0x20,"0x10e1, 0x1118"
    0x10fe: v10fe(0x20) = CONST ,0x10e1,v10fe,0,CONST,openPool,public,False,0x20,0,"0x10e1, 0x1118"
"    0x1100: v1100 = ADD v10fe(0x20), v10f4",0x10e1,v1100,"0,v10fe,v10f4",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20+0x20,"0x10e1, 0x1118"
    0x1102: v1102(0x3466) = CONST ,0x10e1,v1102,0,CONST,openPool,public,False,0x3466,0,"0x10e1, 0x1118"
    0x1106: v1106(0x32) = CONST ,0x10e1,v1106,0,CONST,openPool,public,False,0x32,0,"0x10e1, 0x1118"
"    0x1109: CODECOPY v1100, v1102(0x3466), v1106(0x32)",0x10e1,0,"0,v1100,v1102,v1106",CODECOPY,openPool,public,False,0,0,"0x10e1, 0x1118"
    0x110a: v110a(0x40) = CONST ,0x10e1,v110a,0,CONST,openPool,public,False,0x40,0,"0x10e1, 0x1118"
"    0x110c: v110c = ADD v110a(0x40), v1100",0x10e1,v110c,"0,v110a,v1100",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20+0x20+0x40,"0x10e1, 0x1118"
    0x1110: v1110(0x40) = CONST ,0x10e1,v1110,0,CONST,openPool,public,False,0x40,0,"0x10e1, 0x1118"
    0x1112: v1112 = MLOAD v1110(0x40),0x10e1,v1112,"0,v1110",MLOAD,openPool,public,False,0,openPool&m0x40,"0x10e1, 0x1118"
"    0x1115: v1115(0x84) = SUB v110c, v1112",0x10e1,v1115,"0,v110c,v1112",SUB,openPool,public,False,0x84,openPool&m0x40+0x4+0x20+0x20+0x40-0x84,"0x10e1, 0x1118"
"    0x1117: REVERT v1112, v1115(0x84)",0x10e1,0,"0,v1112,v1115",REVERT,openPool,public,False,0,0,"0x10e1, 0x1118"
    Begin block 0x1118,0x1118,0,0,0,openPool,public,False,0,0,"0x10e1, 0x1118"
"    prev=[0x10d0], succ=[0x1129, 0x112d]",0x1118,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
    =================================,0x1118,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
    0x1119: v1119(0xb1a2bc2ec50000) = CONST ,0x1118,v1119,0,CONST,openPool,public,False,0xb1a2bc2ec50000,0,"0x1129, 0x112d"
    0x1121: v1121 = CALLVALUE ,0x1118,v1121,0,CALLVALUE,openPool,public,False,0,0,"0x1129, 0x112d"
"    0x1122: v1122 = LT v1121, v1119(0xb1a2bc2ec50000)",0x1118,v1122,"0,v1121,v1119",LT,openPool,public,False,0,0,"0x1129, 0x112d"
    0x1123: v1123 = ISZERO v1122,0x1118,v1123,"0,v1122",ISZERO,openPool,public,False,0,0,"0x1129, 0x112d"
    0x1124: v1124(0x112d) = CONST ,0x1118,v1124,0,CONST,openPool,public,False,0x112d,0,"0x1129, 0x112d"
"    0x1128: JUMPI v1124(0x112d), v1123",0x1118,0,"0,v1124,v1123",JUMPI,openPool,public,False,0,0,"0x1129, 0x112d"
    Begin block 0x1129,0x1129,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
"    prev=[0x1118], succ=[]",0x1129,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
    =================================,0x1129,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
    0x1129: v1129(0x0) = CONST ,0x1129,v1129,0,CONST,openPool,public,False,0x0,0,"0x1129, 0x112d"
"    0x112c: REVERT v1129(0x0), v1129(0x0)",0x1129,0,"0,v1129,v1129",REVERT,openPool,public,False,0,0,"0x1129, 0x112d"
    Begin block 0x112d,0x112d,0,0,0,openPool,public,False,0,0,"0x1129, 0x112d"
"    prev=[0x1118], succ=[0x1175, 0x1179]",0x112d,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
    =================================,0x112d,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
    0x112e: v112e(0xa) = CONST ,0x112d,v112e,0,CONST,openPool,public,False,0xa,0,"0x1175, 0x1179"
    0x1130: v1130 = SLOAD v112e(0xa),0x112d,v1130,"0,v112e",SLOAD,openPool,public,False,0,0,"0x1175, 0x1179"
    0x1131: v1131(0x40) = CONST ,0x112d,v1131,0,CONST,openPool,public,False,0x40,0,"0x1175, 0x1179"
    0x1134: v1134 = MLOAD v1131(0x40),0x112d,v1134,"0,v1131",MLOAD,openPool,public,False,0,openPool&m0x40,"0x1175, 0x1179"
    0x1135: v1135(0xdd6d77a7) = CONST ,0x112d,v1135,0,CONST,openPool,public,False,0xdd6d77a7,0,"0x1175, 0x1179"
    0x113a: v113a(0xe0) = CONST ,0x112d,v113a,0,CONST,openPool,public,False,0xe0,0,"0x1175, 0x1179"
"    0x113c: v113c(0xdd6d77a700000000000000000000000000000000000000000000000000000000) = SHL v113a(0xe0), v1135(0xdd6d77a7)",0x112d,v113c,"0,v113a,v1135",SHL,openPool,public,False,0xdd6d77a700000000000000000000000000000000000000000000000000000000,0,"0x1175, 0x1179"
"    0x113e: MSTORE v1134, v113c(0xdd6d77a700000000000000000000000000000000000000000000000000000000)",0x112d,openPool&m0x40,"0,v1134,v113c",MSTORE,openPool,public,False,0,openPool&m0x40,"0x1175, 0x1179"
    0x113f: v113f = CALLER ,0x112d,v113f,0,CALLER,openPool,public,True,0,0,"0x1175, 0x1179"
    0x1140: v1140(0x4) = CONST ,0x112d,v1140,0,CONST,openPool,public,False,0x4,0,"0x1175, 0x1179"
"    0x1143: v1143 = ADD v1134, v1140(0x4)",0x112d,v1143,"0,v1134,v1140",ADD,openPool,public,False,0,openPool&m0x40+0x4,"0x1175, 0x1179"
"    0x1144: MSTORE v1143, v113f",0x112d,openPool&m0x40+0x4,"0,v1143,v113f",MSTORE,openPool,public,False,0,openPool&m0x40+0x4,"0x1175, 0x1179"
    0x1146: v1146 = MLOAD v1131(0x40),0x112d,v1146,"0,v1131",MLOAD,openPool,public,False,0,openPool&m0x40,"0x1175, 0x1179"
    0x1147: v1147(0x1) = CONST ,0x112d,v1147,0,CONST,openPool,public,False,0x1,0,"0x1175, 0x1179"
    0x1149: v1149(0x1) = CONST ,0x112d,v1149,0,CONST,openPool,public,False,0x1,0,"0x1175, 0x1179"
    0x114b: v114b(0xa0) = CONST ,0x112d,v114b,0,CONST,openPool,public,False,0xa0,0,"0x1175, 0x1179"
"    0x114d: v114d(0x10000000000000000000000000000000000000000) = SHL v114b(0xa0), v1149(0x1)",0x112d,v114d,"0,v114b,v1149",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,"0x1175, 0x1179"
"    0x114e: v114e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v114d(0x10000000000000000000000000000000000000000), v1147(0x1)",0x112d,v114e,"0,v114d,v1147",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1175, 0x1179"
"    0x1151: v1151 = AND v1130, v114e(0xffffffffffffffffffffffffffffffffffffffff)",0x112d,v1151,"0,v1130,v114e",AND,openPool,public,False,0,0,"0x1175, 0x1179"
    0x1153: v1153(0xdd6d77a7) = CONST ,0x112d,v1153,0,CONST,openPool,public,False,0xdd6d77a7,0,"0x1175, 0x1179"
    0x1159: v1159(0x24) = CONST ,0x112d,v1159,0,CONST,openPool,public,False,0x24,0,"0x1175, 0x1179"
"    0x115d: v115d = ADD v1134, v1159(0x24)",0x112d,v115d,"0,v1134,v1159",ADD,openPool,public,False,0,openPool&m0x40+0x24,"0x1175, 0x1179"
    0x115f: v115f(0x20) = CONST ,0x112d,v115f,0,CONST,openPool,public,False,0x20,0,"0x1175, 0x1179"
"    0x1167: v1167(0x0) = SUB v1134, v1146",0x112d,v1167,"0,v1134,v1146",SUB,openPool,public,False,0x0,openPool&m0x40-0x0,"0x1175, 0x1179"
"    0x1168: v1168(0x24) = ADD v1167(0x0), v1159(0x24)",0x112d,v1168,"0,v1167,v1159",ADD,openPool,public,False,0x24,openPool&m0x40-0x0+0x24,"0x1175, 0x1179"
    0x116c: v116c = EXTCODESIZE v1151,0x112d,v116c,"0,v1151",EXTCODESIZE,openPool,public,False,0,0,"0x1175, 0x1179"
    0x116d: v116d = ISZERO v116c,0x112d,v116d,"0,v116c",ISZERO,openPool,public,False,0,0,"0x1175, 0x1179"
    0x116f: v116f = ISZERO v116d,0x112d,v116f,"0,v116d",ISZERO,openPool,public,False,0,0,"0x1175, 0x1179"
    0x1170: v1170(0x1179) = CONST ,0x112d,v1170,0,CONST,openPool,public,False,0x1179,0,"0x1175, 0x1179"
"    0x1174: JUMPI v1170(0x1179), v116f",0x112d,0,"0,v1170,v116f",JUMPI,openPool,public,False,0,0,"0x1175, 0x1179"
    Begin block 0x1175,0x1175,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
"    prev=[0x112d], succ=[]",0x1175,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
    =================================,0x1175,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
    0x1175: v1175(0x0) = CONST ,0x1175,v1175,0,CONST,openPool,public,False,0x0,0,"0x1175, 0x1179"
"    0x1178: REVERT v1175(0x0), v1175(0x0)",0x1175,0,"0,v1175,v1175",REVERT,openPool,public,False,0,0,"0x1175, 0x1179"
    Begin block 0x1179,0x1179,0,0,0,openPool,public,False,0,0,"0x1175, 0x1179"
"    prev=[0x112d], succ=[0x1185, 0x118e]",0x1179,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
    =================================,0x1179,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
    0x117b: v117b = GAS ,0x1179,v117b,0,GAS,openPool,public,False,0,0,"0x1185, 0x118e"
"    0x117c: v117c = STATICCALL v117b, v1151, v1146, v1168(0x24), v1146, v115f(0x20)",0x1179,v117c,"0,v117b,v1151,v1146,v1168,v1146,v115f",STATICCALL,openPool,public,False,0,0,"0x1185, 0x118e"
    0x117d: v117d = ISZERO v117c,0x1179,v117d,"0,v117c",ISZERO,openPool,public,False,0,0,"0x1185, 0x118e"
    0x117f: v117f = ISZERO v117d,0x1179,v117f,"0,v117d",ISZERO,openPool,public,False,0,0,"0x1185, 0x118e"
    0x1180: v1180(0x118e) = CONST ,0x1179,v1180,0,CONST,openPool,public,False,0x118e,0,"0x1185, 0x118e"
"    0x1184: JUMPI v1180(0x118e), v117f",0x1179,0,"0,v1180,v117f",JUMPI,openPool,public,False,0,0,"0x1185, 0x118e"
    Begin block 0x1185,0x1185,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
"    prev=[0x1179], succ=[]",0x1185,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
    =================================,0x1185,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
    0x1185: v1185 = RETURNDATASIZE ,0x1185,v1185,0,RETURNDATASIZE,openPool,public,False,0,0,"0x1185, 0x118e"
    0x1186: v1186(0x0) = CONST ,0x1185,v1186,0,CONST,openPool,public,False,0x0,0,"0x1185, 0x118e"
"    0x1189: RETURNDATACOPY v1186(0x0), v1186(0x0), v1185",0x1185,0,"0,v1186,v1186,v1185",RETURNDATACOPY,openPool,public,False,0,0,"0x1185, 0x118e"
    0x118a: v118a = RETURNDATASIZE ,0x1185,v118a,0,RETURNDATASIZE,openPool,public,False,0,0,"0x1185, 0x118e"
    0x118b: v118b(0x0) = CONST ,0x1185,v118b,0,CONST,openPool,public,False,0x0,0,"0x1185, 0x118e"
"    0x118d: REVERT v118b(0x0), v118a",0x1185,0,"0,v118b,v118a",REVERT,openPool,public,False,0,0,"0x1185, 0x118e"
    Begin block 0x118e,0x118e,0,0,0,openPool,public,False,0,0,"0x1185, 0x118e"
"    prev=[0x1179], succ=[0x11a1, 0x11a5]",0x118e,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
    =================================,0x118e,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
    0x1193: v1193(0x40) = CONST ,0x118e,v1193,0,CONST,openPool,public,False,0x40,0,"0x11a1, 0x11a5"
    0x1195: v1195 = MLOAD v1193(0x40),0x118e,v1195,"0,v1193",MLOAD,openPool,public,False,0,openPool&m0x40,"0x11a1, 0x11a5"
    0x1196: v1196 = RETURNDATASIZE ,0x118e,v1196,0,RETURNDATASIZE,openPool,public,False,0,0,"0x11a1, 0x11a5"
    0x1197: v1197(0x20) = CONST ,0x118e,v1197,0,CONST,openPool,public,False,0x20,0,"0x11a1, 0x11a5"
"    0x119a: v119a = LT v1196, v1197(0x20)",0x118e,v119a,"0,v1196,v1197",LT,openPool,public,False,0,0,"0x11a1, 0x11a5"
    0x119b: v119b = ISZERO v119a,0x118e,v119b,"0,v119a",ISZERO,openPool,public,False,0,0,"0x11a1, 0x11a5"
    0x119c: v119c(0x11a5) = CONST ,0x118e,v119c,0,CONST,openPool,public,False,0x11a5,0,"0x11a1, 0x11a5"
"    0x11a0: JUMPI v119c(0x11a5), v119b",0x118e,0,"0,v119c,v119b",JUMPI,openPool,public,False,0,0,"0x11a1, 0x11a5"
    Begin block 0x11a1,0x11a1,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
"    prev=[0x118e], succ=[]",0x11a1,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
    =================================,0x11a1,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
    0x11a1: v11a1(0x0) = CONST ,0x11a1,v11a1,0,CONST,openPool,public,False,0x0,0,"0x11a1, 0x11a5"
"    0x11a4: REVERT v11a1(0x0), v11a1(0x0)",0x11a1,0,"0,v11a1,v11a1",REVERT,openPool,public,False,0,0,"0x11a1, 0x11a5"
    Begin block 0x11a5,0x11a5,0,0,0,openPool,public,False,0,0,"0x11a1, 0x11a5"
"    prev=[0x118e], succ=[0x11ae, 0x11e5]",0x11a5,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
    =================================,0x11a5,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
    0x11a7: v11a7 = MLOAD v1195,0x11a5,v11a7,"0,v1195",MLOAD,openPool,public,False,0,0,"0x11ae, 0x11e5"
    0x11a8: v11a8 = ISZERO v11a7,0x11a5,v11a8,"0,v11a7",ISZERO,openPool,public,False,0,0,"0x11ae, 0x11e5"
    0x11a9: v11a9(0x11e5) = CONST ,0x11a5,v11a9,0,CONST,openPool,public,False,0x11e5,0,"0x11ae, 0x11e5"
"    0x11ad: JUMPI v11a9(0x11e5), v11a8",0x11a5,0,"0,v11a9,v11a8",JUMPI,openPool,public,False,0,0,"0x11ae, 0x11e5"
    Begin block 0x11ae,0x11ae,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
"    prev=[0x11a5], succ=[]",0x11ae,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
    =================================,0x11ae,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
    0x11ae: v11ae(0x40) = CONST ,0x11ae,v11ae,0,CONST,openPool,public,False,0x40,0,"0x11ae, 0x11e5"
    0x11b0: v11b0 = MLOAD v11ae(0x40),0x11ae,v11b0,"0,v11ae",MLOAD,openPool,public,False,0,openPool&m0x40,"0x11ae, 0x11e5"
    0x11b1: v11b1(0x461bcd) = CONST ,0x11ae,v11b1,0,CONST,openPool,public,False,0x461bcd,0,"0x11ae, 0x11e5"
    0x11b5: v11b5(0xe5) = CONST ,0x11ae,v11b5,0,CONST,openPool,public,False,0xe5,0,"0x11ae, 0x11e5"
"    0x11b7: v11b7(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v11b5(0xe5), v11b1(0x461bcd)",0x11ae,v11b7,"0,v11b5,v11b1",SHL,openPool,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x11ae, 0x11e5"
"    0x11b9: MSTORE v11b0, v11b7(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x11ae,openPool&m0x40,"0,v11b0,v11b7",MSTORE,openPool,public,False,0,openPool&m0x40,"0x11ae, 0x11e5"
    0x11ba: v11ba(0x4) = CONST ,0x11ae,v11ba,0,CONST,openPool,public,False,0x4,0,"0x11ae, 0x11e5"
"    0x11bc: v11bc = ADD v11ba(0x4), v11b0",0x11ae,v11bc,"0,v11ba,v11b0",ADD,openPool,public,False,0,openPool&m0x40+0x4,"0x11ae, 0x11e5"
    0x11bf: v11bf(0x20) = CONST ,0x11ae,v11bf,0,CONST,openPool,public,False,0x20,0,"0x11ae, 0x11e5"
"    0x11c1: v11c1 = ADD v11bf(0x20), v11bc",0x11ae,v11c1,"0,v11bf,v11bc",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20,"0x11ae, 0x11e5"
"    0x11c4: v11c4(0x20) = SUB v11c1, v11bc",0x11ae,v11c4,"0,v11c1,v11bc",SUB,openPool,public,False,0x20,openPool&m0x40+0x4+0x20-0x20,"0x11ae, 0x11e5"
"    0x11c6: MSTORE v11bc, v11c4(0x20)",0x11ae,openPool&m0x40+0x4,"0,v11bc,v11c4",MSTORE,openPool,public,False,0,openPool&m0x40+0x4,"0x11ae, 0x11e5"
    0x11c7: v11c7(0x27) = CONST ,0x11ae,v11c7,0,CONST,openPool,public,False,0x27,0,"0x11ae, 0x11e5"
"    0x11ca: MSTORE v11c1, v11c7(0x27)",0x11ae,openPool&m0x40+0x4+0x20,"0,v11c1,v11c7",MSTORE,openPool,public,False,0,openPool&m0x40+0x4+0x20,"0x11ae, 0x11e5"
    0x11cb: v11cb(0x20) = CONST ,0x11ae,v11cb,0,CONST,openPool,public,False,0x20,0,"0x11ae, 0x11e5"
"    0x11cd: v11cd = ADD v11cb(0x20), v11c1",0x11ae,v11cd,"0,v11cb,v11c1",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20+0x20,"0x11ae, 0x11e5"
    0x11cf: v11cf(0x33ce) = CONST ,0x11ae,v11cf,0,CONST,openPool,public,False,0x33ce,0,"0x11ae, 0x11e5"
    0x11d3: v11d3(0x27) = CONST ,0x11ae,v11d3,0,CONST,openPool,public,False,0x27,0,"0x11ae, 0x11e5"
"    0x11d6: CODECOPY v11cd, v11cf(0x33ce), v11d3(0x27)",0x11ae,0,"0,v11cd,v11cf,v11d3",CODECOPY,openPool,public,False,0,0,"0x11ae, 0x11e5"
    0x11d7: v11d7(0x40) = CONST ,0x11ae,v11d7,0,CONST,openPool,public,False,0x40,0,"0x11ae, 0x11e5"
"    0x11d9: v11d9 = ADD v11d7(0x40), v11cd",0x11ae,v11d9,"0,v11d7,v11cd",ADD,openPool,public,False,0,openPool&m0x40+0x4+0x20+0x20+0x40,"0x11ae, 0x11e5"
    0x11dd: v11dd(0x40) = CONST ,0x11ae,v11dd,0,CONST,openPool,public,False,0x40,0,"0x11ae, 0x11e5"
    0x11df: v11df = MLOAD v11dd(0x40),0x11ae,v11df,"0,v11dd",MLOAD,openPool,public,False,0,openPool&m0x40,"0x11ae, 0x11e5"
"    0x11e2: v11e2(0x84) = SUB v11d9, v11df",0x11ae,v11e2,"0,v11d9,v11df",SUB,openPool,public,False,0x84,openPool&m0x40+0x4+0x20+0x20+0x40-0x84,"0x11ae, 0x11e5"
"    0x11e4: REVERT v11df, v11e2(0x84)",0x11ae,0,"0,v11df,v11e2",REVERT,openPool,public,False,0,0,"0x11ae, 0x11e5"
    Begin block 0x11e5,0x11e5,0,0,0,openPool,public,False,0,0,"0x11ae, 0x11e5"
"    prev=[0x11a5], succ=[0x2017]",0x11e5,0,0,0,openPool,public,False,0,0,0x2017
    =================================,0x11e5,0,0,0,openPool,public,False,0,0,0x2017
    0x11e6: v11e6(0x0) = CONST ,0x11e5,v11e6,0,CONST,openPool,public,False,0x0,0,0x2017
    0x11e8: v11e8 = ADDRESS ,0x11e5,v11e8,0,ADDRESS,openPool,public,False,0,0,0x2017
    0x11e9: v11e9(0x40) = CONST ,0x11e5,v11e9,0,CONST,openPool,public,False,0x40,0,0x2017
    0x11eb: v11eb = MLOAD v11e9(0x40),0x11e5,v11eb,"0,v11e9",MLOAD,openPool,public,False,0,openPool&m0x40,0x2017
    0x11ec: v11ec(0x11f6) = CONST ,0x11e5,v11ec,0,CONST,openPool,public,False,0x11f6,0,0x2017
    0x11f1: v11f1(0x2017) = CONST ,0x11e5,v11f1,0,CONST,openPool,public,False,0x2017,0,0x2017
    0x11f5: JUMP v11f1(0x2017),0x11e5,0,"0,v11f1",JUMP,openPool,public,False,0,0,0x2017
    Begin block 0x2017,0x2017,0,0,0,openPool,public,False,0,0,0x2017
"    prev=[0x11e5], succ=[0x11f6]",0x2017,0,0,0,openPool,public,False,0,0,0x11f6
    =================================,0x2017,0,0,0,openPool,public,False,0,0,0x11f6
    0x2018: v2018(0x130c) = CONST ,0x2017,v2018,0,CONST,openPool,public,False,0x130c,0,0x11f6
    0x201c: v201c(0x20c2) = CONST ,0x2017,v201c,0,CONST,openPool,public,False,0x20c2,0,0x11f6
"    0x2021: CODECOPY v11eb, v201c(0x20c2), v2018(0x130c)",0x2017,0,"0,v11eb,v201c,v2018",CODECOPY,openPool,public,False,0,0,0x11f6
"    0x2022: v2022 = ADD v2018(0x130c), v11eb",0x2017,v2022,"0,v2018,v11eb",ADD,openPool,public,False,0,openPool&m0x40+0x130c,0x11f6
    0x2024: JUMP v11ec(0x11f6),0x2017,0,"0,v11ec",JUMP,openPool,public,False,0,0,0x11f6
    Begin block 0x11f6,0x11f6,0,0,0,openPool,public,False,0,0,0x11f6
"    prev=[0x2017], succ=[0x121b, 0x1224]",0x11f6,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
    =================================,0x11f6,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
    0x11f7: v11f7(0x1) = CONST ,0x11f6,v11f7,0,CONST,openPool,public,False,0x1,0,"0x121b, 0x1224"
    0x11f9: v11f9(0x1) = CONST ,0x11f6,v11f9,0,CONST,openPool,public,False,0x1,0,"0x121b, 0x1224"
    0x11fb: v11fb(0xa0) = CONST ,0x11f6,v11fb,0,CONST,openPool,public,False,0xa0,0,"0x121b, 0x1224"
"    0x11fd: v11fd(0x10000000000000000000000000000000000000000) = SHL v11fb(0xa0), v11f9(0x1)",0x11f6,v11fd,"0,v11fb,v11f9",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,"0x121b, 0x1224"
"    0x11fe: v11fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11fd(0x10000000000000000000000000000000000000000), v11f7(0x1)",0x11f6,v11fe,"0,v11fd,v11f7",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x121b, 0x1224"
"    0x1201: v1201 = AND v11e8, v11fe(0xffffffffffffffffffffffffffffffffffffffff)",0x11f6,v1201,"0,v11e8,v11fe",AND,openPool,public,False,0,0,"0x121b, 0x1224"
"    0x1203: MSTORE v2022, v1201",0x11f6,openPool&m0x40+0x130c,"0,v2022,v1201",MSTORE,openPool,public,False,0,openPool&m0x40+0x130c,"0x121b, 0x1224"
    0x1204: v1204(0x40) = CONST ,0x11f6,v1204,0,CONST,openPool,public,False,0x40,0,"0x121b, 0x1224"
    0x1206: v1206 = MLOAD v1204(0x40),0x11f6,v1206,"0,v1204",MLOAD,openPool,public,False,0,openPool&m0x40,"0x121b, 0x1224"
"    0x120a: v120a(0x130c) = SUB v2022, v1206",0x11f6,v120a,"0,v2022,v1206",SUB,openPool,public,False,0x130c,openPool&m0x40+0x130c-0x130c,"0x121b, 0x1224"
    0x120b: v120b(0x20) = CONST ,0x11f6,v120b,0,CONST,openPool,public,False,0x20,0,"0x121b, 0x1224"
"    0x120d: v120d(0x132c) = ADD v120b(0x20), v120a(0x130c)",0x11f6,v120d,"0,v120b,v120a",ADD,openPool,public,False,0x132c,openPool&m0x40+0x130c-0x130c+0x132c,"0x121b, 0x1224"
    0x120f: v120f(0x0) = CONST ,0x11f6,v120f,0,CONST,openPool,public,False,0x0,0,"0x121b, 0x1224"
"    0x1211: v1211 = CREATE v120f(0x0), v1206, v120d(0x132c)",0x11f6,v1211,"0,v120f,v1206,v120d",CREATE,openPool,public,False,0,0,"0x121b, 0x1224"
    0x1213: v1213 = ISZERO v1211,0x11f6,v1213,"0,v1211",ISZERO,openPool,public,False,0,0,"0x121b, 0x1224"
    0x1215: v1215 = ISZERO v1213,0x11f6,v1215,"0,v1213",ISZERO,openPool,public,False,0,0,"0x121b, 0x1224"
    0x1216: v1216(0x1224) = CONST ,0x11f6,v1216,0,CONST,openPool,public,False,0x1224,0,"0x121b, 0x1224"
"    0x121a: JUMPI v1216(0x1224), v1215",0x11f6,0,"0,v1216,v1215",JUMPI,openPool,public,False,0,0,"0x121b, 0x1224"
    Begin block 0x121b,0x121b,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
"    prev=[0x11f6], succ=[]",0x121b,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
    =================================,0x121b,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
    0x121b: v121b = RETURNDATASIZE ,0x121b,v121b,0,RETURNDATASIZE,openPool,public,False,0,0,"0x121b, 0x1224"
    0x121c: v121c(0x0) = CONST ,0x121b,v121c,0,CONST,openPool,public,False,0x0,0,"0x121b, 0x1224"
"    0x121f: RETURNDATACOPY v121c(0x0), v121c(0x0), v121b",0x121b,0,"0,v121c,v121c,v121b",RETURNDATACOPY,openPool,public,False,0,0,"0x121b, 0x1224"
    0x1220: v1220 = RETURNDATASIZE ,0x121b,v1220,0,RETURNDATASIZE,openPool,public,False,0,0,"0x121b, 0x1224"
    0x1221: v1221(0x0) = CONST ,0x121b,v1221,0,CONST,openPool,public,False,0x0,0,"0x121b, 0x1224"
"    0x1223: REVERT v1221(0x0), v1220",0x121b,0,"0,v1221,v1220",REVERT,openPool,public,False,0,0,"0x121b, 0x1224"
    Begin block 0x1224,0x1224,0,0,0,openPool,public,False,0,0,"0x121b, 0x1224"
"    prev=[0x11f6], succ=[0x2025B0x1224]",0x1224,0,0,0,openPool,public,False,0,0,0x2025B0x1224
    =================================,0x1224,0,0,0,openPool,public,False,0,0,0x2025B0x1224
    0x1226: v1226(0x2) = CONST ,0x1224,v1226,0,CONST,openPool,public,False,0x2,0,0x2025B0x1224
    0x1229: v1229 = SLOAD v1226(0x2),0x1224,v1229,"0,v1226",SLOAD,openPool,public,False,0,0,0x2025B0x1224
    0x122a: v122a(0x1) = CONST ,0x1224,v122a,0,CONST,openPool,public,False,0x1,0,0x2025B0x1224
"    0x122d: v122d = ADD v1229, v122a(0x1)",0x1224,v122d,"0,v1229,v122a",ADD,openPool,public,False,0,0,0x2025B0x1224
"    0x1230: SSTORE v1226(0x2), v122d",0x1224,0,"0,v1226,v122d",SSTORE,openPool,public,False,0,0,0x2025B0x1224
    0x1231: v1231(0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace) = CONST ,0x1224,v1231,0,CONST,openPool,public,False,0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace,0,0x2025B0x1224
"    0x1252: v1252 = ADD v1231(0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace), v1229",0x1224,v1252,"0,v1231,v1229",ADD,openPool,public,False,0,0,0x2025B0x1224
    0x1254: v1254 = SLOAD v1252,0x1224,v1254,"0,v1252",SLOAD,openPool,public,False,0,0,0x2025B0x1224
    0x1255: v1255(0x1) = CONST ,0x1224,v1255,0,CONST,openPool,public,False,0x1,0,0x2025B0x1224
    0x1257: v1257(0x1) = CONST ,0x1224,v1257,0,CONST,openPool,public,False,0x1,0,0x2025B0x1224
    0x1259: v1259(0xa0) = CONST ,0x1224,v1259,0,CONST,openPool,public,False,0xa0,0,0x2025B0x1224
"    0x125b: v125b(0x10000000000000000000000000000000000000000) = SHL v1259(0xa0), v1257(0x1)",0x1224,v125b,"0,v1259,v1257",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,0x2025B0x1224
"    0x125c: v125c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v125b(0x10000000000000000000000000000000000000000), v1255(0x1)",0x1224,v125c,"0,v125b,v1255",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2025B0x1224
"    0x125e: v125e = AND v1211, v125c(0xffffffffffffffffffffffffffffffffffffffff)",0x1224,v125e,"0,v1211,v125c",AND,openPool,public,False,0,0,0x2025B0x1224
    0x125f: v125f(0x1) = CONST ,0x1224,v125f,0,CONST,openPool,public,False,0x1,0,0x2025B0x1224
    0x1261: v1261(0x1) = CONST ,0x1224,v1261,0,CONST,openPool,public,False,0x1,0,0x2025B0x1224
    0x1263: v1263(0xa0) = CONST ,0x1224,v1263,0,CONST,openPool,public,False,0xa0,0,0x2025B0x1224
"    0x1265: v1265(0x10000000000000000000000000000000000000000) = SHL v1263(0xa0), v1261(0x1)",0x1224,v1265,"0,v1263,v1261",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,0x2025B0x1224
"    0x1266: v1266(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1265(0x10000000000000000000000000000000000000000), v125f(0x1)",0x1224,v1266,"0,v1265,v125f",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2025B0x1224
    0x1267: v1267(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1266(0xffffffffffffffffffffffffffffffffffffffff),0x1224,v1267,"0,v1266",NOT,openPool,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x2025B0x1224
"    0x126a: v126a = AND v1267(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v1254",0x1224,v126a,"0,v1267,v1254",AND,openPool,public,False,0,0,0x2025B0x1224
"    0x126c: v126c = OR v125e, v126a",0x1224,v126c,"0,v125e,v126a",OR,openPool,public,False,0,0,0x2025B0x1224
"    0x126f: SSTORE v1252, v126c",0x1224,0,"0,v1252,v126c",SSTORE,openPool,public,False,0,0,0x2025B0x1224
    0x1270: v1270 = CALLER ,0x1224,v1270,0,CALLER,openPool,public,True,0,0,0x2025B0x1224
    0x1271: v1271(0x0) = CONST ,0x1224,v1271,0,CONST,openPool,public,False,0x0,0,0x2025B0x1224
"    0x1275: MSTORE v1271(0x0), v1270",0x1224,0,"0,v1271,v1270",MSTORE,openPool,public,False,0,0,0x2025B0x1224
    0x1276: v1276(0x3) = CONST ,0x1224,v1276,0,CONST,openPool,public,False,0x3,0,0x2025B0x1224
    0x1278: v1278(0x20) = CONST ,0x1224,v1278,0,CONST,openPool,public,False,0x20,0,0x2025B0x1224
"    0x127c: MSTORE v1278(0x20), v1276(0x3)",0x1224,0,"0,v1278,v1276",MSTORE,openPool,public,False,0,0,0x2025B0x1224
    0x127d: v127d(0x40) = CONST ,0x1224,v127d,0,CONST,openPool,public,False,0x40,0,0x2025B0x1224
"    0x1281: v1281 = SHA3 v1271(0x0), v127d(0x40)",0x1224,v1281,"0,v1271,v127d",SHA3,openPool,public,False,0,0,0x2025B0x1224
    0x1282: v1282(0x9) = CONST ,0x1224,v1282,0,CONST,openPool,public,False,0x9,0,0x2025B0x1224
"    0x1285: v1285 = ADD v1281, v1282(0x9)",0x1224,v1285,"0,v1281,v1282",ADD,openPool,public,False,0,0,0x2025B0x1224
    0x1287: v1287 = SLOAD v1285,0x1224,v1287,"0,v1285",SLOAD,openPool,public,False,0,0,0x2025B0x1224
"    0x128a: v128a = AND v1267(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v1287",0x1224,v128a,"0,v1267,v1287",AND,openPool,public,False,0,0,0x2025B0x1224
"    0x128d: v128d = OR v125e, v128a",0x1224,v128d,"0,v125e,v128a",OR,openPool,public,False,0,0,0x2025B0x1224
"    0x1290: SSTORE v1285, v128d",0x1224,0,"0,v1285,v128d",SSTORE,openPool,public,False,0,0,0x2025B0x1224
    0x1292: v1292 = MLOAD v420,0x1224,v1292,"0,v420",MLOAD,openPool,public,False,0,0,0x2025B0x1224
    0x1296: v1296(0x12aa) = CONST ,0x1224,v1296,0,CONST,openPool,public,False,0x12aa,0,0x2025B0x1224
    0x129b: v129b(0x6) = CONST ,0x1224,v129b,0,CONST,openPool,public,False,0x6,0,0x2025B0x1224
"    0x129f: v129f = ADD v1281, v129b(0x6)",0x1224,v129f,"0,v1281,v129b",ADD,openPool,public,False,0,0,0x2025B0x1224
"    0x12a3: v12a3 = ADD v420, v1278(0x20)",0x1224,v12a3,"0,v420,v1278",ADD,openPool,public,False,0,openPool&m0x40+0x20,0x2025B0x1224
    0x12a5: v12a5(0x2025) = CONST ,0x1224,v12a5,0,CONST,openPool,public,False,0x2025,0,0x2025B0x1224
    0x12a9: JUMP v12a5(0x2025),0x1224,0,"0,v12a5",JUMP,openPool,public,False,0,0,0x2025B0x1224
    Begin block 0x2025B0x1224,0x2025B0x1224,0,0,0,openPool,public,False,0,0,0x2025B0x1224
"    prev=[0x1224], succ=[0x2068B0x1224, 0x2057B0x1224]",0x2025B0x1224,0,0,0,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    =================================,0x2025B0x1224,0,0,0,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2028S0x1224: v2028V1224 = SLOAD v129f,0x2025B0x1224,v2028V1224,"0,v129f",SLOAD,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2029S0x1224: v2029V1224(0x1) = CONST ,0x2025B0x1224,v2029V1224,0,CONST,openPool,public,False,0x1,0,"0x2068B0x1224, 0x2057B0x1224"
    0x202cS0x1224: v202cV1224(0x1) = CONST ,0x2025B0x1224,v202cV1224,0,CONST,openPool,public,False,0x1,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x202eS0x1224: v202eV1224 = AND v202cV1224(0x1), v2028V1224",0x2025B0x1224,v202eV1224,"0,v202cV1224,v2028V1224",AND,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x202fS0x1224: v202fV1224 = ISZERO v202eV1224,0x2025B0x1224,v202fV1224,"0,v202eV1224",ISZERO,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2030S0x1224: v2030V1224(0x100) = CONST ,0x2025B0x1224,v2030V1224,0,CONST,openPool,public,False,0x100,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2033S0x1224: v2033V1224 = MUL v2030V1224(0x100), v202fV1224",0x2025B0x1224,v2033V1224,"0,v2030V1224,v202fV1224",MUL,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2034S0x1224: v2034V1224 = SUB v2033V1224, v2029V1224(0x1)",0x2025B0x1224,v2034V1224,"0,v2033V1224,v2029V1224",SUB,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2035S0x1224: v2035V1224 = AND v2034V1224, v2028V1224",0x2025B0x1224,v2035V1224,"0,v2034V1224,v2028V1224",AND,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2036S0x1224: v2036V1224(0x2) = CONST ,0x2025B0x1224,v2036V1224,0,CONST,openPool,public,False,0x2,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2039S0x1224: v2039V1224 = DIV v2035V1224, v2036V1224(0x2)",0x2025B0x1224,v2039V1224,"0,v2035V1224,v2036V1224",DIV,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x203bS0x1224: v203bV1224(0x0) = CONST ,0x2025B0x1224,v203bV1224,0,CONST,openPool,public,False,0x0,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x203dS0x1224: MSTORE v203bV1224(0x0), v129f",0x2025B0x1224,0,"0,v203bV1224,v129f",MSTORE,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x203eS0x1224: v203eV1224(0x20) = CONST ,0x2025B0x1224,v203eV1224,0,CONST,openPool,public,False,0x20,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2040S0x1224: v2040V1224(0x0) = CONST ,0x2025B0x1224,v2040V1224,0,CONST,openPool,public,False,0x0,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2042S0x1224: v2042V1224 = SHA3 v2040V1224(0x0), v203eV1224(0x20)",0x2025B0x1224,v2042V1224,"0,v2040V1224,v203eV1224",SHA3,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2044S0x1224: v2044V1224(0x1f) = CONST ,0x2025B0x1224,v2044V1224,0,CONST,openPool,public,False,0x1f,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2046S0x1224: v2046V1224 = ADD v2044V1224(0x1f), v2039V1224",0x2025B0x1224,v2046V1224,"0,v2044V1224,v2039V1224",ADD,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2047S0x1224: v2047V1224(0x20) = CONST ,0x2025B0x1224,v2047V1224,0,CONST,openPool,public,False,0x20,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x204aS0x1224: v204aV1224 = DIV v2046V1224, v2047V1224(0x20)",0x2025B0x1224,v204aV1224,"0,v2046V1224,v2047V1224",DIV,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x204cS0x1224: v204cV1224 = ADD v2042V1224, v204aV1224",0x2025B0x1224,v204cV1224,"0,v2042V1224,v204aV1224",ADD,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x204fS0x1224: v204fV1224(0x1f) = CONST ,0x2025B0x1224,v204fV1224,0,CONST,openPool,public,False,0x1f,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2051S0x1224: v2051V1224 = LT v204fV1224(0x1f), v1292",0x2025B0x1224,v2051V1224,"0,v204fV1224,v1292",LT,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    0x2052S0x1224: v2052V1224(0x2068) = CONST ,0x2025B0x1224,v2052V1224,0,CONST,openPool,public,False,0x2068,0,"0x2068B0x1224, 0x2057B0x1224"
"    0x2056S0x1224: JUMPI v2052V1224(0x2068), v2051V1224",0x2025B0x1224,0,"0,v2052V1224,v2051V1224",JUMPI,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
    Begin block 0x2068B0x1224,0x2068B0x1224,0,0,0,openPool,public,False,0,0,"0x2068B0x1224, 0x2057B0x1224"
"    prev=[0x2025B0x1224], succ=[0x2098B0x1224, 0x2078B0x1224]",0x2068B0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
    =================================,0x2068B0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
"    0x206bS0x1224: v206bV1224 = ADD v1292, v1292",0x2068B0x1224,v206bV1224,"0,v1292,v1292",ADD,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
    0x206cS0x1224: v206cV1224(0x1) = CONST ,0x2068B0x1224,v206cV1224,0,CONST,openPool,public,False,0x1,0,"0x2098B0x1224, 0x2078B0x1224"
"    0x206eS0x1224: v206eV1224 = ADD v206cV1224(0x1), v206bV1224",0x2068B0x1224,v206eV1224,"0,v206cV1224,v206bV1224",ADD,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
"    0x2070S0x1224: SSTORE v129f, v206eV1224",0x2068B0x1224,0,"0,v129f,v206eV1224",SSTORE,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
    0x2072S0x1224: v2072V1224 = ISZERO v1292,0x2068B0x1224,v2072V1224,"0,v1292",ISZERO,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
    0x2073S0x1224: v2073V1224(0x2098) = CONST ,0x2068B0x1224,v2073V1224,0,CONST,openPool,public,False,0x2098,0,"0x2098B0x1224, 0x2078B0x1224"
"    0x2077S0x1224: JUMPI v2073V1224(0x2098), v2072V1224",0x2068B0x1224,0,"0,v2073V1224,v2072V1224",JUMPI,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
    Begin block 0x2098B0x1224,0x2098B0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2078B0x1224"
"    prev=[0x2068B0x1224, 0x207bB0x1224, 0x2057B0x1224], succ=[0x20aaB0x2098B0x1224]",0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20aaB0x2098B0x1224
    =================================,0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20aaB0x2098B0x1224
"    0x2098_0x1S0x1224: v2098_1V1224 = PHI v2042V1224, v2091V1224",0x2098B0x1224,v2098_1V1224,"0,v2042V1224,v2091V1224",PHI,openPool,public,False,0,0,0x20aaB0x2098B0x1224
    0x209aS0x1224: v209aV1224(0x3ce2) = CONST ,0x2098B0x1224,v209aV1224,0,CONST,openPool,public,False,0x3ce2,0,0x20aaB0x2098B0x1224
    0x20a1S0x1224: v20a1V1224(0x20aa) = CONST ,0x2098B0x1224,v20a1V1224,0,CONST,openPool,public,False,0x20aa,0,0x20aaB0x2098B0x1224
    0x20a5S0x1224: JUMP v20a1V1224(0x20aa),0x2098B0x1224,0,"0,v20a1V1224",JUMP,openPool,public,False,0,0,0x20aaB0x2098B0x1224
    Begin block 0x20aaB0x2098B0x1224,0x20aaB0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20aaB0x2098B0x1224
"    prev=[0x2098B0x1224], succ=[0x20abB0x2098B0x1224]",0x20aaB0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
    =================================,0x20aaB0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
    Begin block 0x20abB0x2098B0x1224,0x20abB0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
"    prev=[0x20b5B0x2098B0x1224, 0x20aaB0x2098B0x1224], succ=[0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224]",0x20abB0x2098B0x1224,0,0,0,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
    =================================,0x20abB0x2098B0x1224,0,0,0,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
"    0x20ab_0x0S0x2098S0x1224: v20ab_0V2098V1224 = PHI v2098_1V1224, v20bbV2098V1224",0x20abB0x2098B0x1224,v20ab_0V2098V1224,"0,v2098_1V1224,v20bbV2098V1224",PHI,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
"    0x20aeS0x2098S0x1224: v20aeV2098V1224 = GT v204cV1224, v20ab_0V2098V1224",0x20abB0x2098B0x1224,v20aeV2098V1224,"0,v204cV1224,v20ab_0V2098V1224",GT,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
    0x20afS0x2098S0x1224: v20afV2098V1224 = ISZERO v20aeV2098V1224,0x20abB0x2098B0x1224,v20afV2098V1224,"0,v20aeV2098V1224",ISZERO,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
    0x20b0S0x2098S0x1224: v20b0V2098V1224(0x3d05) = CONST ,0x20abB0x2098B0x1224,v20b0V2098V1224,0,CONST,openPool,public,False,0x3d05,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
"    0x20b4S0x2098S0x1224: JUMPI v20b0V2098V1224(0x3d05), v20afV2098V1224",0x20abB0x2098B0x1224,0,"0,v20b0V2098V1224,v20afV2098V1224",JUMPI,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
    Begin block 0x20b5B0x2098B0x1224,0x20b5B0x2098B0x1224,0,0,0,openPool,public,False,0,0,"0x20b5B0x2098B0x1224, 0x3d05B0x2098B0x1224"
"    prev=[0x20abB0x2098B0x1224], succ=[0x20abB0x2098B0x1224]",0x20b5B0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
    =================================,0x20b5B0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
    0x20b5S0x2098S0x1224: v20b5V2098V1224(0x0) = CONST ,0x20b5B0x2098B0x1224,v20b5V2098V1224,0,CONST,openPool,public,False,0x0,0,0x20abB0x2098B0x1224
"    0x20b5_0x0S0x2098S0x1224: v20b5_0V2098V1224 = PHI v2098_1V1224, v20bbV2098V1224",0x20b5B0x2098B0x1224,v20b5_0V2098V1224,"0,v2098_1V1224,v20bbV2098V1224",PHI,openPool,public,False,0,0,0x20abB0x2098B0x1224
"    0x20b8S0x2098S0x1224: SSTORE v20b5_0V2098V1224, v20b5V2098V1224(0x0)",0x20b5B0x2098B0x1224,0,"0,v20b5_0V2098V1224,v20b5V2098V1224",SSTORE,openPool,public,False,0,0,0x20abB0x2098B0x1224
    0x20b9S0x2098S0x1224: v20b9V2098V1224(0x1) = CONST ,0x20b5B0x2098B0x1224,v20b9V2098V1224,0,CONST,openPool,public,False,0x1,0,0x20abB0x2098B0x1224
"    0x20bbS0x2098S0x1224: v20bbV2098V1224 = ADD v20b9V2098V1224(0x1), v20b5_0V2098V1224",0x20b5B0x2098B0x1224,v20bbV2098V1224,"0,v20b9V2098V1224,v20b5_0V2098V1224",ADD,openPool,public,False,0,0,0x20abB0x2098B0x1224
    0x20bcS0x2098S0x1224: v20bcV2098V1224(0x20ab) = CONST ,0x20b5B0x2098B0x1224,v20bcV2098V1224,0,CONST,openPool,public,False,0x20ab,0,0x20abB0x2098B0x1224
    0x20c0S0x2098S0x1224: JUMP v20bcV2098V1224(0x20ab),0x20b5B0x2098B0x1224,0,"0,v20bcV2098V1224",JUMP,openPool,public,False,0,0,0x20abB0x2098B0x1224
    Begin block 0x3d05B0x2098B0x1224,0x3d05B0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x20abB0x2098B0x1224
"    prev=[0x20abB0x2098B0x1224], succ=[0x3ce2B0x1224]",0x3d05B0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x3ce2B0x1224
    =================================,0x3d05B0x2098B0x1224,0,0,0,openPool,public,False,0,0,0x3ce2B0x1224
    0x3d08S0x2098S0x1224: JUMP v209aV1224(0x3ce2),0x3d05B0x2098B0x1224,0,"0,v209aV1224",JUMP,openPool,public,False,0,0,0x3ce2B0x1224
    Begin block 0x3ce2B0x1224,0x3ce2B0x1224,0,0,0,openPool,public,False,0,0,0x3ce2B0x1224
"    prev=[0x3d05B0x2098B0x1224], succ=[0x12aa]",0x3ce2B0x1224,0,0,0,openPool,public,False,0,0,0x12aa
    =================================,0x3ce2B0x1224,0,0,0,openPool,public,False,0,0,0x12aa
    0x3ce5S0x1224: JUMP v1296(0x12aa),0x3ce2B0x1224,0,"0,v1296",JUMP,openPool,public,False,0,0,0x12aa
    Begin block 0x12aa,0x12aa,0,0,0,openPool,public,False,0,0,0x12aa
"    prev=[0x3ce2B0x1224], succ=[0x12c4]",0x12aa,0,0,0,openPool,public,False,0,0,0x12c4
    =================================,0x12aa,0,0,0,openPool,public,False,0,0,0x12c4
    0x12ac: v12ac(0x9) = CONST ,0x12aa,v12ac,0,CONST,openPool,public,False,0x9,0,0x12c4
    0x12ae: v12ae = SLOAD v12ac(0x9),0x12aa,v12ae,"0,v12ac",SLOAD,openPool,public,False,0,0,0x12c4
    0x12af: v12af(0x1) = CONST ,0x12aa,v12af,0,CONST,openPool,public,False,0x1,0,0x12c4
    0x12b1: v12b1(0x1) = CONST ,0x12aa,v12b1,0,CONST,openPool,public,False,0x1,0,0x12c4
    0x12b3: v12b3(0xa0) = CONST ,0x12aa,v12b3,0,CONST,openPool,public,False,0xa0,0,0x12c4
"    0x12b5: v12b5(0x10000000000000000000000000000000000000000) = SHL v12b3(0xa0), v12b1(0x1)",0x12aa,v12b5,"0,v12b3,v12b1",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,0x12c4
"    0x12b6: v12b6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12b5(0x10000000000000000000000000000000000000000), v12af(0x1)",0x12aa,v12b6,"0,v12b5,v12af",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x12c4
"    0x12b7: v12b7 = AND v12b6(0xffffffffffffffffffffffffffffffffffffffff), v12ae",0x12aa,v12b7,"0,v12b6,v12ae",AND,openPool,public,False,0,0,0x12c4
    0x12b8: v12b8(0x12c4) = CONST ,0x12aa,v12b8,0,CONST,openPool,public,False,0x12c4,0,0x12c4
    0x12bc: v12bc = CALLVALUE ,0x12aa,v12bc,0,CALLVALUE,openPool,public,False,0,0,0x12c4
    0x12bd: v12bd(0xa) = CONST ,0x12aa,v12bd,0,CONST,openPool,public,False,0xa,0,0x12c4
    0x12bf: v12bf(0x1a83) = CONST ,0x12aa,v12bf,0,CONST,openPool,public,False,0x1a83,0,0x12c4
"    0x12c3: v12c3_0 = CALLPRIVATE v12bf(0x1a83), v12bd(0xa), v12bc, v12b8(0x12c4)",0x12aa,v12c3_0,"0,v12bf,v12bd,v12bc,v12b8",CALLPRIVATE,openPool,public,False,0,0,0x12c4
    Begin block 0x12c4,0x12c4,0,0,0,openPool,public,False,0,0,0x12c4
"    prev=[0x12aa], succ=[0x12e0, 0x1302]",0x12c4,0,0,0,openPool,public,False,0,0,"0x12e0, 0x1302"
    =================================,0x12c4,0,0,0,openPool,public,False,0,0,"0x12e0, 0x1302"
    0x12c5: v12c5(0x40) = CONST ,0x12c4,v12c5,0,CONST,openPool,public,False,0x40,0,"0x12e0, 0x1302"
    0x12c7: v12c7 = MLOAD v12c5(0x40),0x12c4,v12c7,"0,v12c5",MLOAD,openPool,public,False,0,openPool&m0x40,"0x12e0, 0x1302"
    0x12c8: v12c8(0x0) = CONST ,0x12c4,v12c8,0,CONST,openPool,public,False,0x0,0,"0x12e0, 0x1302"
    0x12cf: v12cf = GAS ,0x12c4,v12cf,0,GAS,openPool,public,False,0,0,"0x12e0, 0x1302"
"    0x12d0: v12d0 = CALL v12cf, v12b7, v12c3_0, v12c7, v12c8(0x0), v12c7, v12c8(0x0)",0x12c4,v12d0,"0,v12cf,v12b7,v12c3_0,v12c7,v12c8,v12c7,v12c8",CALL,openPool,public,False,0,0,"0x12e0, 0x1302"
    0x12d5: v12d5 = RETURNDATASIZE ,0x12c4,v12d5,0,RETURNDATASIZE,openPool,public,False,0,0,"0x12e0, 0x1302"
    0x12d7: v12d7(0x0) = CONST ,0x12c4,v12d7,0,CONST,openPool,public,False,0x0,0,"0x12e0, 0x1302"
"    0x12da: v12da = EQ v12d5, v12d7(0x0)",0x12c4,v12da,"0,v12d5,v12d7",EQ,openPool,public,False,0,0,"0x12e0, 0x1302"
    0x12db: v12db(0x1302) = CONST ,0x12c4,v12db,0,CONST,openPool,public,False,0x1302,0,"0x12e0, 0x1302"
"    0x12df: JUMPI v12db(0x1302), v12da",0x12c4,0,"0,v12db,v12da",JUMPI,openPool,public,False,0,0,"0x12e0, 0x1302"
    Begin block 0x12e0,0x12e0,0,0,0,openPool,public,False,0,0,"0x12e0, 0x1302"
"    prev=[0x12c4], succ=[0x1307]",0x12e0,0,0,0,openPool,public,False,0,0,0x1307
    =================================,0x12e0,0,0,0,openPool,public,False,0,0,0x1307
    0x12e0: v12e0(0x40) = CONST ,0x12e0,v12e0,0,CONST,openPool,public,False,0x40,0,0x1307
    0x12e2: v12e2 = MLOAD v12e0(0x40),0x12e0,v12e2,"0,v12e0",MLOAD,openPool,public,False,0,openPool&m0x40,0x1307
    0x12e5: v12e5(0x1f) = CONST ,0x12e0,v12e5,0,CONST,openPool,public,False,0x1f,0,0x1307
    0x12e7: v12e7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v12e5(0x1f),0x12e0,v12e7,"0,v12e5",NOT,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x1307
    0x12e8: v12e8(0x3f) = CONST ,0x12e0,v12e8,0,CONST,openPool,public,False,0x3f,0,0x1307
    0x12ea: v12ea = RETURNDATASIZE ,0x12e0,v12ea,0,RETURNDATASIZE,openPool,public,False,0,0,0x1307
"    0x12eb: v12eb = ADD v12ea, v12e8(0x3f)",0x12e0,v12eb,"0,v12ea,v12e8",ADD,openPool,public,False,0,0,0x1307
"    0x12ec: v12ec = AND v12eb, v12e7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x12e0,v12ec,"0,v12eb,v12e7",AND,openPool,public,False,0,0,0x1307
"    0x12ee: v12ee = ADD v12e2, v12ec",0x12e0,v12ee,"0,v12e2,v12ec",ADD,openPool,public,False,0,0,0x1307
    0x12ef: v12ef(0x40) = CONST ,0x12e0,v12ef,0,CONST,openPool,public,False,0x40,0,0x1307
"    0x12f1: MSTORE v12ef(0x40), v12ee",0x12e0,0,"0,v12ef,v12ee",MSTORE,openPool,public,False,0,0,0x1307
    0x12f2: v12f2 = RETURNDATASIZE ,0x12e0,v12f2,0,RETURNDATASIZE,openPool,public,False,0,0,0x1307
"    0x12f4: MSTORE v12e2, v12f2",0x12e0,openPool&m0x40,"0,v12e2,v12f2",MSTORE,openPool,public,False,0,openPool&m0x40,0x1307
    0x12f5: v12f5 = RETURNDATASIZE ,0x12e0,v12f5,0,RETURNDATASIZE,openPool,public,False,0,0,0x1307
    0x12f6: v12f6(0x0) = CONST ,0x12e0,v12f6,0,CONST,openPool,public,False,0x0,0,0x1307
    0x12f8: v12f8(0x20) = CONST ,0x12e0,v12f8,0,CONST,openPool,public,False,0x20,0,0x1307
"    0x12fb: v12fb = ADD v12e2, v12f8(0x20)",0x12e0,v12fb,"0,v12e2,v12f8",ADD,openPool,public,False,0,openPool&m0x40+0x20,0x1307
"    0x12fc: RETURNDATACOPY v12fb, v12f6(0x0), v12f5",0x12e0,0,"0,v12fb,v12f6,v12f5",RETURNDATACOPY,openPool,public,False,0,0,0x1307
    0x12fd: v12fd(0x1307) = CONST ,0x12e0,v12fd,0,CONST,openPool,public,False,0x1307,0,0x1307
    0x1301: JUMP v12fd(0x1307),0x12e0,0,"0,v12fd",JUMP,openPool,public,False,0,0,0x1307
    Begin block 0x1307,0x1307,0,0,0,openPool,public,False,0,0,0x1307
"    prev=[0x12e0, 0x1302], succ=[0x1328]",0x1307,0,0,0,openPool,public,False,0,0,0x1328
    =================================,0x1307,0,0,0,openPool,public,False,0,0,0x1328
    0x130a: v130a(0x8) = CONST ,0x1307,v130a,0,CONST,openPool,public,False,0x8,0,0x1328
    0x130c: v130c = SLOAD v130a(0x8),0x1307,v130c,"0,v130a",SLOAD,openPool,public,False,0,0,0x1328
    0x130d: v130d(0x1) = CONST ,0x1307,v130d,0,CONST,openPool,public,False,0x1,0,0x1328
    0x130f: v130f(0x1) = CONST ,0x1307,v130f,0,CONST,openPool,public,False,0x1,0,0x1328
    0x1311: v1311(0xa0) = CONST ,0x1307,v1311,0,CONST,openPool,public,False,0xa0,0,0x1328
"    0x1313: v1313(0x10000000000000000000000000000000000000000) = SHL v1311(0xa0), v130f(0x1)",0x1307,v1313,"0,v1311,v130f",SHL,openPool,public,False,0x10000000000000000000000000000000000000000,0,0x1328
"    0x1314: v1314(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1313(0x10000000000000000000000000000000000000000), v130d(0x1)",0x1307,v1314,"0,v1313,v130d",SUB,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1328
"    0x1315: v1315 = AND v1314(0xffffffffffffffffffffffffffffffffffffffff), v130c",0x1307,v1315,"0,v1314,v130c",AND,openPool,public,False,0,0,0x1328
    0x1318: v1318(0x1330) = CONST ,0x1307,v1318,0,CONST,openPool,public,False,0x1330,0,0x1328
    0x131c: v131c(0x1328) = CONST ,0x1307,v131c,0,CONST,openPool,public,False,0x1328,0,0x1328
    0x1320: v1320 = CALLVALUE ,0x1307,v1320,0,CALLVALUE,openPool,public,False,0,0,0x1328
    0x1321: v1321(0xa) = CONST ,0x1307,v1321,0,CONST,openPool,public,False,0xa,0,0x1328
    0x1323: v1323(0x1a83) = CONST ,0x1307,v1323,0,CONST,openPool,public,False,0x1a83,0,0x1328
"    0x1327: v1327_0 = CALLPRIVATE v1323(0x1a83), v1321(0xa), v1320, v131c(0x1328)",0x1307,v1327_0,"0,v1323,v1321,v1320,v131c",CALLPRIVATE,openPool,public,False,0,0,0x1328
    Begin block 0x1328,0x1328,0,0,0,openPool,public,False,0,0,0x1328
"    prev=[0x1307], succ=[0x1330]",0x1328,0,0,0,openPool,public,False,0,0,0x1330
    =================================,0x1328,0,0,0,openPool,public,False,0,0,0x1330
    0x1329: v1329 = CALLVALUE ,0x1328,v1329,0,CALLVALUE,openPool,public,False,0,0,0x1330
    0x132b: v132b(0x1ac7) = CONST ,0x1328,v132b,0,CONST,openPool,public,False,0x1ac7,0,0x1330
"    0x132f: v132f_0 = CALLPRIVATE v132b(0x1ac7), v1327_0, v1329, v1318(0x1330)",0x1328,v132f_0,"0,v132b,v1327_0,v1329,v1318",CALLPRIVATE,openPool,public,False,0,0,0x1330
    Begin block 0x1330,0x1330,0,0,0,openPool,public,False,0,0,0x1330
"    prev=[0x1328], succ=[0x134c, 0x136e]",0x1330,0,0,0,openPool,public,False,0,0,"0x134c, 0x136e"
    =================================,0x1330,0,0,0,openPool,public,False,0,0,"0x134c, 0x136e"
    0x1331: v1331(0x40) = CONST ,0x1330,v1331,0,CONST,openPool,public,False,0x40,0,"0x134c, 0x136e"
    0x1333: v1333 = MLOAD v1331(0x40),0x1330,v1333,"0,v1331",MLOAD,openPool,public,False,0,openPool&m0x40,"0x134c, 0x136e"
    0x1334: v1334(0x0) = CONST ,0x1330,v1334,0,CONST,openPool,public,False,0x0,0,"0x134c, 0x136e"
    0x133b: v133b = GAS ,0x1330,v133b,0,GAS,openPool,public,False,0,0,"0x134c, 0x136e"
"    0x133c: v133c = CALL v133b, v1315, v132f_0, v1333, v1334(0x0), v1333, v1334(0x0)",0x1330,v133c,"0,v133b,v1315,v132f_0,v1333,v1334,v1333,v1334",CALL,openPool,public,False,0,0,"0x134c, 0x136e"
    0x1341: v1341 = RETURNDATASIZE ,0x1330,v1341,0,RETURNDATASIZE,openPool,public,False,0,0,"0x134c, 0x136e"
    0x1343: v1343(0x0) = CONST ,0x1330,v1343,0,CONST,openPool,public,False,0x0,0,"0x134c, 0x136e"
"    0x1346: v1346 = EQ v1341, v1343(0x0)",0x1330,v1346,"0,v1341,v1343",EQ,openPool,public,False,0,0,"0x134c, 0x136e"
    0x1347: v1347(0x136e) = CONST ,0x1330,v1347,0,CONST,openPool,public,False,0x136e,0,"0x134c, 0x136e"
"    0x134b: JUMPI v1347(0x136e), v1346",0x1330,0,"0,v1347,v1346",JUMPI,openPool,public,False,0,0,"0x134c, 0x136e"
    Begin block 0x134c,0x134c,0,0,0,openPool,public,False,0,0,"0x134c, 0x136e"
"    prev=[0x1330], succ=[0x1373]",0x134c,0,0,0,openPool,public,False,0,0,0x1373
    =================================,0x134c,0,0,0,openPool,public,False,0,0,0x1373
    0x134c: v134c(0x40) = CONST ,0x134c,v134c,0,CONST,openPool,public,False,0x40,0,0x1373
    0x134e: v134e = MLOAD v134c(0x40),0x134c,v134e,"0,v134c",MLOAD,openPool,public,False,0,openPool&m0x40,0x1373
    0x1351: v1351(0x1f) = CONST ,0x134c,v1351,0,CONST,openPool,public,False,0x1f,0,0x1373
    0x1353: v1353(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1351(0x1f),0x134c,v1353,"0,v1351",NOT,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x1373
    0x1354: v1354(0x3f) = CONST ,0x134c,v1354,0,CONST,openPool,public,False,0x3f,0,0x1373
    0x1356: v1356 = RETURNDATASIZE ,0x134c,v1356,0,RETURNDATASIZE,openPool,public,False,0,0,0x1373
"    0x1357: v1357 = ADD v1356, v1354(0x3f)",0x134c,v1357,"0,v1356,v1354",ADD,openPool,public,False,0,0,0x1373
"    0x1358: v1358 = AND v1357, v1353(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x134c,v1358,"0,v1357,v1353",AND,openPool,public,False,0,0,0x1373
"    0x135a: v135a = ADD v134e, v1358",0x134c,v135a,"0,v134e,v1358",ADD,openPool,public,False,0,0,0x1373
    0x135b: v135b(0x40) = CONST ,0x134c,v135b,0,CONST,openPool,public,False,0x40,0,0x1373
"    0x135d: MSTORE v135b(0x40), v135a",0x134c,0,"0,v135b,v135a",MSTORE,openPool,public,False,0,0,0x1373
    0x135e: v135e = RETURNDATASIZE ,0x134c,v135e,0,RETURNDATASIZE,openPool,public,False,0,0,0x1373
"    0x1360: MSTORE v134e, v135e",0x134c,openPool&m0x40,"0,v134e,v135e",MSTORE,openPool,public,False,0,openPool&m0x40,0x1373
    0x1361: v1361 = RETURNDATASIZE ,0x134c,v1361,0,RETURNDATASIZE,openPool,public,False,0,0,0x1373
    0x1362: v1362(0x0) = CONST ,0x134c,v1362,0,CONST,openPool,public,False,0x0,0,0x1373
    0x1364: v1364(0x20) = CONST ,0x134c,v1364,0,CONST,openPool,public,False,0x20,0,0x1373
"    0x1367: v1367 = ADD v134e, v1364(0x20)",0x134c,v1367,"0,v134e,v1364",ADD,openPool,public,False,0,openPool&m0x40+0x20,0x1373
"    0x1368: RETURNDATACOPY v1367, v1362(0x0), v1361",0x134c,0,"0,v1367,v1362,v1361",RETURNDATACOPY,openPool,public,False,0,0,0x1373
    0x1369: v1369(0x1373) = CONST ,0x134c,v1369,0,CONST,openPool,public,False,0x1373,0,0x1373
    0x136d: JUMP v1369(0x1373),0x134c,0,"0,v1369",JUMP,openPool,public,False,0,0,0x1373
    Begin block 0x1373,0x1373,0,0,0,openPool,public,False,0,0,0x1373
"    prev=[0x134c, 0x136e], succ=[0x3862]",0x1373,0,0,0,openPool,public,False,0,0,0x3862
    =================================,0x1373,0,0,0,openPool,public,False,0,0,0x3862
    0x1379: JUMP v3a4(0x3862),0x1373,0,"0,v3a4",JUMP,openPool,public,False,0,0,0x3862
    Begin block 0x3862,0x3862,0,0,0,openPool,public,False,0,0,0x3862
"    prev=[0x1373], succ=[]",0x3862,0,0,0,openPool,public,False,0,0,0x3862
    =================================,0x3862,0,0,0,openPool,public,False,0,0,0x3862
    0x3863: STOP ,0x3862,0,0,STOP,openPool,public,False,0,0,0x3862
    Begin block 0x136e,0x136e,0,0,0,openPool,public,False,0,0,0x3862
"    prev=[0x1330], succ=[0x1373]",0x136e,0,0,0,openPool,public,False,0,0,0x1373
    =================================,0x136e,0,0,0,openPool,public,False,0,0,0x1373
    0x136f: v136f(0x60) = CONST ,0x136e,v136f,0,CONST,openPool,public,False,0x60,0,0x1373
    Begin block 0x1302,0x1302,0,0,0,openPool,public,False,0,0,0x1373
"    prev=[0x12c4], succ=[0x1307]",0x1302,0,0,0,openPool,public,False,0,0,0x1307
    =================================,0x1302,0,0,0,openPool,public,False,0,0,0x1307
    0x1303: v1303(0x60) = CONST ,0x1302,v1303,0,CONST,openPool,public,False,0x60,0,0x1307
    Begin block 0x2078B0x1224,0x2078B0x1224,0,0,0,openPool,public,False,0,0,0x1307
"    prev=[0x2068B0x1224], succ=[0x207bB0x1224]",0x2078B0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
    =================================,0x2078B0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
"    0x207aS0x1224: v207aV1224 = ADD v12a3, v1292",0x2078B0x1224,v207aV1224,"0,v12a3,v1292",ADD,openPool,public,False,0,0,0x207bB0x1224
    Begin block 0x207bB0x1224,0x207bB0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
"    prev=[0x2078B0x1224, 0x2085B0x1224], succ=[0x2098B0x1224, 0x2085B0x1224]",0x207bB0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
    =================================,0x207bB0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
"    0x207b_0x2S0x1224: v207b_2V1224 = PHI v12a3, v208cV1224",0x207bB0x1224,v207b_2V1224,"0,v12a3,v208cV1224",PHI,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
"    0x207eS0x1224: v207eV1224 = GT v207aV1224, v207b_2V1224",0x207bB0x1224,v207eV1224,"0,v207aV1224,v207b_2V1224",GT,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
    0x207fS0x1224: v207fV1224 = ISZERO v207eV1224,0x207bB0x1224,v207fV1224,"0,v207eV1224",ISZERO,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
    0x2080S0x1224: v2080V1224(0x2098) = CONST ,0x207bB0x1224,v2080V1224,0,CONST,openPool,public,False,0x2098,0,"0x2098B0x1224, 0x2085B0x1224"
"    0x2084S0x1224: JUMPI v2080V1224(0x2098), v207fV1224",0x207bB0x1224,0,"0,v2080V1224,v207fV1224",JUMPI,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
    Begin block 0x2085B0x1224,0x2085B0x1224,0,0,0,openPool,public,False,0,0,"0x2098B0x1224, 0x2085B0x1224"
"    prev=[0x207bB0x1224], succ=[0x207bB0x1224]",0x2085B0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
    =================================,0x2085B0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
"    0x2085_0x1S0x1224: v2085_1V1224 = PHI v2042V1224, v2091V1224",0x2085B0x1224,v2085_1V1224,"0,v2042V1224,v2091V1224",PHI,openPool,public,False,0,0,0x207bB0x1224
"    0x2085_0x2S0x1224: v2085_2V1224 = PHI v12a3, v208cV1224",0x2085B0x1224,v2085_2V1224,"0,v12a3,v208cV1224",PHI,openPool,public,False,0,0,0x207bB0x1224
    0x2086S0x1224: v2086V1224 = MLOAD v2085_2V1224,0x2085B0x1224,v2086V1224,"0,v2085_2V1224",MLOAD,openPool,public,False,0,0,0x207bB0x1224
"    0x2088S0x1224: SSTORE v2085_1V1224, v2086V1224",0x2085B0x1224,0,"0,v2085_1V1224,v2086V1224",SSTORE,openPool,public,False,0,0,0x207bB0x1224
    0x208aS0x1224: v208aV1224(0x20) = CONST ,0x2085B0x1224,v208aV1224,0,CONST,openPool,public,False,0x20,0,0x207bB0x1224
"    0x208cS0x1224: v208cV1224 = ADD v208aV1224(0x20), v2085_2V1224",0x2085B0x1224,v208cV1224,"0,v208aV1224,v2085_2V1224",ADD,openPool,public,False,0,0,0x207bB0x1224
    0x208fS0x1224: v208fV1224(0x1) = CONST ,0x2085B0x1224,v208fV1224,0,CONST,openPool,public,False,0x1,0,0x207bB0x1224
"    0x2091S0x1224: v2091V1224 = ADD v208fV1224(0x1), v2085_1V1224",0x2085B0x1224,v2091V1224,"0,v208fV1224,v2085_1V1224",ADD,openPool,public,False,0,0,0x207bB0x1224
    0x2093S0x1224: v2093V1224(0x207b) = CONST ,0x2085B0x1224,v2093V1224,0,CONST,openPool,public,False,0x207b,0,0x207bB0x1224
    0x2097S0x1224: JUMP v2093V1224(0x207b),0x2085B0x1224,0,"0,v2093V1224",JUMP,openPool,public,False,0,0,0x207bB0x1224
    Begin block 0x2057B0x1224,0x2057B0x1224,0,0,0,openPool,public,False,0,0,0x207bB0x1224
"    prev=[0x2025B0x1224], succ=[0x2098B0x1224]",0x2057B0x1224,0,0,0,openPool,public,False,0,0,0x2098B0x1224
    =================================,0x2057B0x1224,0,0,0,openPool,public,False,0,0,0x2098B0x1224
    0x2058S0x1224: v2058V1224 = MLOAD v12a3,0x2057B0x1224,v2058V1224,"0,v12a3",MLOAD,openPool,public,False,0,0,0x2098B0x1224
    0x2059S0x1224: v2059V1224(0xff) = CONST ,0x2057B0x1224,v2059V1224,0,CONST,openPool,public,False,0xff,0,0x2098B0x1224
    0x205bS0x1224: v205bV1224(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v2059V1224(0xff),0x2057B0x1224,v205bV1224,"0,v2059V1224",NOT,openPool,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x2098B0x1224
"    0x205cS0x1224: v205cV1224 = AND v205bV1224(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v2058V1224",0x2057B0x1224,v205cV1224,"0,v205bV1224,v2058V1224",AND,openPool,public,False,0,0,0x2098B0x1224
"    0x205fS0x1224: v205fV1224 = ADD v1292, v1292",0x2057B0x1224,v205fV1224,"0,v1292,v1292",ADD,openPool,public,False,0,0,0x2098B0x1224
"    0x2060S0x1224: v2060V1224 = OR v205fV1224, v205cV1224",0x2057B0x1224,v2060V1224,"0,v205fV1224,v205cV1224",OR,openPool,public,False,0,0,0x2098B0x1224
"    0x2062S0x1224: SSTORE v129f, v2060V1224",0x2057B0x1224,0,"0,v129f,v2060V1224",SSTORE,openPool,public,False,0,0,0x2098B0x1224
    0x2063S0x1224: v2063V1224(0x2098) = CONST ,0x2057B0x1224,v2063V1224,0,CONST,openPool,public,False,0x2098,0,0x2098B0x1224
    0x2067S0x1224: JUMP v2063V1224(0x2098),0x2057B0x1224,0,"0,v2063V1224",JUMP,openPool,public,False,0,0,0x2098B0x1224
},0x2057B0x1224,0,0,0,openPool,public,False,0,0,0x2098B0x1224
function fallback()() public {,0x3d69,0,0,public,fallback,public,False,0,0,0x2098B0x1224
    Begin block 0x3d69,0x3d69,0,0,0,fallback,public,False,0,0,0x2098B0x1224
"    prev=[], succ=[]",0x3d69,0,0,0,fallback,public,False,0,0,0x2098B0x1224
    =================================,0x3d69,0,0,0,fallback,public,False,0,0,0x2098B0x1224
    0x176: STOP ,0x3d69,0,0,STOP,fallback,public,False,0,0,0x2098B0x1224
},0x3d69,0,0,0,fallback,public,False,0,0,0x2098B0x1224
function pools(uint256)() public {,0x44f,0,0,public,pools,public,False,0,0,0x2098B0x1224
    Begin block 0x44f,0x44f,0,0,0,pools,public,False,0,0,0x2098B0x1224
"    prev=[], succ=[0x458, 0x45c]",0x44f,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
    =================================,0x44f,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
    0x450: v450 = CALLVALUE ,0x44f,v450,0,CALLVALUE,pools,public,False,0,0,"0x458, 0x45c"
    0x452: v452 = ISZERO v450,0x44f,v452,"0,v450",ISZERO,pools,public,False,0,0,"0x458, 0x45c"
    0x453: v453(0x45c) = CONST ,0x44f,v453,0,CONST,pools,public,False,0x45c,0,"0x458, 0x45c"
"    0x457: JUMPI v453(0x45c), v452",0x44f,0,"0,v453,v452",JUMPI,pools,public,False,0,0,"0x458, 0x45c"
    Begin block 0x458,0x458,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
"    prev=[0x44f], succ=[]",0x458,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
    =================================,0x458,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
    0x458: v458(0x0) = CONST ,0x458,v458,0,CONST,pools,public,False,0x0,0,"0x458, 0x45c"
"    0x45b: REVERT v458(0x0), v458(0x0)",0x458,0,"0,v458,v458",REVERT,pools,public,False,0,0,"0x458, 0x45c"
    Begin block 0x45c,0x45c,0,0,0,pools,public,False,0,0,"0x458, 0x45c"
"    prev=[0x44f], succ=[0x471, 0x475]",0x45c,0,0,0,pools,public,False,0,0,"0x471, 0x475"
    =================================,0x45c,0,0,0,pools,public,False,0,0,"0x471, 0x475"
    0x45e: v45e(0x3883) = CONST ,0x45c,v45e,0,CONST,pools,public,False,0x3883,0,"0x471, 0x475"
    0x462: v462(0x4) = CONST ,0x45c,v462,0,CONST,pools,public,False,0x4,0,"0x471, 0x475"
    0x465: v465 = CALLDATASIZE ,0x45c,v465,0,CALLDATASIZE,pools,public,False,0,0,"0x471, 0x475"
"    0x466: v466 = SUB v465, v462(0x4)",0x45c,v466,"0,v465,v462",SUB,pools,public,False,0,0,"0x471, 0x475"
    0x467: v467(0x20) = CONST ,0x45c,v467,0,CONST,pools,public,False,0x20,0,"0x471, 0x475"
"    0x46a: v46a = LT v466, v467(0x20)",0x45c,v46a,"0,v466,v467",LT,pools,public,False,0,0,"0x471, 0x475"
    0x46b: v46b = ISZERO v46a,0x45c,v46b,"0,v46a",ISZERO,pools,public,False,0,0,"0x471, 0x475"
    0x46c: v46c(0x475) = CONST ,0x45c,v46c,0,CONST,pools,public,False,0x475,0,"0x471, 0x475"
"    0x470: JUMPI v46c(0x475), v46b",0x45c,0,"0,v46c,v46b",JUMPI,pools,public,False,0,0,"0x471, 0x475"
    Begin block 0x471,0x471,0,0,0,pools,public,False,0,0,"0x471, 0x475"
"    prev=[0x45c], succ=[]",0x471,0,0,0,pools,public,False,0,0,"0x471, 0x475"
    =================================,0x471,0,0,0,pools,public,False,0,0,"0x471, 0x475"
    0x471: v471(0x0) = CONST ,0x471,v471,0,CONST,pools,public,False,0x0,0,"0x471, 0x475"
"    0x474: REVERT v471(0x0), v471(0x0)",0x471,0,"0,v471,v471",REVERT,pools,public,False,0,0,"0x471, 0x475"
    Begin block 0x475,0x475,0,0,0,pools,public,False,0,0,"0x471, 0x475"
"    prev=[0x45c], succ=[0x137a]",0x475,0,0,0,pools,public,False,0,0,0x137a
    =================================,0x475,0,0,0,pools,public,False,0,0,0x137a
    0x477: v477 = CALLDATALOAD v462(0x4),0x475,v477,"0,v462",CALLDATALOAD,pools,public,False,0,0,0x137a
    0x478: v478(0x137a) = CONST ,0x475,v478,0,CONST,pools,public,False,0x137a,0,0x137a
    0x47c: JUMP v478(0x137a),0x475,0,"0,v478",JUMP,pools,public,False,0,0,0x137a
    Begin block 0x137a,0x137a,0,0,0,pools,public,False,0,0,0x137a
"    prev=[0x475], succ=[0x1387, 0x1388]",0x137a,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
    =================================,0x137a,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
    0x137b: v137b(0x2) = CONST ,0x137a,v137b,0,CONST,pools,public,False,0x2,0,"0x1387, 0x1388"
    0x137f: v137f = SLOAD v137b(0x2),0x137a,v137f,"0,v137b",SLOAD,pools,public,False,0,0,"0x1387, 0x1388"
"    0x1381: v1381 = LT v477, v137f",0x137a,v1381,"0,v477,v137f",LT,pools,public,False,0,0,"0x1387, 0x1388"
    0x1382: v1382(0x1388) = CONST ,0x137a,v1382,0,CONST,pools,public,False,0x1388,0,"0x1387, 0x1388"
"    0x1386: JUMPI v1382(0x1388), v1381",0x137a,0,"0,v1382,v1381",JUMPI,pools,public,False,0,0,"0x1387, 0x1388"
    Begin block 0x1387,0x1387,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
"    prev=[0x137a], succ=[]",0x1387,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
    =================================,0x1387,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
    0x1387: THROW ,0x1387,0,0,THROW,pools,public,False,0,0,"0x1387, 0x1388"
    Begin block 0x1388,0x1388,0,0,0,pools,public,False,0,0,"0x1387, 0x1388"
"    prev=[0x137a], succ=[0x3883]",0x1388,0,0,0,pools,public,False,0,0,0x3883
    =================================,0x1388,0,0,0,pools,public,False,0,0,0x3883
    0x1389: v1389(0x0) = CONST ,0x1388,v1389,0,CONST,pools,public,False,0x0,0,0x3883
"    0x138d: MSTORE v1389(0x0), v137b(0x2)",0x1388,0,"0,v1389,v137b",MSTORE,pools,public,False,0,0,0x3883
    0x138e: v138e(0x20) = CONST ,0x1388,v138e,0,CONST,pools,public,False,0x20,0,0x3883
"    0x1392: v1392 = SHA3 v1389(0x0), v138e(0x20)",0x1388,v1392,"0,v1389,v138e",SHA3,pools,public,False,0,0,0x3883
"    0x1393: v1393 = ADD v1392, v477",0x1388,v1393,"0,v1392,v477",ADD,pools,public,False,0,0,0x3883
    0x1394: v1394 = SLOAD v1393,0x1388,v1394,"0,v1393",SLOAD,pools,public,False,0,0,0x3883
    0x1395: v1395(0x1) = CONST ,0x1388,v1395,0,CONST,pools,public,False,0x1,0,0x3883
    0x1397: v1397(0x1) = CONST ,0x1388,v1397,0,CONST,pools,public,False,0x1,0,0x3883
    0x1399: v1399(0xa0) = CONST ,0x1388,v1399,0,CONST,pools,public,False,0xa0,0,0x3883
"    0x139b: v139b(0x10000000000000000000000000000000000000000) = SHL v1399(0xa0), v1397(0x1)",0x1388,v139b,"0,v1399,v1397",SHL,pools,public,False,0x10000000000000000000000000000000000000000,0,0x3883
"    0x139c: v139c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v139b(0x10000000000000000000000000000000000000000), v1395(0x1)",0x1388,v139c,"0,v139b,v1395",SUB,pools,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3883
"    0x139d: v139d = AND v139c(0xffffffffffffffffffffffffffffffffffffffff), v1394",0x1388,v139d,"0,v139c,v1394",AND,pools,public,False,0,0,0x3883
    0x13a1: JUMP v45e(0x3883),0x1388,0,"0,v45e",JUMP,pools,public,False,0,0,0x3883
    Begin block 0x3883,0x3883,0,0,0,pools,public,False,0,0,0x3883
"    prev=[0x1388], succ=[]",0x3883,0,0,0,pools,public,False,0,0,0x3883
    =================================,0x3883,0,0,0,pools,public,False,0,0,0x3883
    0x3884: v3884(0x40) = CONST ,0x3883,v3884,0,CONST,pools,public,False,0x40,0,0x3883
    0x3887: v3887 = MLOAD v3884(0x40),0x3883,v3887,"0,v3884",MLOAD,pools,public,False,0,pools&m0x40,0x3883
    0x3888: v3888(0x1) = CONST ,0x3883,v3888,0,CONST,pools,public,False,0x1,0,0x3883
    0x388a: v388a(0x1) = CONST ,0x3883,v388a,0,CONST,pools,public,False,0x1,0,0x3883
    0x388c: v388c(0xa0) = CONST ,0x3883,v388c,0,CONST,pools,public,False,0xa0,0,0x3883
"    0x388e: v388e(0x10000000000000000000000000000000000000000) = SHL v388c(0xa0), v388a(0x1)",0x3883,v388e,"0,v388c,v388a",SHL,pools,public,False,0x10000000000000000000000000000000000000000,0,0x3883
"    0x388f: v388f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v388e(0x10000000000000000000000000000000000000000), v3888(0x1)",0x3883,v388f,"0,v388e,v3888",SUB,pools,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3883
"    0x3892: v3892 = AND v139d, v388f(0xffffffffffffffffffffffffffffffffffffffff)",0x3883,v3892,"0,v139d,v388f",AND,pools,public,False,0,0,0x3883
"    0x3894: MSTORE v3887, v3892",0x3883,pools&m0x40,"0,v3887,v3892",MSTORE,pools,public,False,0,pools&m0x40,0x3883
    0x3895: v3895 = MLOAD v3884(0x40),0x3883,v3895,"0,v3884",MLOAD,pools,public,False,0,pools&m0x40,0x3883
"    0x3899: v3899(0x0) = SUB v3887, v3895",0x3883,v3899,"0,v3887,v3895",SUB,pools,public,False,0x0,pools&m0x40-0x0,0x3883
    0x389a: v389a(0x20) = CONST ,0x3883,v389a,0,CONST,pools,public,False,0x20,0,0x3883
"    0x389c: v389c(0x20) = ADD v389a(0x20), v3899(0x0)",0x3883,v389c,"0,v389a,v3899",ADD,pools,public,False,0x20,pools&m0x40-0x0+0x20,0x3883
"    0x389e: RETURN v3895, v389c(0x20)",0x3883,0,"0,v3895,v389c",RETURN,pools,public,False,0,0,0x3883
},0x3883,0,0,0,pools,public,False,0,0,0x3883
function contractManager()() public {,0x47d,0,0,public,contractManager,public,False,0,0,0x3883
    Begin block 0x47d,0x47d,0,0,0,contractManager,public,False,0,0,0x3883
"    prev=[], succ=[0x486, 0x48a]",0x47d,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
    =================================,0x47d,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
    0x47e: v47e = CALLVALUE ,0x47d,v47e,0,CALLVALUE,contractManager,public,False,0,0,"0x486, 0x48a"
    0x480: v480 = ISZERO v47e,0x47d,v480,"0,v47e",ISZERO,contractManager,public,False,0,0,"0x486, 0x48a"
    0x481: v481(0x48a) = CONST ,0x47d,v481,0,CONST,contractManager,public,False,0x48a,0,"0x486, 0x48a"
"    0x485: JUMPI v481(0x48a), v480",0x47d,0,"0,v481,v480",JUMPI,contractManager,public,False,0,0,"0x486, 0x48a"
    Begin block 0x486,0x486,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
"    prev=[0x47d], succ=[]",0x486,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
    =================================,0x486,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
    0x486: v486(0x0) = CONST ,0x486,v486,0,CONST,contractManager,public,False,0x0,0,"0x486, 0x48a"
"    0x489: REVERT v486(0x0), v486(0x0)",0x486,0,"0,v486,v486",REVERT,contractManager,public,False,0,0,"0x486, 0x48a"
    Begin block 0x48a,0x48a,0,0,0,contractManager,public,False,0,0,"0x486, 0x48a"
"    prev=[0x47d], succ=[0x13a2]",0x48a,0,0,0,contractManager,public,False,0,0,0x13a2
    =================================,0x48a,0,0,0,contractManager,public,False,0,0,0x13a2
    0x48c: v48c(0x38be) = CONST ,0x48a,v48c,0,CONST,contractManager,public,False,0x38be,0,0x13a2
    0x490: v490(0x13a2) = CONST ,0x48a,v490,0,CONST,contractManager,public,False,0x13a2,0,0x13a2
    0x494: JUMP v490(0x13a2),0x48a,0,"0,v490",JUMP,contractManager,public,False,0,0,0x13a2
    Begin block 0x13a2,0x13a2,0,0,0,contractManager,public,False,0,0,0x13a2
"    prev=[0x48a], succ=[0x38be]",0x13a2,0,0,0,contractManager,public,False,0,0,0x38be
    =================================,0x13a2,0,0,0,contractManager,public,False,0,0,0x38be
    0x13a3: v13a3(0xb) = CONST ,0x13a2,v13a3,0,CONST,contractManager,public,False,0xb,0,0x38be
    0x13a5: v13a5 = SLOAD v13a3(0xb),0x13a2,v13a5,"0,v13a3",SLOAD,contractManager,public,False,0,0,0x38be
    0x13a6: v13a6(0x1) = CONST ,0x13a2,v13a6,0,CONST,contractManager,public,False,0x1,0,0x38be
    0x13a8: v13a8(0x1) = CONST ,0x13a2,v13a8,0,CONST,contractManager,public,False,0x1,0,0x38be
    0x13aa: v13aa(0xa0) = CONST ,0x13a2,v13aa,0,CONST,contractManager,public,False,0xa0,0,0x38be
"    0x13ac: v13ac(0x10000000000000000000000000000000000000000) = SHL v13aa(0xa0), v13a8(0x1)",0x13a2,v13ac,"0,v13aa,v13a8",SHL,contractManager,public,False,0x10000000000000000000000000000000000000000,0,0x38be
"    0x13ad: v13ad(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13ac(0x10000000000000000000000000000000000000000), v13a6(0x1)",0x13a2,v13ad,"0,v13ac,v13a6",SUB,contractManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x38be
"    0x13ae: v13ae = AND v13ad(0xffffffffffffffffffffffffffffffffffffffff), v13a5",0x13a2,v13ae,"0,v13ad,v13a5",AND,contractManager,public,False,0,0,0x38be
    0x13b0: JUMP v48c(0x38be),0x13a2,0,"0,v48c",JUMP,contractManager,public,False,0,0,0x38be
    Begin block 0x38be,0x38be,0,0,0,contractManager,public,False,0,0,0x38be
"    prev=[0x13a2], succ=[]",0x38be,0,0,0,contractManager,public,False,0,0,0x38be
    =================================,0x38be,0,0,0,contractManager,public,False,0,0,0x38be
    0x38bf: v38bf(0x40) = CONST ,0x38be,v38bf,0,CONST,contractManager,public,False,0x40,0,0x38be
    0x38c2: v38c2 = MLOAD v38bf(0x40),0x38be,v38c2,"0,v38bf",MLOAD,contractManager,public,False,0,contractManager&m0x40,0x38be
    0x38c3: v38c3(0x1) = CONST ,0x38be,v38c3,0,CONST,contractManager,public,False,0x1,0,0x38be
    0x38c5: v38c5(0x1) = CONST ,0x38be,v38c5,0,CONST,contractManager,public,False,0x1,0,0x38be
    0x38c7: v38c7(0xa0) = CONST ,0x38be,v38c7,0,CONST,contractManager,public,False,0xa0,0,0x38be
"    0x38c9: v38c9(0x10000000000000000000000000000000000000000) = SHL v38c7(0xa0), v38c5(0x1)",0x38be,v38c9,"0,v38c7,v38c5",SHL,contractManager,public,False,0x10000000000000000000000000000000000000000,0,0x38be
"    0x38ca: v38ca(0xffffffffffffffffffffffffffffffffffffffff) = SUB v38c9(0x10000000000000000000000000000000000000000), v38c3(0x1)",0x38be,v38ca,"0,v38c9,v38c3",SUB,contractManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x38be
"    0x38cd: v38cd = AND v13ae, v38ca(0xffffffffffffffffffffffffffffffffffffffff)",0x38be,v38cd,"0,v13ae,v38ca",AND,contractManager,public,False,0,0,0x38be
"    0x38cf: MSTORE v38c2, v38cd",0x38be,contractManager&m0x40,"0,v38c2,v38cd",MSTORE,contractManager,public,False,0,contractManager&m0x40,0x38be
    0x38d0: v38d0 = MLOAD v38bf(0x40),0x38be,v38d0,"0,v38bf",MLOAD,contractManager,public,False,0,contractManager&m0x40,0x38be
"    0x38d4: v38d4(0x0) = SUB v38c2, v38d0",0x38be,v38d4,"0,v38c2,v38d0",SUB,contractManager,public,False,0x0,contractManager&m0x40-0x0,0x38be
    0x38d5: v38d5(0x20) = CONST ,0x38be,v38d5,0,CONST,contractManager,public,False,0x20,0,0x38be
"    0x38d7: v38d7(0x20) = ADD v38d5(0x20), v38d4(0x0)",0x38be,v38d7,"0,v38d5,v38d4",ADD,contractManager,public,False,0x20,contractManager&m0x40-0x0+0x20,0x38be
"    0x38d9: RETURN v38d0, v38d7(0x20)",0x38be,0,"0,v38d0,v38d7",RETURN,contractManager,public,False,0,0,0x38be
},0x38be,0,0,0,contractManager,public,False,0,0,0x38be
function fundContract()() public {,0x495,0,0,public,fundContract,public,False,0,0,0x38be
    Begin block 0x495,0x495,0,0,0,fundContract,public,False,0,0,0x38be
"    prev=[], succ=[0x49e, 0x4a2]",0x495,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
    =================================,0x495,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
    0x496: v496 = CALLVALUE ,0x495,v496,0,CALLVALUE,fundContract,public,False,0,0,"0x49e, 0x4a2"
    0x498: v498 = ISZERO v496,0x495,v498,"0,v496",ISZERO,fundContract,public,False,0,0,"0x49e, 0x4a2"
    0x499: v499(0x4a2) = CONST ,0x495,v499,0,CONST,fundContract,public,False,0x4a2,0,"0x49e, 0x4a2"
"    0x49d: JUMPI v499(0x4a2), v498",0x495,0,"0,v499,v498",JUMPI,fundContract,public,False,0,0,"0x49e, 0x4a2"
    Begin block 0x49e,0x49e,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
"    prev=[0x495], succ=[]",0x49e,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
    =================================,0x49e,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
    0x49e: v49e(0x0) = CONST ,0x49e,v49e,0,CONST,fundContract,public,False,0x0,0,"0x49e, 0x4a2"
"    0x4a1: REVERT v49e(0x0), v49e(0x0)",0x49e,0,"0,v49e,v49e",REVERT,fundContract,public,False,0,0,"0x49e, 0x4a2"
    Begin block 0x4a2,0x4a2,0,0,0,fundContract,public,False,0,0,"0x49e, 0x4a2"
"    prev=[0x495], succ=[0x13b1]",0x4a2,0,0,0,fundContract,public,False,0,0,0x13b1
    =================================,0x4a2,0,0,0,fundContract,public,False,0,0,0x13b1
    0x4a4: v4a4(0x38f9) = CONST ,0x4a2,v4a4,0,CONST,fundContract,public,False,0x38f9,0,0x13b1
    0x4a8: v4a8(0x13b1) = CONST ,0x4a2,v4a8,0,CONST,fundContract,public,False,0x13b1,0,0x13b1
    0x4ac: JUMP v4a8(0x13b1),0x4a2,0,"0,v4a8",JUMP,fundContract,public,False,0,0,0x13b1
    Begin block 0x13b1,0x13b1,0,0,0,fundContract,public,False,0,0,0x13b1
"    prev=[0x4a2], succ=[0x38f9]",0x13b1,0,0,0,fundContract,public,False,0,0,0x38f9
    =================================,0x13b1,0,0,0,fundContract,public,False,0,0,0x38f9
    0x13b2: v13b2(0x5) = CONST ,0x13b1,v13b2,0,CONST,fundContract,public,False,0x5,0,0x38f9
    0x13b4: v13b4 = SLOAD v13b2(0x5),0x13b1,v13b4,"0,v13b2",SLOAD,fundContract,public,False,0,0,0x38f9
    0x13b5: v13b5(0x1) = CONST ,0x13b1,v13b5,0,CONST,fundContract,public,False,0x1,0,0x38f9
    0x13b7: v13b7(0x1) = CONST ,0x13b1,v13b7,0,CONST,fundContract,public,False,0x1,0,0x38f9
    0x13b9: v13b9(0xa0) = CONST ,0x13b1,v13b9,0,CONST,fundContract,public,False,0xa0,0,0x38f9
"    0x13bb: v13bb(0x10000000000000000000000000000000000000000) = SHL v13b9(0xa0), v13b7(0x1)",0x13b1,v13bb,"0,v13b9,v13b7",SHL,fundContract,public,False,0x10000000000000000000000000000000000000000,0,0x38f9
"    0x13bc: v13bc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13bb(0x10000000000000000000000000000000000000000), v13b5(0x1)",0x13b1,v13bc,"0,v13bb,v13b5",SUB,fundContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x38f9
"    0x13bd: v13bd = AND v13bc(0xffffffffffffffffffffffffffffffffffffffff), v13b4",0x13b1,v13bd,"0,v13bc,v13b4",AND,fundContract,public,False,0,0,0x38f9
    0x13bf: JUMP v4a4(0x38f9),0x13b1,0,"0,v4a4",JUMP,fundContract,public,False,0,0,0x38f9
    Begin block 0x38f9,0x38f9,0,0,0,fundContract,public,False,0,0,0x38f9
"    prev=[0x13b1], succ=[]",0x38f9,0,0,0,fundContract,public,False,0,0,0x38f9
    =================================,0x38f9,0,0,0,fundContract,public,False,0,0,0x38f9
    0x38fa: v38fa(0x40) = CONST ,0x38f9,v38fa,0,CONST,fundContract,public,False,0x40,0,0x38f9
    0x38fd: v38fd = MLOAD v38fa(0x40),0x38f9,v38fd,"0,v38fa",MLOAD,fundContract,public,False,0,fundContract&m0x40,0x38f9
    0x38fe: v38fe(0x1) = CONST ,0x38f9,v38fe,0,CONST,fundContract,public,False,0x1,0,0x38f9
    0x3900: v3900(0x1) = CONST ,0x38f9,v3900,0,CONST,fundContract,public,False,0x1,0,0x38f9
    0x3902: v3902(0xa0) = CONST ,0x38f9,v3902,0,CONST,fundContract,public,False,0xa0,0,0x38f9
"    0x3904: v3904(0x10000000000000000000000000000000000000000) = SHL v3902(0xa0), v3900(0x1)",0x38f9,v3904,"0,v3902,v3900",SHL,fundContract,public,False,0x10000000000000000000000000000000000000000,0,0x38f9
"    0x3905: v3905(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3904(0x10000000000000000000000000000000000000000), v38fe(0x1)",0x38f9,v3905,"0,v3904,v38fe",SUB,fundContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x38f9
"    0x3908: v3908 = AND v13bd, v3905(0xffffffffffffffffffffffffffffffffffffffff)",0x38f9,v3908,"0,v13bd,v3905",AND,fundContract,public,False,0,0,0x38f9
"    0x390a: MSTORE v38fd, v3908",0x38f9,fundContract&m0x40,"0,v38fd,v3908",MSTORE,fundContract,public,False,0,fundContract&m0x40,0x38f9
    0x390b: v390b = MLOAD v38fa(0x40),0x38f9,v390b,"0,v38fa",MLOAD,fundContract,public,False,0,fundContract&m0x40,0x38f9
"    0x390f: v390f(0x0) = SUB v38fd, v390b",0x38f9,v390f,"0,v38fd,v390b",SUB,fundContract,public,False,0x0,fundContract&m0x40-0x0,0x38f9
    0x3910: v3910(0x20) = CONST ,0x38f9,v3910,0,CONST,fundContract,public,False,0x20,0,0x38f9
"    0x3912: v3912(0x20) = ADD v3910(0x20), v390f(0x0)",0x38f9,v3912,"0,v3910,v390f",ADD,fundContract,public,False,0x20,fundContract&m0x40-0x0+0x20,0x38f9
"    0x3914: RETURN v390b, v3912(0x20)",0x38f9,0,"0,v390b,v3912",RETURN,fundContract,public,False,0,0,0x38f9
},0x38f9,0,0,0,fundContract,public,False,0,0,0x38f9
function managerInit(address)() public {,0x4ad,0,0,public,managerInit,public,False,0,0,0x38f9
    Begin block 0x4ad,0x4ad,0,0,0,managerInit,public,False,0,0,0x38f9
"    prev=[], succ=[0x4b6, 0x4ba]",0x4ad,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    =================================,0x4ad,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    0x4ae: v4ae = CALLVALUE ,0x4ad,v4ae,0,CALLVALUE,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    0x4b0: v4b0 = ISZERO v4ae,0x4ad,v4b0,"0,v4ae",ISZERO,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    0x4b1: v4b1(0x4ba) = CONST ,0x4ad,v4b1,0,CONST,managerInit,public,False,0x4ba,0,"0x4b6, 0x4ba"
"    0x4b5: JUMPI v4b1(0x4ba), v4b0",0x4ad,0,"0,v4b1,v4b0",JUMPI,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    Begin block 0x4b6,0x4b6,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
"    prev=[0x4ad], succ=[]",0x4b6,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    =================================,0x4b6,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    0x4b6: v4b6(0x0) = CONST ,0x4b6,v4b6,0,CONST,managerInit,public,False,0x0,0,"0x4b6, 0x4ba"
"    0x4b9: REVERT v4b6(0x0), v4b6(0x0)",0x4b6,0,"0,v4b6,v4b6",REVERT,managerInit,public,False,0,0,"0x4b6, 0x4ba"
    Begin block 0x4ba,0x4ba,0,0,0,managerInit,public,False,0,0,"0x4b6, 0x4ba"
"    prev=[0x4ad], succ=[0x4cf, 0x4d3]",0x4ba,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    =================================,0x4ba,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    0x4bc: v4bc(0x3934) = CONST ,0x4ba,v4bc,0,CONST,managerInit,public,False,0x3934,0,"0x4cf, 0x4d3"
    0x4c0: v4c0(0x4) = CONST ,0x4ba,v4c0,0,CONST,managerInit,public,False,0x4,0,"0x4cf, 0x4d3"
    0x4c3: v4c3 = CALLDATASIZE ,0x4ba,v4c3,0,CALLDATASIZE,managerInit,public,False,0,0,"0x4cf, 0x4d3"
"    0x4c4: v4c4 = SUB v4c3, v4c0(0x4)",0x4ba,v4c4,"0,v4c3,v4c0",SUB,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    0x4c5: v4c5(0x20) = CONST ,0x4ba,v4c5,0,CONST,managerInit,public,False,0x20,0,"0x4cf, 0x4d3"
"    0x4c8: v4c8 = LT v4c4, v4c5(0x20)",0x4ba,v4c8,"0,v4c4,v4c5",LT,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    0x4c9: v4c9 = ISZERO v4c8,0x4ba,v4c9,"0,v4c8",ISZERO,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    0x4ca: v4ca(0x4d3) = CONST ,0x4ba,v4ca,0,CONST,managerInit,public,False,0x4d3,0,"0x4cf, 0x4d3"
"    0x4ce: JUMPI v4ca(0x4d3), v4c9",0x4ba,0,"0,v4ca,v4c9",JUMPI,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    Begin block 0x4cf,0x4cf,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
"    prev=[0x4ba], succ=[]",0x4cf,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    =================================,0x4cf,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    0x4cf: v4cf(0x0) = CONST ,0x4cf,v4cf,0,CONST,managerInit,public,False,0x0,0,"0x4cf, 0x4d3"
"    0x4d2: REVERT v4cf(0x0), v4cf(0x0)",0x4cf,0,"0,v4cf,v4cf",REVERT,managerInit,public,False,0,0,"0x4cf, 0x4d3"
    Begin block 0x4d3,0x4d3,0,0,0,managerInit,public,False,0,0,"0x4cf, 0x4d3"
"    prev=[0x4ba], succ=[0x13c0]",0x4d3,0,0,0,managerInit,public,False,0,0,0x13c0
    =================================,0x4d3,0,0,0,managerInit,public,False,0,0,0x13c0
    0x4d5: v4d5 = CALLDATALOAD v4c0(0x4),0x4d3,v4d5,"0,v4c0",CALLDATALOAD,managerInit,public,False,0,0,0x13c0
    0x4d6: v4d6(0x1) = CONST ,0x4d3,v4d6,0,CONST,managerInit,public,False,0x1,0,0x13c0
    0x4d8: v4d8(0x1) = CONST ,0x4d3,v4d8,0,CONST,managerInit,public,False,0x1,0,0x13c0
    0x4da: v4da(0xa0) = CONST ,0x4d3,v4da,0,CONST,managerInit,public,False,0xa0,0,0x13c0
"    0x4dc: v4dc(0x10000000000000000000000000000000000000000) = SHL v4da(0xa0), v4d8(0x1)",0x4d3,v4dc,"0,v4da,v4d8",SHL,managerInit,public,False,0x10000000000000000000000000000000000000000,0,0x13c0
"    0x4dd: v4dd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4dc(0x10000000000000000000000000000000000000000), v4d6(0x1)",0x4d3,v4dd,"0,v4dc,v4d6",SUB,managerInit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x13c0
"    0x4de: v4de = AND v4dd(0xffffffffffffffffffffffffffffffffffffffff), v4d5",0x4d3,v4de,"0,v4dd,v4d5",AND,managerInit,public,False,0,0,0x13c0
    0x4df: v4df(0x13c0) = CONST ,0x4d3,v4df,0,CONST,managerInit,public,False,0x13c0,0,0x13c0
    0x4e3: JUMP v4df(0x13c0),0x4d3,0,"0,v4df",JUMP,managerInit,public,False,0,0,0x13c0
    Begin block 0x13c0,0x13c0,0,0,0,managerInit,public,False,0,0,0x13c0
"    prev=[0x4d3], succ=[0x13cd, 0x13d1]",0x13c0,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    =================================,0x13c0,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    0x13c1: v13c1(0x0) = CONST ,0x13c0,v13c1,0,CONST,managerInit,public,False,0x0,0,"0x13cd, 0x13d1"
    0x13c3: v13c3 = SLOAD v13c1(0x0),0x13c0,v13c3,"0,v13c1",SLOAD,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    0x13c4: v13c4(0xff) = CONST ,0x13c0,v13c4,0,CONST,managerInit,public,False,0xff,0,"0x13cd, 0x13d1"
"    0x13c6: v13c6 = AND v13c4(0xff), v13c3",0x13c0,v13c6,"0,v13c4,v13c3",AND,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    0x13c7: v13c7 = ISZERO v13c6,0x13c0,v13c7,"0,v13c6",ISZERO,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    0x13c8: v13c8(0x13d1) = CONST ,0x13c0,v13c8,0,CONST,managerInit,public,False,0x13d1,0,"0x13cd, 0x13d1"
"    0x13cc: JUMPI v13c8(0x13d1), v13c7",0x13c0,0,"0,v13c8,v13c7",JUMPI,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    Begin block 0x13cd,0x13cd,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
"    prev=[0x13c0], succ=[]",0x13cd,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    =================================,0x13cd,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    0x13cd: v13cd(0x0) = CONST ,0x13cd,v13cd,0,CONST,managerInit,public,False,0x0,0,"0x13cd, 0x13d1"
"    0x13d0: REVERT v13cd(0x0), v13cd(0x0)",0x13cd,0,"0,v13cd,v13cd",REVERT,managerInit,public,False,0,0,"0x13cd, 0x13d1"
    Begin block 0x13d1,0x13d1,0,0,0,managerInit,public,False,0,0,"0x13cd, 0x13d1"
"    prev=[0x13c0], succ=[0x1c57]",0x13d1,0,0,0,managerInit,public,False,0,0,0x1c57
    =================================,0x13d1,0,0,0,managerInit,public,False,0,0,0x1c57
    0x13d2: v13d2(0x0) = CONST ,0x13d1,v13d2,0,CONST,managerInit,public,False,0x0,0,0x1c57
    0x13d5: v13d5 = SLOAD v13d2(0x0),0x13d1,v13d5,"0,v13d2",SLOAD,managerInit,public,False,0,0,0x1c57
    0x13d6: v13d6(0x100) = CONST ,0x13d1,v13d6,0,CONST,managerInit,public,False,0x100,0,0x1c57
    0x13d9: v13d9(0x1) = CONST ,0x13d1,v13d9,0,CONST,managerInit,public,False,0x1,0,0x1c57
    0x13db: v13db(0xa8) = CONST ,0x13d1,v13db,0,CONST,managerInit,public,False,0xa8,0,0x1c57
"    0x13dd: v13dd(0x1000000000000000000000000000000000000000000) = SHL v13db(0xa8), v13d9(0x1)",0x13d1,v13dd,"0,v13db,v13d9",SHL,managerInit,public,False,0x1000000000000000000000000000000000000000000,0,0x1c57
"    0x13de: v13de(0xffffffffffffffffffffffffffffffffffffffff00) = SUB v13dd(0x1000000000000000000000000000000000000000000), v13d6(0x100)",0x13d1,v13de,"0,v13dd,v13d6",SUB,managerInit,public,False,0xffffffffffffffffffffffffffffffffffffffff00,0,0x1c57
    0x13df: v13df(0xffffffffffffffffffffff0000000000000000000000000000000000000000ff) = NOT v13de(0xffffffffffffffffffffffffffffffffffffffff00),0x13d1,v13df,"0,v13de",NOT,managerInit,public,False,0xffffffffffffffffffffff0000000000000000000000000000000000000000ff,0,0x1c57
"    0x13e0: v13e0 = AND v13df(0xffffffffffffffffffffff0000000000000000000000000000000000000000ff), v13d5",0x13d1,v13e0,"0,v13df,v13d5",AND,managerInit,public,False,0,0,0x1c57
    0x13e1: v13e1(0x100) = CONST ,0x13d1,v13e1,0,CONST,managerInit,public,False,0x100,0,0x1c57
    0x13e4: v13e4(0x1) = CONST ,0x13d1,v13e4,0,CONST,managerInit,public,False,0x1,0,0x1c57
    0x13e6: v13e6(0x1) = CONST ,0x13d1,v13e6,0,CONST,managerInit,public,False,0x1,0,0x1c57
    0x13e8: v13e8(0xa0) = CONST ,0x13d1,v13e8,0,CONST,managerInit,public,False,0xa0,0,0x1c57
"    0x13ea: v13ea(0x10000000000000000000000000000000000000000) = SHL v13e8(0xa0), v13e6(0x1)",0x13d1,v13ea,"0,v13e8,v13e6",SHL,managerInit,public,False,0x10000000000000000000000000000000000000000,0,0x1c57
"    0x13eb: v13eb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13ea(0x10000000000000000000000000000000000000000), v13e4(0x1)",0x13d1,v13eb,"0,v13ea,v13e4",SUB,managerInit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1c57
"    0x13ed: v13ed = AND v4de, v13eb(0xffffffffffffffffffffffffffffffffffffffff)",0x13d1,v13ed,"0,v4de,v13eb",AND,managerInit,public,False,0,0,0x1c57
"    0x13ee: v13ee = MUL v13ed, v13e1(0x100)",0x13d1,v13ee,"0,v13ed,v13e1",MUL,managerInit,public,False,0,0,0x1c57
"    0x13ef: v13ef = OR v13ee, v13e0",0x13d1,v13ef,"0,v13ee,v13e0",OR,managerInit,public,False,0,0,0x1c57
"    0x13f1: SSTORE v13d2(0x0), v13ef",0x13d1,0,"0,v13d2,v13ef",SSTORE,managerInit,public,False,0,0,0x1c57
    0x13f2: v13f2(0x3ae5) = CONST ,0x13d1,v13f2,0,CONST,managerInit,public,False,0x3ae5,0,0x1c57
    0x13f6: v13f6(0x1c57) = CONST ,0x13d1,v13f6,0,CONST,managerInit,public,False,0x1c57,0,0x1c57
    0x13fa: JUMP v13f6(0x1c57),0x13d1,0,"0,v13f6",JUMP,managerInit,public,False,0,0,0x1c57
    Begin block 0x1c57,0x1c57,0,0,0,managerInit,public,False,0,0,0x1c57
"    prev=[0x13d1], succ=[0x3ae5]",0x1c57,0,0,0,managerInit,public,False,0,0,0x3ae5
    =================================,0x1c57,0,0,0,managerInit,public,False,0,0,0x3ae5
    0x1c58: v1c58(0x0) = CONST ,0x1c57,v1c58,0,CONST,managerInit,public,False,0x0,0,0x3ae5
    0x1c5b: v1c5b = SLOAD v1c58(0x0),0x1c57,v1c5b,"0,v1c58",SLOAD,managerInit,public,False,0,0,0x3ae5
    0x1c5c: v1c5c(0xff) = CONST ,0x1c57,v1c5c,0,CONST,managerInit,public,False,0xff,0,0x3ae5
    0x1c5e: v1c5e(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v1c5c(0xff),0x1c57,v1c5e,"0,v1c5c",NOT,managerInit,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x3ae5
"    0x1c5f: v1c5f = AND v1c5e(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v1c5b",0x1c57,v1c5f,"0,v1c5e,v1c5b",AND,managerInit,public,False,0,0,0x3ae5
    0x1c60: v1c60(0x1) = CONST ,0x1c57,v1c60,0,CONST,managerInit,public,False,0x1,0,0x3ae5
"    0x1c62: v1c62 = OR v1c60(0x1), v1c5f",0x1c57,v1c62,"0,v1c60,v1c5f",OR,managerInit,public,False,0,0,0x3ae5
"    0x1c64: SSTORE v1c58(0x0), v1c62",0x1c57,0,"0,v1c58,v1c62",SSTORE,managerInit,public,False,0,0,0x3ae5
    0x1c65: JUMP v13f2(0x3ae5),0x1c57,0,"0,v13f2",JUMP,managerInit,public,False,0,0,0x3ae5
    Begin block 0x3ae5,0x3ae5,0,0,0,managerInit,public,False,0,0,0x3ae5
"    prev=[0x1c57], succ=[0x3934]",0x3ae5,0,0,0,managerInit,public,False,0,0,0x3934
    =================================,0x3ae5,0,0,0,managerInit,public,False,0,0,0x3934
    0x3ae7: JUMP v4bc(0x3934),0x3ae5,0,"0,v4bc",JUMP,managerInit,public,False,0,0,0x3934
    Begin block 0x3934,0x3934,0,0,0,managerInit,public,False,0,0,0x3934
"    prev=[0x3ae5], succ=[]",0x3934,0,0,0,managerInit,public,False,0,0,0x3934
    =================================,0x3934,0,0,0,managerInit,public,False,0,0,0x3934
    0x3935: STOP ,0x3934,0,0,STOP,managerInit,public,False,0,0,0x3934
},0x3934,0,0,0,managerInit,public,False,0,0,0x3934
function isSelfManager(address)() public {,0x4e4,0,0,public,isSelfManager,public,False,0,0,0x3934
    Begin block 0x4e4,0x4e4,0,0,0,isSelfManager,public,False,0,0,0x3934
"    prev=[], succ=[0x4ed, 0x4f1]",0x4e4,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    =================================,0x4e4,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    0x4e5: v4e5 = CALLVALUE ,0x4e4,v4e5,0,CALLVALUE,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    0x4e7: v4e7 = ISZERO v4e5,0x4e4,v4e7,"0,v4e5",ISZERO,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    0x4e8: v4e8(0x4f1) = CONST ,0x4e4,v4e8,0,CONST,isSelfManager,public,False,0x4f1,0,"0x4ed, 0x4f1"
"    0x4ec: JUMPI v4e8(0x4f1), v4e7",0x4e4,0,"0,v4e8,v4e7",JUMPI,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    Begin block 0x4ed,0x4ed,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
"    prev=[0x4e4], succ=[]",0x4ed,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    =================================,0x4ed,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    0x4ed: v4ed(0x0) = CONST ,0x4ed,v4ed,0,CONST,isSelfManager,public,False,0x0,0,"0x4ed, 0x4f1"
"    0x4f0: REVERT v4ed(0x0), v4ed(0x0)",0x4ed,0,"0,v4ed,v4ed",REVERT,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
    Begin block 0x4f1,0x4f1,0,0,0,isSelfManager,public,False,0,0,"0x4ed, 0x4f1"
"    prev=[0x4e4], succ=[0x506, 0x50a]",0x4f1,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
    =================================,0x4f1,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
    0x4f3: v4f3(0x3955) = CONST ,0x4f1,v4f3,0,CONST,isSelfManager,public,False,0x3955,0,"0x506, 0x50a"
    0x4f7: v4f7(0x4) = CONST ,0x4f1,v4f7,0,CONST,isSelfManager,public,False,0x4,0,"0x506, 0x50a"
    0x4fa: v4fa = CALLDATASIZE ,0x4f1,v4fa,0,CALLDATASIZE,isSelfManager,public,False,0,0,"0x506, 0x50a"
"    0x4fb: v4fb = SUB v4fa, v4f7(0x4)",0x4f1,v4fb,"0,v4fa,v4f7",SUB,isSelfManager,public,False,0,0,"0x506, 0x50a"
    0x4fc: v4fc(0x20) = CONST ,0x4f1,v4fc,0,CONST,isSelfManager,public,False,0x20,0,"0x506, 0x50a"
"    0x4ff: v4ff = LT v4fb, v4fc(0x20)",0x4f1,v4ff,"0,v4fb,v4fc",LT,isSelfManager,public,False,0,0,"0x506, 0x50a"
    0x500: v500 = ISZERO v4ff,0x4f1,v500,"0,v4ff",ISZERO,isSelfManager,public,False,0,0,"0x506, 0x50a"
    0x501: v501(0x50a) = CONST ,0x4f1,v501,0,CONST,isSelfManager,public,False,0x50a,0,"0x506, 0x50a"
"    0x505: JUMPI v501(0x50a), v500",0x4f1,0,"0,v501,v500",JUMPI,isSelfManager,public,False,0,0,"0x506, 0x50a"
    Begin block 0x506,0x506,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
"    prev=[0x4f1], succ=[]",0x506,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
    =================================,0x506,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
    0x506: v506(0x0) = CONST ,0x506,v506,0,CONST,isSelfManager,public,False,0x0,0,"0x506, 0x50a"
"    0x509: REVERT v506(0x0), v506(0x0)",0x506,0,"0,v506,v506",REVERT,isSelfManager,public,False,0,0,"0x506, 0x50a"
    Begin block 0x50a,0x50a,0,0,0,isSelfManager,public,False,0,0,"0x506, 0x50a"
"    prev=[0x4f1], succ=[0x13fb]",0x50a,0,0,0,isSelfManager,public,False,0,0,0x13fb
    =================================,0x50a,0,0,0,isSelfManager,public,False,0,0,0x13fb
    0x50c: v50c = CALLDATALOAD v4f7(0x4),0x50a,v50c,"0,v4f7",CALLDATALOAD,isSelfManager,public,False,0,0,0x13fb
    0x50d: v50d(0x1) = CONST ,0x50a,v50d,0,CONST,isSelfManager,public,False,0x1,0,0x13fb
    0x50f: v50f(0x1) = CONST ,0x50a,v50f,0,CONST,isSelfManager,public,False,0x1,0,0x13fb
    0x511: v511(0xa0) = CONST ,0x50a,v511,0,CONST,isSelfManager,public,False,0xa0,0,0x13fb
"    0x513: v513(0x10000000000000000000000000000000000000000) = SHL v511(0xa0), v50f(0x1)",0x50a,v513,"0,v511,v50f",SHL,isSelfManager,public,False,0x10000000000000000000000000000000000000000,0,0x13fb
"    0x514: v514(0xffffffffffffffffffffffffffffffffffffffff) = SUB v513(0x10000000000000000000000000000000000000000), v50d(0x1)",0x50a,v514,"0,v513,v50d",SUB,isSelfManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x13fb
"    0x515: v515 = AND v514(0xffffffffffffffffffffffffffffffffffffffff), v50c",0x50a,v515,"0,v514,v50c",AND,isSelfManager,public,False,0,0,0x13fb
    0x516: v516(0x13fb) = CONST ,0x50a,v516,0,CONST,isSelfManager,public,False,0x13fb,0,0x13fb
    0x51a: JUMP v516(0x13fb),0x50a,0,"0,v516",JUMP,isSelfManager,public,False,0,0,0x13fb
    Begin block 0x13fb,0x13fb,0,0,0,isSelfManager,public,False,0,0,0x13fb
"    prev=[0x50a], succ=[0x1429, 0x1421]",0x13fb,0,0,0,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    =================================,0x13fb,0,0,0,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x13fc: v13fc(0x1) = CONST ,0x13fb,v13fc,0,CONST,isSelfManager,public,False,0x1,0,"0x1429, 0x1421"
    0x13fe: v13fe(0x1) = CONST ,0x13fb,v13fe,0,CONST,isSelfManager,public,False,0x1,0,"0x1429, 0x1421"
    0x1400: v1400(0xa0) = CONST ,0x13fb,v1400,0,CONST,isSelfManager,public,False,0xa0,0,"0x1429, 0x1421"
"    0x1402: v1402(0x10000000000000000000000000000000000000000) = SHL v1400(0xa0), v13fe(0x1)",0x13fb,v1402,"0,v1400,v13fe",SHL,isSelfManager,public,False,0x10000000000000000000000000000000000000000,0,"0x1429, 0x1421"
"    0x1403: v1403(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1402(0x10000000000000000000000000000000000000000), v13fc(0x1)",0x13fb,v1403,"0,v1402,v13fc",SUB,isSelfManager,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1429, 0x1421"
"    0x1406: v1406 = AND v1403(0xffffffffffffffffffffffffffffffffffffffff), v515",0x13fb,v1406,"0,v1403,v515",AND,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x1407: v1407(0x0) = CONST ,0x13fb,v1407,0,CONST,isSelfManager,public,False,0x0,0,"0x1429, 0x1421"
"    0x140b: MSTORE v1407(0x0), v1406",0x13fb,0,"0,v1407,v1406",MSTORE,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x140c: v140c(0x3) = CONST ,0x13fb,v140c,0,CONST,isSelfManager,public,False,0x3,0,"0x1429, 0x1421"
    0x140e: v140e(0x20) = CONST ,0x13fb,v140e,0,CONST,isSelfManager,public,False,0x20,0,"0x1429, 0x1421"
"    0x1410: MSTORE v140e(0x20), v140c(0x3)",0x13fb,0,"0,v140e,v140c",MSTORE,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x1411: v1411(0x40) = CONST ,0x13fb,v1411,0,CONST,isSelfManager,public,False,0x40,0,"0x1429, 0x1421"
"    0x1414: v1414 = SHA3 v1407(0x0), v1411(0x40)",0x13fb,v1414,"0,v1407,v1411",SHA3,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x1415: v1415(0x9) = CONST ,0x13fb,v1415,0,CONST,isSelfManager,public,False,0x9,0,"0x1429, 0x1421"
"    0x1417: v1417 = ADD v1415(0x9), v1414",0x13fb,v1417,"0,v1415,v1414",ADD,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x1418: v1418 = SLOAD v1417,0x13fb,v1418,"0,v1417",SLOAD,isSelfManager,public,False,0,0,"0x1429, 0x1421"
"    0x141b: v141b = AND v1403(0xffffffffffffffffffffffffffffffffffffffff), v1418",0x13fb,v141b,"0,v1403,v1418",AND,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    0x141c: v141c(0x1429) = CONST ,0x13fb,v141c,0,CONST,isSelfManager,public,False,0x1429,0,"0x1429, 0x1421"
"    0x1420: JUMPI v141c(0x1429), v141b",0x13fb,0,"0,v141c,v141b",JUMPI,isSelfManager,public,False,0,0,"0x1429, 0x1421"
    Begin block 0x1429,0x1429,0,0,0,isSelfManager,public,False,0,0,"0x1429, 0x1421"
"    prev=[0x13fb], succ=[0x142d]",0x1429,0,0,0,isSelfManager,public,False,0,0,0x142d
    =================================,0x1429,0,0,0,isSelfManager,public,False,0,0,0x142d
    0x142b: v142b(0x1) = CONST ,0x1429,v142b,0,CONST,isSelfManager,public,False,0x1,0,0x142d
    Begin block 0x142d,0x142d,0,0,0,isSelfManager,public,False,0,0,0x142d
"    prev=[0x1429, 0x1421], succ=[0x3955]",0x142d,0,0,0,isSelfManager,public,False,0,0,0x3955
    =================================,0x142d,0,0,0,isSelfManager,public,False,0,0,0x3955
    0x1431: JUMP v4f3(0x3955),0x142d,0,"0,v4f3",JUMP,isSelfManager,public,False,0,0,0x3955
    Begin block 0x3955,0x3955,0,0,0,isSelfManager,public,False,0,0,0x3955
"    prev=[0x142d], succ=[]",0x3955,0,0,0,isSelfManager,public,False,0,0,0x3955
    =================================,0x3955,0,0,0,isSelfManager,public,False,0,0,0x3955
"    0x3955_0x0: v3955_0 = PHI v1422(0x0), v142b(0x1)",0x3955,v3955_0,"0,v1422,v142b",PHI,isSelfManager,public,False,0,0,0x3955
    0x3956: v3956(0x40) = CONST ,0x3955,v3956,0,CONST,isSelfManager,public,False,0x40,0,0x3955
    0x3959: v3959 = MLOAD v3956(0x40),0x3955,v3959,"0,v3956",MLOAD,isSelfManager,public,False,0,isSelfManager&m0x40,0x3955
    0x395b: v395b = ISZERO v3955_0,0x3955,v395b,"0,v3955_0",ISZERO,isSelfManager,public,False,0,0,0x3955
    0x395c: v395c = ISZERO v395b,0x3955,v395c,"0,v395b",ISZERO,isSelfManager,public,False,0,0,0x3955
"    0x395e: MSTORE v3959, v395c",0x3955,isSelfManager&m0x40,"0,v3959,v395c",MSTORE,isSelfManager,public,False,0,isSelfManager&m0x40,0x3955
    0x395f: v395f = MLOAD v3956(0x40),0x3955,v395f,"0,v3956",MLOAD,isSelfManager,public,False,0,isSelfManager&m0x40,0x3955
"    0x3963: v3963(0x0) = SUB v3959, v395f",0x3955,v3963,"0,v3959,v395f",SUB,isSelfManager,public,False,0x0,isSelfManager&m0x40-0x0,0x3955
    0x3964: v3964(0x20) = CONST ,0x3955,v3964,0,CONST,isSelfManager,public,False,0x20,0,0x3955
"    0x3966: v3966(0x20) = ADD v3964(0x20), v3963(0x0)",0x3955,v3966,"0,v3964,v3963",ADD,isSelfManager,public,False,0x20,isSelfManager&m0x40-0x0+0x20,0x3955
"    0x3968: RETURN v395f, v3966(0x20)",0x3955,0,"0,v395f,v3966",RETURN,isSelfManager,public,False,0,0,0x3955
    Begin block 0x1421,0x1421,0,0,0,isSelfManager,public,False,0,0,0x3955
"    prev=[0x13fb], succ=[0x142d]",0x1421,0,0,0,isSelfManager,public,False,0,0,0x142d
    =================================,0x1421,0,0,0,isSelfManager,public,False,0,0,0x142d
    0x1422: v1422(0x0) = CONST ,0x1421,v1422,0,CONST,isSelfManager,public,False,0x0,0,0x142d
    0x1424: v1424(0x142d) = CONST ,0x1421,v1424,0,CONST,isSelfManager,public,False,0x142d,0,0x142d
    0x1428: JUMP v1424(0x142d),0x1421,0,"0,v1424",JUMP,isSelfManager,public,False,0,0,0x142d
},0x1421,0,0,0,isSelfManager,public,False,0,0,0x142d
"function claimProfit(address,address)() public {",0x51b,0,0,,claimProfit,public,False,0,0,0x142d
    Begin block 0x51b,0x51b,0,0,0,claimProfit,public,False,0,0,0x142d
"    prev=[], succ=[0x524, 0x528]",0x51b,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
    =================================,0x51b,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
    0x51c: v51c = CALLVALUE ,0x51b,v51c,0,CALLVALUE,claimProfit,public,False,0,0,"0x524, 0x528"
    0x51e: v51e = ISZERO v51c,0x51b,v51e,"0,v51c",ISZERO,claimProfit,public,False,0,0,"0x524, 0x528"
    0x51f: v51f(0x528) = CONST ,0x51b,v51f,0,CONST,claimProfit,public,False,0x528,0,"0x524, 0x528"
"    0x523: JUMPI v51f(0x528), v51e",0x51b,0,"0,v51f,v51e",JUMPI,claimProfit,public,False,0,0,"0x524, 0x528"
    Begin block 0x524,0x524,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
"    prev=[0x51b], succ=[]",0x524,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
    =================================,0x524,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
    0x524: v524(0x0) = CONST ,0x524,v524,0,CONST,claimProfit,public,False,0x0,0,"0x524, 0x528"
"    0x527: REVERT v524(0x0), v524(0x0)",0x524,0,"0,v524,v524",REVERT,claimProfit,public,False,0,0,"0x524, 0x528"
    Begin block 0x528,0x528,0,0,0,claimProfit,public,False,0,0,"0x524, 0x528"
"    prev=[0x51b], succ=[0x53d, 0x541]",0x528,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
    =================================,0x528,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
    0x52a: v52a(0x3988) = CONST ,0x528,v52a,0,CONST,claimProfit,public,False,0x3988,0,"0x53d, 0x541"
    0x52e: v52e(0x4) = CONST ,0x528,v52e,0,CONST,claimProfit,public,False,0x4,0,"0x53d, 0x541"
    0x531: v531 = CALLDATASIZE ,0x528,v531,0,CALLDATASIZE,claimProfit,public,False,0,0,"0x53d, 0x541"
"    0x532: v532 = SUB v531, v52e(0x4)",0x528,v532,"0,v531,v52e",SUB,claimProfit,public,False,0,0,"0x53d, 0x541"
    0x533: v533(0x40) = CONST ,0x528,v533,0,CONST,claimProfit,public,False,0x40,0,"0x53d, 0x541"
"    0x536: v536 = LT v532, v533(0x40)",0x528,v536,"0,v532,v533",LT,claimProfit,public,False,0,0,"0x53d, 0x541"
    0x537: v537 = ISZERO v536,0x528,v537,"0,v536",ISZERO,claimProfit,public,False,0,0,"0x53d, 0x541"
    0x538: v538(0x541) = CONST ,0x528,v538,0,CONST,claimProfit,public,False,0x541,0,"0x53d, 0x541"
"    0x53c: JUMPI v538(0x541), v537",0x528,0,"0,v538,v537",JUMPI,claimProfit,public,False,0,0,"0x53d, 0x541"
    Begin block 0x53d,0x53d,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
"    prev=[0x528], succ=[]",0x53d,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
    =================================,0x53d,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
    0x53d: v53d(0x0) = CONST ,0x53d,v53d,0,CONST,claimProfit,public,False,0x0,0,"0x53d, 0x541"
"    0x540: REVERT v53d(0x0), v53d(0x0)",0x53d,0,"0,v53d,v53d",REVERT,claimProfit,public,False,0,0,"0x53d, 0x541"
    Begin block 0x541,0x541,0,0,0,claimProfit,public,False,0,0,"0x53d, 0x541"
"    prev=[0x528], succ=[0x1432]",0x541,0,0,0,claimProfit,public,False,0,0,0x1432
    =================================,0x541,0,0,0,claimProfit,public,False,0,0,0x1432
    0x543: v543(0x1) = CONST ,0x541,v543,0,CONST,claimProfit,public,False,0x1,0,0x1432
    0x545: v545(0x1) = CONST ,0x541,v545,0,CONST,claimProfit,public,False,0x1,0,0x1432
    0x547: v547(0xa0) = CONST ,0x541,v547,0,CONST,claimProfit,public,False,0xa0,0,0x1432
"    0x549: v549(0x10000000000000000000000000000000000000000) = SHL v547(0xa0), v545(0x1)",0x541,v549,"0,v547,v545",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,0x1432
"    0x54a: v54a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v549(0x10000000000000000000000000000000000000000), v543(0x1)",0x541,v54a,"0,v549,v543",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1432
    0x54c: v54c = CALLDATALOAD v52e(0x4),0x541,v54c,"0,v52e",CALLDATALOAD,claimProfit,public,False,0,0,0x1432
"    0x54e: v54e = AND v54a(0xffffffffffffffffffffffffffffffffffffffff), v54c",0x541,v54e,"0,v54a,v54c",AND,claimProfit,public,False,0,0,0x1432
    0x550: v550(0x20) = CONST ,0x541,v550,0,CONST,claimProfit,public,False,0x20,0,0x1432
"    0x552: v552(0x24) = ADD v550(0x20), v52e(0x4)",0x541,v552,"0,v550,v52e",ADD,claimProfit,public,False,0x24,0,0x1432
    0x553: v553 = CALLDATALOAD v552(0x24),0x541,v553,"0,v552",CALLDATALOAD,claimProfit,public,False,0,0,0x1432
"    0x554: v554 = AND v553, v54a(0xffffffffffffffffffffffffffffffffffffffff)",0x541,v554,"0,v553,v54a",AND,claimProfit,public,False,0,0,0x1432
    0x555: v555(0x1432) = CONST ,0x541,v555,0,CONST,claimProfit,public,False,0x1432,0,0x1432
    0x559: JUMP v555(0x1432),0x541,0,"0,v555",JUMP,claimProfit,public,False,0,0,0x1432
    Begin block 0x1432,0x1432,0,0,0,claimProfit,public,False,0,0,0x1432
"    prev=[0x541], succ=[0x1443, 0x147a]",0x1432,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
    =================================,0x1432,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x1433: v1433(0x0) = CONST ,0x1432,v1433,0,CONST,claimProfit,public,False,0x0,0,"0x1443, 0x147a"
    0x1435: v1435 = SLOAD v1433(0x0),0x1432,v1435,"0,v1433",SLOAD,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x1436: v1436(0xff) = CONST ,0x1432,v1436,0,CONST,claimProfit,public,False,0xff,0,"0x1443, 0x147a"
"    0x1438: v1438 = AND v1436(0xff), v1435",0x1432,v1438,"0,v1436,v1435",AND,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x1439: v1439 = ISZERO v1438,0x1432,v1439,"0,v1438",ISZERO,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x143a: v143a = ISZERO v1439,0x1432,v143a,"0,v1439",ISZERO,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x143b: v143b(0x1) = CONST ,0x1432,v143b,0,CONST,claimProfit,public,False,0x1,0,"0x1443, 0x147a"
"    0x143d: v143d = EQ v143b(0x1), v143a",0x1432,v143d,"0,v143b,v143a",EQ,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x143e: v143e(0x147a) = CONST ,0x1432,v143e,0,CONST,claimProfit,public,False,0x147a,0,"0x1443, 0x147a"
"    0x1442: JUMPI v143e(0x147a), v143d",0x1432,0,"0,v143e,v143d",JUMPI,claimProfit,public,False,0,0,"0x1443, 0x147a"
    Begin block 0x1443,0x1443,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
"    prev=[0x1432], succ=[]",0x1443,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
    =================================,0x1443,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x1443: v1443(0x40) = CONST ,0x1443,v1443,0,CONST,claimProfit,public,False,0x40,0,"0x1443, 0x147a"
    0x1445: v1445 = MLOAD v1443(0x40),0x1443,v1445,"0,v1443",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1443, 0x147a"
    0x1446: v1446(0x461bcd) = CONST ,0x1443,v1446,0,CONST,claimProfit,public,False,0x461bcd,0,"0x1443, 0x147a"
    0x144a: v144a(0xe5) = CONST ,0x1443,v144a,0,CONST,claimProfit,public,False,0xe5,0,"0x1443, 0x147a"
"    0x144c: v144c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v144a(0xe5), v1446(0x461bcd)",0x1443,v144c,"0,v144a,v1446",SHL,claimProfit,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1443, 0x147a"
"    0x144e: MSTORE v1445, v144c(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1443,claimProfit&m0x40,"0,v1445,v144c",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x1443, 0x147a"
    0x144f: v144f(0x4) = CONST ,0x1443,v144f,0,CONST,claimProfit,public,False,0x4,0,"0x1443, 0x147a"
"    0x1451: v1451 = ADD v144f(0x4), v1445",0x1443,v1451,"0,v144f,v1445",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1443, 0x147a"
    0x1454: v1454(0x20) = CONST ,0x1443,v1454,0,CONST,claimProfit,public,False,0x20,0,"0x1443, 0x147a"
"    0x1456: v1456 = ADD v1454(0x20), v1451",0x1443,v1456,"0,v1454,v1451",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,"0x1443, 0x147a"
"    0x1459: v1459(0x20) = SUB v1456, v1451",0x1443,v1459,"0,v1456,v1451",SUB,claimProfit,public,False,0x20,claimProfit&m0x40+0x4+0x20-0x20,"0x1443, 0x147a"
"    0x145b: MSTORE v1451, v1459(0x20)",0x1443,claimProfit&m0x40+0x4,"0,v1451,v1459",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1443, 0x147a"
    0x145c: v145c(0x32) = CONST ,0x1443,v145c,0,CONST,claimProfit,public,False,0x32,0,"0x1443, 0x147a"
"    0x145f: MSTORE v1456, v145c(0x32)",0x1443,claimProfit&m0x40+0x4+0x20,"0,v1456,v145c",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,"0x1443, 0x147a"
    0x1460: v1460(0x20) = CONST ,0x1443,v1460,0,CONST,claimProfit,public,False,0x20,0,"0x1443, 0x147a"
"    0x1462: v1462 = ADD v1460(0x20), v1456",0x1443,v1462,"0,v1460,v1456",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20,"0x1443, 0x147a"
    0x1464: v1464(0x3466) = CONST ,0x1443,v1464,0,CONST,claimProfit,public,False,0x3466,0,"0x1443, 0x147a"
    0x1468: v1468(0x32) = CONST ,0x1443,v1468,0,CONST,claimProfit,public,False,0x32,0,"0x1443, 0x147a"
"    0x146b: CODECOPY v1462, v1464(0x3466), v1468(0x32)",0x1443,0,"0,v1462,v1464,v1468",CODECOPY,claimProfit,public,False,0,0,"0x1443, 0x147a"
    0x146c: v146c(0x40) = CONST ,0x1443,v146c,0,CONST,claimProfit,public,False,0x40,0,"0x1443, 0x147a"
"    0x146e: v146e = ADD v146c(0x40), v1462",0x1443,v146e,"0,v146c,v1462",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x40,"0x1443, 0x147a"
    0x1472: v1472(0x40) = CONST ,0x1443,v1472,0,CONST,claimProfit,public,False,0x40,0,"0x1443, 0x147a"
    0x1474: v1474 = MLOAD v1472(0x40),0x1443,v1474,"0,v1472",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1443, 0x147a"
"    0x1477: v1477(0x84) = SUB v146e, v1474",0x1443,v1477,"0,v146e,v1474",SUB,claimProfit,public,False,0x84,claimProfit&m0x40+0x4+0x20+0x20+0x40-0x84,"0x1443, 0x147a"
"    0x1479: REVERT v1474, v1477(0x84)",0x1443,0,"0,v1474,v1477",REVERT,claimProfit,public,False,0,0,"0x1443, 0x147a"
    Begin block 0x147a,0x147a,0,0,0,claimProfit,public,False,0,0,"0x1443, 0x147a"
"    prev=[0x1432], succ=[0x14a3, 0x14a7]",0x147a,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    =================================,0x147a,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x147b: v147b(0x1) = CONST ,0x147a,v147b,0,CONST,claimProfit,public,False,0x1,0,"0x14a3, 0x14a7"
    0x147d: v147d(0x1) = CONST ,0x147a,v147d,0,CONST,claimProfit,public,False,0x1,0,"0x14a3, 0x14a7"
    0x147f: v147f(0xa0) = CONST ,0x147a,v147f,0,CONST,claimProfit,public,False,0xa0,0,"0x14a3, 0x14a7"
"    0x1481: v1481(0x10000000000000000000000000000000000000000) = SHL v147f(0xa0), v147d(0x1)",0x147a,v1481,"0,v147f,v147d",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x14a3, 0x14a7"
"    0x1482: v1482(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1481(0x10000000000000000000000000000000000000000), v147b(0x1)",0x147a,v1482,"0,v1481,v147b",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x14a3, 0x14a7"
"    0x1485: v1485 = AND v1482(0xffffffffffffffffffffffffffffffffffffffff), v54e",0x147a,v1485,"0,v1482,v54e",AND,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x1486: v1486(0x0) = CONST ,0x147a,v1486,0,CONST,claimProfit,public,False,0x0,0,"0x14a3, 0x14a7"
"    0x148a: MSTORE v1486(0x0), v1485",0x147a,0,"0,v1486,v1485",MSTORE,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x148b: v148b(0x3) = CONST ,0x147a,v148b,0,CONST,claimProfit,public,False,0x3,0,"0x14a3, 0x14a7"
    0x148d: v148d(0x20) = CONST ,0x147a,v148d,0,CONST,claimProfit,public,False,0x20,0,"0x14a3, 0x14a7"
"    0x148f: MSTORE v148d(0x20), v148b(0x3)",0x147a,0,"0,v148d,v148b",MSTORE,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x1490: v1490(0x40) = CONST ,0x147a,v1490,0,CONST,claimProfit,public,False,0x40,0,"0x14a3, 0x14a7"
"    0x1493: v1493 = SHA3 v1486(0x0), v1490(0x40)",0x147a,v1493,"0,v1486,v1490",SHA3,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x1494: v1494(0x9) = CONST ,0x147a,v1494,0,CONST,claimProfit,public,False,0x9,0,"0x14a3, 0x14a7"
"    0x1496: v1496 = ADD v1494(0x9), v1493",0x147a,v1496,"0,v1494,v1493",ADD,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x1497: v1497 = SLOAD v1496,0x147a,v1497,"0,v1496",SLOAD,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
"    0x1499: v1499 = AND v1482(0xffffffffffffffffffffffffffffffffffffffff), v1497",0x147a,v1499,"0,v1482,v1497",AND,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
"    0x149c: v149c = AND v554, v1482(0xffffffffffffffffffffffffffffffffffffffff)",0x147a,v149c,"0,v554,v1482",AND,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
"    0x149d: v149d = EQ v149c, v1499",0x147a,v149d,"0,v149c,v1499",EQ,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x149e: v149e(0x14a7) = CONST ,0x147a,v149e,0,CONST,claimProfit,public,False,0x14a7,0,"0x14a3, 0x14a7"
"    0x14a2: JUMPI v149e(0x14a7), v149d",0x147a,0,"0,v149e,v149d",JUMPI,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    Begin block 0x14a3,0x14a3,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
"    prev=[0x147a], succ=[]",0x14a3,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    =================================,0x14a3,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    0x14a3: v14a3(0x0) = CONST ,0x14a3,v14a3,0,CONST,claimProfit,public,False,0x0,0,"0x14a3, 0x14a7"
"    0x14a6: REVERT v14a3(0x0), v14a3(0x0)",0x14a3,0,"0,v14a3,v14a3",REVERT,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
    Begin block 0x14a7,0x14a7,0,0,0,claimProfit,public,False,0,0,"0x14a3, 0x14a7"
"    prev=[0x147a], succ=[0x14ec, 0x14f0]",0x14a7,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    =================================,0x14a7,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14a8: v14a8(0x40) = CONST ,0x14a7,v14a8,0,CONST,claimProfit,public,False,0x40,0,"0x14ec, 0x14f0"
    0x14ab: v14ab = MLOAD v14a8(0x40),0x14a7,v14ab,"0,v14a8",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x14ec, 0x14f0"
    0x14ac: v14ac(0xc9df977) = CONST ,0x14a7,v14ac,0,CONST,claimProfit,public,False,0xc9df977,0,"0x14ec, 0x14f0"
    0x14b1: v14b1(0xe1) = CONST ,0x14a7,v14b1,0,CONST,claimProfit,public,False,0xe1,0,"0x14ec, 0x14f0"
"    0x14b3: v14b3(0x193bf2ee00000000000000000000000000000000000000000000000000000000) = SHL v14b1(0xe1), v14ac(0xc9df977)",0x14a7,v14b3,"0,v14b1,v14ac",SHL,claimProfit,public,False,0x193bf2ee00000000000000000000000000000000000000000000000000000000,0,"0x14ec, 0x14f0"
"    0x14b5: MSTORE v14ab, v14b3(0x193bf2ee00000000000000000000000000000000000000000000000000000000)",0x14a7,claimProfit&m0x40,"0,v14ab,v14b3",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x14ec, 0x14f0"
    0x14b6: v14b6 = CALLER ,0x14a7,v14b6,0,CALLER,claimProfit,public,True,0,0,"0x14ec, 0x14f0"
    0x14b7: v14b7(0x4) = CONST ,0x14a7,v14b7,0,CONST,claimProfit,public,False,0x4,0,"0x14ec, 0x14f0"
"    0x14ba: v14ba = ADD v14ab, v14b7(0x4)",0x14a7,v14ba,"0,v14ab,v14b7",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x14ec, 0x14f0"
"    0x14bb: MSTORE v14ba, v14b6",0x14a7,claimProfit&m0x40+0x4,"0,v14ba,v14b6",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x14ec, 0x14f0"
    0x14bd: v14bd = MLOAD v14a8(0x40),0x14a7,v14bd,"0,v14a8",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x14ec, 0x14f0"
    0x14be: v14be(0x1) = CONST ,0x14a7,v14be,0,CONST,claimProfit,public,False,0x1,0,"0x14ec, 0x14f0"
    0x14c0: v14c0(0x1) = CONST ,0x14a7,v14c0,0,CONST,claimProfit,public,False,0x1,0,"0x14ec, 0x14f0"
    0x14c2: v14c2(0xa0) = CONST ,0x14a7,v14c2,0,CONST,claimProfit,public,False,0xa0,0,"0x14ec, 0x14f0"
"    0x14c4: v14c4(0x10000000000000000000000000000000000000000) = SHL v14c2(0xa0), v14c0(0x1)",0x14a7,v14c4,"0,v14c2,v14c0",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x14ec, 0x14f0"
"    0x14c5: v14c5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v14c4(0x10000000000000000000000000000000000000000), v14be(0x1)",0x14a7,v14c5,"0,v14c4,v14be",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x14ec, 0x14f0"
"    0x14c7: v14c7 = AND v554, v14c5(0xffffffffffffffffffffffffffffffffffffffff)",0x14a7,v14c7,"0,v554,v14c5",AND,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14c9: v14c9(0x193bf2ee) = CONST ,0x14a7,v14c9,0,CONST,claimProfit,public,False,0x193bf2ee,0,"0x14ec, 0x14f0"
    0x14cf: v14cf(0x24) = CONST ,0x14a7,v14cf,0,CONST,claimProfit,public,False,0x24,0,"0x14ec, 0x14f0"
"    0x14d3: v14d3 = ADD v14ab, v14cf(0x24)",0x14a7,v14d3,"0,v14ab,v14cf",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x14ec, 0x14f0"
    0x14d5: v14d5(0x20) = CONST ,0x14a7,v14d5,0,CONST,claimProfit,public,False,0x20,0,"0x14ec, 0x14f0"
"    0x14dc: v14dc(0x0) = SUB v14ab, v14bd",0x14a7,v14dc,"0,v14ab,v14bd",SUB,claimProfit,public,False,0x0,claimProfit&m0x40-0x0,"0x14ec, 0x14f0"
"    0x14dd: v14dd(0x24) = ADD v14dc(0x0), v14cf(0x24)",0x14a7,v14dd,"0,v14dc,v14cf",ADD,claimProfit,public,False,0x24,claimProfit&m0x40-0x0+0x24,"0x14ec, 0x14f0"
    0x14df: v14df(0x0) = CONST ,0x14a7,v14df,0,CONST,claimProfit,public,False,0x0,0,"0x14ec, 0x14f0"
    0x14e3: v14e3 = EXTCODESIZE v14c7,0x14a7,v14e3,"0,v14c7",EXTCODESIZE,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14e4: v14e4 = ISZERO v14e3,0x14a7,v14e4,"0,v14e3",ISZERO,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14e6: v14e6 = ISZERO v14e4,0x14a7,v14e6,"0,v14e4",ISZERO,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14e7: v14e7(0x14f0) = CONST ,0x14a7,v14e7,0,CONST,claimProfit,public,False,0x14f0,0,"0x14ec, 0x14f0"
"    0x14eb: JUMPI v14e7(0x14f0), v14e6",0x14a7,0,"0,v14e7,v14e6",JUMPI,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    Begin block 0x14ec,0x14ec,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
"    prev=[0x14a7], succ=[]",0x14ec,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    =================================,0x14ec,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    0x14ec: v14ec(0x0) = CONST ,0x14ec,v14ec,0,CONST,claimProfit,public,False,0x0,0,"0x14ec, 0x14f0"
"    0x14ef: REVERT v14ec(0x0), v14ec(0x0)",0x14ec,0,"0,v14ec,v14ec",REVERT,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
    Begin block 0x14f0,0x14f0,0,0,0,claimProfit,public,False,0,0,"0x14ec, 0x14f0"
"    prev=[0x14a7], succ=[0x14fc, 0x1505]",0x14f0,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    =================================,0x14f0,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14f2: v14f2 = GAS ,0x14f0,v14f2,0,GAS,claimProfit,public,False,0,0,"0x14fc, 0x1505"
"    0x14f3: v14f3 = CALL v14f2, v14c7, v14df(0x0), v14bd, v14dd(0x24), v14bd, v14d5(0x20)",0x14f0,v14f3,"0,v14f2,v14c7,v14df,v14bd,v14dd,v14bd,v14d5",CALL,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14f4: v14f4 = ISZERO v14f3,0x14f0,v14f4,"0,v14f3",ISZERO,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14f6: v14f6 = ISZERO v14f4,0x14f0,v14f6,"0,v14f4",ISZERO,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14f7: v14f7(0x1505) = CONST ,0x14f0,v14f7,0,CONST,claimProfit,public,False,0x1505,0,"0x14fc, 0x1505"
"    0x14fb: JUMPI v14f7(0x1505), v14f6",0x14f0,0,"0,v14f7,v14f6",JUMPI,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    Begin block 0x14fc,0x14fc,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
"    prev=[0x14f0], succ=[]",0x14fc,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    =================================,0x14fc,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14fc: v14fc = RETURNDATASIZE ,0x14fc,v14fc,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x14fd: v14fd(0x0) = CONST ,0x14fc,v14fd,0,CONST,claimProfit,public,False,0x0,0,"0x14fc, 0x1505"
"    0x1500: RETURNDATACOPY v14fd(0x0), v14fd(0x0), v14fc",0x14fc,0,"0,v14fd,v14fd,v14fc",RETURNDATACOPY,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x1501: v1501 = RETURNDATASIZE ,0x14fc,v1501,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    0x1502: v1502(0x0) = CONST ,0x14fc,v1502,0,CONST,claimProfit,public,False,0x0,0,"0x14fc, 0x1505"
"    0x1504: REVERT v1502(0x0), v1501",0x14fc,0,"0,v1502,v1501",REVERT,claimProfit,public,False,0,0,"0x14fc, 0x1505"
    Begin block 0x1505,0x1505,0,0,0,claimProfit,public,False,0,0,"0x14fc, 0x1505"
"    prev=[0x14f0], succ=[0x1518, 0x151c]",0x1505,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
    =================================,0x1505,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
    0x150a: v150a(0x40) = CONST ,0x1505,v150a,0,CONST,claimProfit,public,False,0x40,0,"0x1518, 0x151c"
    0x150c: v150c = MLOAD v150a(0x40),0x1505,v150c,"0,v150a",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1518, 0x151c"
    0x150d: v150d = RETURNDATASIZE ,0x1505,v150d,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x1518, 0x151c"
    0x150e: v150e(0x20) = CONST ,0x1505,v150e,0,CONST,claimProfit,public,False,0x20,0,"0x1518, 0x151c"
"    0x1511: v1511 = LT v150d, v150e(0x20)",0x1505,v1511,"0,v150d,v150e",LT,claimProfit,public,False,0,0,"0x1518, 0x151c"
    0x1512: v1512 = ISZERO v1511,0x1505,v1512,"0,v1511",ISZERO,claimProfit,public,False,0,0,"0x1518, 0x151c"
    0x1513: v1513(0x151c) = CONST ,0x1505,v1513,0,CONST,claimProfit,public,False,0x151c,0,"0x1518, 0x151c"
"    0x1517: JUMPI v1513(0x151c), v1512",0x1505,0,"0,v1513,v1512",JUMPI,claimProfit,public,False,0,0,"0x1518, 0x151c"
    Begin block 0x1518,0x1518,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
"    prev=[0x1505], succ=[]",0x1518,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
    =================================,0x1518,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
    0x1518: v1518(0x0) = CONST ,0x1518,v1518,0,CONST,claimProfit,public,False,0x0,0,"0x1518, 0x151c"
"    0x151b: REVERT v1518(0x0), v1518(0x0)",0x1518,0,"0,v1518,v1518",REVERT,claimProfit,public,False,0,0,"0x1518, 0x151c"
    Begin block 0x151c,0x151c,0,0,0,claimProfit,public,False,0,0,"0x1518, 0x151c"
"    prev=[0x1505], succ=[0x1524, 0x1570]",0x151c,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
    =================================,0x151c,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
    0x151e: v151e = MLOAD v150c,0x151c,v151e,"0,v150c",MLOAD,claimProfit,public,False,0,0,"0x1524, 0x1570"
    0x151f: v151f(0x1570) = CONST ,0x151c,v151f,0,CONST,claimProfit,public,False,0x1570,0,"0x1524, 0x1570"
"    0x1523: JUMPI v151f(0x1570), v151e",0x151c,0,"0,v151f,v151e",JUMPI,claimProfit,public,False,0,0,"0x1524, 0x1570"
    Begin block 0x1524,0x1524,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
"    prev=[0x151c], succ=[]",0x1524,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
    =================================,0x1524,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
    0x1524: v1524(0x40) = CONST ,0x1524,v1524,0,CONST,claimProfit,public,False,0x40,0,"0x1524, 0x1570"
    0x1527: v1527 = MLOAD v1524(0x40),0x1524,v1527,"0,v1524",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1524, 0x1570"
    0x1528: v1528(0x461bcd) = CONST ,0x1524,v1528,0,CONST,claimProfit,public,False,0x461bcd,0,"0x1524, 0x1570"
    0x152c: v152c(0xe5) = CONST ,0x1524,v152c,0,CONST,claimProfit,public,False,0xe5,0,"0x1524, 0x1570"
"    0x152e: v152e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v152c(0xe5), v1528(0x461bcd)",0x1524,v152e,"0,v152c,v1528",SHL,claimProfit,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1524, 0x1570"
"    0x1530: MSTORE v1527, v152e(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1524,claimProfit&m0x40,"0,v1527,v152e",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x1524, 0x1570"
    0x1531: v1531(0x20) = CONST ,0x1524,v1531,0,CONST,claimProfit,public,False,0x20,0,"0x1524, 0x1570"
    0x1533: v1533(0x4) = CONST ,0x1524,v1533,0,CONST,claimProfit,public,False,0x4,0,"0x1524, 0x1570"
"    0x1536: v1536 = ADD v1527, v1533(0x4)",0x1524,v1536,"0,v1527,v1533",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1524, 0x1570"
"    0x1537: MSTORE v1536, v1531(0x20)",0x1524,claimProfit&m0x40+0x4,"0,v1536,v1531",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1524, 0x1570"
    0x1538: v1538(0x17) = CONST ,0x1524,v1538,0,CONST,claimProfit,public,False,0x17,0,"0x1524, 0x1570"
    0x153a: v153a(0x24) = CONST ,0x1524,v153a,0,CONST,claimProfit,public,False,0x24,0,"0x1524, 0x1570"
"    0x153d: v153d = ADD v1527, v153a(0x24)",0x1524,v153d,"0,v1527,v153a",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x1524, 0x1570"
"    0x153e: MSTORE v153d, v1538(0x17)",0x1524,claimProfit&m0x40+0x24,"0,v153d,v1538",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x1524, 0x1570"
    0x153f: v153f(0x416c726561647920636c61696d656420666f72206e6f77000000000000000000) = CONST ,0x1524,v153f,0,CONST,claimProfit,public,False,0x416c726561647920636c61696d656420666f72206e6f77000000000000000000,0,"0x1524, 0x1570"
    0x1560: v1560(0x44) = CONST ,0x1524,v1560,0,CONST,claimProfit,public,False,0x44,0,"0x1524, 0x1570"
"    0x1563: v1563 = ADD v1527, v1560(0x44)",0x1524,v1563,"0,v1527,v1560",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x44,"0x1524, 0x1570"
"    0x1564: MSTORE v1563, v153f(0x416c726561647920636c61696d656420666f72206e6f77000000000000000000)",0x1524,claimProfit&m0x40+0x44,"0,v1563,v153f",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x44,"0x1524, 0x1570"
    0x1566: v1566 = MLOAD v1524(0x40),0x1524,v1566,"0,v1524",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1524, 0x1570"
"    0x156a: v156a(0x0) = SUB v1527, v1566",0x1524,v156a,"0,v1527,v1566",SUB,claimProfit,public,False,0x0,claimProfit&m0x40-0x0,"0x1524, 0x1570"
    0x156b: v156b(0x64) = CONST ,0x1524,v156b,0,CONST,claimProfit,public,False,0x64,0,"0x1524, 0x1570"
"    0x156d: v156d(0x64) = ADD v156b(0x64), v156a(0x0)",0x1524,v156d,"0,v156b,v156a",ADD,claimProfit,public,False,0x64,claimProfit&m0x40-0x0+0x64,"0x1524, 0x1570"
"    0x156f: REVERT v1566, v156d(0x64)",0x1524,0,"0,v1566,v156d",REVERT,claimProfit,public,False,0,0,"0x1524, 0x1570"
    Begin block 0x1570,0x1570,0,0,0,claimProfit,public,False,0,0,"0x1524, 0x1570"
"    prev=[0x151c], succ=[0x1595, 0x1599]",0x1570,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
    =================================,0x1570,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1571: v1571(0x1) = CONST ,0x1570,v1571,0,CONST,claimProfit,public,False,0x1,0,"0x1595, 0x1599"
    0x1573: v1573(0x1) = CONST ,0x1570,v1573,0,CONST,claimProfit,public,False,0x1,0,"0x1595, 0x1599"
    0x1575: v1575(0xa0) = CONST ,0x1570,v1575,0,CONST,claimProfit,public,False,0xa0,0,"0x1595, 0x1599"
"    0x1577: v1577(0x10000000000000000000000000000000000000000) = SHL v1575(0xa0), v1573(0x1)",0x1570,v1577,"0,v1575,v1573",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x1595, 0x1599"
"    0x1578: v1578(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1577(0x10000000000000000000000000000000000000000), v1571(0x1)",0x1570,v1578,"0,v1577,v1571",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1595, 0x1599"
"    0x157a: v157a = AND v54e, v1578(0xffffffffffffffffffffffffffffffffffffffff)",0x1570,v157a,"0,v54e,v1578",AND,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x157b: v157b(0x0) = CONST ,0x1570,v157b,0,CONST,claimProfit,public,False,0x0,0,"0x1595, 0x1599"
"    0x157f: MSTORE v157b(0x0), v157a",0x1570,0,"0,v157b,v157a",MSTORE,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1580: v1580(0x3) = CONST ,0x1570,v1580,0,CONST,claimProfit,public,False,0x3,0,"0x1595, 0x1599"
    0x1582: v1582(0x20) = CONST ,0x1570,v1582,0,CONST,claimProfit,public,False,0x20,0,"0x1595, 0x1599"
"    0x1584: MSTORE v1582(0x20), v1580(0x3)",0x1570,0,"0,v1582,v1580",MSTORE,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1585: v1585(0x40) = CONST ,0x1570,v1585,0,CONST,claimProfit,public,False,0x40,0,"0x1595, 0x1599"
"    0x1588: v1588 = SHA3 v157b(0x0), v1585(0x40)",0x1570,v1588,"0,v157b,v1585",SHA3,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1589: v1589(0x1) = CONST ,0x1570,v1589,0,CONST,claimProfit,public,False,0x1,0,"0x1595, 0x1599"
"    0x158b: v158b = ADD v1589(0x1), v1588",0x1570,v158b,"0,v1589,v1588",ADD,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x158c: v158c = SLOAD v158b,0x1570,v158c,"0,v158b",SLOAD,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x158d: v158d(0x64) = CONST ,0x1570,v158d,0,CONST,claimProfit,public,False,0x64,0,"0x1595, 0x1599"
"    0x158f: v158f = LT v158d(0x64), v158c",0x1570,v158f,"0,v158d,v158c",LT,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1590: v1590(0x1599) = CONST ,0x1570,v1590,0,CONST,claimProfit,public,False,0x1599,0,"0x1595, 0x1599"
"    0x1594: JUMPI v1590(0x1599), v158f",0x1570,0,"0,v1590,v158f",JUMPI,claimProfit,public,False,0,0,"0x1595, 0x1599"
    Begin block 0x1595,0x1595,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
"    prev=[0x1570], succ=[]",0x1595,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
    =================================,0x1595,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
    0x1595: v1595(0x0) = CONST ,0x1595,v1595,0,CONST,claimProfit,public,False,0x0,0,"0x1595, 0x1599"
"    0x1598: REVERT v1595(0x0), v1595(0x0)",0x1595,0,"0,v1595,v1595",REVERT,claimProfit,public,False,0,0,"0x1595, 0x1599"
    Begin block 0x1599,0x1599,0,0,0,claimProfit,public,False,0,0,"0x1595, 0x1599"
"    prev=[0x1570], succ=[0x15d5, 0x15d9]",0x1599,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    =================================,0x1599,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x159a: v159a(0x0) = CONST ,0x1599,v159a,0,CONST,claimProfit,public,False,0x0,0,"0x15d5, 0x15d9"
    0x159c: v159c(0x169e) = CONST ,0x1599,v159c,0,CONST,claimProfit,public,False,0x169e,0,"0x15d5, 0x15d9"
    0x15a1: v15a1(0x1) = CONST ,0x1599,v15a1,0,CONST,claimProfit,public,False,0x1,0,"0x15d5, 0x15d9"
    0x15a3: v15a3(0x1) = CONST ,0x1599,v15a3,0,CONST,claimProfit,public,False,0x1,0,"0x15d5, 0x15d9"
    0x15a5: v15a5(0xa0) = CONST ,0x1599,v15a5,0,CONST,claimProfit,public,False,0xa0,0,"0x15d5, 0x15d9"
"    0x15a7: v15a7(0x10000000000000000000000000000000000000000) = SHL v15a5(0xa0), v15a3(0x1)",0x1599,v15a7,"0,v15a5,v15a3",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x15d5, 0x15d9"
"    0x15a8: v15a8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15a7(0x10000000000000000000000000000000000000000), v15a1(0x1)",0x1599,v15a8,"0,v15a7,v15a1",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x15d5, 0x15d9"
"    0x15a9: v15a9 = AND v15a8(0xffffffffffffffffffffffffffffffffffffffff), v554",0x1599,v15a9,"0,v15a8,v554",AND,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x15aa: v15aa(0x18160ddd) = CONST ,0x1599,v15aa,0,CONST,claimProfit,public,False,0x18160ddd,0,"0x15d5, 0x15d9"
    0x15af: v15af(0x40) = CONST ,0x1599,v15af,0,CONST,claimProfit,public,False,0x40,0,"0x15d5, 0x15d9"
    0x15b1: v15b1 = MLOAD v15af(0x40),0x1599,v15b1,"0,v15af",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x15d5, 0x15d9"
    0x15b3: v15b3(0xffffffff) = CONST ,0x1599,v15b3,0,CONST,claimProfit,public,False,0xffffffff,0,"0x15d5, 0x15d9"
"    0x15b8: v15b8(0x18160ddd) = AND v15b3(0xffffffff), v15aa(0x18160ddd)",0x1599,v15b8,"0,v15b3,v15aa",AND,claimProfit,public,False,0x18160ddd,0,"0x15d5, 0x15d9"
    0x15b9: v15b9(0xe0) = CONST ,0x1599,v15b9,0,CONST,claimProfit,public,False,0xe0,0,"0x15d5, 0x15d9"
"    0x15bb: v15bb(0x18160ddd00000000000000000000000000000000000000000000000000000000) = SHL v15b9(0xe0), v15b8(0x18160ddd)",0x1599,v15bb,"0,v15b9,v15b8",SHL,claimProfit,public,False,0x18160ddd00000000000000000000000000000000000000000000000000000000,0,"0x15d5, 0x15d9"
"    0x15bd: MSTORE v15b1, v15bb(0x18160ddd00000000000000000000000000000000000000000000000000000000)",0x1599,claimProfit&m0x40,"0,v15b1,v15bb",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x15d5, 0x15d9"
    0x15be: v15be(0x4) = CONST ,0x1599,v15be,0,CONST,claimProfit,public,False,0x4,0,"0x15d5, 0x15d9"
"    0x15c0: v15c0 = ADD v15be(0x4), v15b1",0x1599,v15c0,"0,v15be,v15b1",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x15d5, 0x15d9"
    0x15c1: v15c1(0x20) = CONST ,0x1599,v15c1,0,CONST,claimProfit,public,False,0x20,0,"0x15d5, 0x15d9"
    0x15c3: v15c3(0x40) = CONST ,0x1599,v15c3,0,CONST,claimProfit,public,False,0x40,0,"0x15d5, 0x15d9"
    0x15c5: v15c5 = MLOAD v15c3(0x40),0x1599,v15c5,"0,v15c3",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x15d5, 0x15d9"
"    0x15c8: v15c8(0x4) = SUB v15c0, v15c5",0x1599,v15c8,"0,v15c0,v15c5",SUB,claimProfit,public,False,0x4,claimProfit&m0x40+0x4-0x4,"0x15d5, 0x15d9"
    0x15cc: v15cc = EXTCODESIZE v15a9,0x1599,v15cc,"0,v15a9",EXTCODESIZE,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x15cd: v15cd = ISZERO v15cc,0x1599,v15cd,"0,v15cc",ISZERO,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x15cf: v15cf = ISZERO v15cd,0x1599,v15cf,"0,v15cd",ISZERO,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x15d0: v15d0(0x15d9) = CONST ,0x1599,v15d0,0,CONST,claimProfit,public,False,0x15d9,0,"0x15d5, 0x15d9"
"    0x15d4: JUMPI v15d0(0x15d9), v15cf",0x1599,0,"0,v15d0,v15cf",JUMPI,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    Begin block 0x15d5,0x15d5,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
"    prev=[0x1599], succ=[]",0x15d5,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    =================================,0x15d5,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    0x15d5: v15d5(0x0) = CONST ,0x15d5,v15d5,0,CONST,claimProfit,public,False,0x0,0,"0x15d5, 0x15d9"
"    0x15d8: REVERT v15d5(0x0), v15d5(0x0)",0x15d5,0,"0,v15d5,v15d5",REVERT,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
    Begin block 0x15d9,0x15d9,0,0,0,claimProfit,public,False,0,0,"0x15d5, 0x15d9"
"    prev=[0x1599], succ=[0x15e5, 0x15ee]",0x15d9,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    =================================,0x15d9,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15db: v15db = GAS ,0x15d9,v15db,0,GAS,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
"    0x15dc: v15dc = STATICCALL v15db, v15a9, v15c5, v15c8(0x4), v15c5, v15c1(0x20)",0x15d9,v15dc,"0,v15db,v15a9,v15c5,v15c8,v15c5,v15c1",STATICCALL,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15dd: v15dd = ISZERO v15dc,0x15d9,v15dd,"0,v15dc",ISZERO,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15df: v15df = ISZERO v15dd,0x15d9,v15df,"0,v15dd",ISZERO,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15e0: v15e0(0x15ee) = CONST ,0x15d9,v15e0,0,CONST,claimProfit,public,False,0x15ee,0,"0x15e5, 0x15ee"
"    0x15e4: JUMPI v15e0(0x15ee), v15df",0x15d9,0,"0,v15e0,v15df",JUMPI,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    Begin block 0x15e5,0x15e5,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
"    prev=[0x15d9], succ=[]",0x15e5,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    =================================,0x15e5,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15e5: v15e5 = RETURNDATASIZE ,0x15e5,v15e5,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15e6: v15e6(0x0) = CONST ,0x15e5,v15e6,0,CONST,claimProfit,public,False,0x0,0,"0x15e5, 0x15ee"
"    0x15e9: RETURNDATACOPY v15e6(0x0), v15e6(0x0), v15e5",0x15e5,0,"0,v15e6,v15e6,v15e5",RETURNDATACOPY,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15ea: v15ea = RETURNDATASIZE ,0x15e5,v15ea,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    0x15eb: v15eb(0x0) = CONST ,0x15e5,v15eb,0,CONST,claimProfit,public,False,0x0,0,"0x15e5, 0x15ee"
"    0x15ed: REVERT v15eb(0x0), v15ea",0x15e5,0,"0,v15eb,v15ea",REVERT,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
    Begin block 0x15ee,0x15ee,0,0,0,claimProfit,public,False,0,0,"0x15e5, 0x15ee"
"    prev=[0x15d9], succ=[0x1601, 0x1605]",0x15ee,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
    =================================,0x15ee,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
    0x15f3: v15f3(0x40) = CONST ,0x15ee,v15f3,0,CONST,claimProfit,public,False,0x40,0,"0x1601, 0x1605"
    0x15f5: v15f5 = MLOAD v15f3(0x40),0x15ee,v15f5,"0,v15f3",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1601, 0x1605"
    0x15f6: v15f6 = RETURNDATASIZE ,0x15ee,v15f6,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x1601, 0x1605"
    0x15f7: v15f7(0x20) = CONST ,0x15ee,v15f7,0,CONST,claimProfit,public,False,0x20,0,"0x1601, 0x1605"
"    0x15fa: v15fa = LT v15f6, v15f7(0x20)",0x15ee,v15fa,"0,v15f6,v15f7",LT,claimProfit,public,False,0,0,"0x1601, 0x1605"
    0x15fb: v15fb = ISZERO v15fa,0x15ee,v15fb,"0,v15fa",ISZERO,claimProfit,public,False,0,0,"0x1601, 0x1605"
    0x15fc: v15fc(0x1605) = CONST ,0x15ee,v15fc,0,CONST,claimProfit,public,False,0x1605,0,"0x1601, 0x1605"
"    0x1600: JUMPI v15fc(0x1605), v15fb",0x15ee,0,"0,v15fc,v15fb",JUMPI,claimProfit,public,False,0,0,"0x1601, 0x1605"
    Begin block 0x1601,0x1601,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
"    prev=[0x15ee], succ=[]",0x1601,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
    =================================,0x1601,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
    0x1601: v1601(0x0) = CONST ,0x1601,v1601,0,CONST,claimProfit,public,False,0x0,0,"0x1601, 0x1605"
"    0x1604: REVERT v1601(0x0), v1601(0x0)",0x1601,0,"0,v1601,v1601",REVERT,claimProfit,public,False,0,0,"0x1601, 0x1605"
    Begin block 0x1605,0x1605,0,0,0,claimProfit,public,False,0,0,"0x1601, 0x1605"
"    prev=[0x15ee], succ=[0x1665, 0x1669]",0x1605,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
    =================================,0x1605,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1607: v1607 = MLOAD v15f5,0x1605,v1607,"0,v15f5",MLOAD,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1608: v1608(0x1) = CONST ,0x1605,v1608,0,CONST,claimProfit,public,False,0x1,0,"0x1665, 0x1669"
    0x160a: v160a(0x1) = CONST ,0x1605,v160a,0,CONST,claimProfit,public,False,0x1,0,"0x1665, 0x1669"
    0x160c: v160c(0xa0) = CONST ,0x1605,v160c,0,CONST,claimProfit,public,False,0xa0,0,"0x1665, 0x1669"
"    0x160e: v160e(0x10000000000000000000000000000000000000000) = SHL v160c(0xa0), v160a(0x1)",0x1605,v160e,"0,v160c,v160a",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x1665, 0x1669"
"    0x160f: v160f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v160e(0x10000000000000000000000000000000000000000), v1608(0x1)",0x1605,v160f,"0,v160e,v1608",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1665, 0x1669"
"    0x1612: v1612 = AND v54e, v160f(0xffffffffffffffffffffffffffffffffffffffff)",0x1605,v1612,"0,v54e,v160f",AND,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1613: v1613(0x0) = CONST ,0x1605,v1613,0,CONST,claimProfit,public,False,0x0,0,"0x1665, 0x1669"
"    0x1617: MSTORE v1613(0x0), v1612",0x1605,0,"0,v1613,v1612",MSTORE,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1618: v1618(0x3) = CONST ,0x1605,v1618,0,CONST,claimProfit,public,False,0x3,0,"0x1665, 0x1669"
    0x161a: v161a(0x20) = CONST ,0x1605,v161a,0,CONST,claimProfit,public,False,0x20,0,"0x1665, 0x1669"
"    0x161e: MSTORE v161a(0x20), v1618(0x3)",0x1605,0,"0,v161a,v1618",MSTORE,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x161f: v161f(0x40) = CONST ,0x1605,v161f,0,CONST,claimProfit,public,False,0x40,0,"0x1665, 0x1669"
"    0x1624: v1624 = SHA3 v1613(0x0), v161f(0x40)",0x1605,v1624,"0,v1613,v161f",SHA3,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1625: v1625(0x1) = CONST ,0x1605,v1625,0,CONST,claimProfit,public,False,0x1,0,"0x1665, 0x1669"
"    0x1627: v1627 = ADD v1625(0x1), v1624",0x1605,v1627,"0,v1625,v1624",ADD,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1628: v1628 = SLOAD v1627,0x1605,v1628,"0,v1627",SLOAD,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x162a: v162a = MLOAD v161f(0x40),0x1605,v162a,"0,v161f",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1665, 0x1669"
    0x162b: v162b(0x70a08231) = CONST ,0x1605,v162b,0,CONST,claimProfit,public,False,0x70a08231,0,"0x1665, 0x1669"
    0x1630: v1630(0xe0) = CONST ,0x1605,v1630,0,CONST,claimProfit,public,False,0xe0,0,"0x1665, 0x1669"
"    0x1632: v1632(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v1630(0xe0), v162b(0x70a08231)",0x1605,v1632,"0,v1630,v162b",SHL,claimProfit,public,False,0x70a0823100000000000000000000000000000000000000000000000000000000,0,"0x1665, 0x1669"
"    0x1634: MSTORE v162a, v1632(0x70a0823100000000000000000000000000000000000000000000000000000000)",0x1605,claimProfit&m0x40,"0,v162a,v1632",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x1665, 0x1669"
    0x1635: v1635 = CALLER ,0x1605,v1635,0,CALLER,claimProfit,public,True,0,0,"0x1665, 0x1669"
    0x1636: v1636(0x4) = CONST ,0x1605,v1636,0,CONST,claimProfit,public,False,0x4,0,"0x1665, 0x1669"
"    0x1639: v1639 = ADD v162a, v1636(0x4)",0x1605,v1639,"0,v162a,v1636",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1665, 0x1669"
"    0x163a: MSTORE v1639, v1635",0x1605,claimProfit&m0x40+0x4,"0,v1639,v1635",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1665, 0x1669"
    0x163c: v163c = MLOAD v161f(0x40),0x1605,v163c,"0,v161f",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1665, 0x1669"
    0x163d: v163d(0x3b07) = CONST ,0x1605,v163d,0,CONST,claimProfit,public,False,0x3b07,0,"0x1665, 0x1669"
"    0x1646: v1646 = AND v554, v160f(0xffffffffffffffffffffffffffffffffffffffff)",0x1605,v1646,"0,v554,v160f",AND,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1648: v1648(0x70a08231) = CONST ,0x1605,v1648,0,CONST,claimProfit,public,False,0x70a08231,0,"0x1665, 0x1669"
    0x164e: v164e(0x24) = CONST ,0x1605,v164e,0,CONST,claimProfit,public,False,0x24,0,"0x1665, 0x1669"
"    0x1652: v1652 = ADD v162a, v164e(0x24)",0x1605,v1652,"0,v162a,v164e",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x1665, 0x1669"
"    0x1657: v1657(0x0) = SUB v162a, v163c",0x1605,v1657,"0,v162a,v163c",SUB,claimProfit,public,False,0x0,claimProfit&m0x40-0x0,"0x1665, 0x1669"
"    0x1658: v1658(0x24) = ADD v1657(0x0), v164e(0x24)",0x1605,v1658,"0,v1657,v164e",ADD,claimProfit,public,False,0x24,claimProfit&m0x40-0x0+0x24,"0x1665, 0x1669"
    0x165c: v165c = EXTCODESIZE v1646,0x1605,v165c,"0,v1646",EXTCODESIZE,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x165d: v165d = ISZERO v165c,0x1605,v165d,"0,v165c",ISZERO,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x165f: v165f = ISZERO v165d,0x1605,v165f,"0,v165d",ISZERO,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1660: v1660(0x1669) = CONST ,0x1605,v1660,0,CONST,claimProfit,public,False,0x1669,0,"0x1665, 0x1669"
"    0x1664: JUMPI v1660(0x1669), v165f",0x1605,0,"0,v1660,v165f",JUMPI,claimProfit,public,False,0,0,"0x1665, 0x1669"
    Begin block 0x1665,0x1665,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
"    prev=[0x1605], succ=[]",0x1665,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
    =================================,0x1665,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
    0x1665: v1665(0x0) = CONST ,0x1665,v1665,0,CONST,claimProfit,public,False,0x0,0,"0x1665, 0x1669"
"    0x1668: REVERT v1665(0x0), v1665(0x0)",0x1665,0,"0,v1665,v1665",REVERT,claimProfit,public,False,0,0,"0x1665, 0x1669"
    Begin block 0x1669,0x1669,0,0,0,claimProfit,public,False,0,0,"0x1665, 0x1669"
"    prev=[0x1605], succ=[0x1675, 0x167e]",0x1669,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
    =================================,0x1669,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x166b: v166b = GAS ,0x1669,v166b,0,GAS,claimProfit,public,False,0,0,"0x1675, 0x167e"
"    0x166c: v166c = STATICCALL v166b, v1646, v163c, v1658(0x24), v163c, v161a(0x20)",0x1669,v166c,"0,v166b,v1646,v163c,v1658,v163c,v161a",STATICCALL,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x166d: v166d = ISZERO v166c,0x1669,v166d,"0,v166c",ISZERO,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x166f: v166f = ISZERO v166d,0x1669,v166f,"0,v166d",ISZERO,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x1670: v1670(0x167e) = CONST ,0x1669,v1670,0,CONST,claimProfit,public,False,0x167e,0,"0x1675, 0x167e"
"    0x1674: JUMPI v1670(0x167e), v166f",0x1669,0,"0,v1670,v166f",JUMPI,claimProfit,public,False,0,0,"0x1675, 0x167e"
    Begin block 0x1675,0x1675,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
"    prev=[0x1669], succ=[]",0x1675,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
    =================================,0x1675,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x1675: v1675 = RETURNDATASIZE ,0x1675,v1675,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x1676: v1676(0x0) = CONST ,0x1675,v1676,0,CONST,claimProfit,public,False,0x0,0,"0x1675, 0x167e"
"    0x1679: RETURNDATACOPY v1676(0x0), v1676(0x0), v1675",0x1675,0,"0,v1676,v1676,v1675",RETURNDATACOPY,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x167a: v167a = RETURNDATASIZE ,0x1675,v167a,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x1675, 0x167e"
    0x167b: v167b(0x0) = CONST ,0x1675,v167b,0,CONST,claimProfit,public,False,0x0,0,"0x1675, 0x167e"
"    0x167d: REVERT v167b(0x0), v167a",0x1675,0,"0,v167b,v167a",REVERT,claimProfit,public,False,0,0,"0x1675, 0x167e"
    Begin block 0x167e,0x167e,0,0,0,claimProfit,public,False,0,0,"0x1675, 0x167e"
"    prev=[0x1669], succ=[0x1691, 0x1695]",0x167e,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
    =================================,0x167e,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
    0x1683: v1683(0x40) = CONST ,0x167e,v1683,0,CONST,claimProfit,public,False,0x40,0,"0x1691, 0x1695"
    0x1685: v1685 = MLOAD v1683(0x40),0x167e,v1685,"0,v1683",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1691, 0x1695"
    0x1686: v1686 = RETURNDATASIZE ,0x167e,v1686,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x1691, 0x1695"
    0x1687: v1687(0x20) = CONST ,0x167e,v1687,0,CONST,claimProfit,public,False,0x20,0,"0x1691, 0x1695"
"    0x168a: v168a = LT v1686, v1687(0x20)",0x167e,v168a,"0,v1686,v1687",LT,claimProfit,public,False,0,0,"0x1691, 0x1695"
    0x168b: v168b = ISZERO v168a,0x167e,v168b,"0,v168a",ISZERO,claimProfit,public,False,0,0,"0x1691, 0x1695"
    0x168c: v168c(0x1695) = CONST ,0x167e,v168c,0,CONST,claimProfit,public,False,0x1695,0,"0x1691, 0x1695"
"    0x1690: JUMPI v168c(0x1695), v168b",0x167e,0,"0,v168c,v168b",JUMPI,claimProfit,public,False,0,0,"0x1691, 0x1695"
    Begin block 0x1691,0x1691,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
"    prev=[0x167e], succ=[]",0x1691,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
    =================================,0x1691,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
    0x1691: v1691(0x0) = CONST ,0x1691,v1691,0,CONST,claimProfit,public,False,0x0,0,"0x1691, 0x1695"
"    0x1694: REVERT v1691(0x0), v1691(0x0)",0x1691,0,"0,v1691,v1691",REVERT,claimProfit,public,False,0,0,"0x1691, 0x1695"
    Begin block 0x1695,0x1695,0,0,0,claimProfit,public,False,0,0,"0x1691, 0x1695"
"    prev=[0x167e], succ=[0x1a1e0x51b]",0x1695,0,0,0,claimProfit,public,False,0,0,0x1a1e0x51b
    =================================,0x1695,0,0,0,claimProfit,public,False,0,0,0x1a1e0x51b
    0x1697: v1697 = MLOAD v1685,0x1695,v1697,"0,v1685",MLOAD,claimProfit,public,False,0,0,0x1a1e0x51b
    0x1699: v1699(0x1a1e) = CONST ,0x1695,v1699,0,CONST,claimProfit,public,False,0x1a1e,0,0x1a1e0x51b
    0x169d: JUMP v1699(0x1a1e),0x1695,0,"0,v1699",JUMP,claimProfit,public,False,0,0,0x1a1e0x51b
    Begin block 0x1a1e0x51b,0x1a1e0x51b,0,0,0,claimProfit,public,False,0,0,0x1a1e0x51b
"    prev=[0x1695], succ=[0x1a2f0x51b, 0x1a270x51b]",0x1a1e0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a2f0x51b, 0x1a270x51b"
    =================================,0x1a1e0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a2f0x51b, 0x1a270x51b"
    0x1a1f0x51b: v51b1a1f(0x0) = CONST ,0x1a1e0x51b,v51b1a1f,0,CONST,claimProfit,public,False,0x0,0,"0x1a2f0x51b, 0x1a270x51b"
    0x1a220x51b: v51b1a22(0x1a2f) = CONST ,0x1a1e0x51b,v51b1a22,0,CONST,claimProfit,public,False,0x1a2f,0,"0x1a2f0x51b, 0x1a270x51b"
"    0x1a260x51b: JUMPI v51b1a22(0x1a2f), v1697",0x1a1e0x51b,0,"0,v51b1a22,v1697",JUMPI,claimProfit,public,False,0,0,"0x1a2f0x51b, 0x1a270x51b"
    Begin block 0x1a2f0x51b,0x1a2f0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a2f0x51b, 0x1a270x51b"
"    prev=[0x1a1e0x51b], succ=[0x1a3c0x51b, 0x1a3d0x51b]",0x1a2f0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    =================================,0x1a2f0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
"    0x1a320x51b: v51b1a32 = MUL v1628, v1697",0x1a2f0x51b,v51b1a32,"0,v1628,v1697",MUL,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    0x1a370x51b: v51b1a37(0x1a3d) = CONST ,0x1a2f0x51b,v51b1a37,0,CONST,claimProfit,public,False,0x1a3d,0,"0x1a3c0x51b, 0x1a3d0x51b"
"    0x1a3b0x51b: JUMPI v51b1a37(0x1a3d), v1697",0x1a2f0x51b,0,"0,v51b1a37,v1697",JUMPI,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    Begin block 0x1a3c0x51b,0x1a3c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
"    prev=[0x1a2f0x51b], succ=[]",0x1a3c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    =================================,0x1a3c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    0x1a3c0x51b: THROW ,0x1a3c0x51b,0,0,THROW,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
    Begin block 0x1a3d0x51b,0x1a3d0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a3c0x51b, 0x1a3d0x51b"
"    prev=[0x1a2f0x51b], succ=[0x1a450x51b, 0x3bdc0x51b]",0x1a3d0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    =================================,0x1a3d0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a3e0x51b: v51b1a3e = DIV v51b1a32, v1697",0x1a3d0x51b,v51b1a3e,"0,v51b1a32,v1697",DIV,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a3f0x51b: v51b1a3f = EQ v51b1a3e, v1628",0x1a3d0x51b,v51b1a3f,"0,v51b1a3e,v1628",EQ,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a400x51b: v51b1a40(0x3bdc) = CONST ,0x1a3d0x51b,v51b1a40,0,CONST,claimProfit,public,False,0x3bdc,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a440x51b: JUMPI v51b1a40(0x3bdc), v51b1a3f",0x1a3d0x51b,0,"0,v51b1a40,v51b1a3f",JUMPI,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    Begin block 0x1a450x51b,0x1a450x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
"    prev=[0x1a3d0x51b], succ=[]",0x1a450x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    =================================,0x1a450x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a450x51b: v51b1a45(0x40) = CONST ,0x1a450x51b,v51b1a45,0,CONST,claimProfit,public,False,0x40,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a470x51b: v51b1a47 = MLOAD v51b1a45(0x40),0x1a450x51b,v51b1a47,"0,v51b1a45",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1a450x51b, 0x3bdc0x51b"
    0x1a480x51b: v51b1a48(0x461bcd) = CONST ,0x1a450x51b,v51b1a48,0,CONST,claimProfit,public,False,0x461bcd,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a4c0x51b: v51b1a4c(0xe5) = CONST ,0x1a450x51b,v51b1a4c,0,CONST,claimProfit,public,False,0xe5,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a4e0x51b: v51b1a4e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v51b1a4c(0xe5), v51b1a48(0x461bcd)",0x1a450x51b,v51b1a4e,"0,v51b1a4c,v51b1a48",SHL,claimProfit,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a500x51b: MSTORE v51b1a47, v51b1a4e(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1a450x51b,claimProfit&m0x40,"0,v51b1a47,v51b1a4e",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x1a450x51b, 0x3bdc0x51b"
    0x1a510x51b: v51b1a51(0x4) = CONST ,0x1a450x51b,v51b1a51,0,CONST,claimProfit,public,False,0x4,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a530x51b: v51b1a53 = ADD v51b1a51(0x4), v51b1a47",0x1a450x51b,v51b1a53,"0,v51b1a51,v51b1a47",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1a450x51b, 0x3bdc0x51b"
    0x1a560x51b: v51b1a56(0x20) = CONST ,0x1a450x51b,v51b1a56,0,CONST,claimProfit,public,False,0x20,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a580x51b: v51b1a58 = ADD v51b1a56(0x20), v51b1a53",0x1a450x51b,v51b1a58,"0,v51b1a56,v51b1a53",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a5b0x51b: v51b1a5b(0x20) = SUB v51b1a58, v51b1a53",0x1a450x51b,v51b1a5b,"0,v51b1a58,v51b1a53",SUB,claimProfit,public,False,0x20,claimProfit&m0x40+0x4+0x20-0x20,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a5d0x51b: MSTORE v51b1a53, v51b1a5b(0x20)",0x1a450x51b,claimProfit&m0x40+0x4,"0,v51b1a53,v51b1a5b",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x1a450x51b, 0x3bdc0x51b"
    0x1a5e0x51b: v51b1a5e(0x21) = CONST ,0x1a450x51b,v51b1a5e,0,CONST,claimProfit,public,False,0x21,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a610x51b: MSTORE v51b1a58, v51b1a5e(0x21)",0x1a450x51b,claimProfit&m0x40+0x4+0x20,"0,v51b1a58,v51b1a5e",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,"0x1a450x51b, 0x3bdc0x51b"
    0x1a620x51b: v51b1a62(0x20) = CONST ,0x1a450x51b,v51b1a62,0,CONST,claimProfit,public,False,0x20,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a640x51b: v51b1a64 = ADD v51b1a62(0x20), v51b1a58",0x1a450x51b,v51b1a64,"0,v51b1a62,v51b1a58",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20,"0x1a450x51b, 0x3bdc0x51b"
    0x1a660x51b: v51b1a66(0x341b) = CONST ,0x1a450x51b,v51b1a66,0,CONST,claimProfit,public,False,0x341b,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a6a0x51b: v51b1a6a(0x21) = CONST ,0x1a450x51b,v51b1a6a,0,CONST,claimProfit,public,False,0x21,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a6d0x51b: CODECOPY v51b1a64, v51b1a66(0x341b), v51b1a6a(0x21)",0x1a450x51b,0,"0,v51b1a64,v51b1a66,v51b1a6a",CODECOPY,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a6e0x51b: v51b1a6e(0x40) = CONST ,0x1a450x51b,v51b1a6e,0,CONST,claimProfit,public,False,0x40,0,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a700x51b: v51b1a70 = ADD v51b1a6e(0x40), v51b1a64",0x1a450x51b,v51b1a70,"0,v51b1a6e,v51b1a64",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x40,"0x1a450x51b, 0x3bdc0x51b"
    0x1a740x51b: v51b1a74(0x40) = CONST ,0x1a450x51b,v51b1a74,0,CONST,claimProfit,public,False,0x40,0,"0x1a450x51b, 0x3bdc0x51b"
    0x1a760x51b: v51b1a76 = MLOAD v51b1a74(0x40),0x1a450x51b,v51b1a76,"0,v51b1a74",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a790x51b: v51b1a79(0x84) = SUB v51b1a70, v51b1a76",0x1a450x51b,v51b1a79,"0,v51b1a70,v51b1a76",SUB,claimProfit,public,False,0x84,claimProfit&m0x40+0x4+0x20+0x20+0x40-0x84,"0x1a450x51b, 0x3bdc0x51b"
"    0x1a7b0x51b: REVERT v51b1a76, v51b1a79(0x84)",0x1a450x51b,0,"0,v51b1a76,v51b1a79",REVERT,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
    Begin block 0x3bdc0x51b,0x3bdc0x51b,0,0,0,claimProfit,public,False,0,0,"0x1a450x51b, 0x3bdc0x51b"
"    prev=[0x1a3d0x51b], succ=[0x3b07]",0x3bdc0x51b,0,0,0,claimProfit,public,False,0,0,0x3b07
    =================================,0x3bdc0x51b,0,0,0,claimProfit,public,False,0,0,0x3b07
    0x3be20x51b: JUMP v163d(0x3b07),0x3bdc0x51b,0,"0,v163d",JUMP,claimProfit,public,False,0,0,0x3b07
    Begin block 0x3b07,0x3b07,0,0,0,claimProfit,public,False,0,0,0x3b07
"    prev=[0xd650x51b, 0x3bdc0x51b], succ=[0x1a830x51b]",0x3b07,0,0,0,claimProfit,public,False,0,0,0x1a830x51b
    =================================,0x3b07,0,0,0,claimProfit,public,False,0,0,0x1a830x51b
    0x3b09: v3b09(0x1a83) = CONST ,0x3b07,v3b09,0,CONST,claimProfit,public,False,0x1a83,0,0x1a830x51b
    0x3b0d: JUMP v3b09(0x1a83),0x3b07,0,"0,v3b09",JUMP,claimProfit,public,False,0,0,0x1a830x51b
    Begin block 0x1a830x51b,0x1a830x51b,0,0,0,claimProfit,public,False,0,0,0x1a830x51b
"    prev=[0x3b07], succ=[0x1d220x51b]",0x1a830x51b,0,0,0,claimProfit,public,False,0,0,0x1d220x51b
    =================================,0x1a830x51b,0,0,0,claimProfit,public,False,0,0,0x1d220x51b
    0x1a840x51b: v51b1a84(0x0) = CONST ,0x1a830x51b,v51b1a84,0,CONST,claimProfit,public,False,0x0,0,0x1d220x51b
    0x1a860x51b: v51b1a86(0x3c02) = CONST ,0x1a830x51b,v51b1a86,0,CONST,claimProfit,public,False,0x3c02,0,0x1d220x51b
    0x1a8c0x51b: v51b1a8c(0x40) = CONST ,0x1a830x51b,v51b1a8c,0,CONST,claimProfit,public,False,0x40,0,0x1d220x51b
    0x1a8e0x51b: v51b1a8e = MLOAD v51b1a8c(0x40),0x1a830x51b,v51b1a8e,"0,v51b1a8c",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,0x1d220x51b
    0x1a900x51b: v51b1a90(0x40) = CONST ,0x1a830x51b,v51b1a90,0,CONST,claimProfit,public,False,0x40,0,0x1d220x51b
"    0x1a920x51b: v51b1a92 = ADD v51b1a90(0x40), v51b1a8e",0x1a830x51b,v51b1a92,"0,v51b1a90,v51b1a8e",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x40,0x1d220x51b
    0x1a930x51b: v51b1a93(0x40) = CONST ,0x1a830x51b,v51b1a93,0,CONST,claimProfit,public,False,0x40,0,0x1d220x51b
"    0x1a950x51b: MSTORE v51b1a93(0x40), v51b1a92",0x1a830x51b,0,"0,v51b1a93,v51b1a92",MSTORE,claimProfit,public,False,0,0,0x1d220x51b
    0x1a970x51b: v51b1a97(0x1a) = CONST ,0x1a830x51b,v51b1a97,0,CONST,claimProfit,public,False,0x1a,0,0x1d220x51b
"    0x1a9a0x51b: MSTORE v51b1a8e, v51b1a97(0x1a)",0x1a830x51b,claimProfit&m0x40,"0,v51b1a8e,v51b1a97",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,0x1d220x51b
    0x1a9b0x51b: v51b1a9b(0x20) = CONST ,0x1a830x51b,v51b1a9b,0,CONST,claimProfit,public,False,0x20,0,0x1d220x51b
"    0x1a9d0x51b: v51b1a9d = ADD v51b1a9b(0x20), v51b1a8e",0x1a830x51b,v51b1a9d,"0,v51b1a9b,v51b1a8e",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x20,0x1d220x51b
    0x1a9e0x51b: v51b1a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000) = CONST ,0x1a830x51b,v51b1a9e,0,CONST,claimProfit,public,False,0x536166654d6174683a206469766973696f6e206279207a65726f000000000000,0,0x1d220x51b
"    0x1ac00x51b: MSTORE v51b1a9d, v51b1a9e(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000)",0x1a830x51b,claimProfit&m0x40+0x20,"0,v51b1a9d,v51b1a9e",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x20,0x1d220x51b
    0x1ac20x51b: v51b1ac2(0x1d22) = CONST ,0x1a830x51b,v51b1ac2,0,CONST,claimProfit,public,False,0x1d22,0,0x1d220x51b
    0x1ac60x51b: JUMP v51b1ac2(0x1d22),0x1a830x51b,0,"0,v51b1ac2",JUMP,claimProfit,public,False,0,0,0x1d220x51b
    Begin block 0x1d220x51b,0x1d220x51b,0,0,0,claimProfit,public,False,0,0,0x1d220x51b
"    prev=[0x1a830x51b], succ=[0x1d2c0x51b, 0x1db20x51b]",0x1d220x51b,0,0,0,claimProfit,public,False,0,0,"0x1d2c0x51b, 0x1db20x51b"
    =================================,0x1d220x51b,0,0,0,claimProfit,public,False,0,0,"0x1d2c0x51b, 0x1db20x51b"
    0x1d230x51b: v51b1d23(0x0) = CONST ,0x1d220x51b,v51b1d23,0,CONST,claimProfit,public,False,0x0,0,"0x1d2c0x51b, 0x1db20x51b"
    0x1d270x51b: v51b1d27(0x1db2) = CONST ,0x1d220x51b,v51b1d27,0,CONST,claimProfit,public,False,0x1db2,0,"0x1d2c0x51b, 0x1db20x51b"
"    0x1d2b0x51b: JUMPI v51b1d27(0x1db2), v1607",0x1d220x51b,0,"0,v51b1d27,v1607",JUMPI,claimProfit,public,False,0,0,"0x1d2c0x51b, 0x1db20x51b"
    Begin block 0x1d2c0x51b,0x1d2c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1d2c0x51b, 0x1db20x51b"
"    prev=[0x1d220x51b], succ=[0x1d5c0x51b]",0x1d2c0x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
    =================================,0x1d2c0x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
    0x1d2c0x51b: v51b1d2c(0x40) = CONST ,0x1d2c0x51b,v51b1d2c,0,CONST,claimProfit,public,False,0x40,0,0x1d5c0x51b
    0x1d2e0x51b: v51b1d2e = MLOAD v51b1d2c(0x40),0x1d2c0x51b,v51b1d2e,"0,v51b1d2c",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,0x1d5c0x51b
    0x1d2f0x51b: v51b1d2f(0x461bcd) = CONST ,0x1d2c0x51b,v51b1d2f,0,CONST,claimProfit,public,False,0x461bcd,0,0x1d5c0x51b
    0x1d330x51b: v51b1d33(0xe5) = CONST ,0x1d2c0x51b,v51b1d33,0,CONST,claimProfit,public,False,0xe5,0,0x1d5c0x51b
"    0x1d350x51b: v51b1d35(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v51b1d33(0xe5), v51b1d2f(0x461bcd)",0x1d2c0x51b,v51b1d35,"0,v51b1d33,v51b1d2f",SHL,claimProfit,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,0x1d5c0x51b
"    0x1d370x51b: MSTORE v51b1d2e, v51b1d35(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1d2c0x51b,claimProfit&m0x40,"0,v51b1d2e,v51b1d35",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,0x1d5c0x51b
    0x1d380x51b: v51b1d38(0x4) = CONST ,0x1d2c0x51b,v51b1d38,0,CONST,claimProfit,public,False,0x4,0,0x1d5c0x51b
"    0x1d3a0x51b: v51b1d3a = ADD v51b1d38(0x4), v51b1d2e",0x1d2c0x51b,v51b1d3a,"0,v51b1d38,v51b1d2e",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,0x1d5c0x51b
    0x1d3d0x51b: v51b1d3d(0x20) = CONST ,0x1d2c0x51b,v51b1d3d,0,CONST,claimProfit,public,False,0x20,0,0x1d5c0x51b
"    0x1d3f0x51b: v51b1d3f = ADD v51b1d3d(0x20), v51b1d3a",0x1d2c0x51b,v51b1d3f,"0,v51b1d3d,v51b1d3a",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,0x1d5c0x51b
"    0x1d420x51b: v51b1d42(0x20) = SUB v51b1d3f, v51b1d3a",0x1d2c0x51b,v51b1d42,"0,v51b1d3f,v51b1d3a",SUB,claimProfit,public,False,0x20,claimProfit&m0x40+0x4+0x20-0x20,0x1d5c0x51b
"    0x1d440x51b: MSTORE v51b1d3a, v51b1d42(0x20)",0x1d2c0x51b,claimProfit&m0x40+0x4,"0,v51b1d3a,v51b1d42",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,0x1d5c0x51b
    0x1d480x51b: v51b1d48(0x1a) = MLOAD v51b1a8e,0x1d2c0x51b,v51b1d48,"0,v51b1a8e",MLOAD,claimProfit,public,False,0x1a,claimProfit&m0x1a,0x1d5c0x51b
"    0x1d4a0x51b: MSTORE v51b1d3f, v51b1d48(0x1a)",0x1d2c0x51b,claimProfit&m0x40+0x4+0x20,"0,v51b1d3f,v51b1d48",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20,0x1d5c0x51b
    0x1d4b0x51b: v51b1d4b(0x20) = CONST ,0x1d2c0x51b,v51b1d4b,0,CONST,claimProfit,public,False,0x20,0,0x1d5c0x51b
"    0x1d4d0x51b: v51b1d4d = ADD v51b1d4b(0x20), v51b1d3f",0x1d2c0x51b,v51b1d4d,"0,v51b1d4b,v51b1d3f",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20,0x1d5c0x51b
    0x1d510x51b: v51b1d51(0x1a) = MLOAD v51b1a8e,0x1d2c0x51b,v51b1d51,"0,v51b1a8e",MLOAD,claimProfit,public,False,0x1a,claimProfit&m0x1a,0x1d5c0x51b
    0x1d530x51b: v51b1d53(0x20) = CONST ,0x1d2c0x51b,v51b1d53,0,CONST,claimProfit,public,False,0x20,0,0x1d5c0x51b
"    0x1d550x51b: v51b1d55 = ADD v51b1d53(0x20), v51b1a8e",0x1d2c0x51b,v51b1d55,"0,v51b1d53,v51b1a8e",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x20,0x1d5c0x51b
    0x1d5a0x51b: v51b1d5a(0x0) = CONST ,0x1d2c0x51b,v51b1d5a,0,CONST,claimProfit,public,False,0x0,0,0x1d5c0x51b
    Begin block 0x1d5c0x51b,0x1d5c0x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
"    prev=[0x1d2c0x51b, 0x1d660x51b], succ=[0x1d760x51b, 0x1d660x51b]",0x1d5c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
    =================================,0x1d5c0x51b,0,0,0,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
"    0x1d5c0x51b_0x0: v1d5c51b_0 = PHI v51b1d70, v51b1d5a(0x0)",0x1d5c0x51b,v1d5c51b_0,"0,v51b1d70,v51b1d5a",PHI,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
"    0x1d5f0x51b: v51b1d5f = LT v1d5c51b_0, v51b1d51(0x1a)",0x1d5c0x51b,v51b1d5f,"0,v1d5c51b_0,v51b1d51",LT,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
    0x1d600x51b: v51b1d60 = ISZERO v51b1d5f,0x1d5c0x51b,v51b1d60,"0,v51b1d5f",ISZERO,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
    0x1d610x51b: v51b1d61(0x1d76) = CONST ,0x1d5c0x51b,v51b1d61,0,CONST,claimProfit,public,False,0x1d76,0,"0x1d760x51b, 0x1d660x51b"
"    0x1d650x51b: JUMPI v51b1d61(0x1d76), v51b1d60",0x1d5c0x51b,0,"0,v51b1d61,v51b1d60",JUMPI,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
    Begin block 0x1d760x51b,0x1d760x51b,0,0,0,claimProfit,public,False,0,0,"0x1d760x51b, 0x1d660x51b"
"    prev=[0x1d5c0x51b], succ=[0x1da40x51b, 0x1d8b0x51b]",0x1d760x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    =================================,0x1d760x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
"    0x1d7f0x51b: v51b1d7f = ADD v51b1d51(0x1a), v51b1d4d",0x1d760x51b,v51b1d7f,"0,v51b1d51,v51b1d4d",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x1a,"0x1da40x51b, 0x1d8b0x51b"
    0x1d810x51b: v51b1d81(0x1f) = CONST ,0x1d760x51b,v51b1d81,0,CONST,claimProfit,public,False,0x1f,0,"0x1da40x51b, 0x1d8b0x51b"
"    0x1d830x51b: v51b1d83(0x1a) = AND v51b1d81(0x1f), v51b1d51(0x1a)",0x1d760x51b,v51b1d83,"0,v51b1d81,v51b1d51",AND,claimProfit,public,False,0x1a,0,"0x1da40x51b, 0x1d8b0x51b"
    0x1d850x51b: v51b1d85 = ISZERO v51b1d83(0x1a),0x1d760x51b,v51b1d85,"0,v51b1d83",ISZERO,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    0x1d860x51b: v51b1d86(0x1da4) = CONST ,0x1d760x51b,v51b1d86,0,CONST,claimProfit,public,False,0x1da4,0,"0x1da40x51b, 0x1d8b0x51b"
"    0x1d8a0x51b: JUMPI v51b1d86(0x1da4), v51b1d85",0x1d760x51b,0,"0,v51b1d86,v51b1d85",JUMPI,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    Begin block 0x1da40x51b,0x1da40x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
"    prev=[0x1d760x51b, 0x1d8b0x51b], succ=[]",0x1da40x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    =================================,0x1da40x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
"    0x1da40x51b_0x1: v1da451b_1 = PHI v51b1da1, v51b1d7f",0x1da40x51b,v1da451b_1,"0,v51b1da1,v51b1d7f",PHI,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    0x1daa0x51b: v51b1daa(0x40) = CONST ,0x1da40x51b,v51b1daa,0,CONST,claimProfit,public,False,0x40,0,"0x1da40x51b, 0x1d8b0x51b"
    0x1dac0x51b: v51b1dac = MLOAD v51b1daa(0x40),0x1da40x51b,v51b1dac,"0,v51b1daa",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x1da40x51b, 0x1d8b0x51b"
"    0x1daf0x51b: v51b1daf = SUB v1da451b_1, v51b1dac",0x1da40x51b,v51b1daf,"0,v1da451b_1,v51b1dac",SUB,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
"    0x1db10x51b: REVERT v51b1dac, v51b1daf",0x1da40x51b,0,"0,v51b1dac,v51b1daf",REVERT,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
    Begin block 0x1d8b0x51b,0x1d8b0x51b,0,0,0,claimProfit,public,False,0,0,"0x1da40x51b, 0x1d8b0x51b"
"    prev=[0x1d760x51b], succ=[0x1da40x51b]",0x1d8b0x51b,0,0,0,claimProfit,public,False,0,0,0x1da40x51b
    =================================,0x1d8b0x51b,0,0,0,claimProfit,public,False,0,0,0x1da40x51b
"    0x1d8d0x51b: v51b1d8d = SUB v51b1d7f, v51b1d83(0x1a)",0x1d8b0x51b,v51b1d8d,"0,v51b1d7f,v51b1d83",SUB,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x51b
    0x1d8f0x51b: v51b1d8f = MLOAD v51b1d8d,0x1d8b0x51b,v51b1d8f,"0,v51b1d8d",MLOAD,claimProfit,public,False,0,0,0x1da40x51b
    0x1d900x51b: v51b1d90(0x1) = CONST ,0x1d8b0x51b,v51b1d90,0,CONST,claimProfit,public,False,0x1,0,0x1da40x51b
    0x1d930x51b: v51b1d93(0x20) = CONST ,0x1d8b0x51b,v51b1d93,0,CONST,claimProfit,public,False,0x20,0,0x1da40x51b
"    0x1d950x51b: v51b1d95(0x6) = SUB v51b1d93(0x20), v51b1d83(0x1a)",0x1d8b0x51b,v51b1d95,"0,v51b1d93,v51b1d83",SUB,claimProfit,public,False,0x6,0,0x1da40x51b
    0x1d960x51b: v51b1d96(0x100) = CONST ,0x1d8b0x51b,v51b1d96,0,CONST,claimProfit,public,False,0x100,0,0x1da40x51b
"    0x1d990x51b: v51b1d99(0x1000000000000) = EXP v51b1d96(0x100), v51b1d95(0x6)",0x1d8b0x51b,v51b1d99,"0,v51b1d96,v51b1d95",EXP,claimProfit,public,False,0x1000000000000,0,0x1da40x51b
"    0x1d9a0x51b: v51b1d9a(0xffffffffffff) = SUB v51b1d99(0x1000000000000), v51b1d90(0x1)",0x1d8b0x51b,v51b1d9a,"0,v51b1d99,v51b1d90",SUB,claimProfit,public,False,0xffffffffffff,0,0x1da40x51b
    0x1d9b0x51b: v51b1d9b = NOT v51b1d9a(0xffffffffffff),0x1d8b0x51b,v51b1d9b,"0,v51b1d9a",NOT,claimProfit,public,False,0,0,0x1da40x51b
"    0x1d9c0x51b: v51b1d9c = AND v51b1d9b, v51b1d8f",0x1d8b0x51b,v51b1d9c,"0,v51b1d9b,v51b1d8f",AND,claimProfit,public,False,0,0,0x1da40x51b
"    0x1d9e0x51b: MSTORE v51b1d8d, v51b1d9c",0x1d8b0x51b,claimProfit&m0x40+0x4+0x20+0x20+0x1a-0x1a,"0,v51b1d8d,v51b1d9c",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x1a-0x1a,0x1da40x51b
    0x1d9f0x51b: v51b1d9f(0x20) = CONST ,0x1d8b0x51b,v51b1d9f,0,CONST,claimProfit,public,False,0x20,0,0x1da40x51b
"    0x1da10x51b: v51b1da1 = ADD v51b1d9f(0x20), v51b1d8d",0x1d8b0x51b,v51b1da1,"0,v51b1d9f,v51b1d8d",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4+0x20+0x20+0x1a-0x1a+0x20,0x1da40x51b
    Begin block 0x1d660x51b,0x1d660x51b,0,0,0,claimProfit,public,False,0,0,0x1da40x51b
"    prev=[0x1d5c0x51b], succ=[0x1d5c0x51b]",0x1d660x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
    =================================,0x1d660x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
"    0x1d660x51b_0x0: v1d6651b_0 = PHI v51b1d70, v51b1d5a(0x0)",0x1d660x51b,v1d6651b_0,"0,v51b1d70,v51b1d5a",PHI,claimProfit,public,False,0,0,0x1d5c0x51b
"    0x1d680x51b: v51b1d68 = ADD v1d6651b_0, v51b1d55",0x1d660x51b,v51b1d68,"0,v1d6651b_0,v51b1d55",ADD,claimProfit,public,False,0,0,0x1d5c0x51b
    0x1d690x51b: v51b1d69 = MLOAD v51b1d68,0x1d660x51b,v51b1d69,"0,v51b1d68",MLOAD,claimProfit,public,False,0,0,0x1d5c0x51b
"    0x1d6c0x51b: v51b1d6c = ADD v1d6651b_0, v51b1d4d",0x1d660x51b,v51b1d6c,"0,v1d6651b_0,v51b1d4d",ADD,claimProfit,public,False,0,0,0x1d5c0x51b
"    0x1d6d0x51b: MSTORE v51b1d6c, v51b1d69",0x1d660x51b,0,"0,v51b1d6c,v51b1d69",MSTORE,claimProfit,public,False,0,0,0x1d5c0x51b
    0x1d6e0x51b: v51b1d6e(0x20) = CONST ,0x1d660x51b,v51b1d6e,0,CONST,claimProfit,public,False,0x20,0,0x1d5c0x51b
"    0x1d700x51b: v51b1d70 = ADD v51b1d6e(0x20), v1d6651b_0",0x1d660x51b,v51b1d70,"0,v51b1d6e,v1d6651b_0",ADD,claimProfit,public,False,0,0,0x1d5c0x51b
    0x1d710x51b: v51b1d71(0x1d5c) = CONST ,0x1d660x51b,v51b1d71,0,CONST,claimProfit,public,False,0x1d5c,0,0x1d5c0x51b
    0x1d750x51b: JUMP v51b1d71(0x1d5c),0x1d660x51b,0,"0,v51b1d71",JUMP,claimProfit,public,False,0,0,0x1d5c0x51b
    Begin block 0x1db20x51b,0x1db20x51b,0,0,0,claimProfit,public,False,0,0,0x1d5c0x51b
"    prev=[0x1d220x51b], succ=[0x1dbe0x51b, 0x1dbf0x51b]",0x1db20x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    =================================,0x1db20x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    0x1db40x51b: v51b1db4(0x0) = CONST ,0x1db20x51b,v51b1db4,0,CONST,claimProfit,public,False,0x0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    0x1db90x51b: v51b1db9(0x1dbf) = CONST ,0x1db20x51b,v51b1db9,0,CONST,claimProfit,public,False,0x1dbf,0,"0x1dbe0x51b, 0x1dbf0x51b"
"    0x1dbd0x51b: JUMPI v51b1db9(0x1dbf), v1607",0x1db20x51b,0,"0,v51b1db9,v1607",JUMPI,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    Begin block 0x1dbe0x51b,0x1dbe0x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
"    prev=[0x1db20x51b], succ=[]",0x1dbe0x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    =================================,0x1dbe0x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    0x1dbe0x51b: THROW ,0x1dbe0x51b,0,0,THROW,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
    Begin block 0x1dbf0x51b,0x1dbf0x51b,0,0,0,claimProfit,public,False,0,0,"0x1dbe0x51b, 0x1dbf0x51b"
"    prev=[0x1db20x51b], succ=[0x3c020x51b]",0x1dbf0x51b,0,0,0,claimProfit,public,False,0,0,0x3c020x51b
    =================================,0x1dbf0x51b,0,0,0,claimProfit,public,False,0,0,0x3c020x51b
"    0x1dbf0x51b_0x0: v1dbf51b_0 = PHI v51b1a32, v51b1a28(0x0)",0x1dbf0x51b,v1dbf51b_0,"0,v51b1a32,v51b1a28",PHI,claimProfit,public,False,0,0,0x3c020x51b
"    0x1dc00x51b: v51b1dc0 = DIV v1dbf51b_0, v1607",0x1dbf0x51b,v51b1dc0,"0,v1dbf51b_0,v1607",DIV,claimProfit,public,False,0,0,0x3c020x51b
    0x1dc80x51b: JUMP v51b1a86(0x3c02),0x1dbf0x51b,0,"0,v51b1a86",JUMP,claimProfit,public,False,0,0,0x3c020x51b
    Begin block 0x3c020x51b,0x3c020x51b,0,0,0,claimProfit,public,False,0,0,0x3c020x51b
"    prev=[0x1dbf0x51b], succ=[0x169e]",0x3c020x51b,0,0,0,claimProfit,public,False,0,0,0x169e
    =================================,0x3c020x51b,0,0,0,claimProfit,public,False,0,0,0x169e
    0x3c080x51b: JUMP v159c(0x169e),0x3c020x51b,0,"0,v159c",JUMP,claimProfit,public,False,0,0,0x169e
    Begin block 0x169e,0x169e,0,0,0,claimProfit,public,False,0,0,0x169e
"    prev=[0x3c020x51b], succ=[0x16c9]",0x169e,0,0,0,claimProfit,public,False,0,0,0x16c9
    =================================,0x169e,0,0,0,claimProfit,public,False,0,0,0x16c9
    0x169f: v169f(0x1) = CONST ,0x169e,v169f,0,CONST,claimProfit,public,False,0x1,0,0x16c9
    0x16a1: v16a1(0x1) = CONST ,0x169e,v16a1,0,CONST,claimProfit,public,False,0x1,0,0x16c9
    0x16a3: v16a3(0xa0) = CONST ,0x169e,v16a3,0,CONST,claimProfit,public,False,0xa0,0,0x16c9
"    0x16a5: v16a5(0x10000000000000000000000000000000000000000) = SHL v16a3(0xa0), v16a1(0x1)",0x169e,v16a5,"0,v16a3,v16a1",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,0x16c9
"    0x16a6: v16a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16a5(0x10000000000000000000000000000000000000000), v169f(0x1)",0x169e,v16a6,"0,v16a5,v169f",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x16c9
"    0x16a8: v16a8 = AND v54e, v16a6(0xffffffffffffffffffffffffffffffffffffffff)",0x169e,v16a8,"0,v54e,v16a6",AND,claimProfit,public,False,0,0,0x16c9
    0x16a9: v16a9(0x0) = CONST ,0x169e,v16a9,0,CONST,claimProfit,public,False,0x0,0,0x16c9
"    0x16ad: MSTORE v16a9(0x0), v16a8",0x169e,0,"0,v16a9,v16a8",MSTORE,claimProfit,public,False,0,0,0x16c9
    0x16ae: v16ae(0x3) = CONST ,0x169e,v16ae,0,CONST,claimProfit,public,False,0x3,0,0x16c9
    0x16b0: v16b0(0x20) = CONST ,0x169e,v16b0,0,CONST,claimProfit,public,False,0x20,0,0x16c9
"    0x16b2: MSTORE v16b0(0x20), v16ae(0x3)",0x169e,0,"0,v16b0,v16ae",MSTORE,claimProfit,public,False,0,0,0x16c9
    0x16b3: v16b3(0x40) = CONST ,0x169e,v16b3,0,CONST,claimProfit,public,False,0x40,0,0x16c9
"    0x16b6: v16b6 = SHA3 v16a9(0x0), v16b3(0x40)",0x169e,v16b6,"0,v16a9,v16b3",SHA3,claimProfit,public,False,0,0,0x16c9
    0x16b7: v16b7(0x1) = CONST ,0x169e,v16b7,0,CONST,claimProfit,public,False,0x1,0,0x16c9
"    0x16b9: v16b9 = ADD v16b7(0x1), v16b6",0x169e,v16b9,"0,v16b7,v16b6",ADD,claimProfit,public,False,0,0,0x16c9
    0x16ba: v16ba = SLOAD v16b9,0x169e,v16ba,"0,v16b9",SLOAD,claimProfit,public,False,0,0,0x16c9
    0x16be: v16be(0x16c9) = CONST ,0x169e,v16be,0,CONST,claimProfit,public,False,0x16c9,0,0x16c9
    0x16c4: v16c4(0x1ac7) = CONST ,0x169e,v16c4,0,CONST,claimProfit,public,False,0x1ac7,0,0x16c9
"    0x16c8: v16c8_0 = CALLPRIVATE v16c4(0x1ac7), v51b1dc0, v16ba, v16be(0x16c9)",0x169e,v16c8_0,"0,v16c4,v51b1dc0,v16ba,v16be",CALLPRIVATE,claimProfit,public,False,0,0,0x16c9
    Begin block 0x16c9,0x16c9,0,0,0,claimProfit,public,False,0,0,0x16c9
"    prev=[0x169e], succ=[0x172a, 0x172e]",0x16c9,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
    =================================,0x16c9,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16ca: v16ca(0x1) = CONST ,0x16c9,v16ca,0,CONST,claimProfit,public,False,0x1,0,"0x172a, 0x172e"
    0x16cc: v16cc(0x1) = CONST ,0x16c9,v16cc,0,CONST,claimProfit,public,False,0x1,0,"0x172a, 0x172e"
    0x16ce: v16ce(0xa0) = CONST ,0x16c9,v16ce,0,CONST,claimProfit,public,False,0xa0,0,"0x172a, 0x172e"
"    0x16d0: v16d0(0x10000000000000000000000000000000000000000) = SHL v16ce(0xa0), v16cc(0x1)",0x16c9,v16d0,"0,v16ce,v16cc",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x172a, 0x172e"
"    0x16d1: v16d1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16d0(0x10000000000000000000000000000000000000000), v16ca(0x1)",0x16c9,v16d1,"0,v16d0,v16ca",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x172a, 0x172e"
"    0x16d4: v16d4 = AND v54e, v16d1(0xffffffffffffffffffffffffffffffffffffffff)",0x16c9,v16d4,"0,v54e,v16d1",AND,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16d5: v16d5(0x0) = CONST ,0x16c9,v16d5,0,CONST,claimProfit,public,False,0x0,0,"0x172a, 0x172e"
"    0x16d9: MSTORE v16d5(0x0), v16d4",0x16c9,0,"0,v16d5,v16d4",MSTORE,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16da: v16da(0x3) = CONST ,0x16c9,v16da,0,CONST,claimProfit,public,False,0x3,0,"0x172a, 0x172e"
    0x16dc: v16dc(0x20) = CONST ,0x16c9,v16dc,0,CONST,claimProfit,public,False,0x20,0,"0x172a, 0x172e"
"    0x16de: MSTORE v16dc(0x20), v16da(0x3)",0x16c9,0,"0,v16dc,v16da",MSTORE,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16df: v16df(0x40) = CONST ,0x16c9,v16df,0,CONST,claimProfit,public,False,0x40,0,"0x172a, 0x172e"
"    0x16e3: v16e3 = SHA3 v16d5(0x0), v16df(0x40)",0x16c9,v16e3,"0,v16d5,v16df",SHA3,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16e4: v16e4(0x1) = CONST ,0x16c9,v16e4,0,CONST,claimProfit,public,False,0x1,0,"0x172a, 0x172e"
"    0x16e6: v16e6 = ADD v16e4(0x1), v16e3",0x16c9,v16e6,"0,v16e4,v16e3",ADD,claimProfit,public,False,0,0,"0x172a, 0x172e"
"    0x16ea: SSTORE v16e6, v16c8_0",0x16c9,0,"0,v16e6,v16c8_0",SSTORE,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16eb: v16eb(0x6) = CONST ,0x16c9,v16eb,0,CONST,claimProfit,public,False,0x6,0,"0x172a, 0x172e"
    0x16ed: v16ed = SLOAD v16eb(0x6),0x16c9,v16ed,"0,v16eb",SLOAD,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x16ef: v16ef = MLOAD v16df(0x40),0x16c9,v16ef,"0,v16df",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x172a, 0x172e"
    0x16f0: v16f0(0x7dc5bcc9) = CONST ,0x16c9,v16f0,0,CONST,claimProfit,public,False,0x7dc5bcc9,0,"0x172a, 0x172e"
    0x16f5: v16f5(0xe1) = CONST ,0x16c9,v16f5,0,CONST,claimProfit,public,False,0xe1,0,"0x172a, 0x172e"
"    0x16f7: v16f7(0xfb8b799200000000000000000000000000000000000000000000000000000000) = SHL v16f5(0xe1), v16f0(0x7dc5bcc9)",0x16c9,v16f7,"0,v16f5,v16f0",SHL,claimProfit,public,False,0xfb8b799200000000000000000000000000000000000000000000000000000000,0,"0x172a, 0x172e"
"    0x16f9: MSTORE v16ef, v16f7(0xfb8b799200000000000000000000000000000000000000000000000000000000)",0x16c9,claimProfit&m0x40,"0,v16ef,v16f7",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x172a, 0x172e"
    0x16fa: v16fa(0x4) = CONST ,0x16c9,v16fa,0,CONST,claimProfit,public,False,0x4,0,"0x172a, 0x172e"
"    0x16fd: v16fd = ADD v16ef, v16fa(0x4)",0x16c9,v16fd,"0,v16ef,v16fa",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x172a, 0x172e"
"    0x1700: MSTORE v16fd, v51b1dc0",0x16c9,claimProfit&m0x40+0x4,"0,v16fd,v51b1dc0",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x172a, 0x172e"
    0x1701: v1701 = CALLER ,0x16c9,v1701,0,CALLER,claimProfit,public,True,0,0,"0x172a, 0x172e"
    0x1702: v1702(0x24) = CONST ,0x16c9,v1702,0,CONST,claimProfit,public,False,0x24,0,"0x172a, 0x172e"
"    0x1705: v1705 = ADD v16ef, v1702(0x24)",0x16c9,v1705,"0,v16ef,v1702",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x172a, 0x172e"
"    0x1706: MSTORE v1705, v1701",0x16c9,claimProfit&m0x40+0x24,"0,v1705,v1701",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x172a, 0x172e"
    0x1708: v1708 = MLOAD v16df(0x40),0x16c9,v1708,"0,v16df",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x172a, 0x172e"
"    0x170a: v170a = AND v16d1(0xffffffffffffffffffffffffffffffffffffffff), v16ed",0x16c9,v170a,"0,v16d1,v16ed",AND,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x170c: v170c(0xfb8b7992) = CONST ,0x16c9,v170c,0,CONST,claimProfit,public,False,0xfb8b7992,0,"0x172a, 0x172e"
    0x1712: v1712(0x44) = CONST ,0x16c9,v1712,0,CONST,claimProfit,public,False,0x44,0,"0x172a, 0x172e"
"    0x1716: v1716 = ADD v16ef, v1712(0x44)",0x16c9,v1716,"0,v16ef,v1712",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x44,"0x172a, 0x172e"
"    0x171b: v171b(0x0) = SUB v16ef, v1708",0x16c9,v171b,"0,v16ef,v1708",SUB,claimProfit,public,False,0x0,claimProfit&m0x40-0x0,"0x172a, 0x172e"
"    0x171c: v171c(0x44) = ADD v171b(0x0), v1712(0x44)",0x16c9,v171c,"0,v171b,v1712",ADD,claimProfit,public,False,0x44,claimProfit&m0x40-0x0+0x44,"0x172a, 0x172e"
    0x1721: v1721 = EXTCODESIZE v170a,0x16c9,v1721,"0,v170a",EXTCODESIZE,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x1722: v1722 = ISZERO v1721,0x16c9,v1722,"0,v1721",ISZERO,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x1724: v1724 = ISZERO v1722,0x16c9,v1724,"0,v1722",ISZERO,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x1725: v1725(0x172e) = CONST ,0x16c9,v1725,0,CONST,claimProfit,public,False,0x172e,0,"0x172a, 0x172e"
"    0x1729: JUMPI v1725(0x172e), v1724",0x16c9,0,"0,v1725,v1724",JUMPI,claimProfit,public,False,0,0,"0x172a, 0x172e"
    Begin block 0x172a,0x172a,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
"    prev=[0x16c9], succ=[]",0x172a,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
    =================================,0x172a,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
    0x172a: v172a(0x0) = CONST ,0x172a,v172a,0,CONST,claimProfit,public,False,0x0,0,"0x172a, 0x172e"
"    0x172d: REVERT v172a(0x0), v172a(0x0)",0x172a,0,"0,v172a,v172a",REVERT,claimProfit,public,False,0,0,"0x172a, 0x172e"
    Begin block 0x172e,0x172e,0,0,0,claimProfit,public,False,0,0,"0x172a, 0x172e"
"    prev=[0x16c9], succ=[0x173a, 0x1743]",0x172e,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
    =================================,0x172e,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x1730: v1730 = GAS ,0x172e,v1730,0,GAS,claimProfit,public,False,0,0,"0x173a, 0x1743"
"    0x1731: v1731 = CALL v1730, v170a, v16d5(0x0), v1708, v171c(0x44), v1708, v16d5(0x0)",0x172e,v1731,"0,v1730,v170a,v16d5,v1708,v171c,v1708,v16d5",CALL,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x1732: v1732 = ISZERO v1731,0x172e,v1732,"0,v1731",ISZERO,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x1734: v1734 = ISZERO v1732,0x172e,v1734,"0,v1732",ISZERO,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x1735: v1735(0x1743) = CONST ,0x172e,v1735,0,CONST,claimProfit,public,False,0x1743,0,"0x173a, 0x1743"
"    0x1739: JUMPI v1735(0x1743), v1734",0x172e,0,"0,v1735,v1734",JUMPI,claimProfit,public,False,0,0,"0x173a, 0x1743"
    Begin block 0x173a,0x173a,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
"    prev=[0x172e], succ=[]",0x173a,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
    =================================,0x173a,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x173a: v173a = RETURNDATASIZE ,0x173a,v173a,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x173b: v173b(0x0) = CONST ,0x173a,v173b,0,CONST,claimProfit,public,False,0x0,0,"0x173a, 0x1743"
"    0x173e: RETURNDATACOPY v173b(0x0), v173b(0x0), v173a",0x173a,0,"0,v173b,v173b,v173a",RETURNDATACOPY,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x173f: v173f = RETURNDATASIZE ,0x173a,v173f,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x173a, 0x1743"
    0x1740: v1740(0x0) = CONST ,0x173a,v1740,0,CONST,claimProfit,public,False,0x0,0,"0x173a, 0x1743"
"    0x1742: REVERT v1740(0x0), v173f",0x173a,0,"0,v1740,v173f",REVERT,claimProfit,public,False,0,0,"0x173a, 0x1743"
    Begin block 0x1743,0x1743,0,0,0,claimProfit,public,False,0,0,"0x173a, 0x1743"
"    prev=[0x172e], succ=[0x17c4, 0x109e0x51b]",0x1743,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    =================================,0x1743,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x1746: v1746(0x6) = CONST ,0x1743,v1746,0,CONST,claimProfit,public,False,0x6,0,"0x17c4, 0x109e0x51b"
    0x1748: v1748 = SLOAD v1746(0x6),0x1743,v1748,"0,v1746",SLOAD,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x1749: v1749(0x40) = CONST ,0x1743,v1749,0,CONST,claimProfit,public,False,0x40,0,"0x17c4, 0x109e0x51b"
    0x174c: v174c = MLOAD v1749(0x40),0x1743,v174c,"0,v1749",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x17c4, 0x109e0x51b"
    0x174d: v174d(0x75b04b15) = CONST ,0x1743,v174d,0,CONST,claimProfit,public,False,0x75b04b15,0,"0x17c4, 0x109e0x51b"
    0x1752: v1752(0xe1) = CONST ,0x1743,v1752,0,CONST,claimProfit,public,False,0xe1,0,"0x17c4, 0x109e0x51b"
"    0x1754: v1754(0xeb60962a00000000000000000000000000000000000000000000000000000000) = SHL v1752(0xe1), v174d(0x75b04b15)",0x1743,v1754,"0,v1752,v174d",SHL,claimProfit,public,False,0xeb60962a00000000000000000000000000000000000000000000000000000000,0,"0x17c4, 0x109e0x51b"
"    0x1756: MSTORE v174c, v1754(0xeb60962a00000000000000000000000000000000000000000000000000000000)",0x1743,claimProfit&m0x40,"0,v174c,v1754",MSTORE,claimProfit,public,False,0,claimProfit&m0x40,"0x17c4, 0x109e0x51b"
    0x1757: v1757(0x1) = CONST ,0x1743,v1757,0,CONST,claimProfit,public,False,0x1,0,"0x17c4, 0x109e0x51b"
    0x1759: v1759(0x1) = CONST ,0x1743,v1759,0,CONST,claimProfit,public,False,0x1,0,"0x17c4, 0x109e0x51b"
    0x175b: v175b(0xa0) = CONST ,0x1743,v175b,0,CONST,claimProfit,public,False,0xa0,0,"0x17c4, 0x109e0x51b"
"    0x175d: v175d(0x10000000000000000000000000000000000000000) = SHL v175b(0xa0), v1759(0x1)",0x1743,v175d,"0,v175b,v1759",SHL,claimProfit,public,False,0x10000000000000000000000000000000000000000,0,"0x17c4, 0x109e0x51b"
"    0x175e: v175e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v175d(0x10000000000000000000000000000000000000000), v1757(0x1)",0x1743,v175e,"0,v175d,v1757",SUB,claimProfit,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x17c4, 0x109e0x51b"
"    0x1761: v1761 = AND v175e(0xffffffffffffffffffffffffffffffffffffffff), v54e",0x1743,v1761,"0,v175e,v54e",AND,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x1762: v1762(0x4) = CONST ,0x1743,v1762,0,CONST,claimProfit,public,False,0x4,0,"0x17c4, 0x109e0x51b"
"    0x1765: v1765 = ADD v174c, v1762(0x4)",0x1743,v1765,"0,v174c,v1762",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x17c4, 0x109e0x51b"
"    0x1766: MSTORE v1765, v1761",0x1743,claimProfit&m0x40+0x4,"0,v1765,v1761",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x4,"0x17c4, 0x109e0x51b"
    0x1767: v1767 = CALLER ,0x1743,v1767,0,CALLER,claimProfit,public,True,0,0,"0x17c4, 0x109e0x51b"
    0x1768: v1768(0x44) = CONST ,0x1743,v1768,0,CONST,claimProfit,public,False,0x44,0,"0x17c4, 0x109e0x51b"
"    0x176b: v176b = ADD v174c, v1768(0x44)",0x1743,v176b,"0,v174c,v1768",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x44,"0x17c4, 0x109e0x51b"
"    0x176c: MSTORE v176b, v1767",0x1743,claimProfit&m0x40+0x44,"0,v176b,v1767",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x44,"0x17c4, 0x109e0x51b"
    0x176d: v176d(0x60) = CONST ,0x1743,v176d,0,CONST,claimProfit,public,False,0x60,0,"0x17c4, 0x109e0x51b"
    0x176f: v176f(0x24) = CONST ,0x1743,v176f,0,CONST,claimProfit,public,False,0x24,0,"0x17c4, 0x109e0x51b"
"    0x1772: v1772 = ADD v174c, v176f(0x24)",0x1743,v1772,"0,v174c,v176f",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x17c4, 0x109e0x51b"
"    0x1773: MSTORE v1772, v176d(0x60)",0x1743,claimProfit&m0x40+0x24,"0,v1772,v176d",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x24,"0x17c4, 0x109e0x51b"
    0x1774: v1774(0x15) = CONST ,0x1743,v1774,0,CONST,claimProfit,public,False,0x15,0,"0x17c4, 0x109e0x51b"
    0x1776: v1776(0x64) = CONST ,0x1743,v1776,0,CONST,claimProfit,public,False,0x64,0,"0x17c4, 0x109e0x51b"
"    0x1779: v1779 = ADD v174c, v1776(0x64)",0x1743,v1779,"0,v174c,v1776",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x64,"0x17c4, 0x109e0x51b"
"    0x177a: MSTORE v1779, v1774(0x15)",0x1743,claimProfit&m0x40+0x64,"0,v1779,v1774",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x64,"0x17c4, 0x109e0x51b"
    0x177b: v177b(0x115512081c1c9bd99a5d081dda5d1a191c985dd85b) = CONST ,0x1743,v177b,0,CONST,claimProfit,public,False,0x115512081c1c9bd99a5d081dda5d1a191c985dd85b,0,"0x17c4, 0x109e0x51b"
    0x1791: v1791(0x5a) = CONST ,0x1743,v1791,0,CONST,claimProfit,public,False,0x5a,0,"0x17c4, 0x109e0x51b"
"    0x1793: v1793(0x4554482070726f666974207769746864726177616c0000000000000000000000) = SHL v1791(0x5a), v177b(0x115512081c1c9bd99a5d081dda5d1a191c985dd85b)",0x1743,v1793,"0,v1791,v177b",SHL,claimProfit,public,False,0x4554482070726f666974207769746864726177616c0000000000000000000000,0,"0x17c4, 0x109e0x51b"
    0x1794: v1794(0x84) = CONST ,0x1743,v1794,0,CONST,claimProfit,public,False,0x84,0,"0x17c4, 0x109e0x51b"
"    0x1797: v1797 = ADD v174c, v1794(0x84)",0x1743,v1797,"0,v174c,v1794",ADD,claimProfit,public,False,0,claimProfit&m0x40+0x84,"0x17c4, 0x109e0x51b"
"    0x1798: MSTORE v1797, v1793(0x4554482070726f666974207769746864726177616c0000000000000000000000)",0x1743,claimProfit&m0x40+0x84,"0,v1797,v1793",MSTORE,claimProfit,public,False,0,claimProfit&m0x40+0x84,"0x17c4, 0x109e0x51b"
    0x179a: v179a = MLOAD v1749(0x40),0x1743,v179a,"0,v1749",MLOAD,claimProfit,public,False,0,claimProfit&m0x40,"0x17c4, 0x109e0x51b"
"    0x179e: v179e = AND v1748, v175e(0xffffffffffffffffffffffffffffffffffffffff)",0x1743,v179e,"0,v1748,v175e",AND,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x17a1: v17a1(0xeb60962a) = CONST ,0x1743,v17a1,0,CONST,claimProfit,public,False,0xeb60962a,0,"0x17c4, 0x109e0x51b"
    0x17a8: v17a8(0xa4) = CONST ,0x1743,v17a8,0,CONST,claimProfit,public,False,0xa4,0,"0x17c4, 0x109e0x51b"
"    0x17ac: v17ac = ADD v174c, v17a8(0xa4)",0x1743,v17ac,"0,v174c,v17a8",ADD,claimProfit,public,False,0,claimProfit&m0x40+0xa4,"0x17c4, 0x109e0x51b"
    0x17ae: v17ae(0x0) = CONST ,0x1743,v17ae,0,CONST,claimProfit,public,False,0x0,0,"0x17c4, 0x109e0x51b"
"    0x17b5: v17b5(0x0) = SUB v174c, v179a",0x1743,v17b5,"0,v174c,v179a",SUB,claimProfit,public,False,0x0,claimProfit&m0x40-0x0,"0x17c4, 0x109e0x51b"
"    0x17b6: v17b6(0xa4) = ADD v17b5(0x0), v17a8(0xa4)",0x1743,v17b6,"0,v17b5,v17a8",ADD,claimProfit,public,False,0xa4,claimProfit&m0x40-0x0+0xa4,"0x17c4, 0x109e0x51b"
    0x17bb: v17bb = EXTCODESIZE v179e,0x1743,v17bb,"0,v179e",EXTCODESIZE,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x17bc: v17bc = ISZERO v17bb,0x1743,v17bc,"0,v17bb",ISZERO,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x17be: v17be = ISZERO v17bc,0x1743,v17be,"0,v17bc",ISZERO,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x17bf: v17bf(0x109e) = CONST ,0x1743,v17bf,0,CONST,claimProfit,public,False,0x109e,0,"0x17c4, 0x109e0x51b"
"    0x17c3: JUMPI v17bf(0x109e), v17be",0x1743,0,"0,v17bf,v17be",JUMPI,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    Begin block 0x17c4,0x17c4,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
"    prev=[0x1743], succ=[]",0x17c4,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    =================================,0x17c4,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    0x17c4: v17c4(0x0) = CONST ,0x17c4,v17c4,0,CONST,claimProfit,public,False,0x0,0,"0x17c4, 0x109e0x51b"
"    0x17c7: REVERT v17c4(0x0), v17c4(0x0)",0x17c4,0,"0,v17c4,v17c4",REVERT,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
    Begin block 0x109e0x51b,0x109e0x51b,0,0,0,claimProfit,public,False,0,0,"0x17c4, 0x109e0x51b"
"    prev=[0x1743], succ=[0x10aa0x51b, 0x10b30x51b]",0x109e0x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    =================================,0x109e0x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10a00x51b: v51b10a0 = GAS ,0x109e0x51b,v51b10a0,0,GAS,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
"    0x10a10x51b: v51b10a1 = CALL v51b10a0, v179e, v17ae(0x0), v179a, v17b6(0xa4), v179a, v17ae(0x0)",0x109e0x51b,v51b10a1,"0,v51b10a0,v179e,v17ae,v179a,v17b6,v179a,v17ae",CALL,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10a20x51b: v51b10a2 = ISZERO v51b10a1,0x109e0x51b,v51b10a2,"0,v51b10a1",ISZERO,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10a40x51b: v51b10a4 = ISZERO v51b10a2,0x109e0x51b,v51b10a4,"0,v51b10a2",ISZERO,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10a50x51b: v51b10a5(0x10b3) = CONST ,0x109e0x51b,v51b10a5,0,CONST,claimProfit,public,False,0x10b3,0,"0x10aa0x51b, 0x10b30x51b"
"    0x10a90x51b: JUMPI v51b10a5(0x10b3), v51b10a4",0x109e0x51b,0,"0,v51b10a5,v51b10a4",JUMPI,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    Begin block 0x10aa0x51b,0x10aa0x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
"    prev=[0x109e0x51b], succ=[]",0x10aa0x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    =================================,0x10aa0x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10aa0x51b: v51b10aa = RETURNDATASIZE ,0x10aa0x51b,v51b10aa,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10ab0x51b: v51b10ab(0x0) = CONST ,0x10aa0x51b,v51b10ab,0,CONST,claimProfit,public,False,0x0,0,"0x10aa0x51b, 0x10b30x51b"
"    0x10ae0x51b: RETURNDATACOPY v51b10ab(0x0), v51b10ab(0x0), v51b10aa",0x10aa0x51b,0,"0,v51b10ab,v51b10ab,v51b10aa",RETURNDATACOPY,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10af0x51b: v51b10af = RETURNDATASIZE ,0x10aa0x51b,v51b10af,0,RETURNDATASIZE,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    0x10b00x51b: v51b10b0(0x0) = CONST ,0x10aa0x51b,v51b10b0,0,CONST,claimProfit,public,False,0x0,0,"0x10aa0x51b, 0x10b30x51b"
"    0x10b20x51b: REVERT v51b10b0(0x0), v51b10af",0x10aa0x51b,0,"0,v51b10b0,v51b10af",REVERT,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
    Begin block 0x10b30x51b,0x10b30x51b,0,0,0,claimProfit,public,False,0,0,"0x10aa0x51b, 0x10b30x51b"
"    prev=[0x109e0x51b], succ=[0x3988]",0x10b30x51b,0,0,0,claimProfit,public,False,0,0,0x3988
    =================================,0x10b30x51b,0,0,0,claimProfit,public,False,0,0,0x3988
    0x10bb0x51b: JUMP v52a(0x3988),0x10b30x51b,0,"0,v52a",JUMP,claimProfit,public,False,0,0,0x3988
    Begin block 0x3988,0x3988,0,0,0,claimProfit,public,False,0,0,0x3988
"    prev=[0x10b30x51b], succ=[]",0x3988,0,0,0,claimProfit,public,False,0,0,0x3988
    =================================,0x3988,0,0,0,claimProfit,public,False,0,0,0x3988
    0x3989: STOP ,0x3988,0,0,STOP,claimProfit,public,False,0,0,0x3988
    Begin block 0x1a270x51b,0x1a270x51b,0,0,0,claimProfit,public,False,0,0,0x3988
"    prev=[0x1a1e0x51b], succ=[0xd650x51b]",0x1a270x51b,0,0,0,claimProfit,public,False,0,0,0xd650x51b
    =================================,0x1a270x51b,0,0,0,claimProfit,public,False,0,0,0xd650x51b
    0x1a280x51b: v51b1a28(0x0) = CONST ,0x1a270x51b,v51b1a28,0,CONST,claimProfit,public,False,0x0,0,0xd650x51b
    0x1a2a0x51b: v51b1a2a(0xd65) = CONST ,0x1a270x51b,v51b1a2a,0,CONST,claimProfit,public,False,0xd65,0,0xd650x51b
    0x1a2e0x51b: JUMP v51b1a2a(0xd65),0x1a270x51b,0,"0,v51b1a2a",JUMP,claimProfit,public,False,0,0,0xd650x51b
    Begin block 0xd650x51b,0xd650x51b,0,0,0,claimProfit,public,False,0,0,0xd650x51b
"    prev=[0x1a270x51b], succ=[0x3b07]",0xd650x51b,0,0,0,claimProfit,public,False,0,0,0x3b07
    =================================,0xd650x51b,0,0,0,claimProfit,public,False,0,0,0x3b07
    0xd6a0x51b: JUMP v163d(0x3b07),0xd650x51b,0,"0,v163d",JUMP,claimProfit,public,False,0,0,0x3b07
},0xd650x51b,0,0,0,claimProfit,public,False,0,0,0x3b07
function isPoolToken(address)() public {,0x55a,0,0,public,isPoolToken,public,False,0,0,0x3b07
    Begin block 0x55a,0x55a,0,0,0,isPoolToken,public,False,0,0,0x3b07
"    prev=[], succ=[0x563, 0x567]",0x55a,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
    =================================,0x55a,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
    0x55b: v55b = CALLVALUE ,0x55a,v55b,0,CALLVALUE,isPoolToken,public,False,0,0,"0x563, 0x567"
    0x55d: v55d = ISZERO v55b,0x55a,v55d,"0,v55b",ISZERO,isPoolToken,public,False,0,0,"0x563, 0x567"
    0x55e: v55e(0x567) = CONST ,0x55a,v55e,0,CONST,isPoolToken,public,False,0x567,0,"0x563, 0x567"
"    0x562: JUMPI v55e(0x567), v55d",0x55a,0,"0,v55e,v55d",JUMPI,isPoolToken,public,False,0,0,"0x563, 0x567"
    Begin block 0x563,0x563,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
"    prev=[0x55a], succ=[]",0x563,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
    =================================,0x563,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
    0x563: v563(0x0) = CONST ,0x563,v563,0,CONST,isPoolToken,public,False,0x0,0,"0x563, 0x567"
"    0x566: REVERT v563(0x0), v563(0x0)",0x563,0,"0,v563,v563",REVERT,isPoolToken,public,False,0,0,"0x563, 0x567"
    Begin block 0x567,0x567,0,0,0,isPoolToken,public,False,0,0,"0x563, 0x567"
"    prev=[0x55a], succ=[0x57c, 0x580]",0x567,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
    =================================,0x567,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
    0x569: v569(0x39a9) = CONST ,0x567,v569,0,CONST,isPoolToken,public,False,0x39a9,0,"0x57c, 0x580"
    0x56d: v56d(0x4) = CONST ,0x567,v56d,0,CONST,isPoolToken,public,False,0x4,0,"0x57c, 0x580"
    0x570: v570 = CALLDATASIZE ,0x567,v570,0,CALLDATASIZE,isPoolToken,public,False,0,0,"0x57c, 0x580"
"    0x571: v571 = SUB v570, v56d(0x4)",0x567,v571,"0,v570,v56d",SUB,isPoolToken,public,False,0,0,"0x57c, 0x580"
    0x572: v572(0x20) = CONST ,0x567,v572,0,CONST,isPoolToken,public,False,0x20,0,"0x57c, 0x580"
"    0x575: v575 = LT v571, v572(0x20)",0x567,v575,"0,v571,v572",LT,isPoolToken,public,False,0,0,"0x57c, 0x580"
    0x576: v576 = ISZERO v575,0x567,v576,"0,v575",ISZERO,isPoolToken,public,False,0,0,"0x57c, 0x580"
    0x577: v577(0x580) = CONST ,0x567,v577,0,CONST,isPoolToken,public,False,0x580,0,"0x57c, 0x580"
"    0x57b: JUMPI v577(0x580), v576",0x567,0,"0,v577,v576",JUMPI,isPoolToken,public,False,0,0,"0x57c, 0x580"
    Begin block 0x57c,0x57c,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
"    prev=[0x567], succ=[]",0x57c,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
    =================================,0x57c,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
    0x57c: v57c(0x0) = CONST ,0x57c,v57c,0,CONST,isPoolToken,public,False,0x0,0,"0x57c, 0x580"
"    0x57f: REVERT v57c(0x0), v57c(0x0)",0x57c,0,"0,v57c,v57c",REVERT,isPoolToken,public,False,0,0,"0x57c, 0x580"
    Begin block 0x580,0x580,0,0,0,isPoolToken,public,False,0,0,"0x57c, 0x580"
"    prev=[0x567], succ=[0x17c8]",0x580,0,0,0,isPoolToken,public,False,0,0,0x17c8
    =================================,0x580,0,0,0,isPoolToken,public,False,0,0,0x17c8
    0x582: v582 = CALLDATALOAD v56d(0x4),0x580,v582,"0,v56d",CALLDATALOAD,isPoolToken,public,False,0,0,0x17c8
    0x583: v583(0x1) = CONST ,0x580,v583,0,CONST,isPoolToken,public,False,0x1,0,0x17c8
    0x585: v585(0x1) = CONST ,0x580,v585,0,CONST,isPoolToken,public,False,0x1,0,0x17c8
    0x587: v587(0xa0) = CONST ,0x580,v587,0,CONST,isPoolToken,public,False,0xa0,0,0x17c8
"    0x589: v589(0x10000000000000000000000000000000000000000) = SHL v587(0xa0), v585(0x1)",0x580,v589,"0,v587,v585",SHL,isPoolToken,public,False,0x10000000000000000000000000000000000000000,0,0x17c8
"    0x58a: v58a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v589(0x10000000000000000000000000000000000000000), v583(0x1)",0x580,v58a,"0,v589,v583",SUB,isPoolToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x17c8
"    0x58b: v58b = AND v58a(0xffffffffffffffffffffffffffffffffffffffff), v582",0x580,v58b,"0,v58a,v582",AND,isPoolToken,public,False,0,0,0x17c8
    0x58c: v58c(0x17c8) = CONST ,0x580,v58c,0,CONST,isPoolToken,public,False,0x17c8,0,0x17c8
    0x590: JUMP v58c(0x17c8),0x580,0,"0,v58c",JUMP,isPoolToken,public,False,0,0,0x17c8
    Begin block 0x17c8,0x17c8,0,0,0,isPoolToken,public,False,0,0,0x17c8
"    prev=[0x580], succ=[0x39a9]",0x17c8,0,0,0,isPoolToken,public,False,0,0,0x39a9
    =================================,0x17c8,0,0,0,isPoolToken,public,False,0,0,0x39a9
    0x17c9: v17c9(0x4) = CONST ,0x17c8,v17c9,0,CONST,isPoolToken,public,False,0x4,0,0x39a9
    0x17cb: v17cb(0x20) = CONST ,0x17c8,v17cb,0,CONST,isPoolToken,public,False,0x20,0,0x39a9
"    0x17cd: MSTORE v17cb(0x20), v17c9(0x4)",0x17c8,0,"0,v17cb,v17c9",MSTORE,isPoolToken,public,False,0,0,0x39a9
    0x17ce: v17ce(0x0) = CONST ,0x17c8,v17ce,0,CONST,isPoolToken,public,False,0x0,0,0x39a9
"    0x17d2: MSTORE v17ce(0x0), v58b",0x17c8,0,"0,v17ce,v58b",MSTORE,isPoolToken,public,False,0,0,0x39a9
    0x17d3: v17d3(0x40) = CONST ,0x17c8,v17d3,0,CONST,isPoolToken,public,False,0x40,0,0x39a9
"    0x17d6: v17d6 = SHA3 v17ce(0x0), v17d3(0x40)",0x17c8,v17d6,"0,v17ce,v17d3",SHA3,isPoolToken,public,False,0,0,0x39a9
    0x17d7: v17d7 = SLOAD v17d6,0x17c8,v17d7,"0,v17d6",SLOAD,isPoolToken,public,False,0,0,0x39a9
    0x17d8: v17d8(0xff) = CONST ,0x17c8,v17d8,0,CONST,isPoolToken,public,False,0xff,0,0x39a9
"    0x17da: v17da = AND v17d8(0xff), v17d7",0x17c8,v17da,"0,v17d8,v17d7",AND,isPoolToken,public,False,0,0,0x39a9
    0x17dc: JUMP v569(0x39a9),0x17c8,0,"0,v569",JUMP,isPoolToken,public,False,0,0,0x39a9
    Begin block 0x39a9,0x39a9,0,0,0,isPoolToken,public,False,0,0,0x39a9
"    prev=[0x17c8], succ=[]",0x39a9,0,0,0,isPoolToken,public,False,0,0,0x39a9
    =================================,0x39a9,0,0,0,isPoolToken,public,False,0,0,0x39a9
    0x39aa: v39aa(0x40) = CONST ,0x39a9,v39aa,0,CONST,isPoolToken,public,False,0x40,0,0x39a9
    0x39ad: v39ad = MLOAD v39aa(0x40),0x39a9,v39ad,"0,v39aa",MLOAD,isPoolToken,public,False,0,isPoolToken&m0x40,0x39a9
    0x39af: v39af = ISZERO v17da,0x39a9,v39af,"0,v17da",ISZERO,isPoolToken,public,False,0,0,0x39a9
    0x39b0: v39b0 = ISZERO v39af,0x39a9,v39b0,"0,v39af",ISZERO,isPoolToken,public,False,0,0,0x39a9
"    0x39b2: MSTORE v39ad, v39b0",0x39a9,isPoolToken&m0x40,"0,v39ad,v39b0",MSTORE,isPoolToken,public,False,0,isPoolToken&m0x40,0x39a9
    0x39b3: v39b3 = MLOAD v39aa(0x40),0x39a9,v39b3,"0,v39aa",MLOAD,isPoolToken,public,False,0,isPoolToken&m0x40,0x39a9
"    0x39b7: v39b7(0x0) = SUB v39ad, v39b3",0x39a9,v39b7,"0,v39ad,v39b3",SUB,isPoolToken,public,False,0x0,isPoolToken&m0x40-0x0,0x39a9
    0x39b8: v39b8(0x20) = CONST ,0x39a9,v39b8,0,CONST,isPoolToken,public,False,0x20,0,0x39a9
"    0x39ba: v39ba(0x20) = ADD v39b8(0x20), v39b7(0x0)",0x39a9,v39ba,"0,v39b8,v39b7",ADD,isPoolToken,public,False,0x20,isPoolToken&m0x40-0x0+0x20,0x39a9
"    0x39bc: RETURN v39b3, v39ba(0x20)",0x39a9,0,"0,v39b3,v39ba",RETURN,isPoolToken,public,False,0,0,0x39a9
},0x39a9,0,0,0,isPoolToken,public,False,0,0,0x39a9
function managerStruct(address)() public {,0x591,0,0,public,managerStruct,public,False,0,0,0x39a9
    Begin block 0x591,0x591,0,0,0,managerStruct,public,False,0,0,0x39a9
"    prev=[], succ=[0x59a, 0x59e]",0x591,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
    =================================,0x591,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
    0x592: v592 = CALLVALUE ,0x591,v592,0,CALLVALUE,managerStruct,public,False,0,0,"0x59a, 0x59e"
    0x594: v594 = ISZERO v592,0x591,v594,"0,v592",ISZERO,managerStruct,public,False,0,0,"0x59a, 0x59e"
    0x595: v595(0x59e) = CONST ,0x591,v595,0,CONST,managerStruct,public,False,0x59e,0,"0x59a, 0x59e"
"    0x599: JUMPI v595(0x59e), v594",0x591,0,"0,v595,v594",JUMPI,managerStruct,public,False,0,0,"0x59a, 0x59e"
    Begin block 0x59a,0x59a,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
"    prev=[0x591], succ=[]",0x59a,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
    =================================,0x59a,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
    0x59a: v59a(0x0) = CONST ,0x59a,v59a,0,CONST,managerStruct,public,False,0x0,0,"0x59a, 0x59e"
"    0x59d: REVERT v59a(0x0), v59a(0x0)",0x59a,0,"0,v59a,v59a",REVERT,managerStruct,public,False,0,0,"0x59a, 0x59e"
    Begin block 0x59e,0x59e,0,0,0,managerStruct,public,False,0,0,"0x59a, 0x59e"
"    prev=[0x591], succ=[0x5b3, 0x5b7]",0x59e,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    =================================,0x59e,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    0x5a0: v5a0(0x5c8) = CONST ,0x59e,v5a0,0,CONST,managerStruct,public,False,0x5c8,0,"0x5b3, 0x5b7"
    0x5a4: v5a4(0x4) = CONST ,0x59e,v5a4,0,CONST,managerStruct,public,False,0x4,0,"0x5b3, 0x5b7"
    0x5a7: v5a7 = CALLDATASIZE ,0x59e,v5a7,0,CALLDATASIZE,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
"    0x5a8: v5a8 = SUB v5a7, v5a4(0x4)",0x59e,v5a8,"0,v5a7,v5a4",SUB,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    0x5a9: v5a9(0x20) = CONST ,0x59e,v5a9,0,CONST,managerStruct,public,False,0x20,0,"0x5b3, 0x5b7"
"    0x5ac: v5ac = LT v5a8, v5a9(0x20)",0x59e,v5ac,"0,v5a8,v5a9",LT,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    0x5ad: v5ad = ISZERO v5ac,0x59e,v5ad,"0,v5ac",ISZERO,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    0x5ae: v5ae(0x5b7) = CONST ,0x59e,v5ae,0,CONST,managerStruct,public,False,0x5b7,0,"0x5b3, 0x5b7"
"    0x5b2: JUMPI v5ae(0x5b7), v5ad",0x59e,0,"0,v5ae,v5ad",JUMPI,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    Begin block 0x5b3,0x5b3,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
"    prev=[0x59e], succ=[]",0x5b3,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    =================================,0x5b3,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    0x5b3: v5b3(0x0) = CONST ,0x5b3,v5b3,0,CONST,managerStruct,public,False,0x0,0,"0x5b3, 0x5b7"
"    0x5b6: REVERT v5b3(0x0), v5b3(0x0)",0x5b3,0,"0,v5b3,v5b3",REVERT,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
    Begin block 0x5b7,0x5b7,0,0,0,managerStruct,public,False,0,0,"0x5b3, 0x5b7"
"    prev=[0x59e], succ=[0x17dd]",0x5b7,0,0,0,managerStruct,public,False,0,0,0x17dd
    =================================,0x5b7,0,0,0,managerStruct,public,False,0,0,0x17dd
    0x5b9: v5b9 = CALLDATALOAD v5a4(0x4),0x5b7,v5b9,"0,v5a4",CALLDATALOAD,managerStruct,public,False,0,0,0x17dd
    0x5ba: v5ba(0x1) = CONST ,0x5b7,v5ba,0,CONST,managerStruct,public,False,0x1,0,0x17dd
    0x5bc: v5bc(0x1) = CONST ,0x5b7,v5bc,0,CONST,managerStruct,public,False,0x1,0,0x17dd
    0x5be: v5be(0xa0) = CONST ,0x5b7,v5be,0,CONST,managerStruct,public,False,0xa0,0,0x17dd
"    0x5c0: v5c0(0x10000000000000000000000000000000000000000) = SHL v5be(0xa0), v5bc(0x1)",0x5b7,v5c0,"0,v5be,v5bc",SHL,managerStruct,public,False,0x10000000000000000000000000000000000000000,0,0x17dd
"    0x5c1: v5c1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5c0(0x10000000000000000000000000000000000000000), v5ba(0x1)",0x5b7,v5c1,"0,v5c0,v5ba",SUB,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x17dd
"    0x5c2: v5c2 = AND v5c1(0xffffffffffffffffffffffffffffffffffffffff), v5b9",0x5b7,v5c2,"0,v5c1,v5b9",AND,managerStruct,public,False,0,0,0x17dd
    0x5c3: v5c3(0x17dd) = CONST ,0x5b7,v5c3,0,CONST,managerStruct,public,False,0x17dd,0,0x17dd
    0x5c7: JUMP v5c3(0x17dd),0x5b7,0,"0,v5c3",JUMP,managerStruct,public,False,0,0,0x17dd
    Begin block 0x17dd,0x17dd,0,0,0,managerStruct,public,False,0,0,0x17dd
"    prev=[0x5b7], succ=[0x3b2d, 0x1857]",0x17dd,0,0,0,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    =================================,0x17dd,0,0,0,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17de: v17de(0x3) = CONST ,0x17dd,v17de,0,CONST,managerStruct,public,False,0x3,0,"0x3b2d, 0x1857"
    0x17e0: v17e0(0x20) = CONST ,0x17dd,v17e0,0,CONST,managerStruct,public,False,0x20,0,"0x3b2d, 0x1857"
"    0x17e4: MSTORE v17e0(0x20), v17de(0x3)",0x17dd,0,"0,v17e0,v17de",MSTORE,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17e5: v17e5(0x0) = CONST ,0x17dd,v17e5,0,CONST,managerStruct,public,False,0x0,0,"0x3b2d, 0x1857"
"    0x17e9: MSTORE v17e5(0x0), v5c2",0x17dd,0,"0,v17e5,v5c2",MSTORE,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17ea: v17ea(0x40) = CONST ,0x17dd,v17ea,0,CONST,managerStruct,public,False,0x40,0,"0x3b2d, 0x1857"
"    0x17ef: v17ef = SHA3 v17e5(0x0), v17ea(0x40)",0x17dd,v17ef,"0,v17e5,v17ea",SHA3,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17f1: v17f1 = SLOAD v17ef,0x17dd,v17f1,"0,v17ef",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17f2: v17f2(0x1) = CONST ,0x17dd,v17f2,0,CONST,managerStruct,public,False,0x1,0,"0x3b2d, 0x1857"
"    0x17f6: v17f6 = ADD v17ef, v17f2(0x1)",0x17dd,v17f6,"0,v17ef,v17f2",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17f7: v17f7 = SLOAD v17f6,0x17dd,v17f7,"0,v17f6",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17f8: v17f8(0x2) = CONST ,0x17dd,v17f8,0,CONST,managerStruct,public,False,0x2,0,"0x3b2d, 0x1857"
"    0x17fc: v17fc = ADD v17ef, v17f8(0x2)",0x17dd,v17fc,"0,v17ef,v17f8",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x17fd: v17fd = SLOAD v17fc,0x17dd,v17fd,"0,v17fc",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1800: v1800 = ADD v17ef, v17de(0x3)",0x17dd,v1800,"0,v17ef,v17de",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1801: v1801 = SLOAD v1800,0x17dd,v1801,"0,v1800",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1802: v1802(0x4) = CONST ,0x17dd,v1802,0,CONST,managerStruct,public,False,0x4,0,"0x3b2d, 0x1857"
"    0x1805: v1805 = ADD v17ef, v1802(0x4)",0x17dd,v1805,"0,v17ef,v1802",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1806: v1806 = SLOAD v1805,0x17dd,v1806,"0,v1805",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1807: v1807(0x6) = CONST ,0x17dd,v1807,0,CONST,managerStruct,public,False,0x6,0,"0x3b2d, 0x1857"
"    0x180a: v180a = ADD v17ef, v1807(0x6)",0x17dd,v180a,"0,v17ef,v1807",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x180c: v180c = SLOAD v180a,0x17dd,v180c,"0,v180a",SLOAD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x180e: v180e = MLOAD v17ea(0x40),0x17dd,v180e,"0,v17ea",MLOAD,managerStruct,public,False,0,managerStruct&m0x40,"0x3b2d, 0x1857"
    0x180f: v180f(0x100) = CONST ,0x17dd,v180f,0,CONST,managerStruct,public,False,0x100,0,"0x3b2d, 0x1857"
"    0x1814: v1814 = AND v180c, v17f2(0x1)",0x17dd,v1814,"0,v180c,v17f2",AND,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1815: v1815 = ISZERO v1814,0x17dd,v1815,"0,v1814",ISZERO,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1819: v1819 = MUL v1815, v180f(0x100)",0x17dd,v1819,"0,v1815,v180f",MUL,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x181a: v181a(0x0) = CONST ,0x17dd,v181a,0,CONST,managerStruct,public,False,0x0,0,"0x3b2d, 0x1857"
    0x181c: v181c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v181a(0x0),0x17dd,v181c,"0,v181a",NOT,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,"0x3b2d, 0x1857"
"    0x181d: v181d = ADD v181c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v1819",0x17dd,v181d,"0,v181c,v1819",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x181e: v181e = AND v181d, v180c",0x17dd,v181e,"0,v181d,v180c",AND,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1822: v1822 = DIV v181e, v17f8(0x2)",0x17dd,v1822,"0,v181e,v17f8",DIV,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1823: v1823(0x1f) = CONST ,0x17dd,v1823,0,CONST,managerStruct,public,False,0x1f,0,"0x3b2d, 0x1857"
"    0x1826: v1826 = ADD v1822, v1823(0x1f)",0x17dd,v1826,"0,v1822,v1823",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1829: v1829 = DIV v1826, v17e0(0x20)",0x17dd,v1829,"0,v1826,v17e0",DIV,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x182b: v182b = MUL v17e0(0x20), v1829",0x17dd,v182b,"0,v17e0,v1829",MUL,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x182d: v182d = ADD v180e, v182b",0x17dd,v182d,"0,v180e,v182b",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x182f: v182f = ADD v17e0(0x20), v182d",0x17dd,v182f,"0,v17e0,v182d",ADD,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1832: MSTORE v17ea(0x40), v182f",0x17dd,0,"0,v17ea,v182f",MSTORE,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x1835: MSTORE v180e, v1822",0x17dd,managerStruct&m0x40,"0,v180e,v1822",MSTORE,managerStruct,public,False,0,managerStruct&m0x40,"0x3b2d, 0x1857"
    0x183a: v183a(0xffffffff) = CONST ,0x17dd,v183a,0,CONST,managerStruct,public,False,0xffffffff,0,"0x3b2d, 0x1857"
"    0x183f: v183f = AND v183a(0xffffffff), v17fd",0x17dd,v183f,"0,v183a,v17fd",AND,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1843: v1843(0xff) = CONST ,0x17dd,v1843,0,CONST,managerStruct,public,False,0xff,0,"0x3b2d, 0x1857"
"    0x1847: v1847 = AND v1806, v1843(0xff)",0x17dd,v1847,"0,v1806,v1843",AND,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    0x184d: v184d = ADD v180e, v17e0(0x20)",0x17dd,v184d,"0,v180e,v17e0",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20,"0x3b2d, 0x1857"
    0x1851: v1851 = ISZERO v1822,0x17dd,v1851,"0,v1822",ISZERO,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    0x1852: v1852(0x3b2d) = CONST ,0x17dd,v1852,0,CONST,managerStruct,public,False,0x3b2d,0,"0x3b2d, 0x1857"
"    0x1856: JUMPI v1852(0x3b2d), v1851",0x17dd,0,"0,v1852,v1851",JUMPI,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
    Begin block 0x3b2d,0x3b2d,0,0,0,managerStruct,public,False,0,0,"0x3b2d, 0x1857"
"    prev=[0x17dd], succ=[0x5c8]",0x3b2d,0,0,0,managerStruct,public,False,0,0,0x5c8
    =================================,0x3b2d,0,0,0,managerStruct,public,False,0,0,0x5c8
    0x3b31: v3b31(0x9) = CONST ,0x3b2d,v3b31,0,CONST,managerStruct,public,False,0x9,0,0x5c8
"    0x3b35: v3b35 = ADD v17ef, v3b31(0x9)",0x3b2d,v3b35,"0,v17ef,v3b31",ADD,managerStruct,public,False,0,0,0x5c8
    0x3b36: v3b36 = SLOAD v3b35,0x3b2d,v3b36,"0,v3b35",SLOAD,managerStruct,public,False,0,0,0x5c8
    0x3b3b: v3b3b(0x1) = CONST ,0x3b2d,v3b3b,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x3b3d: v3b3d(0x1) = CONST ,0x3b2d,v3b3d,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x3b3f: v3b3f(0xa0) = CONST ,0x3b2d,v3b3f,0,CONST,managerStruct,public,False,0xa0,0,0x5c8
"    0x3b41: v3b41(0x10000000000000000000000000000000000000000) = SHL v3b3f(0xa0), v3b3d(0x1)",0x3b2d,v3b41,"0,v3b3f,v3b3d",SHL,managerStruct,public,False,0x10000000000000000000000000000000000000000,0,0x5c8
"    0x3b42: v3b42(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b41(0x10000000000000000000000000000000000000000), v3b3b(0x1)",0x3b2d,v3b42,"0,v3b41,v3b3b",SUB,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x5c8
"    0x3b43: v3b43 = AND v3b42(0xffffffffffffffffffffffffffffffffffffffff), v3b36",0x3b2d,v3b43,"0,v3b42,v3b36",AND,managerStruct,public,False,0,0,0x5c8
    0x3b45: JUMP v5a0(0x5c8),0x3b2d,0,"0,v5a0",JUMP,managerStruct,public,False,0,0,0x5c8
    Begin block 0x5c8,0x5c8,0,0,0,managerStruct,public,False,0,0,0x5c8
"    prev=[0x3b2d, 0x3b65, 0x18a0], succ=[0x622]",0x5c8,0,0,0,managerStruct,public,False,0,0,0x622
    =================================,0x5c8,0,0,0,managerStruct,public,False,0,0,0x622
"    0x5c8_0x0: v5c8_0 = PHI v18b6, v3b43, v3b7b",0x5c8,v5c8_0,"0,v18b6,v3b43,v3b7b",PHI,managerStruct,public,False,0,0,0x622
    0x5c9: v5c9(0x40) = CONST ,0x5c8,v5c9,0,CONST,managerStruct,public,False,0x40,0,0x622
    0x5cb: v5cb = MLOAD v5c9(0x40),0x5c8,v5cb,"0,v5c9",MLOAD,managerStruct,public,False,0,managerStruct&m0x40,0x622
"    0x5cf: MSTORE v5cb, v17f1",0x5c8,managerStruct&m0x40,"0,v5cb,v17f1",MSTORE,managerStruct,public,False,0,managerStruct&m0x40,0x622
    0x5d0: v5d0(0x20) = CONST ,0x5c8,v5d0,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5d2: v5d2 = ADD v5d0(0x20), v5cb",0x5c8,v5d2,"0,v5d0,v5cb",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20,0x622
"    0x5d5: MSTORE v5d2, v17f7",0x5c8,managerStruct&m0x40+0x20,"0,v5d2,v17f7",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20,0x622
    0x5d6: v5d6(0x20) = CONST ,0x5c8,v5d6,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5d8: v5d8 = ADD v5d6(0x20), v5d2",0x5c8,v5d8,"0,v5d6,v5d2",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20,0x622
    0x5da: v5da(0xffffffff) = CONST ,0x5c8,v5da,0,CONST,managerStruct,public,False,0xffffffff,0,0x622
"    0x5df: v5df = AND v5da(0xffffffff), v183f",0x5c8,v5df,"0,v5da,v183f",AND,managerStruct,public,False,0,0,0x622
"    0x5e1: MSTORE v5d8, v5df",0x5c8,managerStruct&m0x40+0x20+0x20,"0,v5d8,v5df",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20,0x622
    0x5e2: v5e2(0x20) = CONST ,0x5c8,v5e2,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5e4: v5e4 = ADD v5e2(0x20), v5d8",0x5c8,v5e4,"0,v5e2,v5d8",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20,0x622
"    0x5e7: MSTORE v5e4, v1801",0x5c8,managerStruct&m0x40+0x20+0x20+0x20,"0,v5e4,v1801",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20,0x622
    0x5e8: v5e8(0x20) = CONST ,0x5c8,v5e8,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5ea: v5ea = ADD v5e8(0x20), v5e4",0x5c8,v5ea,"0,v5e8,v5e4",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20,0x622
    0x5ec: v5ec = ISZERO v1847,0x5c8,v5ec,"0,v1847",ISZERO,managerStruct,public,False,0,0,0x622
    0x5ed: v5ed = ISZERO v5ec,0x5c8,v5ed,"0,v5ec",ISZERO,managerStruct,public,False,0,0,0x622
"    0x5ef: MSTORE v5ea, v5ed",0x5c8,managerStruct&m0x40+0x20+0x20+0x20+0x20,"0,v5ea,v5ed",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20,0x622
    0x5f0: v5f0(0x20) = CONST ,0x5c8,v5f0,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5f2: v5f2 = ADD v5f0(0x20), v5ea",0x5c8,v5f2,"0,v5f0,v5ea",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20,0x622
    0x5f4: v5f4(0x20) = CONST ,0x5c8,v5f4,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x5f6: v5f6 = ADD v5f4(0x20), v5f2",0x5c8,v5f6,"0,v5f4,v5f2",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20,0x622
    0x5f8: v5f8(0x1) = CONST ,0x5c8,v5f8,0,CONST,managerStruct,public,False,0x1,0,0x622
    0x5fa: v5fa(0x1) = CONST ,0x5c8,v5fa,0,CONST,managerStruct,public,False,0x1,0,0x622
    0x5fc: v5fc(0xa0) = CONST ,0x5c8,v5fc,0,CONST,managerStruct,public,False,0xa0,0,0x622
"    0x5fe: v5fe(0x10000000000000000000000000000000000000000) = SHL v5fc(0xa0), v5fa(0x1)",0x5c8,v5fe,"0,v5fc,v5fa",SHL,managerStruct,public,False,0x10000000000000000000000000000000000000000,0,0x622
"    0x5ff: v5ff(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5fe(0x10000000000000000000000000000000000000000), v5f8(0x1)",0x5c8,v5ff,"0,v5fe,v5f8",SUB,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x622
"    0x600: v600 = AND v5ff(0xffffffffffffffffffffffffffffffffffffffff), v5c8_0",0x5c8,v600,"0,v5ff,v5c8_0",AND,managerStruct,public,False,0,0,0x622
"    0x602: MSTORE v5f6, v600",0x5c8,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20,"0,v5f6,v600",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20,0x622
    0x603: v603(0x20) = CONST ,0x5c8,v603,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x605: v605 = ADD v603(0x20), v5f6",0x5c8,v605,"0,v603,v5f6",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20+0x20,0x622
"    0x608: v608(0xe0) = SUB v605, v5cb",0x5c8,v608,"0,v605,v5cb",SUB,managerStruct,public,False,0xe0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20+0x20-0xe0,0x622
"    0x60a: MSTORE v5f2, v608(0xe0)",0x5c8,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20,"0,v5f2,v608",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20,0x622
    0x60e: v60e = MLOAD v180e,0x5c8,v60e,"0,v180e",MLOAD,managerStruct,public,False,0,0,0x622
"    0x610: MSTORE v605, v60e",0x5c8,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20+0x20,"0,v605,v60e",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20+0x20,0x622
    0x611: v611(0x20) = CONST ,0x5c8,v611,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x613: v613 = ADD v611(0x20), v605",0x5c8,v613,"0,v611,v605",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20+0x20+0x20+0x20+0x20+0x20+0x20,0x622
    0x617: v617 = MLOAD v180e,0x5c8,v617,"0,v180e",MLOAD,managerStruct,public,False,0,0,0x622
    0x619: v619(0x20) = CONST ,0x5c8,v619,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x61b: v61b = ADD v619(0x20), v180e",0x5c8,v61b,"0,v619,v180e",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20,0x622
    0x620: v620(0x0) = CONST ,0x5c8,v620,0,CONST,managerStruct,public,False,0x0,0,0x622
    Begin block 0x622,0x622,0,0,0,managerStruct,public,False,0,0,0x622
"    prev=[0x5c8, 0x62c], succ=[0x63c, 0x62c]",0x622,0,0,0,managerStruct,public,False,0,0,"0x63c, 0x62c"
    =================================,0x622,0,0,0,managerStruct,public,False,0,0,"0x63c, 0x62c"
"    0x622_0x0: v622_0 = PHI v620(0x0), v636",0x622,v622_0,"0,v620,v636",PHI,managerStruct,public,False,0,0,"0x63c, 0x62c"
"    0x625: v625 = LT v622_0, v617",0x622,v625,"0,v622_0,v617",LT,managerStruct,public,False,0,0,"0x63c, 0x62c"
    0x626: v626 = ISZERO v625,0x622,v626,"0,v625",ISZERO,managerStruct,public,False,0,0,"0x63c, 0x62c"
    0x627: v627(0x63c) = CONST ,0x622,v627,0,CONST,managerStruct,public,False,0x63c,0,"0x63c, 0x62c"
"    0x62b: JUMPI v627(0x63c), v626",0x622,0,"0,v627,v626",JUMPI,managerStruct,public,False,0,0,"0x63c, 0x62c"
    Begin block 0x63c,0x63c,0,0,0,managerStruct,public,False,0,0,"0x63c, 0x62c"
"    prev=[0x622], succ=[0x66a, 0x651]",0x63c,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
    =================================,0x63c,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
"    0x645: v645 = ADD v617, v613",0x63c,v645,"0,v617,v613",ADD,managerStruct,public,False,0,0,"0x66a, 0x651"
    0x647: v647(0x1f) = CONST ,0x63c,v647,0,CONST,managerStruct,public,False,0x1f,0,"0x66a, 0x651"
"    0x649: v649 = AND v647(0x1f), v617",0x63c,v649,"0,v647,v617",AND,managerStruct,public,False,0,0,"0x66a, 0x651"
    0x64b: v64b = ISZERO v649,0x63c,v64b,"0,v649",ISZERO,managerStruct,public,False,0,0,"0x66a, 0x651"
    0x64c: v64c(0x66a) = CONST ,0x63c,v64c,0,CONST,managerStruct,public,False,0x66a,0,"0x66a, 0x651"
"    0x650: JUMPI v64c(0x66a), v64b",0x63c,0,"0,v64c,v64b",JUMPI,managerStruct,public,False,0,0,"0x66a, 0x651"
    Begin block 0x66a,0x66a,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
"    prev=[0x63c, 0x651], succ=[]",0x66a,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
    =================================,0x66a,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
"    0x66a_0x1: v66a_1 = PHI v645, v667",0x66a,v66a_1,"0,v645,v667",PHI,managerStruct,public,False,0,0,"0x66a, 0x651"
    0x676: v676(0x40) = CONST ,0x66a,v676,0,CONST,managerStruct,public,False,0x40,0,"0x66a, 0x651"
    0x678: v678 = MLOAD v676(0x40),0x66a,v678,"0,v676",MLOAD,managerStruct,public,False,0,managerStruct&m0x40,"0x66a, 0x651"
"    0x67b: v67b = SUB v66a_1, v678",0x66a,v67b,"0,v66a_1,v678",SUB,managerStruct,public,False,0,0,"0x66a, 0x651"
"    0x67d: RETURN v678, v67b",0x66a,0,"0,v678,v67b",RETURN,managerStruct,public,False,0,0,"0x66a, 0x651"
    Begin block 0x651,0x651,0,0,0,managerStruct,public,False,0,0,"0x66a, 0x651"
"    prev=[0x63c], succ=[0x66a]",0x651,0,0,0,managerStruct,public,False,0,0,0x66a
    =================================,0x651,0,0,0,managerStruct,public,False,0,0,0x66a
"    0x653: v653 = SUB v645, v649",0x651,v653,"0,v645,v649",SUB,managerStruct,public,False,0,0,0x66a
    0x655: v655 = MLOAD v653,0x651,v655,"0,v653",MLOAD,managerStruct,public,False,0,0,0x66a
    0x656: v656(0x1) = CONST ,0x651,v656,0,CONST,managerStruct,public,False,0x1,0,0x66a
    0x659: v659(0x20) = CONST ,0x651,v659,0,CONST,managerStruct,public,False,0x20,0,0x66a
"    0x65b: v65b = SUB v659(0x20), v649",0x651,v65b,"0,v659,v649",SUB,managerStruct,public,False,0,0,0x66a
    0x65c: v65c(0x100) = CONST ,0x651,v65c,0,CONST,managerStruct,public,False,0x100,0,0x66a
"    0x65f: v65f = EXP v65c(0x100), v65b",0x651,v65f,"0,v65c,v65b",EXP,managerStruct,public,False,0,0,0x66a
"    0x660: v660 = SUB v65f, v656(0x1)",0x651,v660,"0,v65f,v656",SUB,managerStruct,public,False,0,0,0x66a
    0x661: v661 = NOT v660,0x651,v661,"0,v660",NOT,managerStruct,public,False,0,0,0x66a
"    0x662: v662 = AND v661, v655",0x651,v662,"0,v661,v655",AND,managerStruct,public,False,0,0,0x66a
"    0x664: MSTORE v653, v662",0x651,0,"0,v653,v662",MSTORE,managerStruct,public,False,0,0,0x66a
    0x665: v665(0x20) = CONST ,0x651,v665,0,CONST,managerStruct,public,False,0x20,0,0x66a
"    0x667: v667 = ADD v665(0x20), v653",0x651,v667,"0,v665,v653",ADD,managerStruct,public,False,0,0,0x66a
    Begin block 0x62c,0x62c,0,0,0,managerStruct,public,False,0,0,0x66a
"    prev=[0x622], succ=[0x622]",0x62c,0,0,0,managerStruct,public,False,0,0,0x622
    =================================,0x62c,0,0,0,managerStruct,public,False,0,0,0x622
"    0x62c_0x0: v62c_0 = PHI v620(0x0), v636",0x62c,v62c_0,"0,v620,v636",PHI,managerStruct,public,False,0,0,0x622
"    0x62e: v62e = ADD v62c_0, v61b",0x62c,v62e,"0,v62c_0,v61b",ADD,managerStruct,public,False,0,0,0x622
    0x62f: v62f = MLOAD v62e,0x62c,v62f,"0,v62e",MLOAD,managerStruct,public,False,0,0,0x622
"    0x632: v632 = ADD v62c_0, v613",0x62c,v632,"0,v62c_0,v613",ADD,managerStruct,public,False,0,0,0x622
"    0x633: MSTORE v632, v62f",0x62c,0,"0,v632,v62f",MSTORE,managerStruct,public,False,0,0,0x622
    0x634: v634(0x20) = CONST ,0x62c,v634,0,CONST,managerStruct,public,False,0x20,0,0x622
"    0x636: v636 = ADD v634(0x20), v62c_0",0x62c,v636,"0,v634,v62c_0",ADD,managerStruct,public,False,0,0,0x622
    0x637: v637(0x622) = CONST ,0x62c,v637,0,CONST,managerStruct,public,False,0x622,0,0x622
    0x63b: JUMP v637(0x622),0x62c,0,"0,v637",JUMP,managerStruct,public,False,0,0,0x622
    Begin block 0x1857,0x1857,0,0,0,managerStruct,public,False,0,0,0x622
"    prev=[0x17dd], succ=[0x1860, 0x1874]",0x1857,0,0,0,managerStruct,public,False,0,0,"0x1860, 0x1874"
    =================================,0x1857,0,0,0,managerStruct,public,False,0,0,"0x1860, 0x1874"
    0x1858: v1858(0x1f) = CONST ,0x1857,v1858,0,CONST,managerStruct,public,False,0x1f,0,"0x1860, 0x1874"
"    0x185a: v185a = LT v1858(0x1f), v1822",0x1857,v185a,"0,v1858,v1822",LT,managerStruct,public,False,0,0,"0x1860, 0x1874"
    0x185b: v185b(0x1874) = CONST ,0x1857,v185b,0,CONST,managerStruct,public,False,0x1874,0,"0x1860, 0x1874"
"    0x185f: JUMPI v185b(0x1874), v185a",0x1857,0,"0,v185b,v185a",JUMPI,managerStruct,public,False,0,0,"0x1860, 0x1874"
    Begin block 0x1860,0x1860,0,0,0,managerStruct,public,False,0,0,"0x1860, 0x1874"
"    prev=[0x1857], succ=[0x3b65]",0x1860,0,0,0,managerStruct,public,False,0,0,0x3b65
    =================================,0x1860,0,0,0,managerStruct,public,False,0,0,0x3b65
    0x1860: v1860(0x100) = CONST ,0x1860,v1860,0,CONST,managerStruct,public,False,0x100,0,0x3b65
    0x1865: v1865 = SLOAD v180a,0x1860,v1865,"0,v180a",SLOAD,managerStruct,public,False,0,0,0x3b65
"    0x1866: v1866 = DIV v1865, v1860(0x100)",0x1860,v1866,"0,v1865,v1860",DIV,managerStruct,public,False,0,0,0x3b65
"    0x1867: v1867 = MUL v1866, v1860(0x100)",0x1860,v1867,"0,v1866,v1860",MUL,managerStruct,public,False,0,0,0x3b65
"    0x1869: MSTORE v184d, v1867",0x1860,managerStruct&m0x40+0x20,"0,v184d,v1867",MSTORE,managerStruct,public,False,0,managerStruct&m0x40+0x20,0x3b65
    0x186b: v186b(0x20) = CONST ,0x1860,v186b,0,CONST,managerStruct,public,False,0x20,0,0x3b65
"    0x186d: v186d = ADD v186b(0x20), v184d",0x1860,v186d,"0,v186b,v184d",ADD,managerStruct,public,False,0,managerStruct&m0x40+0x20+0x20,0x3b65
    0x186f: v186f(0x3b65) = CONST ,0x1860,v186f,0,CONST,managerStruct,public,False,0x3b65,0,0x3b65
    0x1873: JUMP v186f(0x3b65),0x1860,0,"0,v186f",JUMP,managerStruct,public,False,0,0,0x3b65
    Begin block 0x3b65,0x3b65,0,0,0,managerStruct,public,False,0,0,0x3b65
"    prev=[0x1860], succ=[0x5c8]",0x3b65,0,0,0,managerStruct,public,False,0,0,0x5c8
    =================================,0x3b65,0,0,0,managerStruct,public,False,0,0,0x5c8
    0x3b69: v3b69(0x9) = CONST ,0x3b65,v3b69,0,CONST,managerStruct,public,False,0x9,0,0x5c8
"    0x3b6d: v3b6d = ADD v17ef, v3b69(0x9)",0x3b65,v3b6d,"0,v17ef,v3b69",ADD,managerStruct,public,False,0,0,0x5c8
    0x3b6e: v3b6e = SLOAD v3b6d,0x3b65,v3b6e,"0,v3b6d",SLOAD,managerStruct,public,False,0,0,0x5c8
    0x3b73: v3b73(0x1) = CONST ,0x3b65,v3b73,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x3b75: v3b75(0x1) = CONST ,0x3b65,v3b75,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x3b77: v3b77(0xa0) = CONST ,0x3b65,v3b77,0,CONST,managerStruct,public,False,0xa0,0,0x5c8
"    0x3b79: v3b79(0x10000000000000000000000000000000000000000) = SHL v3b77(0xa0), v3b75(0x1)",0x3b65,v3b79,"0,v3b77,v3b75",SHL,managerStruct,public,False,0x10000000000000000000000000000000000000000,0,0x5c8
"    0x3b7a: v3b7a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b79(0x10000000000000000000000000000000000000000), v3b73(0x1)",0x3b65,v3b7a,"0,v3b79,v3b73",SUB,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x5c8
"    0x3b7b: v3b7b = AND v3b7a(0xffffffffffffffffffffffffffffffffffffffff), v3b6e",0x3b65,v3b7b,"0,v3b7a,v3b6e",AND,managerStruct,public,False,0,0,0x5c8
    0x3b7d: JUMP v5a0(0x5c8),0x3b65,0,"0,v5a0",JUMP,managerStruct,public,False,0,0,0x5c8
    Begin block 0x1874,0x1874,0,0,0,managerStruct,public,False,0,0,0x5c8
"    prev=[0x1857], succ=[0x1882]",0x1874,0,0,0,managerStruct,public,False,0,0,0x1882
    =================================,0x1874,0,0,0,managerStruct,public,False,0,0,0x1882
"    0x1876: v1876 = ADD v184d, v1822",0x1874,v1876,"0,v184d,v1822",ADD,managerStruct,public,False,0,0,0x1882
    0x1879: v1879(0x0) = CONST ,0x1874,v1879,0,CONST,managerStruct,public,False,0x0,0,0x1882
"    0x187b: MSTORE v1879(0x0), v180a",0x1874,0,"0,v1879,v180a",MSTORE,managerStruct,public,False,0,0,0x1882
    0x187c: v187c(0x20) = CONST ,0x1874,v187c,0,CONST,managerStruct,public,False,0x20,0,0x1882
    0x187e: v187e(0x0) = CONST ,0x1874,v187e,0,CONST,managerStruct,public,False,0x0,0,0x1882
"    0x1880: v1880 = SHA3 v187e(0x0), v187c(0x20)",0x1874,v1880,"0,v187e,v187c",SHA3,managerStruct,public,False,0,0,0x1882
    Begin block 0x1882,0x1882,0,0,0,managerStruct,public,False,0,0,0x1882
"    prev=[0x1874, 0x1882], succ=[0x1882, 0x1897]",0x1882,0,0,0,managerStruct,public,False,0,0,"0x1882, 0x1897"
    =================================,0x1882,0,0,0,managerStruct,public,False,0,0,"0x1882, 0x1897"
"    0x1882_0x0: v1882_0 = PHI v184d, v188e",0x1882,v1882_0,"0,v184d,v188e",PHI,managerStruct,public,False,0,0,"0x1882, 0x1897"
"    0x1882_0x1: v1882_1 = PHI v1880, v188a",0x1882,v1882_1,"0,v1880,v188a",PHI,managerStruct,public,False,0,0,"0x1882, 0x1897"
    0x1884: v1884 = SLOAD v1882_1,0x1882,v1884,"0,v1882_1",SLOAD,managerStruct,public,False,0,0,"0x1882, 0x1897"
"    0x1886: MSTORE v1882_0, v1884",0x1882,0,"0,v1882_0,v1884",MSTORE,managerStruct,public,False,0,0,"0x1882, 0x1897"
    0x1888: v1888(0x1) = CONST ,0x1882,v1888,0,CONST,managerStruct,public,False,0x1,0,"0x1882, 0x1897"
"    0x188a: v188a = ADD v1888(0x1), v1882_1",0x1882,v188a,"0,v1888,v1882_1",ADD,managerStruct,public,False,0,0,"0x1882, 0x1897"
    0x188c: v188c(0x20) = CONST ,0x1882,v188c,0,CONST,managerStruct,public,False,0x20,0,"0x1882, 0x1897"
"    0x188e: v188e = ADD v188c(0x20), v1882_0",0x1882,v188e,"0,v188c,v1882_0",ADD,managerStruct,public,False,0,0,"0x1882, 0x1897"
"    0x1891: v1891 = GT v1876, v188e",0x1882,v1891,"0,v1876,v188e",GT,managerStruct,public,False,0,0,"0x1882, 0x1897"
    0x1892: v1892(0x1882) = CONST ,0x1882,v1892,0,CONST,managerStruct,public,False,0x1882,0,"0x1882, 0x1897"
"    0x1896: JUMPI v1892(0x1882), v1891",0x1882,0,"0,v1892,v1891",JUMPI,managerStruct,public,False,0,0,"0x1882, 0x1897"
    Begin block 0x1897,0x1897,0,0,0,managerStruct,public,False,0,0,"0x1882, 0x1897"
"    prev=[0x1882], succ=[0x18a0]",0x1897,0,0,0,managerStruct,public,False,0,0,0x18a0
    =================================,0x1897,0,0,0,managerStruct,public,False,0,0,0x18a0
"    0x1899: v1899 = SUB v188e, v1876",0x1897,v1899,"0,v188e,v1876",SUB,managerStruct,public,False,0,0,0x18a0
    0x189a: v189a(0x1f) = CONST ,0x1897,v189a,0,CONST,managerStruct,public,False,0x1f,0,0x18a0
"    0x189c: v189c = AND v189a(0x1f), v1899",0x1897,v189c,"0,v189a,v1899",AND,managerStruct,public,False,0,0,0x18a0
"    0x189e: v189e = ADD v1876, v189c",0x1897,v189e,"0,v1876,v189c",ADD,managerStruct,public,False,0,0,0x18a0
    Begin block 0x18a0,0x18a0,0,0,0,managerStruct,public,False,0,0,0x18a0
"    prev=[0x1897], succ=[0x5c8]",0x18a0,0,0,0,managerStruct,public,False,0,0,0x5c8
    =================================,0x18a0,0,0,0,managerStruct,public,False,0,0,0x5c8
    0x18a4: v18a4(0x9) = CONST ,0x18a0,v18a4,0,CONST,managerStruct,public,False,0x9,0,0x5c8
"    0x18a8: v18a8 = ADD v17ef, v18a4(0x9)",0x18a0,v18a8,"0,v17ef,v18a4",ADD,managerStruct,public,False,0,0,0x5c8
    0x18a9: v18a9 = SLOAD v18a8,0x18a0,v18a9,"0,v18a8",SLOAD,managerStruct,public,False,0,0,0x5c8
    0x18ae: v18ae(0x1) = CONST ,0x18a0,v18ae,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x18b0: v18b0(0x1) = CONST ,0x18a0,v18b0,0,CONST,managerStruct,public,False,0x1,0,0x5c8
    0x18b2: v18b2(0xa0) = CONST ,0x18a0,v18b2,0,CONST,managerStruct,public,False,0xa0,0,0x5c8
"    0x18b4: v18b4(0x10000000000000000000000000000000000000000) = SHL v18b2(0xa0), v18b0(0x1)",0x18a0,v18b4,"0,v18b2,v18b0",SHL,managerStruct,public,False,0x10000000000000000000000000000000000000000,0,0x5c8
"    0x18b5: v18b5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v18b4(0x10000000000000000000000000000000000000000), v18ae(0x1)",0x18a0,v18b5,"0,v18b4,v18ae",SUB,managerStruct,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x5c8
"    0x18b6: v18b6 = AND v18b5(0xffffffffffffffffffffffffffffffffffffffff), v18a9",0x18a0,v18b6,"0,v18b5,v18a9",AND,managerStruct,public,False,0,0,0x5c8
    0x18b8: JUMP v5a0(0x5c8),0x18a0,0,"0,v5a0",JUMP,managerStruct,public,False,0,0,0x5c8
},0x18a0,0,0,0,managerStruct,public,False,0,0,0x5c8
"function adjustManagerAllowance(address,uint256,uint256)() public {",0x67e,0,0,,adjustManagerAllowance,public,False,0,0,0x5c8
    Begin block 0x67e,0x67e,0,0,0,adjustManagerAllowance,public,False,0,0,0x5c8
"    prev=[], succ=[0x687, 0x68b]",0x67e,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    =================================,0x67e,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    0x67f: v67f = CALLVALUE ,0x67e,v67f,0,CALLVALUE,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    0x681: v681 = ISZERO v67f,0x67e,v681,"0,v67f",ISZERO,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    0x682: v682(0x68b) = CONST ,0x67e,v682,0,CONST,adjustManagerAllowance,public,False,0x68b,0,"0x687, 0x68b"
"    0x686: JUMPI v682(0x68b), v681",0x67e,0,"0,v682,v681",JUMPI,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    Begin block 0x687,0x687,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
"    prev=[0x67e], succ=[]",0x687,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    =================================,0x687,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    0x687: v687(0x0) = CONST ,0x687,v687,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x687, 0x68b"
"    0x68a: REVERT v687(0x0), v687(0x0)",0x687,0,"0,v687,v687",REVERT,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
    Begin block 0x68b,0x68b,0,0,0,adjustManagerAllowance,public,False,0,0,"0x687, 0x68b"
"    prev=[0x67e], succ=[0x6a0, 0x6a4]",0x68b,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    =================================,0x68b,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    0x68d: v68d(0x39dc) = CONST ,0x68b,v68d,0,CONST,adjustManagerAllowance,public,False,0x39dc,0,"0x6a0, 0x6a4"
    0x691: v691(0x4) = CONST ,0x68b,v691,0,CONST,adjustManagerAllowance,public,False,0x4,0,"0x6a0, 0x6a4"
    0x694: v694 = CALLDATASIZE ,0x68b,v694,0,CALLDATASIZE,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
"    0x695: v695 = SUB v694, v691(0x4)",0x68b,v695,"0,v694,v691",SUB,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    0x696: v696(0x60) = CONST ,0x68b,v696,0,CONST,adjustManagerAllowance,public,False,0x60,0,"0x6a0, 0x6a4"
"    0x699: v699 = LT v695, v696(0x60)",0x68b,v699,"0,v695,v696",LT,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    0x69a: v69a = ISZERO v699,0x68b,v69a,"0,v699",ISZERO,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    0x69b: v69b(0x6a4) = CONST ,0x68b,v69b,0,CONST,adjustManagerAllowance,public,False,0x6a4,0,"0x6a0, 0x6a4"
"    0x69f: JUMPI v69b(0x6a4), v69a",0x68b,0,"0,v69b,v69a",JUMPI,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    Begin block 0x6a0,0x6a0,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
"    prev=[0x68b], succ=[]",0x6a0,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    =================================,0x6a0,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    0x6a0: v6a0(0x0) = CONST ,0x6a0,v6a0,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x6a0, 0x6a4"
"    0x6a3: REVERT v6a0(0x0), v6a0(0x0)",0x6a0,0,"0,v6a0,v6a0",REVERT,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
    Begin block 0x6a4,0x6a4,0,0,0,adjustManagerAllowance,public,False,0,0,"0x6a0, 0x6a4"
"    prev=[0x68b], succ=[0x18b9]",0x6a4,0,0,0,adjustManagerAllowance,public,False,0,0,0x18b9
    =================================,0x6a4,0,0,0,adjustManagerAllowance,public,False,0,0,0x18b9
    0x6a6: v6a6(0x1) = CONST ,0x6a4,v6a6,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x18b9
    0x6a8: v6a8(0x1) = CONST ,0x6a4,v6a8,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x18b9
    0x6aa: v6aa(0xa0) = CONST ,0x6a4,v6aa,0,CONST,adjustManagerAllowance,public,False,0xa0,0,0x18b9
"    0x6ac: v6ac(0x10000000000000000000000000000000000000000) = SHL v6aa(0xa0), v6a8(0x1)",0x6a4,v6ac,"0,v6aa,v6a8",SHL,adjustManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0x18b9
"    0x6ad: v6ad(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6ac(0x10000000000000000000000000000000000000000), v6a6(0x1)",0x6a4,v6ad,"0,v6ac,v6a6",SUB,adjustManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x18b9
    0x6af: v6af = CALLDATALOAD v691(0x4),0x6a4,v6af,"0,v691",CALLDATALOAD,adjustManagerAllowance,public,False,0,0,0x18b9
"    0x6b0: v6b0 = AND v6af, v6ad(0xffffffffffffffffffffffffffffffffffffffff)",0x6a4,v6b0,"0,v6af,v6ad",AND,adjustManagerAllowance,public,False,0,0,0x18b9
    0x6b2: v6b2(0x20) = CONST ,0x6a4,v6b2,0,CONST,adjustManagerAllowance,public,False,0x20,0,0x18b9
"    0x6b5: v6b5(0x24) = ADD v691(0x4), v6b2(0x20)",0x6a4,v6b5,"0,v691,v6b2",ADD,adjustManagerAllowance,public,False,0x24,0,0x18b9
    0x6b6: v6b6 = CALLDATALOAD v6b5(0x24),0x6a4,v6b6,"0,v6b5",CALLDATALOAD,adjustManagerAllowance,public,False,0,0,0x18b9
    0x6b8: v6b8(0x40) = CONST ,0x6a4,v6b8,0,CONST,adjustManagerAllowance,public,False,0x40,0,0x18b9
"    0x6ba: v6ba(0x44) = ADD v6b8(0x40), v691(0x4)",0x6a4,v6ba,"0,v6b8,v691",ADD,adjustManagerAllowance,public,False,0x44,0,0x18b9
    0x6bb: v6bb = CALLDATALOAD v6ba(0x44),0x6a4,v6bb,"0,v6ba",CALLDATALOAD,adjustManagerAllowance,public,False,0,0,0x18b9
    0x6bc: v6bc(0x18b9) = CONST ,0x6a4,v6bc,0,CONST,adjustManagerAllowance,public,False,0x18b9,0,0x18b9
    0x6c0: JUMP v6bc(0x18b9),0x6a4,0,"0,v6bc",JUMP,adjustManagerAllowance,public,False,0,0,0x18b9
    Begin block 0x18b9,0x18b9,0,0,0,adjustManagerAllowance,public,False,0,0,0x18b9
"    prev=[0x6a4], succ=[0x18ca, 0x1901]",0x18b9,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    =================================,0x18b9,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18ba: v18ba(0x0) = CONST ,0x18b9,v18ba,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x18ca, 0x1901"
    0x18bc: v18bc = SLOAD v18ba(0x0),0x18b9,v18bc,"0,v18ba",SLOAD,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18bd: v18bd(0xff) = CONST ,0x18b9,v18bd,0,CONST,adjustManagerAllowance,public,False,0xff,0,"0x18ca, 0x1901"
"    0x18bf: v18bf = AND v18bd(0xff), v18bc",0x18b9,v18bf,"0,v18bd,v18bc",AND,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18c0: v18c0 = ISZERO v18bf,0x18b9,v18c0,"0,v18bf",ISZERO,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18c1: v18c1 = ISZERO v18c0,0x18b9,v18c1,"0,v18c0",ISZERO,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18c2: v18c2(0x1) = CONST ,0x18b9,v18c2,0,CONST,adjustManagerAllowance,public,False,0x1,0,"0x18ca, 0x1901"
"    0x18c4: v18c4 = EQ v18c2(0x1), v18c1",0x18b9,v18c4,"0,v18c2,v18c1",EQ,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18c5: v18c5(0x1901) = CONST ,0x18b9,v18c5,0,CONST,adjustManagerAllowance,public,False,0x1901,0,"0x18ca, 0x1901"
"    0x18c9: JUMPI v18c5(0x1901), v18c4",0x18b9,0,"0,v18c5,v18c4",JUMPI,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    Begin block 0x18ca,0x18ca,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
"    prev=[0x18b9], succ=[]",0x18ca,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    =================================,0x18ca,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18ca: v18ca(0x40) = CONST ,0x18ca,v18ca,0,CONST,adjustManagerAllowance,public,False,0x40,0,"0x18ca, 0x1901"
    0x18cc: v18cc = MLOAD v18ca(0x40),0x18ca,v18cc,"0,v18ca",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x18ca, 0x1901"
    0x18cd: v18cd(0x461bcd) = CONST ,0x18ca,v18cd,0,CONST,adjustManagerAllowance,public,False,0x461bcd,0,"0x18ca, 0x1901"
    0x18d1: v18d1(0xe5) = CONST ,0x18ca,v18d1,0,CONST,adjustManagerAllowance,public,False,0xe5,0,"0x18ca, 0x1901"
"    0x18d3: v18d3(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v18d1(0xe5), v18cd(0x461bcd)",0x18ca,v18d3,"0,v18d1,v18cd",SHL,adjustManagerAllowance,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x18ca, 0x1901"
"    0x18d5: MSTORE v18cc, v18d3(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x18ca,adjustManagerAllowance&m0x40,"0,v18cc,v18d3",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x18ca, 0x1901"
    0x18d6: v18d6(0x4) = CONST ,0x18ca,v18d6,0,CONST,adjustManagerAllowance,public,False,0x4,0,"0x18ca, 0x1901"
"    0x18d8: v18d8 = ADD v18d6(0x4), v18cc",0x18ca,v18d8,"0,v18d6,v18cc",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x18ca, 0x1901"
    0x18db: v18db(0x20) = CONST ,0x18ca,v18db,0,CONST,adjustManagerAllowance,public,False,0x20,0,"0x18ca, 0x1901"
"    0x18dd: v18dd = ADD v18db(0x20), v18d8",0x18ca,v18dd,"0,v18db,v18d8",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4+0x20,"0x18ca, 0x1901"
"    0x18e0: v18e0(0x20) = SUB v18dd, v18d8",0x18ca,v18e0,"0,v18dd,v18d8",SUB,adjustManagerAllowance,public,False,0x20,adjustManagerAllowance&m0x40+0x4+0x20-0x20,"0x18ca, 0x1901"
"    0x18e2: MSTORE v18d8, v18e0(0x20)",0x18ca,adjustManagerAllowance&m0x40+0x4,"0,v18d8,v18e0",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x18ca, 0x1901"
    0x18e3: v18e3(0x32) = CONST ,0x18ca,v18e3,0,CONST,adjustManagerAllowance,public,False,0x32,0,"0x18ca, 0x1901"
"    0x18e6: MSTORE v18dd, v18e3(0x32)",0x18ca,adjustManagerAllowance&m0x40+0x4+0x20,"0,v18dd,v18e3",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4+0x20,"0x18ca, 0x1901"
    0x18e7: v18e7(0x20) = CONST ,0x18ca,v18e7,0,CONST,adjustManagerAllowance,public,False,0x20,0,"0x18ca, 0x1901"
"    0x18e9: v18e9 = ADD v18e7(0x20), v18dd",0x18ca,v18e9,"0,v18e7,v18dd",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4+0x20+0x20,"0x18ca, 0x1901"
    0x18eb: v18eb(0x3466) = CONST ,0x18ca,v18eb,0,CONST,adjustManagerAllowance,public,False,0x3466,0,"0x18ca, 0x1901"
    0x18ef: v18ef(0x32) = CONST ,0x18ca,v18ef,0,CONST,adjustManagerAllowance,public,False,0x32,0,"0x18ca, 0x1901"
"    0x18f2: CODECOPY v18e9, v18eb(0x3466), v18ef(0x32)",0x18ca,0,"0,v18e9,v18eb,v18ef",CODECOPY,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    0x18f3: v18f3(0x40) = CONST ,0x18ca,v18f3,0,CONST,adjustManagerAllowance,public,False,0x40,0,"0x18ca, 0x1901"
"    0x18f5: v18f5 = ADD v18f3(0x40), v18e9",0x18ca,v18f5,"0,v18f3,v18e9",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4+0x20+0x20+0x40,"0x18ca, 0x1901"
    0x18f9: v18f9(0x40) = CONST ,0x18ca,v18f9,0,CONST,adjustManagerAllowance,public,False,0x40,0,"0x18ca, 0x1901"
    0x18fb: v18fb = MLOAD v18f9(0x40),0x18ca,v18fb,"0,v18f9",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x18ca, 0x1901"
"    0x18fe: v18fe(0x84) = SUB v18f5, v18fb",0x18ca,v18fe,"0,v18f5,v18fb",SUB,adjustManagerAllowance,public,False,0x84,adjustManagerAllowance&m0x40+0x4+0x20+0x20+0x40-0x84,"0x18ca, 0x1901"
"    0x1900: REVERT v18fb, v18fe(0x84)",0x18ca,0,"0,v18fb,v18fe",REVERT,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
    Begin block 0x1901,0x1901,0,0,0,adjustManagerAllowance,public,False,0,0,"0x18ca, 0x1901"
"    prev=[0x18b9], succ=[0x1915, 0x1919]",0x1901,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    =================================,0x1901,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    0x1902: v1902(0x7) = CONST ,0x1901,v1902,0,CONST,adjustManagerAllowance,public,False,0x7,0,"0x1915, 0x1919"
    0x1904: v1904 = SLOAD v1902(0x7),0x1901,v1904,"0,v1902",SLOAD,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    0x1905: v1905(0x1) = CONST ,0x1901,v1905,0,CONST,adjustManagerAllowance,public,False,0x1,0,"0x1915, 0x1919"
    0x1907: v1907(0x1) = CONST ,0x1901,v1907,0,CONST,adjustManagerAllowance,public,False,0x1,0,"0x1915, 0x1919"
    0x1909: v1909(0xa0) = CONST ,0x1901,v1909,0,CONST,adjustManagerAllowance,public,False,0xa0,0,"0x1915, 0x1919"
"    0x190b: v190b(0x10000000000000000000000000000000000000000) = SHL v1909(0xa0), v1907(0x1)",0x1901,v190b,"0,v1909,v1907",SHL,adjustManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,"0x1915, 0x1919"
"    0x190c: v190c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v190b(0x10000000000000000000000000000000000000000), v1905(0x1)",0x1901,v190c,"0,v190b,v1905",SUB,adjustManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1915, 0x1919"
"    0x190d: v190d = AND v190c(0xffffffffffffffffffffffffffffffffffffffff), v1904",0x1901,v190d,"0,v190c,v1904",AND,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    0x190e: v190e = CALLER ,0x1901,v190e,0,CALLER,adjustManagerAllowance,public,True,0,0,"0x1915, 0x1919"
"    0x190f: v190f = EQ v190e, v190d",0x1901,v190f,"0,v190e,v190d",EQ,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    0x1910: v1910(0x1919) = CONST ,0x1901,v1910,0,CONST,adjustManagerAllowance,public,False,0x1919,0,"0x1915, 0x1919"
"    0x1914: JUMPI v1910(0x1919), v190f",0x1901,0,"0,v1910,v190f",JUMPI,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    Begin block 0x1915,0x1915,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
"    prev=[0x1901], succ=[]",0x1915,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    =================================,0x1915,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    0x1915: v1915(0x0) = CONST ,0x1915,v1915,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x1915, 0x1919"
"    0x1918: REVERT v1915(0x0), v1915(0x0)",0x1915,0,"0,v1915,v1915",REVERT,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
    Begin block 0x1919,0x1919,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1915, 0x1919"
"    prev=[0x1901], succ=[0x3b9d]",0x1919,0,0,0,adjustManagerAllowance,public,False,0,0,0x3b9d
    =================================,0x1919,0,0,0,adjustManagerAllowance,public,False,0,0,0x3b9d
    0x191a: v191a(0x1929) = CONST ,0x1919,v191a,0,CONST,adjustManagerAllowance,public,False,0x1929,0,0x3b9d
    0x191e: v191e(0x3b9d) = CONST ,0x1919,v191e,0,CONST,adjustManagerAllowance,public,False,0x3b9d,0,0x3b9d
    0x1924: v1924(0x1ac7) = CONST ,0x1919,v1924,0,CONST,adjustManagerAllowance,public,False,0x1ac7,0,0x3b9d
"    0x1928: v1928_0 = CALLPRIVATE v1924(0x1ac7), v6bb, v6b6, v191e(0x3b9d)",0x1919,v1928_0,"0,v1924,v6bb,v6b6,v191e",CALLPRIVATE,adjustManagerAllowance,public,False,0,0,0x3b9d
    Begin block 0x3b9d,0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x3b9d
"    prev=[0x1919], succ=[0x1bfcB0x3b9d]",0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    =================================,0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3b9e: v3b9e(0x1) = CONST ,0x3b9d,v3b9e,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x1bfcB0x3b9d
    0x3ba0: v3ba0(0x1) = CONST ,0x3b9d,v3ba0,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x1bfcB0x3b9d
    0x3ba2: v3ba2(0xa0) = CONST ,0x3b9d,v3ba2,0,CONST,adjustManagerAllowance,public,False,0xa0,0,0x1bfcB0x3b9d
"    0x3ba4: v3ba4(0x10000000000000000000000000000000000000000) = SHL v3ba2(0xa0), v3ba0(0x1)",0x3b9d,v3ba4,"0,v3ba2,v3ba0",SHL,adjustManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0x1bfcB0x3b9d
"    0x3ba5: v3ba5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ba4(0x10000000000000000000000000000000000000000), v3b9e(0x1)",0x3b9d,v3ba5,"0,v3ba4,v3b9e",SUB,adjustManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1bfcB0x3b9d
"    0x3ba7: v3ba7 = AND v6b0, v3ba5(0xffffffffffffffffffffffffffffffffffffffff)",0x3b9d,v3ba7,"0,v6b0,v3ba5",AND,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3ba8: v3ba8(0x0) = CONST ,0x3b9d,v3ba8,0,CONST,adjustManagerAllowance,public,False,0x0,0,0x1bfcB0x3b9d
"    0x3bac: MSTORE v3ba8(0x0), v3ba7",0x3b9d,0,"0,v3ba8,v3ba7",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3bad: v3bad(0x3) = CONST ,0x3b9d,v3bad,0,CONST,adjustManagerAllowance,public,False,0x3,0,0x1bfcB0x3b9d
    0x3baf: v3baf(0x20) = CONST ,0x3b9d,v3baf,0,CONST,adjustManagerAllowance,public,False,0x20,0,0x1bfcB0x3b9d
"    0x3bb1: MSTORE v3baf(0x20), v3bad(0x3)",0x3b9d,0,"0,v3baf,v3bad",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3bb2: v3bb2(0x40) = CONST ,0x3b9d,v3bb2,0,CONST,adjustManagerAllowance,public,False,0x40,0,0x1bfcB0x3b9d
"    0x3bb5: v3bb5 = SHA3 v3ba8(0x0), v3bb2(0x40)",0x3b9d,v3bb5,"0,v3ba8,v3bb2",SHA3,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3bb6: v3bb6 = SLOAD v3bb5,0x3b9d,v3bb6,"0,v3bb5",SLOAD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    0x3bb8: v3bb8(0x1bfc) = CONST ,0x3b9d,v3bb8,0,CONST,adjustManagerAllowance,public,False,0x1bfc,0,0x1bfcB0x3b9d
    0x3bbc: JUMP v3bb8(0x1bfc),0x3b9d,0,"0,v3bb8",JUMP,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
    Begin block 0x1bfcB0x3b9d,0x1bfcB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x3b9d
"    prev=[0x3b9d], succ=[0x1c0bB0x3b9d, 0x3c4eB0x3b9d]",0x1bfcB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    =================================,0x1bfcB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1bfdS0x3b9d: v1bfdV3b9d(0x0) = CONST ,0x1bfcB0x3b9d,v1bfdV3b9d,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c01S0x3b9d: v1c01V3b9d = ADD v1928_0, v3bb6",0x1bfcB0x3b9d,v1c01V3b9d,"0,v1928_0,v3bb6",ADD,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c04S0x3b9d: v1c04V3b9d = LT v1c01V3b9d, v3bb6",0x1bfcB0x3b9d,v1c04V3b9d,"0,v1c01V3b9d,v3bb6",LT,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c05S0x3b9d: v1c05V3b9d = ISZERO v1c04V3b9d,0x1bfcB0x3b9d,v1c05V3b9d,"0,v1c04V3b9d",ISZERO,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c06S0x3b9d: v1c06V3b9d(0x3c4e) = CONST ,0x1bfcB0x3b9d,v1c06V3b9d,0,CONST,adjustManagerAllowance,public,False,0x3c4e,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c0aS0x3b9d: JUMPI v1c06V3b9d(0x3c4e), v1c05V3b9d",0x1bfcB0x3b9d,0,"0,v1c06V3b9d,v1c05V3b9d",JUMPI,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    Begin block 0x1c0bB0x3b9d,0x1c0bB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    prev=[0x1bfcB0x3b9d], succ=[]",0x1c0bB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    =================================,0x1c0bB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c0bS0x3b9d: v1c0bV3b9d(0x40) = CONST ,0x1c0bB0x3b9d,v1c0bV3b9d,0,CONST,adjustManagerAllowance,public,False,0x40,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c0eS0x3b9d: v1c0eV3b9d = MLOAD v1c0bV3b9d(0x40),0x1c0bB0x3b9d,v1c0eV3b9d,"0,v1c0bV3b9d",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c0fS0x3b9d: v1c0fV3b9d(0x461bcd) = CONST ,0x1c0bB0x3b9d,v1c0fV3b9d,0,CONST,adjustManagerAllowance,public,False,0x461bcd,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c13S0x3b9d: v1c13V3b9d(0xe5) = CONST ,0x1c0bB0x3b9d,v1c13V3b9d,0,CONST,adjustManagerAllowance,public,False,0xe5,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c15S0x3b9d: v1c15V3b9d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1c13V3b9d(0xe5), v1c0fV3b9d(0x461bcd)",0x1c0bB0x3b9d,v1c15V3b9d,"0,v1c13V3b9d,v1c0fV3b9d",SHL,adjustManagerAllowance,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c17S0x3b9d: MSTORE v1c0eV3b9d, v1c15V3b9d(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1c0bB0x3b9d,adjustManagerAllowance&m0x40,"0,v1c0eV3b9d,v1c15V3b9d",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c18S0x3b9d: v1c18V3b9d(0x20) = CONST ,0x1c0bB0x3b9d,v1c18V3b9d,0,CONST,adjustManagerAllowance,public,False,0x20,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c1aS0x3b9d: v1c1aV3b9d(0x4) = CONST ,0x1c0bB0x3b9d,v1c1aV3b9d,0,CONST,adjustManagerAllowance,public,False,0x4,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c1dS0x3b9d: v1c1dV3b9d = ADD v1c0eV3b9d, v1c1aV3b9d(0x4)",0x1c0bB0x3b9d,v1c1dV3b9d,"0,v1c0eV3b9d,v1c1aV3b9d",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c1eS0x3b9d: MSTORE v1c1dV3b9d, v1c18V3b9d(0x20)",0x1c0bB0x3b9d,adjustManagerAllowance&m0x40+0x4,"0,v1c1dV3b9d,v1c18V3b9d",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c1fS0x3b9d: v1c1fV3b9d(0x1b) = CONST ,0x1c0bB0x3b9d,v1c1fV3b9d,0,CONST,adjustManagerAllowance,public,False,0x1b,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c21S0x3b9d: v1c21V3b9d(0x24) = CONST ,0x1c0bB0x3b9d,v1c21V3b9d,0,CONST,adjustManagerAllowance,public,False,0x24,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c24S0x3b9d: v1c24V3b9d = ADD v1c0eV3b9d, v1c21V3b9d(0x24)",0x1c0bB0x3b9d,v1c24V3b9d,"0,v1c0eV3b9d,v1c21V3b9d",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x24,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c25S0x3b9d: MSTORE v1c24V3b9d, v1c1fV3b9d(0x1b)",0x1c0bB0x3b9d,adjustManagerAllowance&m0x40+0x24,"0,v1c24V3b9d,v1c1fV3b9d",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x24,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c26S0x3b9d: v1c26V3b9d(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST ,0x1c0bB0x3b9d,v1c26V3b9d,0,CONST,adjustManagerAllowance,public,False,0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c47S0x3b9d: v1c47V3b9d(0x44) = CONST ,0x1c0bB0x3b9d,v1c47V3b9d,0,CONST,adjustManagerAllowance,public,False,0x44,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c4aS0x3b9d: v1c4aV3b9d = ADD v1c0eV3b9d, v1c47V3b9d(0x44)",0x1c0bB0x3b9d,v1c4aV3b9d,"0,v1c0eV3b9d,v1c47V3b9d",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x44,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c4bS0x3b9d: MSTORE v1c4aV3b9d, v1c26V3b9d(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)",0x1c0bB0x3b9d,adjustManagerAllowance&m0x40+0x44,"0,v1c4aV3b9d,v1c26V3b9d",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x44,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c4dS0x3b9d: v1c4dV3b9d = MLOAD v1c0bV3b9d(0x40),0x1c0bB0x3b9d,v1c4dV3b9d,"0,v1c0bV3b9d",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c51S0x3b9d: v1c51V3b9d(0x0) = SUB v1c0eV3b9d, v1c4dV3b9d",0x1c0bB0x3b9d,v1c51V3b9d,"0,v1c0eV3b9d,v1c4dV3b9d",SUB,adjustManagerAllowance,public,False,0x0,adjustManagerAllowance&m0x40-0x0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    0x1c52S0x3b9d: v1c52V3b9d(0x64) = CONST ,0x1c0bB0x3b9d,v1c52V3b9d,0,CONST,adjustManagerAllowance,public,False,0x64,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c54S0x3b9d: v1c54V3b9d(0x64) = ADD v1c52V3b9d(0x64), v1c51V3b9d(0x0)",0x1c0bB0x3b9d,v1c54V3b9d,"0,v1c52V3b9d,v1c51V3b9d",ADD,adjustManagerAllowance,public,False,0x64,adjustManagerAllowance&m0x40-0x0+0x64,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    0x1c56S0x3b9d: REVERT v1c4dV3b9d, v1c54V3b9d(0x64)",0x1c0bB0x3b9d,0,"0,v1c4dV3b9d,v1c54V3b9d",REVERT,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
    Begin block 0x3c4eB0x3b9d,0x3c4eB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x3b9d, 0x3c4eB0x3b9d"
"    prev=[0x1bfcB0x3b9d], succ=[0x1929]",0x3c4eB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x1929
    =================================,0x3c4eB0x3b9d,0,0,0,adjustManagerAllowance,public,False,0,0,0x1929
    0x3c54S0x3b9d: JUMP v191a(0x1929),0x3c4eB0x3b9d,0,"0,v191a",JUMP,adjustManagerAllowance,public,False,0,0,0x1929
    Begin block 0x1929,0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1929
"    prev=[0x3c4eB0x3b9d], succ=[0x1bfcB0x1929]",0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    =================================,0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x192a: v192a(0x1) = CONST ,0x1929,v192a,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x1bfcB0x1929
    0x192c: v192c(0x1) = CONST ,0x1929,v192c,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x1bfcB0x1929
    0x192e: v192e(0xa0) = CONST ,0x1929,v192e,0,CONST,adjustManagerAllowance,public,False,0xa0,0,0x1bfcB0x1929
"    0x1930: v1930(0x10000000000000000000000000000000000000000) = SHL v192e(0xa0), v192c(0x1)",0x1929,v1930,"0,v192e,v192c",SHL,adjustManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0x1bfcB0x1929
"    0x1931: v1931(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1930(0x10000000000000000000000000000000000000000), v192a(0x1)",0x1929,v1931,"0,v1930,v192a",SUB,adjustManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1bfcB0x1929
"    0x1933: v1933 = AND v6b0, v1931(0xffffffffffffffffffffffffffffffffffffffff)",0x1929,v1933,"0,v6b0,v1931",AND,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1934: v1934(0x0) = CONST ,0x1929,v1934,0,CONST,adjustManagerAllowance,public,False,0x0,0,0x1bfcB0x1929
"    0x1938: MSTORE v1934(0x0), v1933",0x1929,0,"0,v1934,v1933",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1939: v1939(0x3) = CONST ,0x1929,v1939,0,CONST,adjustManagerAllowance,public,False,0x3,0,0x1bfcB0x1929
    0x193b: v193b(0x20) = CONST ,0x1929,v193b,0,CONST,adjustManagerAllowance,public,False,0x20,0,0x1bfcB0x1929
"    0x193f: MSTORE v193b(0x20), v1939(0x3)",0x1929,0,"0,v193b,v1939",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1940: v1940(0x40) = CONST ,0x1929,v1940,0,CONST,adjustManagerAllowance,public,False,0x40,0,0x1bfcB0x1929
"    0x1943: v1943 = SHA3 v1934(0x0), v1940(0x40)",0x1929,v1943,"0,v1934,v1940",SHA3,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1946: SSTORE v1943, v1c01V3b9d",0x1929,0,"0,v1943,v1c01V3b9d",SSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1947: v1947(0x7) = CONST ,0x1929,v1947,0,CONST,adjustManagerAllowance,public,False,0x7,0,0x1bfcB0x1929
"    0x194a: v194a = ADD v1943, v1947(0x7)",0x1929,v194a,"0,v1943,v1947",ADD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x194c: v194c = SLOAD v194a,0x1929,v194c,"0,v194a",SLOAD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x194d: v194d(0x1) = CONST ,0x1929,v194d,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x1bfcB0x1929
"    0x1951: v1951 = ADD v194d(0x1), v194c",0x1929,v1951,"0,v194d,v194c",ADD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1953: SSTORE v194a, v1951",0x1929,0,"0,v194a,v1951",SSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1956: MSTORE v1934(0x0), v194a",0x1929,0,"0,v1934,v194a",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1959: v1959 = SHA3 v1934(0x0), v193b(0x20)",0x1929,v1959,"0,v1934,v193b",SHA3,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x195c: v195c = ADD v194c, v1959",0x1929,v195c,"0,v194c,v1959",ADD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1960: SSTORE v195c, v1c01V3b9d",0x1929,0,"0,v195c,v1c01V3b9d",SSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1963: MSTORE v1934(0x0), v1933",0x1929,0,"0,v1934,v1933",MSTORE,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    0x1964: v1964 = ADD v194d(0x1), v1943",0x1929,v1964,"0,v194d,v1943",ADD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1965: v1965 = SLOAD v1964,0x1929,v1965,"0,v1964",SLOAD,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    0x1966: v1966(0x1971) = CONST ,0x1929,v1966,0,CONST,adjustManagerAllowance,public,False,0x1971,0,0x1bfcB0x1929
    0x196c: v196c(0x1bfc) = CONST ,0x1929,v196c,0,CONST,adjustManagerAllowance,public,False,0x1bfc,0,0x1bfcB0x1929
    0x1970: JUMP v196c(0x1bfc),0x1929,0,"0,v196c",JUMP,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
    Begin block 0x1bfcB0x1929,0x1bfcB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1bfcB0x1929
"    prev=[0x1929], succ=[0x1c0bB0x1929, 0x3c4eB0x1929]",0x1bfcB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    =================================,0x1bfcB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1bfdS0x1929: v1bfdV1929(0x0) = CONST ,0x1bfcB0x1929,v1bfdV1929,0,CONST,adjustManagerAllowance,public,False,0x0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c01S0x1929: v1c01V1929 = ADD v6bb, v1965",0x1bfcB0x1929,v1c01V1929,"0,v6bb,v1965",ADD,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c04S0x1929: v1c04V1929 = LT v1c01V1929, v1965",0x1bfcB0x1929,v1c04V1929,"0,v1c01V1929,v1965",LT,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c05S0x1929: v1c05V1929 = ISZERO v1c04V1929,0x1bfcB0x1929,v1c05V1929,"0,v1c04V1929",ISZERO,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c06S0x1929: v1c06V1929(0x3c4e) = CONST ,0x1bfcB0x1929,v1c06V1929,0,CONST,adjustManagerAllowance,public,False,0x3c4e,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c0aS0x1929: JUMPI v1c06V1929(0x3c4e), v1c05V1929",0x1bfcB0x1929,0,"0,v1c06V1929,v1c05V1929",JUMPI,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    Begin block 0x1c0bB0x1929,0x1c0bB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    prev=[0x1bfcB0x1929], succ=[]",0x1c0bB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    =================================,0x1c0bB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c0bS0x1929: v1c0bV1929(0x40) = CONST ,0x1c0bB0x1929,v1c0bV1929,0,CONST,adjustManagerAllowance,public,False,0x40,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c0eS0x1929: v1c0eV1929 = MLOAD v1c0bV1929(0x40),0x1c0bB0x1929,v1c0eV1929,"0,v1c0bV1929",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c0fS0x1929: v1c0fV1929(0x461bcd) = CONST ,0x1c0bB0x1929,v1c0fV1929,0,CONST,adjustManagerAllowance,public,False,0x461bcd,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c13S0x1929: v1c13V1929(0xe5) = CONST ,0x1c0bB0x1929,v1c13V1929,0,CONST,adjustManagerAllowance,public,False,0xe5,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c15S0x1929: v1c15V1929(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1c13V1929(0xe5), v1c0fV1929(0x461bcd)",0x1c0bB0x1929,v1c15V1929,"0,v1c13V1929,v1c0fV1929",SHL,adjustManagerAllowance,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c17S0x1929: MSTORE v1c0eV1929, v1c15V1929(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1c0bB0x1929,adjustManagerAllowance&m0x40,"0,v1c0eV1929,v1c15V1929",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c18S0x1929: v1c18V1929(0x20) = CONST ,0x1c0bB0x1929,v1c18V1929,0,CONST,adjustManagerAllowance,public,False,0x20,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c1aS0x1929: v1c1aV1929(0x4) = CONST ,0x1c0bB0x1929,v1c1aV1929,0,CONST,adjustManagerAllowance,public,False,0x4,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c1dS0x1929: v1c1dV1929 = ADD v1c0eV1929, v1c1aV1929(0x4)",0x1c0bB0x1929,v1c1dV1929,"0,v1c0eV1929,v1c1aV1929",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c1eS0x1929: MSTORE v1c1dV1929, v1c18V1929(0x20)",0x1c0bB0x1929,adjustManagerAllowance&m0x40+0x4,"0,v1c1dV1929,v1c18V1929",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x4,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c1fS0x1929: v1c1fV1929(0x1b) = CONST ,0x1c0bB0x1929,v1c1fV1929,0,CONST,adjustManagerAllowance,public,False,0x1b,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c21S0x1929: v1c21V1929(0x24) = CONST ,0x1c0bB0x1929,v1c21V1929,0,CONST,adjustManagerAllowance,public,False,0x24,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c24S0x1929: v1c24V1929 = ADD v1c0eV1929, v1c21V1929(0x24)",0x1c0bB0x1929,v1c24V1929,"0,v1c0eV1929,v1c21V1929",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x24,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c25S0x1929: MSTORE v1c24V1929, v1c1fV1929(0x1b)",0x1c0bB0x1929,adjustManagerAllowance&m0x40+0x24,"0,v1c24V1929,v1c1fV1929",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x24,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c26S0x1929: v1c26V1929(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST ,0x1c0bB0x1929,v1c26V1929,0,CONST,adjustManagerAllowance,public,False,0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c47S0x1929: v1c47V1929(0x44) = CONST ,0x1c0bB0x1929,v1c47V1929,0,CONST,adjustManagerAllowance,public,False,0x44,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c4aS0x1929: v1c4aV1929 = ADD v1c0eV1929, v1c47V1929(0x44)",0x1c0bB0x1929,v1c4aV1929,"0,v1c0eV1929,v1c47V1929",ADD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x44,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c4bS0x1929: MSTORE v1c4aV1929, v1c26V1929(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)",0x1c0bB0x1929,adjustManagerAllowance&m0x40+0x44,"0,v1c4aV1929,v1c26V1929",MSTORE,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40+0x44,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c4dS0x1929: v1c4dV1929 = MLOAD v1c0bV1929(0x40),0x1c0bB0x1929,v1c4dV1929,"0,v1c0bV1929",MLOAD,adjustManagerAllowance,public,False,0,adjustManagerAllowance&m0x40,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c51S0x1929: v1c51V1929(0x0) = SUB v1c0eV1929, v1c4dV1929",0x1c0bB0x1929,v1c51V1929,"0,v1c0eV1929,v1c4dV1929",SUB,adjustManagerAllowance,public,False,0x0,adjustManagerAllowance&m0x40-0x0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    0x1c52S0x1929: v1c52V1929(0x64) = CONST ,0x1c0bB0x1929,v1c52V1929,0,CONST,adjustManagerAllowance,public,False,0x64,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c54S0x1929: v1c54V1929(0x64) = ADD v1c52V1929(0x64), v1c51V1929(0x0)",0x1c0bB0x1929,v1c54V1929,"0,v1c52V1929,v1c51V1929",ADD,adjustManagerAllowance,public,False,0x64,adjustManagerAllowance&m0x40-0x0+0x64,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    0x1c56S0x1929: REVERT v1c4dV1929, v1c54V1929(0x64)",0x1c0bB0x1929,0,"0,v1c4dV1929,v1c54V1929",REVERT,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
    Begin block 0x3c4eB0x1929,0x3c4eB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,"0x1c0bB0x1929, 0x3c4eB0x1929"
"    prev=[0x1bfcB0x1929], succ=[0x1971]",0x3c4eB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1971
    =================================,0x3c4eB0x1929,0,0,0,adjustManagerAllowance,public,False,0,0,0x1971
    0x3c54S0x1929: JUMP v1966(0x1971),0x3c4eB0x1929,0,"0,v1966",JUMP,adjustManagerAllowance,public,False,0,0,0x1971
    Begin block 0x1971,0x1971,0,0,0,adjustManagerAllowance,public,False,0,0,0x1971
"    prev=[0x3c4eB0x1929], succ=[0x39dc]",0x1971,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
    =================================,0x1971,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
    0x1972: v1972(0x1) = CONST ,0x1971,v1972,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x39dc
    0x1974: v1974(0x1) = CONST ,0x1971,v1974,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x39dc
    0x1976: v1976(0xa0) = CONST ,0x1971,v1976,0,CONST,adjustManagerAllowance,public,False,0xa0,0,0x39dc
"    0x1978: v1978(0x10000000000000000000000000000000000000000) = SHL v1976(0xa0), v1974(0x1)",0x1971,v1978,"0,v1976,v1974",SHL,adjustManagerAllowance,public,False,0x10000000000000000000000000000000000000000,0,0x39dc
"    0x1979: v1979(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1978(0x10000000000000000000000000000000000000000), v1972(0x1)",0x1971,v1979,"0,v1978,v1972",SUB,adjustManagerAllowance,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x39dc
"    0x197c: v197c = AND v6b0, v1979(0xffffffffffffffffffffffffffffffffffffffff)",0x1971,v197c,"0,v6b0,v1979",AND,adjustManagerAllowance,public,False,0,0,0x39dc
    0x197d: v197d(0x0) = CONST ,0x1971,v197d,0,CONST,adjustManagerAllowance,public,False,0x0,0,0x39dc
"    0x1981: MSTORE v197d(0x0), v197c",0x1971,0,"0,v197d,v197c",MSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
    0x1982: v1982(0x3) = CONST ,0x1971,v1982,0,CONST,adjustManagerAllowance,public,False,0x3,0,0x39dc
    0x1984: v1984(0x20) = CONST ,0x1971,v1984,0,CONST,adjustManagerAllowance,public,False,0x20,0,0x39dc
"    0x1988: MSTORE v1984(0x20), v1982(0x3)",0x1971,0,"0,v1984,v1982",MSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
    0x1989: v1989(0x40) = CONST ,0x1971,v1989,0,CONST,adjustManagerAllowance,public,False,0x40,0,0x39dc
"    0x198c: v198c = SHA3 v197d(0x0), v1989(0x40)",0x1971,v198c,"0,v197d,v1989",SHA3,adjustManagerAllowance,public,False,0,0,0x39dc
    0x198d: v198d(0x1) = CONST ,0x1971,v198d,0,CONST,adjustManagerAllowance,public,False,0x1,0,0x39dc
"    0x1991: v1991 = ADD v198c, v198d(0x1)",0x1971,v1991,"0,v198c,v198d",ADD,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x1994: SSTORE v1991, v1c01V1929",0x1971,0,"0,v1991,v1c01V1929",SSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
    0x1995: v1995(0x8) = CONST ,0x1971,v1995,0,CONST,adjustManagerAllowance,public,False,0x8,0,0x39dc
"    0x1999: v1999 = ADD v198c, v1995(0x8)",0x1971,v1999,"0,v198c,v1995",ADD,adjustManagerAllowance,public,False,0,0,0x39dc
    0x199b: v199b = SLOAD v1999,0x1971,v199b,"0,v1999",SLOAD,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x199e: v199e = ADD v199b, v198d(0x1)",0x1971,v199e,"0,v199b,v198d",ADD,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x19a0: SSTORE v1999, v199e",0x1971,0,"0,v1999,v199e",SSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x19a2: MSTORE v197d(0x0), v1999",0x1971,0,"0,v197d,v1999",MSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x19a4: v19a4 = SHA3 v197d(0x0), v1984(0x20)",0x1971,v19a4,"0,v197d,v1984",SHA3,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x19a5: v19a5 = ADD v19a4, v199b",0x1971,v19a5,"0,v19a4,v199b",ADD,adjustManagerAllowance,public,False,0,0,0x39dc
"    0x19a9: SSTORE v19a5, v1c01V1929",0x1971,0,"0,v19a5,v1c01V1929",SSTORE,adjustManagerAllowance,public,False,0,0,0x39dc
    0x19ac: JUMP v68d(0x39dc),0x1971,0,"0,v68d",JUMP,adjustManagerAllowance,public,False,0,0,0x39dc
    Begin block 0x39dc,0x39dc,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
"    prev=[0x1971], succ=[]",0x39dc,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
    =================================,0x39dc,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
    0x39dd: STOP ,0x39dc,0,0,STOP,adjustManagerAllowance,public,False,0,0,0x39dc
},0x39dc,0,0,0,adjustManagerAllowance,public,False,0,0,0x39dc
function connectorContract()() public {,0x6c1,0,0,public,connectorContract,public,False,0,0,0x39dc
    Begin block 0x6c1,0x6c1,0,0,0,connectorContract,public,False,0,0,0x39dc
"    prev=[], succ=[0x6ca, 0x6ce]",0x6c1,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    =================================,0x6c1,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    0x6c2: v6c2 = CALLVALUE ,0x6c1,v6c2,0,CALLVALUE,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    0x6c4: v6c4 = ISZERO v6c2,0x6c1,v6c4,"0,v6c2",ISZERO,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    0x6c5: v6c5(0x6ce) = CONST ,0x6c1,v6c5,0,CONST,connectorContract,public,False,0x6ce,0,"0x6ca, 0x6ce"
"    0x6c9: JUMPI v6c5(0x6ce), v6c4",0x6c1,0,"0,v6c5,v6c4",JUMPI,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    Begin block 0x6ca,0x6ca,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
"    prev=[0x6c1], succ=[]",0x6ca,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    =================================,0x6ca,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    0x6ca: v6ca(0x0) = CONST ,0x6ca,v6ca,0,CONST,connectorContract,public,False,0x0,0,"0x6ca, 0x6ce"
"    0x6cd: REVERT v6ca(0x0), v6ca(0x0)",0x6ca,0,"0,v6ca,v6ca",REVERT,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
    Begin block 0x6ce,0x6ce,0,0,0,connectorContract,public,False,0,0,"0x6ca, 0x6ce"
"    prev=[0x6c1], succ=[0x19ad]",0x6ce,0,0,0,connectorContract,public,False,0,0,0x19ad
    =================================,0x6ce,0,0,0,connectorContract,public,False,0,0,0x19ad
    0x6d0: v6d0(0x39fd) = CONST ,0x6ce,v6d0,0,CONST,connectorContract,public,False,0x39fd,0,0x19ad
    0x6d4: v6d4(0x19ad) = CONST ,0x6ce,v6d4,0,CONST,connectorContract,public,False,0x19ad,0,0x19ad
    0x6d8: JUMP v6d4(0x19ad),0x6ce,0,"0,v6d4",JUMP,connectorContract,public,False,0,0,0x19ad
    Begin block 0x19ad,0x19ad,0,0,0,connectorContract,public,False,0,0,0x19ad
"    prev=[0x6ce], succ=[0x39fd]",0x19ad,0,0,0,connectorContract,public,False,0,0,0x39fd
    =================================,0x19ad,0,0,0,connectorContract,public,False,0,0,0x39fd
    0x19ae: v19ae(0x6) = CONST ,0x19ad,v19ae,0,CONST,connectorContract,public,False,0x6,0,0x39fd
    0x19b0: v19b0 = SLOAD v19ae(0x6),0x19ad,v19b0,"0,v19ae",SLOAD,connectorContract,public,False,0,0,0x39fd
    0x19b1: v19b1(0x1) = CONST ,0x19ad,v19b1,0,CONST,connectorContract,public,False,0x1,0,0x39fd
    0x19b3: v19b3(0x1) = CONST ,0x19ad,v19b3,0,CONST,connectorContract,public,False,0x1,0,0x39fd
    0x19b5: v19b5(0xa0) = CONST ,0x19ad,v19b5,0,CONST,connectorContract,public,False,0xa0,0,0x39fd
"    0x19b7: v19b7(0x10000000000000000000000000000000000000000) = SHL v19b5(0xa0), v19b3(0x1)",0x19ad,v19b7,"0,v19b5,v19b3",SHL,connectorContract,public,False,0x10000000000000000000000000000000000000000,0,0x39fd
"    0x19b8: v19b8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19b7(0x10000000000000000000000000000000000000000), v19b1(0x1)",0x19ad,v19b8,"0,v19b7,v19b1",SUB,connectorContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x39fd
"    0x19b9: v19b9 = AND v19b8(0xffffffffffffffffffffffffffffffffffffffff), v19b0",0x19ad,v19b9,"0,v19b8,v19b0",AND,connectorContract,public,False,0,0,0x39fd
    0x19bb: JUMP v6d0(0x39fd),0x19ad,0,"0,v6d0",JUMP,connectorContract,public,False,0,0,0x39fd
    Begin block 0x39fd,0x39fd,0,0,0,connectorContract,public,False,0,0,0x39fd
"    prev=[0x19ad], succ=[]",0x39fd,0,0,0,connectorContract,public,False,0,0,0x39fd
    =================================,0x39fd,0,0,0,connectorContract,public,False,0,0,0x39fd
    0x39fe: v39fe(0x40) = CONST ,0x39fd,v39fe,0,CONST,connectorContract,public,False,0x40,0,0x39fd
    0x3a01: v3a01 = MLOAD v39fe(0x40),0x39fd,v3a01,"0,v39fe",MLOAD,connectorContract,public,False,0,connectorContract&m0x40,0x39fd
    0x3a02: v3a02(0x1) = CONST ,0x39fd,v3a02,0,CONST,connectorContract,public,False,0x1,0,0x39fd
    0x3a04: v3a04(0x1) = CONST ,0x39fd,v3a04,0,CONST,connectorContract,public,False,0x1,0,0x39fd
    0x3a06: v3a06(0xa0) = CONST ,0x39fd,v3a06,0,CONST,connectorContract,public,False,0xa0,0,0x39fd
"    0x3a08: v3a08(0x10000000000000000000000000000000000000000) = SHL v3a06(0xa0), v3a04(0x1)",0x39fd,v3a08,"0,v3a06,v3a04",SHL,connectorContract,public,False,0x10000000000000000000000000000000000000000,0,0x39fd
"    0x3a09: v3a09(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a08(0x10000000000000000000000000000000000000000), v3a02(0x1)",0x39fd,v3a09,"0,v3a08,v3a02",SUB,connectorContract,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x39fd
"    0x3a0c: v3a0c = AND v19b9, v3a09(0xffffffffffffffffffffffffffffffffffffffff)",0x39fd,v3a0c,"0,v19b9,v3a09",AND,connectorContract,public,False,0,0,0x39fd
"    0x3a0e: MSTORE v3a01, v3a0c",0x39fd,connectorContract&m0x40,"0,v3a01,v3a0c",MSTORE,connectorContract,public,False,0,connectorContract&m0x40,0x39fd
    0x3a0f: v3a0f = MLOAD v39fe(0x40),0x39fd,v3a0f,"0,v39fe",MLOAD,connectorContract,public,False,0,connectorContract&m0x40,0x39fd
"    0x3a13: v3a13(0x0) = SUB v3a01, v3a0f",0x39fd,v3a13,"0,v3a01,v3a0f",SUB,connectorContract,public,False,0x0,connectorContract&m0x40-0x0,0x39fd
    0x3a14: v3a14(0x20) = CONST ,0x39fd,v3a14,0,CONST,connectorContract,public,False,0x20,0,0x39fd
"    0x3a16: v3a16(0x20) = ADD v3a14(0x20), v3a13(0x0)",0x39fd,v3a16,"0,v3a14,v3a13",ADD,connectorContract,public,False,0x20,connectorContract&m0x40-0x0+0x20,0x39fd
"    0x3a18: RETURN v3a0f, v3a16(0x20)",0x39fd,0,"0,v3a0f,v3a16",RETURN,connectorContract,public,False,0,0,0x39fd
},0x39fd,0,0,0,connectorContract,public,False,0,0,0x39fd
