3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0x4b, 0x47]",0x0,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    =================================,0x0,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0x4b, 0x47"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0x4b, 0x47"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0x4b, 0x47"
    0x5: v5(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) = CONST ,0x0,v5,0,CONST,0,0,False,0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,0,"0x4b, 0x47"
    0x26: v26 = SLOAD v5(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7),0x0,v26,"0,v5",SLOAD,0,0,False,0,0,"0x4b, 0x47"
    0x27: v27 = CALLDATASIZE ,0x0,v27,0,CALLDATASIZE,0,0,False,0,0,"0x4b, 0x47"
    0x28: v28(0x0) = CONST ,0x0,v28,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
"    0x2b: CALLDATACOPY v28(0x0), v28(0x0), v27",0x0,0,"0,v28,v28,v27",CALLDATACOPY,0,0,False,0,0,"0x4b, 0x47"
    0x2c: v2c(0x0) = CONST ,0x0,v2c,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
    0x2f: v2f = CALLDATASIZE ,0x0,v2f,0,CALLDATASIZE,0,0,False,0,0,"0x4b, 0x47"
    0x30: v30(0x0) = CONST ,0x0,v30,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
    0x33: v33(0x2710) = CONST ,0x0,v33,0,CONST,0,0,False,0x2710,0,"0x4b, 0x47"
    0x36: v36 = GAS ,0x0,v36,0,GAS,0,0,False,0,0,"0x4b, 0x47"
"    0x37: v37 = SUB v36, v33(0x2710)",0x0,v37,"0,v36,v33",SUB,0,0,False,0,0,"0x4b, 0x47"
"    0x38: v38 = DELEGATECALL v37, v26, v30(0x0), v2f, v2c(0x0), v2c(0x0)",0x0,v38,"0,v37,v26,v30,v2f,v2c,v2c",DELEGATECALL,0,0,False,0,0,"0x4b, 0x47"
    0x39: v39 = RETURNDATASIZE ,0x0,v39,0,RETURNDATASIZE,0,0,False,0,0,"0x4b, 0x47"
    0x3b: v3b(0x0) = CONST ,0x0,v3b,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
"    0x3e: RETURNDATACOPY v3b(0x0), v3b(0x0), v39",0x0,0,"0,v3b,v3b,v39",RETURNDATACOPY,0,0,False,0,0,"0x4b, 0x47"
    0x40: v40(0x0) = CONST ,0x0,v40,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
"    0x43: v43 = EQ v38, v40(0x0)",0x0,v43,"0,v38,v40",EQ,0,0,False,0,0,"0x4b, 0x47"
    0x44: v44(0x4b) = CONST ,0x0,v44,0,CONST,0,0,False,0x4b,0,"0x4b, 0x47"
"    0x46: JUMPI v44(0x4b), v43",0x0,0,"0,v44,v43",JUMPI,0,0,False,0,0,"0x4b, 0x47"
    Begin block 0x4b,0x4b,0,0,0,0,0,False,0,0,"0x4b, 0x47"
"    prev=[0x0], succ=[]",0x4b,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    =================================,0x4b,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    0x4d: v4d(0x0) = CONST ,0x4b,v4d,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
"    0x4f: REVERT v4d(0x0), v39",0x4b,0,"0,v4d,v39",REVERT,0,0,False,0,0,"0x4b, 0x47"
    Begin block 0x47,0x47,0,0,0,0,0,False,0,0,"0x4b, 0x47"
"    prev=[0x0], succ=[]",0x47,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    =================================,0x47,0,0,0,0,0,False,0,0,"0x4b, 0x47"
    0x48: v48(0x0) = CONST ,0x47,v48,0,CONST,0,0,False,0x0,0,"0x4b, 0x47"
"    0x4a: RETURN v48(0x0), v39",0x47,0,"0,v48,v39",RETURN,0,0,False,0,0,"0x4b, 0x47"
},0x47,0,0,0,0,0,False,0,0,"0x4b, 0x47"
