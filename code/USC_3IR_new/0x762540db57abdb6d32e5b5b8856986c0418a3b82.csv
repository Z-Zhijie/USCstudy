3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x1a, 0x82c]",0x10,0,0,0,0,0,False,0,0,"0x1a, 0x82c"
    =================================,0x10,0,0,0,0,0,False,0,0,"0x1a, 0x82c"
    0x12: v12(0x4) = CONST ,0x10,v12,0,CONST,0,0,False,0x4,0,"0x1a, 0x82c"
    0x14: v14 = CALLDATASIZE ,0x10,v14,0,CALLDATASIZE,0,0,False,0,0,"0x1a, 0x82c"
"    0x15: v15 = LT v14, v12(0x4)",0x10,v15,"0,v14,v12",LT,0,0,False,0,0,"0x1a, 0x82c"
    0x81e: v81e(0x82c) = CONST ,0x10,v81e,0,CONST,0,0,False,0x82c,0,"0x1a, 0x82c"
"    0x81f: JUMPI v81e(0x82c), v15",0x10,0,"0,v81e,v15",JUMPI,0,0,False,0,0,"0x1a, 0x82c"
    Begin block 0x1a,0x1a,0,0,0,0,0,False,0,0,"0x1a, 0x82c"
"    prev=[0x10], succ=[0x82f, 0x2b]",0x1a,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
    =================================,0x1a,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
    0x1a: v1a(0x0) = CONST ,0x1a,v1a,0,CONST,0,0,False,0x0,0,"0x82f, 0x2b"
    0x1c: v1c = CALLDATALOAD v1a(0x0),0x1a,v1c,"0,v1a",CALLDATALOAD,0,0,False,0,0,"0x82f, 0x2b"
    0x1d: v1d(0xe0) = CONST ,0x1a,v1d,0,CONST,0,0,False,0xe0,0,"0x82f, 0x2b"
"    0x1f: v1f = SHR v1d(0xe0), v1c",0x1a,v1f,"0,v1d,v1c",SHR,0,0,False,0,0,"0x82f, 0x2b"
    0x21: v21(0x5536b682) = CONST ,0x1a,v21,0,CONST,0,0,False,0x5536b682,0,"0x82f, 0x2b"
"    0x26: v26 = EQ v21(0x5536b682), v1f",0x1a,v26,"0,v21,v1f",EQ,0,0,False,0,0,"0x82f, 0x2b"
    0x820: v820(0x82f) = CONST ,0x1a,v820,0,CONST,0,0,False,0x82f,0,"0x82f, 0x2b"
"    0x821: JUMPI v820(0x82f), v26",0x1a,0,"0,v820,v26",JUMPI,0,0,False,0,0,"0x82f, 0x2b"
    Begin block 0x82f,0x82f,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
"    prev=[0x1a], succ=[]",0x82f,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
    =================================,0x82f,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
    0x830: v830(0x67) = CONST ,0x82f,v830,0,CONST,0,0,False,0x67,0,"0x82f, 0x2b"
    0x831: CALLPRIVATE v830(0x67),0x82f,0,"0,v830",CALLPRIVATE,0,0,False,0,0,"0x82f, 0x2b"
    Begin block 0x2b,0x2b,0,0,0,0,0,False,0,0,"0x82f, 0x2b"
"    prev=[0x1a], succ=[0x832, 0x36]",0x2b,0,0,0,0,0,False,0,0,"0x832, 0x36"
    =================================,0x2b,0,0,0,0,0,False,0,0,"0x832, 0x36"
    0x2c: v2c(0x6e699d87) = CONST ,0x2b,v2c,0,CONST,0,0,False,0x6e699d87,0,"0x832, 0x36"
"    0x31: v31 = EQ v2c(0x6e699d87), v1f",0x2b,v31,"0,v2c,v1f",EQ,0,0,False,0,0,"0x832, 0x36"
    0x822: v822(0x832) = CONST ,0x2b,v822,0,CONST,0,0,False,0x832,0,"0x832, 0x36"
"    0x823: JUMPI v822(0x832), v31",0x2b,0,"0,v822,v31",JUMPI,0,0,False,0,0,"0x832, 0x36"
    Begin block 0x832,0x832,0,0,0,0,0,False,0,0,"0x832, 0x36"
"    prev=[0x2b], succ=[]",0x832,0,0,0,0,0,False,0,0,"0x832, 0x36"
    =================================,0x832,0,0,0,0,0,False,0,0,"0x832, 0x36"
    0x833: v833(0xa7) = CONST ,0x832,v833,0,CONST,0,0,False,0xa7,0,"0x832, 0x36"
    0x834: CALLPRIVATE v833(0xa7),0x832,0,"0,v833",CALLPRIVATE,0,0,False,0,0,"0x832, 0x36"
    Begin block 0x36,0x36,0,0,0,0,0,False,0,0,"0x832, 0x36"
"    prev=[0x2b], succ=[0x835, 0x41]",0x36,0,0,0,0,0,False,0,0,"0x835, 0x41"
    =================================,0x36,0,0,0,0,0,False,0,0,"0x835, 0x41"
    0x37: v37(0x7b103999) = CONST ,0x36,v37,0,CONST,0,0,False,0x7b103999,0,"0x835, 0x41"
"    0x3c: v3c = EQ v37(0x7b103999), v1f",0x36,v3c,"0,v37,v1f",EQ,0,0,False,0,0,"0x835, 0x41"
    0x824: v824(0x835) = CONST ,0x36,v824,0,CONST,0,0,False,0x835,0,"0x835, 0x41"
"    0x825: JUMPI v824(0x835), v3c",0x36,0,"0,v824,v3c",JUMPI,0,0,False,0,0,"0x835, 0x41"
    Begin block 0x835,0x835,0,0,0,0,0,False,0,0,"0x835, 0x41"
"    prev=[0x36], succ=[]",0x835,0,0,0,0,0,False,0,0,"0x835, 0x41"
    =================================,0x835,0,0,0,0,0,False,0,0,"0x835, 0x41"
    0x836: v836(0xdf) = CONST ,0x835,v836,0,CONST,0,0,False,0xdf,0,"0x835, 0x41"
    0x837: CALLPRIVATE v836(0xdf),0x835,0,"0,v836",CALLPRIVATE,0,0,False,0,0,"0x835, 0x41"
    Begin block 0x41,0x41,0,0,0,0,0,False,0,0,"0x835, 0x41"
"    prev=[0x36], succ=[0x838, 0x4c]",0x41,0,0,0,0,0,False,0,0,"0x838, 0x4c"
    =================================,0x41,0,0,0,0,0,False,0,0,"0x838, 0x4c"
    0x42: v42(0xabf158d5) = CONST ,0x41,v42,0,CONST,0,0,False,0xabf158d5,0,"0x838, 0x4c"
"    0x47: v47 = EQ v42(0xabf158d5), v1f",0x41,v47,"0,v42,v1f",EQ,0,0,False,0,0,"0x838, 0x4c"
    0x826: v826(0x838) = CONST ,0x41,v826,0,CONST,0,0,False,0x838,0,"0x838, 0x4c"
"    0x827: JUMPI v826(0x838), v47",0x41,0,"0,v826,v47",JUMPI,0,0,False,0,0,"0x838, 0x4c"
    Begin block 0x838,0x838,0,0,0,0,0,False,0,0,"0x838, 0x4c"
"    prev=[0x41], succ=[]",0x838,0,0,0,0,0,False,0,0,"0x838, 0x4c"
    =================================,0x838,0,0,0,0,0,False,0,0,"0x838, 0x4c"
    0x839: v839(0x103) = CONST ,0x838,v839,0,CONST,0,0,False,0x103,0,"0x838, 0x4c"
    0x83a: CALLPRIVATE v839(0x103),0x838,0,"0,v839",CALLPRIVATE,0,0,False,0,0,"0x838, 0x4c"
    Begin block 0x4c,0x4c,0,0,0,0,0,False,0,0,"0x838, 0x4c"
"    prev=[0x41], succ=[0x83b, 0x57]",0x4c,0,0,0,0,0,False,0,0,"0x83b, 0x57"
    =================================,0x4c,0,0,0,0,0,False,0,0,"0x83b, 0x57"
    0x4d: v4d(0xc4d66de8) = CONST ,0x4c,v4d,0,CONST,0,0,False,0xc4d66de8,0,"0x83b, 0x57"
"    0x52: v52 = EQ v4d(0xc4d66de8), v1f",0x4c,v52,"0,v4d,v1f",EQ,0,0,False,0,0,"0x83b, 0x57"
    0x828: v828(0x83b) = CONST ,0x4c,v828,0,CONST,0,0,False,0x83b,0,"0x83b, 0x57"
"    0x829: JUMPI v828(0x83b), v52",0x4c,0,"0,v828,v52",JUMPI,0,0,False,0,0,"0x83b, 0x57"
    Begin block 0x83b,0x83b,0,0,0,0,0,False,0,0,"0x83b, 0x57"
"    prev=[0x4c], succ=[]",0x83b,0,0,0,0,0,False,0,0,"0x83b, 0x57"
    =================================,0x83b,0,0,0,0,0,False,0,0,"0x83b, 0x57"
    0x83c: v83c(0x12c) = CONST ,0x83b,v83c,0,CONST,0,0,False,0x12c,0,"0x83b, 0x57"
    0x83d: CALLPRIVATE v83c(0x12c),0x83b,0,"0,v83c",CALLPRIVATE,0,0,False,0,0,"0x83b, 0x57"
    Begin block 0x57,0x57,0,0,0,0,0,False,0,0,"0x83b, 0x57"
"    prev=[0x4c], succ=[0x82c, 0x83e]",0x57,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    =================================,0x57,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    0x58: v58(0xc98cc002) = CONST ,0x57,v58,0,CONST,0,0,False,0xc98cc002,0,"0x82c, 0x83e"
"    0x5d: v5d = EQ v58(0xc98cc002), v1f",0x57,v5d,"0,v58,v1f",EQ,0,0,False,0,0,"0x82c, 0x83e"
    0x82a: v82a(0x83e) = CONST ,0x57,v82a,0,CONST,0,0,False,0x83e,0,"0x82c, 0x83e"
"    0x82b: JUMPI v82a(0x83e), v5d",0x57,0,"0,v82a,v5d",JUMPI,0,0,False,0,0,"0x82c, 0x83e"
    Begin block 0x82c,0x82c,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
"    prev=[0x10, 0x57], succ=[]",0x82c,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    =================================,0x82c,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    0x82d: v82d(0x62) = CONST ,0x82c,v82d,0,CONST,0,0,False,0x62,0,"0x82c, 0x83e"
    0x82e: CALLPRIVATE v82d(0x62),0x82c,0,"0,v82d",CALLPRIVATE,0,0,False,0,0,"0x82c, 0x83e"
    Begin block 0x83e,0x83e,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
"    prev=[0x57], succ=[]",0x83e,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    =================================,0x83e,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
    0x83f: v83f(0x152) = CONST ,0x83e,v83f,0,CONST,0,0,False,0x152,0,"0x82c, 0x83e"
    0x840: CALLPRIVATE v83f(0x152),0x83e,0,"0,v83f",CALLPRIVATE,0,0,False,0,0,"0x82c, 0x83e"
},0x83e,0,0,0,0,0,False,0,0,"0x82c, 0x83e"
"function logRewardParams(uint256,uint256,uint256)() public {",0x103,0,0,,logRewardParams,public,False,0,0,"0x82c, 0x83e"
    Begin block 0x103,0x103,0,0,0,logRewardParams,public,False,0,0,"0x82c, 0x83e"
"    prev=[], succ=[0x115, 0x119]",0x103,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
    =================================,0x103,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
    0x104: v104(0x7da) = CONST ,0x103,v104,0,CONST,logRewardParams,public,False,0x7da,0,"0x115, 0x119"
    0x107: v107(0x4) = CONST ,0x103,v107,0,CONST,logRewardParams,public,False,0x4,0,"0x115, 0x119"
    0x10a: v10a = CALLDATASIZE ,0x103,v10a,0,CALLDATASIZE,logRewardParams,public,False,0,0,"0x115, 0x119"
"    0x10b: v10b = SUB v10a, v107(0x4)",0x103,v10b,"0,v10a,v107",SUB,logRewardParams,public,False,0,0,"0x115, 0x119"
    0x10c: v10c(0x60) = CONST ,0x103,v10c,0,CONST,logRewardParams,public,False,0x60,0,"0x115, 0x119"
"    0x10f: v10f = LT v10b, v10c(0x60)",0x103,v10f,"0,v10b,v10c",LT,logRewardParams,public,False,0,0,"0x115, 0x119"
    0x110: v110 = ISZERO v10f,0x103,v110,"0,v10f",ISZERO,logRewardParams,public,False,0,0,"0x115, 0x119"
    0x111: v111(0x119) = CONST ,0x103,v111,0,CONST,logRewardParams,public,False,0x119,0,"0x115, 0x119"
"    0x114: JUMPI v111(0x119), v110",0x103,0,"0,v111,v110",JUMPI,logRewardParams,public,False,0,0,"0x115, 0x119"
    Begin block 0x115,0x115,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
"    prev=[0x103], succ=[]",0x115,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
    =================================,0x115,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
    0x115: v115(0x0) = CONST ,0x115,v115,0,CONST,logRewardParams,public,False,0x0,0,"0x115, 0x119"
"    0x118: REVERT v115(0x0), v115(0x0)",0x115,0,"0,v115,v115",REVERT,logRewardParams,public,False,0,0,"0x115, 0x119"
    Begin block 0x119,0x119,0,0,0,logRewardParams,public,False,0,0,"0x115, 0x119"
"    prev=[0x103], succ=[0x4bb]",0x119,0,0,0,logRewardParams,public,False,0,0,0x4bb
    =================================,0x119,0,0,0,logRewardParams,public,False,0,0,0x4bb
    0x11c: v11c = CALLDATALOAD v107(0x4),0x119,v11c,"0,v107",CALLDATALOAD,logRewardParams,public,False,0,0,0x4bb
    0x11e: v11e(0x20) = CONST ,0x119,v11e,0,CONST,logRewardParams,public,False,0x20,0,0x4bb
"    0x121: v121(0x24) = ADD v107(0x4), v11e(0x20)",0x119,v121,"0,v107,v11e",ADD,logRewardParams,public,False,0x24,0,0x4bb
    0x122: v122 = CALLDATALOAD v121(0x24),0x119,v122,"0,v121",CALLDATALOAD,logRewardParams,public,False,0,0,0x4bb
    0x124: v124(0x40) = CONST ,0x119,v124,0,CONST,logRewardParams,public,False,0x40,0,0x4bb
"    0x126: v126(0x44) = ADD v124(0x40), v107(0x4)",0x119,v126,"0,v124,v107",ADD,logRewardParams,public,False,0x44,0,0x4bb
    0x127: v127 = CALLDATALOAD v126(0x44),0x119,v127,"0,v126",CALLDATALOAD,logRewardParams,public,False,0,0,0x4bb
    0x128: v128(0x4bb) = CONST ,0x119,v128,0,CONST,logRewardParams,public,False,0x4bb,0,0x4bb
    0x12b: JUMP v128(0x4bb),0x119,0,"0,v128",JUMP,logRewardParams,public,False,0,0,0x4bb
    Begin block 0x4bb,0x4bb,0,0,0,logRewardParams,public,False,0,0,0x4bb
"    prev=[0x119], succ=[0x500, 0x504]",0x4bb,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
    =================================,0x4bb,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4bc: v4bc(0x0) = CONST ,0x4bb,v4bc,0,CONST,logRewardParams,public,False,0x0,0,"0x500, 0x504"
    0x4be: v4be = SLOAD v4bc(0x0),0x4bb,v4be,"0,v4bc",SLOAD,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4bf: v4bf(0x40) = CONST ,0x4bb,v4bf,0,CONST,logRewardParams,public,False,0x40,0,"0x500, 0x504"
    0x4c2: v4c2 = MLOAD v4bf(0x40),0x4bb,v4c2,"0,v4bf",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,"0x500, 0x504"
    0x4c3: v4c3(0xa1ef8f9) = CONST ,0x4bb,v4c3,0,CONST,logRewardParams,public,False,0xa1ef8f9,0,"0x500, 0x504"
    0x4c8: v4c8(0xe2) = CONST ,0x4bb,v4c8,0,CONST,logRewardParams,public,False,0xe2,0,"0x500, 0x504"
"    0x4ca: v4ca(0x287be3e400000000000000000000000000000000000000000000000000000000) = SHL v4c8(0xe2), v4c3(0xa1ef8f9)",0x4bb,v4ca,"0,v4c8,v4c3",SHL,logRewardParams,public,False,0x287be3e400000000000000000000000000000000000000000000000000000000,0,"0x500, 0x504"
"    0x4cc: MSTORE v4c2, v4ca(0x287be3e400000000000000000000000000000000000000000000000000000000)",0x4bb,logRewardParams&m0x40,"0,v4c2,v4ca",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40,"0x500, 0x504"
    0x4ce: v4ce = MLOAD v4bf(0x40),0x4bb,v4ce,"0,v4bf",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,"0x500, 0x504"
    0x4cf: v4cf = CALLER ,0x4bb,v4cf,0,CALLER,logRewardParams,public,True,0,0,"0x500, 0x504"
    0x4d1: v4d1(0x100) = CONST ,0x4bb,v4d1,0,CONST,logRewardParams,public,False,0x100,0,"0x500, 0x504"
"    0x4d5: v4d5 = DIV v4be, v4d1(0x100)",0x4bb,v4d5,"0,v4be,v4d1",DIV,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4d6: v4d6(0x1) = CONST ,0x4bb,v4d6,0,CONST,logRewardParams,public,False,0x1,0,"0x500, 0x504"
    0x4d8: v4d8(0x1) = CONST ,0x4bb,v4d8,0,CONST,logRewardParams,public,False,0x1,0,"0x500, 0x504"
    0x4da: v4da(0xa0) = CONST ,0x4bb,v4da,0,CONST,logRewardParams,public,False,0xa0,0,"0x500, 0x504"
"    0x4dc: v4dc(0x10000000000000000000000000000000000000000) = SHL v4da(0xa0), v4d8(0x1)",0x4bb,v4dc,"0,v4da,v4d8",SHL,logRewardParams,public,False,0x10000000000000000000000000000000000000000,0,"0x500, 0x504"
"    0x4dd: v4dd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4dc(0x10000000000000000000000000000000000000000), v4d6(0x1)",0x4bb,v4dd,"0,v4dc,v4d6",SUB,logRewardParams,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x500, 0x504"
"    0x4de: v4de = AND v4dd(0xffffffffffffffffffffffffffffffffffffffff), v4d5",0x4bb,v4de,"0,v4dd,v4d5",AND,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4e0: v4e0(0x287be3e4) = CONST ,0x4bb,v4e0,0,CONST,logRewardParams,public,False,0x287be3e4,0,"0x500, 0x504"
    0x4e6: v4e6(0x4) = CONST ,0x4bb,v4e6,0,CONST,logRewardParams,public,False,0x4,0,"0x500, 0x504"
"    0x4ea: v4ea = ADD v4c2, v4e6(0x4)",0x4bb,v4ea,"0,v4c2,v4e6",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x4,"0x500, 0x504"
    0x4ec: v4ec(0x20) = CONST ,0x4bb,v4ec,0,CONST,logRewardParams,public,False,0x20,0,"0x500, 0x504"
"    0x4f3: v4f3(0x0) = SUB v4c2, v4ce",0x4bb,v4f3,"0,v4c2,v4ce",SUB,logRewardParams,public,False,0x0,logRewardParams&m0x40-0x0,"0x500, 0x504"
"    0x4f4: v4f4(0x4) = ADD v4f3(0x0), v4e6(0x4)",0x4bb,v4f4,"0,v4f3,v4e6",ADD,logRewardParams,public,False,0x4,logRewardParams&m0x40-0x0+0x4,"0x500, 0x504"
    0x4f8: v4f8 = EXTCODESIZE v4de,0x4bb,v4f8,"0,v4de",EXTCODESIZE,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4f9: v4f9 = ISZERO v4f8,0x4bb,v4f9,"0,v4f8",ISZERO,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4fb: v4fb = ISZERO v4f9,0x4bb,v4fb,"0,v4f9",ISZERO,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x4fc: v4fc(0x504) = CONST ,0x4bb,v4fc,0,CONST,logRewardParams,public,False,0x504,0,"0x500, 0x504"
"    0x4ff: JUMPI v4fc(0x504), v4fb",0x4bb,0,"0,v4fc,v4fb",JUMPI,logRewardParams,public,False,0,0,"0x500, 0x504"
    Begin block 0x500,0x500,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
"    prev=[0x4bb], succ=[]",0x500,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
    =================================,0x500,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
    0x500: v500(0x0) = CONST ,0x500,v500,0,CONST,logRewardParams,public,False,0x0,0,"0x500, 0x504"
"    0x503: REVERT v500(0x0), v500(0x0)",0x500,0,"0,v500,v500",REVERT,logRewardParams,public,False,0,0,"0x500, 0x504"
    Begin block 0x504,0x504,0,0,0,logRewardParams,public,False,0,0,"0x500, 0x504"
"    prev=[0x4bb], succ=[0x50f, 0x518]",0x504,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
    =================================,0x504,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x506: v506 = GAS ,0x504,v506,0,GAS,logRewardParams,public,False,0,0,"0x50f, 0x518"
"    0x507: v507 = STATICCALL v506, v4de, v4ce, v4f4(0x4), v4ce, v4ec(0x20)",0x504,v507,"0,v506,v4de,v4ce,v4f4,v4ce,v4ec",STATICCALL,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x508: v508 = ISZERO v507,0x504,v508,"0,v507",ISZERO,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x50a: v50a = ISZERO v508,0x504,v50a,"0,v508",ISZERO,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x50b: v50b(0x518) = CONST ,0x504,v50b,0,CONST,logRewardParams,public,False,0x518,0,"0x50f, 0x518"
"    0x50e: JUMPI v50b(0x518), v50a",0x504,0,"0,v50b,v50a",JUMPI,logRewardParams,public,False,0,0,"0x50f, 0x518"
    Begin block 0x50f,0x50f,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
"    prev=[0x504], succ=[]",0x50f,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
    =================================,0x50f,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x50f: v50f = RETURNDATASIZE ,0x50f,v50f,0,RETURNDATASIZE,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x510: v510(0x0) = CONST ,0x50f,v510,0,CONST,logRewardParams,public,False,0x0,0,"0x50f, 0x518"
"    0x513: RETURNDATACOPY v510(0x0), v510(0x0), v50f",0x50f,0,"0,v510,v510,v50f",RETURNDATACOPY,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x514: v514 = RETURNDATASIZE ,0x50f,v514,0,RETURNDATASIZE,logRewardParams,public,False,0,0,"0x50f, 0x518"
    0x515: v515(0x0) = CONST ,0x50f,v515,0,CONST,logRewardParams,public,False,0x0,0,"0x50f, 0x518"
"    0x517: REVERT v515(0x0), v514",0x50f,0,"0,v515,v514",REVERT,logRewardParams,public,False,0,0,"0x50f, 0x518"
    Begin block 0x518,0x518,0,0,0,logRewardParams,public,False,0,0,"0x50f, 0x518"
"    prev=[0x504], succ=[0x52a, 0x52e]",0x518,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    =================================,0x518,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    0x51d: v51d(0x40) = CONST ,0x518,v51d,0,CONST,logRewardParams,public,False,0x40,0,"0x52a, 0x52e"
    0x51f: v51f = MLOAD v51d(0x40),0x518,v51f,"0,v51d",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,"0x52a, 0x52e"
    0x520: v520 = RETURNDATASIZE ,0x518,v520,0,RETURNDATASIZE,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    0x521: v521(0x20) = CONST ,0x518,v521,0,CONST,logRewardParams,public,False,0x20,0,"0x52a, 0x52e"
"    0x524: v524 = LT v520, v521(0x20)",0x518,v524,"0,v520,v521",LT,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    0x525: v525 = ISZERO v524,0x518,v525,"0,v524",ISZERO,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    0x526: v526(0x52e) = CONST ,0x518,v526,0,CONST,logRewardParams,public,False,0x52e,0,"0x52a, 0x52e"
"    0x529: JUMPI v526(0x52e), v525",0x518,0,"0,v526,v525",JUMPI,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    Begin block 0x52a,0x52a,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
"    prev=[0x518], succ=[]",0x52a,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    =================================,0x52a,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    0x52a: v52a(0x0) = CONST ,0x52a,v52a,0,CONST,logRewardParams,public,False,0x0,0,"0x52a, 0x52e"
"    0x52d: REVERT v52a(0x0), v52a(0x0)",0x52a,0,"0,v52a,v52a",REVERT,logRewardParams,public,False,0,0,"0x52a, 0x52e"
    Begin block 0x52e,0x52e,0,0,0,logRewardParams,public,False,0,0,"0x52a, 0x52e"
"    prev=[0x518], succ=[0x53f, 0x575]",0x52e,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
    =================================,0x52e,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
    0x530: v530 = MLOAD v51f,0x52e,v530,"0,v51f",MLOAD,logRewardParams,public,False,0,0,"0x53f, 0x575"
    0x531: v531(0x1) = CONST ,0x52e,v531,0,CONST,logRewardParams,public,False,0x1,0,"0x53f, 0x575"
    0x533: v533(0x1) = CONST ,0x52e,v533,0,CONST,logRewardParams,public,False,0x1,0,"0x53f, 0x575"
    0x535: v535(0xa0) = CONST ,0x52e,v535,0,CONST,logRewardParams,public,False,0xa0,0,"0x53f, 0x575"
"    0x537: v537(0x10000000000000000000000000000000000000000) = SHL v535(0xa0), v533(0x1)",0x52e,v537,"0,v535,v533",SHL,logRewardParams,public,False,0x10000000000000000000000000000000000000000,0,"0x53f, 0x575"
"    0x538: v538(0xffffffffffffffffffffffffffffffffffffffff) = SUB v537(0x10000000000000000000000000000000000000000), v531(0x1)",0x52e,v538,"0,v537,v531",SUB,logRewardParams,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x53f, 0x575"
"    0x539: v539 = AND v538(0xffffffffffffffffffffffffffffffffffffffff), v530",0x52e,v539,"0,v538,v530",AND,logRewardParams,public,False,0,0,"0x53f, 0x575"
"    0x53a: v53a = EQ v539, v4cf",0x52e,v53a,"0,v539,v4cf",EQ,logRewardParams,public,False,0,0,"0x53f, 0x575"
    0x53b: v53b(0x575) = CONST ,0x52e,v53b,0,CONST,logRewardParams,public,False,0x575,0,"0x53f, 0x575"
"    0x53e: JUMPI v53b(0x575), v53a",0x52e,0,"0,v53b,v53a",JUMPI,logRewardParams,public,False,0,0,"0x53f, 0x575"
    Begin block 0x53f,0x53f,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
"    prev=[0x52e], succ=[]",0x53f,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
    =================================,0x53f,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
    0x53f: v53f(0x40) = CONST ,0x53f,v53f,0,CONST,logRewardParams,public,False,0x40,0,"0x53f, 0x575"
    0x541: v541 = MLOAD v53f(0x40),0x53f,v541,"0,v53f",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,"0x53f, 0x575"
    0x542: v542(0x461bcd) = CONST ,0x53f,v542,0,CONST,logRewardParams,public,False,0x461bcd,0,"0x53f, 0x575"
    0x546: v546(0xe5) = CONST ,0x53f,v546,0,CONST,logRewardParams,public,False,0xe5,0,"0x53f, 0x575"
"    0x548: v548(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v546(0xe5), v542(0x461bcd)",0x53f,v548,"0,v546,v542",SHL,logRewardParams,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x53f, 0x575"
"    0x54a: MSTORE v541, v548(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x53f,logRewardParams&m0x40,"0,v541,v548",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40,"0x53f, 0x575"
    0x54b: v54b(0x4) = CONST ,0x53f,v54b,0,CONST,logRewardParams,public,False,0x4,0,"0x53f, 0x575"
"    0x54d: v54d = ADD v54b(0x4), v541",0x53f,v54d,"0,v54b,v541",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x4,"0x53f, 0x575"
    0x550: v550(0x20) = CONST ,0x53f,v550,0,CONST,logRewardParams,public,False,0x20,0,"0x53f, 0x575"
"    0x552: v552 = ADD v550(0x20), v54d",0x53f,v552,"0,v550,v54d",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x4+0x20,"0x53f, 0x575"
"    0x555: v555(0x20) = SUB v552, v54d",0x53f,v555,"0,v552,v54d",SUB,logRewardParams,public,False,0x20,logRewardParams&m0x40+0x4+0x20-0x20,"0x53f, 0x575"
"    0x557: MSTORE v54d, v555(0x20)",0x53f,logRewardParams&m0x40+0x4,"0,v54d,v555",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40+0x4,"0x53f, 0x575"
    0x558: v558(0x21) = CONST ,0x53f,v558,0,CONST,logRewardParams,public,False,0x21,0,"0x53f, 0x575"
"    0x55b: MSTORE v552, v558(0x21)",0x53f,logRewardParams&m0x40+0x4+0x20,"0,v552,v558",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40+0x4+0x20,"0x53f, 0x575"
    0x55c: v55c(0x20) = CONST ,0x53f,v55c,0,CONST,logRewardParams,public,False,0x20,0,"0x53f, 0x575"
"    0x55e: v55e = ADD v55c(0x20), v552",0x53f,v55e,"0,v55c,v552",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x4+0x20+0x20,"0x53f, 0x575"
    0x560: v560(0x724) = CONST ,0x53f,v560,0,CONST,logRewardParams,public,False,0x724,0,"0x53f, 0x575"
    0x563: v563(0x21) = CONST ,0x53f,v563,0,CONST,logRewardParams,public,False,0x21,0,"0x53f, 0x575"
"    0x566: CODECOPY v55e, v560(0x724), v563(0x21)",0x53f,0,"0,v55e,v560,v563",CODECOPY,logRewardParams,public,False,0,0,"0x53f, 0x575"
    0x567: v567(0x40) = CONST ,0x53f,v567,0,CONST,logRewardParams,public,False,0x40,0,"0x53f, 0x575"
"    0x569: v569 = ADD v567(0x40), v55e",0x53f,v569,"0,v567,v55e",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x4+0x20+0x20+0x40,"0x53f, 0x575"
    0x56d: v56d(0x40) = CONST ,0x53f,v56d,0,CONST,logRewardParams,public,False,0x40,0,"0x53f, 0x575"
    0x56f: v56f = MLOAD v56d(0x40),0x53f,v56f,"0,v56d",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,"0x53f, 0x575"
"    0x572: v572(0x84) = SUB v569, v56f",0x53f,v572,"0,v569,v56f",SUB,logRewardParams,public,False,0x84,logRewardParams&m0x40+0x4+0x20+0x20+0x40-0x84,"0x53f, 0x575"
"    0x574: REVERT v56f, v572(0x84)",0x53f,0,"0,v56f,v572",REVERT,logRewardParams,public,False,0,0,"0x53f, 0x575"
    Begin block 0x575,0x575,0,0,0,logRewardParams,public,False,0,0,"0x53f, 0x575"
"    prev=[0x52e], succ=[0x7da]",0x575,0,0,0,logRewardParams,public,False,0,0,0x7da
    =================================,0x575,0,0,0,logRewardParams,public,False,0,0,0x7da
    0x576: v576(0x40) = CONST ,0x575,v576,0,CONST,logRewardParams,public,False,0x40,0,0x7da
    0x579: v579 = MLOAD v576(0x40),0x575,v579,"0,v576",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,0x7da
"    0x57c: MSTORE v579, v11c",0x575,logRewardParams&m0x40,"0,v579,v11c",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40,0x7da
    0x57d: v57d(0x20) = CONST ,0x575,v57d,0,CONST,logRewardParams,public,False,0x20,0,0x7da
"    0x580: v580 = ADD v579, v57d(0x20)",0x575,v580,"0,v579,v57d",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x20,0x7da
"    0x583: MSTORE v580, v122",0x575,logRewardParams&m0x40+0x20,"0,v580,v122",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40+0x20,0x7da
"    0x586: v586 = ADD v576(0x40), v579",0x575,v586,"0,v576,v579",ADD,logRewardParams,public,False,0,logRewardParams&m0x40+0x40,0x7da
"    0x589: MSTORE v586, v127",0x575,logRewardParams&m0x40+0x40,"0,v586,v127",MSTORE,logRewardParams,public,False,0,logRewardParams&m0x40+0x40,0x7da
    0x58b: v58b = MLOAD v576(0x40),0x575,v58b,"0,v576",MLOAD,logRewardParams,public,False,0,logRewardParams&m0x40,0x7da
    0x58c: v58c(0x801c2d11f1d1780f228c2a497cf5eae033694c8eb057d636044683def26e03ec) = CONST ,0x575,v58c,0,CONST,logRewardParams,public,False,0x801c2d11f1d1780f228c2a497cf5eae033694c8eb057d636044683def26e03ec,0,0x7da
"    0x5b0: v5b0(0x0) = SUB v579, v58b",0x575,v5b0,"0,v579,v58b",SUB,logRewardParams,public,False,0x0,logRewardParams&m0x40-0x0,0x7da
    0x5b1: v5b1(0x60) = CONST ,0x575,v5b1,0,CONST,logRewardParams,public,False,0x60,0,0x7da
"    0x5b3: v5b3(0x60) = ADD v5b1(0x60), v5b0(0x0)",0x575,v5b3,"0,v5b1,v5b0",ADD,logRewardParams,public,False,0x60,logRewardParams&m0x40-0x0+0x60,0x7da
"    0x5b5: LOG1 v58b, v5b3(0x60), v58c(0x801c2d11f1d1780f228c2a497cf5eae033694c8eb057d636044683def26e03ec)",0x575,0,"0,v58b,v5b3,v58c",LOG1,logRewardParams,public,False,0,0,0x7da
    0x5b9: JUMP v104(0x7da),0x575,0,"0,v104",JUMP,logRewardParams,public,False,0,0,0x7da
    Begin block 0x7da,0x7da,0,0,0,logRewardParams,public,False,0,0,0x7da
"    prev=[0x575], succ=[]",0x7da,0,0,0,logRewardParams,public,False,0,0,0x7da
    =================================,0x7da,0,0,0,logRewardParams,public,False,0,0,0x7da
    0x7db: STOP ,0x7da,0,0,STOP,logRewardParams,public,False,0,0,0x7da
},0x7da,0,0,0,logRewardParams,public,False,0,0,0x7da
function initialize(address)() public {,0x12c,0,0,public,initialize,public,False,0,0,0x7da
    Begin block 0x12c,0x12c,0,0,0,initialize,public,False,0,0,0x7da
"    prev=[], succ=[0x13e, 0x142]",0x12c,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
    =================================,0x12c,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
    0x12d: v12d(0x7fb) = CONST ,0x12c,v12d,0,CONST,initialize,public,False,0x7fb,0,"0x13e, 0x142"
    0x130: v130(0x4) = CONST ,0x12c,v130,0,CONST,initialize,public,False,0x4,0,"0x13e, 0x142"
    0x133: v133 = CALLDATASIZE ,0x12c,v133,0,CALLDATASIZE,initialize,public,False,0,0,"0x13e, 0x142"
"    0x134: v134 = SUB v133, v130(0x4)",0x12c,v134,"0,v133,v130",SUB,initialize,public,False,0,0,"0x13e, 0x142"
    0x135: v135(0x20) = CONST ,0x12c,v135,0,CONST,initialize,public,False,0x20,0,"0x13e, 0x142"
"    0x138: v138 = LT v134, v135(0x20)",0x12c,v138,"0,v134,v135",LT,initialize,public,False,0,0,"0x13e, 0x142"
    0x139: v139 = ISZERO v138,0x12c,v139,"0,v138",ISZERO,initialize,public,False,0,0,"0x13e, 0x142"
    0x13a: v13a(0x142) = CONST ,0x12c,v13a,0,CONST,initialize,public,False,0x142,0,"0x13e, 0x142"
"    0x13d: JUMPI v13a(0x142), v139",0x12c,0,"0,v13a,v139",JUMPI,initialize,public,False,0,0,"0x13e, 0x142"
    Begin block 0x13e,0x13e,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
"    prev=[0x12c], succ=[]",0x13e,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
    =================================,0x13e,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
    0x13e: v13e(0x0) = CONST ,0x13e,v13e,0,CONST,initialize,public,False,0x0,0,"0x13e, 0x142"
"    0x141: REVERT v13e(0x0), v13e(0x0)",0x13e,0,"0,v13e,v13e",REVERT,initialize,public,False,0,0,"0x13e, 0x142"
    Begin block 0x142,0x142,0,0,0,initialize,public,False,0,0,"0x13e, 0x142"
"    prev=[0x12c], succ=[0x5ba]",0x142,0,0,0,initialize,public,False,0,0,0x5ba
    =================================,0x142,0,0,0,initialize,public,False,0,0,0x5ba
    0x144: v144 = CALLDATALOAD v130(0x4),0x142,v144,"0,v130",CALLDATALOAD,initialize,public,False,0,0,0x5ba
    0x145: v145(0x1) = CONST ,0x142,v145,0,CONST,initialize,public,False,0x1,0,0x5ba
    0x147: v147(0x1) = CONST ,0x142,v147,0,CONST,initialize,public,False,0x1,0,0x5ba
    0x149: v149(0xa0) = CONST ,0x142,v149,0,CONST,initialize,public,False,0xa0,0,0x5ba
"    0x14b: v14b(0x10000000000000000000000000000000000000000) = SHL v149(0xa0), v147(0x1)",0x142,v14b,"0,v149,v147",SHL,initialize,public,False,0x10000000000000000000000000000000000000000,0,0x5ba
"    0x14c: v14c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v14b(0x10000000000000000000000000000000000000000), v145(0x1)",0x142,v14c,"0,v14b,v145",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x5ba
"    0x14d: v14d = AND v14c(0xffffffffffffffffffffffffffffffffffffffff), v144",0x142,v14d,"0,v14c,v144",AND,initialize,public,False,0,0,0x5ba
    0x14e: v14e(0x5ba) = CONST ,0x142,v14e,0,CONST,initialize,public,False,0x5ba,0,0x5ba
    0x151: JUMP v14e(0x5ba),0x142,0,"0,v14e",JUMP,initialize,public,False,0,0,0x5ba
    Begin block 0x5ba,0x5ba,0,0,0,initialize,public,False,0,0,0x5ba
"    prev=[0x142], succ=[0x5c6, 0x603]",0x5ba,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
    =================================,0x5ba,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
    0x5bb: v5bb(0x0) = CONST ,0x5ba,v5bb,0,CONST,initialize,public,False,0x0,0,"0x5c6, 0x603"
    0x5bd: v5bd = SLOAD v5bb(0x0),0x5ba,v5bd,"0,v5bb",SLOAD,initialize,public,False,0,0,"0x5c6, 0x603"
    0x5be: v5be(0xff) = CONST ,0x5ba,v5be,0,CONST,initialize,public,False,0xff,0,"0x5c6, 0x603"
"    0x5c0: v5c0 = AND v5be(0xff), v5bd",0x5ba,v5c0,"0,v5be,v5bd",AND,initialize,public,False,0,0,"0x5c6, 0x603"
    0x5c1: v5c1 = ISZERO v5c0,0x5ba,v5c1,"0,v5c0",ISZERO,initialize,public,False,0,0,"0x5c6, 0x603"
    0x5c2: v5c2(0x603) = CONST ,0x5ba,v5c2,0,CONST,initialize,public,False,0x603,0,"0x5c6, 0x603"
"    0x5c5: JUMPI v5c2(0x603), v5c1",0x5ba,0,"0,v5c2,v5c1",JUMPI,initialize,public,False,0,0,"0x5c6, 0x603"
    Begin block 0x5c6,0x5c6,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
"    prev=[0x5ba], succ=[]",0x5c6,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
    =================================,0x5c6,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
    0x5c6: v5c6(0x40) = CONST ,0x5c6,v5c6,0,CONST,initialize,public,False,0x40,0,"0x5c6, 0x603"
    0x5c9: v5c9 = MLOAD v5c6(0x40),0x5c6,v5c9,"0,v5c6",MLOAD,initialize,public,False,0,initialize&m0x40,"0x5c6, 0x603"
    0x5ca: v5ca(0x461bcd) = CONST ,0x5c6,v5ca,0,CONST,initialize,public,False,0x461bcd,0,"0x5c6, 0x603"
    0x5ce: v5ce(0xe5) = CONST ,0x5c6,v5ce,0,CONST,initialize,public,False,0xe5,0,"0x5c6, 0x603"
"    0x5d0: v5d0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5ce(0xe5), v5ca(0x461bcd)",0x5c6,v5d0,"0,v5ce,v5ca",SHL,initialize,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x5c6, 0x603"
"    0x5d2: MSTORE v5c9, v5d0(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x5c6,initialize&m0x40,"0,v5c9,v5d0",MSTORE,initialize,public,False,0,initialize&m0x40,"0x5c6, 0x603"
    0x5d3: v5d3(0x20) = CONST ,0x5c6,v5d3,0,CONST,initialize,public,False,0x20,0,"0x5c6, 0x603"
    0x5d5: v5d5(0x4) = CONST ,0x5c6,v5d5,0,CONST,initialize,public,False,0x4,0,"0x5c6, 0x603"
"    0x5d8: v5d8 = ADD v5c9, v5d5(0x4)",0x5c6,v5d8,"0,v5c9,v5d5",ADD,initialize,public,False,0,initialize&m0x40+0x4,"0x5c6, 0x603"
"    0x5d9: MSTORE v5d8, v5d3(0x20)",0x5c6,initialize&m0x40+0x4,"0,v5d8,v5d3",MSTORE,initialize,public,False,0,initialize&m0x40+0x4,"0x5c6, 0x603"
    0x5da: v5da(0xe) = CONST ,0x5c6,v5da,0,CONST,initialize,public,False,0xe,0,"0x5c6, 0x603"
    0x5dc: v5dc(0x24) = CONST ,0x5c6,v5dc,0,CONST,initialize,public,False,0x24,0,"0x5c6, 0x603"
"    0x5df: v5df = ADD v5c9, v5dc(0x24)",0x5c6,v5df,"0,v5c9,v5dc",ADD,initialize,public,False,0,initialize&m0x40+0x24,"0x5c6, 0x603"
"    0x5e0: MSTORE v5df, v5da(0xe)",0x5c6,initialize&m0x40+0x24,"0,v5df,v5da",MSTORE,initialize,public,False,0,initialize&m0x40+0x24,"0x5c6, 0x603"
    0x5e1: v5e1(0x185b1c9958591e481a5b9a5d1959) = CONST ,0x5c6,v5e1,0,CONST,initialize,public,False,0x185b1c9958591e481a5b9a5d1959,0,"0x5c6, 0x603"
    0x5f0: v5f0(0x92) = CONST ,0x5c6,v5f0,0,CONST,initialize,public,False,0x92,0,"0x5c6, 0x603"
"    0x5f2: v5f2(0x616c726561647920696e69746564000000000000000000000000000000000000) = SHL v5f0(0x92), v5e1(0x185b1c9958591e481a5b9a5d1959)",0x5c6,v5f2,"0,v5f0,v5e1",SHL,initialize,public,False,0x616c726561647920696e69746564000000000000000000000000000000000000,0,"0x5c6, 0x603"
    0x5f3: v5f3(0x44) = CONST ,0x5c6,v5f3,0,CONST,initialize,public,False,0x44,0,"0x5c6, 0x603"
"    0x5f6: v5f6 = ADD v5c9, v5f3(0x44)",0x5c6,v5f6,"0,v5c9,v5f3",ADD,initialize,public,False,0,initialize&m0x40+0x44,"0x5c6, 0x603"
"    0x5f7: MSTORE v5f6, v5f2(0x616c726561647920696e69746564000000000000000000000000000000000000)",0x5c6,initialize&m0x40+0x44,"0,v5f6,v5f2",MSTORE,initialize,public,False,0,initialize&m0x40+0x44,"0x5c6, 0x603"
    0x5f9: v5f9 = MLOAD v5c6(0x40),0x5c6,v5f9,"0,v5c6",MLOAD,initialize,public,False,0,initialize&m0x40,"0x5c6, 0x603"
"    0x5fd: v5fd(0x0) = SUB v5c9, v5f9",0x5c6,v5fd,"0,v5c9,v5f9",SUB,initialize,public,False,0x0,initialize&m0x40-0x0,"0x5c6, 0x603"
    0x5fe: v5fe(0x64) = CONST ,0x5c6,v5fe,0,CONST,initialize,public,False,0x64,0,"0x5c6, 0x603"
"    0x600: v600(0x64) = ADD v5fe(0x64), v5fd(0x0)",0x5c6,v600,"0,v5fe,v5fd",ADD,initialize,public,False,0x64,initialize&m0x40-0x0+0x64,"0x5c6, 0x603"
"    0x602: REVERT v5f9, v600(0x64)",0x5c6,0,"0,v5f9,v600",REVERT,initialize,public,False,0,0,"0x5c6, 0x603"
    Begin block 0x603,0x603,0,0,0,initialize,public,False,0,0,"0x5c6, 0x603"
"    prev=[0x5ba], succ=[0x7fb]",0x603,0,0,0,initialize,public,False,0,0,0x7fb
    =================================,0x603,0,0,0,initialize,public,False,0,0,0x7fb
    0x604: v604(0x0) = CONST ,0x603,v604,0,CONST,initialize,public,False,0x0,0,0x7fb
    0x607: v607 = SLOAD v604(0x0),0x603,v607,"0,v604",SLOAD,initialize,public,False,0,0,0x7fb
    0x608: v608(0x1) = CONST ,0x603,v608,0,CONST,initialize,public,False,0x1,0,0x7fb
    0x60a: v60a(0x1) = CONST ,0x603,v60a,0,CONST,initialize,public,False,0x1,0,0x7fb
    0x60c: v60c(0xa0) = CONST ,0x603,v60c,0,CONST,initialize,public,False,0xa0,0,0x7fb
"    0x60e: v60e(0x10000000000000000000000000000000000000000) = SHL v60c(0xa0), v60a(0x1)",0x603,v60e,"0,v60c,v60a",SHL,initialize,public,False,0x10000000000000000000000000000000000000000,0,0x7fb
"    0x60f: v60f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v60e(0x10000000000000000000000000000000000000000), v608(0x1)",0x603,v60f,"0,v60e,v608",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7fb
"    0x612: v612 = AND v14d, v60f(0xffffffffffffffffffffffffffffffffffffffff)",0x603,v612,"0,v14d,v60f",AND,initialize,public,False,0,0,0x7fb
    0x613: v613(0x100) = CONST ,0x603,v613,0,CONST,initialize,public,False,0x100,0,0x7fb
"    0x616: v616 = MUL v613(0x100), v612",0x603,v616,"0,v613,v612",MUL,initialize,public,False,0,0,0x7fb
    0x617: v617(0x100) = CONST ,0x603,v617,0,CONST,initialize,public,False,0x100,0,0x7fb
    0x61a: v61a(0x1) = CONST ,0x603,v61a,0,CONST,initialize,public,False,0x1,0,0x7fb
    0x61c: v61c(0xa8) = CONST ,0x603,v61c,0,CONST,initialize,public,False,0xa8,0,0x7fb
"    0x61e: v61e(0x1000000000000000000000000000000000000000000) = SHL v61c(0xa8), v61a(0x1)",0x603,v61e,"0,v61c,v61a",SHL,initialize,public,False,0x1000000000000000000000000000000000000000000,0,0x7fb
"    0x61f: v61f(0xffffffffffffffffffffffffffffffffffffffff00) = SUB v61e(0x1000000000000000000000000000000000000000000), v617(0x100)",0x603,v61f,"0,v61e,v617",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff00,0,0x7fb
    0x620: v620(0xffffffffffffffffffffff0000000000000000000000000000000000000000ff) = NOT v61f(0xffffffffffffffffffffffffffffffffffffffff00),0x603,v620,"0,v61f",NOT,initialize,public,False,0xffffffffffffffffffffff0000000000000000000000000000000000000000ff,0,0x7fb
    0x621: v621(0xff) = CONST ,0x603,v621,0,CONST,initialize,public,False,0xff,0,0x7fb
    0x623: v623(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v621(0xff),0x603,v623,"0,v621",NOT,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x7fb
"    0x626: v626 = AND v607, v623(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)",0x603,v626,"0,v607,v623",AND,initialize,public,False,0,0,0x7fb
    0x627: v627(0x1) = CONST ,0x603,v627,0,CONST,initialize,public,False,0x1,0,0x7fb
"    0x629: v629 = OR v627(0x1), v626",0x603,v629,"0,v627,v626",OR,initialize,public,False,0,0,0x7fb
"    0x62d: v62d = AND v629, v620(0xffffffffffffffffffffff0000000000000000000000000000000000000000ff)",0x603,v62d,"0,v629,v620",AND,initialize,public,False,0,0,0x7fb
"    0x631: v631 = OR v62d, v616",0x603,v631,"0,v62d,v616",OR,initialize,public,False,0,0,0x7fb
"    0x633: SSTORE v604(0x0), v631",0x603,0,"0,v604,v631",SSTORE,initialize,public,False,0,0,0x7fb
    0x634: JUMP v12d(0x7fb),0x603,0,"0,v12d",JUMP,initialize,public,False,0,0,0x7fb
    Begin block 0x7fb,0x7fb,0,0,0,initialize,public,False,0,0,0x7fb
"    prev=[0x603], succ=[]",0x7fb,0,0,0,initialize,public,False,0,0,0x7fb
    =================================,0x7fb,0,0,0,initialize,public,False,0,0,0x7fb
    0x7fc: STOP ,0x7fb,0,0,STOP,initialize,public,False,0,0,0x7fb
},0x7fb,0,0,0,initialize,public,False,0,0,0x7fb
"function logUpdateCommissionRate(uint256,uint256,uint256)() public {",0x152,0,0,,logUpdateCommissionRate,public,False,0,0,0x7fb
    Begin block 0x152,0x152,0,0,0,logUpdateCommissionRate,public,False,0,0,0x7fb
"    prev=[], succ=[0x164, 0x168]",0x152,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    =================================,0x152,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    0x153: v153(0x81c) = CONST ,0x152,v153,0,CONST,logUpdateCommissionRate,public,False,0x81c,0,"0x164, 0x168"
    0x156: v156(0x4) = CONST ,0x152,v156,0,CONST,logUpdateCommissionRate,public,False,0x4,0,"0x164, 0x168"
    0x159: v159 = CALLDATASIZE ,0x152,v159,0,CALLDATASIZE,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
"    0x15a: v15a = SUB v159, v156(0x4)",0x152,v15a,"0,v159,v156",SUB,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    0x15b: v15b(0x60) = CONST ,0x152,v15b,0,CONST,logUpdateCommissionRate,public,False,0x60,0,"0x164, 0x168"
"    0x15e: v15e = LT v15a, v15b(0x60)",0x152,v15e,"0,v15a,v15b",LT,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    0x15f: v15f = ISZERO v15e,0x152,v15f,"0,v15e",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    0x160: v160(0x168) = CONST ,0x152,v160,0,CONST,logUpdateCommissionRate,public,False,0x168,0,"0x164, 0x168"
"    0x163: JUMPI v160(0x168), v15f",0x152,0,"0,v160,v15f",JUMPI,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    Begin block 0x164,0x164,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
"    prev=[0x152], succ=[]",0x164,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    =================================,0x164,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    0x164: v164(0x0) = CONST ,0x164,v164,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x164, 0x168"
"    0x167: REVERT v164(0x0), v164(0x0)",0x164,0,"0,v164,v164",REVERT,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
    Begin block 0x168,0x168,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x164, 0x168"
"    prev=[0x152], succ=[0x635]",0x168,0,0,0,logUpdateCommissionRate,public,False,0,0,0x635
    =================================,0x168,0,0,0,logUpdateCommissionRate,public,False,0,0,0x635
    0x16b: v16b = CALLDATALOAD v156(0x4),0x168,v16b,"0,v156",CALLDATALOAD,logUpdateCommissionRate,public,False,0,0,0x635
    0x16d: v16d(0x20) = CONST ,0x168,v16d,0,CONST,logUpdateCommissionRate,public,False,0x20,0,0x635
"    0x170: v170(0x24) = ADD v156(0x4), v16d(0x20)",0x168,v170,"0,v156,v16d",ADD,logUpdateCommissionRate,public,False,0x24,0,0x635
    0x171: v171 = CALLDATALOAD v170(0x24),0x168,v171,"0,v170",CALLDATALOAD,logUpdateCommissionRate,public,False,0,0,0x635
    0x173: v173(0x40) = CONST ,0x168,v173,0,CONST,logUpdateCommissionRate,public,False,0x40,0,0x635
"    0x175: v175(0x44) = ADD v173(0x40), v156(0x4)",0x168,v175,"0,v173,v156",ADD,logUpdateCommissionRate,public,False,0x44,0,0x635
    0x176: v176 = CALLDATALOAD v175(0x44),0x168,v176,"0,v175",CALLDATALOAD,logUpdateCommissionRate,public,False,0,0,0x635
    0x177: v177(0x635) = CONST ,0x168,v177,0,CONST,logUpdateCommissionRate,public,False,0x635,0,0x635
    0x17a: JUMP v177(0x635),0x168,0,"0,v177",JUMP,logUpdateCommissionRate,public,False,0,0,0x635
    Begin block 0x635,0x635,0,0,0,logUpdateCommissionRate,public,False,0,0,0x635
"    prev=[0x168], succ=[0x67a, 0x67e]",0x635,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    =================================,0x635,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x636: v636(0x0) = CONST ,0x635,v636,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x67a, 0x67e"
    0x638: v638 = SLOAD v636(0x0),0x635,v638,"0,v636",SLOAD,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x639: v639(0x40) = CONST ,0x635,v639,0,CONST,logUpdateCommissionRate,public,False,0x40,0,"0x67a, 0x67e"
    0x63c: v63c = MLOAD v639(0x40),0x635,v63c,"0,v639",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x67a, 0x67e"
    0x63d: v63d(0xa1ef8f9) = CONST ,0x635,v63d,0,CONST,logUpdateCommissionRate,public,False,0xa1ef8f9,0,"0x67a, 0x67e"
    0x642: v642(0xe2) = CONST ,0x635,v642,0,CONST,logUpdateCommissionRate,public,False,0xe2,0,"0x67a, 0x67e"
"    0x644: v644(0x287be3e400000000000000000000000000000000000000000000000000000000) = SHL v642(0xe2), v63d(0xa1ef8f9)",0x635,v644,"0,v642,v63d",SHL,logUpdateCommissionRate,public,False,0x287be3e400000000000000000000000000000000000000000000000000000000,0,"0x67a, 0x67e"
"    0x646: MSTORE v63c, v644(0x287be3e400000000000000000000000000000000000000000000000000000000)",0x635,logUpdateCommissionRate&m0x40,"0,v63c,v644",MSTORE,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x67a, 0x67e"
    0x648: v648 = MLOAD v639(0x40),0x635,v648,"0,v639",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x67a, 0x67e"
    0x649: v649 = CALLER ,0x635,v649,0,CALLER,logUpdateCommissionRate,public,True,0,0,"0x67a, 0x67e"
    0x64b: v64b(0x100) = CONST ,0x635,v64b,0,CONST,logUpdateCommissionRate,public,False,0x100,0,"0x67a, 0x67e"
"    0x64f: v64f = DIV v638, v64b(0x100)",0x635,v64f,"0,v638,v64b",DIV,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x650: v650(0x1) = CONST ,0x635,v650,0,CONST,logUpdateCommissionRate,public,False,0x1,0,"0x67a, 0x67e"
    0x652: v652(0x1) = CONST ,0x635,v652,0,CONST,logUpdateCommissionRate,public,False,0x1,0,"0x67a, 0x67e"
    0x654: v654(0xa0) = CONST ,0x635,v654,0,CONST,logUpdateCommissionRate,public,False,0xa0,0,"0x67a, 0x67e"
"    0x656: v656(0x10000000000000000000000000000000000000000) = SHL v654(0xa0), v652(0x1)",0x635,v656,"0,v654,v652",SHL,logUpdateCommissionRate,public,False,0x10000000000000000000000000000000000000000,0,"0x67a, 0x67e"
"    0x657: v657(0xffffffffffffffffffffffffffffffffffffffff) = SUB v656(0x10000000000000000000000000000000000000000), v650(0x1)",0x635,v657,"0,v656,v650",SUB,logUpdateCommissionRate,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x67a, 0x67e"
"    0x658: v658 = AND v657(0xffffffffffffffffffffffffffffffffffffffff), v64f",0x635,v658,"0,v657,v64f",AND,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x65a: v65a(0x287be3e4) = CONST ,0x635,v65a,0,CONST,logUpdateCommissionRate,public,False,0x287be3e4,0,"0x67a, 0x67e"
    0x660: v660(0x4) = CONST ,0x635,v660,0,CONST,logUpdateCommissionRate,public,False,0x4,0,"0x67a, 0x67e"
"    0x664: v664 = ADD v63c, v660(0x4)",0x635,v664,"0,v63c,v660",ADD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4,"0x67a, 0x67e"
    0x666: v666(0x20) = CONST ,0x635,v666,0,CONST,logUpdateCommissionRate,public,False,0x20,0,"0x67a, 0x67e"
"    0x66d: v66d(0x0) = SUB v63c, v648",0x635,v66d,"0,v63c,v648",SUB,logUpdateCommissionRate,public,False,0x0,logUpdateCommissionRate&m0x40-0x0,"0x67a, 0x67e"
"    0x66e: v66e(0x4) = ADD v66d(0x0), v660(0x4)",0x635,v66e,"0,v66d,v660",ADD,logUpdateCommissionRate,public,False,0x4,logUpdateCommissionRate&m0x40-0x0+0x4,"0x67a, 0x67e"
    0x672: v672 = EXTCODESIZE v658,0x635,v672,"0,v658",EXTCODESIZE,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x673: v673 = ISZERO v672,0x635,v673,"0,v672",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x675: v675 = ISZERO v673,0x635,v675,"0,v673",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x676: v676(0x67e) = CONST ,0x635,v676,0,CONST,logUpdateCommissionRate,public,False,0x67e,0,"0x67a, 0x67e"
"    0x679: JUMPI v676(0x67e), v675",0x635,0,"0,v676,v675",JUMPI,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    Begin block 0x67a,0x67a,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
"    prev=[0x635], succ=[]",0x67a,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    =================================,0x67a,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    0x67a: v67a(0x0) = CONST ,0x67a,v67a,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x67a, 0x67e"
"    0x67d: REVERT v67a(0x0), v67a(0x0)",0x67a,0,"0,v67a,v67a",REVERT,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
    Begin block 0x67e,0x67e,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x67a, 0x67e"
"    prev=[0x635], succ=[0x689, 0x692]",0x67e,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    =================================,0x67e,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x680: v680 = GAS ,0x67e,v680,0,GAS,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
"    0x681: v681 = STATICCALL v680, v658, v648, v66e(0x4), v648, v666(0x20)",0x67e,v681,"0,v680,v658,v648,v66e,v648,v666",STATICCALL,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x682: v682 = ISZERO v681,0x67e,v682,"0,v681",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x684: v684 = ISZERO v682,0x67e,v684,"0,v682",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x685: v685(0x692) = CONST ,0x67e,v685,0,CONST,logUpdateCommissionRate,public,False,0x692,0,"0x689, 0x692"
"    0x688: JUMPI v685(0x692), v684",0x67e,0,"0,v685,v684",JUMPI,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    Begin block 0x689,0x689,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
"    prev=[0x67e], succ=[]",0x689,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    =================================,0x689,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x689: v689 = RETURNDATASIZE ,0x689,v689,0,RETURNDATASIZE,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x68a: v68a(0x0) = CONST ,0x689,v68a,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x689, 0x692"
"    0x68d: RETURNDATACOPY v68a(0x0), v68a(0x0), v689",0x689,0,"0,v68a,v68a,v689",RETURNDATACOPY,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x68e: v68e = RETURNDATASIZE ,0x689,v68e,0,RETURNDATASIZE,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    0x68f: v68f(0x0) = CONST ,0x689,v68f,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x689, 0x692"
"    0x691: REVERT v68f(0x0), v68e",0x689,0,"0,v68f,v68e",REVERT,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
    Begin block 0x692,0x692,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x689, 0x692"
"    prev=[0x67e], succ=[0x6a4, 0x6a8]",0x692,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    =================================,0x692,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    0x697: v697(0x40) = CONST ,0x692,v697,0,CONST,logUpdateCommissionRate,public,False,0x40,0,"0x6a4, 0x6a8"
    0x699: v699 = MLOAD v697(0x40),0x692,v699,"0,v697",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x6a4, 0x6a8"
    0x69a: v69a = RETURNDATASIZE ,0x692,v69a,0,RETURNDATASIZE,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    0x69b: v69b(0x20) = CONST ,0x692,v69b,0,CONST,logUpdateCommissionRate,public,False,0x20,0,"0x6a4, 0x6a8"
"    0x69e: v69e = LT v69a, v69b(0x20)",0x692,v69e,"0,v69a,v69b",LT,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    0x69f: v69f = ISZERO v69e,0x692,v69f,"0,v69e",ISZERO,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    0x6a0: v6a0(0x6a8) = CONST ,0x692,v6a0,0,CONST,logUpdateCommissionRate,public,False,0x6a8,0,"0x6a4, 0x6a8"
"    0x6a3: JUMPI v6a0(0x6a8), v69f",0x692,0,"0,v6a0,v69f",JUMPI,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    Begin block 0x6a4,0x6a4,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
"    prev=[0x692], succ=[]",0x6a4,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    =================================,0x6a4,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    0x6a4: v6a4(0x0) = CONST ,0x6a4,v6a4,0,CONST,logUpdateCommissionRate,public,False,0x0,0,"0x6a4, 0x6a8"
"    0x6a7: REVERT v6a4(0x0), v6a4(0x0)",0x6a4,0,"0,v6a4,v6a4",REVERT,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
    Begin block 0x6a8,0x6a8,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6a4, 0x6a8"
"    prev=[0x692], succ=[0x6b9, 0x6ef]",0x6a8,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    =================================,0x6a8,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    0x6aa: v6aa = MLOAD v699,0x6a8,v6aa,"0,v699",MLOAD,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    0x6ab: v6ab(0x1) = CONST ,0x6a8,v6ab,0,CONST,logUpdateCommissionRate,public,False,0x1,0,"0x6b9, 0x6ef"
    0x6ad: v6ad(0x1) = CONST ,0x6a8,v6ad,0,CONST,logUpdateCommissionRate,public,False,0x1,0,"0x6b9, 0x6ef"
    0x6af: v6af(0xa0) = CONST ,0x6a8,v6af,0,CONST,logUpdateCommissionRate,public,False,0xa0,0,"0x6b9, 0x6ef"
"    0x6b1: v6b1(0x10000000000000000000000000000000000000000) = SHL v6af(0xa0), v6ad(0x1)",0x6a8,v6b1,"0,v6af,v6ad",SHL,logUpdateCommissionRate,public,False,0x10000000000000000000000000000000000000000,0,"0x6b9, 0x6ef"
"    0x6b2: v6b2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6b1(0x10000000000000000000000000000000000000000), v6ab(0x1)",0x6a8,v6b2,"0,v6b1,v6ab",SUB,logUpdateCommissionRate,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x6b9, 0x6ef"
"    0x6b3: v6b3 = AND v6b2(0xffffffffffffffffffffffffffffffffffffffff), v6aa",0x6a8,v6b3,"0,v6b2,v6aa",AND,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
"    0x6b4: v6b4 = EQ v6b3, v649",0x6a8,v6b4,"0,v6b3,v649",EQ,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    0x6b5: v6b5(0x6ef) = CONST ,0x6a8,v6b5,0,CONST,logUpdateCommissionRate,public,False,0x6ef,0,"0x6b9, 0x6ef"
"    0x6b8: JUMPI v6b5(0x6ef), v6b4",0x6a8,0,"0,v6b5,v6b4",JUMPI,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    Begin block 0x6b9,0x6b9,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
"    prev=[0x6a8], succ=[]",0x6b9,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    =================================,0x6b9,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    0x6b9: v6b9(0x40) = CONST ,0x6b9,v6b9,0,CONST,logUpdateCommissionRate,public,False,0x40,0,"0x6b9, 0x6ef"
    0x6bb: v6bb = MLOAD v6b9(0x40),0x6b9,v6bb,"0,v6b9",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x6b9, 0x6ef"
    0x6bc: v6bc(0x461bcd) = CONST ,0x6b9,v6bc,0,CONST,logUpdateCommissionRate,public,False,0x461bcd,0,"0x6b9, 0x6ef"
    0x6c0: v6c0(0xe5) = CONST ,0x6b9,v6c0,0,CONST,logUpdateCommissionRate,public,False,0xe5,0,"0x6b9, 0x6ef"
"    0x6c2: v6c2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v6c0(0xe5), v6bc(0x461bcd)",0x6b9,v6c2,"0,v6c0,v6bc",SHL,logUpdateCommissionRate,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x6b9, 0x6ef"
"    0x6c4: MSTORE v6bb, v6c2(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x6b9,logUpdateCommissionRate&m0x40,"0,v6bb,v6c2",MSTORE,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x6b9, 0x6ef"
    0x6c5: v6c5(0x4) = CONST ,0x6b9,v6c5,0,CONST,logUpdateCommissionRate,public,False,0x4,0,"0x6b9, 0x6ef"
"    0x6c7: v6c7 = ADD v6c5(0x4), v6bb",0x6b9,v6c7,"0,v6c5,v6bb",ADD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4,"0x6b9, 0x6ef"
    0x6ca: v6ca(0x20) = CONST ,0x6b9,v6ca,0,CONST,logUpdateCommissionRate,public,False,0x20,0,"0x6b9, 0x6ef"
"    0x6cc: v6cc = ADD v6ca(0x20), v6c7",0x6b9,v6cc,"0,v6ca,v6c7",ADD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4+0x20,"0x6b9, 0x6ef"
"    0x6cf: v6cf(0x20) = SUB v6cc, v6c7",0x6b9,v6cf,"0,v6cc,v6c7",SUB,logUpdateCommissionRate,public,False,0x20,logUpdateCommissionRate&m0x40+0x4+0x20-0x20,"0x6b9, 0x6ef"
"    0x6d1: MSTORE v6c7, v6cf(0x20)",0x6b9,logUpdateCommissionRate&m0x40+0x4,"0,v6c7,v6cf",MSTORE,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4,"0x6b9, 0x6ef"
    0x6d2: v6d2(0x21) = CONST ,0x6b9,v6d2,0,CONST,logUpdateCommissionRate,public,False,0x21,0,"0x6b9, 0x6ef"
"    0x6d5: MSTORE v6cc, v6d2(0x21)",0x6b9,logUpdateCommissionRate&m0x40+0x4+0x20,"0,v6cc,v6d2",MSTORE,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4+0x20,"0x6b9, 0x6ef"
    0x6d6: v6d6(0x20) = CONST ,0x6b9,v6d6,0,CONST,logUpdateCommissionRate,public,False,0x20,0,"0x6b9, 0x6ef"
"    0x6d8: v6d8 = ADD v6d6(0x20), v6cc",0x6b9,v6d8,"0,v6d6,v6cc",ADD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4+0x20+0x20,"0x6b9, 0x6ef"
    0x6da: v6da(0x724) = CONST ,0x6b9,v6da,0,CONST,logUpdateCommissionRate,public,False,0x724,0,"0x6b9, 0x6ef"
    0x6dd: v6dd(0x21) = CONST ,0x6b9,v6dd,0,CONST,logUpdateCommissionRate,public,False,0x21,0,"0x6b9, 0x6ef"
"    0x6e0: CODECOPY v6d8, v6da(0x724), v6dd(0x21)",0x6b9,0,"0,v6d8,v6da,v6dd",CODECOPY,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    0x6e1: v6e1(0x40) = CONST ,0x6b9,v6e1,0,CONST,logUpdateCommissionRate,public,False,0x40,0,"0x6b9, 0x6ef"
"    0x6e3: v6e3 = ADD v6e1(0x40), v6d8",0x6b9,v6e3,"0,v6e1,v6d8",ADD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40+0x4+0x20+0x20+0x40,"0x6b9, 0x6ef"
    0x6e7: v6e7(0x40) = CONST ,0x6b9,v6e7,0,CONST,logUpdateCommissionRate,public,False,0x40,0,"0x6b9, 0x6ef"
    0x6e9: v6e9 = MLOAD v6e7(0x40),0x6b9,v6e9,"0,v6e7",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,"0x6b9, 0x6ef"
"    0x6ec: v6ec(0x84) = SUB v6e3, v6e9",0x6b9,v6ec,"0,v6e3,v6e9",SUB,logUpdateCommissionRate,public,False,0x84,logUpdateCommissionRate&m0x40+0x4+0x20+0x20+0x40-0x84,"0x6b9, 0x6ef"
"    0x6ee: REVERT v6e9, v6ec(0x84)",0x6b9,0,"0,v6e9,v6ec",REVERT,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
    Begin block 0x6ef,0x6ef,0,0,0,logUpdateCommissionRate,public,False,0,0,"0x6b9, 0x6ef"
"    prev=[0x6a8], succ=[0x81c]",0x6ef,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
    =================================,0x6ef,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
    0x6f3: v6f3(0x7d5da5ece9d43013d62ab966f4704ca376b92be29ca6fbb958154baf1c0dc17e) = CONST ,0x6ef,v6f3,0,CONST,logUpdateCommissionRate,public,False,0x7d5da5ece9d43013d62ab966f4704ca376b92be29ca6fbb958154baf1c0dc17e,0,0x81c
    0x714: v714(0x40) = CONST ,0x6ef,v714,0,CONST,logUpdateCommissionRate,public,False,0x40,0,0x81c
    0x716: v716 = MLOAD v714(0x40),0x6ef,v716,"0,v714",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,0x81c
    0x717: v717(0x40) = CONST ,0x6ef,v717,0,CONST,logUpdateCommissionRate,public,False,0x40,0,0x81c
    0x719: v719 = MLOAD v717(0x40),0x6ef,v719,"0,v717",MLOAD,logUpdateCommissionRate,public,False,0,logUpdateCommissionRate&m0x40,0x81c
"    0x71c: v71c(0x0) = SUB v716, v719",0x6ef,v71c,"0,v716,v719",SUB,logUpdateCommissionRate,public,False,0x0,logUpdateCommissionRate&m0x40-0x0,0x81c
"    0x71e: LOG4 v719, v71c(0x0), v6f3(0x7d5da5ece9d43013d62ab966f4704ca376b92be29ca6fbb958154baf1c0dc17e), v16b, v171, v176",0x6ef,0,"0,v719,v71c,v6f3,v16b,v171,v176",LOG4,logUpdateCommissionRate,public,False,0,0,0x81c
    0x722: JUMP v153(0x81c),0x6ef,0,"0,v153",JUMP,logUpdateCommissionRate,public,False,0,0,0x81c
    Begin block 0x81c,0x81c,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
"    prev=[0x6ef], succ=[]",0x81c,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
    =================================,0x81c,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
    0x81d: STOP ,0x81c,0,0,STOP,logUpdateCommissionRate,public,False,0,0,0x81c
},0x81c,0,0,0,logUpdateCommissionRate,public,False,0,0,0x81c
function fallback()() public {,0x62,0,0,public,fallback,public,False,0,0,0x81c
    Begin block 0x62,0x62,0,0,0,fallback,public,False,0,0,0x81c
"    prev=[], succ=[]",0x62,0,0,0,fallback,public,False,0,0,0x81c
    =================================,0x62,0,0,0,fallback,public,False,0,0,0x81c
    0x63: v63(0x0) = CONST ,0x62,v63,0,CONST,fallback,public,False,0x0,0,0x81c
"    0x66: REVERT v63(0x0), v63(0x0)",0x62,0,"0,v63,v63",REVERT,fallback,public,False,0,0,0x81c
},0x62,0,0,0,fallback,public,False,0,0,0x81c
"function logShareBurnedWithId(uint256,address,uint256,uint256,uint256)() public {",0x67,0,0,uint256,logShareBurnedWithId,public,False,0,0,0x81c
    Begin block 0x67,0x67,0,0,0,logShareBurnedWithId,public,False,0,0,0x81c
"    prev=[], succ=[0x79, 0x7d]",0x67,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    =================================,0x67,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    0x68: v68(0x798) = CONST ,0x67,v68,0,CONST,logShareBurnedWithId,public,False,0x798,0,"0x79, 0x7d"
    0x6b: v6b(0x4) = CONST ,0x67,v6b,0,CONST,logShareBurnedWithId,public,False,0x4,0,"0x79, 0x7d"
    0x6e: v6e = CALLDATASIZE ,0x67,v6e,0,CALLDATASIZE,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
"    0x6f: v6f = SUB v6e, v6b(0x4)",0x67,v6f,"0,v6e,v6b",SUB,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    0x70: v70(0xa0) = CONST ,0x67,v70,0,CONST,logShareBurnedWithId,public,False,0xa0,0,"0x79, 0x7d"
"    0x73: v73 = LT v6f, v70(0xa0)",0x67,v73,"0,v6f,v70",LT,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    0x74: v74 = ISZERO v73,0x67,v74,"0,v73",ISZERO,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    0x75: v75(0x7d) = CONST ,0x67,v75,0,CONST,logShareBurnedWithId,public,False,0x7d,0,"0x79, 0x7d"
"    0x78: JUMPI v75(0x7d), v74",0x67,0,"0,v75,v74",JUMPI,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    Begin block 0x79,0x79,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
"    prev=[0x67], succ=[]",0x79,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    =================================,0x79,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    0x79: v79(0x0) = CONST ,0x79,v79,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x79, 0x7d"
"    0x7c: REVERT v79(0x0), v79(0x0)",0x79,0,"0,v79,v79",REVERT,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
    Begin block 0x7d,0x7d,0,0,0,logShareBurnedWithId,public,False,0,0,"0x79, 0x7d"
"    prev=[0x67], succ=[0x17b]",0x7d,0,0,0,logShareBurnedWithId,public,False,0,0,0x17b
    =================================,0x7d,0,0,0,logShareBurnedWithId,public,False,0,0,0x17b
    0x80: v80 = CALLDATALOAD v6b(0x4),0x7d,v80,"0,v6b",CALLDATALOAD,logShareBurnedWithId,public,False,0,0,0x17b
    0x82: v82(0x1) = CONST ,0x7d,v82,0,CONST,logShareBurnedWithId,public,False,0x1,0,0x17b
    0x84: v84(0x1) = CONST ,0x7d,v84,0,CONST,logShareBurnedWithId,public,False,0x1,0,0x17b
    0x86: v86(0xa0) = CONST ,0x7d,v86,0,CONST,logShareBurnedWithId,public,False,0xa0,0,0x17b
"    0x88: v88(0x10000000000000000000000000000000000000000) = SHL v86(0xa0), v84(0x1)",0x7d,v88,"0,v86,v84",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,0x17b
"    0x89: v89(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88(0x10000000000000000000000000000000000000000), v82(0x1)",0x7d,v89,"0,v88,v82",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x17b
    0x8a: v8a(0x20) = CONST ,0x7d,v8a,0,CONST,logShareBurnedWithId,public,False,0x20,0,0x17b
"    0x8d: v8d(0x24) = ADD v6b(0x4), v8a(0x20)",0x7d,v8d,"0,v6b,v8a",ADD,logShareBurnedWithId,public,False,0x24,0,0x17b
    0x8e: v8e = CALLDATALOAD v8d(0x24),0x7d,v8e,"0,v8d",CALLDATALOAD,logShareBurnedWithId,public,False,0,0,0x17b
"    0x8f: v8f = AND v8e, v89(0xffffffffffffffffffffffffffffffffffffffff)",0x7d,v8f,"0,v8e,v89",AND,logShareBurnedWithId,public,False,0,0,0x17b
    0x91: v91(0x40) = CONST ,0x7d,v91,0,CONST,logShareBurnedWithId,public,False,0x40,0,0x17b
"    0x94: v94(0x44) = ADD v6b(0x4), v91(0x40)",0x7d,v94,"0,v6b,v91",ADD,logShareBurnedWithId,public,False,0x44,0,0x17b
    0x95: v95 = CALLDATALOAD v94(0x44),0x7d,v95,"0,v94",CALLDATALOAD,logShareBurnedWithId,public,False,0,0,0x17b
    0x97: v97(0x60) = CONST ,0x7d,v97,0,CONST,logShareBurnedWithId,public,False,0x60,0,0x17b
"    0x9a: v9a(0x64) = ADD v6b(0x4), v97(0x60)",0x7d,v9a,"0,v6b,v97",ADD,logShareBurnedWithId,public,False,0x64,0,0x17b
    0x9b: v9b = CALLDATALOAD v9a(0x64),0x7d,v9b,"0,v9a",CALLDATALOAD,logShareBurnedWithId,public,False,0,0,0x17b
    0x9d: v9d(0x80) = CONST ,0x7d,v9d,0,CONST,logShareBurnedWithId,public,False,0x80,0,0x17b
"    0x9f: v9f(0x84) = ADD v9d(0x80), v6b(0x4)",0x7d,v9f,"0,v9d,v6b",ADD,logShareBurnedWithId,public,False,0x84,0,0x17b
    0xa0: va0 = CALLDATALOAD v9f(0x84),0x7d,va0,"0,v9f",CALLDATALOAD,logShareBurnedWithId,public,False,0,0,0x17b
    0xa1: va1(0x17b) = CONST ,0x7d,va1,0,CONST,logShareBurnedWithId,public,False,0x17b,0,0x17b
    0xa4: JUMP va1(0x17b),0x7d,0,"0,va1",JUMP,logShareBurnedWithId,public,False,0,0,0x17b
    Begin block 0x17b,0x17b,0,0,0,logShareBurnedWithId,public,False,0,0,0x17b
"    prev=[0x7d], succ=[0x1c7, 0x1cb]",0x17b,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    =================================,0x17b,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x17d: v17d(0x0) = CONST ,0x17b,v17d,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x1c7, 0x1cb"
    0x180: v180(0x1) = CONST ,0x17b,v180,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x1c7, 0x1cb"
    0x183: v183 = SLOAD v17d(0x0),0x17b,v183,"0,v17d",SLOAD,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x185: v185(0x100) = CONST ,0x17b,v185,0,CONST,logShareBurnedWithId,public,False,0x100,0,"0x1c7, 0x1cb"
"    0x188: v188(0x100) = EXP v185(0x100), v180(0x1)",0x17b,v188,"0,v185,v180",EXP,logShareBurnedWithId,public,False,0x100,0,"0x1c7, 0x1cb"
"    0x18a: v18a = DIV v183, v188(0x100)",0x17b,v18a,"0,v183,v188",DIV,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x18b: v18b(0x1) = CONST ,0x17b,v18b,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x1c7, 0x1cb"
    0x18d: v18d(0x1) = CONST ,0x17b,v18d,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x1c7, 0x1cb"
    0x18f: v18f(0xa0) = CONST ,0x17b,v18f,0,CONST,logShareBurnedWithId,public,False,0xa0,0,"0x1c7, 0x1cb"
"    0x191: v191(0x10000000000000000000000000000000000000000) = SHL v18f(0xa0), v18d(0x1)",0x17b,v191,"0,v18f,v18d",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x1c7, 0x1cb"
"    0x192: v192(0xffffffffffffffffffffffffffffffffffffffff) = SUB v191(0x10000000000000000000000000000000000000000), v18b(0x1)",0x17b,v192,"0,v191,v18b",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1c7, 0x1cb"
"    0x193: v193 = AND v192(0xffffffffffffffffffffffffffffffffffffffff), v18a",0x17b,v193,"0,v192,v18a",AND,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x194: v194(0x1) = CONST ,0x17b,v194,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x1c7, 0x1cb"
    0x196: v196(0x1) = CONST ,0x17b,v196,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x1c7, 0x1cb"
    0x198: v198(0xa0) = CONST ,0x17b,v198,0,CONST,logShareBurnedWithId,public,False,0xa0,0,"0x1c7, 0x1cb"
"    0x19a: v19a(0x10000000000000000000000000000000000000000) = SHL v198(0xa0), v196(0x1)",0x17b,v19a,"0,v198,v196",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x1c7, 0x1cb"
"    0x19b: v19b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19a(0x10000000000000000000000000000000000000000), v194(0x1)",0x17b,v19b,"0,v19a,v194",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1c7, 0x1cb"
"    0x19c: v19c = AND v19b(0xffffffffffffffffffffffffffffffffffffffff), v193",0x17b,v19c,"0,v19b,v193",AND,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x19d: v19d(0x287be3e4) = CONST ,0x17b,v19d,0,CONST,logShareBurnedWithId,public,False,0x287be3e4,0,"0x1c7, 0x1cb"
    0x1a2: v1a2(0x40) = CONST ,0x17b,v1a2,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x1c7, 0x1cb"
    0x1a4: v1a4 = MLOAD v1a2(0x40),0x17b,v1a4,"0,v1a2",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x1c7, 0x1cb"
    0x1a6: v1a6(0xffffffff) = CONST ,0x17b,v1a6,0,CONST,logShareBurnedWithId,public,False,0xffffffff,0,"0x1c7, 0x1cb"
"    0x1ab: v1ab(0x287be3e4) = AND v1a6(0xffffffff), v19d(0x287be3e4)",0x17b,v1ab,"0,v1a6,v19d",AND,logShareBurnedWithId,public,False,0x287be3e4,0,"0x1c7, 0x1cb"
    0x1ac: v1ac(0xe0) = CONST ,0x17b,v1ac,0,CONST,logShareBurnedWithId,public,False,0xe0,0,"0x1c7, 0x1cb"
"    0x1ae: v1ae(0x287be3e400000000000000000000000000000000000000000000000000000000) = SHL v1ac(0xe0), v1ab(0x287be3e4)",0x17b,v1ae,"0,v1ac,v1ab",SHL,logShareBurnedWithId,public,False,0x287be3e400000000000000000000000000000000000000000000000000000000,0,"0x1c7, 0x1cb"
"    0x1b0: MSTORE v1a4, v1ae(0x287be3e400000000000000000000000000000000000000000000000000000000)",0x17b,logShareBurnedWithId&m0x40,"0,v1a4,v1ae",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x1c7, 0x1cb"
    0x1b1: v1b1(0x4) = CONST ,0x17b,v1b1,0,CONST,logShareBurnedWithId,public,False,0x4,0,"0x1c7, 0x1cb"
"    0x1b3: v1b3 = ADD v1b1(0x4), v1a4",0x17b,v1b3,"0,v1b1,v1a4",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x4,"0x1c7, 0x1cb"
    0x1b4: v1b4(0x20) = CONST ,0x17b,v1b4,0,CONST,logShareBurnedWithId,public,False,0x20,0,"0x1c7, 0x1cb"
    0x1b6: v1b6(0x40) = CONST ,0x17b,v1b6,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x1c7, 0x1cb"
    0x1b8: v1b8 = MLOAD v1b6(0x40),0x17b,v1b8,"0,v1b6",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x1c7, 0x1cb"
"    0x1bb: v1bb(0x4) = SUB v1b3, v1b8",0x17b,v1bb,"0,v1b3,v1b8",SUB,logShareBurnedWithId,public,False,0x4,logShareBurnedWithId&m0x40+0x4-0x4,"0x1c7, 0x1cb"
    0x1bf: v1bf = EXTCODESIZE v19c,0x17b,v1bf,"0,v19c",EXTCODESIZE,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x1c0: v1c0 = ISZERO v1bf,0x17b,v1c0,"0,v1bf",ISZERO,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x1c2: v1c2 = ISZERO v1c0,0x17b,v1c2,"0,v1c0",ISZERO,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x1c3: v1c3(0x1cb) = CONST ,0x17b,v1c3,0,CONST,logShareBurnedWithId,public,False,0x1cb,0,"0x1c7, 0x1cb"
"    0x1c6: JUMPI v1c3(0x1cb), v1c2",0x17b,0,"0,v1c3,v1c2",JUMPI,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    Begin block 0x1c7,0x1c7,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
"    prev=[0x17b], succ=[]",0x1c7,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    =================================,0x1c7,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    0x1c7: v1c7(0x0) = CONST ,0x1c7,v1c7,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x1c7, 0x1cb"
"    0x1ca: REVERT v1c7(0x0), v1c7(0x0)",0x1c7,0,"0,v1c7,v1c7",REVERT,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
    Begin block 0x1cb,0x1cb,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1c7, 0x1cb"
"    prev=[0x17b], succ=[0x1d6, 0x1df]",0x1cb,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    =================================,0x1cb,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1cd: v1cd = GAS ,0x1cb,v1cd,0,GAS,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
"    0x1ce: v1ce = STATICCALL v1cd, v19c, v1b8, v1bb(0x4), v1b8, v1b4(0x20)",0x1cb,v1ce,"0,v1cd,v19c,v1b8,v1bb,v1b8,v1b4",STATICCALL,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1cf: v1cf = ISZERO v1ce,0x1cb,v1cf,"0,v1ce",ISZERO,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1d1: v1d1 = ISZERO v1cf,0x1cb,v1d1,"0,v1cf",ISZERO,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1d2: v1d2(0x1df) = CONST ,0x1cb,v1d2,0,CONST,logShareBurnedWithId,public,False,0x1df,0,"0x1d6, 0x1df"
"    0x1d5: JUMPI v1d2(0x1df), v1d1",0x1cb,0,"0,v1d2,v1d1",JUMPI,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    Begin block 0x1d6,0x1d6,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
"    prev=[0x1cb], succ=[]",0x1d6,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    =================================,0x1d6,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1d6: v1d6 = RETURNDATASIZE ,0x1d6,v1d6,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1d7: v1d7(0x0) = CONST ,0x1d6,v1d7,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x1d6, 0x1df"
"    0x1da: RETURNDATACOPY v1d7(0x0), v1d7(0x0), v1d6",0x1d6,0,"0,v1d7,v1d7,v1d6",RETURNDATACOPY,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1db: v1db = RETURNDATASIZE ,0x1d6,v1db,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    0x1dc: v1dc(0x0) = CONST ,0x1d6,v1dc,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x1d6, 0x1df"
"    0x1de: REVERT v1dc(0x0), v1db",0x1d6,0,"0,v1dc,v1db",REVERT,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
    Begin block 0x1df,0x1df,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1d6, 0x1df"
"    prev=[0x1cb], succ=[0x1f1, 0x1f5]",0x1df,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    =================================,0x1df,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    0x1e4: v1e4(0x40) = CONST ,0x1df,v1e4,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x1f1, 0x1f5"
    0x1e6: v1e6 = MLOAD v1e4(0x40),0x1df,v1e6,"0,v1e4",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x1f1, 0x1f5"
    0x1e7: v1e7 = RETURNDATASIZE ,0x1df,v1e7,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    0x1e8: v1e8(0x20) = CONST ,0x1df,v1e8,0,CONST,logShareBurnedWithId,public,False,0x20,0,"0x1f1, 0x1f5"
"    0x1eb: v1eb = LT v1e7, v1e8(0x20)",0x1df,v1eb,"0,v1e7,v1e8",LT,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    0x1ec: v1ec = ISZERO v1eb,0x1df,v1ec,"0,v1eb",ISZERO,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    0x1ed: v1ed(0x1f5) = CONST ,0x1df,v1ed,0,CONST,logShareBurnedWithId,public,False,0x1f5,0,"0x1f1, 0x1f5"
"    0x1f0: JUMPI v1ed(0x1f5), v1ec",0x1df,0,"0,v1ed,v1ec",JUMPI,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    Begin block 0x1f1,0x1f1,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
"    prev=[0x1df], succ=[]",0x1f1,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    =================================,0x1f1,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    0x1f1: v1f1(0x0) = CONST ,0x1f1,v1f1,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x1f1, 0x1f5"
"    0x1f4: REVERT v1f1(0x0), v1f1(0x0)",0x1f1,0,"0,v1f1,v1f1",REVERT,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
    Begin block 0x1f5,0x1f5,0,0,0,logShareBurnedWithId,public,False,0,0,"0x1f1, 0x1f5"
"    prev=[0x1df], succ=[0x23c, 0x240]",0x1f5,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    =================================,0x1f5,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x1f7: v1f7 = MLOAD v1e6,0x1f5,v1f7,"0,v1e6",MLOAD,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x1f8: v1f8(0x40) = CONST ,0x1f5,v1f8,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x23c, 0x240"
    0x1fb: v1fb = MLOAD v1f8(0x40),0x1f5,v1fb,"0,v1f8",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x23c, 0x240"
    0x1fc: v1fc(0xd6a8b91) = CONST ,0x1f5,v1fc,0,CONST,logShareBurnedWithId,public,False,0xd6a8b91,0,"0x23c, 0x240"
    0x201: v201(0xe2) = CONST ,0x1f5,v201,0,CONST,logShareBurnedWithId,public,False,0xe2,0,"0x23c, 0x240"
"    0x203: v203(0x35aa2e4400000000000000000000000000000000000000000000000000000000) = SHL v201(0xe2), v1fc(0xd6a8b91)",0x1f5,v203,"0,v201,v1fc",SHL,logShareBurnedWithId,public,False,0x35aa2e4400000000000000000000000000000000000000000000000000000000,0,"0x23c, 0x240"
"    0x205: MSTORE v1fb, v203(0x35aa2e4400000000000000000000000000000000000000000000000000000000)",0x1f5,logShareBurnedWithId&m0x40,"0,v1fb,v203",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x23c, 0x240"
    0x206: v206(0x4) = CONST ,0x1f5,v206,0,CONST,logShareBurnedWithId,public,False,0x4,0,"0x23c, 0x240"
"    0x209: v209 = ADD v1fb, v206(0x4)",0x1f5,v209,"0,v1fb,v206",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x4,"0x23c, 0x240"
"    0x20c: MSTORE v209, v80",0x1f5,logShareBurnedWithId&m0x40+0x4,"0,v209,v80",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x4,"0x23c, 0x240"
    0x20e: v20e = MLOAD v1f8(0x40),0x1f5,v20e,"0,v1f8",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x23c, 0x240"
    0x20f: v20f(0x1) = CONST ,0x1f5,v20f,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x23c, 0x240"
    0x211: v211(0x1) = CONST ,0x1f5,v211,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x23c, 0x240"
    0x213: v213(0xa0) = CONST ,0x1f5,v213,0,CONST,logShareBurnedWithId,public,False,0xa0,0,"0x23c, 0x240"
"    0x215: v215(0x10000000000000000000000000000000000000000) = SHL v213(0xa0), v211(0x1)",0x1f5,v215,"0,v213,v211",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x23c, 0x240"
"    0x216: v216(0xffffffffffffffffffffffffffffffffffffffff) = SUB v215(0x10000000000000000000000000000000000000000), v20f(0x1)",0x1f5,v216,"0,v215,v20f",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x23c, 0x240"
"    0x219: v219 = AND v1f7, v216(0xffffffffffffffffffffffffffffffffffffffff)",0x1f5,v219,"0,v1f7,v216",AND,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x21b: v21b(0x35aa2e44) = CONST ,0x1f5,v21b,0,CONST,logShareBurnedWithId,public,False,0x35aa2e44,0,"0x23c, 0x240"
    0x221: v221(0x24) = CONST ,0x1f5,v221,0,CONST,logShareBurnedWithId,public,False,0x24,0,"0x23c, 0x240"
"    0x225: v225 = ADD v1fb, v221(0x24)",0x1f5,v225,"0,v1fb,v221",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x24,"0x23c, 0x240"
    0x227: v227(0xe0) = CONST ,0x1f5,v227,0,CONST,logShareBurnedWithId,public,False,0xe0,0,"0x23c, 0x240"
"    0x22f: v22f(0x0) = SUB v1fb, v20e",0x1f5,v22f,"0,v1fb,v20e",SUB,logShareBurnedWithId,public,False,0x0,logShareBurnedWithId&m0x40-0x0,"0x23c, 0x240"
"    0x230: v230(0x24) = ADD v22f(0x0), v221(0x24)",0x1f5,v230,"0,v22f,v221",ADD,logShareBurnedWithId,public,False,0x24,logShareBurnedWithId&m0x40-0x0+0x24,"0x23c, 0x240"
    0x234: v234 = EXTCODESIZE v219,0x1f5,v234,"0,v219",EXTCODESIZE,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x235: v235 = ISZERO v234,0x1f5,v235,"0,v234",ISZERO,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x237: v237 = ISZERO v235,0x1f5,v237,"0,v235",ISZERO,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x238: v238(0x240) = CONST ,0x1f5,v238,0,CONST,logShareBurnedWithId,public,False,0x240,0,"0x23c, 0x240"
"    0x23b: JUMPI v238(0x240), v237",0x1f5,0,"0,v238,v237",JUMPI,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    Begin block 0x23c,0x23c,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
"    prev=[0x1f5], succ=[]",0x23c,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    =================================,0x23c,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    0x23c: v23c(0x0) = CONST ,0x23c,v23c,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x23c, 0x240"
"    0x23f: REVERT v23c(0x0), v23c(0x0)",0x23c,0,"0,v23c,v23c",REVERT,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
    Begin block 0x240,0x240,0,0,0,logShareBurnedWithId,public,False,0,0,"0x23c, 0x240"
"    prev=[0x1f5], succ=[0x24b, 0x254]",0x240,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    =================================,0x240,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x242: v242 = GAS ,0x240,v242,0,GAS,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
"    0x243: v243 = STATICCALL v242, v219, v20e, v230(0x24), v20e, v227(0xe0)",0x240,v243,"0,v242,v219,v20e,v230,v20e,v227",STATICCALL,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x244: v244 = ISZERO v243,0x240,v244,"0,v243",ISZERO,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x246: v246 = ISZERO v244,0x240,v246,"0,v244",ISZERO,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x247: v247(0x254) = CONST ,0x240,v247,0,CONST,logShareBurnedWithId,public,False,0x254,0,"0x24b, 0x254"
"    0x24a: JUMPI v247(0x254), v246",0x240,0,"0,v247,v246",JUMPI,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    Begin block 0x24b,0x24b,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
"    prev=[0x240], succ=[]",0x24b,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    =================================,0x24b,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x24b: v24b = RETURNDATASIZE ,0x24b,v24b,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x24c: v24c(0x0) = CONST ,0x24b,v24c,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x24b, 0x254"
"    0x24f: RETURNDATACOPY v24c(0x0), v24c(0x0), v24b",0x24b,0,"0,v24c,v24c,v24b",RETURNDATACOPY,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x250: v250 = RETURNDATASIZE ,0x24b,v250,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    0x251: v251(0x0) = CONST ,0x24b,v251,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x24b, 0x254"
"    0x253: REVERT v251(0x0), v250",0x24b,0,"0,v251,v250",REVERT,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
    Begin block 0x254,0x254,0,0,0,logShareBurnedWithId,public,False,0,0,"0x24b, 0x254"
"    prev=[0x240], succ=[0x266, 0x26a]",0x254,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    =================================,0x254,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    0x259: v259(0x40) = CONST ,0x254,v259,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x266, 0x26a"
    0x25b: v25b = MLOAD v259(0x40),0x254,v25b,"0,v259",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x266, 0x26a"
    0x25c: v25c = RETURNDATASIZE ,0x254,v25c,0,RETURNDATASIZE,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    0x25d: v25d(0xe0) = CONST ,0x254,v25d,0,CONST,logShareBurnedWithId,public,False,0xe0,0,"0x266, 0x26a"
"    0x260: v260 = LT v25c, v25d(0xe0)",0x254,v260,"0,v25c,v25d",LT,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    0x261: v261 = ISZERO v260,0x254,v261,"0,v260",ISZERO,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    0x262: v262(0x26a) = CONST ,0x254,v262,0,CONST,logShareBurnedWithId,public,False,0x26a,0,"0x266, 0x26a"
"    0x265: JUMPI v262(0x26a), v261",0x254,0,"0,v262,v261",JUMPI,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    Begin block 0x266,0x266,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
"    prev=[0x254], succ=[]",0x266,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    =================================,0x266,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    0x266: v266(0x0) = CONST ,0x266,v266,0,CONST,logShareBurnedWithId,public,False,0x0,0,"0x266, 0x26a"
"    0x269: REVERT v266(0x0), v266(0x0)",0x266,0,"0,v266,v266",REVERT,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
    Begin block 0x26a,0x26a,0,0,0,logShareBurnedWithId,public,False,0,0,"0x266, 0x26a"
"    prev=[0x254], succ=[0x282, 0x2be]",0x26a,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    =================================,0x26a,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    0x26c: v26c(0xc0) = CONST ,0x26a,v26c,0,CONST,logShareBurnedWithId,public,False,0xc0,0,"0x282, 0x2be"
"    0x26e: v26e = ADD v26c(0xc0), v25b",0x26a,v26e,"0,v26c,v25b",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0xc0,"0x282, 0x2be"
    0x26f: v26f = MLOAD v26e,0x26a,v26f,"0,v26e",MLOAD,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    0x272: v272(0x1) = CONST ,0x26a,v272,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x282, 0x2be"
    0x274: v274(0x1) = CONST ,0x26a,v274,0,CONST,logShareBurnedWithId,public,False,0x1,0,"0x282, 0x2be"
    0x276: v276(0xa0) = CONST ,0x26a,v276,0,CONST,logShareBurnedWithId,public,False,0xa0,0,"0x282, 0x2be"
"    0x278: v278(0x10000000000000000000000000000000000000000) = SHL v276(0xa0), v274(0x1)",0x26a,v278,"0,v276,v274",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x282, 0x2be"
"    0x279: v279(0xffffffffffffffffffffffffffffffffffffffff) = SUB v278(0x10000000000000000000000000000000000000000), v272(0x1)",0x26a,v279,"0,v278,v272",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x282, 0x2be"
"    0x27b: v27b = AND v26f, v279(0xffffffffffffffffffffffffffffffffffffffff)",0x26a,v27b,"0,v26f,v279",AND,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    0x27c: v27c = CALLER ,0x26a,v27c,0,CALLER,logShareBurnedWithId,public,True,0,0,"0x282, 0x2be"
"    0x27d: v27d = EQ v27c, v27b",0x26a,v27d,"0,v27c,v27b",EQ,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    0x27e: v27e(0x2be) = CONST ,0x26a,v27e,0,CONST,logShareBurnedWithId,public,False,0x2be,0,"0x282, 0x2be"
"    0x281: JUMPI v27e(0x2be), v27d",0x26a,0,"0,v27e,v27d",JUMPI,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    Begin block 0x282,0x282,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
"    prev=[0x26a], succ=[]",0x282,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    =================================,0x282,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    0x282: v282(0x40) = CONST ,0x282,v282,0,CONST,logShareBurnedWithId,public,False,0x40,0,"0x282, 0x2be"
    0x285: v285 = MLOAD v282(0x40),0x282,v285,"0,v282",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x282, 0x2be"
    0x286: v286(0x461bcd) = CONST ,0x282,v286,0,CONST,logShareBurnedWithId,public,False,0x461bcd,0,"0x282, 0x2be"
    0x28a: v28a(0xe5) = CONST ,0x282,v28a,0,CONST,logShareBurnedWithId,public,False,0xe5,0,"0x282, 0x2be"
"    0x28c: v28c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v28a(0xe5), v286(0x461bcd)",0x282,v28c,"0,v28a,v286",SHL,logShareBurnedWithId,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x282, 0x2be"
"    0x28e: MSTORE v285, v28c(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x282,logShareBurnedWithId&m0x40,"0,v285,v28c",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x282, 0x2be"
    0x28f: v28f(0x20) = CONST ,0x282,v28f,0,CONST,logShareBurnedWithId,public,False,0x20,0,"0x282, 0x2be"
    0x291: v291(0x4) = CONST ,0x282,v291,0,CONST,logShareBurnedWithId,public,False,0x4,0,"0x282, 0x2be"
"    0x294: v294 = ADD v285, v291(0x4)",0x282,v294,"0,v285,v291",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x4,"0x282, 0x2be"
"    0x295: MSTORE v294, v28f(0x20)",0x282,logShareBurnedWithId&m0x40+0x4,"0,v294,v28f",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x4,"0x282, 0x2be"
    0x296: v296(0xd) = CONST ,0x282,v296,0,CONST,logShareBurnedWithId,public,False,0xd,0,"0x282, 0x2be"
    0x298: v298(0x24) = CONST ,0x282,v298,0,CONST,logShareBurnedWithId,public,False,0x24,0,"0x282, 0x2be"
"    0x29b: v29b = ADD v285, v298(0x24)",0x282,v29b,"0,v285,v298",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x24,"0x282, 0x2be"
"    0x29c: MSTORE v29b, v296(0xd)",0x282,logShareBurnedWithId&m0x40+0x24,"0,v29b,v296",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x24,"0x282, 0x2be"
    0x29d: v29d(0x3737ba103b30b634b230ba37b9) = CONST ,0x282,v29d,0,CONST,logShareBurnedWithId,public,False,0x3737ba103b30b634b230ba37b9,0,"0x282, 0x2be"
    0x2ab: v2ab(0x99) = CONST ,0x282,v2ab,0,CONST,logShareBurnedWithId,public,False,0x99,0,"0x282, 0x2be"
"    0x2ad: v2ad(0x6e6f742076616c696461746f7200000000000000000000000000000000000000) = SHL v2ab(0x99), v29d(0x3737ba103b30b634b230ba37b9)",0x282,v2ad,"0,v2ab,v29d",SHL,logShareBurnedWithId,public,False,0x6e6f742076616c696461746f7200000000000000000000000000000000000000,0,"0x282, 0x2be"
    0x2ae: v2ae(0x44) = CONST ,0x282,v2ae,0,CONST,logShareBurnedWithId,public,False,0x44,0,"0x282, 0x2be"
"    0x2b1: v2b1 = ADD v285, v2ae(0x44)",0x282,v2b1,"0,v285,v2ae",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x44,"0x282, 0x2be"
"    0x2b2: MSTORE v2b1, v2ad(0x6e6f742076616c696461746f7200000000000000000000000000000000000000)",0x282,logShareBurnedWithId&m0x40+0x44,"0,v2b1,v2ad",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x44,"0x282, 0x2be"
    0x2b4: v2b4 = MLOAD v282(0x40),0x282,v2b4,"0,v282",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,"0x282, 0x2be"
"    0x2b8: v2b8(0x0) = SUB v285, v2b4",0x282,v2b8,"0,v285,v2b4",SUB,logShareBurnedWithId,public,False,0x0,logShareBurnedWithId&m0x40-0x0,"0x282, 0x2be"
    0x2b9: v2b9(0x64) = CONST ,0x282,v2b9,0,CONST,logShareBurnedWithId,public,False,0x64,0,"0x282, 0x2be"
"    0x2bb: v2bb(0x64) = ADD v2b9(0x64), v2b8(0x0)",0x282,v2bb,"0,v2b9,v2b8",ADD,logShareBurnedWithId,public,False,0x64,logShareBurnedWithId&m0x40-0x0+0x64,"0x282, 0x2be"
"    0x2bd: REVERT v2b4, v2bb(0x64)",0x282,0,"0,v2b4,v2bb",REVERT,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
    Begin block 0x2be,0x2be,0,0,0,logShareBurnedWithId,public,False,0,0,"0x282, 0x2be"
"    prev=[0x26a], succ=[0x798]",0x2be,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
    =================================,0x2be,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
    0x2c1: v2c1(0x1) = CONST ,0x2be,v2c1,0,CONST,logShareBurnedWithId,public,False,0x1,0,0x798
    0x2c3: v2c3(0x1) = CONST ,0x2be,v2c3,0,CONST,logShareBurnedWithId,public,False,0x1,0,0x798
    0x2c5: v2c5(0xa0) = CONST ,0x2be,v2c5,0,CONST,logShareBurnedWithId,public,False,0xa0,0,0x798
"    0x2c7: v2c7(0x10000000000000000000000000000000000000000) = SHL v2c5(0xa0), v2c3(0x1)",0x2be,v2c7,"0,v2c5,v2c3",SHL,logShareBurnedWithId,public,False,0x10000000000000000000000000000000000000000,0,0x798
"    0x2c8: v2c8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2c7(0x10000000000000000000000000000000000000000), v2c1(0x1)",0x2be,v2c8,"0,v2c7,v2c1",SUB,logShareBurnedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x798
"    0x2c9: v2c9 = AND v2c8(0xffffffffffffffffffffffffffffffffffffffff), v8f",0x2be,v2c9,"0,v2c8,v8f",AND,logShareBurnedWithId,public,False,0,0,0x798
    0x2cb: v2cb(0x502f5a6697a92e602c626b931a4a771fef4360eb9cece7bf906f10c5cec96aaa) = CONST ,0x2be,v2cb,0,CONST,logShareBurnedWithId,public,False,0x502f5a6697a92e602c626b931a4a771fef4360eb9cece7bf906f10c5cec96aaa,0,0x798
    0x2ee: v2ee(0x40) = CONST ,0x2be,v2ee,0,CONST,logShareBurnedWithId,public,False,0x40,0,0x798
    0x2f0: v2f0 = MLOAD v2ee(0x40),0x2be,v2f0,"0,v2ee",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,0x798
"    0x2f4: MSTORE v2f0, v9b",0x2be,logShareBurnedWithId&m0x40,"0,v2f0,v9b",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,0x798
    0x2f5: v2f5(0x20) = CONST ,0x2be,v2f5,0,CONST,logShareBurnedWithId,public,False,0x20,0,0x798
"    0x2f7: v2f7 = ADD v2f5(0x20), v2f0",0x2be,v2f7,"0,v2f5,v2f0",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x20,0x798
"    0x2fa: MSTORE v2f7, va0",0x2be,logShareBurnedWithId&m0x40+0x20,"0,v2f7,va0",MSTORE,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x20,0x798
    0x2fb: v2fb(0x20) = CONST ,0x2be,v2fb,0,CONST,logShareBurnedWithId,public,False,0x20,0,0x798
"    0x2fd: v2fd = ADD v2fb(0x20), v2f7",0x2be,v2fd,"0,v2fb,v2f7",ADD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40+0x20+0x20,0x798
    0x302: v302(0x40) = CONST ,0x2be,v302,0,CONST,logShareBurnedWithId,public,False,0x40,0,0x798
    0x304: v304 = MLOAD v302(0x40),0x2be,v304,"0,v302",MLOAD,logShareBurnedWithId,public,False,0,logShareBurnedWithId&m0x40,0x798
"    0x307: v307(0x40) = SUB v2fd, v304",0x2be,v307,"0,v2fd,v304",SUB,logShareBurnedWithId,public,False,0x40,logShareBurnedWithId&m0x40+0x20+0x20-0x40,0x798
"    0x309: LOG4 v304, v307(0x40), v2cb(0x502f5a6697a92e602c626b931a4a771fef4360eb9cece7bf906f10c5cec96aaa), v80, v2c9, v95",0x2be,0,"0,v304,v307,v2cb,v80,v2c9,v95",LOG4,logShareBurnedWithId,public,False,0,0,0x798
    0x311: JUMP v68(0x798),0x2be,0,"0,v68",JUMP,logShareBurnedWithId,public,False,0,0,0x798
    Begin block 0x798,0x798,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
"    prev=[0x2be], succ=[]",0x798,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
    =================================,0x798,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
    0x799: STOP ,0x798,0,0,STOP,logShareBurnedWithId,public,False,0,0,0x798
},0x798,0,0,0,logShareBurnedWithId,public,False,0,0,0x798
"function logDelegatorUnstakedWithId(uint256,address,uint256,uint256)() public {",0xa7,0,0,,logDelegatorUnstakedWithId,public,False,0,0,0x798
    Begin block 0xa7,0xa7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x798
"    prev=[], succ=[0xb9, 0xbd]",0xa7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    =================================,0xa7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    0xa8: va8(0x7b9) = CONST ,0xa7,va8,0,CONST,logDelegatorUnstakedWithId,public,False,0x7b9,0,"0xb9, 0xbd"
    0xab: vab(0x4) = CONST ,0xa7,vab,0,CONST,logDelegatorUnstakedWithId,public,False,0x4,0,"0xb9, 0xbd"
    0xae: vae = CALLDATASIZE ,0xa7,vae,0,CALLDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
"    0xaf: vaf = SUB vae, vab(0x4)",0xa7,vaf,"0,vae,vab",SUB,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    0xb0: vb0(0x80) = CONST ,0xa7,vb0,0,CONST,logDelegatorUnstakedWithId,public,False,0x80,0,"0xb9, 0xbd"
"    0xb3: vb3 = LT vaf, vb0(0x80)",0xa7,vb3,"0,vaf,vb0",LT,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    0xb4: vb4 = ISZERO vb3,0xa7,vb4,"0,vb3",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    0xb5: vb5(0xbd) = CONST ,0xa7,vb5,0,CONST,logDelegatorUnstakedWithId,public,False,0xbd,0,"0xb9, 0xbd"
"    0xb8: JUMPI vb5(0xbd), vb4",0xa7,0,"0,vb5,vb4",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    Begin block 0xb9,0xb9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
"    prev=[0xa7], succ=[]",0xb9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    =================================,0xb9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    0xb9: vb9(0x0) = CONST ,0xb9,vb9,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0xb9, 0xbd"
"    0xbc: REVERT vb9(0x0), vb9(0x0)",0xb9,0,"0,vb9,vb9",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
    Begin block 0xbd,0xbd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0xb9, 0xbd"
"    prev=[0xa7], succ=[0x312]",0xbd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x312
    =================================,0xbd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x312
    0xc0: vc0 = CALLDATALOAD vab(0x4),0xbd,vc0,"0,vab",CALLDATALOAD,logDelegatorUnstakedWithId,public,False,0,0,0x312
    0xc2: vc2(0x1) = CONST ,0xbd,vc2,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,0x312
    0xc4: vc4(0x1) = CONST ,0xbd,vc4,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,0x312
    0xc6: vc6(0xa0) = CONST ,0xbd,vc6,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,0x312
"    0xc8: vc8(0x10000000000000000000000000000000000000000) = SHL vc6(0xa0), vc4(0x1)",0xbd,vc8,"0,vc6,vc4",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,0x312
"    0xc9: vc9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc8(0x10000000000000000000000000000000000000000), vc2(0x1)",0xbd,vc9,"0,vc8,vc2",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x312
    0xca: vca(0x20) = CONST ,0xbd,vca,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,0x312
"    0xcd: vcd(0x24) = ADD vab(0x4), vca(0x20)",0xbd,vcd,"0,vab,vca",ADD,logDelegatorUnstakedWithId,public,False,0x24,0,0x312
    0xce: vce = CALLDATALOAD vcd(0x24),0xbd,vce,"0,vcd",CALLDATALOAD,logDelegatorUnstakedWithId,public,False,0,0,0x312
"    0xcf: vcf = AND vce, vc9(0xffffffffffffffffffffffffffffffffffffffff)",0xbd,vcf,"0,vce,vc9",AND,logDelegatorUnstakedWithId,public,False,0,0,0x312
    0xd1: vd1(0x40) = CONST ,0xbd,vd1,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,0x312
"    0xd4: vd4(0x44) = ADD vab(0x4), vd1(0x40)",0xbd,vd4,"0,vab,vd1",ADD,logDelegatorUnstakedWithId,public,False,0x44,0,0x312
    0xd5: vd5 = CALLDATALOAD vd4(0x44),0xbd,vd5,"0,vd4",CALLDATALOAD,logDelegatorUnstakedWithId,public,False,0,0,0x312
    0xd7: vd7(0x60) = CONST ,0xbd,vd7,0,CONST,logDelegatorUnstakedWithId,public,False,0x60,0,0x312
"    0xd9: vd9(0x64) = ADD vd7(0x60), vab(0x4)",0xbd,vd9,"0,vd7,vab",ADD,logDelegatorUnstakedWithId,public,False,0x64,0,0x312
    0xda: vda = CALLDATALOAD vd9(0x64),0xbd,vda,"0,vd9",CALLDATALOAD,logDelegatorUnstakedWithId,public,False,0,0,0x312
    0xdb: vdb(0x312) = CONST ,0xbd,vdb,0,CONST,logDelegatorUnstakedWithId,public,False,0x312,0,0x312
    0xde: JUMP vdb(0x312),0xbd,0,"0,vdb",JUMP,logDelegatorUnstakedWithId,public,False,0,0,0x312
    Begin block 0x312,0x312,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x312
"    prev=[0xbd], succ=[0x35e, 0x362]",0x312,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    =================================,0x312,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x314: v314(0x0) = CONST ,0x312,v314,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x35e, 0x362"
    0x317: v317(0x1) = CONST ,0x312,v317,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x35e, 0x362"
    0x31a: v31a = SLOAD v314(0x0),0x312,v31a,"0,v314",SLOAD,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x31c: v31c(0x100) = CONST ,0x312,v31c,0,CONST,logDelegatorUnstakedWithId,public,False,0x100,0,"0x35e, 0x362"
"    0x31f: v31f(0x100) = EXP v31c(0x100), v317(0x1)",0x312,v31f,"0,v31c,v317",EXP,logDelegatorUnstakedWithId,public,False,0x100,0,"0x35e, 0x362"
"    0x321: v321 = DIV v31a, v31f(0x100)",0x312,v321,"0,v31a,v31f",DIV,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x322: v322(0x1) = CONST ,0x312,v322,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x35e, 0x362"
    0x324: v324(0x1) = CONST ,0x312,v324,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x35e, 0x362"
    0x326: v326(0xa0) = CONST ,0x312,v326,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,"0x35e, 0x362"
"    0x328: v328(0x10000000000000000000000000000000000000000) = SHL v326(0xa0), v324(0x1)",0x312,v328,"0,v326,v324",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x35e, 0x362"
"    0x329: v329(0xffffffffffffffffffffffffffffffffffffffff) = SUB v328(0x10000000000000000000000000000000000000000), v322(0x1)",0x312,v329,"0,v328,v322",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x35e, 0x362"
"    0x32a: v32a = AND v329(0xffffffffffffffffffffffffffffffffffffffff), v321",0x312,v32a,"0,v329,v321",AND,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x32b: v32b(0x1) = CONST ,0x312,v32b,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x35e, 0x362"
    0x32d: v32d(0x1) = CONST ,0x312,v32d,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x35e, 0x362"
    0x32f: v32f(0xa0) = CONST ,0x312,v32f,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,"0x35e, 0x362"
"    0x331: v331(0x10000000000000000000000000000000000000000) = SHL v32f(0xa0), v32d(0x1)",0x312,v331,"0,v32f,v32d",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x35e, 0x362"
"    0x332: v332(0xffffffffffffffffffffffffffffffffffffffff) = SUB v331(0x10000000000000000000000000000000000000000), v32b(0x1)",0x312,v332,"0,v331,v32b",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x35e, 0x362"
"    0x333: v333 = AND v332(0xffffffffffffffffffffffffffffffffffffffff), v32a",0x312,v333,"0,v332,v32a",AND,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x334: v334(0x287be3e4) = CONST ,0x312,v334,0,CONST,logDelegatorUnstakedWithId,public,False,0x287be3e4,0,"0x35e, 0x362"
    0x339: v339(0x40) = CONST ,0x312,v339,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x35e, 0x362"
    0x33b: v33b = MLOAD v339(0x40),0x312,v33b,"0,v339",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x35e, 0x362"
    0x33d: v33d(0xffffffff) = CONST ,0x312,v33d,0,CONST,logDelegatorUnstakedWithId,public,False,0xffffffff,0,"0x35e, 0x362"
"    0x342: v342(0x287be3e4) = AND v33d(0xffffffff), v334(0x287be3e4)",0x312,v342,"0,v33d,v334",AND,logDelegatorUnstakedWithId,public,False,0x287be3e4,0,"0x35e, 0x362"
    0x343: v343(0xe0) = CONST ,0x312,v343,0,CONST,logDelegatorUnstakedWithId,public,False,0xe0,0,"0x35e, 0x362"
"    0x345: v345(0x287be3e400000000000000000000000000000000000000000000000000000000) = SHL v343(0xe0), v342(0x287be3e4)",0x312,v345,"0,v343,v342",SHL,logDelegatorUnstakedWithId,public,False,0x287be3e400000000000000000000000000000000000000000000000000000000,0,"0x35e, 0x362"
"    0x347: MSTORE v33b, v345(0x287be3e400000000000000000000000000000000000000000000000000000000)",0x312,logDelegatorUnstakedWithId&m0x40,"0,v33b,v345",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x35e, 0x362"
    0x348: v348(0x4) = CONST ,0x312,v348,0,CONST,logDelegatorUnstakedWithId,public,False,0x4,0,"0x35e, 0x362"
"    0x34a: v34a = ADD v348(0x4), v33b",0x312,v34a,"0,v348,v33b",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x4,"0x35e, 0x362"
    0x34b: v34b(0x20) = CONST ,0x312,v34b,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,"0x35e, 0x362"
    0x34d: v34d(0x40) = CONST ,0x312,v34d,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x35e, 0x362"
    0x34f: v34f = MLOAD v34d(0x40),0x312,v34f,"0,v34d",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x35e, 0x362"
"    0x352: v352(0x4) = SUB v34a, v34f",0x312,v352,"0,v34a,v34f",SUB,logDelegatorUnstakedWithId,public,False,0x4,logDelegatorUnstakedWithId&m0x40+0x4-0x4,"0x35e, 0x362"
    0x356: v356 = EXTCODESIZE v333,0x312,v356,"0,v333",EXTCODESIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x357: v357 = ISZERO v356,0x312,v357,"0,v356",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x359: v359 = ISZERO v357,0x312,v359,"0,v357",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x35a: v35a(0x362) = CONST ,0x312,v35a,0,CONST,logDelegatorUnstakedWithId,public,False,0x362,0,"0x35e, 0x362"
"    0x35d: JUMPI v35a(0x362), v359",0x312,0,"0,v35a,v359",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    Begin block 0x35e,0x35e,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
"    prev=[0x312], succ=[]",0x35e,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    =================================,0x35e,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    0x35e: v35e(0x0) = CONST ,0x35e,v35e,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x35e, 0x362"
"    0x361: REVERT v35e(0x0), v35e(0x0)",0x35e,0,"0,v35e,v35e",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
    Begin block 0x362,0x362,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x35e, 0x362"
"    prev=[0x312], succ=[0x36d, 0x376]",0x362,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    =================================,0x362,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x364: v364 = GAS ,0x362,v364,0,GAS,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
"    0x365: v365 = STATICCALL v364, v333, v34f, v352(0x4), v34f, v34b(0x20)",0x362,v365,"0,v364,v333,v34f,v352,v34f,v34b",STATICCALL,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x366: v366 = ISZERO v365,0x362,v366,"0,v365",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x368: v368 = ISZERO v366,0x362,v368,"0,v366",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x369: v369(0x376) = CONST ,0x362,v369,0,CONST,logDelegatorUnstakedWithId,public,False,0x376,0,"0x36d, 0x376"
"    0x36c: JUMPI v369(0x376), v368",0x362,0,"0,v369,v368",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    Begin block 0x36d,0x36d,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
"    prev=[0x362], succ=[]",0x36d,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    =================================,0x36d,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x36d: v36d = RETURNDATASIZE ,0x36d,v36d,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x36e: v36e(0x0) = CONST ,0x36d,v36e,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x36d, 0x376"
"    0x371: RETURNDATACOPY v36e(0x0), v36e(0x0), v36d",0x36d,0,"0,v36e,v36e,v36d",RETURNDATACOPY,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x372: v372 = RETURNDATASIZE ,0x36d,v372,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    0x373: v373(0x0) = CONST ,0x36d,v373,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x36d, 0x376"
"    0x375: REVERT v373(0x0), v372",0x36d,0,"0,v373,v372",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
    Begin block 0x376,0x376,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x36d, 0x376"
"    prev=[0x362], succ=[0x388, 0x38c]",0x376,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    =================================,0x376,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    0x37b: v37b(0x40) = CONST ,0x376,v37b,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x388, 0x38c"
    0x37d: v37d = MLOAD v37b(0x40),0x376,v37d,"0,v37b",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x388, 0x38c"
    0x37e: v37e = RETURNDATASIZE ,0x376,v37e,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    0x37f: v37f(0x20) = CONST ,0x376,v37f,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,"0x388, 0x38c"
"    0x382: v382 = LT v37e, v37f(0x20)",0x376,v382,"0,v37e,v37f",LT,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    0x383: v383 = ISZERO v382,0x376,v383,"0,v382",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    0x384: v384(0x38c) = CONST ,0x376,v384,0,CONST,logDelegatorUnstakedWithId,public,False,0x38c,0,"0x388, 0x38c"
"    0x387: JUMPI v384(0x38c), v383",0x376,0,"0,v384,v383",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    Begin block 0x388,0x388,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
"    prev=[0x376], succ=[]",0x388,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    =================================,0x388,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    0x388: v388(0x0) = CONST ,0x388,v388,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x388, 0x38c"
"    0x38b: REVERT v388(0x0), v388(0x0)",0x388,0,"0,v388,v388",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
    Begin block 0x38c,0x38c,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x388, 0x38c"
"    prev=[0x376], succ=[0x3d3, 0x3d7]",0x38c,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    =================================,0x38c,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x38e: v38e = MLOAD v37d,0x38c,v38e,"0,v37d",MLOAD,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x38f: v38f(0x40) = CONST ,0x38c,v38f,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x3d3, 0x3d7"
    0x392: v392 = MLOAD v38f(0x40),0x38c,v392,"0,v38f",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x3d3, 0x3d7"
    0x393: v393(0xd6a8b91) = CONST ,0x38c,v393,0,CONST,logDelegatorUnstakedWithId,public,False,0xd6a8b91,0,"0x3d3, 0x3d7"
    0x398: v398(0xe2) = CONST ,0x38c,v398,0,CONST,logDelegatorUnstakedWithId,public,False,0xe2,0,"0x3d3, 0x3d7"
"    0x39a: v39a(0x35aa2e4400000000000000000000000000000000000000000000000000000000) = SHL v398(0xe2), v393(0xd6a8b91)",0x38c,v39a,"0,v398,v393",SHL,logDelegatorUnstakedWithId,public,False,0x35aa2e4400000000000000000000000000000000000000000000000000000000,0,"0x3d3, 0x3d7"
"    0x39c: MSTORE v392, v39a(0x35aa2e4400000000000000000000000000000000000000000000000000000000)",0x38c,logDelegatorUnstakedWithId&m0x40,"0,v392,v39a",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x3d3, 0x3d7"
    0x39d: v39d(0x4) = CONST ,0x38c,v39d,0,CONST,logDelegatorUnstakedWithId,public,False,0x4,0,"0x3d3, 0x3d7"
"    0x3a0: v3a0 = ADD v392, v39d(0x4)",0x38c,v3a0,"0,v392,v39d",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x4,"0x3d3, 0x3d7"
"    0x3a3: MSTORE v3a0, vc0",0x38c,logDelegatorUnstakedWithId&m0x40+0x4,"0,v3a0,vc0",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x4,"0x3d3, 0x3d7"
    0x3a5: v3a5 = MLOAD v38f(0x40),0x38c,v3a5,"0,v38f",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x3d3, 0x3d7"
    0x3a6: v3a6(0x1) = CONST ,0x38c,v3a6,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x3d3, 0x3d7"
    0x3a8: v3a8(0x1) = CONST ,0x38c,v3a8,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x3d3, 0x3d7"
    0x3aa: v3aa(0xa0) = CONST ,0x38c,v3aa,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,"0x3d3, 0x3d7"
"    0x3ac: v3ac(0x10000000000000000000000000000000000000000) = SHL v3aa(0xa0), v3a8(0x1)",0x38c,v3ac,"0,v3aa,v3a8",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x3d3, 0x3d7"
"    0x3ad: v3ad(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ac(0x10000000000000000000000000000000000000000), v3a6(0x1)",0x38c,v3ad,"0,v3ac,v3a6",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x3d3, 0x3d7"
"    0x3b0: v3b0 = AND v38e, v3ad(0xffffffffffffffffffffffffffffffffffffffff)",0x38c,v3b0,"0,v38e,v3ad",AND,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x3b2: v3b2(0x35aa2e44) = CONST ,0x38c,v3b2,0,CONST,logDelegatorUnstakedWithId,public,False,0x35aa2e44,0,"0x3d3, 0x3d7"
    0x3b8: v3b8(0x24) = CONST ,0x38c,v3b8,0,CONST,logDelegatorUnstakedWithId,public,False,0x24,0,"0x3d3, 0x3d7"
"    0x3bc: v3bc = ADD v392, v3b8(0x24)",0x38c,v3bc,"0,v392,v3b8",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x24,"0x3d3, 0x3d7"
    0x3be: v3be(0xe0) = CONST ,0x38c,v3be,0,CONST,logDelegatorUnstakedWithId,public,False,0xe0,0,"0x3d3, 0x3d7"
"    0x3c6: v3c6(0x0) = SUB v392, v3a5",0x38c,v3c6,"0,v392,v3a5",SUB,logDelegatorUnstakedWithId,public,False,0x0,logDelegatorUnstakedWithId&m0x40-0x0,"0x3d3, 0x3d7"
"    0x3c7: v3c7(0x24) = ADD v3c6(0x0), v3b8(0x24)",0x38c,v3c7,"0,v3c6,v3b8",ADD,logDelegatorUnstakedWithId,public,False,0x24,logDelegatorUnstakedWithId&m0x40-0x0+0x24,"0x3d3, 0x3d7"
    0x3cb: v3cb = EXTCODESIZE v3b0,0x38c,v3cb,"0,v3b0",EXTCODESIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x3cc: v3cc = ISZERO v3cb,0x38c,v3cc,"0,v3cb",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x3ce: v3ce = ISZERO v3cc,0x38c,v3ce,"0,v3cc",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x3cf: v3cf(0x3d7) = CONST ,0x38c,v3cf,0,CONST,logDelegatorUnstakedWithId,public,False,0x3d7,0,"0x3d3, 0x3d7"
"    0x3d2: JUMPI v3cf(0x3d7), v3ce",0x38c,0,"0,v3cf,v3ce",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    Begin block 0x3d3,0x3d3,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
"    prev=[0x38c], succ=[]",0x3d3,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    =================================,0x3d3,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    0x3d3: v3d3(0x0) = CONST ,0x3d3,v3d3,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x3d3, 0x3d7"
"    0x3d6: REVERT v3d3(0x0), v3d3(0x0)",0x3d3,0,"0,v3d3,v3d3",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
    Begin block 0x3d7,0x3d7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3d3, 0x3d7"
"    prev=[0x38c], succ=[0x3e2, 0x3eb]",0x3d7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    =================================,0x3d7,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3d9: v3d9 = GAS ,0x3d7,v3d9,0,GAS,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
"    0x3da: v3da = STATICCALL v3d9, v3b0, v3a5, v3c7(0x24), v3a5, v3be(0xe0)",0x3d7,v3da,"0,v3d9,v3b0,v3a5,v3c7,v3a5,v3be",STATICCALL,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3db: v3db = ISZERO v3da,0x3d7,v3db,"0,v3da",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3dd: v3dd = ISZERO v3db,0x3d7,v3dd,"0,v3db",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3de: v3de(0x3eb) = CONST ,0x3d7,v3de,0,CONST,logDelegatorUnstakedWithId,public,False,0x3eb,0,"0x3e2, 0x3eb"
"    0x3e1: JUMPI v3de(0x3eb), v3dd",0x3d7,0,"0,v3de,v3dd",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    Begin block 0x3e2,0x3e2,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
"    prev=[0x3d7], succ=[]",0x3e2,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    =================================,0x3e2,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3e2: v3e2 = RETURNDATASIZE ,0x3e2,v3e2,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3e3: v3e3(0x0) = CONST ,0x3e2,v3e3,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x3e2, 0x3eb"
"    0x3e6: RETURNDATACOPY v3e3(0x0), v3e3(0x0), v3e2",0x3e2,0,"0,v3e3,v3e3,v3e2",RETURNDATACOPY,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3e7: v3e7 = RETURNDATASIZE ,0x3e2,v3e7,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    0x3e8: v3e8(0x0) = CONST ,0x3e2,v3e8,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x3e2, 0x3eb"
"    0x3ea: REVERT v3e8(0x0), v3e7",0x3e2,0,"0,v3e8,v3e7",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
    Begin block 0x3eb,0x3eb,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3e2, 0x3eb"
"    prev=[0x3d7], succ=[0x3fd, 0x401]",0x3eb,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    =================================,0x3eb,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    0x3f0: v3f0(0x40) = CONST ,0x3eb,v3f0,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x3fd, 0x401"
    0x3f2: v3f2 = MLOAD v3f0(0x40),0x3eb,v3f2,"0,v3f0",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x3fd, 0x401"
    0x3f3: v3f3 = RETURNDATASIZE ,0x3eb,v3f3,0,RETURNDATASIZE,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    0x3f4: v3f4(0xe0) = CONST ,0x3eb,v3f4,0,CONST,logDelegatorUnstakedWithId,public,False,0xe0,0,"0x3fd, 0x401"
"    0x3f7: v3f7 = LT v3f3, v3f4(0xe0)",0x3eb,v3f7,"0,v3f3,v3f4",LT,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    0x3f8: v3f8 = ISZERO v3f7,0x3eb,v3f8,"0,v3f7",ISZERO,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    0x3f9: v3f9(0x401) = CONST ,0x3eb,v3f9,0,CONST,logDelegatorUnstakedWithId,public,False,0x401,0,"0x3fd, 0x401"
"    0x3fc: JUMPI v3f9(0x401), v3f8",0x3eb,0,"0,v3f9,v3f8",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    Begin block 0x3fd,0x3fd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
"    prev=[0x3eb], succ=[]",0x3fd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    =================================,0x3fd,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    0x3fd: v3fd(0x0) = CONST ,0x3fd,v3fd,0,CONST,logDelegatorUnstakedWithId,public,False,0x0,0,"0x3fd, 0x401"
"    0x400: REVERT v3fd(0x0), v3fd(0x0)",0x3fd,0,"0,v3fd,v3fd",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
    Begin block 0x401,0x401,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x3fd, 0x401"
"    prev=[0x3eb], succ=[0x419, 0x455]",0x401,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    =================================,0x401,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    0x403: v403(0xc0) = CONST ,0x401,v403,0,CONST,logDelegatorUnstakedWithId,public,False,0xc0,0,"0x419, 0x455"
"    0x405: v405 = ADD v403(0xc0), v3f2",0x401,v405,"0,v403,v3f2",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0xc0,"0x419, 0x455"
    0x406: v406 = MLOAD v405,0x401,v406,"0,v405",MLOAD,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    0x409: v409(0x1) = CONST ,0x401,v409,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x419, 0x455"
    0x40b: v40b(0x1) = CONST ,0x401,v40b,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,"0x419, 0x455"
    0x40d: v40d(0xa0) = CONST ,0x401,v40d,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,"0x419, 0x455"
"    0x40f: v40f(0x10000000000000000000000000000000000000000) = SHL v40d(0xa0), v40b(0x1)",0x401,v40f,"0,v40d,v40b",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,"0x419, 0x455"
"    0x410: v410(0xffffffffffffffffffffffffffffffffffffffff) = SUB v40f(0x10000000000000000000000000000000000000000), v409(0x1)",0x401,v410,"0,v40f,v409",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x419, 0x455"
"    0x412: v412 = AND v406, v410(0xffffffffffffffffffffffffffffffffffffffff)",0x401,v412,"0,v406,v410",AND,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    0x413: v413 = CALLER ,0x401,v413,0,CALLER,logDelegatorUnstakedWithId,public,True,0,0,"0x419, 0x455"
"    0x414: v414 = EQ v413, v412",0x401,v414,"0,v413,v412",EQ,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    0x415: v415(0x455) = CONST ,0x401,v415,0,CONST,logDelegatorUnstakedWithId,public,False,0x455,0,"0x419, 0x455"
"    0x418: JUMPI v415(0x455), v414",0x401,0,"0,v415,v414",JUMPI,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    Begin block 0x419,0x419,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
"    prev=[0x401], succ=[]",0x419,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    =================================,0x419,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    0x419: v419(0x40) = CONST ,0x419,v419,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,"0x419, 0x455"
    0x41c: v41c = MLOAD v419(0x40),0x419,v41c,"0,v419",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x419, 0x455"
    0x41d: v41d(0x461bcd) = CONST ,0x419,v41d,0,CONST,logDelegatorUnstakedWithId,public,False,0x461bcd,0,"0x419, 0x455"
    0x421: v421(0xe5) = CONST ,0x419,v421,0,CONST,logDelegatorUnstakedWithId,public,False,0xe5,0,"0x419, 0x455"
"    0x423: v423(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v421(0xe5), v41d(0x461bcd)",0x419,v423,"0,v421,v41d",SHL,logDelegatorUnstakedWithId,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x419, 0x455"
"    0x425: MSTORE v41c, v423(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x419,logDelegatorUnstakedWithId&m0x40,"0,v41c,v423",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x419, 0x455"
    0x426: v426(0x20) = CONST ,0x419,v426,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,"0x419, 0x455"
    0x428: v428(0x4) = CONST ,0x419,v428,0,CONST,logDelegatorUnstakedWithId,public,False,0x4,0,"0x419, 0x455"
"    0x42b: v42b = ADD v41c, v428(0x4)",0x419,v42b,"0,v41c,v428",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x4,"0x419, 0x455"
"    0x42c: MSTORE v42b, v426(0x20)",0x419,logDelegatorUnstakedWithId&m0x40+0x4,"0,v42b,v426",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x4,"0x419, 0x455"
    0x42d: v42d(0xd) = CONST ,0x419,v42d,0,CONST,logDelegatorUnstakedWithId,public,False,0xd,0,"0x419, 0x455"
    0x42f: v42f(0x24) = CONST ,0x419,v42f,0,CONST,logDelegatorUnstakedWithId,public,False,0x24,0,"0x419, 0x455"
"    0x432: v432 = ADD v41c, v42f(0x24)",0x419,v432,"0,v41c,v42f",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x24,"0x419, 0x455"
"    0x433: MSTORE v432, v42d(0xd)",0x419,logDelegatorUnstakedWithId&m0x40+0x24,"0,v432,v42d",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x24,"0x419, 0x455"
    0x434: v434(0x3737ba103b30b634b230ba37b9) = CONST ,0x419,v434,0,CONST,logDelegatorUnstakedWithId,public,False,0x3737ba103b30b634b230ba37b9,0,"0x419, 0x455"
    0x442: v442(0x99) = CONST ,0x419,v442,0,CONST,logDelegatorUnstakedWithId,public,False,0x99,0,"0x419, 0x455"
"    0x444: v444(0x6e6f742076616c696461746f7200000000000000000000000000000000000000) = SHL v442(0x99), v434(0x3737ba103b30b634b230ba37b9)",0x419,v444,"0,v442,v434",SHL,logDelegatorUnstakedWithId,public,False,0x6e6f742076616c696461746f7200000000000000000000000000000000000000,0,"0x419, 0x455"
    0x445: v445(0x44) = CONST ,0x419,v445,0,CONST,logDelegatorUnstakedWithId,public,False,0x44,0,"0x419, 0x455"
"    0x448: v448 = ADD v41c, v445(0x44)",0x419,v448,"0,v41c,v445",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x44,"0x419, 0x455"
"    0x449: MSTORE v448, v444(0x6e6f742076616c696461746f7200000000000000000000000000000000000000)",0x419,logDelegatorUnstakedWithId&m0x40+0x44,"0,v448,v444",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x44,"0x419, 0x455"
    0x44b: v44b = MLOAD v419(0x40),0x419,v44b,"0,v419",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,"0x419, 0x455"
"    0x44f: v44f(0x0) = SUB v41c, v44b",0x419,v44f,"0,v41c,v44b",SUB,logDelegatorUnstakedWithId,public,False,0x0,logDelegatorUnstakedWithId&m0x40-0x0,"0x419, 0x455"
    0x450: v450(0x64) = CONST ,0x419,v450,0,CONST,logDelegatorUnstakedWithId,public,False,0x64,0,"0x419, 0x455"
"    0x452: v452(0x64) = ADD v450(0x64), v44f(0x0)",0x419,v452,"0,v450,v44f",ADD,logDelegatorUnstakedWithId,public,False,0x64,logDelegatorUnstakedWithId&m0x40-0x0+0x64,"0x419, 0x455"
"    0x454: REVERT v44b, v452(0x64)",0x419,0,"0,v44b,v452",REVERT,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
    Begin block 0x455,0x455,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,"0x419, 0x455"
"    prev=[0x401], succ=[0x7b9]",0x455,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    =================================,0x455,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    0x457: v457(0x1) = CONST ,0x455,v457,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,0x7b9
    0x459: v459(0x1) = CONST ,0x455,v459,0,CONST,logDelegatorUnstakedWithId,public,False,0x1,0,0x7b9
    0x45b: v45b(0xa0) = CONST ,0x455,v45b,0,CONST,logDelegatorUnstakedWithId,public,False,0xa0,0,0x7b9
"    0x45d: v45d(0x10000000000000000000000000000000000000000) = SHL v45b(0xa0), v459(0x1)",0x455,v45d,"0,v45b,v459",SHL,logDelegatorUnstakedWithId,public,False,0x10000000000000000000000000000000000000000,0,0x7b9
"    0x45e: v45e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v45d(0x10000000000000000000000000000000000000000), v457(0x1)",0x455,v45e,"0,v45d,v457",SUB,logDelegatorUnstakedWithId,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7b9
"    0x45f: v45f = AND v45e(0xffffffffffffffffffffffffffffffffffffffff), vcf",0x455,v45f,"0,v45e,vcf",AND,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    0x461: v461(0x7beb9bef91040fcf7607c78d4fc668370a9036788d7e6f202a4a2db5b0c28c80) = CONST ,0x455,v461,0,CONST,logDelegatorUnstakedWithId,public,False,0x7beb9bef91040fcf7607c78d4fc668370a9036788d7e6f202a4a2db5b0c28c80,0,0x7b9
    0x484: v484(0x40) = CONST ,0x455,v484,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,0x7b9
    0x486: v486 = MLOAD v484(0x40),0x455,v486,"0,v484",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,0x7b9
"    0x48a: MSTORE v486, vd5",0x455,logDelegatorUnstakedWithId&m0x40,"0,v486,vd5",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,0x7b9
    0x48b: v48b(0x20) = CONST ,0x455,v48b,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,0x7b9
"    0x48d: v48d = ADD v48b(0x20), v486",0x455,v48d,"0,v48b,v486",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x20,0x7b9
"    0x490: MSTORE v48d, vda",0x455,logDelegatorUnstakedWithId&m0x40+0x20,"0,v48d,vda",MSTORE,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x20,0x7b9
    0x491: v491(0x20) = CONST ,0x455,v491,0,CONST,logDelegatorUnstakedWithId,public,False,0x20,0,0x7b9
"    0x493: v493 = ADD v491(0x20), v48d",0x455,v493,"0,v491,v48d",ADD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40+0x20+0x20,0x7b9
    0x498: v498(0x40) = CONST ,0x455,v498,0,CONST,logDelegatorUnstakedWithId,public,False,0x40,0,0x7b9
    0x49a: v49a = MLOAD v498(0x40),0x455,v49a,"0,v498",MLOAD,logDelegatorUnstakedWithId,public,False,0,logDelegatorUnstakedWithId&m0x40,0x7b9
"    0x49d: v49d(0x40) = SUB v493, v49a",0x455,v49d,"0,v493,v49a",SUB,logDelegatorUnstakedWithId,public,False,0x40,logDelegatorUnstakedWithId&m0x40+0x20+0x20-0x40,0x7b9
"    0x49f: LOG3 v49a, v49d(0x40), v461(0x7beb9bef91040fcf7607c78d4fc668370a9036788d7e6f202a4a2db5b0c28c80), vc0, v45f",0x455,0,"0,v49a,v49d,v461,vc0,v45f",LOG3,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    0x4a6: JUMP va8(0x7b9),0x455,0,"0,va8",JUMP,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    Begin block 0x7b9,0x7b9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
"    prev=[0x455], succ=[]",0x7b9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    =================================,0x7b9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
    0x7ba: STOP ,0x7b9,0,0,STOP,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
},0x7b9,0,0,0,logDelegatorUnstakedWithId,public,False,0,0,0x7b9
function registry()() public {,0xdf,0,0,public,registry,public,False,0,0,0x7b9
    Begin block 0xdf,0xdf,0,0,0,registry,public,False,0,0,0x7b9
"    prev=[], succ=[0x4a7]",0xdf,0,0,0,registry,public,False,0,0,0x4a7
    =================================,0xdf,0,0,0,registry,public,False,0,0,0x4a7
    0xe0: ve0(0xe7) = CONST ,0xdf,ve0,0,CONST,registry,public,False,0xe7,0,0x4a7
    0xe3: ve3(0x4a7) = CONST ,0xdf,ve3,0,CONST,registry,public,False,0x4a7,0,0x4a7
    0xe6: JUMP ve3(0x4a7),0xdf,0,"0,ve3",JUMP,registry,public,False,0,0,0x4a7
    Begin block 0x4a7,0x4a7,0,0,0,registry,public,False,0,0,0x4a7
"    prev=[0xdf], succ=[0xe7]",0x4a7,0,0,0,registry,public,False,0,0,0xe7
    =================================,0x4a7,0,0,0,registry,public,False,0,0,0xe7
    0x4a8: v4a8(0x0) = CONST ,0x4a7,v4a8,0,CONST,registry,public,False,0x0,0,0xe7
    0x4aa: v4aa = SLOAD v4a8(0x0),0x4a7,v4aa,"0,v4a8",SLOAD,registry,public,False,0,0,0xe7
    0x4ab: v4ab(0x100) = CONST ,0x4a7,v4ab,0,CONST,registry,public,False,0x100,0,0xe7
"    0x4af: v4af = DIV v4aa, v4ab(0x100)",0x4a7,v4af,"0,v4aa,v4ab",DIV,registry,public,False,0,0,0xe7
    0x4b0: v4b0(0x1) = CONST ,0x4a7,v4b0,0,CONST,registry,public,False,0x1,0,0xe7
    0x4b2: v4b2(0x1) = CONST ,0x4a7,v4b2,0,CONST,registry,public,False,0x1,0,0xe7
    0x4b4: v4b4(0xa0) = CONST ,0x4a7,v4b4,0,CONST,registry,public,False,0xa0,0,0xe7
"    0x4b6: v4b6(0x10000000000000000000000000000000000000000) = SHL v4b4(0xa0), v4b2(0x1)",0x4a7,v4b6,"0,v4b4,v4b2",SHL,registry,public,False,0x10000000000000000000000000000000000000000,0,0xe7
"    0x4b7: v4b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4b6(0x10000000000000000000000000000000000000000), v4b0(0x1)",0x4a7,v4b7,"0,v4b6,v4b0",SUB,registry,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xe7
"    0x4b8: v4b8 = AND v4b7(0xffffffffffffffffffffffffffffffffffffffff), v4af",0x4a7,v4b8,"0,v4b7,v4af",AND,registry,public,False,0,0,0xe7
    0x4ba: JUMP ve0(0xe7),0x4a7,0,"0,ve0",JUMP,registry,public,False,0,0,0xe7
    Begin block 0xe7,0xe7,0,0,0,registry,public,False,0,0,0xe7
"    prev=[0x4a7], succ=[]",0xe7,0,0,0,registry,public,False,0,0,0xe7
    =================================,0xe7,0,0,0,registry,public,False,0,0,0xe7
    0xe8: ve8(0x40) = CONST ,0xe7,ve8,0,CONST,registry,public,False,0x40,0,0xe7
    0xeb: veb = MLOAD ve8(0x40),0xe7,veb,"0,ve8",MLOAD,registry,public,False,0,registry&m0x40,0xe7
    0xec: vec(0x1) = CONST ,0xe7,vec,0,CONST,registry,public,False,0x1,0,0xe7
    0xee: vee(0x1) = CONST ,0xe7,vee,0,CONST,registry,public,False,0x1,0,0xe7
    0xf0: vf0(0xa0) = CONST ,0xe7,vf0,0,CONST,registry,public,False,0xa0,0,0xe7
"    0xf2: vf2(0x10000000000000000000000000000000000000000) = SHL vf0(0xa0), vee(0x1)",0xe7,vf2,"0,vf0,vee",SHL,registry,public,False,0x10000000000000000000000000000000000000000,0,0xe7
"    0xf3: vf3(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf2(0x10000000000000000000000000000000000000000), vec(0x1)",0xe7,vf3,"0,vf2,vec",SUB,registry,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xe7
"    0xf6: vf6 = AND v4b8, vf3(0xffffffffffffffffffffffffffffffffffffffff)",0xe7,vf6,"0,v4b8,vf3",AND,registry,public,False,0,0,0xe7
"    0xf8: MSTORE veb, vf6",0xe7,registry&m0x40,"0,veb,vf6",MSTORE,registry,public,False,0,registry&m0x40,0xe7
    0xf9: vf9 = MLOAD ve8(0x40),0xe7,vf9,"0,ve8",MLOAD,registry,public,False,0,registry&m0x40,0xe7
"    0xfd: vfd(0x0) = SUB veb, vf9",0xe7,vfd,"0,veb,vf9",SUB,registry,public,False,0x0,registry&m0x40-0x0,0xe7
    0xfe: vfe(0x20) = CONST ,0xe7,vfe,0,CONST,registry,public,False,0x20,0,0xe7
"    0x100: v100(0x20) = ADD vfe(0x20), vfd(0x0)",0xe7,v100,"0,vfe,vfd",ADD,registry,public,False,0x20,registry&m0x40-0x0+0x20,0xe7
"    0x102: RETURN vf9, v100(0x20)",0xe7,0,"0,vf9,v100",RETURN,registry,public,False,0,0,0xe7
},0xe7,0,0,0,registry,public,False,0,0,0xe7
