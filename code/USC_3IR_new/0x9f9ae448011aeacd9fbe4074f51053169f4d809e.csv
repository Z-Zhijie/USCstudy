3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x1a, 0xbaf]",0x10,0,0,0,0,0,False,0,0,"0x1a, 0xbaf"
    =================================,0x10,0,0,0,0,0,False,0,0,"0x1a, 0xbaf"
    0x12: v12(0x4) = CONST ,0x10,v12,0,CONST,0,0,False,0x4,0,"0x1a, 0xbaf"
    0x14: v14 = CALLDATASIZE ,0x10,v14,0,CALLDATASIZE,0,0,False,0,0,"0x1a, 0xbaf"
"    0x15: v15 = LT v14, v12(0x4)",0x10,v15,"0,v14,v12",LT,0,0,False,0,0,"0x1a, 0xbaf"
    0xb80: vb80(0xbaf) = CONST ,0x10,vb80,0,CONST,0,0,False,0xbaf,0,"0x1a, 0xbaf"
"    0xb81: JUMPI vb80(0xbaf), v15",0x10,0,"0,vb80,v15",JUMPI,0,0,False,0,0,"0x1a, 0xbaf"
    Begin block 0x1a,0x1a,0,0,0,0,0,False,0,0,"0x1a, 0xbaf"
"    prev=[0x10], succ=[0x66, 0x2b]",0x1a,0,0,0,0,0,False,0,0,"0x66, 0x2b"
    =================================,0x1a,0,0,0,0,0,False,0,0,"0x66, 0x2b"
    0x1a: v1a(0x0) = CONST ,0x1a,v1a,0,CONST,0,0,False,0x0,0,"0x66, 0x2b"
    0x1c: v1c = CALLDATALOAD v1a(0x0),0x1a,v1c,"0,v1a",CALLDATALOAD,0,0,False,0,0,"0x66, 0x2b"
    0x1d: v1d(0xe0) = CONST ,0x1a,v1d,0,CONST,0,0,False,0xe0,0,"0x66, 0x2b"
"    0x1f: v1f = SHR v1d(0xe0), v1c",0x1a,v1f,"0,v1d,v1c",SHR,0,0,False,0,0,"0x66, 0x2b"
    0x21: v21(0x9f788e7b) = CONST ,0x1a,v21,0,CONST,0,0,False,0x9f788e7b,0,"0x66, 0x2b"
"    0x26: v26 = GT v21(0x9f788e7b), v1f",0x1a,v26,"0,v21,v1f",GT,0,0,False,0,0,"0x66, 0x2b"
    0x27: v27(0x66) = CONST ,0x1a,v27,0,CONST,0,0,False,0x66,0,"0x66, 0x2b"
"    0x2a: JUMPI v27(0x66), v26",0x1a,0,"0,v27,v26",JUMPI,0,0,False,0,0,"0x66, 0x2b"
    Begin block 0x66,0x66,0,0,0,0,0,False,0,0,"0x66, 0x2b"
"    prev=[0x1a], succ=[0xb94, 0x72]",0x66,0,0,0,0,0,False,0,0,"0xb94, 0x72"
    =================================,0x66,0,0,0,0,0,False,0,0,"0xb94, 0x72"
    0x68: v68(0xc340a24) = CONST ,0x66,v68,0,CONST,0,0,False,0xc340a24,0,"0xb94, 0x72"
"    0x6d: v6d = EQ v68(0xc340a24), v1f",0x66,v6d,"0,v68,v1f",EQ,0,0,False,0,0,"0xb94, 0x72"
    0xb8c: vb8c(0xb94) = CONST ,0x66,vb8c,0,CONST,0,0,False,0xb94,0,"0xb94, 0x72"
"    0xb8d: JUMPI vb8c(0xb94), v6d",0x66,0,"0,vb8c,v6d",JUMPI,0,0,False,0,0,"0xb94, 0x72"
    Begin block 0xb94,0xb94,0,0,0,0,0,False,0,0,"0xb94, 0x72"
"    prev=[0x66], succ=[]",0xb94,0,0,0,0,0,False,0,0,"0xb94, 0x72"
    =================================,0xb94,0,0,0,0,0,False,0,0,"0xb94, 0x72"
    0xb95: vb95(0x98) = CONST ,0xb94,vb95,0,CONST,0,0,False,0x98,0,"0xb94, 0x72"
    0xb96: CALLPRIVATE vb95(0x98),0xb94,0,"0,vb95",CALLPRIVATE,0,0,False,0,0,"0xb94, 0x72"
    Begin block 0x72,0x72,0,0,0,0,0,False,0,0,"0xb94, 0x72"
"    prev=[0x66], succ=[0xb97, 0x7d]",0x72,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
    =================================,0x72,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
    0x73: v73(0x228cb733) = CONST ,0x72,v73,0,CONST,0,0,False,0x228cb733,0,"0xb97, 0x7d"
"    0x78: v78 = EQ v73(0x228cb733), v1f",0x72,v78,"0,v73,v1f",EQ,0,0,False,0,0,"0xb97, 0x7d"
    0xb8e: vb8e(0xb97) = CONST ,0x72,vb8e,0,CONST,0,0,False,0xb97,0,"0xb97, 0x7d"
"    0xb8f: JUMPI vb8e(0xb97), v78",0x72,0,"0,vb8e,v78",JUMPI,0,0,False,0,0,"0xb97, 0x7d"
    Begin block 0xb97,0xb97,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
"    prev=[0x72], succ=[]",0xb97,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
    =================================,0xb97,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
    0xb98: vb98(0xbc) = CONST ,0xb97,vb98,0,CONST,0,0,False,0xbc,0,"0xb97, 0x7d"
    0xb99: CALLPRIVATE vb98(0xbc),0xb97,0,"0,vb98",CALLPRIVATE,0,0,False,0,0,"0xb97, 0x7d"
    Begin block 0x7d,0x7d,0,0,0,0,0,False,0,0,"0xb97, 0x7d"
"    prev=[0x72], succ=[0xb9a, 0x88]",0x7d,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
    =================================,0x7d,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
    0x7e: v7e(0x34c6f197) = CONST ,0x7d,v7e,0,CONST,0,0,False,0x34c6f197,0,"0xb9a, 0x88"
"    0x83: v83 = EQ v7e(0x34c6f197), v1f",0x7d,v83,"0,v7e,v1f",EQ,0,0,False,0,0,"0xb9a, 0x88"
    0xb90: vb90(0xb9a) = CONST ,0x7d,vb90,0,CONST,0,0,False,0xb9a,0,"0xb9a, 0x88"
"    0xb91: JUMPI vb90(0xb9a), v83",0x7d,0,"0,vb90,v83",JUMPI,0,0,False,0,0,"0xb9a, 0x88"
    Begin block 0xb9a,0xb9a,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
"    prev=[0x7d], succ=[]",0xb9a,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
    =================================,0xb9a,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
    0xb9b: vb9b(0xc4) = CONST ,0xb9a,vb9b,0,CONST,0,0,False,0xc4,0,"0xb9a, 0x88"
    0xb9c: CALLPRIVATE vb9b(0xc4),0xb9a,0,"0,vb9b",CALLPRIVATE,0,0,False,0,0,"0xb9a, 0x88"
    Begin block 0x88,0x88,0,0,0,0,0,False,0,0,"0xb9a, 0x88"
"    prev=[0x7d], succ=[0xb9d, 0x93]",0x88,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    =================================,0x88,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    0x89: v89(0x81c0c263) = CONST ,0x88,v89,0,CONST,0,0,False,0x81c0c263,0,"0xb9d, 0x93"
"    0x8e: v8e = EQ v89(0x81c0c263), v1f",0x88,v8e,"0,v89,v1f",EQ,0,0,False,0,0,"0xb9d, 0x93"
    0xb92: vb92(0xb9d) = CONST ,0x88,vb92,0,CONST,0,0,False,0xb9d,0,"0xb9d, 0x93"
"    0xb93: JUMPI vb92(0xb9d), v8e",0x88,0,"0,vb92,v8e",JUMPI,0,0,False,0,0,"0xb9d, 0x93"
    Begin block 0xb9d,0xb9d,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
"    prev=[0x88], succ=[]",0xb9d,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    =================================,0xb9d,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    0xb9e: vb9e(0xec) = CONST ,0xb9d,vb9e,0,CONST,0,0,False,0xec,0,"0xb9d, 0x93"
    0xb9f: CALLPRIVATE vb9e(0xec),0xb9d,0,"0,vb9e",CALLPRIVATE,0,0,False,0,0,"0xb9d, 0x93"
    Begin block 0x93,0x93,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
"    prev=[0x88], succ=[]",0x93,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    =================================,0x93,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
    0x94: v94(0x0) = CONST ,0x93,v94,0,CONST,0,0,False,0x0,0,"0xb9d, 0x93"
"    0x97: REVERT v94(0x0), v94(0x0)",0x93,0,"0,v94,v94",REVERT,0,0,False,0,0,"0xb9d, 0x93"
    Begin block 0x2b,0x2b,0,0,0,0,0,False,0,0,"0xb9d, 0x93"
"    prev=[0x1a], succ=[0x36, 0xba0]",0x2b,0,0,0,0,0,False,0,0,"0x36, 0xba0"
    =================================,0x2b,0,0,0,0,0,False,0,0,"0x36, 0xba0"
    0x2c: v2c(0x9f788e7b) = CONST ,0x2b,v2c,0,CONST,0,0,False,0x9f788e7b,0,"0x36, 0xba0"
"    0x31: v31 = EQ v2c(0x9f788e7b), v1f",0x2b,v31,"0,v2c,v1f",EQ,0,0,False,0,0,"0x36, 0xba0"
    0xb82: vb82(0xba0) = CONST ,0x2b,vb82,0,CONST,0,0,False,0xba0,0,"0x36, 0xba0"
"    0xb83: JUMPI vb82(0xba0), v31",0x2b,0,"0,vb82,v31",JUMPI,0,0,False,0,0,"0x36, 0xba0"
    Begin block 0x36,0x36,0,0,0,0,0,False,0,0,"0x36, 0xba0"
"    prev=[0x2b], succ=[0xba3, 0x41]",0x36,0,0,0,0,0,False,0,0,"0xba3, 0x41"
    =================================,0x36,0,0,0,0,0,False,0,0,"0xba3, 0x41"
    0x37: v37(0xb6aa515b) = CONST ,0x36,v37,0,CONST,0,0,False,0xb6aa515b,0,"0xba3, 0x41"
"    0x3c: v3c = EQ v37(0xb6aa515b), v1f",0x36,v3c,"0,v37,v1f",EQ,0,0,False,0,0,"0xba3, 0x41"
    0xb84: vb84(0xba3) = CONST ,0x36,vb84,0,CONST,0,0,False,0xba3,0,"0xba3, 0x41"
"    0xb85: JUMPI vb84(0xba3), v3c",0x36,0,"0,vb84,v3c",JUMPI,0,0,False,0,0,"0xba3, 0x41"
    Begin block 0xba3,0xba3,0,0,0,0,0,False,0,0,"0xba3, 0x41"
"    prev=[0x36], succ=[]",0xba3,0,0,0,0,0,False,0,0,"0xba3, 0x41"
    =================================,0xba3,0,0,0,0,0,False,0,0,"0xba3, 0x41"
    0xba4: vba4(0x122) = CONST ,0xba3,vba4,0,CONST,0,0,False,0x122,0,"0xba3, 0x41"
    0xba5: CALLPRIVATE vba4(0x122),0xba3,0,"0,vba4",CALLPRIVATE,0,0,False,0,0,"0xba3, 0x41"
    Begin block 0x41,0x41,0,0,0,0,0,False,0,0,"0xba3, 0x41"
"    prev=[0x36], succ=[0xba6, 0x4c]",0x41,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
    =================================,0x41,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
    0x42: v42(0xcddf2c6e) = CONST ,0x41,v42,0,CONST,0,0,False,0xcddf2c6e,0,"0xba6, 0x4c"
"    0x47: v47 = EQ v42(0xcddf2c6e), v1f",0x41,v47,"0,v42,v1f",EQ,0,0,False,0,0,"0xba6, 0x4c"
    0xb86: vb86(0xba6) = CONST ,0x41,vb86,0,CONST,0,0,False,0xba6,0,"0xba6, 0x4c"
"    0xb87: JUMPI vb86(0xba6), v47",0x41,0,"0,vb86,v47",JUMPI,0,0,False,0,0,"0xba6, 0x4c"
    Begin block 0xba6,0xba6,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
"    prev=[0x41], succ=[]",0xba6,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
    =================================,0xba6,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
    0xba7: vba7(0x148) = CONST ,0xba6,vba7,0,CONST,0,0,False,0x148,0,"0xba6, 0x4c"
    0xba8: CALLPRIVATE vba7(0x148),0xba6,0,"0,vba7",CALLPRIVATE,0,0,False,0,0,"0xba6, 0x4c"
    Begin block 0x4c,0x4c,0,0,0,0,0,False,0,0,"0xba6, 0x4c"
"    prev=[0x41], succ=[0xba9, 0x57]",0x4c,0,0,0,0,0,False,0,0,"0xba9, 0x57"
    =================================,0x4c,0,0,0,0,0,False,0,0,"0xba9, 0x57"
    0x4d: v4d(0xda3e3397) = CONST ,0x4c,v4d,0,CONST,0,0,False,0xda3e3397,0,"0xba9, 0x57"
"    0x52: v52 = EQ v4d(0xda3e3397), v1f",0x4c,v52,"0,v4d,v1f",EQ,0,0,False,0,0,"0xba9, 0x57"
    0xb88: vb88(0xba9) = CONST ,0x4c,vb88,0,CONST,0,0,False,0xba9,0,"0xba9, 0x57"
"    0xb89: JUMPI vb88(0xba9), v52",0x4c,0,"0,vb88,v52",JUMPI,0,0,False,0,0,"0xba9, 0x57"
    Begin block 0xba9,0xba9,0,0,0,0,0,False,0,0,"0xba9, 0x57"
"    prev=[0x4c], succ=[]",0xba9,0,0,0,0,0,False,0,0,"0xba9, 0x57"
    =================================,0xba9,0,0,0,0,0,False,0,0,"0xba9, 0x57"
    0xbaa: vbaa(0x174) = CONST ,0xba9,vbaa,0,CONST,0,0,False,0x174,0,"0xba9, 0x57"
    0xbab: CALLPRIVATE vbaa(0x174),0xba9,0,"0,vbaa",CALLPRIVATE,0,0,False,0,0,"0xba9, 0x57"
    Begin block 0x57,0x57,0,0,0,0,0,False,0,0,"0xba9, 0x57"
"    prev=[0x4c], succ=[0x62, 0xbac]",0x57,0,0,0,0,0,False,0,0,"0x62, 0xbac"
    =================================,0x57,0,0,0,0,0,False,0,0,"0x62, 0xbac"
    0x58: v58(0xdf69e016) = CONST ,0x57,v58,0,CONST,0,0,False,0xdf69e016,0,"0x62, 0xbac"
"    0x5d: v5d = EQ v58(0xdf69e016), v1f",0x57,v5d,"0,v58,v1f",EQ,0,0,False,0,0,"0x62, 0xbac"
    0xb8a: vb8a(0xbac) = CONST ,0x57,vb8a,0,CONST,0,0,False,0xbac,0,"0x62, 0xbac"
"    0xb8b: JUMPI vb8a(0xbac), v5d",0x57,0,"0,vb8a,v5d",JUMPI,0,0,False,0,0,"0x62, 0xbac"
    Begin block 0x62,0x62,0,0,0,0,0,False,0,0,"0x62, 0xbac"
"    prev=[0x57], succ=[0x922]",0x62,0,0,0,0,0,False,0,0,0x922
    =================================,0x62,0,0,0,0,0,False,0,0,0x922
    0x62: v62(0x922) = CONST ,0x62,v62,0,CONST,0,0,False,0x922,0,0x922
    0x65: JUMP v62(0x922),0x62,0,"0,v62",JUMP,0,0,False,0,0,0x922
    Begin block 0x922,0x922,0,0,0,0,0,False,0,0,0x922
"    prev=[0x62], succ=[]",0x922,0,0,0,0,0,False,0,0,0x922
    =================================,0x922,0,0,0,0,0,False,0,0,0x922
    0x923: v923(0x0) = CONST ,0x922,v923,0,CONST,0,0,False,0x0,0,0x922
"    0x926: REVERT v923(0x0), v923(0x0)",0x922,0,"0,v923,v923",REVERT,0,0,False,0,0,0x922
    Begin block 0xbac,0xbac,0,0,0,0,0,False,0,0,0x922
"    prev=[0x57], succ=[]",0xbac,0,0,0,0,0,False,0,0,0x922
    =================================,0xbac,0,0,0,0,0,False,0,0,0x922
    0xbad: vbad(0x1aa) = CONST ,0xbac,vbad,0,CONST,0,0,False,0x1aa,0,0x922
    0xbae: CALLPRIVATE vbad(0x1aa),0xbac,0,"0,vbad",CALLPRIVATE,0,0,False,0,0,0x922
    Begin block 0xba0,0xba0,0,0,0,0,0,False,0,0,0x922
"    prev=[0x2b], succ=[]",0xba0,0,0,0,0,0,False,0,0,0x922
    =================================,0xba0,0,0,0,0,0,False,0,0,0x922
    0xba1: vba1(0xf4) = CONST ,0xba0,vba1,0,CONST,0,0,False,0xf4,0,0x922
    0xba2: CALLPRIVATE vba1(0xf4),0xba0,0,"0,vba1",CALLPRIVATE,0,0,False,0,0,0x922
    Begin block 0xbaf,0xbaf,0,0,0,0,0,False,0,0,0x922
"    prev=[0x10], succ=[]",0xbaf,0,0,0,0,0,False,0,0,0x922
    =================================,0xbaf,0,0,0,0,0,False,0,0,0x922
    0xbb0: vbb0(0x8fe) = CONST ,0xbaf,vbb0,0,CONST,0,0,False,0x8fe,0,0x922
    0xbb1: CALLPRIVATE vbb0(0x8fe),0xbaf,0,"0,vbb0",CALLPRIVATE,0,0,False,0,0,0x922
},0xbaf,0,0,0,0,0,False,0,0,0x922
function transferGovernorship(address)() public {,0x122,0,"0,transferGovernorship",public,transferGovernorship,public,False,0,0,0x922
    Begin block 0x122,0x122,0,0,0,transferGovernorship,public,False,0,0,0x922
"    prev=[], succ=[0x134, 0x138]",0x122,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
    =================================,0x122,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
    0x123: v123(0xa1f) = CONST ,0x122,v123,0,CONST,transferGovernorship,public,False,0xa1f,0,"0x134, 0x138"
    0x126: v126(0x4) = CONST ,0x122,v126,0,CONST,transferGovernorship,public,False,0x4,0,"0x134, 0x138"
    0x129: v129 = CALLDATASIZE ,0x122,v129,0,CALLDATASIZE,transferGovernorship,public,False,0,0,"0x134, 0x138"
"    0x12a: v12a = SUB v129, v126(0x4)",0x122,v12a,"0,v129,v126",SUB,transferGovernorship,public,False,0,0,"0x134, 0x138"
    0x12b: v12b(0x20) = CONST ,0x122,v12b,0,CONST,transferGovernorship,public,False,0x20,0,"0x134, 0x138"
"    0x12e: v12e = LT v12a, v12b(0x20)",0x122,v12e,"0,v12a,v12b",LT,transferGovernorship,public,False,0,0,"0x134, 0x138"
    0x12f: v12f = ISZERO v12e,0x122,v12f,"0,v12e",ISZERO,transferGovernorship,public,False,0,0,"0x134, 0x138"
    0x130: v130(0x138) = CONST ,0x122,v130,0,CONST,transferGovernorship,public,False,0x138,0,"0x134, 0x138"
"    0x133: JUMPI v130(0x138), v12f",0x122,0,"0,v130,v12f",JUMPI,transferGovernorship,public,False,0,0,"0x134, 0x138"
    Begin block 0x134,0x134,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
"    prev=[0x122], succ=[]",0x134,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
    =================================,0x134,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
    0x134: v134(0x0) = CONST ,0x134,v134,0,CONST,transferGovernorship,public,False,0x0,0,"0x134, 0x138"
"    0x137: REVERT v134(0x0), v134(0x0)",0x134,0,"0,v134,v134",REVERT,transferGovernorship,public,False,0,0,"0x134, 0x138"
    Begin block 0x138,0x138,0,0,0,transferGovernorship,public,False,0,0,"0x134, 0x138"
"    prev=[0x122], succ=[0x33e]",0x138,0,0,0,transferGovernorship,public,False,0,0,0x33e
    =================================,0x138,0,0,0,transferGovernorship,public,False,0,0,0x33e
    0x13a: v13a = CALLDATALOAD v126(0x4),0x138,v13a,"0,v126",CALLDATALOAD,transferGovernorship,public,False,0,0,0x33e
    0x13b: v13b(0x1) = CONST ,0x138,v13b,0,CONST,transferGovernorship,public,False,0x1,0,0x33e
    0x13d: v13d(0x1) = CONST ,0x138,v13d,0,CONST,transferGovernorship,public,False,0x1,0,0x33e
    0x13f: v13f(0xa0) = CONST ,0x138,v13f,0,CONST,transferGovernorship,public,False,0xa0,0,0x33e
"    0x141: v141(0x10000000000000000000000000000000000000000) = SHL v13f(0xa0), v13d(0x1)",0x138,v141,"0,v13f,v13d",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x33e
"    0x142: v142(0xffffffffffffffffffffffffffffffffffffffff) = SUB v141(0x10000000000000000000000000000000000000000), v13b(0x1)",0x138,v142,"0,v141,v13b",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x33e
"    0x143: v143 = AND v142(0xffffffffffffffffffffffffffffffffffffffff), v13a",0x138,v143,"0,v142,v13a",AND,transferGovernorship,public,False,0,0,0x33e
    0x144: v144(0x33e) = CONST ,0x138,v144,0,CONST,transferGovernorship,public,False,0x33e,0,0x33e
    0x147: JUMP v144(0x33e),0x138,0,"0,v144",JUMP,transferGovernorship,public,False,0,0,0x33e
    Begin block 0x33e,0x33e,0,0,0,transferGovernorship,public,False,0,0,0x33e
"    prev=[0x138], succ=[0x351, 0x355]",0x33e,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
    =================================,0x33e,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
    0x33f: v33f(0x33) = CONST ,0x33e,v33f,0,CONST,transferGovernorship,public,False,0x33,0,"0x351, 0x355"
    0x341: v341 = SLOAD v33f(0x33),0x33e,v341,"0,v33f",SLOAD,transferGovernorship,public,False,0,0,"0x351, 0x355"
    0x342: v342(0x1) = CONST ,0x33e,v342,0,CONST,transferGovernorship,public,False,0x1,0,"0x351, 0x355"
    0x344: v344(0x1) = CONST ,0x33e,v344,0,CONST,transferGovernorship,public,False,0x1,0,"0x351, 0x355"
    0x346: v346(0xa0) = CONST ,0x33e,v346,0,CONST,transferGovernorship,public,False,0xa0,0,"0x351, 0x355"
"    0x348: v348(0x10000000000000000000000000000000000000000) = SHL v346(0xa0), v344(0x1)",0x33e,v348,"0,v346,v344",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,"0x351, 0x355"
"    0x349: v349(0xffffffffffffffffffffffffffffffffffffffff) = SUB v348(0x10000000000000000000000000000000000000000), v342(0x1)",0x33e,v349,"0,v348,v342",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x351, 0x355"
"    0x34a: v34a = AND v349(0xffffffffffffffffffffffffffffffffffffffff), v341",0x33e,v34a,"0,v349,v341",AND,transferGovernorship,public,False,0,0,"0x351, 0x355"
    0x34b: v34b = CALLER ,0x33e,v34b,0,CALLER,transferGovernorship,public,True,0,0,"0x351, 0x355"
"    0x34c: v34c = EQ v34b, v34a",0x33e,v34c,"0,v34b,v34a",EQ,transferGovernorship,public,False,0,0,"0x351, 0x355"
    0x34d: v34d(0x355) = CONST ,0x33e,v34d,0,CONST,transferGovernorship,public,False,0x355,0,"0x351, 0x355"
"    0x350: JUMPI v34d(0x355), v34c",0x33e,0,"0,v34d,v34c",JUMPI,transferGovernorship,public,False,0,0,"0x351, 0x355"
    Begin block 0x351,0x351,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
"    prev=[0x33e], succ=[]",0x351,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
    =================================,0x351,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
    0x351: v351(0x0) = CONST ,0x351,v351,0,CONST,transferGovernorship,public,False,0x0,0,"0x351, 0x355"
"    0x354: REVERT v351(0x0), v351(0x0)",0x351,0,"0,v351,v351",REVERT,transferGovernorship,public,False,0,0,"0x351, 0x355"
    Begin block 0x355,0x355,0,0,0,transferGovernorship,public,False,0,0,"0x351, 0x355"
"    prev=[0x33e], succ=[0x4b5]",0x355,0,0,0,transferGovernorship,public,False,0,0,0x4b5
    =================================,0x355,0,0,0,transferGovernorship,public,False,0,0,0x4b5
    0x356: v356(0x35e) = CONST ,0x355,v356,0,CONST,transferGovernorship,public,False,0x35e,0,0x4b5
    0x35a: v35a(0x4b5) = CONST ,0x355,v35a,0,CONST,transferGovernorship,public,False,0x4b5,0,0x4b5
    0x35d: JUMP v35a(0x4b5),0x355,0,"0,v35a",JUMP,transferGovernorship,public,False,0,0,0x4b5
    Begin block 0x4b5,0x4b5,0,0,0,transferGovernorship,public,False,0,0,0x4b5
"    prev=[0x355], succ=[0x4c4, 0x4c8]",0x4b5,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    =================================,0x4b5,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    0x4b6: v4b6(0x1) = CONST ,0x4b5,v4b6,0,CONST,transferGovernorship,public,False,0x1,0,"0x4c4, 0x4c8"
    0x4b8: v4b8(0x1) = CONST ,0x4b5,v4b8,0,CONST,transferGovernorship,public,False,0x1,0,"0x4c4, 0x4c8"
    0x4ba: v4ba(0xa0) = CONST ,0x4b5,v4ba,0,CONST,transferGovernorship,public,False,0xa0,0,"0x4c4, 0x4c8"
"    0x4bc: v4bc(0x10000000000000000000000000000000000000000) = SHL v4ba(0xa0), v4b8(0x1)",0x4b5,v4bc,"0,v4ba,v4b8",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,"0x4c4, 0x4c8"
"    0x4bd: v4bd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4bc(0x10000000000000000000000000000000000000000), v4b6(0x1)",0x4b5,v4bd,"0,v4bc,v4b6",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4c4, 0x4c8"
"    0x4bf: v4bf = AND v143, v4bd(0xffffffffffffffffffffffffffffffffffffffff)",0x4b5,v4bf,"0,v143,v4bd",AND,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    0x4c0: v4c0(0x4c8) = CONST ,0x4b5,v4c0,0,CONST,transferGovernorship,public,False,0x4c8,0,"0x4c4, 0x4c8"
"    0x4c3: JUMPI v4c0(0x4c8), v4bf",0x4b5,0,"0,v4c0,v4bf",JUMPI,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    Begin block 0x4c4,0x4c4,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
"    prev=[0x4b5], succ=[]",0x4c4,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    =================================,0x4c4,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    0x4c4: v4c4(0x0) = CONST ,0x4c4,v4c4,0,CONST,transferGovernorship,public,False,0x0,0,"0x4c4, 0x4c8"
"    0x4c7: REVERT v4c4(0x0), v4c4(0x0)",0x4c4,0,"0,v4c4,v4c4",REVERT,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
    Begin block 0x4c8,0x4c8,0,0,0,transferGovernorship,public,False,0,0,"0x4c4, 0x4c8"
"    prev=[0x4b5], succ=[0x35e]",0x4c8,0,0,0,transferGovernorship,public,False,0,0,0x35e
    =================================,0x4c8,0,0,0,transferGovernorship,public,False,0,0,0x35e
    0x4c9: v4c9(0x33) = CONST ,0x4c8,v4c9,0,CONST,transferGovernorship,public,False,0x33,0,0x35e
    0x4cb: v4cb = SLOAD v4c9(0x33),0x4c8,v4cb,"0,v4c9",SLOAD,transferGovernorship,public,False,0,0,0x35e
    0x4cc: v4cc(0x40) = CONST ,0x4c8,v4cc,0,CONST,transferGovernorship,public,False,0x40,0,0x35e
    0x4ce: v4ce = MLOAD v4cc(0x40),0x4c8,v4ce,"0,v4cc",MLOAD,transferGovernorship,public,False,0,transferGovernorship&m0x40,0x35e
    0x4cf: v4cf(0x1) = CONST ,0x4c8,v4cf,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x4d1: v4d1(0x1) = CONST ,0x4c8,v4d1,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x4d3: v4d3(0xa0) = CONST ,0x4c8,v4d3,0,CONST,transferGovernorship,public,False,0xa0,0,0x35e
"    0x4d5: v4d5(0x10000000000000000000000000000000000000000) = SHL v4d3(0xa0), v4d1(0x1)",0x4c8,v4d5,"0,v4d3,v4d1",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x35e
"    0x4d6: v4d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d5(0x10000000000000000000000000000000000000000), v4cf(0x1)",0x4c8,v4d6,"0,v4d5,v4cf",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x35e
"    0x4d9: v4d9 = AND v143, v4d6(0xffffffffffffffffffffffffffffffffffffffff)",0x4c8,v4d9,"0,v143,v4d6",AND,transferGovernorship,public,False,0,0,0x35e
"    0x4db: v4db = AND v4cb, v4d6(0xffffffffffffffffffffffffffffffffffffffff)",0x4c8,v4db,"0,v4cb,v4d6",AND,transferGovernorship,public,False,0,0,0x35e
    0x4dd: v4dd(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST ,0x4c8,v4dd,0,CONST,transferGovernorship,public,False,0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a,0,0x35e
    0x4ff: v4ff(0x0) = CONST ,0x4c8,v4ff,0,CONST,transferGovernorship,public,False,0x0,0,0x35e
"    0x502: LOG3 v4ce, v4ff(0x0), v4dd(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v4db, v4d9",0x4c8,0,"0,v4ce,v4ff,v4dd,v4db,v4d9",LOG3,transferGovernorship,public,False,0,0,0x35e
    0x503: v503(0x33) = CONST ,0x4c8,v503,0,CONST,transferGovernorship,public,False,0x33,0,0x35e
    0x506: v506 = SLOAD v503(0x33),0x4c8,v506,"0,v503",SLOAD,transferGovernorship,public,False,0,0,0x35e
    0x507: v507(0x1) = CONST ,0x4c8,v507,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x509: v509(0x1) = CONST ,0x4c8,v509,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x50b: v50b(0xa0) = CONST ,0x4c8,v50b,0,CONST,transferGovernorship,public,False,0xa0,0,0x35e
"    0x50d: v50d(0x10000000000000000000000000000000000000000) = SHL v50b(0xa0), v509(0x1)",0x4c8,v50d,"0,v50b,v509",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x35e
"    0x50e: v50e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v50d(0x10000000000000000000000000000000000000000), v507(0x1)",0x4c8,v50e,"0,v50d,v507",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x35e
    0x50f: v50f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v50e(0xffffffffffffffffffffffffffffffffffffffff),0x4c8,v50f,"0,v50e",NOT,transferGovernorship,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x35e
"    0x510: v510 = AND v50f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v506",0x4c8,v510,"0,v50f,v506",AND,transferGovernorship,public,False,0,0,0x35e
    0x511: v511(0x1) = CONST ,0x4c8,v511,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x513: v513(0x1) = CONST ,0x4c8,v513,0,CONST,transferGovernorship,public,False,0x1,0,0x35e
    0x515: v515(0xa0) = CONST ,0x4c8,v515,0,CONST,transferGovernorship,public,False,0xa0,0,0x35e
"    0x517: v517(0x10000000000000000000000000000000000000000) = SHL v515(0xa0), v513(0x1)",0x4c8,v517,"0,v515,v513",SHL,transferGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x35e
"    0x518: v518(0xffffffffffffffffffffffffffffffffffffffff) = SUB v517(0x10000000000000000000000000000000000000000), v511(0x1)",0x4c8,v518,"0,v517,v511",SUB,transferGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x35e
"    0x51c: v51c = AND v518(0xffffffffffffffffffffffffffffffffffffffff), v143",0x4c8,v51c,"0,v518,v143",AND,transferGovernorship,public,False,0,0,0x35e
"    0x520: v520 = OR v51c, v510",0x4c8,v520,"0,v51c,v510",OR,transferGovernorship,public,False,0,0,0x35e
"    0x522: SSTORE v503(0x33), v520",0x4c8,0,"0,v503,v520",SSTORE,transferGovernorship,public,False,0,0,0x35e
    0x523: JUMP v356(0x35e),0x4c8,0,"0,v356",JUMP,transferGovernorship,public,False,0,0,0x35e
    Begin block 0x35e,0x35e,0,0,0,transferGovernorship,public,False,0,0,0x35e
"    prev=[0x4c8], succ=[0xa1f]",0x35e,0,0,0,transferGovernorship,public,False,0,0,0xa1f
    =================================,0x35e,0,0,0,transferGovernorship,public,False,0,0,0xa1f
    0x360: JUMP v123(0xa1f),0x35e,0,"0,v123",JUMP,transferGovernorship,public,False,0,0,0xa1f
    Begin block 0xa1f,0xa1f,0,0,0,transferGovernorship,public,False,0,0,0xa1f
"    prev=[0x35e], succ=[]",0xa1f,0,0,0,transferGovernorship,public,False,0,0,0xa1f
    =================================,0xa1f,0,0,0,transferGovernorship,public,False,0,0,0xa1f
    0xa20: STOP ,0xa1f,0,0,STOP,transferGovernorship,public,False,0,0,0xa1f
},0xa1f,0,0,0,transferGovernorship,public,False,0,0,0xa1f
"function approvePool(address,uint256)() public {",0x148,0,"0,approvePool",,approvePool,public,False,0,0,0xa1f
    Begin block 0x148,0x148,0,0,0,approvePool,public,False,0,0,0xa1f
"    prev=[], succ=[0x15a, 0x15e]",0x148,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
    =================================,0x148,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
    0x149: v149(0xa40) = CONST ,0x148,v149,0,CONST,approvePool,public,False,0xa40,0,"0x15a, 0x15e"
    0x14c: v14c(0x4) = CONST ,0x148,v14c,0,CONST,approvePool,public,False,0x4,0,"0x15a, 0x15e"
    0x14f: v14f = CALLDATASIZE ,0x148,v14f,0,CALLDATASIZE,approvePool,public,False,0,0,"0x15a, 0x15e"
"    0x150: v150 = SUB v14f, v14c(0x4)",0x148,v150,"0,v14f,v14c",SUB,approvePool,public,False,0,0,"0x15a, 0x15e"
    0x151: v151(0x40) = CONST ,0x148,v151,0,CONST,approvePool,public,False,0x40,0,"0x15a, 0x15e"
"    0x154: v154 = LT v150, v151(0x40)",0x148,v154,"0,v150,v151",LT,approvePool,public,False,0,0,"0x15a, 0x15e"
    0x155: v155 = ISZERO v154,0x148,v155,"0,v154",ISZERO,approvePool,public,False,0,0,"0x15a, 0x15e"
    0x156: v156(0x15e) = CONST ,0x148,v156,0,CONST,approvePool,public,False,0x15e,0,"0x15a, 0x15e"
"    0x159: JUMPI v156(0x15e), v155",0x148,0,"0,v156,v155",JUMPI,approvePool,public,False,0,0,"0x15a, 0x15e"
    Begin block 0x15a,0x15a,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
"    prev=[0x148], succ=[]",0x15a,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
    =================================,0x15a,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
    0x15a: v15a(0x0) = CONST ,0x15a,v15a,0,CONST,approvePool,public,False,0x0,0,"0x15a, 0x15e"
"    0x15d: REVERT v15a(0x0), v15a(0x0)",0x15a,0,"0,v15a,v15a",REVERT,approvePool,public,False,0,0,"0x15a, 0x15e"
    Begin block 0x15e,0x15e,0,0,0,approvePool,public,False,0,0,"0x15a, 0x15e"
"    prev=[0x148], succ=[0x361]",0x15e,0,0,0,approvePool,public,False,0,0,0x361
    =================================,0x15e,0,0,0,approvePool,public,False,0,0,0x361
    0x160: v160(0x1) = CONST ,0x15e,v160,0,CONST,approvePool,public,False,0x1,0,0x361
    0x162: v162(0x1) = CONST ,0x15e,v162,0,CONST,approvePool,public,False,0x1,0,0x361
    0x164: v164(0xa0) = CONST ,0x15e,v164,0,CONST,approvePool,public,False,0xa0,0,0x361
"    0x166: v166(0x10000000000000000000000000000000000000000) = SHL v164(0xa0), v162(0x1)",0x15e,v166,"0,v164,v162",SHL,approvePool,public,False,0x10000000000000000000000000000000000000000,0,0x361
"    0x167: v167(0xffffffffffffffffffffffffffffffffffffffff) = SUB v166(0x10000000000000000000000000000000000000000), v160(0x1)",0x15e,v167,"0,v166,v160",SUB,approvePool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x361
    0x169: v169 = CALLDATALOAD v14c(0x4),0x15e,v169,"0,v14c",CALLDATALOAD,approvePool,public,False,0,0,0x361
"    0x16a: v16a = AND v169, v167(0xffffffffffffffffffffffffffffffffffffffff)",0x15e,v16a,"0,v169,v167",AND,approvePool,public,False,0,0,0x361
    0x16c: v16c(0x20) = CONST ,0x15e,v16c,0,CONST,approvePool,public,False,0x20,0,0x361
"    0x16e: v16e(0x24) = ADD v16c(0x20), v14c(0x4)",0x15e,v16e,"0,v16c,v14c",ADD,approvePool,public,False,0x24,0,0x361
    0x16f: v16f = CALLDATALOAD v16e(0x24),0x15e,v16f,"0,v16e",CALLDATALOAD,approvePool,public,False,0,0,0x361
    0x170: v170(0x361) = CONST ,0x15e,v170,0,CONST,approvePool,public,False,0x361,0,0x361
    0x173: JUMP v170(0x361),0x15e,0,"0,v170",JUMP,approvePool,public,False,0,0,0x361
    Begin block 0x361,0x361,0,0,0,approvePool,public,False,0,0,0x361
"    prev=[0x15e], succ=[0x374, 0x378]",0x361,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
    =================================,0x361,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
    0x362: v362(0x33) = CONST ,0x361,v362,0,CONST,approvePool,public,False,0x33,0,"0x374, 0x378"
    0x364: v364 = SLOAD v362(0x33),0x361,v364,"0,v362",SLOAD,approvePool,public,False,0,0,"0x374, 0x378"
    0x365: v365(0x1) = CONST ,0x361,v365,0,CONST,approvePool,public,False,0x1,0,"0x374, 0x378"
    0x367: v367(0x1) = CONST ,0x361,v367,0,CONST,approvePool,public,False,0x1,0,"0x374, 0x378"
    0x369: v369(0xa0) = CONST ,0x361,v369,0,CONST,approvePool,public,False,0xa0,0,"0x374, 0x378"
"    0x36b: v36b(0x10000000000000000000000000000000000000000) = SHL v369(0xa0), v367(0x1)",0x361,v36b,"0,v369,v367",SHL,approvePool,public,False,0x10000000000000000000000000000000000000000,0,"0x374, 0x378"
"    0x36c: v36c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36b(0x10000000000000000000000000000000000000000), v365(0x1)",0x361,v36c,"0,v36b,v365",SUB,approvePool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x374, 0x378"
"    0x36d: v36d = AND v36c(0xffffffffffffffffffffffffffffffffffffffff), v364",0x361,v36d,"0,v36c,v364",AND,approvePool,public,False,0,0,"0x374, 0x378"
    0x36e: v36e = CALLER ,0x361,v36e,0,CALLER,approvePool,public,True,0,0,"0x374, 0x378"
"    0x36f: v36f = EQ v36e, v36d",0x361,v36f,"0,v36e,v36d",EQ,approvePool,public,False,0,0,"0x374, 0x378"
    0x370: v370(0x378) = CONST ,0x361,v370,0,CONST,approvePool,public,False,0x378,0,"0x374, 0x378"
"    0x373: JUMPI v370(0x378), v36f",0x361,0,"0,v370,v36f",JUMPI,approvePool,public,False,0,0,"0x374, 0x378"
    Begin block 0x374,0x374,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
"    prev=[0x361], succ=[]",0x374,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
    =================================,0x374,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
    0x374: v374(0x0) = CONST ,0x374,v374,0,CONST,approvePool,public,False,0x0,0,"0x374, 0x378"
"    0x377: REVERT v374(0x0), v374(0x0)",0x374,0,"0,v374,v374",REVERT,approvePool,public,False,0,0,"0x374, 0x378"
    Begin block 0x378,0x378,0,0,0,approvePool,public,False,0,0,"0x374, 0x378"
"    prev=[0x361], succ=[0xac7]",0x378,0,0,0,approvePool,public,False,0,0,0xac7
    =================================,0x378,0,0,0,approvePool,public,False,0,0,0xac7
    0x379: v379(0x34) = CONST ,0x378,v379,0,CONST,approvePool,public,False,0x34,0,0xac7
    0x37b: v37b = SLOAD v379(0x34),0x378,v37b,"0,v379",SLOAD,approvePool,public,False,0,0,0xac7
    0x37c: v37c(0xac7) = CONST ,0x378,v37c,0,CONST,approvePool,public,False,0xac7,0,0xac7
    0x380: v380(0x1) = CONST ,0x378,v380,0,CONST,approvePool,public,False,0x1,0,0xac7
    0x382: v382(0x1) = CONST ,0x378,v382,0,CONST,approvePool,public,False,0x1,0,0xac7
    0x384: v384(0xa0) = CONST ,0x378,v384,0,CONST,approvePool,public,False,0xa0,0,0xac7
"    0x386: v386(0x10000000000000000000000000000000000000000) = SHL v384(0xa0), v382(0x1)",0x378,v386,"0,v384,v382",SHL,approvePool,public,False,0x10000000000000000000000000000000000000000,0,0xac7
"    0x387: v387(0xffffffffffffffffffffffffffffffffffffffff) = SUB v386(0x10000000000000000000000000000000000000000), v380(0x1)",0x378,v387,"0,v386,v380",SUB,approvePool,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xac7
"    0x388: v388 = AND v387(0xffffffffffffffffffffffffffffffffffffffff), v37b",0x378,v388,"0,v387,v37b",AND,approvePool,public,False,0,0,0xac7
    0x38b: v38b(0x524) = CONST ,0x378,v38b,0,CONST,approvePool,public,False,0x524,0,0xac7
"    0x38e: CALLPRIVATE v38b(0x524), v16f, v16a, v388, v37c(0xac7)",0x378,0,"0,v38b,v16f,v16a,v388,v37c",CALLPRIVATE,approvePool,public,False,0,0,0xac7
    Begin block 0xac7,0xac7,0,0,0,approvePool,public,False,0,0,0xac7
"    prev=[0x378], succ=[0xa40]",0xac7,0,0,0,approvePool,public,False,0,0,0xa40
    =================================,0xac7,0,0,0,approvePool,public,False,0,0,0xa40
    0xaca: JUMP v149(0xa40),0xac7,0,"0,v149",JUMP,approvePool,public,False,0,0,0xa40
    Begin block 0xa40,0xa40,0,0,0,approvePool,public,False,0,0,0xa40
"    prev=[0xac7], succ=[]",0xa40,0,0,0,approvePool,public,False,0,0,0xa40
    =================================,0xa40,0,0,0,approvePool,public,False,0,0,0xa40
    0xa41: STOP ,0xa40,0,0,STOP,approvePool,public,False,0,0,0xa40
},0xa40,0,0,0,approvePool,public,False,0,0,0xa40
"function approveToken(address,address,uint256)() public {",0x174,0,"0,approveToken",,approveToken,public,False,0,0,0xa40
    Begin block 0x174,0x174,0,0,0,approveToken,public,False,0,0,0xa40
"    prev=[], succ=[0x186, 0x18a]",0x174,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
    =================================,0x174,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
    0x175: v175(0xa61) = CONST ,0x174,v175,0,CONST,approveToken,public,False,0xa61,0,"0x186, 0x18a"
    0x178: v178(0x4) = CONST ,0x174,v178,0,CONST,approveToken,public,False,0x4,0,"0x186, 0x18a"
    0x17b: v17b = CALLDATASIZE ,0x174,v17b,0,CALLDATASIZE,approveToken,public,False,0,0,"0x186, 0x18a"
"    0x17c: v17c = SUB v17b, v178(0x4)",0x174,v17c,"0,v17b,v178",SUB,approveToken,public,False,0,0,"0x186, 0x18a"
    0x17d: v17d(0x60) = CONST ,0x174,v17d,0,CONST,approveToken,public,False,0x60,0,"0x186, 0x18a"
"    0x180: v180 = LT v17c, v17d(0x60)",0x174,v180,"0,v17c,v17d",LT,approveToken,public,False,0,0,"0x186, 0x18a"
    0x181: v181 = ISZERO v180,0x174,v181,"0,v180",ISZERO,approveToken,public,False,0,0,"0x186, 0x18a"
    0x182: v182(0x18a) = CONST ,0x174,v182,0,CONST,approveToken,public,False,0x18a,0,"0x186, 0x18a"
"    0x185: JUMPI v182(0x18a), v181",0x174,0,"0,v182,v181",JUMPI,approveToken,public,False,0,0,"0x186, 0x18a"
    Begin block 0x186,0x186,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
"    prev=[0x174], succ=[]",0x186,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
    =================================,0x186,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
    0x186: v186(0x0) = CONST ,0x186,v186,0,CONST,approveToken,public,False,0x0,0,"0x186, 0x18a"
"    0x189: REVERT v186(0x0), v186(0x0)",0x186,0,"0,v186,v186",REVERT,approveToken,public,False,0,0,"0x186, 0x18a"
    Begin block 0x18a,0x18a,0,0,0,approveToken,public,False,0,0,"0x186, 0x18a"
"    prev=[0x174], succ=[0x393]",0x18a,0,0,0,approveToken,public,False,0,0,0x393
    =================================,0x18a,0,0,0,approveToken,public,False,0,0,0x393
    0x18c: v18c(0x1) = CONST ,0x18a,v18c,0,CONST,approveToken,public,False,0x1,0,0x393
    0x18e: v18e(0x1) = CONST ,0x18a,v18e,0,CONST,approveToken,public,False,0x1,0,0x393
    0x190: v190(0xa0) = CONST ,0x18a,v190,0,CONST,approveToken,public,False,0xa0,0,0x393
"    0x192: v192(0x10000000000000000000000000000000000000000) = SHL v190(0xa0), v18e(0x1)",0x18a,v192,"0,v190,v18e",SHL,approveToken,public,False,0x10000000000000000000000000000000000000000,0,0x393
"    0x193: v193(0xffffffffffffffffffffffffffffffffffffffff) = SUB v192(0x10000000000000000000000000000000000000000), v18c(0x1)",0x18a,v193,"0,v192,v18c",SUB,approveToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x393
    0x195: v195 = CALLDATALOAD v178(0x4),0x18a,v195,"0,v178",CALLDATALOAD,approveToken,public,False,0,0,0x393
"    0x197: v197 = AND v193(0xffffffffffffffffffffffffffffffffffffffff), v195",0x18a,v197,"0,v193,v195",AND,approveToken,public,False,0,0,0x393
    0x199: v199(0x20) = CONST ,0x18a,v199,0,CONST,approveToken,public,False,0x20,0,0x393
"    0x19c: v19c(0x24) = ADD v178(0x4), v199(0x20)",0x18a,v19c,"0,v178,v199",ADD,approveToken,public,False,0x24,0,0x393
    0x19d: v19d = CALLDATALOAD v19c(0x24),0x18a,v19d,"0,v19c",CALLDATALOAD,approveToken,public,False,0,0,0x393
"    0x1a0: v1a0 = AND v193(0xffffffffffffffffffffffffffffffffffffffff), v19d",0x18a,v1a0,"0,v193,v19d",AND,approveToken,public,False,0,0,0x393
    0x1a2: v1a2(0x40) = CONST ,0x18a,v1a2,0,CONST,approveToken,public,False,0x40,0,0x393
"    0x1a4: v1a4(0x44) = ADD v1a2(0x40), v178(0x4)",0x18a,v1a4,"0,v1a2,v178",ADD,approveToken,public,False,0x44,0,0x393
    0x1a5: v1a5 = CALLDATALOAD v1a4(0x44),0x18a,v1a5,"0,v1a4",CALLDATALOAD,approveToken,public,False,0,0,0x393
    0x1a6: v1a6(0x393) = CONST ,0x18a,v1a6,0,CONST,approveToken,public,False,0x393,0,0x393
    0x1a9: JUMP v1a6(0x393),0x18a,0,"0,v1a6",JUMP,approveToken,public,False,0,0,0x393
    Begin block 0x393,0x393,0,0,0,approveToken,public,False,0,0,0x393
"    prev=[0x18a], succ=[0x3a6, 0x3aa]",0x393,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    =================================,0x393,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    0x394: v394(0x33) = CONST ,0x393,v394,0,CONST,approveToken,public,False,0x33,0,"0x3a6, 0x3aa"
    0x396: v396 = SLOAD v394(0x33),0x393,v396,"0,v394",SLOAD,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    0x397: v397(0x1) = CONST ,0x393,v397,0,CONST,approveToken,public,False,0x1,0,"0x3a6, 0x3aa"
    0x399: v399(0x1) = CONST ,0x393,v399,0,CONST,approveToken,public,False,0x1,0,"0x3a6, 0x3aa"
    0x39b: v39b(0xa0) = CONST ,0x393,v39b,0,CONST,approveToken,public,False,0xa0,0,"0x3a6, 0x3aa"
"    0x39d: v39d(0x10000000000000000000000000000000000000000) = SHL v39b(0xa0), v399(0x1)",0x393,v39d,"0,v39b,v399",SHL,approveToken,public,False,0x10000000000000000000000000000000000000000,0,"0x3a6, 0x3aa"
"    0x39e: v39e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v39d(0x10000000000000000000000000000000000000000), v397(0x1)",0x393,v39e,"0,v39d,v397",SUB,approveToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x3a6, 0x3aa"
"    0x39f: v39f = AND v39e(0xffffffffffffffffffffffffffffffffffffffff), v396",0x393,v39f,"0,v39e,v396",AND,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    0x3a0: v3a0 = CALLER ,0x393,v3a0,0,CALLER,approveToken,public,True,0,0,"0x3a6, 0x3aa"
"    0x3a1: v3a1 = EQ v3a0, v39f",0x393,v3a1,"0,v3a0,v39f",EQ,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    0x3a2: v3a2(0x3aa) = CONST ,0x393,v3a2,0,CONST,approveToken,public,False,0x3aa,0,"0x3a6, 0x3aa"
"    0x3a5: JUMPI v3a2(0x3aa), v3a1",0x393,0,"0,v3a2,v3a1",JUMPI,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    Begin block 0x3a6,0x3a6,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
"    prev=[0x393], succ=[]",0x3a6,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    =================================,0x3a6,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    0x3a6: v3a6(0x0) = CONST ,0x3a6,v3a6,0,CONST,approveToken,public,False,0x0,0,"0x3a6, 0x3aa"
"    0x3a9: REVERT v3a6(0x0), v3a6(0x0)",0x3a6,0,"0,v3a6,v3a6",REVERT,approveToken,public,False,0,0,"0x3a6, 0x3aa"
    Begin block 0x3aa,0x3aa,0,0,0,approveToken,public,False,0,0,"0x3a6, 0x3aa"
"    prev=[0x393], succ=[0xaea]",0x3aa,0,0,0,approveToken,public,False,0,0,0xaea
    =================================,0x3aa,0,0,0,approveToken,public,False,0,0,0xaea
    0x3ab: v3ab(0xaea) = CONST ,0x3aa,v3ab,0,CONST,approveToken,public,False,0xaea,0,0xaea
    0x3ae: v3ae(0x1) = CONST ,0x3aa,v3ae,0,CONST,approveToken,public,False,0x1,0,0xaea
    0x3b0: v3b0(0x1) = CONST ,0x3aa,v3b0,0,CONST,approveToken,public,False,0x1,0,0xaea
    0x3b2: v3b2(0xa0) = CONST ,0x3aa,v3b2,0,CONST,approveToken,public,False,0xa0,0,0xaea
"    0x3b4: v3b4(0x10000000000000000000000000000000000000000) = SHL v3b2(0xa0), v3b0(0x1)",0x3aa,v3b4,"0,v3b2,v3b0",SHL,approveToken,public,False,0x10000000000000000000000000000000000000000,0,0xaea
"    0x3b5: v3b5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b4(0x10000000000000000000000000000000000000000), v3ae(0x1)",0x3aa,v3b5,"0,v3b4,v3ae",SUB,approveToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xaea
"    0x3b7: v3b7 = AND v197, v3b5(0xffffffffffffffffffffffffffffffffffffffff)",0x3aa,v3b7,"0,v197,v3b5",AND,approveToken,public,False,0,0,0xaea
    0x3ba: v3ba(0x524) = CONST ,0x3aa,v3ba,0,CONST,approveToken,public,False,0x524,0,0xaea
"    0x3bd: CALLPRIVATE v3ba(0x524), v1a5, v1a0, v3b7, v3ab(0xaea)",0x3aa,0,"0,v3ba,v1a5,v1a0,v3b7,v3ab",CALLPRIVATE,approveToken,public,False,0,0,0xaea
    Begin block 0xaea,0xaea,0,0,0,approveToken,public,False,0,0,0xaea
"    prev=[0x3aa], succ=[0xa61]",0xaea,0,0,0,approveToken,public,False,0,0,0xa61
    =================================,0xaea,0,0,0,approveToken,public,False,0,0,0xa61
    0xaee: JUMP v175(0xa61),0xaea,0,"0,v175",JUMP,approveToken,public,False,0,0,0xa61
    Begin block 0xa61,0xa61,0,0,0,approveToken,public,False,0,0,0xa61
"    prev=[0xaea], succ=[]",0xa61,0,0,0,approveToken,public,False,0,0,0xa61
    =================================,0xa61,0,0,0,approveToken,public,False,0,0,0xa61
    0xa62: STOP ,0xa61,0,0,STOP,approveToken,public,False,0,0,0xa61
},0xa61,0,0,0,approveToken,public,False,0,0,0xa61
function __Governable_init_unchained(address)() public {,0x1aa,0,"0,__Governable_init_unchained",public,__Governable_init_unchained,public,False,0,0,0xa61
    Begin block 0x1aa,0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa61
"    prev=[], succ=[0x1bc, 0x1c0]",0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    =================================,0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    0x1ab: v1ab(0xa82) = CONST ,0x1aa,v1ab,0,CONST,__Governable_init_unchained,public,False,0xa82,0,"0x1bc, 0x1c0"
    0x1ae: v1ae(0x4) = CONST ,0x1aa,v1ae,0,CONST,__Governable_init_unchained,public,False,0x4,0,"0x1bc, 0x1c0"
    0x1b1: v1b1 = CALLDATASIZE ,0x1aa,v1b1,0,CALLDATASIZE,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
"    0x1b2: v1b2 = SUB v1b1, v1ae(0x4)",0x1aa,v1b2,"0,v1b1,v1ae",SUB,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    0x1b3: v1b3(0x20) = CONST ,0x1aa,v1b3,0,CONST,__Governable_init_unchained,public,False,0x20,0,"0x1bc, 0x1c0"
"    0x1b6: v1b6 = LT v1b2, v1b3(0x20)",0x1aa,v1b6,"0,v1b2,v1b3",LT,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    0x1b7: v1b7 = ISZERO v1b6,0x1aa,v1b7,"0,v1b6",ISZERO,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    0x1b8: v1b8(0x1c0) = CONST ,0x1aa,v1b8,0,CONST,__Governable_init_unchained,public,False,0x1c0,0,"0x1bc, 0x1c0"
"    0x1bb: JUMPI v1b8(0x1c0), v1b7",0x1aa,0,"0,v1b8,v1b7",JUMPI,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    Begin block 0x1bc,0x1bc,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
"    prev=[0x1aa], succ=[]",0x1bc,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    =================================,0x1bc,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    0x1bc: v1bc(0x0) = CONST ,0x1bc,v1bc,0,CONST,__Governable_init_unchained,public,False,0x0,0,"0x1bc, 0x1c0"
"    0x1bf: REVERT v1bc(0x0), v1bc(0x0)",0x1bc,0,"0,v1bc,v1bc",REVERT,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
    Begin block 0x1c0,0x1c0,0,0,0,__Governable_init_unchained,public,False,0,0,"0x1bc, 0x1c0"
"    prev=[0x1aa], succ=[0x3be0x1aa]",0x1c0,0,0,0,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
    =================================,0x1c0,0,0,0,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
    0x1c2: v1c2 = CALLDATALOAD v1ae(0x4),0x1c0,v1c2,"0,v1ae",CALLDATALOAD,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
    0x1c3: v1c3(0x1) = CONST ,0x1c0,v1c3,0,CONST,__Governable_init_unchained,public,False,0x1,0,0x3be0x1aa
    0x1c5: v1c5(0x1) = CONST ,0x1c0,v1c5,0,CONST,__Governable_init_unchained,public,False,0x1,0,0x3be0x1aa
    0x1c7: v1c7(0xa0) = CONST ,0x1c0,v1c7,0,CONST,__Governable_init_unchained,public,False,0xa0,0,0x3be0x1aa
"    0x1c9: v1c9(0x10000000000000000000000000000000000000000) = SHL v1c7(0xa0), v1c5(0x1)",0x1c0,v1c9,"0,v1c7,v1c5",SHL,__Governable_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,0x3be0x1aa
"    0x1ca: v1ca(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c9(0x10000000000000000000000000000000000000000), v1c3(0x1)",0x1c0,v1ca,"0,v1c9,v1c3",SUB,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3be0x1aa
"    0x1cb: v1cb = AND v1ca(0xffffffffffffffffffffffffffffffffffffffff), v1c2",0x1c0,v1cb,"0,v1ca,v1c2",AND,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
    0x1cc: v1cc(0x3be) = CONST ,0x1c0,v1cc,0,CONST,__Governable_init_unchained,public,False,0x3be,0,0x3be0x1aa
    0x1cf: JUMP v1cc(0x3be),0x1c0,0,"0,v1cc",JUMP,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
    Begin block 0x3be0x1aa,0x3be0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3be0x1aa
"    prev=[0x1c0], succ=[0x3d70x1aa, 0x3cf0x1aa]",0x3be0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    =================================,0x3be0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    0x3bf0x1aa: v1aa3bf(0x0) = CONST ,0x3be0x1aa,v1aa3bf,0,CONST,__Governable_init_unchained,public,False,0x0,0,"0x3d70x1aa, 0x3cf0x1aa"
    0x3c10x1aa: v1aa3c1 = SLOAD v1aa3bf(0x0),0x3be0x1aa,v1aa3c1,"0,v1aa3bf",SLOAD,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    0x3c20x1aa: v1aa3c2(0x100) = CONST ,0x3be0x1aa,v1aa3c2,0,CONST,__Governable_init_unchained,public,False,0x100,0,"0x3d70x1aa, 0x3cf0x1aa"
"    0x3c60x1aa: v1aa3c6 = DIV v1aa3c1, v1aa3c2(0x100)",0x3be0x1aa,v1aa3c6,"0,v1aa3c1,v1aa3c2",DIV,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    0x3c70x1aa: v1aa3c7(0xff) = CONST ,0x3be0x1aa,v1aa3c7,0,CONST,__Governable_init_unchained,public,False,0xff,0,"0x3d70x1aa, 0x3cf0x1aa"
"    0x3c90x1aa: v1aa3c9 = AND v1aa3c7(0xff), v1aa3c6",0x3be0x1aa,v1aa3c9,"0,v1aa3c7,v1aa3c6",AND,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    0x3cb0x1aa: v1aa3cb(0x3d7) = CONST ,0x3be0x1aa,v1aa3cb,0,CONST,__Governable_init_unchained,public,False,0x3d7,0,"0x3d70x1aa, 0x3cf0x1aa"
"    0x3ce0x1aa: JUMPI v1aa3cb(0x3d7), v1aa3c9",0x3be0x1aa,0,"0,v1aa3cb,v1aa3c9",JUMPI,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
    Begin block 0x3d70x1aa,0x3d70x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3d70x1aa, 0x3cf0x1aa"
"    prev=[0x3be0x1aa, 0x4afB0x3cf0x1aa], succ=[0x3e50x1aa, 0x3dd0x1aa]",0x3d70x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3e50x1aa, 0x3dd0x1aa"
    =================================,0x3d70x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3e50x1aa, 0x3dd0x1aa"
"    0x3d70x1aa_0x0: v3d71aa_0 = PHI v1aa3c9, v4b2V3cf1aa",0x3d70x1aa,v3d71aa_0,"0,v1aa3c9,v4b2V3cf1aa",PHI,__Governable_init_unchained,public,False,0,0,"0x3e50x1aa, 0x3dd0x1aa"
    0x3d90x1aa: v1aa3d9(0x3e5) = CONST ,0x3d70x1aa,v1aa3d9,0,CONST,__Governable_init_unchained,public,False,0x3e5,0,"0x3e50x1aa, 0x3dd0x1aa"
"    0x3dc0x1aa: JUMPI v1aa3d9(0x3e5), v3d71aa_0",0x3d70x1aa,0,"0,v1aa3d9,v3d71aa_0",JUMPI,__Governable_init_unchained,public,False,0,0,"0x3e50x1aa, 0x3dd0x1aa"
    Begin block 0x3e50x1aa,0x3e50x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3e50x1aa, 0x3dd0x1aa"
"    prev=[0x3d70x1aa, 0x3dd0x1aa], succ=[0x3ea0x1aa, 0x4200x1aa]",0x3e50x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    =================================,0x3e50x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3e50x1aa_0x0: v3e51aa_0 = PHI v1aa3e4, v1aa3c9, v4b2V3cf1aa",0x3e50x1aa,v3e51aa_0,"0,v1aa3e4,v1aa3c9,v4b2V3cf1aa",PHI,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    0x3e60x1aa: v1aa3e6(0x420) = CONST ,0x3e50x1aa,v1aa3e6,0,CONST,__Governable_init_unchained,public,False,0x420,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3e90x1aa: JUMPI v1aa3e6(0x420), v3e51aa_0",0x3e50x1aa,0,"0,v1aa3e6,v3e51aa_0",JUMPI,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    Begin block 0x3ea0x1aa,0x3ea0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
"    prev=[0x3e50x1aa], succ=[]",0x3ea0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    =================================,0x3ea0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    0x3ea0x1aa: v1aa3ea(0x40) = CONST ,0x3ea0x1aa,v1aa3ea,0,CONST,__Governable_init_unchained,public,False,0x40,0,"0x3ea0x1aa, 0x4200x1aa"
    0x3ec0x1aa: v1aa3ec = MLOAD v1aa3ea(0x40),0x3ea0x1aa,v1aa3ec,"0,v1aa3ea",MLOAD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40,"0x3ea0x1aa, 0x4200x1aa"
    0x3ed0x1aa: v1aa3ed(0x461bcd) = CONST ,0x3ea0x1aa,v1aa3ed,0,CONST,__Governable_init_unchained,public,False,0x461bcd,0,"0x3ea0x1aa, 0x4200x1aa"
    0x3f10x1aa: v1aa3f1(0xe5) = CONST ,0x3ea0x1aa,v1aa3f1,0,CONST,__Governable_init_unchained,public,False,0xe5,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3f30x1aa: v1aa3f3(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1aa3f1(0xe5), v1aa3ed(0x461bcd)",0x3ea0x1aa,v1aa3f3,"0,v1aa3f1,v1aa3ed",SHL,__Governable_init_unchained,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3f50x1aa: MSTORE v1aa3ec, v1aa3f3(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x3ea0x1aa,__Governable_init_unchained&m0x40,"0,v1aa3ec,v1aa3f3",MSTORE,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40,"0x3ea0x1aa, 0x4200x1aa"
    0x3f60x1aa: v1aa3f6(0x4) = CONST ,0x3ea0x1aa,v1aa3f6,0,CONST,__Governable_init_unchained,public,False,0x4,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3f80x1aa: v1aa3f8 = ADD v1aa3f6(0x4), v1aa3ec",0x3ea0x1aa,v1aa3f8,"0,v1aa3f6,v1aa3ec",ADD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4,"0x3ea0x1aa, 0x4200x1aa"
    0x3fb0x1aa: v1aa3fb(0x20) = CONST ,0x3ea0x1aa,v1aa3fb,0,CONST,__Governable_init_unchained,public,False,0x20,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x3fd0x1aa: v1aa3fd = ADD v1aa3fb(0x20), v1aa3f8",0x3ea0x1aa,v1aa3fd,"0,v1aa3fb,v1aa3f8",ADD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4+0x20,"0x3ea0x1aa, 0x4200x1aa"
"    0x4000x1aa: v1aa400(0x20) = SUB v1aa3fd, v1aa3f8",0x3ea0x1aa,v1aa400,"0,v1aa3fd,v1aa3f8",SUB,__Governable_init_unchained,public,False,0x20,__Governable_init_unchained&m0x40+0x4+0x20-0x20,"0x3ea0x1aa, 0x4200x1aa"
"    0x4020x1aa: MSTORE v1aa3f8, v1aa400(0x20)",0x3ea0x1aa,__Governable_init_unchained&m0x40+0x4,"0,v1aa3f8,v1aa400",MSTORE,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4,"0x3ea0x1aa, 0x4200x1aa"
    0x4030x1aa: v1aa403(0x2e) = CONST ,0x3ea0x1aa,v1aa403,0,CONST,__Governable_init_unchained,public,False,0x2e,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x4060x1aa: MSTORE v1aa3fd, v1aa403(0x2e)",0x3ea0x1aa,__Governable_init_unchained&m0x40+0x4+0x20,"0,v1aa3fd,v1aa403",MSTORE,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4+0x20,"0x3ea0x1aa, 0x4200x1aa"
    0x4070x1aa: v1aa407(0x20) = CONST ,0x3ea0x1aa,v1aa407,0,CONST,__Governable_init_unchained,public,False,0x20,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x4090x1aa: v1aa409 = ADD v1aa407(0x20), v1aa3fd",0x3ea0x1aa,v1aa409,"0,v1aa407,v1aa3fd",ADD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4+0x20+0x20,"0x3ea0x1aa, 0x4200x1aa"
    0x40b0x1aa: v1aa40b(0x82d) = CONST ,0x3ea0x1aa,v1aa40b,0,CONST,__Governable_init_unchained,public,False,0x82d,0,"0x3ea0x1aa, 0x4200x1aa"
    0x40e0x1aa: v1aa40e(0x2e) = CONST ,0x3ea0x1aa,v1aa40e,0,CONST,__Governable_init_unchained,public,False,0x2e,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x4110x1aa: CODECOPY v1aa409, v1aa40b(0x82d), v1aa40e(0x2e)",0x3ea0x1aa,0,"0,v1aa409,v1aa40b,v1aa40e",CODECOPY,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    0x4120x1aa: v1aa412(0x40) = CONST ,0x3ea0x1aa,v1aa412,0,CONST,__Governable_init_unchained,public,False,0x40,0,"0x3ea0x1aa, 0x4200x1aa"
"    0x4140x1aa: v1aa414 = ADD v1aa412(0x40), v1aa409",0x3ea0x1aa,v1aa414,"0,v1aa412,v1aa409",ADD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40+0x4+0x20+0x20+0x40,"0x3ea0x1aa, 0x4200x1aa"
    0x4180x1aa: v1aa418(0x40) = CONST ,0x3ea0x1aa,v1aa418,0,CONST,__Governable_init_unchained,public,False,0x40,0,"0x3ea0x1aa, 0x4200x1aa"
    0x41a0x1aa: v1aa41a = MLOAD v1aa418(0x40),0x3ea0x1aa,v1aa41a,"0,v1aa418",MLOAD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40,"0x3ea0x1aa, 0x4200x1aa"
"    0x41d0x1aa: v1aa41d(0x84) = SUB v1aa414, v1aa41a",0x3ea0x1aa,v1aa41d,"0,v1aa414,v1aa41a",SUB,__Governable_init_unchained,public,False,0x84,__Governable_init_unchained&m0x40+0x4+0x20+0x20+0x40-0x84,"0x3ea0x1aa, 0x4200x1aa"
"    0x41f0x1aa: REVERT v1aa41a, v1aa41d(0x84)",0x3ea0x1aa,0,"0,v1aa41a,v1aa41d",REVERT,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
    Begin block 0x4200x1aa,0x4200x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x3ea0x1aa, 0x4200x1aa"
"    prev=[0x3e50x1aa], succ=[0x4330x1aa, 0x44b0x1aa]",0x4200x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    =================================,0x4200x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x4210x1aa: v1aa421(0x0) = CONST ,0x4200x1aa,v1aa421,0,CONST,__Governable_init_unchained,public,False,0x0,0,"0x4330x1aa, 0x44b0x1aa"
    0x4230x1aa: v1aa423 = SLOAD v1aa421(0x0),0x4200x1aa,v1aa423,"0,v1aa421",SLOAD,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x4240x1aa: v1aa424(0x100) = CONST ,0x4200x1aa,v1aa424,0,CONST,__Governable_init_unchained,public,False,0x100,0,"0x4330x1aa, 0x44b0x1aa"
"    0x4280x1aa: v1aa428 = DIV v1aa423, v1aa424(0x100)",0x4200x1aa,v1aa428,"0,v1aa423,v1aa424",DIV,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x4290x1aa: v1aa429(0xff) = CONST ,0x4200x1aa,v1aa429,0,CONST,__Governable_init_unchained,public,False,0xff,0,"0x4330x1aa, 0x44b0x1aa"
"    0x42b0x1aa: v1aa42b = AND v1aa429(0xff), v1aa428",0x4200x1aa,v1aa42b,"0,v1aa429,v1aa428",AND,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x42c0x1aa: v1aa42c = ISZERO v1aa42b,0x4200x1aa,v1aa42c,"0,v1aa42b",ISZERO,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x42e0x1aa: v1aa42e = ISZERO v1aa42c,0x4200x1aa,v1aa42e,"0,v1aa42c",ISZERO,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    0x42f0x1aa: v1aa42f(0x44b) = CONST ,0x4200x1aa,v1aa42f,0,CONST,__Governable_init_unchained,public,False,0x44b,0,"0x4330x1aa, 0x44b0x1aa"
"    0x4320x1aa: JUMPI v1aa42f(0x44b), v1aa42e",0x4200x1aa,0,"0,v1aa42f,v1aa42e",JUMPI,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
    Begin block 0x4330x1aa,0x4330x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4330x1aa, 0x44b0x1aa"
"    prev=[0x4200x1aa], succ=[0x44b0x1aa]",0x4330x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    =================================,0x4330x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    0x4330x1aa: v1aa433(0x0) = CONST ,0x4330x1aa,v1aa433,0,CONST,__Governable_init_unchained,public,False,0x0,0,0x44b0x1aa
    0x4360x1aa: v1aa436 = SLOAD v1aa433(0x0),0x4330x1aa,v1aa436,"0,v1aa433",SLOAD,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    0x4370x1aa: v1aa437(0xff) = CONST ,0x4330x1aa,v1aa437,0,CONST,__Governable_init_unchained,public,False,0xff,0,0x44b0x1aa
    0x4390x1aa: v1aa439(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v1aa437(0xff),0x4330x1aa,v1aa439,"0,v1aa437",NOT,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x44b0x1aa
    0x43a0x1aa: v1aa43a(0xff00) = CONST ,0x4330x1aa,v1aa43a,0,CONST,__Governable_init_unchained,public,False,0xff00,0,0x44b0x1aa
    0x43d0x1aa: v1aa43d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v1aa43a(0xff00),0x4330x1aa,v1aa43d,"0,v1aa43a",NOT,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x44b0x1aa
"    0x4400x1aa: v1aa440 = AND v1aa436, v1aa43d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)",0x4330x1aa,v1aa440,"0,v1aa436,v1aa43d",AND,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    0x4410x1aa: v1aa441(0x100) = CONST ,0x4330x1aa,v1aa441,0,CONST,__Governable_init_unchained,public,False,0x100,0,0x44b0x1aa
"    0x4440x1aa: v1aa444 = OR v1aa441(0x100), v1aa440",0x4330x1aa,v1aa444,"0,v1aa441,v1aa440",OR,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
"    0x4450x1aa: v1aa445 = AND v1aa444, v1aa439(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)",0x4330x1aa,v1aa445,"0,v1aa444,v1aa439",AND,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    0x4460x1aa: v1aa446(0x1) = CONST ,0x4330x1aa,v1aa446,0,CONST,__Governable_init_unchained,public,False,0x1,0,0x44b0x1aa
"    0x4480x1aa: v1aa448 = OR v1aa446(0x1), v1aa445",0x4330x1aa,v1aa448,"0,v1aa446,v1aa445",OR,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
"    0x44a0x1aa: SSTORE v1aa433(0x0), v1aa448",0x4330x1aa,0,"0,v1aa433,v1aa448",SSTORE,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
    Begin block 0x44b0x1aa,0x44b0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x44b0x1aa
"    prev=[0x4330x1aa, 0x4200x1aa], succ=[0x4a10x1aa, 0xb0e0x1aa]",0x44b0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    =================================,0x44b0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x44c0x1aa: v1aa44c(0x33) = CONST ,0x44b0x1aa,v1aa44c,0,CONST,__Governable_init_unchained,public,False,0x33,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x44f0x1aa: v1aa44f = SLOAD v1aa44c(0x33),0x44b0x1aa,v1aa44f,"0,v1aa44c",SLOAD,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4500x1aa: v1aa450(0x1) = CONST ,0x44b0x1aa,v1aa450,0,CONST,__Governable_init_unchained,public,False,0x1,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4520x1aa: v1aa452(0x1) = CONST ,0x44b0x1aa,v1aa452,0,CONST,__Governable_init_unchained,public,False,0x1,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4540x1aa: v1aa454(0xa0) = CONST ,0x44b0x1aa,v1aa454,0,CONST,__Governable_init_unchained,public,False,0xa0,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4560x1aa: v1aa456(0x10000000000000000000000000000000000000000) = SHL v1aa454(0xa0), v1aa452(0x1)",0x44b0x1aa,v1aa456,"0,v1aa454,v1aa452",SHL,__Governable_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4570x1aa: v1aa457(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1aa456(0x10000000000000000000000000000000000000000), v1aa450(0x1)",0x44b0x1aa,v1aa457,"0,v1aa456,v1aa450",SUB,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4580x1aa: v1aa458(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1aa457(0xffffffffffffffffffffffffffffffffffffffff),0x44b0x1aa,v1aa458,"0,v1aa457",NOT,__Governable_init_unchained,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4590x1aa: v1aa459 = AND v1aa458(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v1aa44f",0x44b0x1aa,v1aa459,"0,v1aa458,v1aa44f",AND,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x45a0x1aa: v1aa45a(0x1) = CONST ,0x44b0x1aa,v1aa45a,0,CONST,__Governable_init_unchained,public,False,0x1,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x45c0x1aa: v1aa45c(0x1) = CONST ,0x44b0x1aa,v1aa45c,0,CONST,__Governable_init_unchained,public,False,0x1,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x45e0x1aa: v1aa45e(0xa0) = CONST ,0x44b0x1aa,v1aa45e,0,CONST,__Governable_init_unchained,public,False,0xa0,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4600x1aa: v1aa460(0x10000000000000000000000000000000000000000) = SHL v1aa45e(0xa0), v1aa45c(0x1)",0x44b0x1aa,v1aa460,"0,v1aa45e,v1aa45c",SHL,__Governable_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4610x1aa: v1aa461(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1aa460(0x10000000000000000000000000000000000000000), v1aa45a(0x1)",0x44b0x1aa,v1aa461,"0,v1aa460,v1aa45a",SUB,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4640x1aa: v1aa464 = AND v1aa461(0xffffffffffffffffffffffffffffffffffffffff), v1cb",0x44b0x1aa,v1aa464,"0,v1aa461,v1cb",AND,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4680x1aa: v1aa468 = OR v1aa464, v1aa459",0x44b0x1aa,v1aa468,"0,v1aa464,v1aa459",OR,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x46c0x1aa: SSTORE v1aa44c(0x33), v1aa468",0x44b0x1aa,0,"0,v1aa44c,v1aa468",SSTORE,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x46d0x1aa: v1aa46d(0x40) = CONST ,0x44b0x1aa,v1aa46d,0,CONST,__Governable_init_unchained,public,False,0x40,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x46f0x1aa: v1aa46f = MLOAD v1aa46d(0x40),0x44b0x1aa,v1aa46f,"0,v1aa46d",MLOAD,__Governable_init_unchained,public,False,0,__Governable_init_unchained&m0x40,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4710x1aa: v1aa471 = AND v1aa468, v1aa461(0xffffffffffffffffffffffffffffffffffffffff)",0x44b0x1aa,v1aa471,"0,v1aa468,v1aa461",AND,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4730x1aa: v1aa473(0x0) = CONST ,0x44b0x1aa,v1aa473,0,CONST,__Governable_init_unchained,public,False,0x0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x4760x1aa: v1aa476(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST ,0x44b0x1aa,v1aa476,0,CONST,__Governable_init_unchained,public,False,0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x49a0x1aa: LOG3 v1aa46f, v1aa473(0x0), v1aa476(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v1aa473(0x0), v1aa471",0x44b0x1aa,0,"0,v1aa46f,v1aa473,v1aa476,v1aa473,v1aa471",LOG3,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x49c0x1aa: v1aa49c = ISZERO v1aa42c,0x44b0x1aa,v1aa49c,"0,v1aa42c",ISZERO,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    0x49d0x1aa: v1aa49d(0xb0e) = CONST ,0x44b0x1aa,v1aa49d,0,CONST,__Governable_init_unchained,public,False,0xb0e,0,"0x4a10x1aa, 0xb0e0x1aa"
"    0x4a00x1aa: JUMPI v1aa49d(0xb0e), v1aa49c",0x44b0x1aa,0,"0,v1aa49d,v1aa49c",JUMPI,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
    Begin block 0x4a10x1aa,0x4a10x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,"0x4a10x1aa, 0xb0e0x1aa"
"    prev=[0x44b0x1aa], succ=[0xa82]",0x4a10x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    =================================,0x4a10x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    0x4a10x1aa: v1aa4a1(0x0) = CONST ,0x4a10x1aa,v1aa4a1,0,CONST,__Governable_init_unchained,public,False,0x0,0,0xa82
    0x4a40x1aa: v1aa4a4 = SLOAD v1aa4a1(0x0),0x4a10x1aa,v1aa4a4,"0,v1aa4a1",SLOAD,__Governable_init_unchained,public,False,0,0,0xa82
    0x4a50x1aa: v1aa4a5(0xff00) = CONST ,0x4a10x1aa,v1aa4a5,0,CONST,__Governable_init_unchained,public,False,0xff00,0,0xa82
    0x4a80x1aa: v1aa4a8(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v1aa4a5(0xff00),0x4a10x1aa,v1aa4a8,"0,v1aa4a5",NOT,__Governable_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0xa82
"    0x4a90x1aa: v1aa4a9 = AND v1aa4a8(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v1aa4a4",0x4a10x1aa,v1aa4a9,"0,v1aa4a8,v1aa4a4",AND,__Governable_init_unchained,public,False,0,0,0xa82
"    0x4ab0x1aa: SSTORE v1aa4a1(0x0), v1aa4a9",0x4a10x1aa,0,"0,v1aa4a1,v1aa4a9",SSTORE,__Governable_init_unchained,public,False,0,0,0xa82
    0x4ae0x1aa: JUMP v1ab(0xa82),0x4a10x1aa,0,"0,v1ab",JUMP,__Governable_init_unchained,public,False,0,0,0xa82
    Begin block 0xa82,0xa82,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
"    prev=[0x4a10x1aa, 0xb0e0x1aa], succ=[]",0xa82,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    =================================,0xa82,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    0xa83: STOP ,0xa82,0,0,STOP,__Governable_init_unchained,public,False,0,0,0xa82
    Begin block 0xb0e0x1aa,0xb0e0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
"    prev=[0x44b0x1aa], succ=[0xa82]",0xb0e0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    =================================,0xb0e0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
    0xb110x1aa: JUMP v1ab(0xa82),0xb0e0x1aa,0,"0,v1ab",JUMP,__Governable_init_unchained,public,False,0,0,0xa82
    Begin block 0x3dd0x1aa,0x3dd0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0xa82
"    prev=[0x3d70x1aa], succ=[0x3e50x1aa]",0x3dd0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
    =================================,0x3dd0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
    0x3de0x1aa: v1aa3de(0x0) = CONST ,0x3dd0x1aa,v1aa3de,0,CONST,__Governable_init_unchained,public,False,0x0,0,0x3e50x1aa
    0x3e00x1aa: v1aa3e0 = SLOAD v1aa3de(0x0),0x3dd0x1aa,v1aa3e0,"0,v1aa3de",SLOAD,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
    0x3e10x1aa: v1aa3e1(0xff) = CONST ,0x3dd0x1aa,v1aa3e1,0,CONST,__Governable_init_unchained,public,False,0xff,0,0x3e50x1aa
"    0x3e30x1aa: v1aa3e3 = AND v1aa3e1(0xff), v1aa3e0",0x3dd0x1aa,v1aa3e3,"0,v1aa3e1,v1aa3e0",AND,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
    0x3e40x1aa: v1aa3e4 = ISZERO v1aa3e3,0x3dd0x1aa,v1aa3e4,"0,v1aa3e3",ISZERO,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
    Begin block 0x3cf0x1aa,0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3e50x1aa
"    prev=[0x3be0x1aa], succ=[0x4afB0x3cf0x1aa]",0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x4afB0x3cf0x1aa
    =================================,0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x4afB0x3cf0x1aa
    0x3d00x1aa: v1aa3d0(0x3d7) = CONST ,0x3cf0x1aa,v1aa3d0,0,CONST,__Governable_init_unchained,public,False,0x3d7,0,0x4afB0x3cf0x1aa
    0x3d30x1aa: v1aa3d3(0x4af) = CONST ,0x3cf0x1aa,v1aa3d3,0,CONST,__Governable_init_unchained,public,False,0x4af,0,0x4afB0x3cf0x1aa
    0x3d60x1aa: JUMP v1aa3d3(0x4af),0x3cf0x1aa,0,"0,v1aa3d3",JUMP,__Governable_init_unchained,public,False,0,0,0x4afB0x3cf0x1aa
    Begin block 0x4afB0x3cf0x1aa,0x4afB0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x4afB0x3cf0x1aa
"    prev=[0x3cf0x1aa], succ=[0x3d70x1aa]",0x4afB0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
    =================================,0x4afB0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
    0x4b0S0x3cf0x1aa: v4b0V3cf1aa = ADDRESS ,0x4afB0x3cf0x1aa,v4b0V3cf1aa,0,ADDRESS,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
    0x4b1S0x3cf0x1aa: v4b1V3cf1aa = EXTCODESIZE v4b0V3cf1aa,0x4afB0x3cf0x1aa,v4b1V3cf1aa,"0,v4b0V3cf1aa",EXTCODESIZE,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
    0x4b2S0x3cf0x1aa: v4b2V3cf1aa = ISZERO v4b1V3cf1aa,0x4afB0x3cf0x1aa,v4b2V3cf1aa,"0,v4b1V3cf1aa",ISZERO,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
    0x4b4S0x3cf0x1aa: JUMP v1aa3d0(0x3d7),0x4afB0x3cf0x1aa,0,"0,v1aa3d0",JUMP,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
},0x4afB0x3cf0x1aa,0,0,0,__Governable_init_unchained,public,False,0,0,0x3d70x1aa
"function 0x524(0x524arg0x0, 0x524arg0x1, 0x524arg0x2, 0x524arg0x3) private {",0x524,0,"0,private",0x524arg0x2,0x524,private,False,0,0,0x3d70x1aa
    Begin block 0x524,0x524,0,0,0,0x524,private,False,0,0,0x3d70x1aa
"    prev=[], succ=[0x5aa, 0x52c]",0x524,0,0,0,0x524,private,False,0,0,"0x5aa, 0x52c"
    =================================,0x524,0,0,0,0x524,private,False,0,0,"0x5aa, 0x52c"
    0x526: v526 = ISZERO v524arg0,0x524,v526,"0,v524arg0",ISZERO,0x524,private,False,0,0,"0x5aa, 0x52c"
    0x528: v528(0x5aa) = CONST ,0x524,v528,0,CONST,0x524,private,False,0x5aa,0,"0x5aa, 0x52c"
"    0x52b: JUMPI v528(0x5aa), v526",0x524,0,"0,v528,v526",JUMPI,0x524,private,False,0,0,"0x5aa, 0x52c"
    Begin block 0x5aa,0x5aa,0,0,0,0x524,private,False,0,0,"0x5aa, 0x52c"
"    prev=[0x524, 0x5a6], succ=[0x5af, 0x5e5]",0x5aa,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
    =================================,0x5aa,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
"    0x5aa_0x0: v5aa_0 = PHI v526, v5a9",0x5aa,v5aa_0,"0,v526,v5a9",PHI,0x524,private,False,0,0,"0x5af, 0x5e5"
    0x5ab: v5ab(0x5e5) = CONST ,0x5aa,v5ab,0,CONST,0x524,private,False,0x5e5,0,"0x5af, 0x5e5"
"    0x5ae: JUMPI v5ab(0x5e5), v5aa_0",0x5aa,0,"0,v5ab,v5aa_0",JUMPI,0x524,private,False,0,0,"0x5af, 0x5e5"
    Begin block 0x5af,0x5af,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
"    prev=[0x5aa], succ=[]",0x5af,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
    =================================,0x5af,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
    0x5af: v5af(0x40) = CONST ,0x5af,v5af,0,CONST,0x524,private,False,0x40,0,"0x5af, 0x5e5"
    0x5b1: v5b1 = MLOAD v5af(0x40),0x5af,v5b1,"0,v5af",MLOAD,0x524,private,False,0,0x524&m0x40,"0x5af, 0x5e5"
    0x5b2: v5b2(0x461bcd) = CONST ,0x5af,v5b2,0,CONST,0x524,private,False,0x461bcd,0,"0x5af, 0x5e5"
    0x5b6: v5b6(0xe5) = CONST ,0x5af,v5b6,0,CONST,0x524,private,False,0xe5,0,"0x5af, 0x5e5"
"    0x5b8: v5b8(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5b6(0xe5), v5b2(0x461bcd)",0x5af,v5b8,"0,v5b6,v5b2",SHL,0x524,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x5af, 0x5e5"
"    0x5ba: MSTORE v5b1, v5b8(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x5af,0x524&m0x40,"0,v5b1,v5b8",MSTORE,0x524,private,False,0,0x524&m0x40,"0x5af, 0x5e5"
    0x5bb: v5bb(0x4) = CONST ,0x5af,v5bb,0,CONST,0x524,private,False,0x4,0,"0x5af, 0x5e5"
"    0x5bd: v5bd = ADD v5bb(0x4), v5b1",0x5af,v5bd,"0,v5bb,v5b1",ADD,0x524,private,False,0,0x524&m0x40+0x4,"0x5af, 0x5e5"
    0x5c0: v5c0(0x20) = CONST ,0x5af,v5c0,0,CONST,0x524,private,False,0x20,0,"0x5af, 0x5e5"
"    0x5c2: v5c2 = ADD v5c0(0x20), v5bd",0x5af,v5c2,"0,v5c0,v5bd",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20,"0x5af, 0x5e5"
"    0x5c5: v5c5(0x20) = SUB v5c2, v5bd",0x5af,v5c5,"0,v5c2,v5bd",SUB,0x524,private,False,0x20,0x524&m0x40+0x4+0x20-0x20,"0x5af, 0x5e5"
"    0x5c7: MSTORE v5bd, v5c5(0x20)",0x5af,0x524&m0x40+0x4,"0,v5bd,v5c5",MSTORE,0x524,private,False,0,0x524&m0x40+0x4,"0x5af, 0x5e5"
    0x5c8: v5c8(0x36) = CONST ,0x5af,v5c8,0,CONST,0x524,private,False,0x36,0,"0x5af, 0x5e5"
"    0x5cb: MSTORE v5c2, v5c8(0x36)",0x5af,0x524&m0x40+0x4+0x20,"0,v5c2,v5c8",MSTORE,0x524,private,False,0,0x524&m0x40+0x4+0x20,"0x5af, 0x5e5"
    0x5cc: v5cc(0x20) = CONST ,0x5af,v5cc,0,CONST,0x524,private,False,0x20,0,"0x5af, 0x5e5"
"    0x5ce: v5ce = ADD v5cc(0x20), v5c2",0x5af,v5ce,"0,v5cc,v5c2",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20+0x20,"0x5af, 0x5e5"
    0x5d0: v5d0(0x885) = CONST ,0x5af,v5d0,0,CONST,0x524,private,False,0x885,0,"0x5af, 0x5e5"
    0x5d3: v5d3(0x36) = CONST ,0x5af,v5d3,0,CONST,0x524,private,False,0x36,0,"0x5af, 0x5e5"
"    0x5d6: CODECOPY v5ce, v5d0(0x885), v5d3(0x36)",0x5af,0,"0,v5ce,v5d0,v5d3",CODECOPY,0x524,private,False,0,0,"0x5af, 0x5e5"
    0x5d7: v5d7(0x40) = CONST ,0x5af,v5d7,0,CONST,0x524,private,False,0x40,0,"0x5af, 0x5e5"
"    0x5d9: v5d9 = ADD v5d7(0x40), v5ce",0x5af,v5d9,"0,v5d7,v5ce",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20+0x20+0x40,"0x5af, 0x5e5"
    0x5dd: v5dd(0x40) = CONST ,0x5af,v5dd,0,CONST,0x524,private,False,0x40,0,"0x5af, 0x5e5"
    0x5df: v5df = MLOAD v5dd(0x40),0x5af,v5df,"0,v5dd",MLOAD,0x524,private,False,0,0x524&m0x40,"0x5af, 0x5e5"
"    0x5e2: v5e2(0x84) = SUB v5d9, v5df",0x5af,v5e2,"0,v5d9,v5df",SUB,0x524,private,False,0x84,0x524&m0x40+0x4+0x20+0x20+0x40-0x84,"0x5af, 0x5e5"
"    0x5e4: REVERT v5df, v5e2(0x84)",0x5af,0,"0,v5df,v5e2",REVERT,0x524,private,False,0,0,"0x5af, 0x5e5"
    Begin block 0x5e5,0x5e5,0,0,0,0x524,private,False,0,0,"0x5af, 0x5e5"
"    prev=[0x5aa], succ=[0x7f0B0x5e5]",0x5e5,0,0,0,0x524,private,False,0,0,0x7f0B0x5e5
    =================================,0x5e5,0,0,0,0x524,private,False,0,0,0x7f0B0x5e5
    0x5e6: v5e6(0x40) = CONST ,0x5e5,v5e6,0,CONST,0x524,private,False,0x40,0,0x7f0B0x5e5
    0x5e9: v5e9 = MLOAD v5e6(0x40),0x5e5,v5e9,"0,v5e6",MLOAD,0x524,private,False,0,0x524&m0x40,0x7f0B0x5e5
    0x5ea: v5ea(0x1) = CONST ,0x5e5,v5ea,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x5ec: v5ec(0x1) = CONST ,0x5e5,v5ec,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x5ee: v5ee(0xa0) = CONST ,0x5e5,v5ee,0,CONST,0x524,private,False,0xa0,0,0x7f0B0x5e5
"    0x5f0: v5f0(0x10000000000000000000000000000000000000000) = SHL v5ee(0xa0), v5ec(0x1)",0x5e5,v5f0,"0,v5ee,v5ec",SHL,0x524,private,False,0x10000000000000000000000000000000000000000,0,0x7f0B0x5e5
"    0x5f1: v5f1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5f0(0x10000000000000000000000000000000000000000), v5ea(0x1)",0x5e5,v5f1,"0,v5f0,v5ea",SUB,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7f0B0x5e5
"    0x5f3: v5f3 = AND v524arg1, v5f1(0xffffffffffffffffffffffffffffffffffffffff)",0x5e5,v5f3,"0,v524arg1,v5f1",AND,0x524,private,False,0,0,0x7f0B0x5e5
    0x5f4: v5f4(0x24) = CONST ,0x5e5,v5f4,0,CONST,0x524,private,False,0x24,0,0x7f0B0x5e5
"    0x5f7: v5f7 = ADD v5e9, v5f4(0x24)",0x5e5,v5f7,"0,v5e9,v5f4",ADD,0x524,private,False,0,0x524&m0x40+0x24,0x7f0B0x5e5
"    0x5f8: MSTORE v5f7, v5f3",0x5e5,0x524&m0x40+0x24,"0,v5f7,v5f3",MSTORE,0x524,private,False,0,0x524&m0x40+0x24,0x7f0B0x5e5
    0x5f9: v5f9(0x44) = CONST ,0x5e5,v5f9,0,CONST,0x524,private,False,0x44,0,0x7f0B0x5e5
"    0x5fd: v5fd = ADD v5e9, v5f9(0x44)",0x5e5,v5fd,"0,v5e9,v5f9",ADD,0x524,private,False,0,0x524&m0x40+0x44,0x7f0B0x5e5
"    0x600: MSTORE v5fd, v524arg0",0x5e5,0x524&m0x40+0x44,"0,v5fd,v524arg0",MSTORE,0x524,private,False,0,0x524&m0x40+0x44,0x7f0B0x5e5
    0x602: v602 = MLOAD v5e6(0x40),0x5e5,v602,"0,v5e6",MLOAD,0x524,private,False,0,0x524&m0x40,0x7f0B0x5e5
"    0x605: v605(0x0) = SUB v5e9, v602",0x5e5,v605,"0,v5e9,v602",SUB,0x524,private,False,0x0,0x524&m0x40-0x0,0x7f0B0x5e5
"    0x608: v608(0x44) = ADD v5f9(0x44), v605(0x0)",0x5e5,v608,"0,v5f9,v605",ADD,0x524,private,False,0x44,0x524&m0x40-0x0+0x44,0x7f0B0x5e5
"    0x60a: MSTORE v602, v608(0x44)",0x5e5,0x524&m0x40,"0,v602,v608",MSTORE,0x524,private,False,0,0x524&m0x40,0x7f0B0x5e5
    0x60b: v60b(0x64) = CONST ,0x5e5,v60b,0,CONST,0x524,private,False,0x64,0,0x7f0B0x5e5
"    0x60f: v60f = ADD v5e9, v60b(0x64)",0x5e5,v60f,"0,v5e9,v60b",ADD,0x524,private,False,0,0x524&m0x40+0x64,0x7f0B0x5e5
"    0x612: MSTORE v5e6(0x40), v60f",0x5e5,0,"0,v5e6,v60f",MSTORE,0x524,private,False,0,0,0x7f0B0x5e5
    0x613: v613(0x20) = CONST ,0x5e5,v613,0,CONST,0x524,private,False,0x20,0,0x7f0B0x5e5
"    0x616: v616 = ADD v602, v613(0x20)",0x5e5,v616,"0,v602,v613",ADD,0x524,private,False,0,0x524&m0x40+0x20,0x7f0B0x5e5
    0x618: v618 = MLOAD v616,0x5e5,v618,"0,v616",MLOAD,0x524,private,False,0,0,0x7f0B0x5e5
    0x619: v619(0x1) = CONST ,0x5e5,v619,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x61b: v61b(0x1) = CONST ,0x5e5,v61b,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x61d: v61d(0xe0) = CONST ,0x5e5,v61d,0,CONST,0x524,private,False,0xe0,0,0x7f0B0x5e5
"    0x61f: v61f(0x100000000000000000000000000000000000000000000000000000000) = SHL v61d(0xe0), v61b(0x1)",0x5e5,v61f,"0,v61d,v61b",SHL,0x524,private,False,0x100000000000000000000000000000000000000000000000000000000,0,0x7f0B0x5e5
"    0x620: v620(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v61f(0x100000000000000000000000000000000000000000000000000000000), v619(0x1)",0x5e5,v620,"0,v61f,v619",SUB,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x7f0B0x5e5
"    0x621: v621 = AND v620(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v618",0x5e5,v621,"0,v620,v618",AND,0x524,private,False,0,0,0x7f0B0x5e5
    0x622: v622(0x95ea7b3) = CONST ,0x5e5,v622,0,CONST,0x524,private,False,0x95ea7b3,0,0x7f0B0x5e5
    0x627: v627(0xe0) = CONST ,0x5e5,v627,0,CONST,0x524,private,False,0xe0,0,0x7f0B0x5e5
"    0x629: v629(0x95ea7b300000000000000000000000000000000000000000000000000000000) = SHL v627(0xe0), v622(0x95ea7b3)",0x5e5,v629,"0,v627,v622",SHL,0x524,private,False,0x95ea7b300000000000000000000000000000000000000000000000000000000,0,0x7f0B0x5e5
"    0x62a: v62a = OR v629(0x95ea7b300000000000000000000000000000000000000000000000000000000), v621",0x5e5,v62a,"0,v629,v621",OR,0x524,private,False,0,0,0x7f0B0x5e5
"    0x62c: MSTORE v616, v62a",0x5e5,0x524&m0x40+0x20,"0,v616,v62a",MSTORE,0x524,private,False,0,0x524&m0x40+0x20,0x7f0B0x5e5
    0x62d: v62d(0xb31) = CONST ,0x5e5,v62d,0,CONST,0x524,private,False,0xb31,0,0x7f0B0x5e5
    0x633: v633(0x644) = CONST ,0x5e5,v633,0,CONST,0x524,private,False,0x644,0,0x7f0B0x5e5
    0x637: v637(0x1) = CONST ,0x5e5,v637,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x639: v639(0x1) = CONST ,0x5e5,v639,0,CONST,0x524,private,False,0x1,0,0x7f0B0x5e5
    0x63b: v63b(0xa0) = CONST ,0x5e5,v63b,0,CONST,0x524,private,False,0xa0,0,0x7f0B0x5e5
"    0x63d: v63d(0x10000000000000000000000000000000000000000) = SHL v63b(0xa0), v639(0x1)",0x5e5,v63d,"0,v63b,v639",SHL,0x524,private,False,0x10000000000000000000000000000000000000000,0,0x7f0B0x5e5
"    0x63e: v63e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v63d(0x10000000000000000000000000000000000000000), v637(0x1)",0x5e5,v63e,"0,v63d,v637",SUB,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7f0B0x5e5
"    0x63f: v63f = AND v63e(0xffffffffffffffffffffffffffffffffffffffff), v524arg2",0x5e5,v63f,"0,v63e,v524arg2",AND,0x524,private,False,0,0,0x7f0B0x5e5
    0x640: v640(0x7f0) = CONST ,0x5e5,v640,0,CONST,0x524,private,False,0x7f0,0,0x7f0B0x5e5
    0x643: JUMP v640(0x7f0),0x5e5,0,"0,v640",JUMP,0x524,private,False,0,0,0x7f0B0x5e5
    Begin block 0x7f0B0x5e5,0x7f0B0x5e5,0,0,0,0x524,private,False,0,0,0x7f0B0x5e5
"    prev=[0x5e5], succ=[0x824B0x5e5, 0x820B0x5e5]",0x7f0B0x5e5,0,0,0,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    =================================,0x7f0B0x5e5,0,0,0,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    0x7f1S0x5e5: v7f1V5e5(0x0) = CONST ,0x7f0B0x5e5,v7f1V5e5,0,CONST,0x524,private,False,0x0,0,"0x824B0x5e5, 0x820B0x5e5"
    0x7f4S0x5e5: v7f4V5e5 = EXTCODEHASH v63f,0x7f0B0x5e5,v7f4V5e5,"0,v63f",EXTCODEHASH,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    0x7f5S0x5e5: v7f5V5e5(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST ,0x7f0B0x5e5,v7f5V5e5,0,CONST,0x524,private,False,0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,0,"0x824B0x5e5, 0x820B0x5e5"
"    0x818S0x5e5: v818V5e5 = EQ v7f5V5e5(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470), v7f4V5e5",0x7f0B0x5e5,v818V5e5,"0,v7f5V5e5,v7f4V5e5",EQ,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    0x81aS0x5e5: v81aV5e5 = ISZERO v818V5e5,0x7f0B0x5e5,v81aV5e5,"0,v818V5e5",ISZERO,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    0x81cS0x5e5: v81cV5e5(0x824) = CONST ,0x7f0B0x5e5,v81cV5e5,0,CONST,0x524,private,False,0x824,0,"0x824B0x5e5, 0x820B0x5e5"
"    0x81fS0x5e5: JUMPI v81cV5e5(0x824), v818V5e5",0x7f0B0x5e5,0,"0,v81cV5e5,v818V5e5",JUMPI,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
    Begin block 0x824B0x5e5,0x824B0x5e5,0,0,0,0x524,private,False,0,0,"0x824B0x5e5, 0x820B0x5e5"
"    prev=[0x7f0B0x5e5, 0x820B0x5e5], succ=[0x644]",0x824B0x5e5,0,0,0,0x524,private,False,0,0,0x644
    =================================,0x824B0x5e5,0,0,0,0x524,private,False,0,0,0x644
"    0x824_0x0S0x5e5: v824_0V5e5 = PHI v81aV5e5, v823V5e5",0x824B0x5e5,v824_0V5e5,"0,v81aV5e5,v823V5e5",PHI,0x524,private,False,0,0,0x644
    0x82bS0x5e5: JUMP v633(0x644),0x824B0x5e5,0,"0,v633",JUMP,0x524,private,False,0,0,0x644
    Begin block 0x644,0x644,0,0,0,0x524,private,False,0,0,0x644
"    prev=[0x824B0x5e5], succ=[0x649, 0x695]",0x644,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
    =================================,0x644,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
    0x645: v645(0x695) = CONST ,0x644,v645,0,CONST,0x524,private,False,0x695,0,"0x649, 0x695"
"    0x648: JUMPI v645(0x695), v824_0V5e5",0x644,0,"0,v645,v824_0V5e5",JUMPI,0x524,private,False,0,0,"0x649, 0x695"
    Begin block 0x649,0x649,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
"    prev=[0x644], succ=[]",0x649,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
    =================================,0x649,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
    0x649: v649(0x40) = CONST ,0x649,v649,0,CONST,0x524,private,False,0x40,0,"0x649, 0x695"
    0x64c: v64c = MLOAD v649(0x40),0x649,v64c,"0,v649",MLOAD,0x524,private,False,0,0x524&m0x40,"0x649, 0x695"
    0x64d: v64d(0x461bcd) = CONST ,0x649,v64d,0,CONST,0x524,private,False,0x461bcd,0,"0x649, 0x695"
    0x651: v651(0xe5) = CONST ,0x649,v651,0,CONST,0x524,private,False,0xe5,0,"0x649, 0x695"
"    0x653: v653(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v651(0xe5), v64d(0x461bcd)",0x649,v653,"0,v651,v64d",SHL,0x524,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x649, 0x695"
"    0x655: MSTORE v64c, v653(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x649,0x524&m0x40,"0,v64c,v653",MSTORE,0x524,private,False,0,0x524&m0x40,"0x649, 0x695"
    0x656: v656(0x20) = CONST ,0x649,v656,0,CONST,0x524,private,False,0x20,0,"0x649, 0x695"
    0x658: v658(0x4) = CONST ,0x649,v658,0,CONST,0x524,private,False,0x4,0,"0x649, 0x695"
"    0x65b: v65b = ADD v64c, v658(0x4)",0x649,v65b,"0,v64c,v658",ADD,0x524,private,False,0,0x524&m0x40+0x4,"0x649, 0x695"
"    0x65c: MSTORE v65b, v656(0x20)",0x649,0x524&m0x40+0x4,"0,v65b,v656",MSTORE,0x524,private,False,0,0x524&m0x40+0x4,"0x649, 0x695"
    0x65d: v65d(0x1f) = CONST ,0x649,v65d,0,CONST,0x524,private,False,0x1f,0,"0x649, 0x695"
    0x65f: v65f(0x24) = CONST ,0x649,v65f,0,CONST,0x524,private,False,0x24,0,"0x649, 0x695"
"    0x662: v662 = ADD v64c, v65f(0x24)",0x649,v662,"0,v64c,v65f",ADD,0x524,private,False,0,0x524&m0x40+0x24,"0x649, 0x695"
"    0x663: MSTORE v662, v65d(0x1f)",0x649,0x524&m0x40+0x24,"0,v662,v65d",MSTORE,0x524,private,False,0,0x524&m0x40+0x24,"0x649, 0x695"
    0x664: v664(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400) = CONST ,0x649,v664,0,CONST,0x524,private,False,0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400,0,"0x649, 0x695"
    0x685: v685(0x44) = CONST ,0x649,v685,0,CONST,0x524,private,False,0x44,0,"0x649, 0x695"
"    0x688: v688 = ADD v64c, v685(0x44)",0x649,v688,"0,v64c,v685",ADD,0x524,private,False,0,0x524&m0x40+0x44,"0x649, 0x695"
"    0x689: MSTORE v688, v664(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400)",0x649,0x524&m0x40+0x44,"0,v688,v664",MSTORE,0x524,private,False,0,0x524&m0x40+0x44,"0x649, 0x695"
    0x68b: v68b = MLOAD v649(0x40),0x649,v68b,"0,v649",MLOAD,0x524,private,False,0,0x524&m0x40,"0x649, 0x695"
"    0x68f: v68f(0x0) = SUB v64c, v68b",0x649,v68f,"0,v64c,v68b",SUB,0x524,private,False,0x0,0x524&m0x40-0x0,"0x649, 0x695"
    0x690: v690(0x64) = CONST ,0x649,v690,0,CONST,0x524,private,False,0x64,0,"0x649, 0x695"
"    0x692: v692(0x64) = ADD v690(0x64), v68f(0x0)",0x649,v692,"0,v690,v68f",ADD,0x524,private,False,0x64,0x524&m0x40-0x0+0x64,"0x649, 0x695"
"    0x694: REVERT v68b, v692(0x64)",0x649,0,"0,v68b,v692",REVERT,0x524,private,False,0,0,"0x649, 0x695"
    Begin block 0x695,0x695,0,0,0,0x524,private,False,0,0,"0x649, 0x695"
"    prev=[0x644], succ=[0x6b4]",0x695,0,0,0,0x524,private,False,0,0,0x6b4
    =================================,0x695,0,0,0,0x524,private,False,0,0,0x6b4
    0x696: v696(0x0) = CONST ,0x695,v696,0,CONST,0x524,private,False,0x0,0,0x6b4
    0x698: v698(0x60) = CONST ,0x695,v698,0,CONST,0x524,private,False,0x60,0,0x6b4
    0x69b: v69b(0x1) = CONST ,0x695,v69b,0,CONST,0x524,private,False,0x1,0,0x6b4
    0x69d: v69d(0x1) = CONST ,0x695,v69d,0,CONST,0x524,private,False,0x1,0,0x6b4
    0x69f: v69f(0xa0) = CONST ,0x695,v69f,0,CONST,0x524,private,False,0xa0,0,0x6b4
"    0x6a1: v6a1(0x10000000000000000000000000000000000000000) = SHL v69f(0xa0), v69d(0x1)",0x695,v6a1,"0,v69f,v69d",SHL,0x524,private,False,0x10000000000000000000000000000000000000000,0,0x6b4
"    0x6a2: v6a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6a1(0x10000000000000000000000000000000000000000), v69b(0x1)",0x695,v6a2,"0,v6a1,v69b",SUB,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x6b4
"    0x6a3: v6a3 = AND v6a2(0xffffffffffffffffffffffffffffffffffffffff), v524arg2",0x695,v6a3,"0,v6a2,v524arg2",AND,0x524,private,False,0,0,0x6b4
    0x6a5: v6a5(0x40) = CONST ,0x695,v6a5,0,CONST,0x524,private,False,0x40,0,0x6b4
    0x6a7: v6a7 = MLOAD v6a5(0x40),0x695,v6a7,"0,v6a5",MLOAD,0x524,private,False,0,0x524&m0x40,0x6b4
    0x6ab: v6ab(0x44) = MLOAD v602,0x695,v6ab,"0,v602",MLOAD,0x524,private,False,0x44,0x524&m0x44,0x6b4
    0x6ad: v6ad(0x20) = CONST ,0x695,v6ad,0,CONST,0x524,private,False,0x20,0,0x6b4
"    0x6af: v6af = ADD v6ad(0x20), v602",0x695,v6af,"0,v6ad,v602",ADD,0x524,private,False,0,0x524&m0x40+0x20,0x6b4
    Begin block 0x6b4,0x6b4,0,0,0,0x524,private,False,0,0,0x6b4
"    prev=[0x695, 0x6bd], succ=[0x6d3, 0x6bd]",0x6b4,0,0,0,0x524,private,False,0,0,"0x6d3, 0x6bd"
    =================================,0x6b4,0,0,0,0x524,private,False,0,0,"0x6d3, 0x6bd"
"    0x6b4_0x2: v6b4_2 = PHI v6ab(0x44), v6c6",0x6b4,v6b4_2,"0,v6ab,v6c6",PHI,0x524,private,False,0,0,"0x6d3, 0x6bd"
    0x6b5: v6b5(0x20) = CONST ,0x6b4,v6b5,0,CONST,0x524,private,False,0x20,0,"0x6d3, 0x6bd"
"    0x6b8: v6b8 = LT v6b4_2, v6b5(0x20)",0x6b4,v6b8,"0,v6b4_2,v6b5",LT,0x524,private,False,0,0,"0x6d3, 0x6bd"
    0x6b9: v6b9(0x6d3) = CONST ,0x6b4,v6b9,0,CONST,0x524,private,False,0x6d3,0,"0x6d3, 0x6bd"
"    0x6bc: JUMPI v6b9(0x6d3), v6b8",0x6b4,0,"0,v6b9,v6b8",JUMPI,0x524,private,False,0,0,"0x6d3, 0x6bd"
    Begin block 0x6d3,0x6d3,0,0,0,0x524,private,False,0,0,"0x6d3, 0x6bd"
"    prev=[0x6b4], succ=[0x714, 0x735]",0x6d3,0,0,0,0x524,private,False,0,0,"0x714, 0x735"
    =================================,0x6d3,0,0,0,0x524,private,False,0,0,"0x714, 0x735"
"    0x6d3_0x0: v6d3_0 = PHI v6af, v6ce",0x6d3,v6d3_0,"0,v6af,v6ce",PHI,0x524,private,False,0,0,"0x714, 0x735"
"    0x6d3_0x1: v6d3_1 = PHI v6a7, v6cc",0x6d3,v6d3_1,"0,v6a7,v6cc",PHI,0x524,private,False,0,0,"0x714, 0x735"
"    0x6d3_0x2: v6d3_2 = PHI v6ab(0x44), v6c6",0x6d3,v6d3_2,"0,v6ab,v6c6",PHI,0x524,private,False,0,0,"0x714, 0x735"
    0x6d4: v6d4(0x1) = CONST ,0x6d3,v6d4,0,CONST,0x524,private,False,0x1,0,"0x714, 0x735"
    0x6d7: v6d7(0x20) = CONST ,0x6d3,v6d7,0,CONST,0x524,private,False,0x20,0,"0x714, 0x735"
"    0x6d9: v6d9 = SUB v6d7(0x20), v6d3_2",0x6d3,v6d9,"0,v6d7,v6d3_2",SUB,0x524,private,False,0,0,"0x714, 0x735"
    0x6da: v6da(0x100) = CONST ,0x6d3,v6da,0,CONST,0x524,private,False,0x100,0,"0x714, 0x735"
"    0x6dd: v6dd = EXP v6da(0x100), v6d9",0x6d3,v6dd,"0,v6da,v6d9",EXP,0x524,private,False,0,0,"0x714, 0x735"
"    0x6de: v6de = SUB v6dd, v6d4(0x1)",0x6d3,v6de,"0,v6dd,v6d4",SUB,0x524,private,False,0,0,"0x714, 0x735"
    0x6e0: v6e0 = NOT v6de,0x6d3,v6e0,"0,v6de",NOT,0x524,private,False,0,0,"0x714, 0x735"
    0x6e2: v6e2 = MLOAD v6d3_0,0x6d3,v6e2,"0,v6d3_0",MLOAD,0x524,private,False,0,0,"0x714, 0x735"
"    0x6e3: v6e3 = AND v6e2, v6e0",0x6d3,v6e3,"0,v6e2,v6e0",AND,0x524,private,False,0,0,"0x714, 0x735"
    0x6e6: v6e6 = MLOAD v6d3_1,0x6d3,v6e6,"0,v6d3_1",MLOAD,0x524,private,False,0,0,"0x714, 0x735"
"    0x6e7: v6e7 = AND v6e6, v6de",0x6d3,v6e7,"0,v6e6,v6de",AND,0x524,private,False,0,0,"0x714, 0x735"
"    0x6ea: v6ea = OR v6e3, v6e7",0x6d3,v6ea,"0,v6e3,v6e7",OR,0x524,private,False,0,0,"0x714, 0x735"
"    0x6ec: MSTORE v6d3_1, v6ea",0x6d3,0,"0,v6d3_1,v6ea",MSTORE,0x524,private,False,0,0,"0x714, 0x735"
"    0x6f5: v6f5 = ADD v6ab(0x44), v6a7",0x6d3,v6f5,"0,v6ab,v6a7",ADD,0x524,private,False,0,0x524&m0x40+0x44,"0x714, 0x735"
    0x6f9: v6f9(0x0) = CONST ,0x6d3,v6f9,0,CONST,0x524,private,False,0x0,0,"0x714, 0x735"
    0x6fb: v6fb(0x40) = CONST ,0x6d3,v6fb,0,CONST,0x524,private,False,0x40,0,"0x714, 0x735"
    0x6fd: v6fd = MLOAD v6fb(0x40),0x6d3,v6fd,"0,v6fb",MLOAD,0x524,private,False,0,0x524&m0x40,"0x714, 0x735"
"    0x700: v700(0x44) = SUB v6f5, v6fd",0x6d3,v700,"0,v6f5,v6fd",SUB,0x524,private,False,0x44,0x524&m0x40+0x44-0x44,"0x714, 0x735"
    0x702: v702(0x0) = CONST ,0x6d3,v702,0,CONST,0x524,private,False,0x0,0,"0x714, 0x735"
    0x705: v705 = GAS ,0x6d3,v705,0,GAS,0x524,private,False,0,0,"0x714, 0x735"
"    0x706: v706 = CALL v705, v6a3, v702(0x0), v6fd, v700(0x44), v6fd, v6f9(0x0)",0x6d3,v706,"0,v705,v6a3,v702,v6fd,v700,v6fd,v6f9",CALL,0x524,private,False,0,0,"0x714, 0x735"
    0x70a: v70a = RETURNDATASIZE ,0x6d3,v70a,0,RETURNDATASIZE,0x524,private,False,0,0,"0x714, 0x735"
    0x70c: v70c(0x0) = CONST ,0x6d3,v70c,0,CONST,0x524,private,False,0x0,0,"0x714, 0x735"
"    0x70f: v70f = EQ v70a, v70c(0x0)",0x6d3,v70f,"0,v70a,v70c",EQ,0x524,private,False,0,0,"0x714, 0x735"
    0x710: v710(0x735) = CONST ,0x6d3,v710,0,CONST,0x524,private,False,0x735,0,"0x714, 0x735"
"    0x713: JUMPI v710(0x735), v70f",0x6d3,0,"0,v710,v70f",JUMPI,0x524,private,False,0,0,"0x714, 0x735"
    Begin block 0x714,0x714,0,0,0,0x524,private,False,0,0,"0x714, 0x735"
"    prev=[0x6d3], succ=[0x73a]",0x714,0,0,0,0x524,private,False,0,0,0x73a
    =================================,0x714,0,0,0,0x524,private,False,0,0,0x73a
    0x714: v714(0x40) = CONST ,0x714,v714,0,CONST,0x524,private,False,0x40,0,0x73a
    0x716: v716 = MLOAD v714(0x40),0x714,v716,"0,v714",MLOAD,0x524,private,False,0,0x524&m0x40,0x73a
    0x719: v719(0x1f) = CONST ,0x714,v719,0,CONST,0x524,private,False,0x1f,0,0x73a
    0x71b: v71b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v719(0x1f),0x714,v71b,"0,v719",NOT,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x73a
    0x71c: v71c(0x3f) = CONST ,0x714,v71c,0,CONST,0x524,private,False,0x3f,0,0x73a
    0x71e: v71e = RETURNDATASIZE ,0x714,v71e,0,RETURNDATASIZE,0x524,private,False,0,0,0x73a
"    0x71f: v71f = ADD v71e, v71c(0x3f)",0x714,v71f,"0,v71e,v71c",ADD,0x524,private,False,0,0,0x73a
"    0x720: v720 = AND v71f, v71b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x714,v720,"0,v71f,v71b",AND,0x524,private,False,0,0,0x73a
"    0x722: v722 = ADD v716, v720",0x714,v722,"0,v716,v720",ADD,0x524,private,False,0,0,0x73a
    0x723: v723(0x40) = CONST ,0x714,v723,0,CONST,0x524,private,False,0x40,0,0x73a
"    0x725: MSTORE v723(0x40), v722",0x714,0,"0,v723,v722",MSTORE,0x524,private,False,0,0,0x73a
    0x726: v726 = RETURNDATASIZE ,0x714,v726,0,RETURNDATASIZE,0x524,private,False,0,0,0x73a
"    0x728: MSTORE v716, v726",0x714,0x524&m0x40,"0,v716,v726",MSTORE,0x524,private,False,0,0x524&m0x40,0x73a
    0x729: v729 = RETURNDATASIZE ,0x714,v729,0,RETURNDATASIZE,0x524,private,False,0,0,0x73a
    0x72a: v72a(0x0) = CONST ,0x714,v72a,0,CONST,0x524,private,False,0x0,0,0x73a
    0x72c: v72c(0x20) = CONST ,0x714,v72c,0,CONST,0x524,private,False,0x20,0,0x73a
"    0x72f: v72f = ADD v716, v72c(0x20)",0x714,v72f,"0,v716,v72c",ADD,0x524,private,False,0,0x524&m0x40+0x20,0x73a
"    0x730: RETURNDATACOPY v72f, v72a(0x0), v729",0x714,0,"0,v72f,v72a,v729",RETURNDATACOPY,0x524,private,False,0,0,0x73a
    0x731: v731(0x73a) = CONST ,0x714,v731,0,CONST,0x524,private,False,0x73a,0,0x73a
    0x734: JUMP v731(0x73a),0x714,0,"0,v731",JUMP,0x524,private,False,0,0,0x73a
    Begin block 0x73a,0x73a,0,0,0,0x524,private,False,0,0,0x73a
"    prev=[0x714, 0x735], succ=[0x745, 0x791]",0x73a,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
    =================================,0x73a,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
    0x741: v741(0x791) = CONST ,0x73a,v741,0,CONST,0x524,private,False,0x791,0,"0x745, 0x791"
"    0x744: JUMPI v741(0x791), v706",0x73a,0,"0,v741,v706",JUMPI,0x524,private,False,0,0,"0x745, 0x791"
    Begin block 0x745,0x745,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
"    prev=[0x73a], succ=[]",0x745,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
    =================================,0x745,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
    0x745: v745(0x40) = CONST ,0x745,v745,0,CONST,0x524,private,False,0x40,0,"0x745, 0x791"
    0x748: v748 = MLOAD v745(0x40),0x745,v748,"0,v745",MLOAD,0x524,private,False,0,0x524&m0x40,"0x745, 0x791"
    0x749: v749(0x461bcd) = CONST ,0x745,v749,0,CONST,0x524,private,False,0x461bcd,0,"0x745, 0x791"
    0x74d: v74d(0xe5) = CONST ,0x745,v74d,0,CONST,0x524,private,False,0xe5,0,"0x745, 0x791"
"    0x74f: v74f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v74d(0xe5), v749(0x461bcd)",0x745,v74f,"0,v74d,v749",SHL,0x524,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x745, 0x791"
"    0x751: MSTORE v748, v74f(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x745,0x524&m0x40,"0,v748,v74f",MSTORE,0x524,private,False,0,0x524&m0x40,"0x745, 0x791"
    0x752: v752(0x20) = CONST ,0x745,v752,0,CONST,0x524,private,False,0x20,0,"0x745, 0x791"
    0x754: v754(0x4) = CONST ,0x745,v754,0,CONST,0x524,private,False,0x4,0,"0x745, 0x791"
"    0x757: v757 = ADD v748, v754(0x4)",0x745,v757,"0,v748,v754",ADD,0x524,private,False,0,0x524&m0x40+0x4,"0x745, 0x791"
"    0x75a: MSTORE v757, v752(0x20)",0x745,0x524&m0x40+0x4,"0,v757,v752",MSTORE,0x524,private,False,0,0x524&m0x40+0x4,"0x745, 0x791"
    0x75b: v75b(0x24) = CONST ,0x745,v75b,0,CONST,0x524,private,False,0x24,0,"0x745, 0x791"
"    0x75e: v75e = ADD v748, v75b(0x24)",0x745,v75e,"0,v748,v75b",ADD,0x524,private,False,0,0x524&m0x40+0x24,"0x745, 0x791"
"    0x75f: MSTORE v75e, v752(0x20)",0x745,0x524&m0x40+0x24,"0,v75e,v752",MSTORE,0x524,private,False,0,0x524&m0x40+0x24,"0x745, 0x791"
    0x760: v760(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564) = CONST ,0x745,v760,0,CONST,0x524,private,False,0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564,0,"0x745, 0x791"
    0x781: v781(0x44) = CONST ,0x745,v781,0,CONST,0x524,private,False,0x44,0,"0x745, 0x791"
"    0x784: v784 = ADD v748, v781(0x44)",0x745,v784,"0,v748,v781",ADD,0x524,private,False,0,0x524&m0x40+0x44,"0x745, 0x791"
"    0x785: MSTORE v784, v760(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564)",0x745,0x524&m0x40+0x44,"0,v784,v760",MSTORE,0x524,private,False,0,0x524&m0x40+0x44,"0x745, 0x791"
    0x787: v787 = MLOAD v745(0x40),0x745,v787,"0,v745",MLOAD,0x524,private,False,0,0x524&m0x40,"0x745, 0x791"
"    0x78b: v78b(0x0) = SUB v748, v787",0x745,v78b,"0,v748,v787",SUB,0x524,private,False,0x0,0x524&m0x40-0x0,"0x745, 0x791"
    0x78c: v78c(0x64) = CONST ,0x745,v78c,0,CONST,0x524,private,False,0x64,0,"0x745, 0x791"
"    0x78e: v78e(0x64) = ADD v78c(0x64), v78b(0x0)",0x745,v78e,"0,v78c,v78b",ADD,0x524,private,False,0x64,0x524&m0x40-0x0+0x64,"0x745, 0x791"
"    0x790: REVERT v787, v78e(0x64)",0x745,0,"0,v787,v78e",REVERT,0x524,private,False,0,0,"0x745, 0x791"
    Begin block 0x791,0x791,0,0,0,0x524,private,False,0,0,"0x745, 0x791"
"    prev=[0x73a], succ=[0xb55, 0x799]",0x791,0,0,0,0x524,private,False,0,0,"0xb55, 0x799"
    =================================,0x791,0,0,0,0x524,private,False,0,0,"0xb55, 0x799"
"    0x791_0x0: v791_0 = PHI v716, v736(0x60)",0x791,v791_0,"0,v716,v736",PHI,0x524,private,False,0,0,"0xb55, 0x799"
    0x793: v793 = MLOAD v791_0,0x791,v793,"0,v791_0",MLOAD,0x524,private,False,0,0,"0xb55, 0x799"
    0x794: v794 = ISZERO v793,0x791,v794,"0,v793",ISZERO,0x524,private,False,0,0,"0xb55, 0x799"
    0x795: v795(0xb55) = CONST ,0x791,v795,0,CONST,0x524,private,False,0xb55,0,"0xb55, 0x799"
"    0x798: JUMPI v795(0xb55), v794",0x791,0,"0,v795,v794",JUMPI,0x524,private,False,0,0,"0xb55, 0x799"
    Begin block 0xb55,0xb55,0,0,0,0x524,private,False,0,0,"0xb55, 0x799"
"    prev=[0x791], succ=[0xb31]",0xb55,0,0,0,0x524,private,False,0,0,0xb31
    =================================,0xb55,0,0,0,0x524,private,False,0,0,0xb31
    0xb5a: JUMP v62d(0xb31),0xb55,0,"0,v62d",JUMP,0x524,private,False,0,0,0xb31
    Begin block 0xb31,0xb31,0,0,0,0x524,private,False,0,0,0xb31
"    prev=[0xb55, 0xb7a], succ=[]",0xb31,0,0,0,0x524,private,False,0,0,0xb31
    =================================,0xb31,0,0,0,0x524,private,False,0,0,0xb31
    0xb35: RETURNPRIVATE v524arg3,0xb31,0,"0,v524arg3",RETURNPRIVATE,0x524,private,False,0,0,0xb31
    Begin block 0x799,0x799,0,0,0,0x524,private,False,0,0,0xb31
"    prev=[0x791], succ=[0x7a9, 0x7ad]",0x799,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
    =================================,0x799,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
"    0x799_0x0: v799_0 = PHI v716, v736(0x60)",0x799,v799_0,"0,v716,v736",PHI,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x79b: v79b(0x20) = CONST ,0x799,v79b,0,CONST,0x524,private,False,0x20,0,"0x7a9, 0x7ad"
"    0x79d: v79d = ADD v79b(0x20), v799_0",0x799,v79d,"0,v79b,v799_0",ADD,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x79f: v79f = MLOAD v799_0,0x799,v79f,"0,v799_0",MLOAD,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x7a0: v7a0(0x20) = CONST ,0x799,v7a0,0,CONST,0x524,private,False,0x20,0,"0x7a9, 0x7ad"
"    0x7a3: v7a3 = LT v79f, v7a0(0x20)",0x799,v7a3,"0,v79f,v7a0",LT,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x7a4: v7a4 = ISZERO v7a3,0x799,v7a4,"0,v7a3",ISZERO,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x7a5: v7a5(0x7ad) = CONST ,0x799,v7a5,0,CONST,0x524,private,False,0x7ad,0,"0x7a9, 0x7ad"
"    0x7a8: JUMPI v7a5(0x7ad), v7a4",0x799,0,"0,v7a5,v7a4",JUMPI,0x524,private,False,0,0,"0x7a9, 0x7ad"
    Begin block 0x7a9,0x7a9,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
"    prev=[0x799], succ=[]",0x7a9,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
    =================================,0x7a9,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
    0x7a9: v7a9(0x0) = CONST ,0x7a9,v7a9,0,CONST,0x524,private,False,0x0,0,"0x7a9, 0x7ad"
"    0x7ac: REVERT v7a9(0x0), v7a9(0x0)",0x7a9,0,"0,v7a9,v7a9",REVERT,0x524,private,False,0,0,"0x7a9, 0x7ad"
    Begin block 0x7ad,0x7ad,0,0,0,0x524,private,False,0,0,"0x7a9, 0x7ad"
"    prev=[0x799], succ=[0x7b4, 0xb7a]",0x7ad,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
    =================================,0x7ad,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
    0x7af: v7af = MLOAD v79d,0x7ad,v7af,"0,v79d",MLOAD,0x524,private,False,0,0,"0x7b4, 0xb7a"
    0x7b0: v7b0(0xb7a) = CONST ,0x7ad,v7b0,0,CONST,0x524,private,False,0xb7a,0,"0x7b4, 0xb7a"
"    0x7b3: JUMPI v7b0(0xb7a), v7af",0x7ad,0,"0,v7b0,v7af",JUMPI,0x524,private,False,0,0,"0x7b4, 0xb7a"
    Begin block 0x7b4,0x7b4,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
"    prev=[0x7ad], succ=[]",0x7b4,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
    =================================,0x7b4,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
    0x7b4: v7b4(0x40) = CONST ,0x7b4,v7b4,0,CONST,0x524,private,False,0x40,0,"0x7b4, 0xb7a"
    0x7b6: v7b6 = MLOAD v7b4(0x40),0x7b4,v7b6,"0,v7b4",MLOAD,0x524,private,False,0,0x524&m0x40,"0x7b4, 0xb7a"
    0x7b7: v7b7(0x461bcd) = CONST ,0x7b4,v7b7,0,CONST,0x524,private,False,0x461bcd,0,"0x7b4, 0xb7a"
    0x7bb: v7bb(0xe5) = CONST ,0x7b4,v7bb,0,CONST,0x524,private,False,0xe5,0,"0x7b4, 0xb7a"
"    0x7bd: v7bd(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v7bb(0xe5), v7b7(0x461bcd)",0x7b4,v7bd,"0,v7bb,v7b7",SHL,0x524,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x7b4, 0xb7a"
"    0x7bf: MSTORE v7b6, v7bd(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x7b4,0x524&m0x40,"0,v7b6,v7bd",MSTORE,0x524,private,False,0,0x524&m0x40,"0x7b4, 0xb7a"
    0x7c0: v7c0(0x4) = CONST ,0x7b4,v7c0,0,CONST,0x524,private,False,0x4,0,"0x7b4, 0xb7a"
"    0x7c2: v7c2 = ADD v7c0(0x4), v7b6",0x7b4,v7c2,"0,v7c0,v7b6",ADD,0x524,private,False,0,0x524&m0x40+0x4,"0x7b4, 0xb7a"
    0x7c5: v7c5(0x20) = CONST ,0x7b4,v7c5,0,CONST,0x524,private,False,0x20,0,"0x7b4, 0xb7a"
"    0x7c7: v7c7 = ADD v7c5(0x20), v7c2",0x7b4,v7c7,"0,v7c5,v7c2",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20,"0x7b4, 0xb7a"
"    0x7ca: v7ca(0x20) = SUB v7c7, v7c2",0x7b4,v7ca,"0,v7c7,v7c2",SUB,0x524,private,False,0x20,0x524&m0x40+0x4+0x20-0x20,"0x7b4, 0xb7a"
"    0x7cc: MSTORE v7c2, v7ca(0x20)",0x7b4,0x524&m0x40+0x4,"0,v7c2,v7ca",MSTORE,0x524,private,False,0,0x524&m0x40+0x4,"0x7b4, 0xb7a"
    0x7cd: v7cd(0x2a) = CONST ,0x7b4,v7cd,0,CONST,0x524,private,False,0x2a,0,"0x7b4, 0xb7a"
"    0x7d0: MSTORE v7c7, v7cd(0x2a)",0x7b4,0x524&m0x40+0x4+0x20,"0,v7c7,v7cd",MSTORE,0x524,private,False,0,0x524&m0x40+0x4+0x20,"0x7b4, 0xb7a"
    0x7d1: v7d1(0x20) = CONST ,0x7b4,v7d1,0,CONST,0x524,private,False,0x20,0,"0x7b4, 0xb7a"
"    0x7d3: v7d3 = ADD v7d1(0x20), v7c7",0x7b4,v7d3,"0,v7d1,v7c7",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20+0x20,"0x7b4, 0xb7a"
    0x7d5: v7d5(0x85b) = CONST ,0x7b4,v7d5,0,CONST,0x524,private,False,0x85b,0,"0x7b4, 0xb7a"
    0x7d8: v7d8(0x2a) = CONST ,0x7b4,v7d8,0,CONST,0x524,private,False,0x2a,0,"0x7b4, 0xb7a"
"    0x7db: CODECOPY v7d3, v7d5(0x85b), v7d8(0x2a)",0x7b4,0,"0,v7d3,v7d5,v7d8",CODECOPY,0x524,private,False,0,0,"0x7b4, 0xb7a"
    0x7dc: v7dc(0x40) = CONST ,0x7b4,v7dc,0,CONST,0x524,private,False,0x40,0,"0x7b4, 0xb7a"
"    0x7de: v7de = ADD v7dc(0x40), v7d3",0x7b4,v7de,"0,v7dc,v7d3",ADD,0x524,private,False,0,0x524&m0x40+0x4+0x20+0x20+0x40,"0x7b4, 0xb7a"
    0x7e2: v7e2(0x40) = CONST ,0x7b4,v7e2,0,CONST,0x524,private,False,0x40,0,"0x7b4, 0xb7a"
    0x7e4: v7e4 = MLOAD v7e2(0x40),0x7b4,v7e4,"0,v7e2",MLOAD,0x524,private,False,0,0x524&m0x40,"0x7b4, 0xb7a"
"    0x7e7: v7e7(0x84) = SUB v7de, v7e4",0x7b4,v7e7,"0,v7de,v7e4",SUB,0x524,private,False,0x84,0x524&m0x40+0x4+0x20+0x20+0x40-0x84,"0x7b4, 0xb7a"
"    0x7e9: REVERT v7e4, v7e7(0x84)",0x7b4,0,"0,v7e4,v7e7",REVERT,0x524,private,False,0,0,"0x7b4, 0xb7a"
    Begin block 0xb7a,0xb7a,0,0,0,0x524,private,False,0,0,"0x7b4, 0xb7a"
"    prev=[0x7ad], succ=[0xb31]",0xb7a,0,0,0,0x524,private,False,0,0,0xb31
    =================================,0xb7a,0,0,0,0x524,private,False,0,0,0xb31
    0xb7f: JUMP v62d(0xb31),0xb7a,0,"0,v62d",JUMP,0x524,private,False,0,0,0xb31
    Begin block 0x735,0x735,0,0,0,0x524,private,False,0,0,0xb31
"    prev=[0x6d3], succ=[0x73a]",0x735,0,0,0,0x524,private,False,0,0,0x73a
    =================================,0x735,0,0,0,0x524,private,False,0,0,0x73a
    0x736: v736(0x60) = CONST ,0x735,v736,0,CONST,0x524,private,False,0x60,0,0x73a
    Begin block 0x6bd,0x6bd,0,0,0,0x524,private,False,0,0,0x73a
"    prev=[0x6b4], succ=[0x6b4]",0x6bd,0,0,0,0x524,private,False,0,0,0x6b4
    =================================,0x6bd,0,0,0,0x524,private,False,0,0,0x6b4
"    0x6bd_0x0: v6bd_0 = PHI v6af, v6ce",0x6bd,v6bd_0,"0,v6af,v6ce",PHI,0x524,private,False,0,0,0x6b4
"    0x6bd_0x1: v6bd_1 = PHI v6a7, v6cc",0x6bd,v6bd_1,"0,v6a7,v6cc",PHI,0x524,private,False,0,0,0x6b4
"    0x6bd_0x2: v6bd_2 = PHI v6ab(0x44), v6c6",0x6bd,v6bd_2,"0,v6ab,v6c6",PHI,0x524,private,False,0,0,0x6b4
    0x6be: v6be = MLOAD v6bd_0,0x6bd,v6be,"0,v6bd_0",MLOAD,0x524,private,False,0,0,0x6b4
"    0x6c0: MSTORE v6bd_1, v6be",0x6bd,0,"0,v6bd_1,v6be",MSTORE,0x524,private,False,0,0,0x6b4
    0x6c1: v6c1(0x1f) = CONST ,0x6bd,v6c1,0,CONST,0x524,private,False,0x1f,0,0x6b4
    0x6c3: v6c3(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v6c1(0x1f),0x6bd,v6c3,"0,v6c1",NOT,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0x6b4
"    0x6c6: v6c6 = ADD v6bd_2, v6c3(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0x6bd,v6c6,"0,v6bd_2,v6c3",ADD,0x524,private,False,0,0,0x6b4
    0x6c8: v6c8(0x20) = CONST ,0x6bd,v6c8,0,CONST,0x524,private,False,0x20,0,0x6b4
"    0x6cc: v6cc = ADD v6c8(0x20), v6bd_1",0x6bd,v6cc,"0,v6c8,v6bd_1",ADD,0x524,private,False,0,0,0x6b4
"    0x6ce: v6ce = ADD v6c8(0x20), v6bd_0",0x6bd,v6ce,"0,v6c8,v6bd_0",ADD,0x524,private,False,0,0,0x6b4
    0x6cf: v6cf(0x6b4) = CONST ,0x6bd,v6cf,0,CONST,0x524,private,False,0x6b4,0,0x6b4
    0x6d2: JUMP v6cf(0x6b4),0x6bd,0,"0,v6cf",JUMP,0x524,private,False,0,0,0x6b4
    Begin block 0x820B0x5e5,0x820B0x5e5,0,0,0,0x524,private,False,0,0,0x6b4
"    prev=[0x7f0B0x5e5], succ=[0x824B0x5e5]",0x820B0x5e5,0,0,0,0x524,private,False,0,0,0x824B0x5e5
    =================================,0x820B0x5e5,0,0,0,0x524,private,False,0,0,0x824B0x5e5
    0x822S0x5e5: v822V5e5 = ISZERO v7f4V5e5,0x820B0x5e5,v822V5e5,"0,v7f4V5e5",ISZERO,0x524,private,False,0,0,0x824B0x5e5
    0x823S0x5e5: v823V5e5 = ISZERO v822V5e5,0x820B0x5e5,v823V5e5,"0,v822V5e5",ISZERO,0x524,private,False,0,0,0x824B0x5e5
    Begin block 0x52c,0x52c,0,0,0,0x524,private,False,0,0,0x824B0x5e5
"    prev=[0x524], succ=[0x578, 0x57c]",0x52c,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
    =================================,0x52c,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
    0x52d: v52d(0x40) = CONST ,0x52c,v52d,0,CONST,0x524,private,False,0x40,0,"0x578, 0x57c"
    0x530: v530 = MLOAD v52d(0x40),0x52c,v530,"0,v52d",MLOAD,0x524,private,False,0,0x524&m0x40,"0x578, 0x57c"
    0x531: v531(0x6eb1769f) = CONST ,0x52c,v531,0,CONST,0x524,private,False,0x6eb1769f,0,"0x578, 0x57c"
    0x536: v536(0xe1) = CONST ,0x52c,v536,0,CONST,0x524,private,False,0xe1,0,"0x578, 0x57c"
"    0x538: v538(0xdd62ed3e00000000000000000000000000000000000000000000000000000000) = SHL v536(0xe1), v531(0x6eb1769f)",0x52c,v538,"0,v536,v531",SHL,0x524,private,False,0xdd62ed3e00000000000000000000000000000000000000000000000000000000,0,"0x578, 0x57c"
"    0x53a: MSTORE v530, v538(0xdd62ed3e00000000000000000000000000000000000000000000000000000000)",0x52c,0x524&m0x40,"0,v530,v538",MSTORE,0x524,private,False,0,0x524&m0x40,"0x578, 0x57c"
    0x53b: v53b = ADDRESS ,0x52c,v53b,0,ADDRESS,0x524,private,False,0,0,"0x578, 0x57c"
    0x53c: v53c(0x4) = CONST ,0x52c,v53c,0,CONST,0x524,private,False,0x4,0,"0x578, 0x57c"
"    0x53f: v53f = ADD v530, v53c(0x4)",0x52c,v53f,"0,v530,v53c",ADD,0x524,private,False,0,0x524&m0x40+0x4,"0x578, 0x57c"
"    0x540: MSTORE v53f, v53b",0x52c,0x524&m0x40+0x4,"0,v53f,v53b",MSTORE,0x524,private,False,0,0x524&m0x40+0x4,"0x578, 0x57c"
    0x541: v541(0x1) = CONST ,0x52c,v541,0,CONST,0x524,private,False,0x1,0,"0x578, 0x57c"
    0x543: v543(0x1) = CONST ,0x52c,v543,0,CONST,0x524,private,False,0x1,0,"0x578, 0x57c"
    0x545: v545(0xa0) = CONST ,0x52c,v545,0,CONST,0x524,private,False,0xa0,0,"0x578, 0x57c"
"    0x547: v547(0x10000000000000000000000000000000000000000) = SHL v545(0xa0), v543(0x1)",0x52c,v547,"0,v545,v543",SHL,0x524,private,False,0x10000000000000000000000000000000000000000,0,"0x578, 0x57c"
"    0x548: v548(0xffffffffffffffffffffffffffffffffffffffff) = SUB v547(0x10000000000000000000000000000000000000000), v541(0x1)",0x52c,v548,"0,v547,v541",SUB,0x524,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x578, 0x57c"
"    0x54b: v54b = AND v548(0xffffffffffffffffffffffffffffffffffffffff), v524arg1",0x52c,v54b,"0,v548,v524arg1",AND,0x524,private,False,0,0,"0x578, 0x57c"
    0x54c: v54c(0x24) = CONST ,0x52c,v54c,0,CONST,0x524,private,False,0x24,0,"0x578, 0x57c"
"    0x54f: v54f = ADD v530, v54c(0x24)",0x52c,v54f,"0,v530,v54c",ADD,0x524,private,False,0,0x524&m0x40+0x24,"0x578, 0x57c"
"    0x550: MSTORE v54f, v54b",0x52c,0x524&m0x40+0x24,"0,v54f,v54b",MSTORE,0x524,private,False,0,0x524&m0x40+0x24,"0x578, 0x57c"
    0x552: v552 = MLOAD v52d(0x40),0x52c,v552,"0,v52d",MLOAD,0x524,private,False,0,0x524&m0x40,"0x578, 0x57c"
"    0x555: v555 = AND v524arg2, v548(0xffffffffffffffffffffffffffffffffffffffff)",0x52c,v555,"0,v524arg2,v548",AND,0x524,private,False,0,0,"0x578, 0x57c"
    0x557: v557(0xdd62ed3e) = CONST ,0x52c,v557,0,CONST,0x524,private,False,0xdd62ed3e,0,"0x578, 0x57c"
    0x55d: v55d(0x44) = CONST ,0x52c,v55d,0,CONST,0x524,private,False,0x44,0,"0x578, 0x57c"
"    0x561: v561 = ADD v530, v55d(0x44)",0x52c,v561,"0,v530,v55d",ADD,0x524,private,False,0,0x524&m0x40+0x44,"0x578, 0x57c"
    0x563: v563(0x20) = CONST ,0x52c,v563,0,CONST,0x524,private,False,0x20,0,"0x578, 0x57c"
"    0x56b: v56b(0x0) = SUB v530, v552",0x52c,v56b,"0,v530,v552",SUB,0x524,private,False,0x0,0x524&m0x40-0x0,"0x578, 0x57c"
"    0x56c: v56c(0x44) = ADD v56b(0x0), v55d(0x44)",0x52c,v56c,"0,v56b,v55d",ADD,0x524,private,False,0x44,0x524&m0x40-0x0+0x44,"0x578, 0x57c"
    0x570: v570 = EXTCODESIZE v555,0x52c,v570,"0,v555",EXTCODESIZE,0x524,private,False,0,0,"0x578, 0x57c"
    0x571: v571 = ISZERO v570,0x52c,v571,"0,v570",ISZERO,0x524,private,False,0,0,"0x578, 0x57c"
    0x573: v573 = ISZERO v571,0x52c,v573,"0,v571",ISZERO,0x524,private,False,0,0,"0x578, 0x57c"
    0x574: v574(0x57c) = CONST ,0x52c,v574,0,CONST,0x524,private,False,0x57c,0,"0x578, 0x57c"
"    0x577: JUMPI v574(0x57c), v573",0x52c,0,"0,v574,v573",JUMPI,0x524,private,False,0,0,"0x578, 0x57c"
    Begin block 0x578,0x578,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
"    prev=[0x52c], succ=[]",0x578,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
    =================================,0x578,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
    0x578: v578(0x0) = CONST ,0x578,v578,0,CONST,0x524,private,False,0x0,0,"0x578, 0x57c"
"    0x57b: REVERT v578(0x0), v578(0x0)",0x578,0,"0,v578,v578",REVERT,0x524,private,False,0,0,"0x578, 0x57c"
    Begin block 0x57c,0x57c,0,0,0,0x524,private,False,0,0,"0x578, 0x57c"
"    prev=[0x52c], succ=[0x587, 0x590]",0x57c,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
    =================================,0x57c,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
    0x57e: v57e = GAS ,0x57c,v57e,0,GAS,0x524,private,False,0,0,"0x587, 0x590"
"    0x57f: v57f = STATICCALL v57e, v555, v552, v56c(0x44), v552, v563(0x20)",0x57c,v57f,"0,v57e,v555,v552,v56c,v552,v563",STATICCALL,0x524,private,False,0,0,"0x587, 0x590"
    0x580: v580 = ISZERO v57f,0x57c,v580,"0,v57f",ISZERO,0x524,private,False,0,0,"0x587, 0x590"
    0x582: v582 = ISZERO v580,0x57c,v582,"0,v580",ISZERO,0x524,private,False,0,0,"0x587, 0x590"
    0x583: v583(0x590) = CONST ,0x57c,v583,0,CONST,0x524,private,False,0x590,0,"0x587, 0x590"
"    0x586: JUMPI v583(0x590), v582",0x57c,0,"0,v583,v582",JUMPI,0x524,private,False,0,0,"0x587, 0x590"
    Begin block 0x587,0x587,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
"    prev=[0x57c], succ=[]",0x587,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
    =================================,0x587,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
    0x587: v587 = RETURNDATASIZE ,0x587,v587,0,RETURNDATASIZE,0x524,private,False,0,0,"0x587, 0x590"
    0x588: v588(0x0) = CONST ,0x587,v588,0,CONST,0x524,private,False,0x0,0,"0x587, 0x590"
"    0x58b: RETURNDATACOPY v588(0x0), v588(0x0), v587",0x587,0,"0,v588,v588,v587",RETURNDATACOPY,0x524,private,False,0,0,"0x587, 0x590"
    0x58c: v58c = RETURNDATASIZE ,0x587,v58c,0,RETURNDATASIZE,0x524,private,False,0,0,"0x587, 0x590"
    0x58d: v58d(0x0) = CONST ,0x587,v58d,0,CONST,0x524,private,False,0x0,0,"0x587, 0x590"
"    0x58f: REVERT v58d(0x0), v58c",0x587,0,"0,v58d,v58c",REVERT,0x524,private,False,0,0,"0x587, 0x590"
    Begin block 0x590,0x590,0,0,0,0x524,private,False,0,0,"0x587, 0x590"
"    prev=[0x57c], succ=[0x5a2, 0x5a6]",0x590,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
    =================================,0x590,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
    0x595: v595(0x40) = CONST ,0x590,v595,0,CONST,0x524,private,False,0x40,0,"0x5a2, 0x5a6"
    0x597: v597 = MLOAD v595(0x40),0x590,v597,"0,v595",MLOAD,0x524,private,False,0,0x524&m0x40,"0x5a2, 0x5a6"
    0x598: v598 = RETURNDATASIZE ,0x590,v598,0,RETURNDATASIZE,0x524,private,False,0,0,"0x5a2, 0x5a6"
    0x599: v599(0x20) = CONST ,0x590,v599,0,CONST,0x524,private,False,0x20,0,"0x5a2, 0x5a6"
"    0x59c: v59c = LT v598, v599(0x20)",0x590,v59c,"0,v598,v599",LT,0x524,private,False,0,0,"0x5a2, 0x5a6"
    0x59d: v59d = ISZERO v59c,0x590,v59d,"0,v59c",ISZERO,0x524,private,False,0,0,"0x5a2, 0x5a6"
    0x59e: v59e(0x5a6) = CONST ,0x590,v59e,0,CONST,0x524,private,False,0x5a6,0,"0x5a2, 0x5a6"
"    0x5a1: JUMPI v59e(0x5a6), v59d",0x590,0,"0,v59e,v59d",JUMPI,0x524,private,False,0,0,"0x5a2, 0x5a6"
    Begin block 0x5a2,0x5a2,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
"    prev=[0x590], succ=[]",0x5a2,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
    =================================,0x5a2,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
    0x5a2: v5a2(0x0) = CONST ,0x5a2,v5a2,0,CONST,0x524,private,False,0x0,0,"0x5a2, 0x5a6"
"    0x5a5: REVERT v5a2(0x0), v5a2(0x0)",0x5a2,0,"0,v5a2,v5a2",REVERT,0x524,private,False,0,0,"0x5a2, 0x5a6"
    Begin block 0x5a6,0x5a6,0,0,0,0x524,private,False,0,0,"0x5a2, 0x5a6"
"    prev=[0x590], succ=[0x5aa]",0x5a6,0,0,0,0x524,private,False,0,0,0x5aa
    =================================,0x5a6,0,0,0,0x524,private,False,0,0,0x5aa
    0x5a8: v5a8 = MLOAD v597,0x5a6,v5a8,"0,v597",MLOAD,0x524,private,False,0,0,0x5aa
    0x5a9: v5a9 = ISZERO v5a8,0x5a6,v5a9,"0,v5a8",ISZERO,0x524,private,False,0,0,0x5aa
},0x5a6,0,0,0,0x524,private,False,0,0,0x5aa
function fallback()() public {,0x8fe,0,0,public,fallback,public,False,0,0,0x5aa
    Begin block 0x8fe,0x8fe,0,0,0,fallback,public,False,0,0,0x5aa
"    prev=[], succ=[]",0x8fe,0,0,0,fallback,public,False,0,0,0x5aa
    =================================,0x8fe,0,0,0,fallback,public,False,0,0,0x5aa
    0x8ff: v8ff(0x0) = CONST ,0x8fe,v8ff,0,CONST,fallback,public,False,0x0,0,0x5aa
"    0x902: REVERT v8ff(0x0), v8ff(0x0)",0x8fe,0,"0,v8ff,v8ff",REVERT,fallback,public,False,0,0,0x5aa
},0x8fe,0,0,0,fallback,public,False,0,0,0x5aa
function governor()() public {,0x98,0,"0,governor",public,governor,public,False,0,0,0x5aa
    Begin block 0x98,0x98,0,0,0,governor,public,False,0,0,0x5aa
"    prev=[], succ=[0x1d0]",0x98,0,0,0,governor,public,False,0,0,0x1d0
    =================================,0x98,0,0,0,governor,public,False,0,0,0x1d0
    0x99: v99(0x946) = CONST ,0x98,v99,0,CONST,governor,public,False,0x946,0,0x1d0
    0x9c: v9c(0x1d0) = CONST ,0x98,v9c,0,CONST,governor,public,False,0x1d0,0,0x1d0
    0x9f: JUMP v9c(0x1d0),0x98,0,"0,v9c",JUMP,governor,public,False,0,0,0x1d0
    Begin block 0x1d0,0x1d0,0,0,0,governor,public,False,0,0,0x1d0
"    prev=[0x98], succ=[0x946]",0x1d0,0,0,0,governor,public,False,0,0,0x946
    =================================,0x1d0,0,0,0,governor,public,False,0,0,0x946
    0x1d1: v1d1(0x33) = CONST ,0x1d0,v1d1,0,CONST,governor,public,False,0x33,0,0x946
    0x1d3: v1d3 = SLOAD v1d1(0x33),0x1d0,v1d3,"0,v1d1",SLOAD,governor,public,False,0,0,0x946
    0x1d4: v1d4(0x1) = CONST ,0x1d0,v1d4,0,CONST,governor,public,False,0x1,0,0x946
    0x1d6: v1d6(0x1) = CONST ,0x1d0,v1d6,0,CONST,governor,public,False,0x1,0,0x946
    0x1d8: v1d8(0xa0) = CONST ,0x1d0,v1d8,0,CONST,governor,public,False,0xa0,0,0x946
"    0x1da: v1da(0x10000000000000000000000000000000000000000) = SHL v1d8(0xa0), v1d6(0x1)",0x1d0,v1da,"0,v1d8,v1d6",SHL,governor,public,False,0x10000000000000000000000000000000000000000,0,0x946
"    0x1db: v1db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1da(0x10000000000000000000000000000000000000000), v1d4(0x1)",0x1d0,v1db,"0,v1da,v1d4",SUB,governor,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x946
"    0x1dc: v1dc = AND v1db(0xffffffffffffffffffffffffffffffffffffffff), v1d3",0x1d0,v1dc,"0,v1db,v1d3",AND,governor,public,False,0,0,0x946
    0x1de: JUMP v99(0x946),0x1d0,0,"0,v99",JUMP,governor,public,False,0,0,0x946
    Begin block 0x946,0x946,0,0,0,governor,public,False,0,0,0x946
"    prev=[0x1d0], succ=[]",0x946,0,0,0,governor,public,False,0,0,0x946
    =================================,0x946,0,0,0,governor,public,False,0,0,0x946
    0x947: v947(0x40) = CONST ,0x946,v947,0,CONST,governor,public,False,0x40,0,0x946
    0x94a: v94a = MLOAD v947(0x40),0x946,v94a,"0,v947",MLOAD,governor,public,False,0,governor&m0x40,0x946
    0x94b: v94b(0x1) = CONST ,0x946,v94b,0,CONST,governor,public,False,0x1,0,0x946
    0x94d: v94d(0x1) = CONST ,0x946,v94d,0,CONST,governor,public,False,0x1,0,0x946
    0x94f: v94f(0xa0) = CONST ,0x946,v94f,0,CONST,governor,public,False,0xa0,0,0x946
"    0x951: v951(0x10000000000000000000000000000000000000000) = SHL v94f(0xa0), v94d(0x1)",0x946,v951,"0,v94f,v94d",SHL,governor,public,False,0x10000000000000000000000000000000000000000,0,0x946
"    0x952: v952(0xffffffffffffffffffffffffffffffffffffffff) = SUB v951(0x10000000000000000000000000000000000000000), v94b(0x1)",0x946,v952,"0,v951,v94b",SUB,governor,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x946
"    0x955: v955 = AND v1dc, v952(0xffffffffffffffffffffffffffffffffffffffff)",0x946,v955,"0,v1dc,v952",AND,governor,public,False,0,0,0x946
"    0x957: MSTORE v94a, v955",0x946,governor&m0x40,"0,v94a,v955",MSTORE,governor,public,False,0,governor&m0x40,0x946
    0x958: v958 = MLOAD v947(0x40),0x946,v958,"0,v947",MLOAD,governor,public,False,0,governor&m0x40,0x946
"    0x95c: v95c(0x0) = SUB v94a, v958",0x946,v95c,"0,v94a,v958",SUB,governor,public,False,0x0,governor&m0x40-0x0,0x946
    0x95d: v95d(0x20) = CONST ,0x946,v95d,0,CONST,governor,public,False,0x20,0,0x946
"    0x95f: v95f(0x20) = ADD v95d(0x20), v95c(0x0)",0x946,v95f,"0,v95d,v95c",ADD,governor,public,False,0x20,governor&m0x40-0x0+0x20,0x946
"    0x961: RETURN v958, v95f(0x20)",0x946,0,"0,v958,v95f",RETURN,governor,public,False,0,0,0x946
},0x946,0,0,0,governor,public,False,0,0,0x946
function reward()() public {,0xbc,0,0,public,reward,public,False,0,0,0x946
    Begin block 0xbc,0xbc,0,0,0,reward,public,False,0,0,0x946
"    prev=[], succ=[0x1df]",0xbc,0,0,0,reward,public,False,0,0,0x1df
    =================================,0xbc,0,0,0,reward,public,False,0,0,0x1df
    0xbd: vbd(0x981) = CONST ,0xbc,vbd,0,CONST,reward,public,False,0x981,0,0x1df
    0xc0: vc0(0x1df) = CONST ,0xbc,vc0,0,CONST,reward,public,False,0x1df,0,0x1df
    0xc3: JUMP vc0(0x1df),0xbc,0,"0,vc0",JUMP,reward,public,False,0,0,0x1df
    Begin block 0x1df,0x1df,0,0,0,reward,public,False,0,0,0x1df
"    prev=[0xbc], succ=[0x981]",0x1df,0,0,0,reward,public,False,0,0,0x981
    =================================,0x1df,0,0,0,reward,public,False,0,0,0x981
    0x1e0: v1e0(0x34) = CONST ,0x1df,v1e0,0,CONST,reward,public,False,0x34,0,0x981
    0x1e2: v1e2 = SLOAD v1e0(0x34),0x1df,v1e2,"0,v1e0",SLOAD,reward,public,False,0,0,0x981
    0x1e3: v1e3(0x1) = CONST ,0x1df,v1e3,0,CONST,reward,public,False,0x1,0,0x981
    0x1e5: v1e5(0x1) = CONST ,0x1df,v1e5,0,CONST,reward,public,False,0x1,0,0x981
    0x1e7: v1e7(0xa0) = CONST ,0x1df,v1e7,0,CONST,reward,public,False,0xa0,0,0x981
"    0x1e9: v1e9(0x10000000000000000000000000000000000000000) = SHL v1e7(0xa0), v1e5(0x1)",0x1df,v1e9,"0,v1e7,v1e5",SHL,reward,public,False,0x10000000000000000000000000000000000000000,0,0x981
"    0x1ea: v1ea(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e9(0x10000000000000000000000000000000000000000), v1e3(0x1)",0x1df,v1ea,"0,v1e9,v1e3",SUB,reward,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x981
"    0x1eb: v1eb = AND v1ea(0xffffffffffffffffffffffffffffffffffffffff), v1e2",0x1df,v1eb,"0,v1ea,v1e2",AND,reward,public,False,0,0,0x981
    0x1ed: JUMP vbd(0x981),0x1df,0,"0,vbd",JUMP,reward,public,False,0,0,0x981
    Begin block 0x981,0x981,0,0,0,reward,public,False,0,0,0x981
"    prev=[0x1df], succ=[]",0x981,0,0,0,reward,public,False,0,0,0x981
    =================================,0x981,0,0,0,reward,public,False,0,0,0x981
    0x982: v982(0x40) = CONST ,0x981,v982,0,CONST,reward,public,False,0x40,0,0x981
    0x985: v985 = MLOAD v982(0x40),0x981,v985,"0,v982",MLOAD,reward,public,False,0,reward&m0x40,0x981
    0x986: v986(0x1) = CONST ,0x981,v986,0,CONST,reward,public,False,0x1,0,0x981
    0x988: v988(0x1) = CONST ,0x981,v988,0,CONST,reward,public,False,0x1,0,0x981
    0x98a: v98a(0xa0) = CONST ,0x981,v98a,0,CONST,reward,public,False,0xa0,0,0x981
"    0x98c: v98c(0x10000000000000000000000000000000000000000) = SHL v98a(0xa0), v988(0x1)",0x981,v98c,"0,v98a,v988",SHL,reward,public,False,0x10000000000000000000000000000000000000000,0,0x981
"    0x98d: v98d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v98c(0x10000000000000000000000000000000000000000), v986(0x1)",0x981,v98d,"0,v98c,v986",SUB,reward,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x981
"    0x990: v990 = AND v1eb, v98d(0xffffffffffffffffffffffffffffffffffffffff)",0x981,v990,"0,v1eb,v98d",AND,reward,public,False,0,0,0x981
"    0x992: MSTORE v985, v990",0x981,reward&m0x40,"0,v985,v990",MSTORE,reward,public,False,0,reward&m0x40,0x981
    0x993: v993 = MLOAD v982(0x40),0x981,v993,"0,v982",MLOAD,reward,public,False,0,reward&m0x40,0x981
"    0x997: v997(0x0) = SUB v985, v993",0x981,v997,"0,v985,v993",SUB,reward,public,False,0x0,reward&m0x40-0x0,0x981
    0x998: v998(0x20) = CONST ,0x981,v998,0,CONST,reward,public,False,0x20,0,0x981
"    0x99a: v99a(0x20) = ADD v998(0x20), v997(0x0)",0x981,v99a,"0,v998,v997",ADD,reward,public,False,0x20,reward&m0x40-0x0+0x20,0x981
"    0x99c: RETURN v993, v99a(0x20)",0x981,0,"0,v993,v99a",RETURN,reward,public,False,0,0,0x981
},0x981,0,0,0,reward,public,False,0,0,0x981
function __Mine_init_unchained(address)() public {,0xc4,0,0,public,__Mine_init_unchained,public,False,0,0,0x981
    Begin block 0xc4,0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,0x981
"    prev=[], succ=[0xd6, 0xda]",0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    =================================,0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    0xc5: vc5(0x9bc) = CONST ,0xc4,vc5,0,CONST,__Mine_init_unchained,public,False,0x9bc,0,"0xd6, 0xda"
    0xc8: vc8(0x4) = CONST ,0xc4,vc8,0,CONST,__Mine_init_unchained,public,False,0x4,0,"0xd6, 0xda"
    0xcb: vcb = CALLDATASIZE ,0xc4,vcb,0,CALLDATASIZE,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
"    0xcc: vcc = SUB vcb, vc8(0x4)",0xc4,vcc,"0,vcb,vc8",SUB,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    0xcd: vcd(0x20) = CONST ,0xc4,vcd,0,CONST,__Mine_init_unchained,public,False,0x20,0,"0xd6, 0xda"
"    0xd0: vd0 = LT vcc, vcd(0x20)",0xc4,vd0,"0,vcc,vcd",LT,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    0xd1: vd1 = ISZERO vd0,0xc4,vd1,"0,vd0",ISZERO,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    0xd2: vd2(0xda) = CONST ,0xc4,vd2,0,CONST,__Mine_init_unchained,public,False,0xda,0,"0xd6, 0xda"
"    0xd5: JUMPI vd2(0xda), vd1",0xc4,0,"0,vd2,vd1",JUMPI,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    Begin block 0xd6,0xd6,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
"    prev=[0xc4], succ=[]",0xd6,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    =================================,0xd6,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    0xd6: vd6(0x0) = CONST ,0xd6,vd6,0,CONST,__Mine_init_unchained,public,False,0x0,0,"0xd6, 0xda"
"    0xd9: REVERT vd6(0x0), vd6(0x0)",0xd6,0,"0,vd6,vd6",REVERT,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
    Begin block 0xda,0xda,0,0,0,__Mine_init_unchained,public,False,0,0,"0xd6, 0xda"
"    prev=[0xc4], succ=[0x1ee0xc4]",0xda,0,0,0,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
    =================================,0xda,0,0,0,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
    0xdc: vdc = CALLDATALOAD vc8(0x4),0xda,vdc,"0,vc8",CALLDATALOAD,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
    0xdd: vdd(0x1) = CONST ,0xda,vdd,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x1ee0xc4
    0xdf: vdf(0x1) = CONST ,0xda,vdf,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x1ee0xc4
    0xe1: ve1(0xa0) = CONST ,0xda,ve1,0,CONST,__Mine_init_unchained,public,False,0xa0,0,0x1ee0xc4
"    0xe3: ve3(0x10000000000000000000000000000000000000000) = SHL ve1(0xa0), vdf(0x1)",0xda,ve3,"0,ve1,vdf",SHL,__Mine_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,0x1ee0xc4
"    0xe4: ve4(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve3(0x10000000000000000000000000000000000000000), vdd(0x1)",0xda,ve4,"0,ve3,vdd",SUB,__Mine_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1ee0xc4
"    0xe5: ve5 = AND ve4(0xffffffffffffffffffffffffffffffffffffffff), vdc",0xda,ve5,"0,ve4,vdc",AND,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
    0xe6: ve6(0x1ee) = CONST ,0xda,ve6,0,CONST,__Mine_init_unchained,public,False,0x1ee,0,0x1ee0xc4
    0xe9: JUMP ve6(0x1ee),0xda,0,"0,ve6",JUMP,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
    Begin block 0x1ee0xc4,0x1ee0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,0x1ee0xc4
"    prev=[0xda], succ=[0x2010xc4, 0x2050xc4]",0x1ee0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    =================================,0x1ee0xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    0x1ef0xc4: vc41ef(0x33) = CONST ,0x1ee0xc4,vc41ef,0,CONST,__Mine_init_unchained,public,False,0x33,0,"0x2010xc4, 0x2050xc4"
    0x1f10xc4: vc41f1 = SLOAD vc41ef(0x33),0x1ee0xc4,vc41f1,"0,vc41ef",SLOAD,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    0x1f20xc4: vc41f2(0x1) = CONST ,0x1ee0xc4,vc41f2,0,CONST,__Mine_init_unchained,public,False,0x1,0,"0x2010xc4, 0x2050xc4"
    0x1f40xc4: vc41f4(0x1) = CONST ,0x1ee0xc4,vc41f4,0,CONST,__Mine_init_unchained,public,False,0x1,0,"0x2010xc4, 0x2050xc4"
    0x1f60xc4: vc41f6(0xa0) = CONST ,0x1ee0xc4,vc41f6,0,CONST,__Mine_init_unchained,public,False,0xa0,0,"0x2010xc4, 0x2050xc4"
"    0x1f80xc4: vc41f8(0x10000000000000000000000000000000000000000) = SHL vc41f6(0xa0), vc41f4(0x1)",0x1ee0xc4,vc41f8,"0,vc41f6,vc41f4",SHL,__Mine_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,"0x2010xc4, 0x2050xc4"
"    0x1f90xc4: vc41f9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc41f8(0x10000000000000000000000000000000000000000), vc41f2(0x1)",0x1ee0xc4,vc41f9,"0,vc41f8,vc41f2",SUB,__Mine_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x2010xc4, 0x2050xc4"
"    0x1fa0xc4: vc41fa = AND vc41f9(0xffffffffffffffffffffffffffffffffffffffff), vc41f1",0x1ee0xc4,vc41fa,"0,vc41f9,vc41f1",AND,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    0x1fb0xc4: vc41fb = CALLER ,0x1ee0xc4,vc41fb,0,CALLER,__Mine_init_unchained,public,True,0,0,"0x2010xc4, 0x2050xc4"
"    0x1fc0xc4: vc41fc = EQ vc41fb, vc41fa",0x1ee0xc4,vc41fc,"0,vc41fb,vc41fa",EQ,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    0x1fd0xc4: vc41fd(0x205) = CONST ,0x1ee0xc4,vc41fd,0,CONST,__Mine_init_unchained,public,False,0x205,0,"0x2010xc4, 0x2050xc4"
"    0x2000xc4: JUMPI vc41fd(0x205), vc41fc",0x1ee0xc4,0,"0,vc41fd,vc41fc",JUMPI,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    Begin block 0x2010xc4,0x2010xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
"    prev=[0x1ee0xc4], succ=[]",0x2010xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    =================================,0x2010xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    0x2010xc4: vc4201(0x0) = CONST ,0x2010xc4,vc4201,0,CONST,__Mine_init_unchained,public,False,0x0,0,"0x2010xc4, 0x2050xc4"
"    0x2040xc4: REVERT vc4201(0x0), vc4201(0x0)",0x2010xc4,0,"0,vc4201,vc4201",REVERT,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
    Begin block 0x2050xc4,0x2050xc4,0,0,0,__Mine_init_unchained,public,False,0,0,"0x2010xc4, 0x2050xc4"
"    prev=[0x1ee0xc4], succ=[0x9bc]",0x2050xc4,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
    =================================,0x2050xc4,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
    0x2060xc4: vc4206(0x34) = CONST ,0x2050xc4,vc4206,0,CONST,__Mine_init_unchained,public,False,0x34,0,0x9bc
    0x2090xc4: vc4209 = SLOAD vc4206(0x34),0x2050xc4,vc4209,"0,vc4206",SLOAD,__Mine_init_unchained,public,False,0,0,0x9bc
    0x20a0xc4: vc420a(0x1) = CONST ,0x2050xc4,vc420a,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x9bc
    0x20c0xc4: vc420c(0x1) = CONST ,0x2050xc4,vc420c,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x9bc
    0x20e0xc4: vc420e(0xa0) = CONST ,0x2050xc4,vc420e,0,CONST,__Mine_init_unchained,public,False,0xa0,0,0x9bc
"    0x2100xc4: vc4210(0x10000000000000000000000000000000000000000) = SHL vc420e(0xa0), vc420c(0x1)",0x2050xc4,vc4210,"0,vc420e,vc420c",SHL,__Mine_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,0x9bc
"    0x2110xc4: vc4211(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc4210(0x10000000000000000000000000000000000000000), vc420a(0x1)",0x2050xc4,vc4211,"0,vc4210,vc420a",SUB,__Mine_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x9bc
    0x2120xc4: vc4212(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vc4211(0xffffffffffffffffffffffffffffffffffffffff),0x2050xc4,vc4212,"0,vc4211",NOT,__Mine_init_unchained,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x9bc
"    0x2130xc4: vc4213 = AND vc4212(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vc4209",0x2050xc4,vc4213,"0,vc4212,vc4209",AND,__Mine_init_unchained,public,False,0,0,0x9bc
    0x2140xc4: vc4214(0x1) = CONST ,0x2050xc4,vc4214,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x9bc
    0x2160xc4: vc4216(0x1) = CONST ,0x2050xc4,vc4216,0,CONST,__Mine_init_unchained,public,False,0x1,0,0x9bc
    0x2180xc4: vc4218(0xa0) = CONST ,0x2050xc4,vc4218,0,CONST,__Mine_init_unchained,public,False,0xa0,0,0x9bc
"    0x21a0xc4: vc421a(0x10000000000000000000000000000000000000000) = SHL vc4218(0xa0), vc4216(0x1)",0x2050xc4,vc421a,"0,vc4218,vc4216",SHL,__Mine_init_unchained,public,False,0x10000000000000000000000000000000000000000,0,0x9bc
"    0x21b0xc4: vc421b(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc421a(0x10000000000000000000000000000000000000000), vc4214(0x1)",0x2050xc4,vc421b,"0,vc421a,vc4214",SUB,__Mine_init_unchained,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x9bc
"    0x21f0xc4: vc421f = AND vc421b(0xffffffffffffffffffffffffffffffffffffffff), ve5",0x2050xc4,vc421f,"0,vc421b,ve5",AND,__Mine_init_unchained,public,False,0,0,0x9bc
"    0x2230xc4: vc4223 = OR vc421f, vc4213",0x2050xc4,vc4223,"0,vc421f,vc4213",OR,__Mine_init_unchained,public,False,0,0,0x9bc
"    0x2250xc4: SSTORE vc4206(0x34), vc4223",0x2050xc4,0,"0,vc4206,vc4223",SSTORE,__Mine_init_unchained,public,False,0,0,0x9bc
    0x2260xc4: JUMP vc5(0x9bc),0x2050xc4,0,"0,vc5",JUMP,__Mine_init_unchained,public,False,0,0,0x9bc
    Begin block 0x9bc,0x9bc,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
"    prev=[0x2050xc4], succ=[]",0x9bc,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
    =================================,0x9bc,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
    0x9bd: STOP ,0x9bc,0,0,STOP,__Mine_init_unchained,public,False,0,0,0x9bc
},0x9bc,0,0,0,__Mine_init_unchained,public,False,0,0,0x9bc
function renounceGovernorship()() public {,0xec,0,"0,renounceGovernorship",public,renounceGovernorship,public,False,0,0,0x9bc
    Begin block 0xec,0xec,0,0,0,renounceGovernorship,public,False,0,0,0x9bc
"    prev=[], succ=[0x227]",0xec,0,0,0,renounceGovernorship,public,False,0,0,0x227
    =================================,0xec,0,0,0,renounceGovernorship,public,False,0,0,0x227
    0xed: ved(0x9dd) = CONST ,0xec,ved,0,CONST,renounceGovernorship,public,False,0x9dd,0,0x227
    0xf0: vf0(0x227) = CONST ,0xec,vf0,0,CONST,renounceGovernorship,public,False,0x227,0,0x227
    0xf3: JUMP vf0(0x227),0xec,0,"0,vf0",JUMP,renounceGovernorship,public,False,0,0,0x227
    Begin block 0x227,0x227,0,0,0,renounceGovernorship,public,False,0,0,0x227
"    prev=[0xec], succ=[0x23a, 0x23e]",0x227,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    =================================,0x227,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    0x228: v228(0x33) = CONST ,0x227,v228,0,CONST,renounceGovernorship,public,False,0x33,0,"0x23a, 0x23e"
    0x22a: v22a = SLOAD v228(0x33),0x227,v22a,"0,v228",SLOAD,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    0x22b: v22b(0x1) = CONST ,0x227,v22b,0,CONST,renounceGovernorship,public,False,0x1,0,"0x23a, 0x23e"
    0x22d: v22d(0x1) = CONST ,0x227,v22d,0,CONST,renounceGovernorship,public,False,0x1,0,"0x23a, 0x23e"
    0x22f: v22f(0xa0) = CONST ,0x227,v22f,0,CONST,renounceGovernorship,public,False,0xa0,0,"0x23a, 0x23e"
"    0x231: v231(0x10000000000000000000000000000000000000000) = SHL v22f(0xa0), v22d(0x1)",0x227,v231,"0,v22f,v22d",SHL,renounceGovernorship,public,False,0x10000000000000000000000000000000000000000,0,"0x23a, 0x23e"
"    0x232: v232(0xffffffffffffffffffffffffffffffffffffffff) = SUB v231(0x10000000000000000000000000000000000000000), v22b(0x1)",0x227,v232,"0,v231,v22b",SUB,renounceGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x23a, 0x23e"
"    0x233: v233 = AND v232(0xffffffffffffffffffffffffffffffffffffffff), v22a",0x227,v233,"0,v232,v22a",AND,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    0x234: v234 = CALLER ,0x227,v234,0,CALLER,renounceGovernorship,public,True,0,0,"0x23a, 0x23e"
"    0x235: v235 = EQ v234, v233",0x227,v235,"0,v234,v233",EQ,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    0x236: v236(0x23e) = CONST ,0x227,v236,0,CONST,renounceGovernorship,public,False,0x23e,0,"0x23a, 0x23e"
"    0x239: JUMPI v236(0x23e), v235",0x227,0,"0,v236,v235",JUMPI,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    Begin block 0x23a,0x23a,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
"    prev=[0x227], succ=[]",0x23a,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    =================================,0x23a,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    0x23a: v23a(0x0) = CONST ,0x23a,v23a,0,CONST,renounceGovernorship,public,False,0x0,0,"0x23a, 0x23e"
"    0x23d: REVERT v23a(0x0), v23a(0x0)",0x23a,0,"0,v23a,v23a",REVERT,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
    Begin block 0x23e,0x23e,0,0,0,renounceGovernorship,public,False,0,0,"0x23a, 0x23e"
"    prev=[0x227], succ=[0x9dd]",0x23e,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
    =================================,0x23e,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
    0x23f: v23f(0x33) = CONST ,0x23e,v23f,0,CONST,renounceGovernorship,public,False,0x33,0,0x9dd
    0x241: v241 = SLOAD v23f(0x33),0x23e,v241,"0,v23f",SLOAD,renounceGovernorship,public,False,0,0,0x9dd
    0x242: v242(0x40) = CONST ,0x23e,v242,0,CONST,renounceGovernorship,public,False,0x40,0,0x9dd
    0x244: v244 = MLOAD v242(0x40),0x23e,v244,"0,v242",MLOAD,renounceGovernorship,public,False,0,renounceGovernorship&m0x40,0x9dd
    0x245: v245(0x0) = CONST ,0x23e,v245,0,CONST,renounceGovernorship,public,False,0x0,0,0x9dd
    0x248: v248(0x1) = CONST ,0x23e,v248,0,CONST,renounceGovernorship,public,False,0x1,0,0x9dd
    0x24a: v24a(0x1) = CONST ,0x23e,v24a,0,CONST,renounceGovernorship,public,False,0x1,0,0x9dd
    0x24c: v24c(0xa0) = CONST ,0x23e,v24c,0,CONST,renounceGovernorship,public,False,0xa0,0,0x9dd
"    0x24e: v24e(0x10000000000000000000000000000000000000000) = SHL v24c(0xa0), v24a(0x1)",0x23e,v24e,"0,v24c,v24a",SHL,renounceGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x9dd
"    0x24f: v24f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v24e(0x10000000000000000000000000000000000000000), v248(0x1)",0x23e,v24f,"0,v24e,v248",SUB,renounceGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x9dd
"    0x250: v250 = AND v24f(0xffffffffffffffffffffffffffffffffffffffff), v241",0x23e,v250,"0,v24f,v241",AND,renounceGovernorship,public,False,0,0,0x9dd
    0x252: v252(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST ,0x23e,v252,0,CONST,renounceGovernorship,public,False,0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a,0,0x9dd
"    0x276: LOG3 v244, v245(0x0), v252(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v250, v245(0x0)",0x23e,0,"0,v244,v245,v252,v250,v245",LOG3,renounceGovernorship,public,False,0,0,0x9dd
    0x277: v277(0x33) = CONST ,0x23e,v277,0,CONST,renounceGovernorship,public,False,0x33,0,0x9dd
    0x27a: v27a = SLOAD v277(0x33),0x23e,v27a,"0,v277",SLOAD,renounceGovernorship,public,False,0,0,0x9dd
    0x27b: v27b(0x1) = CONST ,0x23e,v27b,0,CONST,renounceGovernorship,public,False,0x1,0,0x9dd
    0x27d: v27d(0x1) = CONST ,0x23e,v27d,0,CONST,renounceGovernorship,public,False,0x1,0,0x9dd
    0x27f: v27f(0xa0) = CONST ,0x23e,v27f,0,CONST,renounceGovernorship,public,False,0xa0,0,0x9dd
"    0x281: v281(0x10000000000000000000000000000000000000000) = SHL v27f(0xa0), v27d(0x1)",0x23e,v281,"0,v27f,v27d",SHL,renounceGovernorship,public,False,0x10000000000000000000000000000000000000000,0,0x9dd
"    0x282: v282(0xffffffffffffffffffffffffffffffffffffffff) = SUB v281(0x10000000000000000000000000000000000000000), v27b(0x1)",0x23e,v282,"0,v281,v27b",SUB,renounceGovernorship,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x9dd
    0x283: v283(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v282(0xffffffffffffffffffffffffffffffffffffffff),0x23e,v283,"0,v282",NOT,renounceGovernorship,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x9dd
"    0x284: v284 = AND v283(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v27a",0x23e,v284,"0,v283,v27a",AND,renounceGovernorship,public,False,0,0,0x9dd
"    0x286: SSTORE v277(0x33), v284",0x23e,0,"0,v277,v284",SSTORE,renounceGovernorship,public,False,0,0,0x9dd
    0x287: JUMP ved(0x9dd),0x23e,0,"0,ved",JUMP,renounceGovernorship,public,False,0,0,0x9dd
    Begin block 0x9dd,0x9dd,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
"    prev=[0x23e], succ=[]",0x9dd,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
    =================================,0x9dd,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
    0x9de: STOP ,0x9dd,0,0,STOP,renounceGovernorship,public,False,0,0,0x9dd
},0x9dd,0,0,0,renounceGovernorship,public,False,0,0,0x9dd
"function __Mine_init(address,address)() public {",0xf4,0,0,,__Mine_init,public,False,0,0,0x9dd
    Begin block 0xf4,0xf4,0,0,0,__Mine_init,public,False,0,0,0x9dd
"    prev=[], succ=[0x106, 0x10a]",0xf4,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
    =================================,0xf4,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
    0xf5: vf5(0x9fe) = CONST ,0xf4,vf5,0,CONST,__Mine_init,public,False,0x9fe,0,"0x106, 0x10a"
    0xf8: vf8(0x4) = CONST ,0xf4,vf8,0,CONST,__Mine_init,public,False,0x4,0,"0x106, 0x10a"
    0xfb: vfb = CALLDATASIZE ,0xf4,vfb,0,CALLDATASIZE,__Mine_init,public,False,0,0,"0x106, 0x10a"
"    0xfc: vfc = SUB vfb, vf8(0x4)",0xf4,vfc,"0,vfb,vf8",SUB,__Mine_init,public,False,0,0,"0x106, 0x10a"
    0xfd: vfd(0x40) = CONST ,0xf4,vfd,0,CONST,__Mine_init,public,False,0x40,0,"0x106, 0x10a"
"    0x100: v100 = LT vfc, vfd(0x40)",0xf4,v100,"0,vfc,vfd",LT,__Mine_init,public,False,0,0,"0x106, 0x10a"
    0x101: v101 = ISZERO v100,0xf4,v101,"0,v100",ISZERO,__Mine_init,public,False,0,0,"0x106, 0x10a"
    0x102: v102(0x10a) = CONST ,0xf4,v102,0,CONST,__Mine_init,public,False,0x10a,0,"0x106, 0x10a"
"    0x105: JUMPI v102(0x10a), v101",0xf4,0,"0,v102,v101",JUMPI,__Mine_init,public,False,0,0,"0x106, 0x10a"
    Begin block 0x106,0x106,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
"    prev=[0xf4], succ=[]",0x106,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
    =================================,0x106,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
    0x106: v106(0x0) = CONST ,0x106,v106,0,CONST,__Mine_init,public,False,0x0,0,"0x106, 0x10a"
"    0x109: REVERT v106(0x0), v106(0x0)",0x106,0,"0,v106,v106",REVERT,__Mine_init,public,False,0,0,"0x106, 0x10a"
    Begin block 0x10a,0x10a,0,0,0,__Mine_init,public,False,0,0,"0x106, 0x10a"
"    prev=[0xf4], succ=[0x288]",0x10a,0,0,0,__Mine_init,public,False,0,0,0x288
    =================================,0x10a,0,0,0,__Mine_init,public,False,0,0,0x288
    0x10c: v10c(0x1) = CONST ,0x10a,v10c,0,CONST,__Mine_init,public,False,0x1,0,0x288
    0x10e: v10e(0x1) = CONST ,0x10a,v10e,0,CONST,__Mine_init,public,False,0x1,0,0x288
    0x110: v110(0xa0) = CONST ,0x10a,v110,0,CONST,__Mine_init,public,False,0xa0,0,0x288
"    0x112: v112(0x10000000000000000000000000000000000000000) = SHL v110(0xa0), v10e(0x1)",0x10a,v112,"0,v110,v10e",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,0x288
"    0x113: v113(0xffffffffffffffffffffffffffffffffffffffff) = SUB v112(0x10000000000000000000000000000000000000000), v10c(0x1)",0x10a,v113,"0,v112,v10c",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x288
    0x115: v115 = CALLDATALOAD vf8(0x4),0x10a,v115,"0,vf8",CALLDATALOAD,__Mine_init,public,False,0,0,0x288
"    0x117: v117 = AND v113(0xffffffffffffffffffffffffffffffffffffffff), v115",0x10a,v117,"0,v113,v115",AND,__Mine_init,public,False,0,0,0x288
    0x119: v119(0x20) = CONST ,0x10a,v119,0,CONST,__Mine_init,public,False,0x20,0,0x288
"    0x11b: v11b(0x24) = ADD v119(0x20), vf8(0x4)",0x10a,v11b,"0,v119,vf8",ADD,__Mine_init,public,False,0x24,0,0x288
    0x11c: v11c = CALLDATALOAD v11b(0x24),0x10a,v11c,"0,v11b",CALLDATALOAD,__Mine_init,public,False,0,0,0x288
"    0x11d: v11d = AND v11c, v113(0xffffffffffffffffffffffffffffffffffffffff)",0x10a,v11d,"0,v11c,v113",AND,__Mine_init,public,False,0,0,0x288
    0x11e: v11e(0x288) = CONST ,0x10a,v11e,0,CONST,__Mine_init,public,False,0x288,0,0x288
    0x121: JUMP v11e(0x288),0x10a,0,"0,v11e",JUMP,__Mine_init,public,False,0,0,0x288
    Begin block 0x288,0x288,0,0,0,__Mine_init,public,False,0,0,0x288
"    prev=[0x10a], succ=[0x2a1, 0x299]",0x288,0,0,0,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    =================================,0x288,0,0,0,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    0x289: v289(0x0) = CONST ,0x288,v289,0,CONST,__Mine_init,public,False,0x0,0,"0x2a1, 0x299"
    0x28b: v28b = SLOAD v289(0x0),0x288,v28b,"0,v289",SLOAD,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    0x28c: v28c(0x100) = CONST ,0x288,v28c,0,CONST,__Mine_init,public,False,0x100,0,"0x2a1, 0x299"
"    0x290: v290 = DIV v28b, v28c(0x100)",0x288,v290,"0,v28b,v28c",DIV,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    0x291: v291(0xff) = CONST ,0x288,v291,0,CONST,__Mine_init,public,False,0xff,0,"0x2a1, 0x299"
"    0x293: v293 = AND v291(0xff), v290",0x288,v293,"0,v291,v290",AND,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    0x295: v295(0x2a1) = CONST ,0x288,v295,0,CONST,__Mine_init,public,False,0x2a1,0,"0x2a1, 0x299"
"    0x298: JUMPI v295(0x2a1), v293",0x288,0,"0,v295,v293",JUMPI,__Mine_init,public,False,0,0,"0x2a1, 0x299"
    Begin block 0x2a1,0x2a1,0,0,0,__Mine_init,public,False,0,0,"0x2a1, 0x299"
"    prev=[0x288, 0x4afB0x299], succ=[0x2af, 0x2a7]",0x2a1,0,0,0,__Mine_init,public,False,0,0,"0x2af, 0x2a7"
    =================================,0x2a1,0,0,0,__Mine_init,public,False,0,0,"0x2af, 0x2a7"
"    0x2a1_0x0: v2a1_0 = PHI v293, v4b2V299",0x2a1,v2a1_0,"0,v293,v4b2V299",PHI,__Mine_init,public,False,0,0,"0x2af, 0x2a7"
    0x2a3: v2a3(0x2af) = CONST ,0x2a1,v2a3,0,CONST,__Mine_init,public,False,0x2af,0,"0x2af, 0x2a7"
"    0x2a6: JUMPI v2a3(0x2af), v2a1_0",0x2a1,0,"0,v2a3,v2a1_0",JUMPI,__Mine_init,public,False,0,0,"0x2af, 0x2a7"
    Begin block 0x2af,0x2af,0,0,0,__Mine_init,public,False,0,0,"0x2af, 0x2a7"
"    prev=[0x2a1, 0x2a7], succ=[0x2b4, 0x2ea]",0x2af,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    =================================,0x2af,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
"    0x2af_0x0: v2af_0 = PHI v293, v2ae, v4b2V299",0x2af,v2af_0,"0,v293,v2ae,v4b2V299",PHI,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    0x2b0: v2b0(0x2ea) = CONST ,0x2af,v2b0,0,CONST,__Mine_init,public,False,0x2ea,0,"0x2b4, 0x2ea"
"    0x2b3: JUMPI v2b0(0x2ea), v2af_0",0x2af,0,"0,v2b0,v2af_0",JUMPI,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    Begin block 0x2b4,0x2b4,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
"    prev=[0x2af], succ=[]",0x2b4,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    =================================,0x2b4,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    0x2b4: v2b4(0x40) = CONST ,0x2b4,v2b4,0,CONST,__Mine_init,public,False,0x40,0,"0x2b4, 0x2ea"
    0x2b6: v2b6 = MLOAD v2b4(0x40),0x2b4,v2b6,"0,v2b4",MLOAD,__Mine_init,public,False,0,__Mine_init&m0x40,"0x2b4, 0x2ea"
    0x2b7: v2b7(0x461bcd) = CONST ,0x2b4,v2b7,0,CONST,__Mine_init,public,False,0x461bcd,0,"0x2b4, 0x2ea"
    0x2bb: v2bb(0xe5) = CONST ,0x2b4,v2bb,0,CONST,__Mine_init,public,False,0xe5,0,"0x2b4, 0x2ea"
"    0x2bd: v2bd(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2bb(0xe5), v2b7(0x461bcd)",0x2b4,v2bd,"0,v2bb,v2b7",SHL,__Mine_init,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x2b4, 0x2ea"
"    0x2bf: MSTORE v2b6, v2bd(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x2b4,__Mine_init&m0x40,"0,v2b6,v2bd",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40,"0x2b4, 0x2ea"
    0x2c0: v2c0(0x4) = CONST ,0x2b4,v2c0,0,CONST,__Mine_init,public,False,0x4,0,"0x2b4, 0x2ea"
"    0x2c2: v2c2 = ADD v2c0(0x4), v2b6",0x2b4,v2c2,"0,v2c0,v2b6",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4,"0x2b4, 0x2ea"
    0x2c5: v2c5(0x20) = CONST ,0x2b4,v2c5,0,CONST,__Mine_init,public,False,0x20,0,"0x2b4, 0x2ea"
"    0x2c7: v2c7 = ADD v2c5(0x20), v2c2",0x2b4,v2c7,"0,v2c5,v2c2",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20,"0x2b4, 0x2ea"
"    0x2ca: v2ca(0x20) = SUB v2c7, v2c2",0x2b4,v2ca,"0,v2c7,v2c2",SUB,__Mine_init,public,False,0x20,__Mine_init&m0x40+0x4+0x20-0x20,"0x2b4, 0x2ea"
"    0x2cc: MSTORE v2c2, v2ca(0x20)",0x2b4,__Mine_init&m0x40+0x4,"0,v2c2,v2ca",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40+0x4,"0x2b4, 0x2ea"
    0x2cd: v2cd(0x2e) = CONST ,0x2b4,v2cd,0,CONST,__Mine_init,public,False,0x2e,0,"0x2b4, 0x2ea"
"    0x2d0: MSTORE v2c7, v2cd(0x2e)",0x2b4,__Mine_init&m0x40+0x4+0x20,"0,v2c7,v2cd",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20,"0x2b4, 0x2ea"
    0x2d1: v2d1(0x20) = CONST ,0x2b4,v2d1,0,CONST,__Mine_init,public,False,0x20,0,"0x2b4, 0x2ea"
"    0x2d3: v2d3 = ADD v2d1(0x20), v2c7",0x2b4,v2d3,"0,v2d1,v2c7",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20+0x20,"0x2b4, 0x2ea"
    0x2d5: v2d5(0x82d) = CONST ,0x2b4,v2d5,0,CONST,__Mine_init,public,False,0x82d,0,"0x2b4, 0x2ea"
    0x2d8: v2d8(0x2e) = CONST ,0x2b4,v2d8,0,CONST,__Mine_init,public,False,0x2e,0,"0x2b4, 0x2ea"
"    0x2db: CODECOPY v2d3, v2d5(0x82d), v2d8(0x2e)",0x2b4,0,"0,v2d3,v2d5,v2d8",CODECOPY,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    0x2dc: v2dc(0x40) = CONST ,0x2b4,v2dc,0,CONST,__Mine_init,public,False,0x40,0,"0x2b4, 0x2ea"
"    0x2de: v2de = ADD v2dc(0x40), v2d3",0x2b4,v2de,"0,v2dc,v2d3",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20+0x20+0x40,"0x2b4, 0x2ea"
    0x2e2: v2e2(0x40) = CONST ,0x2b4,v2e2,0,CONST,__Mine_init,public,False,0x40,0,"0x2b4, 0x2ea"
    0x2e4: v2e4 = MLOAD v2e2(0x40),0x2b4,v2e4,"0,v2e2",MLOAD,__Mine_init,public,False,0,__Mine_init&m0x40,"0x2b4, 0x2ea"
"    0x2e7: v2e7(0x84) = SUB v2de, v2e4",0x2b4,v2e7,"0,v2de,v2e4",SUB,__Mine_init,public,False,0x84,__Mine_init&m0x40+0x4+0x20+0x20+0x40-0x84,"0x2b4, 0x2ea"
"    0x2e9: REVERT v2e4, v2e7(0x84)",0x2b4,0,"0,v2e4,v2e7",REVERT,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
    Begin block 0x2ea,0x2ea,0,0,0,__Mine_init,public,False,0,0,"0x2b4, 0x2ea"
"    prev=[0x2af], succ=[0x2fd, 0x315]",0x2ea,0,0,0,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    =================================,0x2ea,0,0,0,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2eb: v2eb(0x0) = CONST ,0x2ea,v2eb,0,CONST,__Mine_init,public,False,0x0,0,"0x2fd, 0x315"
    0x2ed: v2ed = SLOAD v2eb(0x0),0x2ea,v2ed,"0,v2eb",SLOAD,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2ee: v2ee(0x100) = CONST ,0x2ea,v2ee,0,CONST,__Mine_init,public,False,0x100,0,"0x2fd, 0x315"
"    0x2f2: v2f2 = DIV v2ed, v2ee(0x100)",0x2ea,v2f2,"0,v2ed,v2ee",DIV,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2f3: v2f3(0xff) = CONST ,0x2ea,v2f3,0,CONST,__Mine_init,public,False,0xff,0,"0x2fd, 0x315"
"    0x2f5: v2f5 = AND v2f3(0xff), v2f2",0x2ea,v2f5,"0,v2f3,v2f2",AND,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2f6: v2f6 = ISZERO v2f5,0x2ea,v2f6,"0,v2f5",ISZERO,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2f8: v2f8 = ISZERO v2f6,0x2ea,v2f8,"0,v2f6",ISZERO,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    0x2f9: v2f9(0x315) = CONST ,0x2ea,v2f9,0,CONST,__Mine_init,public,False,0x315,0,"0x2fd, 0x315"
"    0x2fc: JUMPI v2f9(0x315), v2f8",0x2ea,0,"0,v2f9,v2f8",JUMPI,__Mine_init,public,False,0,0,"0x2fd, 0x315"
    Begin block 0x2fd,0x2fd,0,0,0,__Mine_init,public,False,0,0,"0x2fd, 0x315"
"    prev=[0x2ea], succ=[0x315]",0x2fd,0,0,0,__Mine_init,public,False,0,0,0x315
    =================================,0x2fd,0,0,0,__Mine_init,public,False,0,0,0x315
    0x2fd: v2fd(0x0) = CONST ,0x2fd,v2fd,0,CONST,__Mine_init,public,False,0x0,0,0x315
    0x300: v300 = SLOAD v2fd(0x0),0x2fd,v300,"0,v2fd",SLOAD,__Mine_init,public,False,0,0,0x315
    0x301: v301(0xff) = CONST ,0x2fd,v301,0,CONST,__Mine_init,public,False,0xff,0,0x315
    0x303: v303(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v301(0xff),0x2fd,v303,"0,v301",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x315
    0x304: v304(0xff00) = CONST ,0x2fd,v304,0,CONST,__Mine_init,public,False,0xff00,0,0x315
    0x307: v307(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v304(0xff00),0x2fd,v307,"0,v304",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x315
"    0x30a: v30a = AND v300, v307(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)",0x2fd,v30a,"0,v300,v307",AND,__Mine_init,public,False,0,0,0x315
    0x30b: v30b(0x100) = CONST ,0x2fd,v30b,0,CONST,__Mine_init,public,False,0x100,0,0x315
"    0x30e: v30e = OR v30b(0x100), v30a",0x2fd,v30e,"0,v30b,v30a",OR,__Mine_init,public,False,0,0,0x315
"    0x30f: v30f = AND v30e, v303(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)",0x2fd,v30f,"0,v30e,v303",AND,__Mine_init,public,False,0,0,0x315
    0x310: v310(0x1) = CONST ,0x2fd,v310,0,CONST,__Mine_init,public,False,0x1,0,0x315
"    0x312: v312 = OR v310(0x1), v30f",0x2fd,v312,"0,v310,v30f",OR,__Mine_init,public,False,0,0,0x315
"    0x314: SSTORE v2fd(0x0), v312",0x2fd,0,"0,v2fd,v312",SSTORE,__Mine_init,public,False,0,0,0x315
    Begin block 0x315,0x315,0,0,0,__Mine_init,public,False,0,0,0x315
"    prev=[0x2fd, 0x2ea], succ=[0x3beB0x315]",0x315,0,0,0,__Mine_init,public,False,0,0,0x3beB0x315
    =================================,0x315,0,0,0,__Mine_init,public,False,0,0,0x3beB0x315
    0x316: v316(0x31e) = CONST ,0x315,v316,0,CONST,__Mine_init,public,False,0x31e,0,0x3beB0x315
    0x31a: v31a(0x3be) = CONST ,0x315,v31a,0,CONST,__Mine_init,public,False,0x3be,0,0x3beB0x315
"    0x31d: JUMP v31a(0x3be), v117, v316(0x31e)",0x315,0,"0,v31a,v117,v316",JUMP,__Mine_init,public,False,0,0,0x3beB0x315
    Begin block 0x3beB0x315,0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3beB0x315
"    prev=[0x315], succ=[0x3cf0x3beB0x315, 0x3d70x3beB0x315]",0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    =================================,0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    0x3bfS0x315: v3bfV315(0x0) = CONST ,0x3beB0x315,v3bfV315,0,CONST,__Mine_init,public,False,0x0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    0x3c1S0x315: v3c1V315 = SLOAD v3bfV315(0x0),0x3beB0x315,v3c1V315,"0,v3bfV315",SLOAD,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    0x3c2S0x315: v3c2V315(0x100) = CONST ,0x3beB0x315,v3c2V315,0,CONST,__Mine_init,public,False,0x100,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
"    0x3c6S0x315: v3c6V315 = DIV v3c1V315, v3c2V315(0x100)",0x3beB0x315,v3c6V315,"0,v3c1V315,v3c2V315",DIV,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    0x3c7S0x315: v3c7V315(0xff) = CONST ,0x3beB0x315,v3c7V315,0,CONST,__Mine_init,public,False,0xff,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
"    0x3c9S0x315: v3c9V315 = AND v3c7V315(0xff), v3c6V315",0x3beB0x315,v3c9V315,"0,v3c7V315,v3c6V315",AND,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    0x3cbS0x315: v3cbV315(0x3d7) = CONST ,0x3beB0x315,v3cbV315,0,CONST,__Mine_init,public,False,0x3d7,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
"    0x3ceS0x315: JUMPI v3cbV315(0x3d7), v3c9V315",0x3beB0x315,0,"0,v3cbV315,v3c9V315",JUMPI,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
    Begin block 0x3cf0x3beB0x315,0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3cf0x3beB0x315, 0x3d70x3beB0x315"
"    prev=[0x3beB0x315], succ=[0x4afB0x3cf0x3beB0x315]",0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x4afB0x3cf0x3beB0x315
    =================================,0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x4afB0x3cf0x3beB0x315
    0x3d00x3beS0x315: v3be3d0V315(0x3d7) = CONST ,0x3cf0x3beB0x315,v3be3d0V315,0,CONST,__Mine_init,public,False,0x3d7,0,0x4afB0x3cf0x3beB0x315
    0x3d30x3beS0x315: v3be3d3V315(0x4af) = CONST ,0x3cf0x3beB0x315,v3be3d3V315,0,CONST,__Mine_init,public,False,0x4af,0,0x4afB0x3cf0x3beB0x315
    0x3d60x3beS0x315: JUMP v3be3d3V315(0x4af),0x3cf0x3beB0x315,0,"0,v3be3d3V315",JUMP,__Mine_init,public,False,0,0,0x4afB0x3cf0x3beB0x315
    Begin block 0x4afB0x3cf0x3beB0x315,0x4afB0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x4afB0x3cf0x3beB0x315
"    prev=[0x3cf0x3beB0x315], succ=[0x3d70x3beB0x315]",0x4afB0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    =================================,0x4afB0x3cf0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    0x4b0S0x3cf0x3beS0x315: v4b0V3cf3beV315 = ADDRESS ,0x4afB0x3cf0x3beB0x315,v4b0V3cf3beV315,0,ADDRESS,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    0x4b1S0x3cf0x3beS0x315: v4b1V3cf3beV315 = EXTCODESIZE v4b0V3cf3beV315,0x4afB0x3cf0x3beB0x315,v4b1V3cf3beV315,"0,v4b0V3cf3beV315",EXTCODESIZE,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    0x4b2S0x3cf0x3beS0x315: v4b2V3cf3beV315 = ISZERO v4b1V3cf3beV315,0x4afB0x3cf0x3beB0x315,v4b2V3cf3beV315,"0,v4b1V3cf3beV315",ISZERO,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    0x4b4S0x3cf0x3beS0x315: JUMP v3be3d0V315(0x3d7),0x4afB0x3cf0x3beB0x315,0,"0,v3be3d0V315",JUMP,__Mine_init,public,False,0,0,0x3d70x3beB0x315
    Begin block 0x3d70x3beB0x315,0x3d70x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3d70x3beB0x315
"    prev=[0x3beB0x315, 0x4afB0x3cf0x3beB0x315], succ=[0x3e50x3beB0x315, 0x3dd0x3beB0x315]",0x3d70x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
    =================================,0x3d70x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
"    0x3d70x3be_0x0S0x315: v3d73be_0V315 = PHI v3c9V315, v4b2V3cf3beV315",0x3d70x3beB0x315,v3d73be_0V315,"0,v3c9V315,v4b2V3cf3beV315",PHI,__Mine_init,public,False,0,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
    0x3d90x3beS0x315: v3be3d9V315(0x3e5) = CONST ,0x3d70x3beB0x315,v3be3d9V315,0,CONST,__Mine_init,public,False,0x3e5,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
"    0x3dc0x3beS0x315: JUMPI v3be3d9V315(0x3e5), v3d73be_0V315",0x3d70x3beB0x315,0,"0,v3be3d9V315,v3d73be_0V315",JUMPI,__Mine_init,public,False,0,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
    Begin block 0x3e50x3beB0x315,0x3e50x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3e50x3beB0x315, 0x3dd0x3beB0x315"
"    prev=[0x3d70x3beB0x315, 0x3dd0x3beB0x315], succ=[0x3ea0x3beB0x315, 0x4200x3beB0x315]",0x3e50x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    =================================,0x3e50x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3e50x3be_0x0S0x315: v3e53be_0V315 = PHI v3c9V315, v3be3e4V315, v4b2V3cf3beV315",0x3e50x3beB0x315,v3e53be_0V315,"0,v3c9V315,v3be3e4V315,v4b2V3cf3beV315",PHI,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3e60x3beS0x315: v3be3e6V315(0x420) = CONST ,0x3e50x3beB0x315,v3be3e6V315,0,CONST,__Mine_init,public,False,0x420,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3e90x3beS0x315: JUMPI v3be3e6V315(0x420), v3e53be_0V315",0x3e50x3beB0x315,0,"0,v3be3e6V315,v3e53be_0V315",JUMPI,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    Begin block 0x3ea0x3beB0x315,0x3ea0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    prev=[0x3e50x3beB0x315], succ=[]",0x3ea0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    =================================,0x3ea0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3ea0x3beS0x315: v3be3eaV315(0x40) = CONST ,0x3ea0x3beB0x315,v3be3eaV315,0,CONST,__Mine_init,public,False,0x40,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3ec0x3beS0x315: v3be3ecV315 = MLOAD v3be3eaV315(0x40),0x3ea0x3beB0x315,v3be3ecV315,"0,v3be3eaV315",MLOAD,__Mine_init,public,False,0,__Mine_init&m0x40,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3ed0x3beS0x315: v3be3edV315(0x461bcd) = CONST ,0x3ea0x3beB0x315,v3be3edV315,0,CONST,__Mine_init,public,False,0x461bcd,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3f10x3beS0x315: v3be3f1V315(0xe5) = CONST ,0x3ea0x3beB0x315,v3be3f1V315,0,CONST,__Mine_init,public,False,0xe5,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3f30x3beS0x315: v3be3f3V315(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v3be3f1V315(0xe5), v3be3edV315(0x461bcd)",0x3ea0x3beB0x315,v3be3f3V315,"0,v3be3f1V315,v3be3edV315",SHL,__Mine_init,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3f50x3beS0x315: MSTORE v3be3ecV315, v3be3f3V315(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x3ea0x3beB0x315,__Mine_init&m0x40,"0,v3be3ecV315,v3be3f3V315",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3f60x3beS0x315: v3be3f6V315(0x4) = CONST ,0x3ea0x3beB0x315,v3be3f6V315,0,CONST,__Mine_init,public,False,0x4,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3f80x3beS0x315: v3be3f8V315 = ADD v3be3f6V315(0x4), v3be3ecV315",0x3ea0x3beB0x315,v3be3f8V315,"0,v3be3f6V315,v3be3ecV315",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x3fb0x3beS0x315: v3be3fbV315(0x20) = CONST ,0x3ea0x3beB0x315,v3be3fbV315,0,CONST,__Mine_init,public,False,0x20,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x3fd0x3beS0x315: v3be3fdV315 = ADD v3be3fbV315(0x20), v3be3f8V315",0x3ea0x3beB0x315,v3be3fdV315,"0,v3be3fbV315,v3be3f8V315",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4000x3beS0x315: v3be400V315(0x20) = SUB v3be3fdV315, v3be3f8V315",0x3ea0x3beB0x315,v3be400V315,"0,v3be3fdV315,v3be3f8V315",SUB,__Mine_init,public,False,0x20,__Mine_init&m0x40+0x4+0x20-0x20,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4020x3beS0x315: MSTORE v3be3f8V315, v3be400V315(0x20)",0x3ea0x3beB0x315,__Mine_init&m0x40+0x4,"0,v3be3f8V315,v3be400V315",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40+0x4,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x4030x3beS0x315: v3be403V315(0x2e) = CONST ,0x3ea0x3beB0x315,v3be403V315,0,CONST,__Mine_init,public,False,0x2e,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4060x3beS0x315: MSTORE v3be3fdV315, v3be403V315(0x2e)",0x3ea0x3beB0x315,__Mine_init&m0x40+0x4+0x20,"0,v3be3fdV315,v3be403V315",MSTORE,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x4070x3beS0x315: v3be407V315(0x20) = CONST ,0x3ea0x3beB0x315,v3be407V315,0,CONST,__Mine_init,public,False,0x20,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4090x3beS0x315: v3be409V315 = ADD v3be407V315(0x20), v3be3fdV315",0x3ea0x3beB0x315,v3be409V315,"0,v3be407V315,v3be3fdV315",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20+0x20,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x40b0x3beS0x315: v3be40bV315(0x82d) = CONST ,0x3ea0x3beB0x315,v3be40bV315,0,CONST,__Mine_init,public,False,0x82d,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x40e0x3beS0x315: v3be40eV315(0x2e) = CONST ,0x3ea0x3beB0x315,v3be40eV315,0,CONST,__Mine_init,public,False,0x2e,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4110x3beS0x315: CODECOPY v3be409V315, v3be40bV315(0x82d), v3be40eV315(0x2e)",0x3ea0x3beB0x315,0,"0,v3be409V315,v3be40bV315,v3be40eV315",CODECOPY,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x4120x3beS0x315: v3be412V315(0x40) = CONST ,0x3ea0x3beB0x315,v3be412V315,0,CONST,__Mine_init,public,False,0x40,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x4140x3beS0x315: v3be414V315 = ADD v3be412V315(0x40), v3be409V315",0x3ea0x3beB0x315,v3be414V315,"0,v3be412V315,v3be409V315",ADD,__Mine_init,public,False,0,__Mine_init&m0x40+0x4+0x20+0x20+0x40,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x4180x3beS0x315: v3be418V315(0x40) = CONST ,0x3ea0x3beB0x315,v3be418V315,0,CONST,__Mine_init,public,False,0x40,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    0x41a0x3beS0x315: v3be41aV315 = MLOAD v3be418V315(0x40),0x3ea0x3beB0x315,v3be41aV315,"0,v3be418V315",MLOAD,__Mine_init,public,False,0,__Mine_init&m0x40,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x41d0x3beS0x315: v3be41dV315(0x84) = SUB v3be414V315, v3be41aV315",0x3ea0x3beB0x315,v3be41dV315,"0,v3be414V315,v3be41aV315",SUB,__Mine_init,public,False,0x84,__Mine_init&m0x40+0x4+0x20+0x20+0x40-0x84,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    0x41f0x3beS0x315: REVERT v3be41aV315, v3be41dV315(0x84)",0x3ea0x3beB0x315,0,"0,v3be41aV315,v3be41dV315",REVERT,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
    Begin block 0x4200x3beB0x315,0x4200x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x3ea0x3beB0x315, 0x4200x3beB0x315"
"    prev=[0x3e50x3beB0x315], succ=[0x4330x3beB0x315, 0x44b0x3beB0x315]",0x4200x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    =================================,0x4200x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x4210x3beS0x315: v3be421V315(0x0) = CONST ,0x4200x3beB0x315,v3be421V315,0,CONST,__Mine_init,public,False,0x0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x4230x3beS0x315: v3be423V315 = SLOAD v3be421V315(0x0),0x4200x3beB0x315,v3be423V315,"0,v3be421V315",SLOAD,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x4240x3beS0x315: v3be424V315(0x100) = CONST ,0x4200x3beB0x315,v3be424V315,0,CONST,__Mine_init,public,False,0x100,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
"    0x4280x3beS0x315: v3be428V315 = DIV v3be423V315, v3be424V315(0x100)",0x4200x3beB0x315,v3be428V315,"0,v3be423V315,v3be424V315",DIV,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x4290x3beS0x315: v3be429V315(0xff) = CONST ,0x4200x3beB0x315,v3be429V315,0,CONST,__Mine_init,public,False,0xff,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
"    0x42b0x3beS0x315: v3be42bV315 = AND v3be429V315(0xff), v3be428V315",0x4200x3beB0x315,v3be42bV315,"0,v3be429V315,v3be428V315",AND,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x42c0x3beS0x315: v3be42cV315 = ISZERO v3be42bV315,0x4200x3beB0x315,v3be42cV315,"0,v3be42bV315",ISZERO,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x42e0x3beS0x315: v3be42eV315 = ISZERO v3be42cV315,0x4200x3beB0x315,v3be42eV315,"0,v3be42cV315",ISZERO,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    0x42f0x3beS0x315: v3be42fV315(0x44b) = CONST ,0x4200x3beB0x315,v3be42fV315,0,CONST,__Mine_init,public,False,0x44b,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
"    0x4320x3beS0x315: JUMPI v3be42fV315(0x44b), v3be42eV315",0x4200x3beB0x315,0,"0,v3be42fV315,v3be42eV315",JUMPI,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
    Begin block 0x4330x3beB0x315,0x4330x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4330x3beB0x315, 0x44b0x3beB0x315"
"    prev=[0x4200x3beB0x315], succ=[0x44b0x3beB0x315]",0x4330x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    =================================,0x4330x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    0x4330x3beS0x315: v3be433V315(0x0) = CONST ,0x4330x3beB0x315,v3be433V315,0,CONST,__Mine_init,public,False,0x0,0,0x44b0x3beB0x315
    0x4360x3beS0x315: v3be436V315 = SLOAD v3be433V315(0x0),0x4330x3beB0x315,v3be436V315,"0,v3be433V315",SLOAD,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    0x4370x3beS0x315: v3be437V315(0xff) = CONST ,0x4330x3beB0x315,v3be437V315,0,CONST,__Mine_init,public,False,0xff,0,0x44b0x3beB0x315
    0x4390x3beS0x315: v3be439V315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v3be437V315(0xff),0x4330x3beB0x315,v3be439V315,"0,v3be437V315",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x44b0x3beB0x315
    0x43a0x3beS0x315: v3be43aV315(0xff00) = CONST ,0x4330x3beB0x315,v3be43aV315,0,CONST,__Mine_init,public,False,0xff00,0,0x44b0x3beB0x315
    0x43d0x3beS0x315: v3be43dV315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v3be43aV315(0xff00),0x4330x3beB0x315,v3be43dV315,"0,v3be43aV315",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x44b0x3beB0x315
"    0x4400x3beS0x315: v3be440V315 = AND v3be436V315, v3be43dV315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)",0x4330x3beB0x315,v3be440V315,"0,v3be436V315,v3be43dV315",AND,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    0x4410x3beS0x315: v3be441V315(0x100) = CONST ,0x4330x3beB0x315,v3be441V315,0,CONST,__Mine_init,public,False,0x100,0,0x44b0x3beB0x315
"    0x4440x3beS0x315: v3be444V315 = OR v3be441V315(0x100), v3be440V315",0x4330x3beB0x315,v3be444V315,"0,v3be441V315,v3be440V315",OR,__Mine_init,public,False,0,0,0x44b0x3beB0x315
"    0x4450x3beS0x315: v3be445V315 = AND v3be444V315, v3be439V315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)",0x4330x3beB0x315,v3be445V315,"0,v3be444V315,v3be439V315",AND,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    0x4460x3beS0x315: v3be446V315(0x1) = CONST ,0x4330x3beB0x315,v3be446V315,0,CONST,__Mine_init,public,False,0x1,0,0x44b0x3beB0x315
"    0x4480x3beS0x315: v3be448V315 = OR v3be446V315(0x1), v3be445V315",0x4330x3beB0x315,v3be448V315,"0,v3be446V315,v3be445V315",OR,__Mine_init,public,False,0,0,0x44b0x3beB0x315
"    0x44a0x3beS0x315: SSTORE v3be433V315(0x0), v3be448V315",0x4330x3beB0x315,0,"0,v3be433V315,v3be448V315",SSTORE,__Mine_init,public,False,0,0,0x44b0x3beB0x315
    Begin block 0x44b0x3beB0x315,0x44b0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x44b0x3beB0x315
"    prev=[0x4330x3beB0x315, 0x4200x3beB0x315], succ=[0x4a10x3beB0x315, 0xb0e0x3beB0x315]",0x44b0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    =================================,0x44b0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x44c0x3beS0x315: v3be44cV315(0x33) = CONST ,0x44b0x3beB0x315,v3be44cV315,0,CONST,__Mine_init,public,False,0x33,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x44f0x3beS0x315: v3be44fV315 = SLOAD v3be44cV315(0x33),0x44b0x3beB0x315,v3be44fV315,"0,v3be44cV315",SLOAD,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4500x3beS0x315: v3be450V315(0x1) = CONST ,0x44b0x3beB0x315,v3be450V315,0,CONST,__Mine_init,public,False,0x1,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4520x3beS0x315: v3be452V315(0x1) = CONST ,0x44b0x3beB0x315,v3be452V315,0,CONST,__Mine_init,public,False,0x1,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4540x3beS0x315: v3be454V315(0xa0) = CONST ,0x44b0x3beB0x315,v3be454V315,0,CONST,__Mine_init,public,False,0xa0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4560x3beS0x315: v3be456V315(0x10000000000000000000000000000000000000000) = SHL v3be454V315(0xa0), v3be452V315(0x1)",0x44b0x3beB0x315,v3be456V315,"0,v3be454V315,v3be452V315",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4570x3beS0x315: v3be457V315(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3be456V315(0x10000000000000000000000000000000000000000), v3be450V315(0x1)",0x44b0x3beB0x315,v3be457V315,"0,v3be456V315,v3be450V315",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4580x3beS0x315: v3be458V315(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v3be457V315(0xffffffffffffffffffffffffffffffffffffffff),0x44b0x3beB0x315,v3be458V315,"0,v3be457V315",NOT,__Mine_init,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4590x3beS0x315: v3be459V315 = AND v3be458V315(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v3be44fV315",0x44b0x3beB0x315,v3be459V315,"0,v3be458V315,v3be44fV315",AND,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x45a0x3beS0x315: v3be45aV315(0x1) = CONST ,0x44b0x3beB0x315,v3be45aV315,0,CONST,__Mine_init,public,False,0x1,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x45c0x3beS0x315: v3be45cV315(0x1) = CONST ,0x44b0x3beB0x315,v3be45cV315,0,CONST,__Mine_init,public,False,0x1,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x45e0x3beS0x315: v3be45eV315(0xa0) = CONST ,0x44b0x3beB0x315,v3be45eV315,0,CONST,__Mine_init,public,False,0xa0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4600x3beS0x315: v3be460V315(0x10000000000000000000000000000000000000000) = SHL v3be45eV315(0xa0), v3be45cV315(0x1)",0x44b0x3beB0x315,v3be460V315,"0,v3be45eV315,v3be45cV315",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4610x3beS0x315: v3be461V315(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3be460V315(0x10000000000000000000000000000000000000000), v3be45aV315(0x1)",0x44b0x3beB0x315,v3be461V315,"0,v3be460V315,v3be45aV315",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4640x3beS0x315: v3be464V315 = AND v3be461V315(0xffffffffffffffffffffffffffffffffffffffff), v117",0x44b0x3beB0x315,v3be464V315,"0,v3be461V315,v117",AND,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4680x3beS0x315: v3be468V315 = OR v3be464V315, v3be459V315",0x44b0x3beB0x315,v3be468V315,"0,v3be464V315,v3be459V315",OR,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x46c0x3beS0x315: SSTORE v3be44cV315(0x33), v3be468V315",0x44b0x3beB0x315,0,"0,v3be44cV315,v3be468V315",SSTORE,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x46d0x3beS0x315: v3be46dV315(0x40) = CONST ,0x44b0x3beB0x315,v3be46dV315,0,CONST,__Mine_init,public,False,0x40,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x46f0x3beS0x315: v3be46fV315 = MLOAD v3be46dV315(0x40),0x44b0x3beB0x315,v3be46fV315,"0,v3be46dV315",MLOAD,__Mine_init,public,False,0,__Mine_init&m0x40,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4710x3beS0x315: v3be471V315 = AND v3be468V315, v3be461V315(0xffffffffffffffffffffffffffffffffffffffff)",0x44b0x3beB0x315,v3be471V315,"0,v3be468V315,v3be461V315",AND,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4730x3beS0x315: v3be473V315(0x0) = CONST ,0x44b0x3beB0x315,v3be473V315,0,CONST,__Mine_init,public,False,0x0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x4760x3beS0x315: v3be476V315(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST ,0x44b0x3beB0x315,v3be476V315,0,CONST,__Mine_init,public,False,0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x49a0x3beS0x315: LOG3 v3be46fV315, v3be473V315(0x0), v3be476V315(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v3be473V315(0x0), v3be471V315",0x44b0x3beB0x315,0,"0,v3be46fV315,v3be473V315,v3be476V315,v3be473V315,v3be471V315",LOG3,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x49c0x3beS0x315: v3be49cV315 = ISZERO v3be42cV315,0x44b0x3beB0x315,v3be49cV315,"0,v3be42cV315",ISZERO,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    0x49d0x3beS0x315: v3be49dV315(0xb0e) = CONST ,0x44b0x3beB0x315,v3be49dV315,0,CONST,__Mine_init,public,False,0xb0e,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    0x4a00x3beS0x315: JUMPI v3be49dV315(0xb0e), v3be49cV315",0x44b0x3beB0x315,0,"0,v3be49dV315,v3be49cV315",JUMPI,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
    Begin block 0x4a10x3beB0x315,0x4a10x3beB0x315,0,0,0,__Mine_init,public,False,0,0,"0x4a10x3beB0x315, 0xb0e0x3beB0x315"
"    prev=[0x44b0x3beB0x315], succ=[0x31e]",0x4a10x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x31e
    =================================,0x4a10x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x31e
    0x4a10x3beS0x315: v3be4a1V315(0x0) = CONST ,0x4a10x3beB0x315,v3be4a1V315,0,CONST,__Mine_init,public,False,0x0,0,0x31e
    0x4a40x3beS0x315: v3be4a4V315 = SLOAD v3be4a1V315(0x0),0x4a10x3beB0x315,v3be4a4V315,"0,v3be4a1V315",SLOAD,__Mine_init,public,False,0,0,0x31e
    0x4a50x3beS0x315: v3be4a5V315(0xff00) = CONST ,0x4a10x3beB0x315,v3be4a5V315,0,CONST,__Mine_init,public,False,0xff00,0,0x31e
    0x4a80x3beS0x315: v3be4a8V315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v3be4a5V315(0xff00),0x4a10x3beB0x315,v3be4a8V315,"0,v3be4a5V315",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x31e
"    0x4a90x3beS0x315: v3be4a9V315 = AND v3be4a8V315(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v3be4a4V315",0x4a10x3beB0x315,v3be4a9V315,"0,v3be4a8V315,v3be4a4V315",AND,__Mine_init,public,False,0,0,0x31e
"    0x4ab0x3beS0x315: SSTORE v3be4a1V315(0x0), v3be4a9V315",0x4a10x3beB0x315,0,"0,v3be4a1V315,v3be4a9V315",SSTORE,__Mine_init,public,False,0,0,0x31e
    0x4ae0x3beS0x315: JUMP v316(0x31e),0x4a10x3beB0x315,0,"0,v316",JUMP,__Mine_init,public,False,0,0,0x31e
    Begin block 0x31e,0x31e,0,0,0,__Mine_init,public,False,0,0,0x31e
"    prev=[0x4a10x3beB0x315, 0xb0e0x3beB0x315], succ=[0x1ee0xf4]",0x31e,0,0,0,__Mine_init,public,False,0,0,0x1ee0xf4
    =================================,0x31e,0,0,0,__Mine_init,public,False,0,0,0x1ee0xf4
    0x31f: v31f(0x327) = CONST ,0x31e,v31f,0,CONST,__Mine_init,public,False,0x327,0,0x1ee0xf4
    0x323: v323(0x1ee) = CONST ,0x31e,v323,0,CONST,__Mine_init,public,False,0x1ee,0,0x1ee0xf4
    0x326: JUMP v323(0x1ee),0x31e,0,"0,v323",JUMP,__Mine_init,public,False,0,0,0x1ee0xf4
    Begin block 0x1ee0xf4,0x1ee0xf4,0,0,0,__Mine_init,public,False,0,0,0x1ee0xf4
"    prev=[0x31e], succ=[0x2010xf4, 0x2050xf4]",0x1ee0xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    =================================,0x1ee0xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    0x1ef0xf4: vf41ef(0x33) = CONST ,0x1ee0xf4,vf41ef,0,CONST,__Mine_init,public,False,0x33,0,"0x2010xf4, 0x2050xf4"
    0x1f10xf4: vf41f1 = SLOAD vf41ef(0x33),0x1ee0xf4,vf41f1,"0,vf41ef",SLOAD,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    0x1f20xf4: vf41f2(0x1) = CONST ,0x1ee0xf4,vf41f2,0,CONST,__Mine_init,public,False,0x1,0,"0x2010xf4, 0x2050xf4"
    0x1f40xf4: vf41f4(0x1) = CONST ,0x1ee0xf4,vf41f4,0,CONST,__Mine_init,public,False,0x1,0,"0x2010xf4, 0x2050xf4"
    0x1f60xf4: vf41f6(0xa0) = CONST ,0x1ee0xf4,vf41f6,0,CONST,__Mine_init,public,False,0xa0,0,"0x2010xf4, 0x2050xf4"
"    0x1f80xf4: vf41f8(0x10000000000000000000000000000000000000000) = SHL vf41f6(0xa0), vf41f4(0x1)",0x1ee0xf4,vf41f8,"0,vf41f6,vf41f4",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,"0x2010xf4, 0x2050xf4"
"    0x1f90xf4: vf41f9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf41f8(0x10000000000000000000000000000000000000000), vf41f2(0x1)",0x1ee0xf4,vf41f9,"0,vf41f8,vf41f2",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x2010xf4, 0x2050xf4"
"    0x1fa0xf4: vf41fa = AND vf41f9(0xffffffffffffffffffffffffffffffffffffffff), vf41f1",0x1ee0xf4,vf41fa,"0,vf41f9,vf41f1",AND,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    0x1fb0xf4: vf41fb = CALLER ,0x1ee0xf4,vf41fb,0,CALLER,__Mine_init,public,True,0,0,"0x2010xf4, 0x2050xf4"
"    0x1fc0xf4: vf41fc = EQ vf41fb, vf41fa",0x1ee0xf4,vf41fc,"0,vf41fb,vf41fa",EQ,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    0x1fd0xf4: vf41fd(0x205) = CONST ,0x1ee0xf4,vf41fd,0,CONST,__Mine_init,public,False,0x205,0,"0x2010xf4, 0x2050xf4"
"    0x2000xf4: JUMPI vf41fd(0x205), vf41fc",0x1ee0xf4,0,"0,vf41fd,vf41fc",JUMPI,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    Begin block 0x2010xf4,0x2010xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
"    prev=[0x1ee0xf4], succ=[]",0x2010xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    =================================,0x2010xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    0x2010xf4: vf4201(0x0) = CONST ,0x2010xf4,vf4201,0,CONST,__Mine_init,public,False,0x0,0,"0x2010xf4, 0x2050xf4"
"    0x2040xf4: REVERT vf4201(0x0), vf4201(0x0)",0x2010xf4,0,"0,vf4201,vf4201",REVERT,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
    Begin block 0x2050xf4,0x2050xf4,0,0,0,__Mine_init,public,False,0,0,"0x2010xf4, 0x2050xf4"
"    prev=[0x1ee0xf4], succ=[0x327]",0x2050xf4,0,0,0,__Mine_init,public,False,0,0,0x327
    =================================,0x2050xf4,0,0,0,__Mine_init,public,False,0,0,0x327
    0x2060xf4: vf4206(0x34) = CONST ,0x2050xf4,vf4206,0,CONST,__Mine_init,public,False,0x34,0,0x327
    0x2090xf4: vf4209 = SLOAD vf4206(0x34),0x2050xf4,vf4209,"0,vf4206",SLOAD,__Mine_init,public,False,0,0,0x327
    0x20a0xf4: vf420a(0x1) = CONST ,0x2050xf4,vf420a,0,CONST,__Mine_init,public,False,0x1,0,0x327
    0x20c0xf4: vf420c(0x1) = CONST ,0x2050xf4,vf420c,0,CONST,__Mine_init,public,False,0x1,0,0x327
    0x20e0xf4: vf420e(0xa0) = CONST ,0x2050xf4,vf420e,0,CONST,__Mine_init,public,False,0xa0,0,0x327
"    0x2100xf4: vf4210(0x10000000000000000000000000000000000000000) = SHL vf420e(0xa0), vf420c(0x1)",0x2050xf4,vf4210,"0,vf420e,vf420c",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,0x327
"    0x2110xf4: vf4211(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf4210(0x10000000000000000000000000000000000000000), vf420a(0x1)",0x2050xf4,vf4211,"0,vf4210,vf420a",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x327
    0x2120xf4: vf4212(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vf4211(0xffffffffffffffffffffffffffffffffffffffff),0x2050xf4,vf4212,"0,vf4211",NOT,__Mine_init,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x327
"    0x2130xf4: vf4213 = AND vf4212(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), vf4209",0x2050xf4,vf4213,"0,vf4212,vf4209",AND,__Mine_init,public,False,0,0,0x327
    0x2140xf4: vf4214(0x1) = CONST ,0x2050xf4,vf4214,0,CONST,__Mine_init,public,False,0x1,0,0x327
    0x2160xf4: vf4216(0x1) = CONST ,0x2050xf4,vf4216,0,CONST,__Mine_init,public,False,0x1,0,0x327
    0x2180xf4: vf4218(0xa0) = CONST ,0x2050xf4,vf4218,0,CONST,__Mine_init,public,False,0xa0,0,0x327
"    0x21a0xf4: vf421a(0x10000000000000000000000000000000000000000) = SHL vf4218(0xa0), vf4216(0x1)",0x2050xf4,vf421a,"0,vf4218,vf4216",SHL,__Mine_init,public,False,0x10000000000000000000000000000000000000000,0,0x327
"    0x21b0xf4: vf421b(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf421a(0x10000000000000000000000000000000000000000), vf4214(0x1)",0x2050xf4,vf421b,"0,vf421a,vf4214",SUB,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x327
"    0x21f0xf4: vf421f = AND vf421b(0xffffffffffffffffffffffffffffffffffffffff), v11d",0x2050xf4,vf421f,"0,vf421b,v11d",AND,__Mine_init,public,False,0,0,0x327
"    0x2230xf4: vf4223 = OR vf421f, vf4213",0x2050xf4,vf4223,"0,vf421f,vf4213",OR,__Mine_init,public,False,0,0,0x327
"    0x2250xf4: SSTORE vf4206(0x34), vf4223",0x2050xf4,0,"0,vf4206,vf4223",SSTORE,__Mine_init,public,False,0,0,0x327
    0x2260xf4: JUMP v31f(0x327),0x2050xf4,0,"0,v31f",JUMP,__Mine_init,public,False,0,0,0x327
    Begin block 0x327,0x327,0,0,0,__Mine_init,public,False,0,0,0x327
"    prev=[0x2050xf4], succ=[0x32e, 0xaa3]",0x327,0,0,0,__Mine_init,public,False,0,0,"0x32e, 0xaa3"
    =================================,0x327,0,0,0,__Mine_init,public,False,0,0,"0x32e, 0xaa3"
    0x329: v329 = ISZERO v2f6,0x327,v329,"0,v2f6",ISZERO,__Mine_init,public,False,0,0,"0x32e, 0xaa3"
    0x32a: v32a(0xaa3) = CONST ,0x327,v32a,0,CONST,__Mine_init,public,False,0xaa3,0,"0x32e, 0xaa3"
"    0x32d: JUMPI v32a(0xaa3), v329",0x327,0,"0,v32a,v329",JUMPI,__Mine_init,public,False,0,0,"0x32e, 0xaa3"
    Begin block 0x32e,0x32e,0,0,0,__Mine_init,public,False,0,0,"0x32e, 0xaa3"
"    prev=[0x327], succ=[0x339]",0x32e,0,0,0,__Mine_init,public,False,0,0,0x339
    =================================,0x32e,0,0,0,__Mine_init,public,False,0,0,0x339
    0x32e: v32e(0x0) = CONST ,0x32e,v32e,0,CONST,__Mine_init,public,False,0x0,0,0x339
    0x331: v331 = SLOAD v32e(0x0),0x32e,v331,"0,v32e",SLOAD,__Mine_init,public,False,0,0,0x339
    0x332: v332(0xff00) = CONST ,0x32e,v332,0,CONST,__Mine_init,public,False,0xff00,0,0x339
    0x335: v335(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v332(0xff00),0x32e,v335,"0,v332",NOT,__Mine_init,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x339
"    0x336: v336 = AND v335(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v331",0x32e,v336,"0,v335,v331",AND,__Mine_init,public,False,0,0,0x339
"    0x338: SSTORE v32e(0x0), v336",0x32e,0,"0,v32e,v336",SSTORE,__Mine_init,public,False,0,0,0x339
    Begin block 0x339,0x339,0,0,0,__Mine_init,public,False,0,0,0x339
"    prev=[0x32e], succ=[0x9fe]",0x339,0,0,0,__Mine_init,public,False,0,0,0x9fe
    =================================,0x339,0,0,0,__Mine_init,public,False,0,0,0x9fe
    0x33d: JUMP vf5(0x9fe),0x339,0,"0,vf5",JUMP,__Mine_init,public,False,0,0,0x9fe
    Begin block 0x9fe,0x9fe,0,0,0,__Mine_init,public,False,0,0,0x9fe
"    prev=[0xaa3, 0x339], succ=[]",0x9fe,0,0,0,__Mine_init,public,False,0,0,0x9fe
    =================================,0x9fe,0,0,0,__Mine_init,public,False,0,0,0x9fe
    0x9ff: STOP ,0x9fe,0,0,STOP,__Mine_init,public,False,0,0,0x9fe
    Begin block 0xaa3,0xaa3,0,0,0,__Mine_init,public,False,0,0,0x9fe
"    prev=[0x327], succ=[0x9fe]",0xaa3,0,0,0,__Mine_init,public,False,0,0,0x9fe
    =================================,0xaa3,0,0,0,__Mine_init,public,False,0,0,0x9fe
    0xaa7: JUMP vf5(0x9fe),0xaa3,0,"0,vf5",JUMP,__Mine_init,public,False,0,0,0x9fe
    Begin block 0xb0e0x3beB0x315,0xb0e0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x9fe
"    prev=[0x44b0x3beB0x315], succ=[0x31e]",0xb0e0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x31e
    =================================,0xb0e0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x31e
    0xb110x3beS0x315: JUMP v316(0x31e),0xb0e0x3beB0x315,0,"0,v316",JUMP,__Mine_init,public,False,0,0,0x31e
    Begin block 0x3dd0x3beB0x315,0x3dd0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x31e
"    prev=[0x3d70x3beB0x315], succ=[0x3e50x3beB0x315]",0x3dd0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3e50x3beB0x315
    =================================,0x3dd0x3beB0x315,0,0,0,__Mine_init,public,False,0,0,0x3e50x3beB0x315
    0x3de0x3beS0x315: v3be3deV315(0x0) = CONST ,0x3dd0x3beB0x315,v3be3deV315,0,CONST,__Mine_init,public,False,0x0,0,0x3e50x3beB0x315
    0x3e00x3beS0x315: v3be3e0V315 = SLOAD v3be3deV315(0x0),0x3dd0x3beB0x315,v3be3e0V315,"0,v3be3deV315",SLOAD,__Mine_init,public,False,0,0,0x3e50x3beB0x315
    0x3e10x3beS0x315: v3be3e1V315(0xff) = CONST ,0x3dd0x3beB0x315,v3be3e1V315,0,CONST,__Mine_init,public,False,0xff,0,0x3e50x3beB0x315
"    0x3e30x3beS0x315: v3be3e3V315 = AND v3be3e1V315(0xff), v3be3e0V315",0x3dd0x3beB0x315,v3be3e3V315,"0,v3be3e1V315,v3be3e0V315",AND,__Mine_init,public,False,0,0,0x3e50x3beB0x315
    0x3e40x3beS0x315: v3be3e4V315 = ISZERO v3be3e3V315,0x3dd0x3beB0x315,v3be3e4V315,"0,v3be3e3V315",ISZERO,__Mine_init,public,False,0,0,0x3e50x3beB0x315
    Begin block 0x2a7,0x2a7,0,0,0,__Mine_init,public,False,0,0,0x3e50x3beB0x315
"    prev=[0x2a1], succ=[0x2af]",0x2a7,0,0,0,__Mine_init,public,False,0,0,0x2af
    =================================,0x2a7,0,0,0,__Mine_init,public,False,0,0,0x2af
    0x2a8: v2a8(0x0) = CONST ,0x2a7,v2a8,0,CONST,__Mine_init,public,False,0x0,0,0x2af
    0x2aa: v2aa = SLOAD v2a8(0x0),0x2a7,v2aa,"0,v2a8",SLOAD,__Mine_init,public,False,0,0,0x2af
    0x2ab: v2ab(0xff) = CONST ,0x2a7,v2ab,0,CONST,__Mine_init,public,False,0xff,0,0x2af
"    0x2ad: v2ad = AND v2ab(0xff), v2aa",0x2a7,v2ad,"0,v2ab,v2aa",AND,__Mine_init,public,False,0,0,0x2af
    0x2ae: v2ae = ISZERO v2ad,0x2a7,v2ae,"0,v2ad",ISZERO,__Mine_init,public,False,0,0,0x2af
    Begin block 0x299,0x299,0,0,0,__Mine_init,public,False,0,0,0x2af
"    prev=[0x288], succ=[0x4afB0x299]",0x299,0,0,0,__Mine_init,public,False,0,0,0x4afB0x299
    =================================,0x299,0,0,0,__Mine_init,public,False,0,0,0x4afB0x299
    0x29a: v29a(0x2a1) = CONST ,0x299,v29a,0,CONST,__Mine_init,public,False,0x2a1,0,0x4afB0x299
    0x29d: v29d(0x4af) = CONST ,0x299,v29d,0,CONST,__Mine_init,public,False,0x4af,0,0x4afB0x299
    0x2a0: JUMP v29d(0x4af),0x299,0,"0,v29d",JUMP,__Mine_init,public,False,0,0,0x4afB0x299
    Begin block 0x4afB0x299,0x4afB0x299,0,0,0,__Mine_init,public,False,0,0,0x4afB0x299
"    prev=[0x299], succ=[0x2a1]",0x4afB0x299,0,0,0,__Mine_init,public,False,0,0,0x2a1
    =================================,0x4afB0x299,0,0,0,__Mine_init,public,False,0,0,0x2a1
    0x4b0S0x299: v4b0V299 = ADDRESS ,0x4afB0x299,v4b0V299,0,ADDRESS,__Mine_init,public,False,0,0,0x2a1
    0x4b1S0x299: v4b1V299 = EXTCODESIZE v4b0V299,0x4afB0x299,v4b1V299,"0,v4b0V299",EXTCODESIZE,__Mine_init,public,False,0,0,0x2a1
    0x4b2S0x299: v4b2V299 = ISZERO v4b1V299,0x4afB0x299,v4b2V299,"0,v4b1V299",ISZERO,__Mine_init,public,False,0,0,0x2a1
    0x4b4S0x299: JUMP v29a(0x2a1),0x4afB0x299,0,"0,v29a",JUMP,__Mine_init,public,False,0,0,0x2a1
},0x4afB0x299,0,0,0,__Mine_init,public,False,0,0,0x2a1
