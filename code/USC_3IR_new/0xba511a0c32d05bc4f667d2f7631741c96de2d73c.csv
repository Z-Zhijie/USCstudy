3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xf, 0xb]",0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xf, 0xb"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xf, 0xb"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xf, 0xb"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xf, 0xb"
    0x8: v8(0xf) = CONST ,0x0,v8,0,CONST,0,0,False,0xf,0,"0xf, 0xb"
"    0xa: JUMPI v8(0xf), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xf, 0xb"
    Begin block 0xf,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[0x18, 0x71]",0xf,0,0,0,0,0,False,0,0,"0x18, 0x71"
    =================================,0xf,0,0,0,0,0,False,0,0,"0x18, 0x71"
    0x11: v11(0x4) = CONST ,0xf,v11,0,CONST,0,0,False,0x4,0,"0x18, 0x71"
    0x13: v13 = CALLDATASIZE ,0xf,v13,0,CALLDATASIZE,0,0,False,0,0,"0x18, 0x71"
"    0x14: v14 = LT v13, v11(0x4)",0xf,v14,"0,v13,v11",LT,0,0,False,0,0,"0x18, 0x71"
    0x6d: v6d(0x71) = CONST ,0xf,v6d,0,CONST,0,0,False,0x71,0,"0x18, 0x71"
"    0x6e: JUMPI v6d(0x71), v14",0xf,0,"0,v6d,v14",JUMPI,0,0,False,0,0,"0x18, 0x71"
    Begin block 0x18,0x18,0,0,0,0,0,False,0,0,"0x18, 0x71"
"    prev=[0xf], succ=[0x71, 0x74]",0x18,0,0,0,0,0,False,0,0,"0x71, 0x74"
    =================================,0x18,0,0,0,0,0,False,0,0,"0x71, 0x74"
    0x18: v18(0x0) = CONST ,0x18,v18,0,CONST,0,0,False,0x0,0,"0x71, 0x74"
    0x1a: v1a = CALLDATALOAD v18(0x0),0x18,v1a,"0,v18",CALLDATALOAD,0,0,False,0,0,"0x71, 0x74"
    0x1b: v1b(0xe0) = CONST ,0x18,v1b,0,CONST,0,0,False,0xe0,0,"0x71, 0x74"
"    0x1d: v1d = SHR v1b(0xe0), v1a",0x18,v1d,"0,v1b,v1a",SHR,0,0,False,0,0,"0x71, 0x74"
    0x1f: v1f(0xe1c7392a) = CONST ,0x18,v1f,0,CONST,0,0,False,0xe1c7392a,0,"0x71, 0x74"
"    0x24: v24 = EQ v1f(0xe1c7392a), v1d",0x18,v24,"0,v1f,v1d",EQ,0,0,False,0,0,"0x71, 0x74"
    0x6f: v6f(0x74) = CONST ,0x18,v6f,0,CONST,0,0,False,0x74,0,"0x71, 0x74"
"    0x70: JUMPI v6f(0x74), v24",0x18,0,"0,v6f,v24",JUMPI,0,0,False,0,0,"0x71, 0x74"
    Begin block 0x71,0x71,0,0,0,0,0,False,0,0,"0x71, 0x74"
"    prev=[0xf, 0x18], succ=[]",0x71,0,0,0,0,0,False,0,0,"0x71, 0x74"
    =================================,0x71,0,0,0,0,0,False,0,0,"0x71, 0x74"
    0x72: v72(0x28) = CONST ,0x71,v72,0,CONST,0,0,False,0x28,0,"0x71, 0x74"
    0x73: CALLPRIVATE v72(0x28),0x71,0,"0,v72",CALLPRIVATE,0,0,False,0,0,"0x71, 0x74"
    Begin block 0x74,0x74,0,0,0,0,0,False,0,0,"0x71, 0x74"
"    prev=[0x18], succ=[]",0x74,0,0,0,0,0,False,0,0,"0x71, 0x74"
    =================================,0x74,0,0,0,0,0,False,0,0,"0x71, 0x74"
    0x75: v75(0x2d) = CONST ,0x74,v75,0,CONST,0,0,False,0x2d,0,"0x71, 0x74"
    0x76: CALLPRIVATE v75(0x2d),0x74,0,"0,v75",CALLPRIVATE,0,0,False,0,0,"0x71, 0x74"
    Begin block 0xb,0xb,0,0,0,0,0,False,0,0,"0x71, 0x74"
"    prev=[0x0], succ=[]",0xb,0,0,0,0,0,False,0,0,"0x71, 0x74"
    =================================,0xb,0,0,0,0,0,False,0,0,"0x71, 0x74"
    0xb: vb(0x0) = CONST ,0xb,vb,0,CONST,0,0,False,0x0,0,"0x71, 0x74"
"    0xe: REVERT vb(0x0), vb(0x0)",0xb,0,"0,vb,vb",REVERT,0,0,False,0,0,"0x71, 0x74"
},0xb,0,0,0,0,0,False,0,0,"0x71, 0x74"
function fallback()() public {,0x28,0,0,public,fallback,public,False,0,0,"0x71, 0x74"
    Begin block 0x28,0x28,0,0,0,fallback,public,False,0,0,"0x71, 0x74"
"    prev=[], succ=[]",0x28,0,0,0,fallback,public,False,0,0,"0x71, 0x74"
    =================================,0x28,0,0,0,fallback,public,False,0,0,"0x71, 0x74"
    0x29: v29(0x0) = CONST ,0x28,v29,0,CONST,fallback,public,False,0x0,0,"0x71, 0x74"
"    0x2c: REVERT v29(0x0), v29(0x0)",0x28,0,"0,v29,v29",REVERT,fallback,public,False,0,0,"0x71, 0x74"
},0x28,0,0,0,fallback,public,False,0,0,"0x71, 0x74"
function init()() public {,0x2d,0,0,public,init,public,False,0,0,"0x71, 0x74"
    Begin block 0x2d,0x2d,0,0,0,init,public,False,0,0,"0x71, 0x74"
"    prev=[], succ=[0x35B0x2d]",0x2d,0,0,0,init,public,False,0,0,0x35B0x2d
    =================================,0x2d,0,0,0,init,public,False,0,0,0x35B0x2d
    0x2e: v2e(0x33) = CONST ,0x2d,v2e,0,CONST,init,public,False,0x33,0,0x35B0x2d
    0x30: v30(0x35) = CONST ,0x2d,v30,0,CONST,init,public,False,0x35,0,0x35B0x2d
"    0x32: JUMP v30(0x35), v2e(0x33)",0x2d,0,"0,v30,v2e",JUMP,init,public,False,0,0,0x35B0x2d
    Begin block 0x35B0x2d,0x35B0x2d,0,0,0,init,public,False,0,0,0x35B0x2d
"    prev=[0x2d], succ=[0x33]",0x35B0x2d,0,0,0,init,public,False,0,0,0x33
    =================================,0x35B0x2d,0,0,0,init,public,False,0,0,0x33
    0x36S0x2d: JUMP v2e(0x33),0x35B0x2d,0,"0,v2e",JUMP,init,public,False,0,0,0x33
    Begin block 0x33,0x33,0,0,0,init,public,False,0,0,0x33
"    prev=[0x35B0x2d], succ=[]",0x33,0,0,0,init,public,False,0,0,0x33
    =================================,0x33,0,0,0,init,public,False,0,0,0x33
    0x34: STOP ,0x33,0,0,STOP,init,public,False,0,0,0x33
},0x33,0,0,0,init,public,False,0,0,0x33
