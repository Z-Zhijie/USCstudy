3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xa, 0x13]",0x0,0,0,0,0,0,False,0,0,"0xa, 0x13"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xa, 0x13"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xa, 0x13"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xa, 0x13"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xa, 0x13"
    0x5: v5 = CALLDATASIZE ,0x0,v5,0,CALLDATASIZE,0,0,False,0,0,"0xa, 0x13"
    0x6: v6(0x13) = CONST ,0x0,v6,0,CONST,0,0,False,0x13,0,"0xa, 0x13"
"    0x9: JUMPI v6(0x13), v5",0x0,0,"0,v6,v5",JUMPI,0,0,False,0,0,"0xa, 0x13"
    Begin block 0xa,0xa,0,0,0,0,0,False,0,0,"0xa, 0x13"
"    prev=[0x0], succ=[0x1d]",0xa,0,0,0,0,0,False,0,0,0x1d
    =================================,0xa,0,0,0,0,0,False,0,0,0x1d
    0xa: va(0x11) = CONST ,0xa,va,0,CONST,0,0,False,0x11,0,0x1d
    0xd: vd(0x1d) = CONST ,0xa,vd,0,CONST,0,0,False,0x1d,0,0x1d
    0x10: JUMP vd(0x1d),0xa,0,"0,vd",JUMP,0,0,False,0,0,0x1d
    Begin block 0x1d,0x1d,0,0,0,0,0,False,0,0,0x1d
"    prev=[0xa, 0x13], succ=[0x37B0x1d]",0x1d,0,0,0,0,0,False,0,0,0x37B0x1d
    =================================,0x1d,0,0,0,0,0,False,0,0,0x37B0x1d
    0x1e: v1e(0x25) = CONST ,0x1d,v1e,0,CONST,0,0,False,0x25,0,0x37B0x1d
    0x21: v21(0x37) = CONST ,0x1d,v21,0,CONST,0,0,False,0x37,0,0x37B0x1d
"    0x24: JUMP v21(0x37), v1e(0x25)",0x1d,0,"0,v21,v1e",JUMP,0,0,False,0,0,0x37B0x1d
    Begin block 0x37B0x1d,0x37B0x1d,0,0,0,0,0,False,0,0,0x37B0x1d
"    prev=[0x1d], succ=[0x25]",0x37B0x1d,0,0,0,0,0,False,0,0,0x25
    =================================,0x37B0x1d,0,0,0,0,0,False,0,0,0x25
    0x38S0x1d: JUMP v1e(0x25),0x37B0x1d,0,"0,v1e",JUMP,0,0,False,0,0,0x25
    Begin block 0x25,0x25,0,0,0,0,0,False,0,0,0x25
"    prev=[0x37B0x1d], succ=[0x39]",0x25,0,0,0,0,0,False,0,0,0x39
    =================================,0x25,0,0,0,0,0,False,0,0,0x39
    0x26: v26(0x35) = CONST ,0x25,v26,0,CONST,0,0,False,0x35,0,0x39
    0x29: v29(0x30) = CONST ,0x25,v29,0,CONST,0,0,False,0x30,0,0x39
    0x2c: v2c(0x39) = CONST ,0x25,v2c,0,CONST,0,0,False,0x39,0,0x39
    0x2f: JUMP v2c(0x39),0x25,0,"0,v2c",JUMP,0,0,False,0,0,0x39
    Begin block 0x39,0x39,0,0,0,0,0,False,0,0,0x39
"    prev=[0x25], succ=[0xee]",0x39,0,0,0,0,0,False,0,0,0xee
    =================================,0x39,0,0,0,0,0,False,0,0,0xee
    0x3a: v3a(0x0) = CONST ,0x39,v3a,0,CONST,0,0,False,0x0,0,0xee
    0x3c: v3c(0x43) = CONST ,0x39,v3c,0,CONST,0,0,False,0x43,0,0xee
    0x3f: v3f(0xee) = CONST ,0x39,v3f,0,CONST,0,0,False,0xee,0,0xee
    0x42: JUMP v3f(0xee),0x39,0,"0,v3f",JUMP,0,0,False,0,0,0xee
    Begin block 0xee,0xee,0,0,0,0,0,False,0,0,0xee
"    prev=[0x39], succ=[0x43]",0xee,0,0,0,0,0,False,0,0,0x43
    =================================,0xee,0,0,0,0,0,False,0,0,0x43
    0xef: vef(0x0) = CONST ,0xee,vef,0,CONST,0,0,False,0x0,0,0x43
    0xf2: vf2(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50) = CONST ,0xee,vf2,0,CONST,0,0,False,0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50,0,0x43
    0x113: v113(0x0) = CONST ,0xee,v113,0,CONST,0,0,False,0x0,0,0x43
"    0x115: v115(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50) = SHL v113(0x0), vf2(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50)",0xee,v115,"0,v113,vf2",SHL,0,0,False,0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50,0,0x43
    0x119: v119 = SLOAD v115(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50),0xee,v119,"0,v115",SLOAD,0,0,False,0,0,0x43
    0x11e: JUMP v3c(0x43),0xee,0,"0,v3c",JUMP,0,0,False,0,0,0x43
    Begin block 0x43,0x43,0,0,0,0,0,False,0,0,0x43
"    prev=[0xee], succ=[0x84, 0x88]",0x43,0,0,0,0,0,False,0,0,"0x84, 0x88"
    =================================,0x43,0,0,0,0,0,False,0,0,"0x84, 0x88"
    0x44: v44(0xffffffffffffffffffffffffffffffffffffffff) = CONST ,0x43,v44,0,CONST,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x84, 0x88"
"    0x59: v59 = AND v44(0xffffffffffffffffffffffffffffffffffffffff), v119",0x43,v59,"0,v44,v119",AND,0,0,False,0,0,"0x84, 0x88"
    0x5a: v5a(0x5c60da1b) = CONST ,0x43,v5a,0,CONST,0,0,False,0x5c60da1b,0,"0x84, 0x88"
    0x5f: v5f(0x40) = CONST ,0x43,v5f,0,CONST,0,0,False,0x40,0,"0x84, 0x88"
    0x61: v61 = MLOAD v5f(0x40),0x43,v61,"0,v5f",MLOAD,0,0,False,0,0&m0x40,"0x84, 0x88"
    0x63: v63(0xffffffff) = CONST ,0x43,v63,0,CONST,0,0,False,0xffffffff,0,"0x84, 0x88"
"    0x68: v68(0x5c60da1b) = AND v63(0xffffffff), v5a(0x5c60da1b)",0x43,v68,"0,v63,v5a",AND,0,0,False,0x5c60da1b,0,"0x84, 0x88"
    0x69: v69(0xe0) = CONST ,0x43,v69,0,CONST,0,0,False,0xe0,0,"0x84, 0x88"
"    0x6b: v6b(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = SHL v69(0xe0), v68(0x5c60da1b)",0x43,v6b,"0,v69,v68",SHL,0,0,False,0x5c60da1b00000000000000000000000000000000000000000000000000000000,0,"0x84, 0x88"
"    0x6d: MSTORE v61, v6b(0x5c60da1b00000000000000000000000000000000000000000000000000000000)",0x43,0&m0x40,"0,v61,v6b",MSTORE,0,0,False,0,0&m0x40,"0x84, 0x88"
    0x6e: v6e(0x4) = CONST ,0x43,v6e,0,CONST,0,0,False,0x4,0,"0x84, 0x88"
"    0x70: v70 = ADD v6e(0x4), v61",0x43,v70,"0,v6e,v61",ADD,0,0,False,0,0&m0x40+0x4,"0x84, 0x88"
    0x71: v71(0x20) = CONST ,0x43,v71,0,CONST,0,0,False,0x20,0,"0x84, 0x88"
    0x73: v73(0x40) = CONST ,0x43,v73,0,CONST,0,0,False,0x40,0,"0x84, 0x88"
    0x75: v75 = MLOAD v73(0x40),0x43,v75,"0,v73",MLOAD,0,0,False,0,0&m0x40,"0x84, 0x88"
"    0x78: v78(0x4) = SUB v70, v75",0x43,v78,"0,v70,v75",SUB,0,0,False,0x4,0&m0x40+0x4-0x4,"0x84, 0x88"
    0x7c: v7c = EXTCODESIZE v59,0x43,v7c,"0,v59",EXTCODESIZE,0,0,False,0,0,"0x84, 0x88"
    0x7d: v7d = ISZERO v7c,0x43,v7d,"0,v7c",ISZERO,0,0,False,0,0,"0x84, 0x88"
    0x7f: v7f = ISZERO v7d,0x43,v7f,"0,v7d",ISZERO,0,0,False,0,0,"0x84, 0x88"
    0x80: v80(0x88) = CONST ,0x43,v80,0,CONST,0,0,False,0x88,0,"0x84, 0x88"
"    0x83: JUMPI v80(0x88), v7f",0x43,0,"0,v80,v7f",JUMPI,0,0,False,0,0,"0x84, 0x88"
    Begin block 0x84,0x84,0,0,0,0,0,False,0,0,"0x84, 0x88"
"    prev=[0x43], succ=[]",0x84,0,0,0,0,0,False,0,0,"0x84, 0x88"
    =================================,0x84,0,0,0,0,0,False,0,0,"0x84, 0x88"
    0x84: v84(0x0) = CONST ,0x84,v84,0,CONST,0,0,False,0x0,0,"0x84, 0x88"
"    0x87: REVERT v84(0x0), v84(0x0)",0x84,0,"0,v84,v84",REVERT,0,0,False,0,0,"0x84, 0x88"
    Begin block 0x88,0x88,0,0,0,0,0,False,0,0,"0x84, 0x88"
"    prev=[0x43], succ=[0x93, 0x9c]",0x88,0,0,0,0,0,False,0,0,"0x93, 0x9c"
    =================================,0x88,0,0,0,0,0,False,0,0,"0x93, 0x9c"
    0x8a: v8a = GAS ,0x88,v8a,0,GAS,0,0,False,0,0,"0x93, 0x9c"
"    0x8b: v8b = STATICCALL v8a, v59, v75, v78(0x4), v75, v71(0x20)",0x88,v8b,"0,v8a,v59,v75,v78,v75,v71",STATICCALL,0,0,False,0,0,"0x93, 0x9c"
    0x8c: v8c = ISZERO v8b,0x88,v8c,"0,v8b",ISZERO,0,0,False,0,0,"0x93, 0x9c"
    0x8e: v8e = ISZERO v8c,0x88,v8e,"0,v8c",ISZERO,0,0,False,0,0,"0x93, 0x9c"
    0x8f: v8f(0x9c) = CONST ,0x88,v8f,0,CONST,0,0,False,0x9c,0,"0x93, 0x9c"
"    0x92: JUMPI v8f(0x9c), v8e",0x88,0,"0,v8f,v8e",JUMPI,0,0,False,0,0,"0x93, 0x9c"
    Begin block 0x93,0x93,0,0,0,0,0,False,0,0,"0x93, 0x9c"
"    prev=[0x88], succ=[]",0x93,0,0,0,0,0,False,0,0,"0x93, 0x9c"
    =================================,0x93,0,0,0,0,0,False,0,0,"0x93, 0x9c"
    0x93: v93 = RETURNDATASIZE ,0x93,v93,0,RETURNDATASIZE,0,0,False,0,0,"0x93, 0x9c"
    0x94: v94(0x0) = CONST ,0x93,v94,0,CONST,0,0,False,0x0,0,"0x93, 0x9c"
"    0x97: RETURNDATACOPY v94(0x0), v94(0x0), v93",0x93,0,"0,v94,v94,v93",RETURNDATACOPY,0,0,False,0,0,"0x93, 0x9c"
    0x98: v98 = RETURNDATASIZE ,0x93,v98,0,RETURNDATASIZE,0,0,False,0,0,"0x93, 0x9c"
    0x99: v99(0x0) = CONST ,0x93,v99,0,CONST,0,0,False,0x0,0,"0x93, 0x9c"
"    0x9b: REVERT v99(0x0), v98",0x93,0,"0,v99,v98",REVERT,0,0,False,0,0,"0x93, 0x9c"
    Begin block 0x9c,0x9c,0,0,0,0,0,False,0,0,"0x93, 0x9c"
"    prev=[0x88], succ=[0xae, 0xb2]",0x9c,0,0,0,0,0,False,0,0,"0xae, 0xb2"
    =================================,0x9c,0,0,0,0,0,False,0,0,"0xae, 0xb2"
    0xa1: va1(0x40) = CONST ,0x9c,va1,0,CONST,0,0,False,0x40,0,"0xae, 0xb2"
    0xa3: va3 = MLOAD va1(0x40),0x9c,va3,"0,va1",MLOAD,0,0,False,0,0&m0x40,"0xae, 0xb2"
    0xa4: va4 = RETURNDATASIZE ,0x9c,va4,0,RETURNDATASIZE,0,0,False,0,0,"0xae, 0xb2"
    0xa5: va5(0x20) = CONST ,0x9c,va5,0,CONST,0,0,False,0x20,0,"0xae, 0xb2"
"    0xa8: va8 = LT va4, va5(0x20)",0x9c,va8,"0,va4,va5",LT,0,0,False,0,0,"0xae, 0xb2"
    0xa9: va9 = ISZERO va8,0x9c,va9,"0,va8",ISZERO,0,0,False,0,0,"0xae, 0xb2"
    0xaa: vaa(0xb2) = CONST ,0x9c,vaa,0,CONST,0,0,False,0xb2,0,"0xae, 0xb2"
"    0xad: JUMPI vaa(0xb2), va9",0x9c,0,"0,vaa,va9",JUMPI,0,0,False,0,0,"0xae, 0xb2"
    Begin block 0xae,0xae,0,0,0,0,0,False,0,0,"0xae, 0xb2"
"    prev=[0x9c], succ=[]",0xae,0,0,0,0,0,False,0,0,"0xae, 0xb2"
    =================================,0xae,0,0,0,0,0,False,0,0,"0xae, 0xb2"
    0xae: vae(0x0) = CONST ,0xae,vae,0,CONST,0,0,False,0x0,0,"0xae, 0xb2"
"    0xb1: REVERT vae(0x0), vae(0x0)",0xae,0,"0,vae,vae",REVERT,0,0,False,0,0,"0xae, 0xb2"
    Begin block 0xb2,0xb2,0,0,0,0,0,False,0,0,"0xae, 0xb2"
"    prev=[0x9c], succ=[0x30]",0xb2,0,0,0,0,0,False,0,0,0x30
    =================================,0xb2,0,0,0,0,0,False,0,0,0x30
"    0xb4: vb4 = ADD va3, va4",0xb2,vb4,"0,va3,va4",ADD,0,0,False,0,0,0x30
    0xb8: vb8 = MLOAD va3,0xb2,vb8,"0,va3",MLOAD,0,0,False,0,0,0x30
    0xba: vba(0x20) = CONST ,0xb2,vba,0,CONST,0,0,False,0x20,0,0x30
"    0xbc: vbc = ADD vba(0x20), va3",0xb2,vbc,"0,vba,va3",ADD,0,0,False,0,0&m0x40+0x20,0x30
    0xc7: JUMP v29(0x30),0xb2,0,"0,v29",JUMP,0,0,False,0,0,0x30
    Begin block 0x30,0x30,0,0,0,0,0,False,0,0,0x30
"    prev=[0xb2], succ=[0xc8]",0x30,0,0,0,0,0,False,0,0,0xc8
    =================================,0x30,0,0,0,0,0,False,0,0,0xc8
    0x31: v31(0xc8) = CONST ,0x30,v31,0,CONST,0,0,False,0xc8,0,0xc8
    0x34: JUMP v31(0xc8),0x30,0,"0,v31",JUMP,0,0,False,0,0,0xc8
    Begin block 0xc8,0xc8,0,0,0,0,0,False,0,0,0xc8
"    prev=[0x30], succ=[0xe5, 0xe9]",0xc8,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    =================================,0xc8,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    0xc9: vc9 = CALLDATASIZE ,0xc8,vc9,0,CALLDATASIZE,0,0,False,0,0,"0xe5, 0xe9"
    0xca: vca(0x0) = CONST ,0xc8,vca,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
"    0xcd: CALLDATACOPY vca(0x0), vca(0x0), vc9",0xc8,0,"0,vca,vca,vc9",CALLDATACOPY,0,0,False,0,0,"0xe5, 0xe9"
    0xce: vce(0x0) = CONST ,0xc8,vce,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
    0xd1: vd1 = CALLDATASIZE ,0xc8,vd1,0,CALLDATASIZE,0,0,False,0,0,"0xe5, 0xe9"
    0xd2: vd2(0x0) = CONST ,0xc8,vd2,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
    0xd5: vd5 = GAS ,0xc8,vd5,0,GAS,0,0,False,0,0,"0xe5, 0xe9"
"    0xd6: vd6 = DELEGATECALL vd5, vb8, vd2(0x0), vd1, vce(0x0), vce(0x0)",0xc8,vd6,"0,vd5,vb8,vd2,vd1,vce,vce",DELEGATECALL,0,0,False,0,0,"0xe5, 0xe9"
    0xd7: vd7 = RETURNDATASIZE ,0xc8,vd7,0,RETURNDATASIZE,0,0,False,0,0,"0xe5, 0xe9"
    0xd8: vd8(0x0) = CONST ,0xc8,vd8,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
"    0xdb: RETURNDATACOPY vd8(0x0), vd8(0x0), vd7",0xc8,0,"0,vd8,vd8,vd7",RETURNDATACOPY,0,0,False,0,0,"0xe5, 0xe9"
    0xdd: vdd(0x0) = CONST ,0xc8,vdd,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
"    0xe0: ve0 = EQ vd6, vdd(0x0)",0xc8,ve0,"0,vd6,vdd",EQ,0,0,False,0,0,"0xe5, 0xe9"
    0xe1: ve1(0xe9) = CONST ,0xc8,ve1,0,CONST,0,0,False,0xe9,0,"0xe5, 0xe9"
"    0xe4: JUMPI ve1(0xe9), ve0",0xc8,0,"0,ve1,ve0",JUMPI,0,0,False,0,0,"0xe5, 0xe9"
    Begin block 0xe5,0xe5,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
"    prev=[0xc8], succ=[]",0xe5,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    =================================,0xe5,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    0xe5: ve5 = RETURNDATASIZE ,0xe5,ve5,0,RETURNDATASIZE,0,0,False,0,0,"0xe5, 0xe9"
    0xe6: ve6(0x0) = CONST ,0xe5,ve6,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
"    0xe8: RETURN ve6(0x0), ve5",0xe5,0,"0,ve6,ve5",RETURN,0,0,False,0,0,"0xe5, 0xe9"
    Begin block 0xe9,0xe9,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
"    prev=[0xc8], succ=[]",0xe9,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    =================================,0xe9,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
    0xea: vea = RETURNDATASIZE ,0xe9,vea,0,RETURNDATASIZE,0,0,False,0,0,"0xe5, 0xe9"
    0xeb: veb(0x0) = CONST ,0xe9,veb,0,CONST,0,0,False,0x0,0,"0xe5, 0xe9"
"    0xed: REVERT veb(0x0), vea",0xe9,0,"0,veb,vea",REVERT,0,0,False,0,0,"0xe5, 0xe9"
    Begin block 0x13,0x13,0,0,0,0,0,False,0,0,"0xe5, 0xe9"
"    prev=[0x0], succ=[0x1d]",0x13,0,0,0,0,0,False,0,0,0x1d
    =================================,0x13,0,0,0,0,0,False,0,0,0x1d
    0x14: v14(0x1b) = CONST ,0x13,v14,0,CONST,0,0,False,0x1b,0,0x1d
    0x17: v17(0x1d) = CONST ,0x13,v17,0,CONST,0,0,False,0x1d,0,0x1d
    0x1a: JUMP v17(0x1d),0x13,0,"0,v17",JUMP,0,0,False,0,0,0x1d
},0x13,0,0,0,0,0,False,0,0,0x1d
