3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xa, 0x13]",0x0,0,0,0,0,0,False,0,0,"0xa, 0x13"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xa, 0x13"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xa, 0x13"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xa, 0x13"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xa, 0x13"
    0x5: v5 = CALLDATASIZE ,0x0,v5,0,CALLDATASIZE,0,0,False,0,0,"0xa, 0x13"
    0x6: v6(0x13) = CONST ,0x0,v6,0,CONST,0,0,False,0x13,0,"0xa, 0x13"
"    0x9: JUMPI v6(0x13), v5",0x0,0,"0,v6,v5",JUMPI,0,0,False,0,0,"0xa, 0x13"
    Begin block 0xa,0xa,0,0,0,0,0,False,0,0,"0xa, 0x13"
"    prev=[0x0], succ=[0x17]",0xa,0,0,0,0,0,False,0,0,0x17
    =================================,0xa,0,0,0,0,0,False,0,0,0x17
    0xa: va(0x11) = CONST ,0xa,va,0,CONST,0,0,False,0x11,0,0x17
    0xd: vd(0x17) = CONST ,0xa,vd,0,CONST,0,0,False,0x17,0,0x17
    0x10: JUMP vd(0x17),0xa,0,"0,vd",JUMP,0,0,False,0,0,0x17
    Begin block 0x17,0x17,0,0,0,0,0,False,0,0,0x17
"    prev=[0xa, 0x13], succ=[0x31dB0x17]",0x17,0,0,0,0,0,False,0,0,0x31dB0x17
    =================================,0x17,0,0,0,0,0,False,0,0,0x31dB0x17
    0x18: v18(0x1f) = CONST ,0x17,v18,0,CONST,0,0,False,0x1f,0,0x31dB0x17
    0x1b: v1b(0x31d) = CONST ,0x17,v1b,0,CONST,0,0,False,0x31d,0,0x31dB0x17
"    0x1e: JUMP v1b(0x31d), v18(0x1f)",0x17,0,"0,v1b,v18",JUMP,0,0,False,0,0,0x31dB0x17
    Begin block 0x31dB0x17,0x31dB0x17,0,0,0,0,0,False,0,0,0x31dB0x17
"    prev=[0x17], succ=[0x1f]",0x31dB0x17,0,0,0,0,0,False,0,0,0x1f
    =================================,0x31dB0x17,0,0,0,0,0,False,0,0,0x1f
    0x31eS0x17: JUMP v18(0x1f),0x31dB0x17,0,"0,v18",JUMP,0,0,False,0,0,0x1f
    Begin block 0x1f,0x1f,0,0,0,0,0,False,0,0,0x1f
"    prev=[0x31dB0x17], succ=[0x13c]",0x1f,0,0,0,0,0,False,0,0,0x13c
    =================================,0x1f,0,0,0,0,0,False,0,0,0x13c
    0x20: v20(0x2fc) = CONST ,0x1f,v20,0,CONST,0,0,False,0x2fc,0,0x13c
    0x23: v23(0x2a) = CONST ,0x1f,v23,0,CONST,0,0,False,0x2a,0,0x13c
    0x26: v26(0x13c) = CONST ,0x1f,v26,0,CONST,0,0,False,0x13c,0,0x13c
    0x29: JUMP v26(0x13c),0x1f,0,"0,v26",JUMP,0,0,False,0,0,0x13c
    Begin block 0x13c,0x13c,0,0,0,0,0,False,0,0,0x13c
"    prev=[0x1f], succ=[0x277]",0x13c,0,0,0,0,0,False,0,0,0x277
    =================================,0x13c,0,0,0,0,0,False,0,0,0x277
    0x13d: v13d(0x0) = CONST ,0x13c,v13d,0,CONST,0,0,False,0x0,0,0x277
    0x13f: v13f(0x146) = CONST ,0x13c,v13f,0,CONST,0,0,False,0x146,0,0x277
    0x142: v142(0x277) = CONST ,0x13c,v142,0,CONST,0,0,False,0x277,0,0x277
    0x145: JUMP v142(0x277),0x13c,0,"0,v142",JUMP,0,0,False,0,0,0x277
    Begin block 0x277,0x277,0,0,0,0,0,False,0,0,0x277
"    prev=[0x13c], succ=[0x146]",0x277,0,0,0,0,0,False,0,0,0x146
    =================================,0x277,0,0,0,0,0,False,0,0,0x146
    0x278: v278(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50) = CONST ,0x277,v278,0,CONST,0,0,False,0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50,0,0x146
    0x299: v299 = SLOAD v278(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50),0x277,v299,"0,v278",SLOAD,0,0,False,0,0,0x146
    0x29b: JUMP v13f(0x146),0x277,0,"0,v13f",JUMP,0,0,False,0,0,0x146
    Begin block 0x146,0x146,0,0,0,0,0,False,0,0,0x146
"    prev=[0x277], succ=[0x17a, 0x17e]",0x146,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
    =================================,0x146,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
    0x147: v147(0x1) = CONST ,0x146,v147,0,CONST,0,0,False,0x1,0,"0x17a, 0x17e"
    0x149: v149(0x1) = CONST ,0x146,v149,0,CONST,0,0,False,0x1,0,"0x17a, 0x17e"
    0x14b: v14b(0xa0) = CONST ,0x146,v14b,0,CONST,0,0,False,0xa0,0,"0x17a, 0x17e"
"    0x14d: v14d(0x10000000000000000000000000000000000000000) = SHL v14b(0xa0), v149(0x1)",0x146,v14d,"0,v14b,v149",SHL,0,0,False,0x10000000000000000000000000000000000000000,0,"0x17a, 0x17e"
"    0x14e: v14e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v14d(0x10000000000000000000000000000000000000000), v147(0x1)",0x146,v14e,"0,v14d,v147",SUB,0,0,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x17a, 0x17e"
"    0x14f: v14f = AND v14e(0xffffffffffffffffffffffffffffffffffffffff), v299",0x146,v14f,"0,v14e,v299",AND,0,0,False,0,0,"0x17a, 0x17e"
    0x150: v150(0x5c60da1b) = CONST ,0x146,v150,0,CONST,0,0,False,0x5c60da1b,0,"0x17a, 0x17e"
    0x155: v155(0x40) = CONST ,0x146,v155,0,CONST,0,0,False,0x40,0,"0x17a, 0x17e"
    0x157: v157 = MLOAD v155(0x40),0x146,v157,"0,v155",MLOAD,0,0,False,0,0&m0x40,"0x17a, 0x17e"
    0x159: v159(0xffffffff) = CONST ,0x146,v159,0,CONST,0,0,False,0xffffffff,0,"0x17a, 0x17e"
"    0x15e: v15e(0x5c60da1b) = AND v159(0xffffffff), v150(0x5c60da1b)",0x146,v15e,"0,v159,v150",AND,0,0,False,0x5c60da1b,0,"0x17a, 0x17e"
    0x15f: v15f(0xe0) = CONST ,0x146,v15f,0,CONST,0,0,False,0xe0,0,"0x17a, 0x17e"
"    0x161: v161(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = SHL v15f(0xe0), v15e(0x5c60da1b)",0x146,v161,"0,v15f,v15e",SHL,0,0,False,0x5c60da1b00000000000000000000000000000000000000000000000000000000,0,"0x17a, 0x17e"
"    0x163: MSTORE v157, v161(0x5c60da1b00000000000000000000000000000000000000000000000000000000)",0x146,0&m0x40,"0,v157,v161",MSTORE,0,0,False,0,0&m0x40,"0x17a, 0x17e"
    0x164: v164(0x4) = CONST ,0x146,v164,0,CONST,0,0,False,0x4,0,"0x17a, 0x17e"
"    0x166: v166 = ADD v164(0x4), v157",0x146,v166,"0,v164,v157",ADD,0,0,False,0,0&m0x40+0x4,"0x17a, 0x17e"
    0x167: v167(0x20) = CONST ,0x146,v167,0,CONST,0,0,False,0x20,0,"0x17a, 0x17e"
    0x169: v169(0x40) = CONST ,0x146,v169,0,CONST,0,0,False,0x40,0,"0x17a, 0x17e"
    0x16b: v16b = MLOAD v169(0x40),0x146,v16b,"0,v169",MLOAD,0,0,False,0,0&m0x40,"0x17a, 0x17e"
"    0x16e: v16e(0x4) = SUB v166, v16b",0x146,v16e,"0,v166,v16b",SUB,0,0,False,0x4,0&m0x40+0x4-0x4,"0x17a, 0x17e"
    0x172: v172 = EXTCODESIZE v14f,0x146,v172,"0,v14f",EXTCODESIZE,0,0,False,0,0,"0x17a, 0x17e"
    0x173: v173 = ISZERO v172,0x146,v173,"0,v172",ISZERO,0,0,False,0,0,"0x17a, 0x17e"
    0x175: v175 = ISZERO v173,0x146,v175,"0,v173",ISZERO,0,0,False,0,0,"0x17a, 0x17e"
    0x176: v176(0x17e) = CONST ,0x146,v176,0,CONST,0,0,False,0x17e,0,"0x17a, 0x17e"
"    0x179: JUMPI v176(0x17e), v175",0x146,0,"0,v176,v175",JUMPI,0,0,False,0,0,"0x17a, 0x17e"
    Begin block 0x17a,0x17a,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
"    prev=[0x146], succ=[]",0x17a,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
    =================================,0x17a,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
    0x17a: v17a(0x0) = CONST ,0x17a,v17a,0,CONST,0,0,False,0x0,0,"0x17a, 0x17e"
"    0x17d: REVERT v17a(0x0), v17a(0x0)",0x17a,0,"0,v17a,v17a",REVERT,0,0,False,0,0,"0x17a, 0x17e"
    Begin block 0x17e,0x17e,0,0,0,0,0,False,0,0,"0x17a, 0x17e"
"    prev=[0x146], succ=[0x189, 0x192]",0x17e,0,0,0,0,0,False,0,0,"0x189, 0x192"
    =================================,0x17e,0,0,0,0,0,False,0,0,"0x189, 0x192"
    0x180: v180 = GAS ,0x17e,v180,0,GAS,0,0,False,0,0,"0x189, 0x192"
"    0x181: v181 = STATICCALL v180, v14f, v16b, v16e(0x4), v16b, v167(0x20)",0x17e,v181,"0,v180,v14f,v16b,v16e,v16b,v167",STATICCALL,0,0,False,0,0,"0x189, 0x192"
    0x182: v182 = ISZERO v181,0x17e,v182,"0,v181",ISZERO,0,0,False,0,0,"0x189, 0x192"
    0x184: v184 = ISZERO v182,0x17e,v184,"0,v182",ISZERO,0,0,False,0,0,"0x189, 0x192"
    0x185: v185(0x192) = CONST ,0x17e,v185,0,CONST,0,0,False,0x192,0,"0x189, 0x192"
"    0x188: JUMPI v185(0x192), v184",0x17e,0,"0,v185,v184",JUMPI,0,0,False,0,0,"0x189, 0x192"
    Begin block 0x189,0x189,0,0,0,0,0,False,0,0,"0x189, 0x192"
"    prev=[0x17e], succ=[]",0x189,0,0,0,0,0,False,0,0,"0x189, 0x192"
    =================================,0x189,0,0,0,0,0,False,0,0,"0x189, 0x192"
    0x189: v189 = RETURNDATASIZE ,0x189,v189,0,RETURNDATASIZE,0,0,False,0,0,"0x189, 0x192"
    0x18a: v18a(0x0) = CONST ,0x189,v18a,0,CONST,0,0,False,0x0,0,"0x189, 0x192"
"    0x18d: RETURNDATACOPY v18a(0x0), v18a(0x0), v189",0x189,0,"0,v18a,v18a,v189",RETURNDATACOPY,0,0,False,0,0,"0x189, 0x192"
    0x18e: v18e = RETURNDATASIZE ,0x189,v18e,0,RETURNDATASIZE,0,0,False,0,0,"0x189, 0x192"
    0x18f: v18f(0x0) = CONST ,0x189,v18f,0,CONST,0,0,False,0x0,0,"0x189, 0x192"
"    0x191: REVERT v18f(0x0), v18e",0x189,0,"0,v18f,v18e",REVERT,0,0,False,0,0,"0x189, 0x192"
    Begin block 0x192,0x192,0,0,0,0,0,False,0,0,"0x189, 0x192"
"    prev=[0x17e], succ=[0x1a4, 0x1a8]",0x192,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
    =================================,0x192,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
    0x197: v197(0x40) = CONST ,0x192,v197,0,CONST,0,0,False,0x40,0,"0x1a4, 0x1a8"
    0x199: v199 = MLOAD v197(0x40),0x192,v199,"0,v197",MLOAD,0,0,False,0,0&m0x40,"0x1a4, 0x1a8"
    0x19a: v19a = RETURNDATASIZE ,0x192,v19a,0,RETURNDATASIZE,0,0,False,0,0,"0x1a4, 0x1a8"
    0x19b: v19b(0x20) = CONST ,0x192,v19b,0,CONST,0,0,False,0x20,0,"0x1a4, 0x1a8"
"    0x19e: v19e = LT v19a, v19b(0x20)",0x192,v19e,"0,v19a,v19b",LT,0,0,False,0,0,"0x1a4, 0x1a8"
    0x19f: v19f = ISZERO v19e,0x192,v19f,"0,v19e",ISZERO,0,0,False,0,0,"0x1a4, 0x1a8"
    0x1a0: v1a0(0x1a8) = CONST ,0x192,v1a0,0,CONST,0,0,False,0x1a8,0,"0x1a4, 0x1a8"
"    0x1a3: JUMPI v1a0(0x1a8), v19f",0x192,0,"0,v1a0,v19f",JUMPI,0,0,False,0,0,"0x1a4, 0x1a8"
    Begin block 0x1a4,0x1a4,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
"    prev=[0x192], succ=[]",0x1a4,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
    =================================,0x1a4,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
    0x1a4: v1a4(0x0) = CONST ,0x1a4,v1a4,0,CONST,0,0,False,0x0,0,"0x1a4, 0x1a8"
"    0x1a7: REVERT v1a4(0x0), v1a4(0x0)",0x1a4,0,"0,v1a4,v1a4",REVERT,0,0,False,0,0,"0x1a4, 0x1a8"
    Begin block 0x1a8,0x1a8,0,0,0,0,0,False,0,0,"0x1a4, 0x1a8"
"    prev=[0x192], succ=[0x2a]",0x1a8,0,0,0,0,0,False,0,0,0x2a
    =================================,0x1a8,0,0,0,0,0,False,0,0,0x2a
    0x1aa: v1aa = MLOAD v199,0x1a8,v1aa,"0,v199",MLOAD,0,0,False,0,0,0x2a
    0x1ae: JUMP v23(0x2a),0x1a8,0,"0,v23",JUMP,0,0,False,0,0,0x2a
    Begin block 0x2a,0x2a,0,0,0,0,0,False,0,0,0x2a
"    prev=[0x1a8], succ=[0x1af]",0x2a,0,0,0,0,0,False,0,0,0x1af
    =================================,0x2a,0,0,0,0,0,False,0,0,0x1af
    0x2b: v2b(0x1af) = CONST ,0x2a,v2b,0,CONST,0,0,False,0x1af,0,0x1af
    0x2e: JUMP v2b(0x1af),0x2a,0,"0,v2b",JUMP,0,0,False,0,0,0x1af
    Begin block 0x1af,0x1af,0,0,0,0,0,False,0,0,0x1af
"    prev=[0x2a], succ=[0x1ca, 0x1ce]",0x1af,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    =================================,0x1af,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1b0: v1b0 = CALLDATASIZE ,0x1af,v1b0,0,CALLDATASIZE,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1b1: v1b1(0x0) = CONST ,0x1af,v1b1,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
"    0x1b4: CALLDATACOPY v1b1(0x0), v1b1(0x0), v1b0",0x1af,0,"0,v1b1,v1b1,v1b0",CALLDATACOPY,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1b5: v1b5(0x0) = CONST ,0x1af,v1b5,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
    0x1b8: v1b8 = CALLDATASIZE ,0x1af,v1b8,0,CALLDATASIZE,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1b9: v1b9(0x0) = CONST ,0x1af,v1b9,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
    0x1bc: v1bc = GAS ,0x1af,v1bc,0,GAS,0,0,False,0,0,"0x1ca, 0x1ce"
"    0x1bd: v1bd = DELEGATECALL v1bc, v1aa, v1b9(0x0), v1b8, v1b5(0x0), v1b5(0x0)",0x1af,v1bd,"0,v1bc,v1aa,v1b9,v1b8,v1b5,v1b5",DELEGATECALL,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1be: v1be = RETURNDATASIZE ,0x1af,v1be,0,RETURNDATASIZE,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1bf: v1bf(0x0) = CONST ,0x1af,v1bf,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
"    0x1c2: RETURNDATACOPY v1bf(0x0), v1bf(0x0), v1be",0x1af,0,"0,v1bf,v1bf,v1be",RETURNDATACOPY,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1c5: v1c5 = ISZERO v1bd,0x1af,v1c5,"0,v1bd",ISZERO,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1c6: v1c6(0x1ce) = CONST ,0x1af,v1c6,0,CONST,0,0,False,0x1ce,0,"0x1ca, 0x1ce"
"    0x1c9: JUMPI v1c6(0x1ce), v1c5",0x1af,0,"0,v1c6,v1c5",JUMPI,0,0,False,0,0,"0x1ca, 0x1ce"
    Begin block 0x1ca,0x1ca,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
"    prev=[0x1af], succ=[]",0x1ca,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    =================================,0x1ca,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1ca: v1ca = RETURNDATASIZE ,0x1ca,v1ca,0,RETURNDATASIZE,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1cb: v1cb(0x0) = CONST ,0x1ca,v1cb,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
"    0x1cd: RETURN v1cb(0x0), v1ca",0x1ca,0,"0,v1cb,v1ca",RETURN,0,0,False,0,0,"0x1ca, 0x1ce"
    Begin block 0x1ce,0x1ce,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
"    prev=[0x1af], succ=[]",0x1ce,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    =================================,0x1ce,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1cf: v1cf = RETURNDATASIZE ,0x1ce,v1cf,0,RETURNDATASIZE,0,0,False,0,0,"0x1ca, 0x1ce"
    0x1d0: v1d0(0x0) = CONST ,0x1ce,v1d0,0,CONST,0,0,False,0x0,0,"0x1ca, 0x1ce"
"    0x1d2: REVERT v1d0(0x0), v1cf",0x1ce,0,"0,v1d0,v1cf",REVERT,0,0,False,0,0,"0x1ca, 0x1ce"
    Begin block 0x13,0x13,0,0,0,0,0,False,0,0,"0x1ca, 0x1ce"
"    prev=[0x0], succ=[0x17]",0x13,0,0,0,0,0,False,0,0,0x17
    =================================,0x13,0,0,0,0,0,False,0,0,0x17
    0x14: v14(0x11) = CONST ,0x13,v14,0,CONST,0,0,False,0x11,0,0x17
},0x13,0,0,0,0,0,False,0,0,0x17
