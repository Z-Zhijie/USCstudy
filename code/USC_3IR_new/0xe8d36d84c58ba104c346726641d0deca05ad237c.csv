3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xc, 0x10]",0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xc, 0x10"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xc, 0x10"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xc, 0x10"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xc, 0x10"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xc, 0x10"
    0x8: v8(0x10) = CONST ,0x0,v8,0,CONST,0,0,False,0x10,0,"0xc, 0x10"
"    0xb: JUMPI v8(0x10), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xc, 0x10"
    Begin block 0xc,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[]",0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    =================================,0xc,0,0,0,0,0,False,0,0,"0xc, 0x10"
    0xc: vc(0x0) = CONST ,0xc,vc,0,CONST,0,0,False,0x0,0,"0xc, 0x10"
"    0xf: REVERT vc(0x0), vc(0x0)",0xc,0,"0,vc,vc",REVERT,0,0,False,0,0,"0xc, 0x10"
    Begin block 0x10,0x10,0,0,0,0,0,False,0,0,"0xc, 0x10"
"    prev=[0x0], succ=[0x1a, 0xee4]",0x10,0,0,0,0,0,False,0,0,"0x1a, 0xee4"
    =================================,0x10,0,0,0,0,0,False,0,0,"0x1a, 0xee4"
    0x12: v12(0x4) = CONST ,0x10,v12,0,CONST,0,0,False,0x4,0,"0x1a, 0xee4"
    0x14: v14 = CALLDATASIZE ,0x10,v14,0,CALLDATASIZE,0,0,False,0,0,"0x1a, 0xee4"
"    0x15: v15 = LT v14, v12(0x4)",0x10,v15,"0,v14,v12",LT,0,0,False,0,0,"0x1a, 0xee4"
    0xebf: vebf(0xee4) = CONST ,0x10,vebf,0,CONST,0,0,False,0xee4,0,"0x1a, 0xee4"
"    0xec0: JUMPI vebf(0xee4), v15",0x10,0,"0,vebf,v15",JUMPI,0,0,False,0,0,"0x1a, 0xee4"
    Begin block 0x1a,0x1a,0,0,0,0,0,False,0,0,"0x1a, 0xee4"
"    prev=[0x10], succ=[0x5b, 0x2b]",0x1a,0,0,0,0,0,False,0,0,"0x5b, 0x2b"
    =================================,0x1a,0,0,0,0,0,False,0,0,"0x5b, 0x2b"
    0x1a: v1a(0x0) = CONST ,0x1a,v1a,0,CONST,0,0,False,0x0,0,"0x5b, 0x2b"
    0x1c: v1c = CALLDATALOAD v1a(0x0),0x1a,v1c,"0,v1a",CALLDATALOAD,0,0,False,0,0,"0x5b, 0x2b"
    0x1d: v1d(0xe0) = CONST ,0x1a,v1d,0,CONST,0,0,False,0xe0,0,"0x5b, 0x2b"
"    0x1f: v1f = SHR v1d(0xe0), v1c",0x1a,v1f,"0,v1d,v1c",SHR,0,0,False,0,0,"0x5b, 0x2b"
    0x21: v21(0x748538d9) = CONST ,0x1a,v21,0,CONST,0,0,False,0x748538d9,0,"0x5b, 0x2b"
"    0x26: v26 = GT v21(0x748538d9), v1f",0x1a,v26,"0,v21,v1f",GT,0,0,False,0,0,"0x5b, 0x2b"
    0x27: v27(0x5b) = CONST ,0x1a,v27,0,CONST,0,0,False,0x5b,0,"0x5b, 0x2b"
"    0x2a: JUMPI v27(0x5b), v26",0x1a,0,"0,v27,v26",JUMPI,0,0,False,0,0,"0x5b, 0x2b"
    Begin block 0x5b,0x5b,0,0,0,0,0,False,0,0,"0x5b, 0x2b"
"    prev=[0x1a], succ=[0xecf, 0x67]",0x5b,0,0,0,0,0,False,0,0,"0xecf, 0x67"
    =================================,0x5b,0,0,0,0,0,False,0,0,"0xecf, 0x67"
    0x5d: v5d(0x1694505e) = CONST ,0x5b,v5d,0,CONST,0,0,False,0x1694505e,0,"0xecf, 0x67"
"    0x62: v62 = EQ v5d(0x1694505e), v1f",0x5b,v62,"0,v5d,v1f",EQ,0,0,False,0,0,"0xecf, 0x67"
    0xec9: vec9(0xecf) = CONST ,0x5b,vec9,0,CONST,0,0,False,0xecf,0,"0xecf, 0x67"
"    0xeca: JUMPI vec9(0xecf), v62",0x5b,0,"0,vec9,v62",JUMPI,0,0,False,0,0,"0xecf, 0x67"
    Begin block 0xecf,0xecf,0,0,0,0,0,False,0,0,"0xecf, 0x67"
"    prev=[0x5b], succ=[]",0xecf,0,0,0,0,0,False,0,0,"0xecf, 0x67"
    =================================,0xecf,0,0,0,0,0,False,0,0,"0xecf, 0x67"
    0xed0: ved0(0x82) = CONST ,0xecf,ved0,0,CONST,0,0,False,0x82,0,"0xecf, 0x67"
    0xed1: CALLPRIVATE ved0(0x82),0xecf,0,"0,ved0",CALLPRIVATE,0,0,False,0,0,"0xecf, 0x67"
    Begin block 0x67,0x67,0,0,0,0,0,False,0,0,"0xecf, 0x67"
"    prev=[0x5b], succ=[0xed2, 0x72]",0x67,0,0,0,0,0,False,0,0,"0xed2, 0x72"
    =================================,0x67,0,0,0,0,0,False,0,0,"0xed2, 0x72"
    0x68: v68(0x2aab8c89) = CONST ,0x67,v68,0,CONST,0,0,False,0x2aab8c89,0,"0xed2, 0x72"
"    0x6d: v6d = EQ v68(0x2aab8c89), v1f",0x67,v6d,"0,v68,v1f",EQ,0,0,False,0,0,"0xed2, 0x72"
    0xecb: vecb(0xed2) = CONST ,0x67,vecb,0,CONST,0,0,False,0xed2,0,"0xed2, 0x72"
"    0xecc: JUMPI vecb(0xed2), v6d",0x67,0,"0,vecb,v6d",JUMPI,0,0,False,0,0,"0xed2, 0x72"
    Begin block 0xed2,0xed2,0,0,0,0,0,False,0,0,"0xed2, 0x72"
"    prev=[0x67], succ=[]",0xed2,0,0,0,0,0,False,0,0,"0xed2, 0x72"
    =================================,0xed2,0,0,0,0,0,False,0,0,"0xed2, 0x72"
    0xed3: ved3(0xa6) = CONST ,0xed2,ved3,0,CONST,0,0,False,0xa6,0,"0xed2, 0x72"
    0xed4: CALLPRIVATE ved3(0xa6),0xed2,0,"0,ved3",CALLPRIVATE,0,0,False,0,0,"0xed2, 0x72"
    Begin block 0x72,0x72,0,0,0,0,0,False,0,0,"0xed2, 0x72"
"    prev=[0x67], succ=[0xed5, 0x7d]",0x72,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    =================================,0x72,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    0x73: v73(0x485cc955) = CONST ,0x72,v73,0,CONST,0,0,False,0x485cc955,0,"0xed5, 0x7d"
"    0x78: v78 = EQ v73(0x485cc955), v1f",0x72,v78,"0,v73,v1f",EQ,0,0,False,0,0,"0xed5, 0x7d"
    0xecd: vecd(0xed5) = CONST ,0x72,vecd,0,CONST,0,0,False,0xed5,0,"0xed5, 0x7d"
"    0xece: JUMPI vecd(0xed5), v78",0x72,0,"0,vecd,v78",JUMPI,0,0,False,0,0,"0xed5, 0x7d"
    Begin block 0xed5,0xed5,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
"    prev=[0x72], succ=[]",0xed5,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    =================================,0xed5,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    0xed6: ved6(0xae) = CONST ,0xed5,ved6,0,CONST,0,0,False,0xae,0,"0xed5, 0x7d"
    0xed7: CALLPRIVATE ved6(0xae),0xed5,0,"0,ved6",CALLPRIVATE,0,0,False,0,0,"0xed5, 0x7d"
    Begin block 0x7d,0x7d,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
"    prev=[0x72], succ=[]",0x7d,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    =================================,0x7d,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
    0x7e: v7e(0x0) = CONST ,0x7d,v7e,0,CONST,0,0,False,0x0,0,"0xed5, 0x7d"
"    0x81: REVERT v7e(0x0), v7e(0x0)",0x7d,0,"0,v7e,v7e",REVERT,0,0,False,0,0,"0xed5, 0x7d"
    Begin block 0x2b,0x2b,0,0,0,0,0,False,0,0,"0xed5, 0x7d"
"    prev=[0x1a], succ=[0x36, 0xed8]",0x2b,0,0,0,0,0,False,0,0,"0x36, 0xed8"
    =================================,0x2b,0,0,0,0,0,False,0,0,"0x36, 0xed8"
    0x2c: v2c(0x748538d9) = CONST ,0x2b,v2c,0,CONST,0,0,False,0x748538d9,0,"0x36, 0xed8"
"    0x31: v31 = EQ v2c(0x748538d9), v1f",0x2b,v31,"0,v2c,v1f",EQ,0,0,False,0,0,"0x36, 0xed8"
    0xec1: vec1(0xed8) = CONST ,0x2b,vec1,0,CONST,0,0,False,0xed8,0,"0x36, 0xed8"
"    0xec2: JUMPI vec1(0xed8), v31",0x2b,0,"0,vec1,v31",JUMPI,0,0,False,0,0,"0x36, 0xed8"
    Begin block 0x36,0x36,0,0,0,0,0,False,0,0,"0x36, 0xed8"
"    prev=[0x2b], succ=[0xedb, 0x41]",0x36,0,0,0,0,0,False,0,0,"0xedb, 0x41"
    =================================,0x36,0,0,0,0,0,False,0,0,"0xedb, 0x41"
    0x37: v37(0x8c2de1a5) = CONST ,0x36,v37,0,CONST,0,0,False,0x8c2de1a5,0,"0xedb, 0x41"
"    0x3c: v3c = EQ v37(0x8c2de1a5), v1f",0x36,v3c,"0,v37,v1f",EQ,0,0,False,0,0,"0xedb, 0x41"
    0xec3: vec3(0xedb) = CONST ,0x36,vec3,0,CONST,0,0,False,0xedb,0,"0xedb, 0x41"
"    0xec4: JUMPI vec3(0xedb), v3c",0x36,0,"0,vec3,v3c",JUMPI,0,0,False,0,0,"0xedb, 0x41"
    Begin block 0xedb,0xedb,0,0,0,0,0,False,0,0,"0xedb, 0x41"
"    prev=[0x36], succ=[]",0xedb,0,0,0,0,0,False,0,0,"0xedb, 0x41"
    =================================,0xedb,0,0,0,0,0,False,0,0,"0xedb, 0x41"
    0xedc: vedc(0x118) = CONST ,0xedb,vedc,0,CONST,0,0,False,0x118,0,"0xedb, 0x41"
    0xedd: CALLPRIVATE vedc(0x118),0xedb,0,"0,vedc",CALLPRIVATE,0,0,False,0,0,"0xedb, 0x41"
    Begin block 0x41,0x41,0,0,0,0,0,False,0,0,"0xedb, 0x41"
"    prev=[0x36], succ=[0xede, 0x4c]",0x41,0,0,0,0,0,False,0,0,"0xede, 0x4c"
    =================================,0x41,0,0,0,0,0,False,0,0,"0xede, 0x4c"
    0x42: v42(0xb5e7410b) = CONST ,0x41,v42,0,CONST,0,0,False,0xb5e7410b,0,"0xede, 0x4c"
"    0x47: v47 = EQ v42(0xb5e7410b), v1f",0x41,v47,"0,v42,v1f",EQ,0,0,False,0,0,"0xede, 0x4c"
    0xec5: vec5(0xede) = CONST ,0x41,vec5,0,CONST,0,0,False,0xede,0,"0xede, 0x4c"
"    0xec6: JUMPI vec5(0xede), v47",0x41,0,"0,vec5,v47",JUMPI,0,0,False,0,0,"0xede, 0x4c"
    Begin block 0xede,0xede,0,0,0,0,0,False,0,0,"0xede, 0x4c"
"    prev=[0x41], succ=[]",0xede,0,0,0,0,0,False,0,0,"0xede, 0x4c"
    =================================,0xede,0,0,0,0,0,False,0,0,"0xede, 0x4c"
    0xedf: vedf(0x1bb) = CONST ,0xede,vedf,0,CONST,0,0,False,0x1bb,0,"0xede, 0x4c"
    0xee0: CALLPRIVATE vedf(0x1bb),0xede,0,"0,vedf",CALLPRIVATE,0,0,False,0,0,"0xede, 0x4c"
    Begin block 0x4c,0x4c,0,0,0,0,0,False,0,0,"0xede, 0x4c"
"    prev=[0x41], succ=[0x57, 0xee1]",0x4c,0,0,0,0,0,False,0,0,"0x57, 0xee1"
    =================================,0x4c,0,0,0,0,0,False,0,0,"0x57, 0xee1"
    0x4d: v4d(0xc690908a) = CONST ,0x4c,v4d,0,CONST,0,0,False,0xc690908a,0,"0x57, 0xee1"
"    0x52: v52 = EQ v4d(0xc690908a), v1f",0x4c,v52,"0,v4d,v1f",EQ,0,0,False,0,0,"0x57, 0xee1"
    0xec7: vec7(0xee1) = CONST ,0x4c,vec7,0,CONST,0,0,False,0xee1,0,"0x57, 0xee1"
"    0xec8: JUMPI vec7(0xee1), v52",0x4c,0,"0,vec7,v52",JUMPI,0,0,False,0,0,"0x57, 0xee1"
    Begin block 0x57,0x57,0,0,0,0,0,False,0,0,"0x57, 0xee1"
"    prev=[0x4c], succ=[0xd2a]",0x57,0,0,0,0,0,False,0,0,0xd2a
    =================================,0x57,0,0,0,0,0,False,0,0,0xd2a
    0x57: v57(0xd2a) = CONST ,0x57,v57,0,CONST,0,0,False,0xd2a,0,0xd2a
    0x5a: JUMP v57(0xd2a),0x57,0,"0,v57",JUMP,0,0,False,0,0,0xd2a
    Begin block 0xd2a,0xd2a,0,0,0,0,0,False,0,0,0xd2a
"    prev=[0x57], succ=[]",0xd2a,0,0,0,0,0,False,0,0,0xd2a
    =================================,0xd2a,0,0,0,0,0,False,0,0,0xd2a
    0xd2b: vd2b(0x0) = CONST ,0xd2a,vd2b,0,CONST,0,0,False,0x0,0,0xd2a
"    0xd2e: REVERT vd2b(0x0), vd2b(0x0)",0xd2a,0,"0,vd2b,vd2b",REVERT,0,0,False,0,0,0xd2a
    Begin block 0xee1,0xee1,0,0,0,0,0,False,0,0,0xd2a
"    prev=[0x4c], succ=[]",0xee1,0,0,0,0,0,False,0,0,0xd2a
    =================================,0xee1,0,0,0,0,0,False,0,0,0xd2a
    0xee2: vee2(0x285) = CONST ,0xee1,vee2,0,CONST,0,0,False,0x285,0,0xd2a
    0xee3: CALLPRIVATE vee2(0x285),0xee1,0,"0,vee2",CALLPRIVATE,0,0,False,0,0,0xd2a
    Begin block 0xed8,0xed8,0,0,0,0,0,False,0,0,0xd2a
"    prev=[0x2b], succ=[]",0xed8,0,0,0,0,0,False,0,0,0xd2a
    =================================,0xed8,0,0,0,0,0,False,0,0,0xd2a
    0xed9: ved9(0xde) = CONST ,0xed8,ved9,0,CONST,0,0,False,0xde,0,0xd2a
    0xeda: CALLPRIVATE ved9(0xde),0xed8,0,"0,ved9",CALLPRIVATE,0,0,False,0,0,0xd2a
    Begin block 0xee4,0xee4,0,0,0,0,0,False,0,0,0xd2a
"    prev=[0x10], succ=[]",0xee4,0,0,0,0,0,False,0,0,0xd2a
    =================================,0xee4,0,0,0,0,0,False,0,0,0xd2a
    0xee5: vee5(0xd06) = CONST ,0xee4,vee5,0,CONST,0,0,False,0xd06,0,0xd2a
    0xee6: CALLPRIVATE vee5(0xd06),0xee4,0,"0,vee5",CALLPRIVATE,0,0,False,0,0,0xd2a
},0xee4,0,0,0,0,0,False,0,0,0xd2a
function enableTokens(address[])() public {,0x118,0,0,public,enableTokens,public,False,0,0,0xd2a
    Begin block 0x118,0x118,0,0,0,enableTokens,public,False,0,0,0xd2a
"    prev=[], succ=[0x12a, 0x12e]",0x118,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
    =================================,0x118,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
    0x119: v119(0xde5) = CONST ,0x118,v119,0,CONST,enableTokens,public,False,0xde5,0,"0x12a, 0x12e"
    0x11c: v11c(0x4) = CONST ,0x118,v11c,0,CONST,enableTokens,public,False,0x4,0,"0x12a, 0x12e"
    0x11f: v11f = CALLDATASIZE ,0x118,v11f,0,CALLDATASIZE,enableTokens,public,False,0,0,"0x12a, 0x12e"
"    0x120: v120 = SUB v11f, v11c(0x4)",0x118,v120,"0,v11f,v11c",SUB,enableTokens,public,False,0,0,"0x12a, 0x12e"
    0x121: v121(0x20) = CONST ,0x118,v121,0,CONST,enableTokens,public,False,0x20,0,"0x12a, 0x12e"
"    0x124: v124 = LT v120, v121(0x20)",0x118,v124,"0,v120,v121",LT,enableTokens,public,False,0,0,"0x12a, 0x12e"
    0x125: v125 = ISZERO v124,0x118,v125,"0,v124",ISZERO,enableTokens,public,False,0,0,"0x12a, 0x12e"
    0x126: v126(0x12e) = CONST ,0x118,v126,0,CONST,enableTokens,public,False,0x12e,0,"0x12a, 0x12e"
"    0x129: JUMPI v126(0x12e), v125",0x118,0,"0,v126,v125",JUMPI,enableTokens,public,False,0,0,"0x12a, 0x12e"
    Begin block 0x12a,0x12a,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
"    prev=[0x118], succ=[]",0x12a,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
    =================================,0x12a,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
    0x12a: v12a(0x0) = CONST ,0x12a,v12a,0,CONST,enableTokens,public,False,0x0,0,"0x12a, 0x12e"
"    0x12d: REVERT v12a(0x0), v12a(0x0)",0x12a,0,"0,v12a,v12a",REVERT,enableTokens,public,False,0,0,"0x12a, 0x12e"
    Begin block 0x12e,0x12e,0,0,0,enableTokens,public,False,0,0,"0x12a, 0x12e"
"    prev=[0x118], succ=[0x145, 0x149]",0x12e,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
    =================================,0x12e,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
"    0x130: v130 = ADD v11c(0x4), v120",0x12e,v130,"0,v11c,v120",ADD,enableTokens,public,False,0,0,"0x145, 0x149"
    0x132: v132(0x20) = CONST ,0x12e,v132,0,CONST,enableTokens,public,False,0x20,0,"0x145, 0x149"
"    0x135: v135(0x24) = ADD v11c(0x4), v132(0x20)",0x12e,v135,"0,v11c,v132",ADD,enableTokens,public,False,0x24,0,"0x145, 0x149"
    0x137: v137 = CALLDATALOAD v11c(0x4),0x12e,v137,"0,v11c",CALLDATALOAD,enableTokens,public,False,0,0,"0x145, 0x149"
    0x138: v138(0x100000000) = CONST ,0x12e,v138,0,CONST,enableTokens,public,False,0x100000000,0,"0x145, 0x149"
"    0x13f: v13f = GT v137, v138(0x100000000)",0x12e,v13f,"0,v137,v138",GT,enableTokens,public,False,0,0,"0x145, 0x149"
    0x140: v140 = ISZERO v13f,0x12e,v140,"0,v13f",ISZERO,enableTokens,public,False,0,0,"0x145, 0x149"
    0x141: v141(0x149) = CONST ,0x12e,v141,0,CONST,enableTokens,public,False,0x149,0,"0x145, 0x149"
"    0x144: JUMPI v141(0x149), v140",0x12e,0,"0,v141,v140",JUMPI,enableTokens,public,False,0,0,"0x145, 0x149"
    Begin block 0x145,0x145,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
"    prev=[0x12e], succ=[]",0x145,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
    =================================,0x145,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
    0x145: v145(0x0) = CONST ,0x145,v145,0,CONST,enableTokens,public,False,0x0,0,"0x145, 0x149"
"    0x148: REVERT v145(0x0), v145(0x0)",0x145,0,"0,v145,v145",REVERT,enableTokens,public,False,0,0,"0x145, 0x149"
    Begin block 0x149,0x149,0,0,0,enableTokens,public,False,0,0,"0x145, 0x149"
"    prev=[0x12e], succ=[0x157, 0x15b]",0x149,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
    =================================,0x149,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
"    0x14b: v14b = ADD v11c(0x4), v137",0x149,v14b,"0,v11c,v137",ADD,enableTokens,public,False,0,0,"0x157, 0x15b"
    0x14d: v14d(0x20) = CONST ,0x149,v14d,0,CONST,enableTokens,public,False,0x20,0,"0x157, 0x15b"
"    0x150: v150 = ADD v14b, v14d(0x20)",0x149,v150,"0,v14b,v14d",ADD,enableTokens,public,False,0,0,"0x157, 0x15b"
"    0x151: v151 = GT v150, v130",0x149,v151,"0,v150,v130",GT,enableTokens,public,False,0,0,"0x157, 0x15b"
    0x152: v152 = ISZERO v151,0x149,v152,"0,v151",ISZERO,enableTokens,public,False,0,0,"0x157, 0x15b"
    0x153: v153(0x15b) = CONST ,0x149,v153,0,CONST,enableTokens,public,False,0x15b,0,"0x157, 0x15b"
"    0x156: JUMPI v153(0x15b), v152",0x149,0,"0,v153,v152",JUMPI,enableTokens,public,False,0,0,"0x157, 0x15b"
    Begin block 0x157,0x157,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
"    prev=[0x149], succ=[]",0x157,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
    =================================,0x157,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
    0x157: v157(0x0) = CONST ,0x157,v157,0,CONST,enableTokens,public,False,0x0,0,"0x157, 0x15b"
"    0x15a: REVERT v157(0x0), v157(0x0)",0x157,0,"0,v157,v157",REVERT,enableTokens,public,False,0,0,"0x157, 0x15b"
    Begin block 0x15b,0x15b,0,0,0,enableTokens,public,False,0,0,"0x157, 0x15b"
"    prev=[0x149], succ=[0x179, 0x17d]",0x15b,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
    =================================,0x15b,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x15d: v15d = CALLDATALOAD v14b,0x15b,v15d,"0,v14b",CALLDATALOAD,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x15f: v15f(0x20) = CONST ,0x15b,v15f,0,CONST,enableTokens,public,False,0x20,0,"0x179, 0x17d"
"    0x161: v161 = ADD v15f(0x20), v14b",0x15b,v161,"0,v15f,v14b",ADD,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x164: v164(0x20) = CONST ,0x15b,v164,0,CONST,enableTokens,public,False,0x20,0,"0x179, 0x17d"
"    0x167: v167 = MUL v15d, v164(0x20)",0x15b,v167,"0,v15d,v164",MUL,enableTokens,public,False,0,0,"0x179, 0x17d"
"    0x169: v169 = ADD v161, v167",0x15b,v169,"0,v161,v167",ADD,enableTokens,public,False,0,0,"0x179, 0x17d"
"    0x16a: v16a = GT v169, v130",0x15b,v16a,"0,v169,v130",GT,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x16b: v16b(0x100000000) = CONST ,0x15b,v16b,0,CONST,enableTokens,public,False,0x100000000,0,"0x179, 0x17d"
"    0x172: v172 = GT v15d, v16b(0x100000000)",0x15b,v172,"0,v15d,v16b",GT,enableTokens,public,False,0,0,"0x179, 0x17d"
"    0x173: v173 = OR v172, v16a",0x15b,v173,"0,v172,v16a",OR,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x174: v174 = ISZERO v173,0x15b,v174,"0,v173",ISZERO,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x175: v175(0x17d) = CONST ,0x15b,v175,0,CONST,enableTokens,public,False,0x17d,0,"0x179, 0x17d"
"    0x178: JUMPI v175(0x17d), v174",0x15b,0,"0,v175,v174",JUMPI,enableTokens,public,False,0,0,"0x179, 0x17d"
    Begin block 0x179,0x179,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
"    prev=[0x15b], succ=[]",0x179,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
    =================================,0x179,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
    0x179: v179(0x0) = CONST ,0x179,v179,0,CONST,enableTokens,public,False,0x0,0,"0x179, 0x17d"
"    0x17c: REVERT v179(0x0), v179(0x0)",0x179,0,"0,v179,v179",REVERT,enableTokens,public,False,0,0,"0x179, 0x17d"
    Begin block 0x17d,0x17d,0,0,0,enableTokens,public,False,0,0,"0x179, 0x17d"
"    prev=[0x15b], succ=[0x3bb]",0x17d,0,0,0,enableTokens,public,False,0,0,0x3bb
    =================================,0x17d,0,0,0,enableTokens,public,False,0,0,0x3bb
    0x182: v182(0x20) = CONST ,0x17d,v182,0,CONST,enableTokens,public,False,0x20,0,0x3bb
"    0x184: v184 = MUL v182(0x20), v15d",0x17d,v184,"0,v182,v15d",MUL,enableTokens,public,False,0,0,0x3bb
    0x185: v185(0x20) = CONST ,0x17d,v185,0,CONST,enableTokens,public,False,0x20,0,0x3bb
"    0x187: v187 = ADD v185(0x20), v184",0x17d,v187,"0,v185,v184",ADD,enableTokens,public,False,0,0,0x3bb
    0x188: v188(0x40) = CONST ,0x17d,v188,0,CONST,enableTokens,public,False,0x40,0,0x3bb
    0x18a: v18a = MLOAD v188(0x40),0x17d,v18a,"0,v188",MLOAD,enableTokens,public,False,0,enableTokens&m0x40,0x3bb
"    0x18d: v18d = ADD v18a, v187",0x17d,v18d,"0,v18a,v187",ADD,enableTokens,public,False,0,0,0x3bb
    0x18e: v18e(0x40) = CONST ,0x17d,v18e,0,CONST,enableTokens,public,False,0x40,0,0x3bb
"    0x190: MSTORE v18e(0x40), v18d",0x17d,0,"0,v18e,v18d",MSTORE,enableTokens,public,False,0,0,0x3bb
"    0x198: MSTORE v18a, v15d",0x17d,enableTokens&m0x40,"0,v18a,v15d",MSTORE,enableTokens,public,False,0,enableTokens&m0x40,0x3bb
    0x199: v199(0x20) = CONST ,0x17d,v199,0,CONST,enableTokens,public,False,0x20,0,0x3bb
"    0x19b: v19b = ADD v199(0x20), v18a",0x17d,v19b,"0,v199,v18a",ADD,enableTokens,public,False,0,enableTokens&m0x40+0x20,0x3bb
    0x19e: v19e(0x20) = CONST ,0x17d,v19e,0,CONST,enableTokens,public,False,0x20,0,0x3bb
"    0x1a0: v1a0 = MUL v19e(0x20), v15d",0x17d,v1a0,"0,v19e,v15d",MUL,enableTokens,public,False,0,0,0x3bb
"    0x1a4: CALLDATACOPY v19b, v161, v1a0",0x17d,0,"0,v19b,v161,v1a0",CALLDATACOPY,enableTokens,public,False,0,0,0x3bb
    0x1a5: v1a5(0x0) = CONST ,0x17d,v1a5,0,CONST,enableTokens,public,False,0x0,0,0x3bb
"    0x1a8: v1a8 = ADD v19b, v1a0",0x17d,v1a8,"0,v19b,v1a0",ADD,enableTokens,public,False,0,0,0x3bb
"    0x1ac: MSTORE v1a8, v1a5(0x0)",0x17d,0,"0,v1a8,v1a5",MSTORE,enableTokens,public,False,0,0,0x3bb
    0x1b1: v1b1(0x3bb) = CONST ,0x17d,v1b1,0,CONST,enableTokens,public,False,0x3bb,0,0x3bb
    0x1ba: JUMP v1b1(0x3bb),0x17d,0,"0,v1b1",JUMP,enableTokens,public,False,0,0,0x3bb
    Begin block 0x3bb,0x3bb,0,0,0,enableTokens,public,False,0,0,0x3bb
"    prev=[0x17d], succ=[0x3be]",0x3bb,0,0,0,enableTokens,public,False,0,0,0x3be
    =================================,0x3bb,0,0,0,enableTokens,public,False,0,0,0x3be
    0x3bc: v3bc(0x0) = CONST ,0x3bb,v3bc,0,CONST,enableTokens,public,False,0x0,0,0x3be
    Begin block 0x3be,0x3be,0,0,0,enableTokens,public,False,0,0,0x3be
"    prev=[0x3bb, 0x3e3], succ=[0x3c8, 0x3eb]",0x3be,0,0,0,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
    =================================,0x3be,0,0,0,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
"    0x3be_0x0: v3be_0 = PHI v3bc(0x0), v3e6",0x3be,v3be_0,"0,v3bc,v3e6",PHI,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
    0x3c0: v3c0 = MLOAD v18a,0x3be,v3c0,"0,v18a",MLOAD,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
"    0x3c2: v3c2 = LT v3be_0, v3c0",0x3be,v3c2,"0,v3be_0,v3c0",LT,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
    0x3c3: v3c3 = ISZERO v3c2,0x3be,v3c3,"0,v3c2",ISZERO,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
    0x3c4: v3c4(0x3eb) = CONST ,0x3be,v3c4,0,CONST,enableTokens,public,False,0x3eb,0,"0x3c8, 0x3eb"
"    0x3c7: JUMPI v3c4(0x3eb), v3c3",0x3be,0,"0,v3c4,v3c3",JUMPI,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
    Begin block 0x3c8,0x3c8,0,0,0,enableTokens,public,False,0,0,"0x3c8, 0x3eb"
"    prev=[0x3be], succ=[0x3d5, 0x3d6]",0x3c8,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    =================================,0x3c8,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    0x3c8: v3c8(0x3e3) = CONST ,0x3c8,v3c8,0,CONST,enableTokens,public,False,0x3e3,0,"0x3d5, 0x3d6"
"    0x3c8_0x0: v3c8_0 = PHI v3bc(0x0), v3e6",0x3c8,v3c8_0,"0,v3bc,v3e6",PHI,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    0x3ce: v3ce = MLOAD v18a,0x3c8,v3ce,"0,v18a",MLOAD,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
"    0x3d0: v3d0 = LT v3c8_0, v3ce",0x3c8,v3d0,"0,v3c8_0,v3ce",LT,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    0x3d1: v3d1(0x3d6) = CONST ,0x3c8,v3d1,0,CONST,enableTokens,public,False,0x3d6,0,"0x3d5, 0x3d6"
"    0x3d4: JUMPI v3d1(0x3d6), v3d0",0x3c8,0,"0,v3d1,v3d0",JUMPI,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    Begin block 0x3d5,0x3d5,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
"    prev=[0x3c8], succ=[]",0x3d5,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    =================================,0x3d5,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    0x3d5: THROW ,0x3d5,0,0,THROW,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
    Begin block 0x3d6,0x3d6,0,0,0,enableTokens,public,False,0,0,"0x3d5, 0x3d6"
"    prev=[0x3c8], succ=[0x77f0x118]",0x3d6,0,0,0,enableTokens,public,False,0,0,0x77f0x118
    =================================,0x3d6,0,0,0,enableTokens,public,False,0,0,0x77f0x118
"    0x3d6_0x0: v3d6_0 = PHI v3bc(0x0), v3e6",0x3d6,v3d6_0,"0,v3bc,v3e6",PHI,enableTokens,public,False,0,0,0x77f0x118
    0x3d7: v3d7(0x20) = CONST ,0x3d6,v3d7,0,CONST,enableTokens,public,False,0x20,0,0x77f0x118
"    0x3d9: v3d9 = MUL v3d7(0x20), v3d6_0",0x3d6,v3d9,"0,v3d7,v3d6_0",MUL,enableTokens,public,False,0,0,0x77f0x118
    0x3da: v3da(0x20) = CONST ,0x3d6,v3da,0,CONST,enableTokens,public,False,0x20,0,0x77f0x118
"    0x3dc: v3dc = ADD v3da(0x20), v3d9",0x3d6,v3dc,"0,v3da,v3d9",ADD,enableTokens,public,False,0,0,0x77f0x118
"    0x3dd: v3dd = ADD v3dc, v18a",0x3d6,v3dd,"0,v3dc,v18a",ADD,enableTokens,public,False,0,0,0x77f0x118
    0x3de: v3de = MLOAD v3dd,0x3d6,v3de,"0,v3dd",MLOAD,enableTokens,public,False,0,0,0x77f0x118
    0x3df: v3df(0x77f) = CONST ,0x3d6,v3df,0,CONST,enableTokens,public,False,0x77f,0,0x77f0x118
    0x3e2: JUMP v3df(0x77f),0x3d6,0,"0,v3df",JUMP,enableTokens,public,False,0,0,0x77f0x118
    Begin block 0x77f0x118,0x77f0x118,0,0,0,enableTokens,public,False,0,0,0x77f0x118
"    prev=[0x3d6], succ=[0x7a10x118, 0x7d70x118]",0x77f0x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    =================================,0x77f0x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7800x118: v118780(0x1) = CONST ,0x77f0x118,v118780,0,CONST,enableTokens,public,False,0x1,0,"0x7a10x118, 0x7d70x118"
    0x7820x118: v118782(0x1) = CONST ,0x77f0x118,v118782,0,CONST,enableTokens,public,False,0x1,0,"0x7a10x118, 0x7d70x118"
    0x7840x118: v118784(0xa0) = CONST ,0x77f0x118,v118784,0,CONST,enableTokens,public,False,0xa0,0,"0x7a10x118, 0x7d70x118"
"    0x7860x118: v118786(0x10000000000000000000000000000000000000000) = SHL v118784(0xa0), v118782(0x1)",0x77f0x118,v118786,"0,v118784,v118782",SHL,enableTokens,public,False,0x10000000000000000000000000000000000000000,0,"0x7a10x118, 0x7d70x118"
"    0x7870x118: v118787(0xffffffffffffffffffffffffffffffffffffffff) = SUB v118786(0x10000000000000000000000000000000000000000), v118780(0x1)",0x77f0x118,v118787,"0,v118786,v118780",SUB,enableTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x7a10x118, 0x7d70x118"
"    0x7890x118: v118789 = AND v3de, v118787(0xffffffffffffffffffffffffffffffffffffffff)",0x77f0x118,v118789,"0,v3de,v118787",AND,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x78a0x118: v11878a(0x0) = CONST ,0x77f0x118,v11878a,0,CONST,enableTokens,public,False,0x0,0,"0x7a10x118, 0x7d70x118"
"    0x78e0x118: MSTORE v11878a(0x0), v118789",0x77f0x118,0,"0,v11878a,v118789",MSTORE,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x78f0x118: v11878f(0x35) = CONST ,0x77f0x118,v11878f,0,CONST,enableTokens,public,False,0x35,0,"0x7a10x118, 0x7d70x118"
    0x7910x118: v118791(0x20) = CONST ,0x77f0x118,v118791,0,CONST,enableTokens,public,False,0x20,0,"0x7a10x118, 0x7d70x118"
"    0x7930x118: MSTORE v118791(0x20), v11878f(0x35)",0x77f0x118,0,"0,v118791,v11878f",MSTORE,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7940x118: v118794(0x40) = CONST ,0x77f0x118,v118794,0,CONST,enableTokens,public,False,0x40,0,"0x7a10x118, 0x7d70x118"
"    0x7970x118: v118797 = SHA3 v11878a(0x0), v118794(0x40)",0x77f0x118,v118797,"0,v11878a,v118794",SHA3,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7980x118: v118798 = SLOAD v118797,0x77f0x118,v118798,"0,v118797",SLOAD,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7990x118: v118799(0xff) = CONST ,0x77f0x118,v118799,0,CONST,enableTokens,public,False,0xff,0,"0x7a10x118, 0x7d70x118"
"    0x79b0x118: v11879b = AND v118799(0xff), v118798",0x77f0x118,v11879b,"0,v118799,v118798",AND,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x79c0x118: v11879c = ISZERO v11879b,0x77f0x118,v11879c,"0,v11879b",ISZERO,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x79d0x118: v11879d(0x7d7) = CONST ,0x77f0x118,v11879d,0,CONST,enableTokens,public,False,0x7d7,0,"0x7a10x118, 0x7d70x118"
"    0x7a00x118: JUMPI v11879d(0x7d7), v11879c",0x77f0x118,0,"0,v11879d,v11879c",JUMPI,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    Begin block 0x7a10x118,0x7a10x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
"    prev=[0x77f0x118], succ=[]",0x7a10x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    =================================,0x7a10x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7a10x118: v1187a1(0x40) = CONST ,0x7a10x118,v1187a1,0,CONST,enableTokens,public,False,0x40,0,"0x7a10x118, 0x7d70x118"
    0x7a30x118: v1187a3 = MLOAD v1187a1(0x40),0x7a10x118,v1187a3,"0,v1187a1",MLOAD,enableTokens,public,False,0,enableTokens&m0x40,"0x7a10x118, 0x7d70x118"
    0x7a40x118: v1187a4(0x461bcd) = CONST ,0x7a10x118,v1187a4,0,CONST,enableTokens,public,False,0x461bcd,0,"0x7a10x118, 0x7d70x118"
    0x7a80x118: v1187a8(0xe5) = CONST ,0x7a10x118,v1187a8,0,CONST,enableTokens,public,False,0xe5,0,"0x7a10x118, 0x7d70x118"
"    0x7aa0x118: v1187aa(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1187a8(0xe5), v1187a4(0x461bcd)",0x7a10x118,v1187aa,"0,v1187a8,v1187a4",SHL,enableTokens,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x7a10x118, 0x7d70x118"
"    0x7ac0x118: MSTORE v1187a3, v1187aa(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x7a10x118,enableTokens&m0x40,"0,v1187a3,v1187aa",MSTORE,enableTokens,public,False,0,enableTokens&m0x40,"0x7a10x118, 0x7d70x118"
    0x7ad0x118: v1187ad(0x4) = CONST ,0x7a10x118,v1187ad,0,CONST,enableTokens,public,False,0x4,0,"0x7a10x118, 0x7d70x118"
"    0x7af0x118: v1187af = ADD v1187ad(0x4), v1187a3",0x7a10x118,v1187af,"0,v1187ad,v1187a3",ADD,enableTokens,public,False,0,enableTokens&m0x40+0x4,"0x7a10x118, 0x7d70x118"
    0x7b20x118: v1187b2(0x20) = CONST ,0x7a10x118,v1187b2,0,CONST,enableTokens,public,False,0x20,0,"0x7a10x118, 0x7d70x118"
"    0x7b40x118: v1187b4 = ADD v1187b2(0x20), v1187af",0x7a10x118,v1187b4,"0,v1187b2,v1187af",ADD,enableTokens,public,False,0,enableTokens&m0x40+0x4+0x20,"0x7a10x118, 0x7d70x118"
"    0x7b70x118: v1187b7(0x20) = SUB v1187b4, v1187af",0x7a10x118,v1187b7,"0,v1187b4,v1187af",SUB,enableTokens,public,False,0x20,enableTokens&m0x40+0x4+0x20-0x20,"0x7a10x118, 0x7d70x118"
"    0x7b90x118: MSTORE v1187af, v1187b7(0x20)",0x7a10x118,enableTokens&m0x40+0x4,"0,v1187af,v1187b7",MSTORE,enableTokens,public,False,0,enableTokens&m0x40+0x4,"0x7a10x118, 0x7d70x118"
    0x7ba0x118: v1187ba(0x2a) = CONST ,0x7a10x118,v1187ba,0,CONST,enableTokens,public,False,0x2a,0,"0x7a10x118, 0x7d70x118"
"    0x7bd0x118: MSTORE v1187b4, v1187ba(0x2a)",0x7a10x118,enableTokens&m0x40+0x4+0x20,"0,v1187b4,v1187ba",MSTORE,enableTokens,public,False,0,enableTokens&m0x40+0x4+0x20,"0x7a10x118, 0x7d70x118"
    0x7be0x118: v1187be(0x20) = CONST ,0x7a10x118,v1187be,0,CONST,enableTokens,public,False,0x20,0,"0x7a10x118, 0x7d70x118"
"    0x7c00x118: v1187c0 = ADD v1187be(0x20), v1187b4",0x7a10x118,v1187c0,"0,v1187be,v1187b4",ADD,enableTokens,public,False,0,enableTokens&m0x40+0x4+0x20+0x20,"0x7a10x118, 0x7d70x118"
    0x7c20x118: v1187c2(0xbd7) = CONST ,0x7a10x118,v1187c2,0,CONST,enableTokens,public,False,0xbd7,0,"0x7a10x118, 0x7d70x118"
    0x7c50x118: v1187c5(0x2a) = CONST ,0x7a10x118,v1187c5,0,CONST,enableTokens,public,False,0x2a,0,"0x7a10x118, 0x7d70x118"
"    0x7c80x118: CODECOPY v1187c0, v1187c2(0xbd7), v1187c5(0x2a)",0x7a10x118,0,"0,v1187c0,v1187c2,v1187c5",CODECOPY,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    0x7c90x118: v1187c9(0x40) = CONST ,0x7a10x118,v1187c9,0,CONST,enableTokens,public,False,0x40,0,"0x7a10x118, 0x7d70x118"
"    0x7cb0x118: v1187cb = ADD v1187c9(0x40), v1187c0",0x7a10x118,v1187cb,"0,v1187c9,v1187c0",ADD,enableTokens,public,False,0,enableTokens&m0x40+0x4+0x20+0x20+0x40,"0x7a10x118, 0x7d70x118"
    0x7cf0x118: v1187cf(0x40) = CONST ,0x7a10x118,v1187cf,0,CONST,enableTokens,public,False,0x40,0,"0x7a10x118, 0x7d70x118"
    0x7d10x118: v1187d1 = MLOAD v1187cf(0x40),0x7a10x118,v1187d1,"0,v1187cf",MLOAD,enableTokens,public,False,0,enableTokens&m0x40,"0x7a10x118, 0x7d70x118"
"    0x7d40x118: v1187d4(0x84) = SUB v1187cb, v1187d1",0x7a10x118,v1187d4,"0,v1187cb,v1187d1",SUB,enableTokens,public,False,0x84,enableTokens&m0x40+0x4+0x20+0x20+0x40-0x84,"0x7a10x118, 0x7d70x118"
"    0x7d60x118: REVERT v1187d1, v1187d4(0x84)",0x7a10x118,0,"0,v1187d1,v1187d4",REVERT,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
    Begin block 0x7d70x118,0x7d70x118,0,0,0,enableTokens,public,False,0,0,"0x7a10x118, 0x7d70x118"
"    prev=[0x77f0x118], succ=[0x7f90x118]",0x7d70x118,0,0,0,enableTokens,public,False,0,0,0x7f90x118
    =================================,0x7d70x118,0,0,0,enableTokens,public,False,0,0,0x7f90x118
    0x7d80x118: v1187d8(0x33) = CONST ,0x7d70x118,v1187d8,0,CONST,enableTokens,public,False,0x33,0,0x7f90x118
    0x7da0x118: v1187da = SLOAD v1187d8(0x33),0x7d70x118,v1187da,"0,v1187d8",SLOAD,enableTokens,public,False,0,0,0x7f90x118
    0x7db0x118: v1187db(0x7f9) = CONST ,0x7d70x118,v1187db,0,CONST,enableTokens,public,False,0x7f9,0,0x7f90x118
    0x7df0x118: v1187df(0x1) = CONST ,0x7d70x118,v1187df,0,CONST,enableTokens,public,False,0x1,0,0x7f90x118
    0x7e10x118: v1187e1(0x1) = CONST ,0x7d70x118,v1187e1,0,CONST,enableTokens,public,False,0x1,0,0x7f90x118
    0x7e30x118: v1187e3(0xa0) = CONST ,0x7d70x118,v1187e3,0,CONST,enableTokens,public,False,0xa0,0,0x7f90x118
"    0x7e50x118: v1187e5(0x10000000000000000000000000000000000000000) = SHL v1187e3(0xa0), v1187e1(0x1)",0x7d70x118,v1187e5,"0,v1187e3,v1187e1",SHL,enableTokens,public,False,0x10000000000000000000000000000000000000000,0,0x7f90x118
"    0x7e60x118: v1187e6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1187e5(0x10000000000000000000000000000000000000000), v1187df(0x1)",0x7d70x118,v1187e6,"0,v1187e5,v1187df",SUB,enableTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7f90x118
"    0x7e90x118: v1187e9 = AND v1187e6(0xffffffffffffffffffffffffffffffffffffffff), v3de",0x7d70x118,v1187e9,"0,v1187e6,v3de",AND,enableTokens,public,False,0,0,0x7f90x118
"    0x7eb0x118: v1187eb = AND v1187da, v1187e6(0xffffffffffffffffffffffffffffffffffffffff)",0x7d70x118,v1187eb,"0,v1187da,v1187e6",AND,enableTokens,public,False,0,0,0x7f90x118
    0x7ec0x118: v1187ec(0x0) = CONST ,0x7d70x118,v1187ec,0,CONST,enableTokens,public,False,0x0,0,0x7f90x118
    0x7ee0x118: v1187ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v1187ec(0x0),0x7d70x118,v1187ee,"0,v1187ec",NOT,enableTokens,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x7f90x118
    0x7ef0x118: v1187ef(0xffffffff) = CONST ,0x7d70x118,v1187ef,0,CONST,enableTokens,public,False,0xffffffff,0,0x7f90x118
    0x7f40x118: v1187f4(0x883) = CONST ,0x7d70x118,v1187f4,0,CONST,enableTokens,public,False,0x883,0,0x7f90x118
"    0x7f70x118: v1187f7(0x883) = AND v1187f4(0x883), v1187ef(0xffffffff)",0x7d70x118,v1187f7,"0,v1187f4,v1187ef",AND,enableTokens,public,False,0x883,0,0x7f90x118
"    0x7f80x118: CALLPRIVATE v1187f7(0x883), v1187ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v1187eb, v1187e9, v1187db(0x7f9)",0x7d70x118,0,"0,v1187f7,v1187ee,v1187eb,v1187e9,v1187db",CALLPRIVATE,enableTokens,public,False,0,0,0x7f90x118
    Begin block 0x7f90x118,0x7f90x118,0,0,0,enableTokens,public,False,0,0,0x7f90x118
"    prev=[0x7d70x118], succ=[0x3e3]",0x7f90x118,0,0,0,enableTokens,public,False,0,0,0x3e3
    =================================,0x7f90x118,0,0,0,enableTokens,public,False,0,0,0x3e3
    0x7fa0x118: v1187fa(0x1) = CONST ,0x7f90x118,v1187fa,0,CONST,enableTokens,public,False,0x1,0,0x3e3
    0x7fc0x118: v1187fc(0x1) = CONST ,0x7f90x118,v1187fc,0,CONST,enableTokens,public,False,0x1,0,0x3e3
    0x7fe0x118: v1187fe(0xa0) = CONST ,0x7f90x118,v1187fe,0,CONST,enableTokens,public,False,0xa0,0,0x3e3
"    0x8000x118: v118800(0x10000000000000000000000000000000000000000) = SHL v1187fe(0xa0), v1187fc(0x1)",0x7f90x118,v118800,"0,v1187fe,v1187fc",SHL,enableTokens,public,False,0x10000000000000000000000000000000000000000,0,0x3e3
"    0x8010x118: v118801(0xffffffffffffffffffffffffffffffffffffffff) = SUB v118800(0x10000000000000000000000000000000000000000), v1187fa(0x1)",0x7f90x118,v118801,"0,v118800,v1187fa",SUB,enableTokens,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x3e3
"    0x8020x118: v118802 = AND v118801(0xffffffffffffffffffffffffffffffffffffffff), v3de",0x7f90x118,v118802,"0,v118801,v3de",AND,enableTokens,public,False,0,0,0x3e3
    0x8030x118: v118803(0x0) = CONST ,0x7f90x118,v118803,0,CONST,enableTokens,public,False,0x0,0,0x3e3
"    0x8070x118: MSTORE v118803(0x0), v118802",0x7f90x118,0,"0,v118803,v118802",MSTORE,enableTokens,public,False,0,0,0x3e3
    0x8080x118: v118808(0x35) = CONST ,0x7f90x118,v118808,0,CONST,enableTokens,public,False,0x35,0,0x3e3
    0x80a0x118: v11880a(0x20) = CONST ,0x7f90x118,v11880a,0,CONST,enableTokens,public,False,0x20,0,0x3e3
"    0x80c0x118: MSTORE v11880a(0x20), v118808(0x35)",0x7f90x118,0,"0,v11880a,v118808",MSTORE,enableTokens,public,False,0,0,0x3e3
    0x80d0x118: v11880d(0x40) = CONST ,0x7f90x118,v11880d,0,CONST,enableTokens,public,False,0x40,0,0x3e3
"    0x8100x118: v118810 = SHA3 v118803(0x0), v11880d(0x40)",0x7f90x118,v118810,"0,v118803,v11880d",SHA3,enableTokens,public,False,0,0,0x3e3
    0x8120x118: v118812 = SLOAD v118810,0x7f90x118,v118812,"0,v118810",SLOAD,enableTokens,public,False,0,0,0x3e3
    0x8130x118: v118813(0xff) = CONST ,0x7f90x118,v118813,0,CONST,enableTokens,public,False,0xff,0,0x3e3
    0x8150x118: v118815(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v118813(0xff),0x7f90x118,v118815,"0,v118813",NOT,enableTokens,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x3e3
"    0x8160x118: v118816 = AND v118815(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v118812",0x7f90x118,v118816,"0,v118815,v118812",AND,enableTokens,public,False,0,0,0x3e3
    0x8170x118: v118817(0x1) = CONST ,0x7f90x118,v118817,0,CONST,enableTokens,public,False,0x1,0,0x3e3
"    0x8190x118: v118819 = OR v118817(0x1), v118816",0x7f90x118,v118819,"0,v118817,v118816",OR,enableTokens,public,False,0,0,0x3e3
"    0x81b0x118: SSTORE v118810, v118819",0x7f90x118,0,"0,v118810,v118819",SSTORE,enableTokens,public,False,0,0,0x3e3
    0x81c0x118: JUMP v3c8(0x3e3),0x7f90x118,0,"0,v3c8",JUMP,enableTokens,public,False,0,0,0x3e3
    Begin block 0x3e3,0x3e3,0,0,0,enableTokens,public,False,0,0,0x3e3
"    prev=[0x7f90x118], succ=[0x3be]",0x3e3,0,0,0,enableTokens,public,False,0,0,0x3be
    =================================,0x3e3,0,0,0,enableTokens,public,False,0,0,0x3be
"    0x3e3_0x0: v3e3_0 = PHI v3bc(0x0), v3e6",0x3e3,v3e3_0,"0,v3bc,v3e6",PHI,enableTokens,public,False,0,0,0x3be
    0x3e4: v3e4(0x1) = CONST ,0x3e3,v3e4,0,CONST,enableTokens,public,False,0x1,0,0x3be
"    0x3e6: v3e6 = ADD v3e4(0x1), v3e3_0",0x3e3,v3e6,"0,v3e4,v3e3_0",ADD,enableTokens,public,False,0,0,0x3be
    0x3e7: v3e7(0x3be) = CONST ,0x3e3,v3e7,0,CONST,enableTokens,public,False,0x3be,0,0x3be
    0x3ea: JUMP v3e7(0x3be),0x3e3,0,"0,v3e7",JUMP,enableTokens,public,False,0,0,0x3be
    Begin block 0x3eb,0x3eb,0,0,0,enableTokens,public,False,0,0,0x3be
"    prev=[0x3be], succ=[0xde5]",0x3eb,0,0,0,enableTokens,public,False,0,0,0xde5
    =================================,0x3eb,0,0,0,enableTokens,public,False,0,0,0xde5
    0x3ee: JUMP v119(0xde5),0x3eb,0,"0,v119",JUMP,enableTokens,public,False,0,0,0xde5
    Begin block 0xde5,0xde5,0,0,0,enableTokens,public,False,0,0,0xde5
"    prev=[0x3eb], succ=[]",0xde5,0,0,0,enableTokens,public,False,0,0,0xde5
    =================================,0xde5,0,0,0,enableTokens,public,False,0,0,0xde5
    0xde6: STOP ,0xde5,0,0,STOP,enableTokens,public,False,0,0,0xde5
},0xde5,0,0,0,enableTokens,public,False,0,0,0xde5
"function burnDmg(address,uint256,address[])() public {",0x1bb,0,0,,burnDmg,public,False,0,0,0xde5
    Begin block 0x1bb,0x1bb,0,0,0,burnDmg,public,False,0,0,0xde5
"    prev=[], succ=[0x1cd, 0x1d1]",0x1bb,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    =================================,0x1bb,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    0x1bc: v1bc(0x273) = CONST ,0x1bb,v1bc,0,CONST,burnDmg,public,False,0x273,0,"0x1cd, 0x1d1"
    0x1bf: v1bf(0x4) = CONST ,0x1bb,v1bf,0,CONST,burnDmg,public,False,0x4,0,"0x1cd, 0x1d1"
    0x1c2: v1c2 = CALLDATASIZE ,0x1bb,v1c2,0,CALLDATASIZE,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
"    0x1c3: v1c3 = SUB v1c2, v1bf(0x4)",0x1bb,v1c3,"0,v1c2,v1bf",SUB,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    0x1c4: v1c4(0x60) = CONST ,0x1bb,v1c4,0,CONST,burnDmg,public,False,0x60,0,"0x1cd, 0x1d1"
"    0x1c7: v1c7 = LT v1c3, v1c4(0x60)",0x1bb,v1c7,"0,v1c3,v1c4",LT,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    0x1c8: v1c8 = ISZERO v1c7,0x1bb,v1c8,"0,v1c7",ISZERO,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    0x1c9: v1c9(0x1d1) = CONST ,0x1bb,v1c9,0,CONST,burnDmg,public,False,0x1d1,0,"0x1cd, 0x1d1"
"    0x1cc: JUMPI v1c9(0x1d1), v1c8",0x1bb,0,"0,v1c9,v1c8",JUMPI,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    Begin block 0x1cd,0x1cd,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
"    prev=[0x1bb], succ=[]",0x1cd,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    =================================,0x1cd,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    0x1cd: v1cd(0x0) = CONST ,0x1cd,v1cd,0,CONST,burnDmg,public,False,0x0,0,"0x1cd, 0x1d1"
"    0x1d0: REVERT v1cd(0x0), v1cd(0x0)",0x1cd,0,"0,v1cd,v1cd",REVERT,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
    Begin block 0x1d1,0x1d1,0,0,0,burnDmg,public,False,0,0,"0x1cd, 0x1d1"
"    prev=[0x1bb], succ=[0x1fd, 0x201]",0x1d1,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
    =================================,0x1d1,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1d2: v1d2(0x1) = CONST ,0x1d1,v1d2,0,CONST,burnDmg,public,False,0x1,0,"0x1fd, 0x201"
    0x1d4: v1d4(0x1) = CONST ,0x1d1,v1d4,0,CONST,burnDmg,public,False,0x1,0,"0x1fd, 0x201"
    0x1d6: v1d6(0xa0) = CONST ,0x1d1,v1d6,0,CONST,burnDmg,public,False,0xa0,0,"0x1fd, 0x201"
"    0x1d8: v1d8(0x10000000000000000000000000000000000000000) = SHL v1d6(0xa0), v1d4(0x1)",0x1d1,v1d8,"0,v1d6,v1d4",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x1fd, 0x201"
"    0x1d9: v1d9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d8(0x10000000000000000000000000000000000000000), v1d2(0x1)",0x1d1,v1d9,"0,v1d8,v1d2",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x1fd, 0x201"
    0x1db: v1db = CALLDATALOAD v1bf(0x4),0x1d1,v1db,"0,v1bf",CALLDATALOAD,burnDmg,public,False,0,0,"0x1fd, 0x201"
"    0x1dc: v1dc = AND v1db, v1d9(0xffffffffffffffffffffffffffffffffffffffff)",0x1d1,v1dc,"0,v1db,v1d9",AND,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1de: v1de(0x20) = CONST ,0x1d1,v1de,0,CONST,burnDmg,public,False,0x20,0,"0x1fd, 0x201"
"    0x1e1: v1e1(0x24) = ADD v1bf(0x4), v1de(0x20)",0x1d1,v1e1,"0,v1bf,v1de",ADD,burnDmg,public,False,0x24,0,"0x1fd, 0x201"
    0x1e2: v1e2 = CALLDATALOAD v1e1(0x24),0x1d1,v1e2,"0,v1e1",CALLDATALOAD,burnDmg,public,False,0,0,"0x1fd, 0x201"
"    0x1e5: v1e5 = ADD v1bf(0x4), v1c3",0x1d1,v1e5,"0,v1bf,v1c3",ADD,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1e7: v1e7(0x60) = CONST ,0x1d1,v1e7,0,CONST,burnDmg,public,False,0x60,0,"0x1fd, 0x201"
"    0x1ea: v1ea(0x64) = ADD v1bf(0x4), v1e7(0x60)",0x1d1,v1ea,"0,v1bf,v1e7",ADD,burnDmg,public,False,0x64,0,"0x1fd, 0x201"
    0x1eb: v1eb(0x40) = CONST ,0x1d1,v1eb,0,CONST,burnDmg,public,False,0x40,0,"0x1fd, 0x201"
"    0x1ee: v1ee(0x44) = ADD v1bf(0x4), v1eb(0x40)",0x1d1,v1ee,"0,v1bf,v1eb",ADD,burnDmg,public,False,0x44,0,"0x1fd, 0x201"
    0x1ef: v1ef = CALLDATALOAD v1ee(0x44),0x1d1,v1ef,"0,v1ee",CALLDATALOAD,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1f0: v1f0(0x100000000) = CONST ,0x1d1,v1f0,0,CONST,burnDmg,public,False,0x100000000,0,"0x1fd, 0x201"
"    0x1f7: v1f7 = GT v1ef, v1f0(0x100000000)",0x1d1,v1f7,"0,v1ef,v1f0",GT,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1f8: v1f8 = ISZERO v1f7,0x1d1,v1f8,"0,v1f7",ISZERO,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1f9: v1f9(0x201) = CONST ,0x1d1,v1f9,0,CONST,burnDmg,public,False,0x201,0,"0x1fd, 0x201"
"    0x1fc: JUMPI v1f9(0x201), v1f8",0x1d1,0,"0,v1f9,v1f8",JUMPI,burnDmg,public,False,0,0,"0x1fd, 0x201"
    Begin block 0x1fd,0x1fd,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
"    prev=[0x1d1], succ=[]",0x1fd,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
    =================================,0x1fd,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
    0x1fd: v1fd(0x0) = CONST ,0x1fd,v1fd,0,CONST,burnDmg,public,False,0x0,0,"0x1fd, 0x201"
"    0x200: REVERT v1fd(0x0), v1fd(0x0)",0x1fd,0,"0,v1fd,v1fd",REVERT,burnDmg,public,False,0,0,"0x1fd, 0x201"
    Begin block 0x201,0x201,0,0,0,burnDmg,public,False,0,0,"0x1fd, 0x201"
"    prev=[0x1d1], succ=[0x20f, 0x213]",0x201,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
    =================================,0x201,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
"    0x203: v203 = ADD v1bf(0x4), v1ef",0x201,v203,"0,v1bf,v1ef",ADD,burnDmg,public,False,0,0,"0x20f, 0x213"
    0x205: v205(0x20) = CONST ,0x201,v205,0,CONST,burnDmg,public,False,0x20,0,"0x20f, 0x213"
"    0x208: v208 = ADD v203, v205(0x20)",0x201,v208,"0,v203,v205",ADD,burnDmg,public,False,0,0,"0x20f, 0x213"
"    0x209: v209 = GT v208, v1e5",0x201,v209,"0,v208,v1e5",GT,burnDmg,public,False,0,0,"0x20f, 0x213"
    0x20a: v20a = ISZERO v209,0x201,v20a,"0,v209",ISZERO,burnDmg,public,False,0,0,"0x20f, 0x213"
    0x20b: v20b(0x213) = CONST ,0x201,v20b,0,CONST,burnDmg,public,False,0x213,0,"0x20f, 0x213"
"    0x20e: JUMPI v20b(0x213), v20a",0x201,0,"0,v20b,v20a",JUMPI,burnDmg,public,False,0,0,"0x20f, 0x213"
    Begin block 0x20f,0x20f,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
"    prev=[0x201], succ=[]",0x20f,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
    =================================,0x20f,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
    0x20f: v20f(0x0) = CONST ,0x20f,v20f,0,CONST,burnDmg,public,False,0x0,0,"0x20f, 0x213"
"    0x212: REVERT v20f(0x0), v20f(0x0)",0x20f,0,"0,v20f,v20f",REVERT,burnDmg,public,False,0,0,"0x20f, 0x213"
    Begin block 0x213,0x213,0,0,0,burnDmg,public,False,0,0,"0x20f, 0x213"
"    prev=[0x201], succ=[0x231, 0x235]",0x213,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
    =================================,0x213,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
    0x215: v215 = CALLDATALOAD v203,0x213,v215,"0,v203",CALLDATALOAD,burnDmg,public,False,0,0,"0x231, 0x235"
    0x217: v217(0x20) = CONST ,0x213,v217,0,CONST,burnDmg,public,False,0x20,0,"0x231, 0x235"
"    0x219: v219 = ADD v217(0x20), v203",0x213,v219,"0,v217,v203",ADD,burnDmg,public,False,0,0,"0x231, 0x235"
    0x21c: v21c(0x20) = CONST ,0x213,v21c,0,CONST,burnDmg,public,False,0x20,0,"0x231, 0x235"
"    0x21f: v21f = MUL v215, v21c(0x20)",0x213,v21f,"0,v215,v21c",MUL,burnDmg,public,False,0,0,"0x231, 0x235"
"    0x221: v221 = ADD v219, v21f",0x213,v221,"0,v219,v21f",ADD,burnDmg,public,False,0,0,"0x231, 0x235"
"    0x222: v222 = GT v221, v1e5",0x213,v222,"0,v221,v1e5",GT,burnDmg,public,False,0,0,"0x231, 0x235"
    0x223: v223(0x100000000) = CONST ,0x213,v223,0,CONST,burnDmg,public,False,0x100000000,0,"0x231, 0x235"
"    0x22a: v22a = GT v215, v223(0x100000000)",0x213,v22a,"0,v215,v223",GT,burnDmg,public,False,0,0,"0x231, 0x235"
"    0x22b: v22b = OR v22a, v222",0x213,v22b,"0,v22a,v222",OR,burnDmg,public,False,0,0,"0x231, 0x235"
    0x22c: v22c = ISZERO v22b,0x213,v22c,"0,v22b",ISZERO,burnDmg,public,False,0,0,"0x231, 0x235"
    0x22d: v22d(0x235) = CONST ,0x213,v22d,0,CONST,burnDmg,public,False,0x235,0,"0x231, 0x235"
"    0x230: JUMPI v22d(0x235), v22c",0x213,0,"0,v22d,v22c",JUMPI,burnDmg,public,False,0,0,"0x231, 0x235"
    Begin block 0x231,0x231,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
"    prev=[0x213], succ=[]",0x231,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
    =================================,0x231,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
    0x231: v231(0x0) = CONST ,0x231,v231,0,CONST,burnDmg,public,False,0x0,0,"0x231, 0x235"
"    0x234: REVERT v231(0x0), v231(0x0)",0x231,0,"0,v231,v231",REVERT,burnDmg,public,False,0,0,"0x231, 0x235"
    Begin block 0x235,0x235,0,0,0,burnDmg,public,False,0,0,"0x231, 0x235"
"    prev=[0x213], succ=[0x3ef]",0x235,0,0,0,burnDmg,public,False,0,0,0x3ef
    =================================,0x235,0,0,0,burnDmg,public,False,0,0,0x3ef
    0x23a: v23a(0x20) = CONST ,0x235,v23a,0,CONST,burnDmg,public,False,0x20,0,0x3ef
"    0x23c: v23c = MUL v23a(0x20), v215",0x235,v23c,"0,v23a,v215",MUL,burnDmg,public,False,0,0,0x3ef
    0x23d: v23d(0x20) = CONST ,0x235,v23d,0,CONST,burnDmg,public,False,0x20,0,0x3ef
"    0x23f: v23f = ADD v23d(0x20), v23c",0x235,v23f,"0,v23d,v23c",ADD,burnDmg,public,False,0,0,0x3ef
    0x240: v240(0x40) = CONST ,0x235,v240,0,CONST,burnDmg,public,False,0x40,0,0x3ef
    0x242: v242 = MLOAD v240(0x40),0x235,v242,"0,v240",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x3ef
"    0x245: v245 = ADD v242, v23f",0x235,v245,"0,v242,v23f",ADD,burnDmg,public,False,0,0,0x3ef
    0x246: v246(0x40) = CONST ,0x235,v246,0,CONST,burnDmg,public,False,0x40,0,0x3ef
"    0x248: MSTORE v246(0x40), v245",0x235,0,"0,v246,v245",MSTORE,burnDmg,public,False,0,0,0x3ef
"    0x250: MSTORE v242, v215",0x235,burnDmg&m0x40,"0,v242,v215",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x3ef
    0x251: v251(0x20) = CONST ,0x235,v251,0,CONST,burnDmg,public,False,0x20,0,0x3ef
"    0x253: v253 = ADD v251(0x20), v242",0x235,v253,"0,v251,v242",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0x3ef
    0x256: v256(0x20) = CONST ,0x235,v256,0,CONST,burnDmg,public,False,0x20,0,0x3ef
"    0x258: v258 = MUL v256(0x20), v215",0x235,v258,"0,v256,v215",MUL,burnDmg,public,False,0,0,0x3ef
"    0x25c: CALLDATACOPY v253, v219, v258",0x235,0,"0,v253,v219,v258",CALLDATACOPY,burnDmg,public,False,0,0,0x3ef
    0x25d: v25d(0x0) = CONST ,0x235,v25d,0,CONST,burnDmg,public,False,0x0,0,0x3ef
"    0x260: v260 = ADD v253, v258",0x235,v260,"0,v253,v258",ADD,burnDmg,public,False,0,0,0x3ef
"    0x264: MSTORE v260, v25d(0x0)",0x235,0,"0,v260,v25d",MSTORE,burnDmg,public,False,0,0,0x3ef
    0x269: v269(0x3ef) = CONST ,0x235,v269,0,CONST,burnDmg,public,False,0x3ef,0,0x3ef
    0x272: JUMP v269(0x3ef),0x235,0,"0,v269",JUMP,burnDmg,public,False,0,0,0x3ef
    Begin block 0x3ef,0x3ef,0,0,0,burnDmg,public,False,0,0,0x3ef
"    prev=[0x235], succ=[0x40a, 0x440]",0x3ef,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
    =================================,0x3ef,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x3f0: v3f0(0x34) = CONST ,0x3ef,v3f0,0,CONST,burnDmg,public,False,0x34,0,"0x40a, 0x440"
    0x3f2: v3f2 = SLOAD v3f0(0x34),0x3ef,v3f2,"0,v3f0",SLOAD,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x3f4: v3f4 = MLOAD v242,0x3ef,v3f4,"0,v242",MLOAD,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x3f5: v3f5(0x0) = CONST ,0x3ef,v3f5,0,CONST,burnDmg,public,False,0x0,0,"0x40a, 0x440"
    0x3f8: v3f8(0x1) = CONST ,0x3ef,v3f8,0,CONST,burnDmg,public,False,0x1,0,"0x40a, 0x440"
    0x3fa: v3fa(0x1) = CONST ,0x3ef,v3fa,0,CONST,burnDmg,public,False,0x1,0,"0x40a, 0x440"
    0x3fc: v3fc(0xa0) = CONST ,0x3ef,v3fc,0,CONST,burnDmg,public,False,0xa0,0,"0x40a, 0x440"
"    0x3fe: v3fe(0x10000000000000000000000000000000000000000) = SHL v3fc(0xa0), v3fa(0x1)",0x3ef,v3fe,"0,v3fc,v3fa",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x40a, 0x440"
"    0x3ff: v3ff(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3fe(0x10000000000000000000000000000000000000000), v3f8(0x1)",0x3ef,v3ff,"0,v3fe,v3f8",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x40a, 0x440"
"    0x400: v400 = AND v3ff(0xffffffffffffffffffffffffffffffffffffffff), v3f2",0x3ef,v400,"0,v3ff,v3f2",AND,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x402: v402(0x2) = CONST ,0x3ef,v402,0,CONST,burnDmg,public,False,0x2,0,"0x40a, 0x440"
"    0x404: v404 = GT v402(0x2), v3f4",0x3ef,v404,"0,v402,v3f4",GT,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x405: v405 = ISZERO v404,0x3ef,v405,"0,v404",ISZERO,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x406: v406(0x440) = CONST ,0x3ef,v406,0,CONST,burnDmg,public,False,0x440,0,"0x40a, 0x440"
"    0x409: JUMPI v406(0x440), v405",0x3ef,0,"0,v406,v405",JUMPI,burnDmg,public,False,0,0,"0x40a, 0x440"
    Begin block 0x40a,0x40a,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
"    prev=[0x3ef], succ=[]",0x40a,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
    =================================,0x40a,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x40a: v40a(0x40) = CONST ,0x40a,v40a,0,CONST,burnDmg,public,False,0x40,0,"0x40a, 0x440"
    0x40c: v40c = MLOAD v40a(0x40),0x40a,v40c,"0,v40a",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x40a, 0x440"
    0x40d: v40d(0x461bcd) = CONST ,0x40a,v40d,0,CONST,burnDmg,public,False,0x461bcd,0,"0x40a, 0x440"
    0x411: v411(0xe5) = CONST ,0x40a,v411,0,CONST,burnDmg,public,False,0xe5,0,"0x40a, 0x440"
"    0x413: v413(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v411(0xe5), v40d(0x461bcd)",0x40a,v413,"0,v411,v40d",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x40a, 0x440"
"    0x415: MSTORE v40c, v413(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x40a,burnDmg&m0x40,"0,v40c,v413",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0x40a, 0x440"
    0x416: v416(0x4) = CONST ,0x40a,v416,0,CONST,burnDmg,public,False,0x4,0,"0x40a, 0x440"
"    0x418: v418 = ADD v416(0x4), v40c",0x40a,v418,"0,v416,v40c",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x40a, 0x440"
    0x41b: v41b(0x20) = CONST ,0x40a,v41b,0,CONST,burnDmg,public,False,0x20,0,"0x40a, 0x440"
"    0x41d: v41d = ADD v41b(0x20), v418",0x40a,v41d,"0,v41b,v418",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x40a, 0x440"
"    0x420: v420(0x20) = SUB v41d, v418",0x40a,v420,"0,v41d,v418",SUB,burnDmg,public,False,0x20,burnDmg&m0x40+0x4+0x20-0x20,"0x40a, 0x440"
"    0x422: MSTORE v418, v420(0x20)",0x40a,burnDmg&m0x40+0x4,"0,v418,v420",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x40a, 0x440"
    0x423: v423(0x24) = CONST ,0x40a,v423,0,CONST,burnDmg,public,False,0x24,0,"0x40a, 0x440"
"    0x426: MSTORE v41d, v423(0x24)",0x40a,burnDmg&m0x40+0x4+0x20,"0,v41d,v423",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x40a, 0x440"
    0x427: v427(0x20) = CONST ,0x40a,v427,0,CONST,burnDmg,public,False,0x20,0,"0x40a, 0x440"
"    0x429: v429 = ADD v427(0x20), v41d",0x40a,v429,"0,v427,v41d",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20,"0x40a, 0x440"
    0x42b: v42b(0xc59) = CONST ,0x40a,v42b,0,CONST,burnDmg,public,False,0xc59,0,"0x40a, 0x440"
    0x42e: v42e(0x24) = CONST ,0x40a,v42e,0,CONST,burnDmg,public,False,0x24,0,"0x40a, 0x440"
"    0x431: CODECOPY v429, v42b(0xc59), v42e(0x24)",0x40a,0,"0,v429,v42b,v42e",CODECOPY,burnDmg,public,False,0,0,"0x40a, 0x440"
    0x432: v432(0x40) = CONST ,0x40a,v432,0,CONST,burnDmg,public,False,0x40,0,"0x40a, 0x440"
"    0x434: v434 = ADD v432(0x40), v429",0x40a,v434,"0,v432,v429",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20+0x40,"0x40a, 0x440"
    0x438: v438(0x40) = CONST ,0x40a,v438,0,CONST,burnDmg,public,False,0x40,0,"0x40a, 0x440"
    0x43a: v43a = MLOAD v438(0x40),0x40a,v43a,"0,v438",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x40a, 0x440"
"    0x43d: v43d(0x84) = SUB v434, v43a",0x40a,v43d,"0,v434,v43a",SUB,burnDmg,public,False,0x84,burnDmg&m0x40+0x4+0x20+0x20+0x40-0x84,"0x40a, 0x440"
"    0x43f: REVERT v43a, v43d(0x84)",0x40a,0,"0,v43a,v43d",REVERT,burnDmg,public,False,0,0,"0x40a, 0x440"
    Begin block 0x440,0x440,0,0,0,burnDmg,public,False,0,0,"0x40a, 0x440"
"    prev=[0x3ef], succ=[0x456, 0x457]",0x440,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
    =================================,0x440,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
    0x442: v442(0x1) = CONST ,0x440,v442,0,CONST,burnDmg,public,False,0x1,0,"0x456, 0x457"
    0x444: v444(0x1) = CONST ,0x440,v444,0,CONST,burnDmg,public,False,0x1,0,"0x456, 0x457"
    0x446: v446(0xa0) = CONST ,0x440,v446,0,CONST,burnDmg,public,False,0xa0,0,"0x456, 0x457"
"    0x448: v448(0x10000000000000000000000000000000000000000) = SHL v446(0xa0), v444(0x1)",0x440,v448,"0,v446,v444",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x456, 0x457"
"    0x449: v449(0xffffffffffffffffffffffffffffffffffffffff) = SUB v448(0x10000000000000000000000000000000000000000), v442(0x1)",0x440,v449,"0,v448,v442",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x456, 0x457"
"    0x44a: v44a = AND v449(0xffffffffffffffffffffffffffffffffffffffff), v1dc",0x440,v44a,"0,v449,v1dc",AND,burnDmg,public,False,0,0,"0x456, 0x457"
    0x44c: v44c(0x0) = CONST ,0x440,v44c,0,CONST,burnDmg,public,False,0x0,0,"0x456, 0x457"
    0x44f: v44f = MLOAD v242,0x440,v44f,"0,v242",MLOAD,burnDmg,public,False,0,0,"0x456, 0x457"
"    0x451: v451 = LT v44c(0x0), v44f",0x440,v451,"0,v44c,v44f",LT,burnDmg,public,False,0,0,"0x456, 0x457"
    0x452: v452(0x457) = CONST ,0x440,v452,0,CONST,burnDmg,public,False,0x457,0,"0x456, 0x457"
"    0x455: JUMPI v452(0x457), v451",0x440,0,"0,v452,v451",JUMPI,burnDmg,public,False,0,0,"0x456, 0x457"
    Begin block 0x456,0x456,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
"    prev=[0x440], succ=[]",0x456,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
    =================================,0x456,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
    0x456: THROW ,0x456,0,0,THROW,burnDmg,public,False,0,0,"0x456, 0x457"
    Begin block 0x457,0x457,0,0,0,burnDmg,public,False,0,0,"0x456, 0x457"
"    prev=[0x440], succ=[0x46e, 0x4a4]",0x457,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    =================================,0x457,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    0x458: v458(0x20) = CONST ,0x457,v458,0,CONST,burnDmg,public,False,0x20,0,"0x46e, 0x4a4"
"    0x45a: v45a(0x0) = MUL v458(0x20), v44c(0x0)",0x457,v45a,"0,v458,v44c",MUL,burnDmg,public,False,0x0,0,"0x46e, 0x4a4"
    0x45b: v45b(0x20) = CONST ,0x457,v45b,0,CONST,burnDmg,public,False,0x20,0,"0x46e, 0x4a4"
"    0x45d: v45d(0x20) = ADD v45b(0x20), v45a(0x0)",0x457,v45d,"0,v45b,v45a",ADD,burnDmg,public,False,0x20,0,"0x46e, 0x4a4"
"    0x45e: v45e = ADD v45d(0x20), v242",0x457,v45e,"0,v45d,v242",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,"0x46e, 0x4a4"
    0x45f: v45f = MLOAD v45e,0x457,v45f,"0,v45e",MLOAD,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    0x460: v460(0x1) = CONST ,0x457,v460,0,CONST,burnDmg,public,False,0x1,0,"0x46e, 0x4a4"
    0x462: v462(0x1) = CONST ,0x457,v462,0,CONST,burnDmg,public,False,0x1,0,"0x46e, 0x4a4"
    0x464: v464(0xa0) = CONST ,0x457,v464,0,CONST,burnDmg,public,False,0xa0,0,"0x46e, 0x4a4"
"    0x466: v466(0x10000000000000000000000000000000000000000) = SHL v464(0xa0), v462(0x1)",0x457,v466,"0,v464,v462",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x46e, 0x4a4"
"    0x467: v467(0xffffffffffffffffffffffffffffffffffffffff) = SUB v466(0x10000000000000000000000000000000000000000), v460(0x1)",0x457,v467,"0,v466,v460",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x46e, 0x4a4"
"    0x468: v468 = AND v467(0xffffffffffffffffffffffffffffffffffffffff), v45f",0x457,v468,"0,v467,v45f",AND,burnDmg,public,False,0,0,"0x46e, 0x4a4"
"    0x469: v469 = EQ v468, v44a",0x457,v469,"0,v468,v44a",EQ,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    0x46a: v46a(0x4a4) = CONST ,0x457,v46a,0,CONST,burnDmg,public,False,0x4a4,0,"0x46e, 0x4a4"
"    0x46d: JUMPI v46a(0x4a4), v469",0x457,0,"0,v46a,v469",JUMPI,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    Begin block 0x46e,0x46e,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
"    prev=[0x457], succ=[]",0x46e,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    =================================,0x46e,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    0x46e: v46e(0x40) = CONST ,0x46e,v46e,0,CONST,burnDmg,public,False,0x40,0,"0x46e, 0x4a4"
    0x470: v470 = MLOAD v46e(0x40),0x46e,v470,"0,v46e",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x46e, 0x4a4"
    0x471: v471(0x461bcd) = CONST ,0x46e,v471,0,CONST,burnDmg,public,False,0x461bcd,0,"0x46e, 0x4a4"
    0x475: v475(0xe5) = CONST ,0x46e,v475,0,CONST,burnDmg,public,False,0xe5,0,"0x46e, 0x4a4"
"    0x477: v477(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v475(0xe5), v471(0x461bcd)",0x46e,v477,"0,v475,v471",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x46e, 0x4a4"
"    0x479: MSTORE v470, v477(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x46e,burnDmg&m0x40,"0,v470,v477",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0x46e, 0x4a4"
    0x47a: v47a(0x4) = CONST ,0x46e,v47a,0,CONST,burnDmg,public,False,0x4,0,"0x46e, 0x4a4"
"    0x47c: v47c = ADD v47a(0x4), v470",0x46e,v47c,"0,v47a,v470",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x46e, 0x4a4"
    0x47f: v47f(0x20) = CONST ,0x46e,v47f,0,CONST,burnDmg,public,False,0x20,0,"0x46e, 0x4a4"
"    0x481: v481 = ADD v47f(0x20), v47c",0x46e,v481,"0,v47f,v47c",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x46e, 0x4a4"
"    0x484: v484(0x20) = SUB v481, v47c",0x46e,v484,"0,v481,v47c",SUB,burnDmg,public,False,0x20,burnDmg&m0x40+0x4+0x20-0x20,"0x46e, 0x4a4"
"    0x486: MSTORE v47c, v484(0x20)",0x46e,burnDmg&m0x40+0x4,"0,v47c,v484",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x46e, 0x4a4"
    0x487: v487(0x28) = CONST ,0x46e,v487,0,CONST,burnDmg,public,False,0x28,0,"0x46e, 0x4a4"
"    0x48a: MSTORE v481, v487(0x28)",0x46e,burnDmg&m0x40+0x4+0x20,"0,v481,v487",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x46e, 0x4a4"
    0x48b: v48b(0x20) = CONST ,0x46e,v48b,0,CONST,burnDmg,public,False,0x20,0,"0x46e, 0x4a4"
"    0x48d: v48d = ADD v48b(0x20), v481",0x46e,v48d,"0,v48b,v481",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20,"0x46e, 0x4a4"
    0x48f: v48f(0xb87) = CONST ,0x46e,v48f,0,CONST,burnDmg,public,False,0xb87,0,"0x46e, 0x4a4"
    0x492: v492(0x28) = CONST ,0x46e,v492,0,CONST,burnDmg,public,False,0x28,0,"0x46e, 0x4a4"
"    0x495: CODECOPY v48d, v48f(0xb87), v492(0x28)",0x46e,0,"0,v48d,v48f,v492",CODECOPY,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    0x496: v496(0x40) = CONST ,0x46e,v496,0,CONST,burnDmg,public,False,0x40,0,"0x46e, 0x4a4"
"    0x498: v498 = ADD v496(0x40), v48d",0x46e,v498,"0,v496,v48d",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20+0x40,"0x46e, 0x4a4"
    0x49c: v49c(0x40) = CONST ,0x46e,v49c,0,CONST,burnDmg,public,False,0x40,0,"0x46e, 0x4a4"
    0x49e: v49e = MLOAD v49c(0x40),0x46e,v49e,"0,v49c",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x46e, 0x4a4"
"    0x4a1: v4a1(0x84) = SUB v498, v49e",0x46e,v4a1,"0,v498,v49e",SUB,burnDmg,public,False,0x84,burnDmg&m0x40+0x4+0x20+0x20+0x40-0x84,"0x46e, 0x4a4"
"    0x4a3: REVERT v49e, v4a1(0x84)",0x46e,0,"0,v49e,v4a1",REVERT,burnDmg,public,False,0,0,"0x46e, 0x4a4"
    Begin block 0x4a4,0x4a4,0,0,0,burnDmg,public,False,0,0,"0x46e, 0x4a4"
"    prev=[0x457], succ=[0x4bd, 0x4be]",0x4a4,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    =================================,0x4a4,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    0x4a6: v4a6(0x1) = CONST ,0x4a4,v4a6,0,CONST,burnDmg,public,False,0x1,0,"0x4bd, 0x4be"
    0x4a8: v4a8(0x1) = CONST ,0x4a4,v4a8,0,CONST,burnDmg,public,False,0x1,0,"0x4bd, 0x4be"
    0x4aa: v4aa(0xa0) = CONST ,0x4a4,v4aa,0,CONST,burnDmg,public,False,0xa0,0,"0x4bd, 0x4be"
"    0x4ac: v4ac(0x10000000000000000000000000000000000000000) = SHL v4aa(0xa0), v4a8(0x1)",0x4a4,v4ac,"0,v4aa,v4a8",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x4bd, 0x4be"
"    0x4ad: v4ad(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ac(0x10000000000000000000000000000000000000000), v4a6(0x1)",0x4a4,v4ad,"0,v4ac,v4a6",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4bd, 0x4be"
"    0x4ae: v4ae = AND v4ad(0xffffffffffffffffffffffffffffffffffffffff), v400",0x4a4,v4ae,"0,v4ad,v400",AND,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    0x4b0: v4b0(0x1) = CONST ,0x4a4,v4b0,0,CONST,burnDmg,public,False,0x1,0,"0x4bd, 0x4be"
    0x4b3: v4b3 = MLOAD v242,0x4a4,v4b3,"0,v242",MLOAD,burnDmg,public,False,0,0,"0x4bd, 0x4be"
"    0x4b4: v4b4 = SUB v4b3, v4b0(0x1)",0x4a4,v4b4,"0,v4b3,v4b0",SUB,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    0x4b6: v4b6 = MLOAD v242,0x4a4,v4b6,"0,v242",MLOAD,burnDmg,public,False,0,0,"0x4bd, 0x4be"
"    0x4b8: v4b8 = LT v4b4, v4b6",0x4a4,v4b8,"0,v4b4,v4b6",LT,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    0x4b9: v4b9(0x4be) = CONST ,0x4a4,v4b9,0,CONST,burnDmg,public,False,0x4be,0,"0x4bd, 0x4be"
"    0x4bc: JUMPI v4b9(0x4be), v4b8",0x4a4,0,"0,v4b9,v4b8",JUMPI,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    Begin block 0x4bd,0x4bd,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
"    prev=[0x4a4], succ=[]",0x4bd,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    =================================,0x4bd,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    0x4bd: THROW ,0x4bd,0,0,THROW,burnDmg,public,False,0,0,"0x4bd, 0x4be"
    Begin block 0x4be,0x4be,0,0,0,burnDmg,public,False,0,0,"0x4bd, 0x4be"
"    prev=[0x4a4], succ=[0x4d5, 0x50b]",0x4be,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    =================================,0x4be,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4bf: v4bf(0x20) = CONST ,0x4be,v4bf,0,CONST,burnDmg,public,False,0x20,0,"0x4d5, 0x50b"
"    0x4c1: v4c1 = MUL v4bf(0x20), v4b4",0x4be,v4c1,"0,v4bf,v4b4",MUL,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4c2: v4c2(0x20) = CONST ,0x4be,v4c2,0,CONST,burnDmg,public,False,0x20,0,"0x4d5, 0x50b"
"    0x4c4: v4c4 = ADD v4c2(0x20), v4c1",0x4be,v4c4,"0,v4c2,v4c1",ADD,burnDmg,public,False,0,0,"0x4d5, 0x50b"
"    0x4c5: v4c5 = ADD v4c4, v242",0x4be,v4c5,"0,v4c4,v242",ADD,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4c6: v4c6 = MLOAD v4c5,0x4be,v4c6,"0,v4c5",MLOAD,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4c7: v4c7(0x1) = CONST ,0x4be,v4c7,0,CONST,burnDmg,public,False,0x1,0,"0x4d5, 0x50b"
    0x4c9: v4c9(0x1) = CONST ,0x4be,v4c9,0,CONST,burnDmg,public,False,0x1,0,"0x4d5, 0x50b"
    0x4cb: v4cb(0xa0) = CONST ,0x4be,v4cb,0,CONST,burnDmg,public,False,0xa0,0,"0x4d5, 0x50b"
"    0x4cd: v4cd(0x10000000000000000000000000000000000000000) = SHL v4cb(0xa0), v4c9(0x1)",0x4be,v4cd,"0,v4cb,v4c9",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x4d5, 0x50b"
"    0x4ce: v4ce(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4cd(0x10000000000000000000000000000000000000000), v4c7(0x1)",0x4be,v4ce,"0,v4cd,v4c7",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x4d5, 0x50b"
"    0x4cf: v4cf = AND v4ce(0xffffffffffffffffffffffffffffffffffffffff), v4c6",0x4be,v4cf,"0,v4ce,v4c6",AND,burnDmg,public,False,0,0,"0x4d5, 0x50b"
"    0x4d0: v4d0 = EQ v4cf, v4ae",0x4be,v4d0,"0,v4cf,v4ae",EQ,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4d1: v4d1(0x50b) = CONST ,0x4be,v4d1,0,CONST,burnDmg,public,False,0x50b,0,"0x4d5, 0x50b"
"    0x4d4: JUMPI v4d1(0x50b), v4d0",0x4be,0,"0,v4d1,v4d0",JUMPI,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    Begin block 0x4d5,0x4d5,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
"    prev=[0x4be], succ=[]",0x4d5,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    =================================,0x4d5,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4d5: v4d5(0x40) = CONST ,0x4d5,v4d5,0,CONST,burnDmg,public,False,0x40,0,"0x4d5, 0x50b"
    0x4d7: v4d7 = MLOAD v4d5(0x40),0x4d5,v4d7,"0,v4d5",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x4d5, 0x50b"
    0x4d8: v4d8(0x461bcd) = CONST ,0x4d5,v4d8,0,CONST,burnDmg,public,False,0x461bcd,0,"0x4d5, 0x50b"
    0x4dc: v4dc(0xe5) = CONST ,0x4d5,v4dc,0,CONST,burnDmg,public,False,0xe5,0,"0x4d5, 0x50b"
"    0x4de: v4de(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v4dc(0xe5), v4d8(0x461bcd)",0x4d5,v4de,"0,v4dc,v4d8",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x4d5, 0x50b"
"    0x4e0: MSTORE v4d7, v4de(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x4d5,burnDmg&m0x40,"0,v4d7,v4de",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0x4d5, 0x50b"
    0x4e1: v4e1(0x4) = CONST ,0x4d5,v4e1,0,CONST,burnDmg,public,False,0x4,0,"0x4d5, 0x50b"
"    0x4e3: v4e3 = ADD v4e1(0x4), v4d7",0x4d5,v4e3,"0,v4e1,v4d7",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x4d5, 0x50b"
    0x4e6: v4e6(0x20) = CONST ,0x4d5,v4e6,0,CONST,burnDmg,public,False,0x20,0,"0x4d5, 0x50b"
"    0x4e8: v4e8 = ADD v4e6(0x20), v4e3",0x4d5,v4e8,"0,v4e6,v4e3",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x4d5, 0x50b"
"    0x4eb: v4eb(0x20) = SUB v4e8, v4e3",0x4d5,v4eb,"0,v4e8,v4e3",SUB,burnDmg,public,False,0x20,burnDmg&m0x40+0x4+0x20-0x20,"0x4d5, 0x50b"
"    0x4ed: MSTORE v4e3, v4eb(0x20)",0x4d5,burnDmg&m0x40+0x4,"0,v4e3,v4eb",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x4d5, 0x50b"
    0x4ee: v4ee(0x28) = CONST ,0x4d5,v4ee,0,CONST,burnDmg,public,False,0x28,0,"0x4d5, 0x50b"
"    0x4f1: MSTORE v4e8, v4ee(0x28)",0x4d5,burnDmg&m0x40+0x4+0x20,"0,v4e8,v4ee",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x4d5, 0x50b"
    0x4f2: v4f2(0x20) = CONST ,0x4d5,v4f2,0,CONST,burnDmg,public,False,0x20,0,"0x4d5, 0x50b"
"    0x4f4: v4f4 = ADD v4f2(0x20), v4e8",0x4d5,v4f4,"0,v4f2,v4e8",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20,"0x4d5, 0x50b"
    0x4f6: v4f6(0xbaf) = CONST ,0x4d5,v4f6,0,CONST,burnDmg,public,False,0xbaf,0,"0x4d5, 0x50b"
    0x4f9: v4f9(0x28) = CONST ,0x4d5,v4f9,0,CONST,burnDmg,public,False,0x28,0,"0x4d5, 0x50b"
"    0x4fc: CODECOPY v4f4, v4f6(0xbaf), v4f9(0x28)",0x4d5,0,"0,v4f4,v4f6,v4f9",CODECOPY,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    0x4fd: v4fd(0x40) = CONST ,0x4d5,v4fd,0,CONST,burnDmg,public,False,0x40,0,"0x4d5, 0x50b"
"    0x4ff: v4ff = ADD v4fd(0x40), v4f4",0x4d5,v4ff,"0,v4fd,v4f4",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20+0x40,"0x4d5, 0x50b"
    0x503: v503(0x40) = CONST ,0x4d5,v503,0,CONST,burnDmg,public,False,0x40,0,"0x4d5, 0x50b"
    0x505: v505 = MLOAD v503(0x40),0x4d5,v505,"0,v503",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x4d5, 0x50b"
"    0x508: v508(0x84) = SUB v4ff, v505",0x4d5,v508,"0,v4ff,v505",SUB,burnDmg,public,False,0x84,burnDmg&m0x40+0x4+0x20+0x20+0x40-0x84,"0x4d5, 0x50b"
"    0x50a: REVERT v505, v508(0x84)",0x4d5,0,"0,v505,v508",REVERT,burnDmg,public,False,0,0,"0x4d5, 0x50b"
    Begin block 0x50b,0x50b,0,0,0,burnDmg,public,False,0,0,"0x4d5, 0x50b"
"    prev=[0x4be], succ=[0x823B0x50b]",0x50b,0,0,0,burnDmg,public,False,0,0,0x823B0x50b
    =================================,0x50b,0,0,0,burnDmg,public,False,0,0,0x823B0x50b
    0x50c: v50c(0x526) = CONST ,0x50b,v50c,0,CONST,burnDmg,public,False,0x526,0,0x823B0x50b
    0x50f: v50f(0x1) = CONST ,0x50b,v50f,0,CONST,burnDmg,public,False,0x1,0,0x823B0x50b
    0x511: v511(0x1) = CONST ,0x50b,v511,0,CONST,burnDmg,public,False,0x1,0,0x823B0x50b
    0x513: v513(0xa0) = CONST ,0x50b,v513,0,CONST,burnDmg,public,False,0xa0,0,0x823B0x50b
"    0x515: v515(0x10000000000000000000000000000000000000000) = SHL v513(0xa0), v511(0x1)",0x50b,v515,"0,v513,v511",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,0x823B0x50b
"    0x516: v516(0xffffffffffffffffffffffffffffffffffffffff) = SUB v515(0x10000000000000000000000000000000000000000), v50f(0x1)",0x50b,v516,"0,v515,v50f",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x823B0x50b
"    0x518: v518 = AND v1dc, v516(0xffffffffffffffffffffffffffffffffffffffff)",0x50b,v518,"0,v1dc,v516",AND,burnDmg,public,False,0,0,0x823B0x50b
    0x519: v519 = CALLER ,0x50b,v519,0,CALLER,burnDmg,public,True,0,0,0x823B0x50b
    0x51a: v51a = ADDRESS ,0x50b,v51a,0,ADDRESS,burnDmg,public,False,0,0,0x823B0x50b
    0x51c: v51c(0xffffffff) = CONST ,0x50b,v51c,0,CONST,burnDmg,public,False,0xffffffff,0,0x823B0x50b
    0x521: v521(0x823) = CONST ,0x50b,v521,0,CONST,burnDmg,public,False,0x823,0,0x823B0x50b
"    0x524: v524(0x823) = AND v521(0x823), v51c(0xffffffff)",0x50b,v524,"0,v521,v51c",AND,burnDmg,public,False,0x823,0,0x823B0x50b
"    0x525: JUMP v524(0x823), v1e2, v51a, v519, v518, v50c(0x526)",0x50b,0,"0,v524,v1e2,v51a,v519,v518,v50c",JUMP,burnDmg,public,False,0,0,0x823B0x50b
    Begin block 0x823B0x50b,0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x823B0x50b
"    prev=[0x50b], succ=[0x992B0x823B0x50b]",0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x992B0x823B0x50b
    =================================,0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x992B0x823B0x50b
    0x824S0x50b: v824V50b(0x40) = CONST ,0x823B0x50b,v824V50b,0,CONST,burnDmg,public,False,0x40,0,0x992B0x823B0x50b
    0x827S0x50b: v827V50b = MLOAD v824V50b(0x40),0x823B0x50b,v827V50b,"0,v824V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x992B0x823B0x50b
    0x828S0x50b: v828V50b(0x1) = CONST ,0x823B0x50b,v828V50b,0,CONST,burnDmg,public,False,0x1,0,0x992B0x823B0x50b
    0x82aS0x50b: v82aV50b(0x1) = CONST ,0x823B0x50b,v82aV50b,0,CONST,burnDmg,public,False,0x1,0,0x992B0x823B0x50b
    0x82cS0x50b: v82cV50b(0xa0) = CONST ,0x823B0x50b,v82cV50b,0,CONST,burnDmg,public,False,0xa0,0,0x992B0x823B0x50b
"    0x82eS0x50b: v82eV50b(0x10000000000000000000000000000000000000000) = SHL v82cV50b(0xa0), v82aV50b(0x1)",0x823B0x50b,v82eV50b,"0,v82cV50b,v82aV50b",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,0x992B0x823B0x50b
"    0x82fS0x50b: v82fV50b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v82eV50b(0x10000000000000000000000000000000000000000), v828V50b(0x1)",0x823B0x50b,v82fV50b,"0,v82eV50b,v828V50b",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x992B0x823B0x50b
"    0x832S0x50b: v832V50b = AND v82fV50b(0xffffffffffffffffffffffffffffffffffffffff), v519",0x823B0x50b,v832V50b,"0,v82fV50b,v519",AND,burnDmg,public,True,0,0,0x992B0x823B0x50b
    0x833S0x50b: v833V50b(0x24) = CONST ,0x823B0x50b,v833V50b,0,CONST,burnDmg,public,False,0x24,0,0x992B0x823B0x50b
"    0x836S0x50b: v836V50b = ADD v827V50b, v833V50b(0x24)",0x823B0x50b,v836V50b,"0,v827V50b,v833V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x24,0x992B0x823B0x50b
"    0x837S0x50b: MSTORE v836V50b, v832V50b",0x823B0x50b,burnDmg&m0x40+0x24,"0,v836V50b,v832V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x24,0x992B0x823B0x50b
"    0x839S0x50b: v839V50b = AND v51a, v82fV50b(0xffffffffffffffffffffffffffffffffffffffff)",0x823B0x50b,v839V50b,"0,v51a,v82fV50b",AND,burnDmg,public,False,0,0,0x992B0x823B0x50b
    0x83aS0x50b: v83aV50b(0x44) = CONST ,0x823B0x50b,v83aV50b,0,CONST,burnDmg,public,False,0x44,0,0x992B0x823B0x50b
"    0x83dS0x50b: v83dV50b = ADD v827V50b, v83aV50b(0x44)",0x823B0x50b,v83dV50b,"0,v827V50b,v83aV50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x44,0x992B0x823B0x50b
"    0x83eS0x50b: MSTORE v83dV50b, v839V50b",0x823B0x50b,burnDmg&m0x40+0x44,"0,v83dV50b,v839V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x44,0x992B0x823B0x50b
    0x83fS0x50b: v83fV50b(0x64) = CONST ,0x823B0x50b,v83fV50b,0,CONST,burnDmg,public,False,0x64,0,0x992B0x823B0x50b
"    0x843S0x50b: v843V50b = ADD v827V50b, v83fV50b(0x64)",0x823B0x50b,v843V50b,"0,v827V50b,v83fV50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x64,0x992B0x823B0x50b
"    0x846S0x50b: MSTORE v843V50b, v1e2",0x823B0x50b,burnDmg&m0x40+0x64,"0,v843V50b,v1e2",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x64,0x992B0x823B0x50b
    0x848S0x50b: v848V50b = MLOAD v824V50b(0x40),0x823B0x50b,v848V50b,"0,v824V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x992B0x823B0x50b
"    0x84bS0x50b: v84bV50b(0x0) = SUB v827V50b, v848V50b",0x823B0x50b,v84bV50b,"0,v827V50b,v848V50b",SUB,burnDmg,public,False,0x0,burnDmg&m0x40-0x0,0x992B0x823B0x50b
"    0x84eS0x50b: v84eV50b(0x64) = ADD v83fV50b(0x64), v84bV50b(0x0)",0x823B0x50b,v84eV50b,"0,v83fV50b,v84bV50b",ADD,burnDmg,public,False,0x64,burnDmg&m0x40-0x0+0x64,0x992B0x823B0x50b
"    0x850S0x50b: MSTORE v848V50b, v84eV50b(0x64)",0x823B0x50b,burnDmg&m0x40,"0,v848V50b,v84eV50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x992B0x823B0x50b
    0x851S0x50b: v851V50b(0x84) = CONST ,0x823B0x50b,v851V50b,0,CONST,burnDmg,public,False,0x84,0,0x992B0x823B0x50b
"    0x855S0x50b: v855V50b = ADD v827V50b, v851V50b(0x84)",0x823B0x50b,v855V50b,"0,v827V50b,v851V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x84,0x992B0x823B0x50b
"    0x858S0x50b: MSTORE v824V50b(0x40), v855V50b",0x823B0x50b,0,"0,v824V50b,v855V50b",MSTORE,burnDmg,public,False,0,0,0x992B0x823B0x50b
    0x859S0x50b: v859V50b(0x20) = CONST ,0x823B0x50b,v859V50b,0,CONST,burnDmg,public,False,0x20,0,0x992B0x823B0x50b
"    0x85cS0x50b: v85cV50b = ADD v848V50b, v859V50b(0x20)",0x823B0x50b,v85cV50b,"0,v848V50b,v859V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0x992B0x823B0x50b
    0x85eS0x50b: v85eV50b = MLOAD v85cV50b,0x823B0x50b,v85eV50b,"0,v85cV50b",MLOAD,burnDmg,public,False,0,0,0x992B0x823B0x50b
    0x85fS0x50b: v85fV50b(0x1) = CONST ,0x823B0x50b,v85fV50b,0,CONST,burnDmg,public,False,0x1,0,0x992B0x823B0x50b
    0x861S0x50b: v861V50b(0x1) = CONST ,0x823B0x50b,v861V50b,0,CONST,burnDmg,public,False,0x1,0,0x992B0x823B0x50b
    0x863S0x50b: v863V50b(0xe0) = CONST ,0x823B0x50b,v863V50b,0,CONST,burnDmg,public,False,0xe0,0,0x992B0x823B0x50b
"    0x865S0x50b: v865V50b(0x100000000000000000000000000000000000000000000000000000000) = SHL v863V50b(0xe0), v861V50b(0x1)",0x823B0x50b,v865V50b,"0,v863V50b,v861V50b",SHL,burnDmg,public,False,0x100000000000000000000000000000000000000000000000000000000,0,0x992B0x823B0x50b
"    0x866S0x50b: v866V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v865V50b(0x100000000000000000000000000000000000000000000000000000000), v85fV50b(0x1)",0x823B0x50b,v866V50b,"0,v865V50b,v85fV50b",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x992B0x823B0x50b
"    0x867S0x50b: v867V50b = AND v866V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v85eV50b",0x823B0x50b,v867V50b,"0,v866V50b,v85eV50b",AND,burnDmg,public,False,0,0,0x992B0x823B0x50b
    0x868S0x50b: v868V50b(0x23b872dd) = CONST ,0x823B0x50b,v868V50b,0,CONST,burnDmg,public,False,0x23b872dd,0,0x992B0x823B0x50b
    0x86dS0x50b: v86dV50b(0xe0) = CONST ,0x823B0x50b,v86dV50b,0,CONST,burnDmg,public,False,0xe0,0,0x992B0x823B0x50b
"    0x86fS0x50b: v86fV50b(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v86dV50b(0xe0), v868V50b(0x23b872dd)",0x823B0x50b,v86fV50b,"0,v86dV50b,v868V50b",SHL,burnDmg,public,False,0x23b872dd00000000000000000000000000000000000000000000000000000000,0,0x992B0x823B0x50b
"    0x870S0x50b: v870V50b = OR v86fV50b(0x23b872dd00000000000000000000000000000000000000000000000000000000), v867V50b",0x823B0x50b,v870V50b,"0,v86fV50b,v867V50b",OR,burnDmg,public,False,0,0,0x992B0x823B0x50b
"    0x872S0x50b: MSTORE v85cV50b, v870V50b",0x823B0x50b,burnDmg&m0x40+0x20,"0,v85cV50b,v870V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x20,0x992B0x823B0x50b
    0x873S0x50b: v873V50b(0xe4b) = CONST ,0x823B0x50b,v873V50b,0,CONST,burnDmg,public,False,0xe4b,0,0x992B0x823B0x50b
    0x879S0x50b: v879V50b(0x992) = CONST ,0x823B0x50b,v879V50b,0,CONST,burnDmg,public,False,0x992,0,0x992B0x823B0x50b
"    0x87cS0x50b: JUMP v879V50b(0x992), v848V50b, v518, v873V50b(0xe4b)",0x823B0x50b,0,"0,v879V50b,v848V50b,v518,v873V50b",JUMP,burnDmg,public,False,0,0,0x992B0x823B0x50b
    Begin block 0x992B0x823B0x50b,0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x992B0x823B0x50b
"    prev=[0x823B0x50b], succ=[0xb4aB0x992B0x823B0x50b]",0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb4aB0x992B0x823B0x50b
    =================================,0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb4aB0x992B0x823B0x50b
    0x993S0x823S0x50b: v993V823V50b(0x9a4) = CONST ,0x992B0x823B0x50b,v993V823V50b,0,CONST,burnDmg,public,False,0x9a4,0,0xb4aB0x992B0x823B0x50b
    0x997S0x823S0x50b: v997V823V50b(0x1) = CONST ,0x992B0x823B0x50b,v997V823V50b,0,CONST,burnDmg,public,False,0x1,0,0xb4aB0x992B0x823B0x50b
    0x999S0x823S0x50b: v999V823V50b(0x1) = CONST ,0x992B0x823B0x50b,v999V823V50b,0,CONST,burnDmg,public,False,0x1,0,0xb4aB0x992B0x823B0x50b
    0x99bS0x823S0x50b: v99bV823V50b(0xa0) = CONST ,0x992B0x823B0x50b,v99bV823V50b,0,CONST,burnDmg,public,False,0xa0,0,0xb4aB0x992B0x823B0x50b
"    0x99dS0x823S0x50b: v99dV823V50b(0x10000000000000000000000000000000000000000) = SHL v99bV823V50b(0xa0), v999V823V50b(0x1)",0x992B0x823B0x50b,v99dV823V50b,"0,v99bV823V50b,v999V823V50b",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,0xb4aB0x992B0x823B0x50b
"    0x99eS0x823S0x50b: v99eV823V50b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v99dV823V50b(0x10000000000000000000000000000000000000000), v997V823V50b(0x1)",0x992B0x823B0x50b,v99eV823V50b,"0,v99dV823V50b,v997V823V50b",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xb4aB0x992B0x823B0x50b
"    0x99fS0x823S0x50b: v99fV823V50b = AND v99eV823V50b(0xffffffffffffffffffffffffffffffffffffffff), v518",0x992B0x823B0x50b,v99fV823V50b,"0,v99eV823V50b,v518",AND,burnDmg,public,False,0,0,0xb4aB0x992B0x823B0x50b
    0x9a0S0x823S0x50b: v9a0V823V50b(0xb4a) = CONST ,0x992B0x823B0x50b,v9a0V823V50b,0,CONST,burnDmg,public,False,0xb4a,0,0xb4aB0x992B0x823B0x50b
    0x9a3S0x823S0x50b: JUMP v9a0V823V50b(0xb4a),0x992B0x823B0x50b,0,"0,v9a0V823V50b",JUMP,burnDmg,public,False,0,0,0xb4aB0x992B0x823B0x50b
    Begin block 0xb4aB0x992B0x823B0x50b,0xb4aB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb4aB0x992B0x823B0x50b
"    prev=[0x992B0x823B0x50b], succ=[0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b]",0xb4aB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    =================================,0xb4aB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb4bS0x992S0x823S0x50b: vb4bV992V823V50b(0x0) = CONST ,0xb4aB0x992B0x823B0x50b,vb4bV992V823V50b,0,CONST,burnDmg,public,False,0x0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb4eS0x992S0x823S0x50b: vb4eV992V823V50b = EXTCODEHASH v99fV823V50b,0xb4aB0x992B0x823B0x50b,vb4eV992V823V50b,"0,v99fV823V50b",EXTCODEHASH,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb4fS0x992S0x823S0x50b: vb4fV992V823V50b(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST ,0xb4aB0x992B0x823B0x50b,vb4fV992V823V50b,0,CONST,burnDmg,public,False,0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb71S0x992S0x823S0x50b: vb71V992V823V50b = ISZERO vb4eV992V823V50b,0xb4aB0x992B0x823B0x50b,vb71V992V823V50b,"0,vb4eV992V823V50b",ISZERO,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb73S0x992S0x823S0x50b: vb73V992V823V50b = ISZERO vb71V992V823V50b,0xb4aB0x992B0x823B0x50b,vb73V992V823V50b,"0,vb71V992V823V50b",ISZERO,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    0xb75S0x992S0x823S0x50b: vb75V992V823V50b(0xb7e) = CONST ,0xb4aB0x992B0x823B0x50b,vb75V992V823V50b,0,CONST,burnDmg,public,False,0xb7e,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
"    0xb78S0x992S0x823S0x50b: JUMPI vb75V992V823V50b(0xb7e), vb71V992V823V50b",0xb4aB0x992B0x823B0x50b,0,"0,vb75V992V823V50b,vb71V992V823V50b",JUMPI,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
    Begin block 0xb7eB0x992B0x823B0x50b,0xb7eB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb7eB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b"
"    prev=[0xb4aB0x992B0x823B0x50b, 0xb79B0x992B0x823B0x50b], succ=[0x9a40x992B0x823B0x50b]",0xb7eB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x9a40x992B0x823B0x50b
    =================================,0xb7eB0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x9a40x992B0x823B0x50b
"    0xb7e_0x0S0x992S0x823S0x50b: vb7e_0V992V823V50b = PHI vb73V992V823V50b, vb7dV992V823V50b",0xb7eB0x992B0x823B0x50b,vb7e_0V992V823V50b,"0,vb73V992V823V50b,vb7dV992V823V50b",PHI,burnDmg,public,False,0,0,0x9a40x992B0x823B0x50b
    0xb85S0x992S0x823S0x50b: JUMP v993V823V50b(0x9a4),0xb7eB0x992B0x823B0x50b,0,"0,v993V823V50b",JUMP,burnDmg,public,False,0,0,0x9a40x992B0x823B0x50b
    Begin block 0x9a40x992B0x823B0x50b,0x9a40x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x9a40x992B0x823B0x50b
"    prev=[0xb7eB0x992B0x823B0x50b], succ=[0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b]",0x9a40x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    =================================,0x9a40x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9a50x992S0x823S0x50b: v9929a5V823V50b(0x9f5) = CONST ,0x9a40x992B0x823B0x50b,v9929a5V823V50b,0,CONST,burnDmg,public,False,0x9f5,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9a80x992S0x823S0x50b: JUMPI v9929a5V823V50b(0x9f5), vb7e_0V992V823V50b",0x9a40x992B0x823B0x50b,0,"0,v9929a5V823V50b,vb7e_0V992V823V50b",JUMPI,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    Begin block 0x9a90x992B0x823B0x50b,0x9a90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    prev=[0x9a40x992B0x823B0x50b], succ=[]",0x9a90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    =================================,0x9a90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9a90x992S0x823S0x50b: v9929a9V823V50b(0x40) = CONST ,0x9a90x992B0x823B0x50b,v9929a9V823V50b,0,CONST,burnDmg,public,False,0x40,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9ac0x992S0x823S0x50b: v9929acV823V50b = MLOAD v9929a9V823V50b(0x40),0x9a90x992B0x823B0x50b,v9929acV823V50b,"0,v9929a9V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9ad0x992S0x823S0x50b: v9929adV823V50b(0x461bcd) = CONST ,0x9a90x992B0x823B0x50b,v9929adV823V50b,0,CONST,burnDmg,public,False,0x461bcd,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9b10x992S0x823S0x50b: v9929b1V823V50b(0xe5) = CONST ,0x9a90x992B0x823B0x50b,v9929b1V823V50b,0,CONST,burnDmg,public,False,0xe5,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9b30x992S0x823S0x50b: v9929b3V823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v9929b1V823V50b(0xe5), v9929adV823V50b(0x461bcd)",0x9a90x992B0x823B0x50b,v9929b3V823V50b,"0,v9929b1V823V50b,v9929adV823V50b",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9b50x992S0x823S0x50b: MSTORE v9929acV823V50b, v9929b3V823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x9a90x992B0x823B0x50b,burnDmg&m0x40,"0,v9929acV823V50b,v9929b3V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9b60x992S0x823S0x50b: v9929b6V823V50b(0x20) = CONST ,0x9a90x992B0x823B0x50b,v9929b6V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9b80x992S0x823S0x50b: v9929b8V823V50b(0x4) = CONST ,0x9a90x992B0x823B0x50b,v9929b8V823V50b,0,CONST,burnDmg,public,False,0x4,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9bb0x992S0x823S0x50b: v9929bbV823V50b = ADD v9929acV823V50b, v9929b8V823V50b(0x4)",0x9a90x992B0x823B0x50b,v9929bbV823V50b,"0,v9929acV823V50b,v9929b8V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9bc0x992S0x823S0x50b: MSTORE v9929bbV823V50b, v9929b6V823V50b(0x20)",0x9a90x992B0x823B0x50b,burnDmg&m0x40+0x4,"0,v9929bbV823V50b,v9929b6V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9bd0x992S0x823S0x50b: v9929bdV823V50b(0x1f) = CONST ,0x9a90x992B0x823B0x50b,v9929bdV823V50b,0,CONST,burnDmg,public,False,0x1f,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9bf0x992S0x823S0x50b: v9929bfV823V50b(0x24) = CONST ,0x9a90x992B0x823B0x50b,v9929bfV823V50b,0,CONST,burnDmg,public,False,0x24,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9c20x992S0x823S0x50b: v9929c2V823V50b = ADD v9929acV823V50b, v9929bfV823V50b(0x24)",0x9a90x992B0x823B0x50b,v9929c2V823V50b,"0,v9929acV823V50b,v9929bfV823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x24,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9c30x992S0x823S0x50b: MSTORE v9929c2V823V50b, v9929bdV823V50b(0x1f)",0x9a90x992B0x823B0x50b,burnDmg&m0x40+0x24,"0,v9929c2V823V50b,v9929bdV823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x24,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9c40x992S0x823S0x50b: v9929c4V823V50b(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400) = CONST ,0x9a90x992B0x823B0x50b,v9929c4V823V50b,0,CONST,burnDmg,public,False,0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9e50x992S0x823S0x50b: v9929e5V823V50b(0x44) = CONST ,0x9a90x992B0x823B0x50b,v9929e5V823V50b,0,CONST,burnDmg,public,False,0x44,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9e80x992S0x823S0x50b: v9929e8V823V50b = ADD v9929acV823V50b, v9929e5V823V50b(0x44)",0x9a90x992B0x823B0x50b,v9929e8V823V50b,"0,v9929acV823V50b,v9929e5V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x44,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9e90x992S0x823S0x50b: MSTORE v9929e8V823V50b, v9929c4V823V50b(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400)",0x9a90x992B0x823B0x50b,burnDmg&m0x40+0x44,"0,v9929e8V823V50b,v9929c4V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x44,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9eb0x992S0x823S0x50b: v9929ebV823V50b = MLOAD v9929a9V823V50b(0x40),0x9a90x992B0x823B0x50b,v9929ebV823V50b,"0,v9929a9V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9ef0x992S0x823S0x50b: v9929efV823V50b(0x0) = SUB v9929acV823V50b, v9929ebV823V50b",0x9a90x992B0x823B0x50b,v9929efV823V50b,"0,v9929acV823V50b,v9929ebV823V50b",SUB,burnDmg,public,False,0x0,burnDmg&m0x40-0x0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    0x9f00x992S0x823S0x50b: v9929f0V823V50b(0x64) = CONST ,0x9a90x992B0x823B0x50b,v9929f0V823V50b,0,CONST,burnDmg,public,False,0x64,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9f20x992S0x823S0x50b: v9929f2V823V50b(0x64) = ADD v9929f0V823V50b(0x64), v9929efV823V50b(0x0)",0x9a90x992B0x823B0x50b,v9929f2V823V50b,"0,v9929f0V823V50b,v9929efV823V50b",ADD,burnDmg,public,False,0x64,burnDmg&m0x40-0x0+0x64,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    0x9f40x992S0x823S0x50b: REVERT v9929ebV823V50b, v9929f2V823V50b(0x64)",0x9a90x992B0x823B0x50b,0,"0,v9929ebV823V50b,v9929f2V823V50b",REVERT,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
    Begin block 0x9f50x992B0x823B0x50b,0x9f50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0x9a90x992B0x823B0x50b, 0x9f50x992B0x823B0x50b"
"    prev=[0x9a40x992B0x823B0x50b], succ=[0xa140x992B0x823B0x50b]",0x9f50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    =================================,0x9f50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0x9f60x992S0x823S0x50b: v9929f6V823V50b(0x0) = CONST ,0x9f50x992B0x823B0x50b,v9929f6V823V50b,0,CONST,burnDmg,public,False,0x0,0,0xa140x992B0x823B0x50b
    0x9f80x992S0x823S0x50b: v9929f8V823V50b(0x60) = CONST ,0x9f50x992B0x823B0x50b,v9929f8V823V50b,0,CONST,burnDmg,public,False,0x60,0,0xa140x992B0x823B0x50b
    0x9fb0x992S0x823S0x50b: v9929fbV823V50b(0x1) = CONST ,0x9f50x992B0x823B0x50b,v9929fbV823V50b,0,CONST,burnDmg,public,False,0x1,0,0xa140x992B0x823B0x50b
    0x9fd0x992S0x823S0x50b: v9929fdV823V50b(0x1) = CONST ,0x9f50x992B0x823B0x50b,v9929fdV823V50b,0,CONST,burnDmg,public,False,0x1,0,0xa140x992B0x823B0x50b
    0x9ff0x992S0x823S0x50b: v9929ffV823V50b(0xa0) = CONST ,0x9f50x992B0x823B0x50b,v9929ffV823V50b,0,CONST,burnDmg,public,False,0xa0,0,0xa140x992B0x823B0x50b
"    0xa010x992S0x823S0x50b: v992a01V823V50b(0x10000000000000000000000000000000000000000) = SHL v9929ffV823V50b(0xa0), v9929fdV823V50b(0x1)",0x9f50x992B0x823B0x50b,v992a01V823V50b,"0,v9929ffV823V50b,v9929fdV823V50b",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,0xa140x992B0x823B0x50b
"    0xa020x992S0x823S0x50b: v992a02V823V50b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v992a01V823V50b(0x10000000000000000000000000000000000000000), v9929fbV823V50b(0x1)",0x9f50x992B0x823B0x50b,v992a02V823V50b,"0,v992a01V823V50b,v9929fbV823V50b",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xa140x992B0x823B0x50b
"    0xa030x992S0x823S0x50b: v992a03V823V50b = AND v992a02V823V50b(0xffffffffffffffffffffffffffffffffffffffff), v518",0x9f50x992B0x823B0x50b,v992a03V823V50b,"0,v992a02V823V50b,v518",AND,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0xa050x992S0x823S0x50b: v992a05V823V50b(0x40) = CONST ,0x9f50x992B0x823B0x50b,v992a05V823V50b,0,CONST,burnDmg,public,False,0x40,0,0xa140x992B0x823B0x50b
    0xa070x992S0x823S0x50b: v992a07V823V50b = MLOAD v992a05V823V50b(0x40),0x9f50x992B0x823B0x50b,v992a07V823V50b,"0,v992a05V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0xa140x992B0x823B0x50b
    0xa0b0x992S0x823S0x50b: v992a0bV823V50b(0x64) = MLOAD v848V50b,0x9f50x992B0x823B0x50b,v992a0bV823V50b,"0,v848V50b",MLOAD,burnDmg,public,False,0x64,burnDmg&m0x64,0xa140x992B0x823B0x50b
    0xa0d0x992S0x823S0x50b: v992a0dV823V50b(0x20) = CONST ,0x9f50x992B0x823B0x50b,v992a0dV823V50b,0,CONST,burnDmg,public,False,0x20,0,0xa140x992B0x823B0x50b
"    0xa0f0x992S0x823S0x50b: v992a0fV823V50b = ADD v992a0dV823V50b(0x20), v848V50b",0x9f50x992B0x823B0x50b,v992a0fV823V50b,"0,v992a0dV823V50b,v848V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0xa140x992B0x823B0x50b
    Begin block 0xa140x992B0x823B0x50b,0xa140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    prev=[0xa1d0x992B0x823B0x50b, 0x9f50x992B0x823B0x50b], succ=[0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b]",0xa140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
    =================================,0xa140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
"    0xa140x992_0x2S0x823S0x50b: va14992_2V823V50b = PHI v992a26V823V50b, v992a0bV823V50b(0x64)",0xa140x992B0x823B0x50b,va14992_2V823V50b,"0,v992a26V823V50b,v992a0bV823V50b",PHI,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
    0xa150x992S0x823S0x50b: v992a15V823V50b(0x20) = CONST ,0xa140x992B0x823B0x50b,v992a15V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
"    0xa180x992S0x823S0x50b: v992a18V823V50b = LT va14992_2V823V50b, v992a15V823V50b(0x20)",0xa140x992B0x823B0x50b,v992a18V823V50b,"0,va14992_2V823V50b,v992a15V823V50b",LT,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
    0xa190x992S0x823S0x50b: v992a19V823V50b(0xa33) = CONST ,0xa140x992B0x823B0x50b,v992a19V823V50b,0,CONST,burnDmg,public,False,0xa33,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
"    0xa1c0x992S0x823S0x50b: JUMPI v992a19V823V50b(0xa33), v992a18V823V50b",0xa140x992B0x823B0x50b,0,"0,v992a19V823V50b,v992a18V823V50b",JUMPI,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
    Begin block 0xa330x992B0x823B0x50b,0xa330x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa330x992B0x823B0x50b, 0xa1d0x992B0x823B0x50b"
"    prev=[0xa140x992B0x823B0x50b], succ=[0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b]",0xa330x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    =================================,0xa330x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa330x992_0x0S0x823S0x50b: va33992_0V823V50b = PHI v992a2eV823V50b, v992a0fV823V50b",0xa330x992B0x823B0x50b,va33992_0V823V50b,"0,v992a2eV823V50b,v992a0fV823V50b",PHI,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa330x992_0x1S0x823S0x50b: va33992_1V823V50b = PHI v992a2cV823V50b, v992a07V823V50b",0xa330x992B0x823B0x50b,va33992_1V823V50b,"0,v992a2cV823V50b,v992a07V823V50b",PHI,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa330x992_0x2S0x823S0x50b: va33992_2V823V50b = PHI v992a26V823V50b, v992a0bV823V50b(0x64)",0xa330x992B0x823B0x50b,va33992_2V823V50b,"0,v992a26V823V50b,v992a0bV823V50b",PHI,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa340x992S0x823S0x50b: v992a34V823V50b(0x1) = CONST ,0xa330x992B0x823B0x50b,v992a34V823V50b,0,CONST,burnDmg,public,False,0x1,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa370x992S0x823S0x50b: v992a37V823V50b(0x20) = CONST ,0xa330x992B0x823B0x50b,v992a37V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa390x992S0x823S0x50b: v992a39V823V50b = SUB v992a37V823V50b(0x20), va33992_2V823V50b",0xa330x992B0x823B0x50b,v992a39V823V50b,"0,v992a37V823V50b,va33992_2V823V50b",SUB,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa3a0x992S0x823S0x50b: v992a3aV823V50b(0x100) = CONST ,0xa330x992B0x823B0x50b,v992a3aV823V50b,0,CONST,burnDmg,public,False,0x100,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa3d0x992S0x823S0x50b: v992a3dV823V50b = EXP v992a3aV823V50b(0x100), v992a39V823V50b",0xa330x992B0x823B0x50b,v992a3dV823V50b,"0,v992a3aV823V50b,v992a39V823V50b",EXP,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa3e0x992S0x823S0x50b: v992a3eV823V50b = SUB v992a3dV823V50b, v992a34V823V50b(0x1)",0xa330x992B0x823B0x50b,v992a3eV823V50b,"0,v992a3dV823V50b,v992a34V823V50b",SUB,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa400x992S0x823S0x50b: v992a40V823V50b = NOT v992a3eV823V50b,0xa330x992B0x823B0x50b,v992a40V823V50b,"0,v992a3eV823V50b",NOT,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa420x992S0x823S0x50b: v992a42V823V50b = MLOAD va33992_0V823V50b,0xa330x992B0x823B0x50b,v992a42V823V50b,"0,va33992_0V823V50b",MLOAD,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa430x992S0x823S0x50b: v992a43V823V50b = AND v992a42V823V50b, v992a40V823V50b",0xa330x992B0x823B0x50b,v992a43V823V50b,"0,v992a42V823V50b,v992a40V823V50b",AND,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa460x992S0x823S0x50b: v992a46V823V50b = MLOAD va33992_1V823V50b,0xa330x992B0x823B0x50b,v992a46V823V50b,"0,va33992_1V823V50b",MLOAD,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa470x992S0x823S0x50b: v992a47V823V50b = AND v992a46V823V50b, v992a3eV823V50b",0xa330x992B0x823B0x50b,v992a47V823V50b,"0,v992a46V823V50b,v992a3eV823V50b",AND,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa4a0x992S0x823S0x50b: v992a4aV823V50b = OR v992a43V823V50b, v992a47V823V50b",0xa330x992B0x823B0x50b,v992a4aV823V50b,"0,v992a43V823V50b,v992a47V823V50b",OR,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa4c0x992S0x823S0x50b: MSTORE va33992_1V823V50b, v992a4aV823V50b",0xa330x992B0x823B0x50b,0,"0,va33992_1V823V50b,v992a4aV823V50b",MSTORE,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa550x992S0x823S0x50b: v992a55V823V50b = ADD v992a0bV823V50b(0x64), v992a07V823V50b",0xa330x992B0x823B0x50b,v992a55V823V50b,"0,v992a0bV823V50b,v992a07V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x64,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa590x992S0x823S0x50b: v992a59V823V50b(0x0) = CONST ,0xa330x992B0x823B0x50b,v992a59V823V50b,0,CONST,burnDmg,public,False,0x0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa5b0x992S0x823S0x50b: v992a5bV823V50b(0x40) = CONST ,0xa330x992B0x823B0x50b,v992a5bV823V50b,0,CONST,burnDmg,public,False,0x40,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa5d0x992S0x823S0x50b: v992a5dV823V50b = MLOAD v992a5bV823V50b(0x40),0xa330x992B0x823B0x50b,v992a5dV823V50b,"0,v992a5bV823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa600x992S0x823S0x50b: v992a60V823V50b(0x64) = SUB v992a55V823V50b, v992a5dV823V50b",0xa330x992B0x823B0x50b,v992a60V823V50b,"0,v992a55V823V50b,v992a5dV823V50b",SUB,burnDmg,public,False,0x64,burnDmg&m0x40+0x64-0x64,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa620x992S0x823S0x50b: v992a62V823V50b(0x0) = CONST ,0xa330x992B0x823B0x50b,v992a62V823V50b,0,CONST,burnDmg,public,False,0x0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa650x992S0x823S0x50b: v992a65V823V50b = GAS ,0xa330x992B0x823B0x50b,v992a65V823V50b,0,GAS,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa660x992S0x823S0x50b: v992a66V823V50b = CALL v992a65V823V50b, v992a03V823V50b, v992a62V823V50b(0x0), v992a5dV823V50b, v992a60V823V50b(0x64), v992a5dV823V50b, v992a59V823V50b(0x0)",0xa330x992B0x823B0x50b,v992a66V823V50b,"0,v992a65V823V50b,v992a03V823V50b,v992a62V823V50b,v992a5dV823V50b,v992a60V823V50b,v992a5dV823V50b,v992a59V823V50b",CALL,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa6a0x992S0x823S0x50b: v992a6aV823V50b = RETURNDATASIZE ,0xa330x992B0x823B0x50b,v992a6aV823V50b,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa6c0x992S0x823S0x50b: v992a6cV823V50b(0x0) = CONST ,0xa330x992B0x823B0x50b,v992a6cV823V50b,0,CONST,burnDmg,public,False,0x0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa6f0x992S0x823S0x50b: v992a6fV823V50b = EQ v992a6aV823V50b, v992a6cV823V50b(0x0)",0xa330x992B0x823B0x50b,v992a6fV823V50b,"0,v992a6aV823V50b,v992a6cV823V50b",EQ,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    0xa700x992S0x823S0x50b: v992a70V823V50b(0xa95) = CONST ,0xa330x992B0x823B0x50b,v992a70V823V50b,0,CONST,burnDmg,public,False,0xa95,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    0xa730x992S0x823S0x50b: JUMPI v992a70V823V50b(0xa95), v992a6fV823V50b",0xa330x992B0x823B0x50b,0,"0,v992a70V823V50b,v992a6fV823V50b",JUMPI,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
    Begin block 0xa740x992B0x823B0x50b,0xa740x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b"
"    prev=[0xa330x992B0x823B0x50b], succ=[0xa9a0x992B0x823B0x50b]",0xa740x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    =================================,0xa740x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa740x992S0x823S0x50b: v992a74V823V50b(0x40) = CONST ,0xa740x992B0x823B0x50b,v992a74V823V50b,0,CONST,burnDmg,public,False,0x40,0,0xa9a0x992B0x823B0x50b
    0xa760x992S0x823S0x50b: v992a76V823V50b = MLOAD v992a74V823V50b(0x40),0xa740x992B0x823B0x50b,v992a76V823V50b,"0,v992a74V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0xa9a0x992B0x823B0x50b
    0xa790x992S0x823S0x50b: v992a79V823V50b(0x1f) = CONST ,0xa740x992B0x823B0x50b,v992a79V823V50b,0,CONST,burnDmg,public,False,0x1f,0,0xa9a0x992B0x823B0x50b
    0xa7b0x992S0x823S0x50b: v992a7bV823V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v992a79V823V50b(0x1f),0xa740x992B0x823B0x50b,v992a7bV823V50b,"0,v992a79V823V50b",NOT,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xa9a0x992B0x823B0x50b
    0xa7c0x992S0x823S0x50b: v992a7cV823V50b(0x3f) = CONST ,0xa740x992B0x823B0x50b,v992a7cV823V50b,0,CONST,burnDmg,public,False,0x3f,0,0xa9a0x992B0x823B0x50b
    0xa7e0x992S0x823S0x50b: v992a7eV823V50b = RETURNDATASIZE ,0xa740x992B0x823B0x50b,v992a7eV823V50b,0,RETURNDATASIZE,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    0xa7f0x992S0x823S0x50b: v992a7fV823V50b = ADD v992a7eV823V50b, v992a7cV823V50b(0x3f)",0xa740x992B0x823B0x50b,v992a7fV823V50b,"0,v992a7eV823V50b,v992a7cV823V50b",ADD,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    0xa800x992S0x823S0x50b: v992a80V823V50b = AND v992a7fV823V50b, v992a7bV823V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xa740x992B0x823B0x50b,v992a80V823V50b,"0,v992a7fV823V50b,v992a7bV823V50b",AND,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    0xa820x992S0x823S0x50b: v992a82V823V50b = ADD v992a76V823V50b, v992a80V823V50b",0xa740x992B0x823B0x50b,v992a82V823V50b,"0,v992a76V823V50b,v992a80V823V50b",ADD,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa830x992S0x823S0x50b: v992a83V823V50b(0x40) = CONST ,0xa740x992B0x823B0x50b,v992a83V823V50b,0,CONST,burnDmg,public,False,0x40,0,0xa9a0x992B0x823B0x50b
"    0xa850x992S0x823S0x50b: MSTORE v992a83V823V50b(0x40), v992a82V823V50b",0xa740x992B0x823B0x50b,0,"0,v992a83V823V50b,v992a82V823V50b",MSTORE,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa860x992S0x823S0x50b: v992a86V823V50b = RETURNDATASIZE ,0xa740x992B0x823B0x50b,v992a86V823V50b,0,RETURNDATASIZE,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    0xa880x992S0x823S0x50b: MSTORE v992a76V823V50b, v992a86V823V50b",0xa740x992B0x823B0x50b,burnDmg&m0x40,"0,v992a76V823V50b,v992a86V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0xa9a0x992B0x823B0x50b
    0xa890x992S0x823S0x50b: v992a89V823V50b = RETURNDATASIZE ,0xa740x992B0x823B0x50b,v992a89V823V50b,0,RETURNDATASIZE,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa8a0x992S0x823S0x50b: v992a8aV823V50b(0x0) = CONST ,0xa740x992B0x823B0x50b,v992a8aV823V50b,0,CONST,burnDmg,public,False,0x0,0,0xa9a0x992B0x823B0x50b
    0xa8c0x992S0x823S0x50b: v992a8cV823V50b(0x20) = CONST ,0xa740x992B0x823B0x50b,v992a8cV823V50b,0,CONST,burnDmg,public,False,0x20,0,0xa9a0x992B0x823B0x50b
"    0xa8f0x992S0x823S0x50b: v992a8fV823V50b = ADD v992a76V823V50b, v992a8cV823V50b(0x20)",0xa740x992B0x823B0x50b,v992a8fV823V50b,"0,v992a76V823V50b,v992a8cV823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0xa9a0x992B0x823B0x50b
"    0xa900x992S0x823S0x50b: RETURNDATACOPY v992a8fV823V50b, v992a8aV823V50b(0x0), v992a89V823V50b",0xa740x992B0x823B0x50b,0,"0,v992a8fV823V50b,v992a8aV823V50b,v992a89V823V50b",RETURNDATACOPY,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa910x992S0x823S0x50b: v992a91V823V50b(0xa9a) = CONST ,0xa740x992B0x823B0x50b,v992a91V823V50b,0,CONST,burnDmg,public,False,0xa9a,0,0xa9a0x992B0x823B0x50b
    0xa940x992S0x823S0x50b: JUMP v992a91V823V50b(0xa9a),0xa740x992B0x823B0x50b,0,"0,v992a91V823V50b",JUMP,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    Begin block 0xa9a0x992B0x823B0x50b,0xa9a0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    prev=[0xa740x992B0x823B0x50b, 0xa950x992B0x823B0x50b], succ=[0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b]",0xa9a0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    =================================,0xa9a0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaa10x992S0x823S0x50b: v992aa1V823V50b(0xaf1) = CONST ,0xa9a0x992B0x823B0x50b,v992aa1V823V50b,0,CONST,burnDmg,public,False,0xaf1,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaa40x992S0x823S0x50b: JUMPI v992aa1V823V50b(0xaf1), v992a66V823V50b",0xa9a0x992B0x823B0x50b,0,"0,v992aa1V823V50b,v992a66V823V50b",JUMPI,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    Begin block 0xaa50x992B0x823B0x50b,0xaa50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    prev=[0xa9a0x992B0x823B0x50b], succ=[]",0xaa50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    =================================,0xaa50x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaa50x992S0x823S0x50b: v992aa5V823V50b(0x40) = CONST ,0xaa50x992B0x823B0x50b,v992aa5V823V50b,0,CONST,burnDmg,public,False,0x40,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaa80x992S0x823S0x50b: v992aa8V823V50b = MLOAD v992aa5V823V50b(0x40),0xaa50x992B0x823B0x50b,v992aa8V823V50b,"0,v992aa5V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaa90x992S0x823S0x50b: v992aa9V823V50b(0x461bcd) = CONST ,0xaa50x992B0x823B0x50b,v992aa9V823V50b,0,CONST,burnDmg,public,False,0x461bcd,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaad0x992S0x823S0x50b: v992aadV823V50b(0xe5) = CONST ,0xaa50x992B0x823B0x50b,v992aadV823V50b,0,CONST,burnDmg,public,False,0xe5,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaaf0x992S0x823S0x50b: v992aafV823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v992aadV823V50b(0xe5), v992aa9V823V50b(0x461bcd)",0xaa50x992B0x823B0x50b,v992aafV823V50b,"0,v992aadV823V50b,v992aa9V823V50b",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xab10x992S0x823S0x50b: MSTORE v992aa8V823V50b, v992aafV823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xaa50x992B0x823B0x50b,burnDmg&m0x40,"0,v992aa8V823V50b,v992aafV823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xab20x992S0x823S0x50b: v992ab2V823V50b(0x20) = CONST ,0xaa50x992B0x823B0x50b,v992ab2V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xab40x992S0x823S0x50b: v992ab4V823V50b(0x4) = CONST ,0xaa50x992B0x823B0x50b,v992ab4V823V50b,0,CONST,burnDmg,public,False,0x4,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xab70x992S0x823S0x50b: v992ab7V823V50b = ADD v992aa8V823V50b, v992ab4V823V50b(0x4)",0xaa50x992B0x823B0x50b,v992ab7V823V50b,"0,v992aa8V823V50b,v992ab4V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaba0x992S0x823S0x50b: MSTORE v992ab7V823V50b, v992ab2V823V50b(0x20)",0xaa50x992B0x823B0x50b,burnDmg&m0x40+0x4,"0,v992ab7V823V50b,v992ab2V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xabb0x992S0x823S0x50b: v992abbV823V50b(0x24) = CONST ,0xaa50x992B0x823B0x50b,v992abbV823V50b,0,CONST,burnDmg,public,False,0x24,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xabe0x992S0x823S0x50b: v992abeV823V50b = ADD v992aa8V823V50b, v992abbV823V50b(0x24)",0xaa50x992B0x823B0x50b,v992abeV823V50b,"0,v992aa8V823V50b,v992abbV823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x24,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xabf0x992S0x823S0x50b: MSTORE v992abeV823V50b, v992ab2V823V50b(0x20)",0xaa50x992B0x823B0x50b,burnDmg&m0x40+0x24,"0,v992abeV823V50b,v992ab2V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x24,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xac00x992S0x823S0x50b: v992ac0V823V50b(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564) = CONST ,0xaa50x992B0x823B0x50b,v992ac0V823V50b,0,CONST,burnDmg,public,False,0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xae10x992S0x823S0x50b: v992ae1V823V50b(0x44) = CONST ,0xaa50x992B0x823B0x50b,v992ae1V823V50b,0,CONST,burnDmg,public,False,0x44,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xae40x992S0x823S0x50b: v992ae4V823V50b = ADD v992aa8V823V50b, v992ae1V823V50b(0x44)",0xaa50x992B0x823B0x50b,v992ae4V823V50b,"0,v992aa8V823V50b,v992ae1V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x44,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xae50x992S0x823S0x50b: MSTORE v992ae4V823V50b, v992ac0V823V50b(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564)",0xaa50x992B0x823B0x50b,burnDmg&m0x40+0x44,"0,v992ae4V823V50b,v992ac0V823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x44,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xae70x992S0x823S0x50b: v992ae7V823V50b = MLOAD v992aa5V823V50b(0x40),0xaa50x992B0x823B0x50b,v992ae7V823V50b,"0,v992aa5V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaeb0x992S0x823S0x50b: v992aebV823V50b(0x0) = SUB v992aa8V823V50b, v992ae7V823V50b",0xaa50x992B0x823B0x50b,v992aebV823V50b,"0,v992aa8V823V50b,v992ae7V823V50b",SUB,burnDmg,public,False,0x0,burnDmg&m0x40-0x0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    0xaec0x992S0x823S0x50b: v992aecV823V50b(0x64) = CONST ,0xaa50x992B0x823B0x50b,v992aecV823V50b,0,CONST,burnDmg,public,False,0x64,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaee0x992S0x823S0x50b: v992aeeV823V50b(0x64) = ADD v992aecV823V50b(0x64), v992aebV823V50b(0x0)",0xaa50x992B0x823B0x50b,v992aeeV823V50b,"0,v992aecV823V50b,v992aebV823V50b",ADD,burnDmg,public,False,0x64,burnDmg&m0x40-0x0+0x64,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    0xaf00x992S0x823S0x50b: REVERT v992ae7V823V50b, v992aeeV823V50b(0x64)",0xaa50x992B0x823B0x50b,0,"0,v992ae7V823V50b,v992aeeV823V50b",REVERT,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
    Begin block 0xaf10x992B0x823B0x50b,0xaf10x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaa50x992B0x823B0x50b, 0xaf10x992B0x823B0x50b"
"    prev=[0xa9a0x992B0x823B0x50b], succ=[0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b]",0xaf10x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
    =================================,0xaf10x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
"    0xaf10x992_0x0S0x823S0x50b: vaf1992_0V823V50b = PHI v992a76V823V50b, v992a96V823V50b(0x60)",0xaf10x992B0x823B0x50b,vaf1992_0V823V50b,"0,v992a76V823V50b,v992a96V823V50b",PHI,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
    0xaf30x992S0x823S0x50b: v992af3V823V50b = MLOAD vaf1992_0V823V50b,0xaf10x992B0x823B0x50b,v992af3V823V50b,"0,vaf1992_0V823V50b",MLOAD,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
    0xaf40x992S0x823S0x50b: v992af4V823V50b = ISZERO v992af3V823V50b,0xaf10x992B0x823B0x50b,v992af4V823V50b,"0,v992af3V823V50b",ISZERO,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
    0xaf50x992S0x823S0x50b: v992af5V823V50b(0xe94) = CONST ,0xaf10x992B0x823B0x50b,v992af5V823V50b,0,CONST,burnDmg,public,False,0xe94,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
"    0xaf80x992S0x823S0x50b: JUMPI v992af5V823V50b(0xe94), v992af4V823V50b",0xaf10x992B0x823B0x50b,0,"0,v992af5V823V50b,v992af4V823V50b",JUMPI,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
    Begin block 0xaf90x992B0x823B0x50b,0xaf90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xaf90x992B0x823B0x50b, 0xe940x992B0x823B0x50b"
"    prev=[0xaf10x992B0x823B0x50b], succ=[0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b]",0xaf90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    =================================,0xaf90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    0xaf90x992_0x0S0x823S0x50b: vaf9992_0V823V50b = PHI v992a76V823V50b, v992a96V823V50b(0x60)",0xaf90x992B0x823B0x50b,vaf9992_0V823V50b,"0,v992a76V823V50b,v992a96V823V50b",PHI,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xafb0x992S0x823S0x50b: v992afbV823V50b(0x20) = CONST ,0xaf90x992B0x823B0x50b,v992afbV823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    0xafd0x992S0x823S0x50b: v992afdV823V50b = ADD v992afbV823V50b(0x20), vaf9992_0V823V50b",0xaf90x992B0x823B0x50b,v992afdV823V50b,"0,v992afbV823V50b,vaf9992_0V823V50b",ADD,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xaff0x992S0x823S0x50b: v992affV823V50b = MLOAD vaf9992_0V823V50b,0xaf90x992B0x823B0x50b,v992affV823V50b,"0,vaf9992_0V823V50b",MLOAD,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xb000x992S0x823S0x50b: v992b00V823V50b(0x20) = CONST ,0xaf90x992B0x823B0x50b,v992b00V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    0xb030x992S0x823S0x50b: v992b03V823V50b = LT v992affV823V50b, v992b00V823V50b(0x20)",0xaf90x992B0x823B0x50b,v992b03V823V50b,"0,v992affV823V50b,v992b00V823V50b",LT,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xb040x992S0x823S0x50b: v992b04V823V50b = ISZERO v992b03V823V50b,0xaf90x992B0x823B0x50b,v992b04V823V50b,"0,v992b03V823V50b",ISZERO,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xb050x992S0x823S0x50b: v992b05V823V50b(0xb0d) = CONST ,0xaf90x992B0x823B0x50b,v992b05V823V50b,0,CONST,burnDmg,public,False,0xb0d,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    0xb080x992S0x823S0x50b: JUMPI v992b05V823V50b(0xb0d), v992b04V823V50b",0xaf90x992B0x823B0x50b,0,"0,v992b05V823V50b,v992b04V823V50b",JUMPI,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    Begin block 0xb090x992B0x823B0x50b,0xb090x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    prev=[0xaf90x992B0x823B0x50b], succ=[]",0xb090x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    =================================,0xb090x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    0xb090x992S0x823S0x50b: v992b09V823V50b(0x0) = CONST ,0xb090x992B0x823B0x50b,v992b09V823V50b,0,CONST,burnDmg,public,False,0x0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    0xb0c0x992S0x823S0x50b: REVERT v992b09V823V50b(0x0), v992b09V823V50b(0x0)",0xb090x992B0x823B0x50b,0,"0,v992b09V823V50b,v992b09V823V50b",REVERT,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
    Begin block 0xb0d0x992B0x823B0x50b,0xb0d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb090x992B0x823B0x50b, 0xb0d0x992B0x823B0x50b"
"    prev=[0xaf90x992B0x823B0x50b], succ=[0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b]",0xb0d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    =================================,0xb0d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb0f0x992S0x823S0x50b: v992b0fV823V50b = MLOAD v992afdV823V50b,0xb0d0x992B0x823B0x50b,v992b0fV823V50b,"0,v992afdV823V50b",MLOAD,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb100x992S0x823S0x50b: v992b10V823V50b(0xeb9) = CONST ,0xb0d0x992B0x823B0x50b,v992b10V823V50b,0,CONST,burnDmg,public,False,0xeb9,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb130x992S0x823S0x50b: JUMPI v992b10V823V50b(0xeb9), v992b0fV823V50b",0xb0d0x992B0x823B0x50b,0,"0,v992b10V823V50b,v992b0fV823V50b",JUMPI,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    Begin block 0xb140x992B0x823B0x50b,0xb140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    prev=[0xb0d0x992B0x823B0x50b], succ=[]",0xb140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    =================================,0xb140x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb140x992S0x823S0x50b: v992b14V823V50b(0x40) = CONST ,0xb140x992B0x823B0x50b,v992b14V823V50b,0,CONST,burnDmg,public,False,0x40,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb160x992S0x823S0x50b: v992b16V823V50b = MLOAD v992b14V823V50b(0x40),0xb140x992B0x823B0x50b,v992b16V823V50b,"0,v992b14V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb170x992S0x823S0x50b: v992b17V823V50b(0x461bcd) = CONST ,0xb140x992B0x823B0x50b,v992b17V823V50b,0,CONST,burnDmg,public,False,0x461bcd,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb1b0x992S0x823S0x50b: v992b1bV823V50b(0xe5) = CONST ,0xb140x992B0x823B0x50b,v992b1bV823V50b,0,CONST,burnDmg,public,False,0xe5,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb1d0x992S0x823S0x50b: v992b1dV823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v992b1bV823V50b(0xe5), v992b17V823V50b(0x461bcd)",0xb140x992B0x823B0x50b,v992b1dV823V50b,"0,v992b1bV823V50b,v992b17V823V50b",SHL,burnDmg,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb1f0x992S0x823S0x50b: MSTORE v992b16V823V50b, v992b1dV823V50b(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xb140x992B0x823B0x50b,burnDmg&m0x40,"0,v992b16V823V50b,v992b1dV823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb200x992S0x823S0x50b: v992b20V823V50b(0x4) = CONST ,0xb140x992B0x823B0x50b,v992b20V823V50b,0,CONST,burnDmg,public,False,0x4,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb220x992S0x823S0x50b: v992b22V823V50b = ADD v992b20V823V50b(0x4), v992b16V823V50b",0xb140x992B0x823B0x50b,v992b22V823V50b,"0,v992b20V823V50b,v992b16V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb250x992S0x823S0x50b: v992b25V823V50b(0x20) = CONST ,0xb140x992B0x823B0x50b,v992b25V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb270x992S0x823S0x50b: v992b27V823V50b = ADD v992b25V823V50b(0x20), v992b22V823V50b",0xb140x992B0x823B0x50b,v992b27V823V50b,"0,v992b25V823V50b,v992b22V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb2a0x992S0x823S0x50b: v992b2aV823V50b(0x20) = SUB v992b27V823V50b, v992b22V823V50b",0xb140x992B0x823B0x50b,v992b2aV823V50b,"0,v992b27V823V50b,v992b22V823V50b",SUB,burnDmg,public,False,0x20,burnDmg&m0x40+0x4+0x20-0x20,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb2c0x992S0x823S0x50b: MSTORE v992b22V823V50b, v992b2aV823V50b(0x20)",0xb140x992B0x823B0x50b,burnDmg&m0x40+0x4,"0,v992b22V823V50b,v992b2aV823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb2d0x992S0x823S0x50b: v992b2dV823V50b(0x2a) = CONST ,0xb140x992B0x823B0x50b,v992b2dV823V50b,0,CONST,burnDmg,public,False,0x2a,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb300x992S0x823S0x50b: MSTORE v992b27V823V50b, v992b2dV823V50b(0x2a)",0xb140x992B0x823B0x50b,burnDmg&m0x40+0x4+0x20,"0,v992b27V823V50b,v992b2dV823V50b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb310x992S0x823S0x50b: v992b31V823V50b(0x20) = CONST ,0xb140x992B0x823B0x50b,v992b31V823V50b,0,CONST,burnDmg,public,False,0x20,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb330x992S0x823S0x50b: v992b33V823V50b = ADD v992b31V823V50b(0x20), v992b27V823V50b",0xb140x992B0x823B0x50b,v992b33V823V50b,"0,v992b31V823V50b,v992b27V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb350x992S0x823S0x50b: v992b35V823V50b(0xc2f) = CONST ,0xb140x992B0x823B0x50b,v992b35V823V50b,0,CONST,burnDmg,public,False,0xc2f,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb380x992S0x823S0x50b: v992b38V823V50b(0x2a) = CONST ,0xb140x992B0x823B0x50b,v992b38V823V50b,0,CONST,burnDmg,public,False,0x2a,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb3b0x992S0x823S0x50b: CODECOPY v992b33V823V50b, v992b35V823V50b(0xc2f), v992b38V823V50b(0x2a)",0xb140x992B0x823B0x50b,0,"0,v992b33V823V50b,v992b35V823V50b,v992b38V823V50b",CODECOPY,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb3c0x992S0x823S0x50b: v992b3cV823V50b(0x40) = CONST ,0xb140x992B0x823B0x50b,v992b3cV823V50b,0,CONST,burnDmg,public,False,0x40,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb3e0x992S0x823S0x50b: v992b3eV823V50b = ADD v992b3cV823V50b(0x40), v992b33V823V50b",0xb140x992B0x823B0x50b,v992b3eV823V50b,"0,v992b3cV823V50b,v992b33V823V50b",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20+0x20+0x40,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb420x992S0x823S0x50b: v992b42V823V50b(0x40) = CONST ,0xb140x992B0x823B0x50b,v992b42V823V50b,0,CONST,burnDmg,public,False,0x40,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    0xb440x992S0x823S0x50b: v992b44V823V50b = MLOAD v992b42V823V50b(0x40),0xb140x992B0x823B0x50b,v992b44V823V50b,"0,v992b42V823V50b",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb470x992S0x823S0x50b: v992b47V823V50b(0x84) = SUB v992b3eV823V50b, v992b44V823V50b",0xb140x992B0x823B0x50b,v992b47V823V50b,"0,v992b3eV823V50b,v992b44V823V50b",SUB,burnDmg,public,False,0x84,burnDmg&m0x40+0x4+0x20+0x20+0x40-0x84,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    0xb490x992S0x823S0x50b: REVERT v992b44V823V50b, v992b47V823V50b(0x84)",0xb140x992B0x823B0x50b,0,"0,v992b44V823V50b,v992b47V823V50b",REVERT,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
    Begin block 0xeb90x992B0x823B0x50b,0xeb90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,"0xb140x992B0x823B0x50b, 0xeb90x992B0x823B0x50b"
"    prev=[0xb0d0x992B0x823B0x50b], succ=[0xe4bB0x50b]",0xeb90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
    =================================,0xeb90x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
    0xebe0x992S0x823S0x50b: JUMP v873V50b(0xe4b),0xeb90x992B0x823B0x50b,0,"0,v873V50b",JUMP,burnDmg,public,False,0,0,0xe4bB0x50b
    Begin block 0xe4bB0x50b,0xe4bB0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
"    prev=[0xe940x992B0x823B0x50b, 0xeb90x992B0x823B0x50b], succ=[0x526]",0xe4bB0x50b,0,0,0,burnDmg,public,False,0,0,0x526
    =================================,0xe4bB0x50b,0,0,0,burnDmg,public,False,0,0,0x526
    0xe50S0x50b: JUMP v50c(0x526),0xe4bB0x50b,0,"0,v50c",JUMP,burnDmg,public,False,0,0,0x526
    Begin block 0x526,0x526,0,0,0,burnDmg,public,False,0,0,0x526
"    prev=[0xe4bB0x50b], succ=[0x5a5]",0x526,0,0,0,burnDmg,public,False,0,0,0x5a5
    =================================,0x526,0,0,0,burnDmg,public,False,0,0,0x5a5
    0x527: v527(0x33) = CONST ,0x526,v527,0,CONST,burnDmg,public,False,0x33,0,0x5a5
    0x529: v529 = SLOAD v527(0x33),0x526,v529,"0,v527",SLOAD,burnDmg,public,False,0,0,0x5a5
    0x52a: v52a(0x40) = CONST ,0x526,v52a,0,CONST,burnDmg,public,False,0x40,0,0x5a5
    0x52c: v52c = MLOAD v52a(0x40),0x526,v52c,"0,v52a",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x5a5
    0x52d: v52d(0x38ed1739) = CONST ,0x526,v52d,0,CONST,burnDmg,public,False,0x38ed1739,0,0x5a5
    0x532: v532(0xe0) = CONST ,0x526,v532,0,CONST,burnDmg,public,False,0xe0,0,0x5a5
"    0x534: v534(0x38ed173900000000000000000000000000000000000000000000000000000000) = SHL v532(0xe0), v52d(0x38ed1739)",0x526,v534,"0,v532,v52d",SHL,burnDmg,public,False,0x38ed173900000000000000000000000000000000000000000000000000000000,0,0x5a5
"    0x536: MSTORE v52c, v534(0x38ed173900000000000000000000000000000000000000000000000000000000)",0x526,burnDmg&m0x40,"0,v52c,v534",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x5a5
    0x537: v537(0x4) = CONST ,0x526,v537,0,CONST,burnDmg,public,False,0x4,0,0x5a5
"    0x53a: v53a = ADD v52c, v537(0x4)",0x526,v53a,"0,v52c,v537",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,0x5a5
"    0x53d: MSTORE v53a, v1e2",0x526,burnDmg&m0x40+0x4,"0,v53a,v1e2",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,0x5a5
    0x53e: v53e(0xde0b6b3a7640000) = CONST ,0x526,v53e,0,CONST,burnDmg,public,False,0xde0b6b3a7640000,0,0x5a5
    0x547: v547(0x24) = CONST ,0x526,v547,0,CONST,burnDmg,public,False,0x24,0,0x5a5
"    0x54a: v54a = ADD v52c, v547(0x24)",0x526,v54a,"0,v52c,v547",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x24,0x5a5
"    0x54d: MSTORE v54a, v53e(0xde0b6b3a7640000)",0x526,burnDmg&m0x40+0x24,"0,v54a,v53e",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x24,0x5a5
    0x54e: v54e = ADDRESS ,0x526,v54e,0,ADDRESS,burnDmg,public,False,0,0,0x5a5
    0x54f: v54f(0x64) = CONST ,0x526,v54f,0,CONST,burnDmg,public,False,0x64,0,0x5a5
"    0x552: v552 = ADD v52c, v54f(0x64)",0x526,v552,"0,v52c,v54f",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x64,0x5a5
"    0x555: MSTORE v552, v54e",0x526,burnDmg&m0x40+0x64,"0,v552,v54e",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x64,0x5a5
    0x556: v556 = TIMESTAMP ,0x526,v556,0,TIMESTAMP,burnDmg,public,False,0,0,0x5a5
    0x557: v557(0x1) = CONST ,0x526,v557,0,CONST,burnDmg,public,False,0x1,0,0x5a5
"    0x559: v559 = ADD v557(0x1), v556",0x526,v559,"0,v557,v556",ADD,burnDmg,public,False,0,0,0x5a5
    0x55a: v55a(0x84) = CONST ,0x526,v55a,0,CONST,burnDmg,public,False,0x84,0,0x5a5
"    0x55d: v55d = ADD v52c, v55a(0x84)",0x526,v55d,"0,v52c,v55a",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x84,0x5a5
"    0x560: MSTORE v55d, v559",0x526,burnDmg&m0x40+0x84,"0,v55d,v559",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x84,0x5a5
    0x561: v561(0xa0) = CONST ,0x526,v561,0,CONST,burnDmg,public,False,0xa0,0,0x5a5
    0x563: v563(0x44) = CONST ,0x526,v563,0,CONST,burnDmg,public,False,0x44,0,0x5a5
"    0x566: v566 = ADD v52c, v563(0x44)",0x526,v566,"0,v52c,v563",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x44,0x5a5
"    0x569: MSTORE v566, v561(0xa0)",0x526,burnDmg&m0x40+0x44,"0,v566,v561",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x44,0x5a5
    0x56b: v56b = MLOAD v242,0x526,v56b,"0,v242",MLOAD,burnDmg,public,False,0,0,0x5a5
    0x56c: v56c(0xa4) = CONST ,0x526,v56c,0,CONST,burnDmg,public,False,0xa4,0,0x5a5
"    0x56f: v56f = ADD v52c, v56c(0xa4)",0x526,v56f,"0,v52c,v56c",ADD,burnDmg,public,False,0,burnDmg&m0x40+0xa4,0x5a5
"    0x570: MSTORE v56f, v56b",0x526,burnDmg&m0x40+0xa4,"0,v56f,v56b",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0xa4,0x5a5
    0x572: v572 = MLOAD v242,0x526,v572,"0,v242",MLOAD,burnDmg,public,False,0,0,0x5a5
    0x573: v573(0x60) = CONST ,0x526,v573,0,CONST,burnDmg,public,False,0x60,0,0x5a5
    0x576: v576(0x1) = CONST ,0x526,v576,0,CONST,burnDmg,public,False,0x1,0,0x5a5
    0x578: v578(0x1) = CONST ,0x526,v578,0,CONST,burnDmg,public,False,0x1,0,0x5a5
    0x57a: v57a(0xa0) = CONST ,0x526,v57a,0,CONST,burnDmg,public,False,0xa0,0,0x5a5
"    0x57c: v57c(0x10000000000000000000000000000000000000000) = SHL v57a(0xa0), v578(0x1)",0x526,v57c,"0,v57a,v578",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,0x5a5
"    0x57d: v57d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v57c(0x10000000000000000000000000000000000000000), v576(0x1)",0x526,v57d,"0,v57c,v576",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x5a5
"    0x57e: v57e = AND v57d(0xffffffffffffffffffffffffffffffffffffffff), v529",0x526,v57e,"0,v57d,v529",AND,burnDmg,public,False,0,0,0x5a5
    0x580: v580(0x38ed1739) = CONST ,0x526,v580,0,CONST,burnDmg,public,False,0x38ed1739,0,0x5a5
    0x593: v593(0xc4) = CONST ,0x526,v593,0,CONST,burnDmg,public,False,0xc4,0,0x5a5
"    0x597: v597 = ADD v52c, v593(0xc4)",0x526,v597,"0,v52c,v593",ADD,burnDmg,public,False,0,burnDmg&m0x40+0xc4,0x5a5
    0x599: v599(0x20) = CONST ,0x526,v599,0,CONST,burnDmg,public,False,0x20,0,0x5a5
"    0x59d: v59d = ADD v242, v599(0x20)",0x526,v59d,"0,v242,v599",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0x5a5
"    0x59f: v59f = MUL v572, v599(0x20)",0x526,v59f,"0,v572,v599",MUL,burnDmg,public,False,0,0,0x5a5
    0x5a3: v5a3(0x0) = CONST ,0x526,v5a3,0,CONST,burnDmg,public,False,0x0,0,0x5a5
    Begin block 0x5a5,0x5a5,0,0,0,burnDmg,public,False,0,0,0x5a5
"    prev=[0x526, 0x5ae], succ=[0x5bd, 0x5ae]",0x5a5,0,0,0,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
    =================================,0x5a5,0,0,0,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
"    0x5a5_0x0: v5a5_0 = PHI v5a3(0x0), v5b8",0x5a5,v5a5_0,"0,v5a3,v5b8",PHI,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
"    0x5a8: v5a8 = LT v5a5_0, v59f",0x5a5,v5a8,"0,v5a5_0,v59f",LT,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
    0x5a9: v5a9 = ISZERO v5a8,0x5a5,v5a9,"0,v5a8",ISZERO,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
    0x5aa: v5aa(0x5bd) = CONST ,0x5a5,v5aa,0,CONST,burnDmg,public,False,0x5bd,0,"0x5bd, 0x5ae"
"    0x5ad: JUMPI v5aa(0x5bd), v5a9",0x5a5,0,"0,v5aa,v5a9",JUMPI,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
    Begin block 0x5bd,0x5bd,0,0,0,burnDmg,public,False,0,0,"0x5bd, 0x5ae"
"    prev=[0x5a5], succ=[0x5e2, 0x5e6]",0x5bd,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    =================================,0x5bd,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
"    0x5c4: v5c4 = ADD v59f, v597",0x5bd,v5c4,"0,v59f,v597",ADD,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5cd: v5cd(0x0) = CONST ,0x5bd,v5cd,0,CONST,burnDmg,public,False,0x0,0,"0x5e2, 0x5e6"
    0x5cf: v5cf(0x40) = CONST ,0x5bd,v5cf,0,CONST,burnDmg,public,False,0x40,0,"0x5e2, 0x5e6"
    0x5d1: v5d1 = MLOAD v5cf(0x40),0x5bd,v5d1,"0,v5cf",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x5e2, 0x5e6"
"    0x5d4: v5d4 = SUB v5c4, v5d1",0x5bd,v5d4,"0,v5c4,v5d1",SUB,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5d6: v5d6(0x0) = CONST ,0x5bd,v5d6,0,CONST,burnDmg,public,False,0x0,0,"0x5e2, 0x5e6"
    0x5da: v5da = EXTCODESIZE v57e,0x5bd,v5da,"0,v57e",EXTCODESIZE,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5db: v5db = ISZERO v5da,0x5bd,v5db,"0,v5da",ISZERO,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5dd: v5dd = ISZERO v5db,0x5bd,v5dd,"0,v5db",ISZERO,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5de: v5de(0x5e6) = CONST ,0x5bd,v5de,0,CONST,burnDmg,public,False,0x5e6,0,"0x5e2, 0x5e6"
"    0x5e1: JUMPI v5de(0x5e6), v5dd",0x5bd,0,"0,v5de,v5dd",JUMPI,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    Begin block 0x5e2,0x5e2,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
"    prev=[0x5bd], succ=[]",0x5e2,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    =================================,0x5e2,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    0x5e2: v5e2(0x0) = CONST ,0x5e2,v5e2,0,CONST,burnDmg,public,False,0x0,0,"0x5e2, 0x5e6"
"    0x5e5: REVERT v5e2(0x0), v5e2(0x0)",0x5e2,0,"0,v5e2,v5e2",REVERT,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
    Begin block 0x5e6,0x5e6,0,0,0,burnDmg,public,False,0,0,"0x5e2, 0x5e6"
"    prev=[0x5bd], succ=[0x5f1, 0x5fa]",0x5e6,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    =================================,0x5e6,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5e8: v5e8 = GAS ,0x5e6,v5e8,0,GAS,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
"    0x5e9: v5e9 = CALL v5e8, v57e, v5d6(0x0), v5d1, v5d4, v5d1, v5cd(0x0)",0x5e6,v5e9,"0,v5e8,v57e,v5d6,v5d1,v5d4,v5d1,v5cd",CALL,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5ea: v5ea = ISZERO v5e9,0x5e6,v5ea,"0,v5e9",ISZERO,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5ec: v5ec = ISZERO v5ea,0x5e6,v5ec,"0,v5ea",ISZERO,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5ed: v5ed(0x5fa) = CONST ,0x5e6,v5ed,0,CONST,burnDmg,public,False,0x5fa,0,"0x5f1, 0x5fa"
"    0x5f0: JUMPI v5ed(0x5fa), v5ec",0x5e6,0,"0,v5ed,v5ec",JUMPI,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    Begin block 0x5f1,0x5f1,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
"    prev=[0x5e6], succ=[]",0x5f1,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    =================================,0x5f1,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5f1: v5f1 = RETURNDATASIZE ,0x5f1,v5f1,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5f2: v5f2(0x0) = CONST ,0x5f1,v5f2,0,CONST,burnDmg,public,False,0x0,0,"0x5f1, 0x5fa"
"    0x5f5: RETURNDATACOPY v5f2(0x0), v5f2(0x0), v5f1",0x5f1,0,"0,v5f2,v5f2,v5f1",RETURNDATACOPY,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5f6: v5f6 = RETURNDATASIZE ,0x5f1,v5f6,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    0x5f7: v5f7(0x0) = CONST ,0x5f1,v5f7,0,CONST,burnDmg,public,False,0x0,0,"0x5f1, 0x5fa"
"    0x5f9: REVERT v5f7(0x0), v5f6",0x5f1,0,"0,v5f7,v5f6",REVERT,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
    Begin block 0x5fa,0x5fa,0,0,0,burnDmg,public,False,0,0,"0x5f1, 0x5fa"
"    prev=[0x5e6], succ=[0x61f, 0x623]",0x5fa,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
    =================================,0x5fa,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x5ff: v5ff(0x40) = CONST ,0x5fa,v5ff,0,CONST,burnDmg,public,False,0x40,0,"0x61f, 0x623"
    0x601: v601 = MLOAD v5ff(0x40),0x5fa,v601,"0,v5ff",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x61f, 0x623"
    0x602: v602 = RETURNDATASIZE ,0x5fa,v602,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x603: v603(0x0) = CONST ,0x5fa,v603,0,CONST,burnDmg,public,False,0x0,0,"0x61f, 0x623"
"    0x606: RETURNDATACOPY v601, v603(0x0), v602",0x5fa,0,"0,v601,v603,v602",RETURNDATACOPY,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x607: v607(0x1f) = CONST ,0x5fa,v607,0,CONST,burnDmg,public,False,0x1f,0,"0x61f, 0x623"
    0x609: v609 = RETURNDATASIZE ,0x5fa,v609,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x61f, 0x623"
"    0x60c: v60c = ADD v609, v607(0x1f)",0x5fa,v60c,"0,v609,v607",ADD,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x60d: v60d(0x1f) = CONST ,0x5fa,v60d,0,CONST,burnDmg,public,False,0x1f,0,"0x61f, 0x623"
    0x60f: v60f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v60d(0x1f),0x5fa,v60f,"0,v60d",NOT,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,"0x61f, 0x623"
"    0x610: v610 = AND v60f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), v60c",0x5fa,v610,"0,v60f,v60c",AND,burnDmg,public,False,0,0,"0x61f, 0x623"
"    0x612: v612 = ADD v601, v610",0x5fa,v612,"0,v601,v610",ADD,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x613: v613(0x40) = CONST ,0x5fa,v613,0,CONST,burnDmg,public,False,0x40,0,"0x61f, 0x623"
"    0x615: MSTORE v613(0x40), v612",0x5fa,0,"0,v613,v612",MSTORE,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x616: v616(0x20) = CONST ,0x5fa,v616,0,CONST,burnDmg,public,False,0x20,0,"0x61f, 0x623"
"    0x619: v619 = LT v609, v616(0x20)",0x5fa,v619,"0,v609,v616",LT,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x61a: v61a = ISZERO v619,0x5fa,v61a,"0,v619",ISZERO,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x61b: v61b(0x623) = CONST ,0x5fa,v61b,0,CONST,burnDmg,public,False,0x623,0,"0x61f, 0x623"
"    0x61e: JUMPI v61b(0x623), v61a",0x5fa,0,"0,v61b,v61a",JUMPI,burnDmg,public,False,0,0,"0x61f, 0x623"
    Begin block 0x61f,0x61f,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
"    prev=[0x5fa], succ=[]",0x61f,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
    =================================,0x61f,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
    0x61f: v61f(0x0) = CONST ,0x61f,v61f,0,CONST,burnDmg,public,False,0x0,0,"0x61f, 0x623"
"    0x622: REVERT v61f(0x0), v61f(0x0)",0x61f,0,"0,v61f,v61f",REVERT,burnDmg,public,False,0,0,"0x61f, 0x623"
    Begin block 0x623,0x623,0,0,0,burnDmg,public,False,0,0,"0x61f, 0x623"
"    prev=[0x5fa], succ=[0x63f, 0x643]",0x623,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
    =================================,0x623,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
"    0x625: v625 = ADD v601, v609",0x623,v625,"0,v601,v609",ADD,burnDmg,public,False,0,0,"0x63f, 0x643"
    0x629: v629 = MLOAD v601,0x623,v629,"0,v601",MLOAD,burnDmg,public,False,0,0,"0x63f, 0x643"
    0x62a: v62a(0x40) = CONST ,0x623,v62a,0,CONST,burnDmg,public,False,0x40,0,"0x63f, 0x643"
    0x62c: v62c = MLOAD v62a(0x40),0x623,v62c,"0,v62a",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x63f, 0x643"
    0x632: v632(0x100000000) = CONST ,0x623,v632,0,CONST,burnDmg,public,False,0x100000000,0,"0x63f, 0x643"
"    0x639: v639 = GT v629, v632(0x100000000)",0x623,v639,"0,v629,v632",GT,burnDmg,public,False,0,0,"0x63f, 0x643"
    0x63a: v63a = ISZERO v639,0x623,v63a,"0,v639",ISZERO,burnDmg,public,False,0,0,"0x63f, 0x643"
    0x63b: v63b(0x643) = CONST ,0x623,v63b,0,CONST,burnDmg,public,False,0x643,0,"0x63f, 0x643"
"    0x63e: JUMPI v63b(0x643), v63a",0x623,0,"0,v63b,v63a",JUMPI,burnDmg,public,False,0,0,"0x63f, 0x643"
    Begin block 0x63f,0x63f,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
"    prev=[0x623], succ=[]",0x63f,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
    =================================,0x63f,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
    0x63f: v63f(0x0) = CONST ,0x63f,v63f,0,CONST,burnDmg,public,False,0x0,0,"0x63f, 0x643"
"    0x642: REVERT v63f(0x0), v63f(0x0)",0x63f,0,"0,v63f,v63f",REVERT,burnDmg,public,False,0,0,"0x63f, 0x643"
    Begin block 0x643,0x643,0,0,0,burnDmg,public,False,0,0,"0x63f, 0x643"
"    prev=[0x623], succ=[0x654, 0x658]",0x643,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
    =================================,0x643,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
"    0x646: v646 = ADD v601, v629",0x643,v646,"0,v601,v629",ADD,burnDmg,public,False,0,0,"0x654, 0x658"
    0x648: v648(0x20) = CONST ,0x643,v648,0,CONST,burnDmg,public,False,0x20,0,"0x654, 0x658"
"    0x64b: v64b = ADD v646, v648(0x20)",0x643,v64b,"0,v646,v648",ADD,burnDmg,public,False,0,0,"0x654, 0x658"
"    0x64e: v64e = GT v64b, v625",0x643,v64e,"0,v64b,v625",GT,burnDmg,public,False,0,0,"0x654, 0x658"
    0x64f: v64f = ISZERO v64e,0x643,v64f,"0,v64e",ISZERO,burnDmg,public,False,0,0,"0x654, 0x658"
    0x650: v650(0x658) = CONST ,0x643,v650,0,CONST,burnDmg,public,False,0x658,0,"0x654, 0x658"
"    0x653: JUMPI v650(0x658), v64f",0x643,0,"0,v650,v64f",JUMPI,burnDmg,public,False,0,0,"0x654, 0x658"
    Begin block 0x654,0x654,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
"    prev=[0x643], succ=[]",0x654,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
    =================================,0x654,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
    0x654: v654(0x0) = CONST ,0x654,v654,0,CONST,burnDmg,public,False,0x0,0,"0x654, 0x658"
"    0x657: REVERT v654(0x0), v654(0x0)",0x654,0,"0,v654,v654",REVERT,burnDmg,public,False,0,0,"0x654, 0x658"
    Begin block 0x658,0x658,0,0,0,burnDmg,public,False,0,0,"0x654, 0x658"
"    prev=[0x643], succ=[0x671, 0x675]",0x658,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
    =================================,0x658,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
    0x65a: v65a = MLOAD v646,0x658,v65a,"0,v646",MLOAD,burnDmg,public,False,0,0,"0x671, 0x675"
    0x65c: v65c(0x20) = CONST ,0x658,v65c,0,CONST,burnDmg,public,False,0x20,0,"0x671, 0x675"
"    0x65f: v65f = MUL v65a, v65c(0x20)",0x658,v65f,"0,v65a,v65c",MUL,burnDmg,public,False,0,0,"0x671, 0x675"
"    0x661: v661 = ADD v64b, v65f",0x658,v661,"0,v64b,v65f",ADD,burnDmg,public,False,0,0,"0x671, 0x675"
"    0x662: v662 = GT v661, v625",0x658,v662,"0,v661,v625",GT,burnDmg,public,False,0,0,"0x671, 0x675"
    0x663: v663(0x100000000) = CONST ,0x658,v663,0,CONST,burnDmg,public,False,0x100000000,0,"0x671, 0x675"
"    0x66a: v66a = GT v65a, v663(0x100000000)",0x658,v66a,"0,v65a,v663",GT,burnDmg,public,False,0,0,"0x671, 0x675"
"    0x66b: v66b = OR v66a, v662",0x658,v66b,"0,v66a,v662",OR,burnDmg,public,False,0,0,"0x671, 0x675"
    0x66c: v66c = ISZERO v66b,0x658,v66c,"0,v66b",ISZERO,burnDmg,public,False,0,0,"0x671, 0x675"
    0x66d: v66d(0x675) = CONST ,0x658,v66d,0,CONST,burnDmg,public,False,0x675,0,"0x671, 0x675"
"    0x670: JUMPI v66d(0x675), v66c",0x658,0,"0,v66d,v66c",JUMPI,burnDmg,public,False,0,0,"0x671, 0x675"
    Begin block 0x671,0x671,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
"    prev=[0x658], succ=[]",0x671,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
    =================================,0x671,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
    0x671: v671(0x0) = CONST ,0x671,v671,0,CONST,burnDmg,public,False,0x0,0,"0x671, 0x675"
"    0x674: REVERT v671(0x0), v671(0x0)",0x671,0,"0,v671,v671",REVERT,burnDmg,public,False,0,0,"0x671, 0x675"
    Begin block 0x675,0x675,0,0,0,burnDmg,public,False,0,0,"0x671, 0x675"
"    prev=[0x658], succ=[0x68a]",0x675,0,0,0,burnDmg,public,False,0,0,0x68a
    =================================,0x675,0,0,0,burnDmg,public,False,0,0,0x68a
"    0x677: MSTORE v62c, v65a",0x675,burnDmg&m0x40,"0,v62c,v65a",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x68a
    0x67a: v67a = MLOAD v646,0x675,v67a,"0,v646",MLOAD,burnDmg,public,False,0,0,0x68a
    0x67b: v67b(0x20) = CONST ,0x675,v67b,0,CONST,burnDmg,public,False,0x20,0,0x68a
"    0x67f: v67f = ADD v67b(0x20), v62c",0x675,v67f,"0,v67b,v62c",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x20,0x68a
"    0x682: v682 = ADD v67b(0x20), v646",0x675,v682,"0,v67b,v646",ADD,burnDmg,public,False,0,0,0x68a
"    0x684: v684 = MUL v67b(0x20), v67a",0x675,v684,"0,v67b,v67a",MUL,burnDmg,public,False,0,0,0x68a
    0x688: v688(0x0) = CONST ,0x675,v688,0,CONST,burnDmg,public,False,0x0,0,0x68a
    Begin block 0x68a,0x68a,0,0,0,burnDmg,public,False,0,0,0x68a
"    prev=[0x675, 0x693], succ=[0x6a2, 0x693]",0x68a,0,0,0,burnDmg,public,False,0,0,"0x6a2, 0x693"
    =================================,0x68a,0,0,0,burnDmg,public,False,0,0,"0x6a2, 0x693"
"    0x68a_0x0: v68a_0 = PHI v688(0x0), v69d",0x68a,v68a_0,"0,v688,v69d",PHI,burnDmg,public,False,0,0,"0x6a2, 0x693"
"    0x68d: v68d = LT v68a_0, v684",0x68a,v68d,"0,v68a_0,v684",LT,burnDmg,public,False,0,0,"0x6a2, 0x693"
    0x68e: v68e = ISZERO v68d,0x68a,v68e,"0,v68d",ISZERO,burnDmg,public,False,0,0,"0x6a2, 0x693"
    0x68f: v68f(0x6a2) = CONST ,0x68a,v68f,0,CONST,burnDmg,public,False,0x6a2,0,"0x6a2, 0x693"
"    0x692: JUMPI v68f(0x6a2), v68e",0x68a,0,"0,v68f,v68e",JUMPI,burnDmg,public,False,0,0,"0x6a2, 0x693"
    Begin block 0x6a2,0x6a2,0,0,0,burnDmg,public,False,0,0,"0x6a2, 0x693"
"    prev=[0x68a], succ=[0x6c2, 0x6c3]",0x6a2,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    =================================,0x6a2,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
"    0x6a9: v6a9 = ADD v684, v67f",0x6a2,v6a9,"0,v684,v67f",ADD,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    0x6aa: v6aa(0x40) = CONST ,0x6a2,v6aa,0,CONST,burnDmg,public,False,0x40,0,"0x6c2, 0x6c3"
"    0x6ac: MSTORE v6aa(0x40), v6a9",0x6a2,0,"0,v6aa,v6a9",MSTORE,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    0x6b2: v6b2(0x0) = CONST ,0x6a2,v6b2,0,CONST,burnDmg,public,False,0x0,0,"0x6c2, 0x6c3"
    0x6b5: v6b5(0x1) = CONST ,0x6a2,v6b5,0,CONST,burnDmg,public,False,0x1,0,"0x6c2, 0x6c3"
    0x6b8: v6b8 = MLOAD v62c,0x6a2,v6b8,"0,v62c",MLOAD,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
"    0x6b9: v6b9 = SUB v6b8, v6b5(0x1)",0x6a2,v6b9,"0,v6b8,v6b5",SUB,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    0x6bb: v6bb = MLOAD v62c,0x6a2,v6bb,"0,v62c",MLOAD,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
"    0x6bd: v6bd = LT v6b9, v6bb",0x6a2,v6bd,"0,v6b9,v6bb",LT,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    0x6be: v6be(0x6c3) = CONST ,0x6a2,v6be,0,CONST,burnDmg,public,False,0x6c3,0,"0x6c2, 0x6c3"
"    0x6c1: JUMPI v6be(0x6c3), v6bd",0x6a2,0,"0,v6be,v6bd",JUMPI,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    Begin block 0x6c2,0x6c2,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
"    prev=[0x6a2], succ=[]",0x6c2,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    =================================,0x6c2,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    0x6c2: THROW ,0x6c2,0,0,THROW,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
    Begin block 0x6c3,0x6c3,0,0,0,burnDmg,public,False,0,0,"0x6c2, 0x6c3"
"    prev=[0x6a2], succ=[0x70f, 0x713]",0x6c3,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
    =================================,0x6c3,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x6c4: v6c4(0x20) = CONST ,0x6c3,v6c4,0,CONST,burnDmg,public,False,0x20,0,"0x70f, 0x713"
"    0x6c6: v6c6 = MUL v6c4(0x20), v6b9",0x6c3,v6c6,"0,v6c4,v6b9",MUL,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x6c7: v6c7(0x20) = CONST ,0x6c3,v6c7,0,CONST,burnDmg,public,False,0x20,0,"0x70f, 0x713"
"    0x6c9: v6c9 = ADD v6c7(0x20), v6c6",0x6c3,v6c9,"0,v6c7,v6c6",ADD,burnDmg,public,False,0,0,"0x70f, 0x713"
"    0x6ca: v6ca = ADD v6c9, v62c",0x6c3,v6ca,"0,v6c9,v62c",ADD,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x6cb: v6cb = MLOAD v6ca,0x6c3,v6cb,"0,v6ca",MLOAD,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x6cf: v6cf(0x1) = CONST ,0x6c3,v6cf,0,CONST,burnDmg,public,False,0x1,0,"0x70f, 0x713"
    0x6d1: v6d1(0x1) = CONST ,0x6c3,v6d1,0,CONST,burnDmg,public,False,0x1,0,"0x70f, 0x713"
    0x6d3: v6d3(0xa0) = CONST ,0x6c3,v6d3,0,CONST,burnDmg,public,False,0xa0,0,"0x70f, 0x713"
"    0x6d5: v6d5(0x10000000000000000000000000000000000000000) = SHL v6d3(0xa0), v6d1(0x1)",0x6c3,v6d5,"0,v6d3,v6d1",SHL,burnDmg,public,False,0x10000000000000000000000000000000000000000,0,"0x70f, 0x713"
"    0x6d6: v6d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6d5(0x10000000000000000000000000000000000000000), v6cf(0x1)",0x6c3,v6d6,"0,v6d5,v6cf",SUB,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x70f, 0x713"
"    0x6d7: v6d7 = AND v6d6(0xffffffffffffffffffffffffffffffffffffffff), v400",0x6c3,v6d7,"0,v6d6,v400",AND,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x6d8: v6d8(0x42966c68) = CONST ,0x6c3,v6d8,0,CONST,burnDmg,public,False,0x42966c68,0,"0x70f, 0x713"
    0x6de: v6de(0x40) = CONST ,0x6c3,v6de,0,CONST,burnDmg,public,False,0x40,0,"0x70f, 0x713"
    0x6e0: v6e0 = MLOAD v6de(0x40),0x6c3,v6e0,"0,v6de",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x70f, 0x713"
    0x6e2: v6e2(0xffffffff) = CONST ,0x6c3,v6e2,0,CONST,burnDmg,public,False,0xffffffff,0,"0x70f, 0x713"
"    0x6e7: v6e7(0x42966c68) = AND v6e2(0xffffffff), v6d8(0x42966c68)",0x6c3,v6e7,"0,v6e2,v6d8",AND,burnDmg,public,False,0x42966c68,0,"0x70f, 0x713"
    0x6e8: v6e8(0xe0) = CONST ,0x6c3,v6e8,0,CONST,burnDmg,public,False,0xe0,0,"0x70f, 0x713"
"    0x6ea: v6ea(0x42966c6800000000000000000000000000000000000000000000000000000000) = SHL v6e8(0xe0), v6e7(0x42966c68)",0x6c3,v6ea,"0,v6e8,v6e7",SHL,burnDmg,public,False,0x42966c6800000000000000000000000000000000000000000000000000000000,0,"0x70f, 0x713"
"    0x6ec: MSTORE v6e0, v6ea(0x42966c6800000000000000000000000000000000000000000000000000000000)",0x6c3,burnDmg&m0x40,"0,v6e0,v6ea",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,"0x70f, 0x713"
    0x6ed: v6ed(0x4) = CONST ,0x6c3,v6ed,0,CONST,burnDmg,public,False,0x4,0,"0x70f, 0x713"
"    0x6ef: v6ef = ADD v6ed(0x4), v6e0",0x6c3,v6ef,"0,v6ed,v6e0",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x70f, 0x713"
"    0x6f3: MSTORE v6ef, v6cb",0x6c3,burnDmg&m0x40+0x4,"0,v6ef,v6cb",MSTORE,burnDmg,public,False,0,burnDmg&m0x40+0x4,"0x70f, 0x713"
    0x6f4: v6f4(0x20) = CONST ,0x6c3,v6f4,0,CONST,burnDmg,public,False,0x20,0,"0x70f, 0x713"
"    0x6f6: v6f6 = ADD v6f4(0x20), v6ef",0x6c3,v6f6,"0,v6f4,v6ef",ADD,burnDmg,public,False,0,burnDmg&m0x40+0x4+0x20,"0x70f, 0x713"
    0x6fa: v6fa(0x20) = CONST ,0x6c3,v6fa,0,CONST,burnDmg,public,False,0x20,0,"0x70f, 0x713"
    0x6fc: v6fc(0x40) = CONST ,0x6c3,v6fc,0,CONST,burnDmg,public,False,0x40,0,"0x70f, 0x713"
    0x6fe: v6fe = MLOAD v6fc(0x40),0x6c3,v6fe,"0,v6fc",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x70f, 0x713"
"    0x701: v701(0x24) = SUB v6f6, v6fe",0x6c3,v701,"0,v6f6,v6fe",SUB,burnDmg,public,False,0x24,burnDmg&m0x40+0x4+0x20-0x24,"0x70f, 0x713"
    0x703: v703(0x0) = CONST ,0x6c3,v703,0,CONST,burnDmg,public,False,0x0,0,"0x70f, 0x713"
    0x707: v707 = EXTCODESIZE v6d7,0x6c3,v707,"0,v6d7",EXTCODESIZE,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x708: v708 = ISZERO v707,0x6c3,v708,"0,v707",ISZERO,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x70a: v70a = ISZERO v708,0x6c3,v70a,"0,v708",ISZERO,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x70b: v70b(0x713) = CONST ,0x6c3,v70b,0,CONST,burnDmg,public,False,0x713,0,"0x70f, 0x713"
"    0x70e: JUMPI v70b(0x713), v70a",0x6c3,0,"0,v70b,v70a",JUMPI,burnDmg,public,False,0,0,"0x70f, 0x713"
    Begin block 0x70f,0x70f,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
"    prev=[0x6c3], succ=[]",0x70f,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
    =================================,0x70f,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
    0x70f: v70f(0x0) = CONST ,0x70f,v70f,0,CONST,burnDmg,public,False,0x0,0,"0x70f, 0x713"
"    0x712: REVERT v70f(0x0), v70f(0x0)",0x70f,0,"0,v70f,v70f",REVERT,burnDmg,public,False,0,0,"0x70f, 0x713"
    Begin block 0x713,0x713,0,0,0,burnDmg,public,False,0,0,"0x70f, 0x713"
"    prev=[0x6c3], succ=[0x71e, 0x727]",0x713,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
    =================================,0x713,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x715: v715 = GAS ,0x713,v715,0,GAS,burnDmg,public,False,0,0,"0x71e, 0x727"
"    0x716: v716 = CALL v715, v6d7, v703(0x0), v6fe, v701(0x24), v6fe, v6fa(0x20)",0x713,v716,"0,v715,v6d7,v703,v6fe,v701,v6fe,v6fa",CALL,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x717: v717 = ISZERO v716,0x713,v717,"0,v716",ISZERO,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x719: v719 = ISZERO v717,0x713,v719,"0,v717",ISZERO,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x71a: v71a(0x727) = CONST ,0x713,v71a,0,CONST,burnDmg,public,False,0x727,0,"0x71e, 0x727"
"    0x71d: JUMPI v71a(0x727), v719",0x713,0,"0,v71a,v719",JUMPI,burnDmg,public,False,0,0,"0x71e, 0x727"
    Begin block 0x71e,0x71e,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
"    prev=[0x713], succ=[]",0x71e,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
    =================================,0x71e,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x71e: v71e = RETURNDATASIZE ,0x71e,v71e,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x71f: v71f(0x0) = CONST ,0x71e,v71f,0,CONST,burnDmg,public,False,0x0,0,"0x71e, 0x727"
"    0x722: RETURNDATACOPY v71f(0x0), v71f(0x0), v71e",0x71e,0,"0,v71f,v71f,v71e",RETURNDATACOPY,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x723: v723 = RETURNDATASIZE ,0x71e,v723,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x71e, 0x727"
    0x724: v724(0x0) = CONST ,0x71e,v724,0,CONST,burnDmg,public,False,0x0,0,"0x71e, 0x727"
"    0x726: REVERT v724(0x0), v723",0x71e,0,"0,v724,v723",REVERT,burnDmg,public,False,0,0,"0x71e, 0x727"
    Begin block 0x727,0x727,0,0,0,burnDmg,public,False,0,0,"0x71e, 0x727"
"    prev=[0x713], succ=[0x739, 0x73d]",0x727,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
    =================================,0x727,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
    0x72c: v72c(0x40) = CONST ,0x727,v72c,0,CONST,burnDmg,public,False,0x40,0,"0x739, 0x73d"
    0x72e: v72e = MLOAD v72c(0x40),0x727,v72e,"0,v72c",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,"0x739, 0x73d"
    0x72f: v72f = RETURNDATASIZE ,0x727,v72f,0,RETURNDATASIZE,burnDmg,public,False,0,0,"0x739, 0x73d"
    0x730: v730(0x20) = CONST ,0x727,v730,0,CONST,burnDmg,public,False,0x20,0,"0x739, 0x73d"
"    0x733: v733 = LT v72f, v730(0x20)",0x727,v733,"0,v72f,v730",LT,burnDmg,public,False,0,0,"0x739, 0x73d"
    0x734: v734 = ISZERO v733,0x727,v734,"0,v733",ISZERO,burnDmg,public,False,0,0,"0x739, 0x73d"
    0x735: v735(0x73d) = CONST ,0x727,v735,0,CONST,burnDmg,public,False,0x73d,0,"0x739, 0x73d"
"    0x738: JUMPI v735(0x73d), v734",0x727,0,"0,v735,v734",JUMPI,burnDmg,public,False,0,0,"0x739, 0x73d"
    Begin block 0x739,0x739,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
"    prev=[0x727], succ=[]",0x739,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
    =================================,0x739,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
    0x739: v739(0x0) = CONST ,0x739,v739,0,CONST,burnDmg,public,False,0x0,0,"0x739, 0x73d"
"    0x73c: REVERT v739(0x0), v739(0x0)",0x739,0,"0,v739,v739",REVERT,burnDmg,public,False,0,0,"0x739, 0x73d"
    Begin block 0x73d,0x73d,0,0,0,burnDmg,public,False,0,0,"0x739, 0x73d"
"    prev=[0x727], succ=[0x273]",0x73d,0,0,0,burnDmg,public,False,0,0,0x273
    =================================,0x73d,0,0,0,burnDmg,public,False,0,0,0x273
    0x740: v740(0x40) = CONST ,0x73d,v740,0,CONST,burnDmg,public,False,0x40,0,0x273
    0x743: v743 = MLOAD v740(0x40),0x73d,v743,"0,v740",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x273
"    0x746: MSTORE v743, v6cb",0x73d,burnDmg&m0x40,"0,v743,v6cb",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x273
    0x748: v748 = MLOAD v740(0x40),0x73d,v748,"0,v740",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x273
    0x749: v749 = CALLER ,0x73d,v749,0,CALLER,burnDmg,public,True,0,0,0x273
    0x74b: v74b(0x723e534fb81733c7a9f95aa071284b3db75efc812281e57036e71bd3c2487794) = CONST ,0x73d,v74b,0,CONST,burnDmg,public,False,0x723e534fb81733c7a9f95aa071284b3db75efc812281e57036e71bd3c2487794,0,0x273
"    0x770: v770(0x0) = SUB v743, v748",0x73d,v770,"0,v743,v748",SUB,burnDmg,public,False,0x0,burnDmg&m0x40-0x0,0x273
    0x771: v771(0x20) = CONST ,0x73d,v771,0,CONST,burnDmg,public,False,0x20,0,0x273
"    0x773: v773(0x20) = ADD v771(0x20), v770(0x0)",0x73d,v773,"0,v771,v770",ADD,burnDmg,public,False,0x20,burnDmg&m0x40-0x0+0x20,0x273
"    0x775: LOG2 v748, v773(0x20), v74b(0x723e534fb81733c7a9f95aa071284b3db75efc812281e57036e71bd3c2487794), v749",0x73d,0,"0,v748,v773,v74b,v749",LOG2,burnDmg,public,False,0,0,0x273
    0x77e: JUMP v1bc(0x273),0x73d,0,"0,v1bc",JUMP,burnDmg,public,False,0,0,0x273
    Begin block 0x273,0x273,0,0,0,burnDmg,public,False,0,0,0x273
"    prev=[0x73d], succ=[]",0x273,0,0,0,burnDmg,public,False,0,0,0x273
    =================================,0x273,0,0,0,burnDmg,public,False,0,0,0x273
    0x274: v274(0x40) = CONST ,0x273,v274,0,CONST,burnDmg,public,False,0x40,0,0x273
    0x277: v277 = MLOAD v274(0x40),0x273,v277,"0,v274",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x273
"    0x27a: MSTORE v277, v6cb",0x273,burnDmg&m0x40,"0,v277,v6cb",MSTORE,burnDmg,public,False,0,burnDmg&m0x40,0x273
    0x27b: v27b = MLOAD v274(0x40),0x273,v27b,"0,v274",MLOAD,burnDmg,public,False,0,burnDmg&m0x40,0x273
"    0x27f: v27f(0x0) = SUB v277, v27b",0x273,v27f,"0,v277,v27b",SUB,burnDmg,public,False,0x0,burnDmg&m0x40-0x0,0x273
    0x280: v280(0x20) = CONST ,0x273,v280,0,CONST,burnDmg,public,False,0x20,0,0x273
"    0x282: v282(0x20) = ADD v280(0x20), v27f(0x0)",0x273,v282,"0,v280,v27f",ADD,burnDmg,public,False,0x20,burnDmg&m0x40-0x0+0x20,0x273
"    0x284: RETURN v27b, v282(0x20)",0x273,0,"0,v27b,v282",RETURN,burnDmg,public,False,0,0,0x273
    Begin block 0x693,0x693,0,0,0,burnDmg,public,False,0,0,0x273
"    prev=[0x68a], succ=[0x68a]",0x693,0,0,0,burnDmg,public,False,0,0,0x68a
    =================================,0x693,0,0,0,burnDmg,public,False,0,0,0x68a
"    0x693_0x0: v693_0 = PHI v688(0x0), v69d",0x693,v693_0,"0,v688,v69d",PHI,burnDmg,public,False,0,0,0x68a
"    0x695: v695 = ADD v693_0, v682",0x693,v695,"0,v693_0,v682",ADD,burnDmg,public,False,0,0,0x68a
    0x696: v696 = MLOAD v695,0x693,v696,"0,v695",MLOAD,burnDmg,public,False,0,0,0x68a
"    0x699: v699 = ADD v693_0, v67f",0x693,v699,"0,v693_0,v67f",ADD,burnDmg,public,False,0,0,0x68a
"    0x69a: MSTORE v699, v696",0x693,0,"0,v699,v696",MSTORE,burnDmg,public,False,0,0,0x68a
    0x69b: v69b(0x20) = CONST ,0x693,v69b,0,CONST,burnDmg,public,False,0x20,0,0x68a
"    0x69d: v69d = ADD v69b(0x20), v693_0",0x693,v69d,"0,v69b,v693_0",ADD,burnDmg,public,False,0,0,0x68a
    0x69e: v69e(0x68a) = CONST ,0x693,v69e,0,CONST,burnDmg,public,False,0x68a,0,0x68a
    0x6a1: JUMP v69e(0x68a),0x693,0,"0,v69e",JUMP,burnDmg,public,False,0,0,0x68a
    Begin block 0x5ae,0x5ae,0,0,0,burnDmg,public,False,0,0,0x68a
"    prev=[0x5a5], succ=[0x5a5]",0x5ae,0,0,0,burnDmg,public,False,0,0,0x5a5
    =================================,0x5ae,0,0,0,burnDmg,public,False,0,0,0x5a5
"    0x5ae_0x0: v5ae_0 = PHI v5a3(0x0), v5b8",0x5ae,v5ae_0,"0,v5a3,v5b8",PHI,burnDmg,public,False,0,0,0x5a5
"    0x5b0: v5b0 = ADD v5ae_0, v59d",0x5ae,v5b0,"0,v5ae_0,v59d",ADD,burnDmg,public,False,0,0,0x5a5
    0x5b1: v5b1 = MLOAD v5b0,0x5ae,v5b1,"0,v5b0",MLOAD,burnDmg,public,False,0,0,0x5a5
"    0x5b4: v5b4 = ADD v5ae_0, v597",0x5ae,v5b4,"0,v5ae_0,v597",ADD,burnDmg,public,False,0,0,0x5a5
"    0x5b5: MSTORE v5b4, v5b1",0x5ae,0,"0,v5b4,v5b1",MSTORE,burnDmg,public,False,0,0,0x5a5
    0x5b6: v5b6(0x20) = CONST ,0x5ae,v5b6,0,CONST,burnDmg,public,False,0x20,0,0x5a5
"    0x5b8: v5b8 = ADD v5b6(0x20), v5ae_0",0x5ae,v5b8,"0,v5b6,v5ae_0",ADD,burnDmg,public,False,0,0,0x5a5
    0x5b9: v5b9(0x5a5) = CONST ,0x5ae,v5b9,0,CONST,burnDmg,public,False,0x5a5,0,0x5a5
    0x5bc: JUMP v5b9(0x5a5),0x5ae,0,"0,v5b9",JUMP,burnDmg,public,False,0,0,0x5a5
    Begin block 0xe940x992B0x823B0x50b,0xe940x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0x5a5
"    prev=[0xaf10x992B0x823B0x50b], succ=[0xe4bB0x50b]",0xe940x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
    =================================,0xe940x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
    0xe990x992S0x823S0x50b: JUMP v873V50b(0xe4b),0xe940x992B0x823B0x50b,0,"0,v873V50b",JUMP,burnDmg,public,False,0,0,0xe4bB0x50b
    Begin block 0xa950x992B0x823B0x50b,0xa950x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xe4bB0x50b
"    prev=[0xa330x992B0x823B0x50b], succ=[0xa9a0x992B0x823B0x50b]",0xa950x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    =================================,0xa950x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
    0xa960x992S0x823S0x50b: v992a96V823V50b(0x60) = CONST ,0xa950x992B0x823B0x50b,v992a96V823V50b,0,CONST,burnDmg,public,False,0x60,0,0xa9a0x992B0x823B0x50b
    Begin block 0xa1d0x992B0x823B0x50b,0xa1d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa9a0x992B0x823B0x50b
"    prev=[0xa140x992B0x823B0x50b], succ=[0xa140x992B0x823B0x50b]",0xa1d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    =================================,0xa1d0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    0xa1d0x992_0x0S0x823S0x50b: va1d992_0V823V50b = PHI v992a2eV823V50b, v992a0fV823V50b",0xa1d0x992B0x823B0x50b,va1d992_0V823V50b,"0,v992a2eV823V50b,v992a0fV823V50b",PHI,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    0xa1d0x992_0x1S0x823S0x50b: va1d992_1V823V50b = PHI v992a2cV823V50b, v992a07V823V50b",0xa1d0x992B0x823B0x50b,va1d992_1V823V50b,"0,v992a2cV823V50b,v992a07V823V50b",PHI,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    0xa1d0x992_0x2S0x823S0x50b: va1d992_2V823V50b = PHI v992a26V823V50b, v992a0bV823V50b(0x64)",0xa1d0x992B0x823B0x50b,va1d992_2V823V50b,"0,v992a26V823V50b,v992a0bV823V50b",PHI,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0xa1e0x992S0x823S0x50b: v992a1eV823V50b = MLOAD va1d992_0V823V50b,0xa1d0x992B0x823B0x50b,v992a1eV823V50b,"0,va1d992_0V823V50b",MLOAD,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    0xa200x992S0x823S0x50b: MSTORE va1d992_1V823V50b, v992a1eV823V50b",0xa1d0x992B0x823B0x50b,0,"0,va1d992_1V823V50b,v992a1eV823V50b",MSTORE,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0xa210x992S0x823S0x50b: v992a21V823V50b(0x1f) = CONST ,0xa1d0x992B0x823B0x50b,v992a21V823V50b,0,CONST,burnDmg,public,False,0x1f,0,0xa140x992B0x823B0x50b
    0xa230x992S0x823S0x50b: v992a23V823V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v992a21V823V50b(0x1f),0xa1d0x992B0x823B0x50b,v992a23V823V50b,"0,v992a21V823V50b",NOT,burnDmg,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xa140x992B0x823B0x50b
"    0xa260x992S0x823S0x50b: v992a26V823V50b = ADD va1d992_2V823V50b, v992a23V823V50b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xa1d0x992B0x823B0x50b,v992a26V823V50b,"0,va1d992_2V823V50b,v992a23V823V50b",ADD,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0xa280x992S0x823S0x50b: v992a28V823V50b(0x20) = CONST ,0xa1d0x992B0x823B0x50b,v992a28V823V50b,0,CONST,burnDmg,public,False,0x20,0,0xa140x992B0x823B0x50b
"    0xa2c0x992S0x823S0x50b: v992a2cV823V50b = ADD v992a28V823V50b(0x20), va1d992_1V823V50b",0xa1d0x992B0x823B0x50b,v992a2cV823V50b,"0,v992a28V823V50b,va1d992_1V823V50b",ADD,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    0xa2e0x992S0x823S0x50b: v992a2eV823V50b = ADD v992a28V823V50b(0x20), va1d992_0V823V50b",0xa1d0x992B0x823B0x50b,v992a2eV823V50b,"0,v992a28V823V50b,va1d992_0V823V50b",ADD,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    0xa2f0x992S0x823S0x50b: v992a2fV823V50b(0xa14) = CONST ,0xa1d0x992B0x823B0x50b,v992a2fV823V50b,0,CONST,burnDmg,public,False,0xa14,0,0xa140x992B0x823B0x50b
    0xa320x992S0x823S0x50b: JUMP v992a2fV823V50b(0xa14),0xa1d0x992B0x823B0x50b,0,"0,v992a2fV823V50b",JUMP,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
    Begin block 0xb79B0x992B0x823B0x50b,0xb79B0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xa140x992B0x823B0x50b
"    prev=[0xb4aB0x992B0x823B0x50b], succ=[0xb7eB0x992B0x823B0x50b]",0xb79B0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb7eB0x992B0x823B0x50b
    =================================,0xb79B0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb7eB0x992B0x823B0x50b
"    0xb7cS0x992S0x823S0x50b: vb7cV992V823V50b = EQ vb4eV992V823V50b, vb4fV992V823V50b(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470)",0xb79B0x992B0x823B0x50b,vb7cV992V823V50b,"0,vb4eV992V823V50b,vb4fV992V823V50b",EQ,burnDmg,public,False,0,0,0xb7eB0x992B0x823B0x50b
    0xb7dS0x992S0x823S0x50b: vb7dV992V823V50b = ISZERO vb7cV992V823V50b,0xb79B0x992B0x823B0x50b,vb7dV992V823V50b,"0,vb7cV992V823V50b",ISZERO,burnDmg,public,False,0,0,0xb7eB0x992B0x823B0x50b
},0xb79B0x992B0x823B0x50b,0,0,0,burnDmg,public,False,0,0,0xb7eB0x992B0x823B0x50b
function enableToken(address)() public {,0x285,0,0,public,enableToken,public,False,0,0,0xb7eB0x992B0x823B0x50b
    Begin block 0x285,0x285,0,0,0,enableToken,public,False,0,0,0xb7eB0x992B0x823B0x50b
"    prev=[], succ=[0x297, 0x29b]",0x285,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
    =================================,0x285,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
    0x286: v286(0xe06) = CONST ,0x285,v286,0,CONST,enableToken,public,False,0xe06,0,"0x297, 0x29b"
    0x289: v289(0x4) = CONST ,0x285,v289,0,CONST,enableToken,public,False,0x4,0,"0x297, 0x29b"
    0x28c: v28c = CALLDATASIZE ,0x285,v28c,0,CALLDATASIZE,enableToken,public,False,0,0,"0x297, 0x29b"
"    0x28d: v28d = SUB v28c, v289(0x4)",0x285,v28d,"0,v28c,v289",SUB,enableToken,public,False,0,0,"0x297, 0x29b"
    0x28e: v28e(0x20) = CONST ,0x285,v28e,0,CONST,enableToken,public,False,0x20,0,"0x297, 0x29b"
"    0x291: v291 = LT v28d, v28e(0x20)",0x285,v291,"0,v28d,v28e",LT,enableToken,public,False,0,0,"0x297, 0x29b"
    0x292: v292 = ISZERO v291,0x285,v292,"0,v291",ISZERO,enableToken,public,False,0,0,"0x297, 0x29b"
    0x293: v293(0x29b) = CONST ,0x285,v293,0,CONST,enableToken,public,False,0x29b,0,"0x297, 0x29b"
"    0x296: JUMPI v293(0x29b), v292",0x285,0,"0,v293,v292",JUMPI,enableToken,public,False,0,0,"0x297, 0x29b"
    Begin block 0x297,0x297,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
"    prev=[0x285], succ=[]",0x297,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
    =================================,0x297,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
    0x297: v297(0x0) = CONST ,0x297,v297,0,CONST,enableToken,public,False,0x0,0,"0x297, 0x29b"
"    0x29a: REVERT v297(0x0), v297(0x0)",0x297,0,"0,v297,v297",REVERT,enableToken,public,False,0,0,"0x297, 0x29b"
    Begin block 0x29b,0x29b,0,0,0,enableToken,public,False,0,0,"0x297, 0x29b"
"    prev=[0x285], succ=[0x77f0x285]",0x29b,0,0,0,enableToken,public,False,0,0,0x77f0x285
    =================================,0x29b,0,0,0,enableToken,public,False,0,0,0x77f0x285
    0x29d: v29d = CALLDATALOAD v289(0x4),0x29b,v29d,"0,v289",CALLDATALOAD,enableToken,public,False,0,0,0x77f0x285
    0x29e: v29e(0x1) = CONST ,0x29b,v29e,0,CONST,enableToken,public,False,0x1,0,0x77f0x285
    0x2a0: v2a0(0x1) = CONST ,0x29b,v2a0,0,CONST,enableToken,public,False,0x1,0,0x77f0x285
    0x2a2: v2a2(0xa0) = CONST ,0x29b,v2a2,0,CONST,enableToken,public,False,0xa0,0,0x77f0x285
"    0x2a4: v2a4(0x10000000000000000000000000000000000000000) = SHL v2a2(0xa0), v2a0(0x1)",0x29b,v2a4,"0,v2a2,v2a0",SHL,enableToken,public,False,0x10000000000000000000000000000000000000000,0,0x77f0x285
"    0x2a5: v2a5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a4(0x10000000000000000000000000000000000000000), v29e(0x1)",0x29b,v2a5,"0,v2a4,v29e",SUB,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x77f0x285
"    0x2a6: v2a6 = AND v2a5(0xffffffffffffffffffffffffffffffffffffffff), v29d",0x29b,v2a6,"0,v2a5,v29d",AND,enableToken,public,False,0,0,0x77f0x285
    0x2a7: v2a7(0x77f) = CONST ,0x29b,v2a7,0,CONST,enableToken,public,False,0x77f,0,0x77f0x285
    0x2aa: JUMP v2a7(0x77f),0x29b,0,"0,v2a7",JUMP,enableToken,public,False,0,0,0x77f0x285
    Begin block 0x77f0x285,0x77f0x285,0,0,0,enableToken,public,False,0,0,0x77f0x285
"    prev=[0x29b], succ=[0x7a10x285, 0x7d70x285]",0x77f0x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    =================================,0x77f0x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7800x285: v285780(0x1) = CONST ,0x77f0x285,v285780,0,CONST,enableToken,public,False,0x1,0,"0x7a10x285, 0x7d70x285"
    0x7820x285: v285782(0x1) = CONST ,0x77f0x285,v285782,0,CONST,enableToken,public,False,0x1,0,"0x7a10x285, 0x7d70x285"
    0x7840x285: v285784(0xa0) = CONST ,0x77f0x285,v285784,0,CONST,enableToken,public,False,0xa0,0,"0x7a10x285, 0x7d70x285"
"    0x7860x285: v285786(0x10000000000000000000000000000000000000000) = SHL v285784(0xa0), v285782(0x1)",0x77f0x285,v285786,"0,v285784,v285782",SHL,enableToken,public,False,0x10000000000000000000000000000000000000000,0,"0x7a10x285, 0x7d70x285"
"    0x7870x285: v285787(0xffffffffffffffffffffffffffffffffffffffff) = SUB v285786(0x10000000000000000000000000000000000000000), v285780(0x1)",0x77f0x285,v285787,"0,v285786,v285780",SUB,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x7a10x285, 0x7d70x285"
"    0x7890x285: v285789 = AND v2a6, v285787(0xffffffffffffffffffffffffffffffffffffffff)",0x77f0x285,v285789,"0,v2a6,v285787",AND,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x78a0x285: v28578a(0x0) = CONST ,0x77f0x285,v28578a,0,CONST,enableToken,public,False,0x0,0,"0x7a10x285, 0x7d70x285"
"    0x78e0x285: MSTORE v28578a(0x0), v285789",0x77f0x285,0,"0,v28578a,v285789",MSTORE,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x78f0x285: v28578f(0x35) = CONST ,0x77f0x285,v28578f,0,CONST,enableToken,public,False,0x35,0,"0x7a10x285, 0x7d70x285"
    0x7910x285: v285791(0x20) = CONST ,0x77f0x285,v285791,0,CONST,enableToken,public,False,0x20,0,"0x7a10x285, 0x7d70x285"
"    0x7930x285: MSTORE v285791(0x20), v28578f(0x35)",0x77f0x285,0,"0,v285791,v28578f",MSTORE,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7940x285: v285794(0x40) = CONST ,0x77f0x285,v285794,0,CONST,enableToken,public,False,0x40,0,"0x7a10x285, 0x7d70x285"
"    0x7970x285: v285797 = SHA3 v28578a(0x0), v285794(0x40)",0x77f0x285,v285797,"0,v28578a,v285794",SHA3,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7980x285: v285798 = SLOAD v285797,0x77f0x285,v285798,"0,v285797",SLOAD,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7990x285: v285799(0xff) = CONST ,0x77f0x285,v285799,0,CONST,enableToken,public,False,0xff,0,"0x7a10x285, 0x7d70x285"
"    0x79b0x285: v28579b = AND v285799(0xff), v285798",0x77f0x285,v28579b,"0,v285799,v285798",AND,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x79c0x285: v28579c = ISZERO v28579b,0x77f0x285,v28579c,"0,v28579b",ISZERO,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x79d0x285: v28579d(0x7d7) = CONST ,0x77f0x285,v28579d,0,CONST,enableToken,public,False,0x7d7,0,"0x7a10x285, 0x7d70x285"
"    0x7a00x285: JUMPI v28579d(0x7d7), v28579c",0x77f0x285,0,"0,v28579d,v28579c",JUMPI,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    Begin block 0x7a10x285,0x7a10x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
"    prev=[0x77f0x285], succ=[]",0x7a10x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    =================================,0x7a10x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7a10x285: v2857a1(0x40) = CONST ,0x7a10x285,v2857a1,0,CONST,enableToken,public,False,0x40,0,"0x7a10x285, 0x7d70x285"
    0x7a30x285: v2857a3 = MLOAD v2857a1(0x40),0x7a10x285,v2857a3,"0,v2857a1",MLOAD,enableToken,public,False,0,enableToken&m0x40,"0x7a10x285, 0x7d70x285"
    0x7a40x285: v2857a4(0x461bcd) = CONST ,0x7a10x285,v2857a4,0,CONST,enableToken,public,False,0x461bcd,0,"0x7a10x285, 0x7d70x285"
    0x7a80x285: v2857a8(0xe5) = CONST ,0x7a10x285,v2857a8,0,CONST,enableToken,public,False,0xe5,0,"0x7a10x285, 0x7d70x285"
"    0x7aa0x285: v2857aa(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2857a8(0xe5), v2857a4(0x461bcd)",0x7a10x285,v2857aa,"0,v2857a8,v2857a4",SHL,enableToken,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x7a10x285, 0x7d70x285"
"    0x7ac0x285: MSTORE v2857a3, v2857aa(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x7a10x285,enableToken&m0x40,"0,v2857a3,v2857aa",MSTORE,enableToken,public,False,0,enableToken&m0x40,"0x7a10x285, 0x7d70x285"
    0x7ad0x285: v2857ad(0x4) = CONST ,0x7a10x285,v2857ad,0,CONST,enableToken,public,False,0x4,0,"0x7a10x285, 0x7d70x285"
"    0x7af0x285: v2857af = ADD v2857ad(0x4), v2857a3",0x7a10x285,v2857af,"0,v2857ad,v2857a3",ADD,enableToken,public,False,0,enableToken&m0x40+0x4,"0x7a10x285, 0x7d70x285"
    0x7b20x285: v2857b2(0x20) = CONST ,0x7a10x285,v2857b2,0,CONST,enableToken,public,False,0x20,0,"0x7a10x285, 0x7d70x285"
"    0x7b40x285: v2857b4 = ADD v2857b2(0x20), v2857af",0x7a10x285,v2857b4,"0,v2857b2,v2857af",ADD,enableToken,public,False,0,enableToken&m0x40+0x4+0x20,"0x7a10x285, 0x7d70x285"
"    0x7b70x285: v2857b7(0x20) = SUB v2857b4, v2857af",0x7a10x285,v2857b7,"0,v2857b4,v2857af",SUB,enableToken,public,False,0x20,enableToken&m0x40+0x4+0x20-0x20,"0x7a10x285, 0x7d70x285"
"    0x7b90x285: MSTORE v2857af, v2857b7(0x20)",0x7a10x285,enableToken&m0x40+0x4,"0,v2857af,v2857b7",MSTORE,enableToken,public,False,0,enableToken&m0x40+0x4,"0x7a10x285, 0x7d70x285"
    0x7ba0x285: v2857ba(0x2a) = CONST ,0x7a10x285,v2857ba,0,CONST,enableToken,public,False,0x2a,0,"0x7a10x285, 0x7d70x285"
"    0x7bd0x285: MSTORE v2857b4, v2857ba(0x2a)",0x7a10x285,enableToken&m0x40+0x4+0x20,"0,v2857b4,v2857ba",MSTORE,enableToken,public,False,0,enableToken&m0x40+0x4+0x20,"0x7a10x285, 0x7d70x285"
    0x7be0x285: v2857be(0x20) = CONST ,0x7a10x285,v2857be,0,CONST,enableToken,public,False,0x20,0,"0x7a10x285, 0x7d70x285"
"    0x7c00x285: v2857c0 = ADD v2857be(0x20), v2857b4",0x7a10x285,v2857c0,"0,v2857be,v2857b4",ADD,enableToken,public,False,0,enableToken&m0x40+0x4+0x20+0x20,"0x7a10x285, 0x7d70x285"
    0x7c20x285: v2857c2(0xbd7) = CONST ,0x7a10x285,v2857c2,0,CONST,enableToken,public,False,0xbd7,0,"0x7a10x285, 0x7d70x285"
    0x7c50x285: v2857c5(0x2a) = CONST ,0x7a10x285,v2857c5,0,CONST,enableToken,public,False,0x2a,0,"0x7a10x285, 0x7d70x285"
"    0x7c80x285: CODECOPY v2857c0, v2857c2(0xbd7), v2857c5(0x2a)",0x7a10x285,0,"0,v2857c0,v2857c2,v2857c5",CODECOPY,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    0x7c90x285: v2857c9(0x40) = CONST ,0x7a10x285,v2857c9,0,CONST,enableToken,public,False,0x40,0,"0x7a10x285, 0x7d70x285"
"    0x7cb0x285: v2857cb = ADD v2857c9(0x40), v2857c0",0x7a10x285,v2857cb,"0,v2857c9,v2857c0",ADD,enableToken,public,False,0,enableToken&m0x40+0x4+0x20+0x20+0x40,"0x7a10x285, 0x7d70x285"
    0x7cf0x285: v2857cf(0x40) = CONST ,0x7a10x285,v2857cf,0,CONST,enableToken,public,False,0x40,0,"0x7a10x285, 0x7d70x285"
    0x7d10x285: v2857d1 = MLOAD v2857cf(0x40),0x7a10x285,v2857d1,"0,v2857cf",MLOAD,enableToken,public,False,0,enableToken&m0x40,"0x7a10x285, 0x7d70x285"
"    0x7d40x285: v2857d4(0x84) = SUB v2857cb, v2857d1",0x7a10x285,v2857d4,"0,v2857cb,v2857d1",SUB,enableToken,public,False,0x84,enableToken&m0x40+0x4+0x20+0x20+0x40-0x84,"0x7a10x285, 0x7d70x285"
"    0x7d60x285: REVERT v2857d1, v2857d4(0x84)",0x7a10x285,0,"0,v2857d1,v2857d4",REVERT,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
    Begin block 0x7d70x285,0x7d70x285,0,0,0,enableToken,public,False,0,0,"0x7a10x285, 0x7d70x285"
"    prev=[0x77f0x285], succ=[0x7f90x285]",0x7d70x285,0,0,0,enableToken,public,False,0,0,0x7f90x285
    =================================,0x7d70x285,0,0,0,enableToken,public,False,0,0,0x7f90x285
    0x7d80x285: v2857d8(0x33) = CONST ,0x7d70x285,v2857d8,0,CONST,enableToken,public,False,0x33,0,0x7f90x285
    0x7da0x285: v2857da = SLOAD v2857d8(0x33),0x7d70x285,v2857da,"0,v2857d8",SLOAD,enableToken,public,False,0,0,0x7f90x285
    0x7db0x285: v2857db(0x7f9) = CONST ,0x7d70x285,v2857db,0,CONST,enableToken,public,False,0x7f9,0,0x7f90x285
    0x7df0x285: v2857df(0x1) = CONST ,0x7d70x285,v2857df,0,CONST,enableToken,public,False,0x1,0,0x7f90x285
    0x7e10x285: v2857e1(0x1) = CONST ,0x7d70x285,v2857e1,0,CONST,enableToken,public,False,0x1,0,0x7f90x285
    0x7e30x285: v2857e3(0xa0) = CONST ,0x7d70x285,v2857e3,0,CONST,enableToken,public,False,0xa0,0,0x7f90x285
"    0x7e50x285: v2857e5(0x10000000000000000000000000000000000000000) = SHL v2857e3(0xa0), v2857e1(0x1)",0x7d70x285,v2857e5,"0,v2857e3,v2857e1",SHL,enableToken,public,False,0x10000000000000000000000000000000000000000,0,0x7f90x285
"    0x7e60x285: v2857e6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2857e5(0x10000000000000000000000000000000000000000), v2857df(0x1)",0x7d70x285,v2857e6,"0,v2857e5,v2857df",SUB,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x7f90x285
"    0x7e90x285: v2857e9 = AND v2857e6(0xffffffffffffffffffffffffffffffffffffffff), v2a6",0x7d70x285,v2857e9,"0,v2857e6,v2a6",AND,enableToken,public,False,0,0,0x7f90x285
"    0x7eb0x285: v2857eb = AND v2857da, v2857e6(0xffffffffffffffffffffffffffffffffffffffff)",0x7d70x285,v2857eb,"0,v2857da,v2857e6",AND,enableToken,public,False,0,0,0x7f90x285
    0x7ec0x285: v2857ec(0x0) = CONST ,0x7d70x285,v2857ec,0,CONST,enableToken,public,False,0x0,0,0x7f90x285
    0x7ee0x285: v2857ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v2857ec(0x0),0x7d70x285,v2857ee,"0,v2857ec",NOT,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x7f90x285
    0x7ef0x285: v2857ef(0xffffffff) = CONST ,0x7d70x285,v2857ef,0,CONST,enableToken,public,False,0xffffffff,0,0x7f90x285
    0x7f40x285: v2857f4(0x883) = CONST ,0x7d70x285,v2857f4,0,CONST,enableToken,public,False,0x883,0,0x7f90x285
"    0x7f70x285: v2857f7(0x883) = AND v2857f4(0x883), v2857ef(0xffffffff)",0x7d70x285,v2857f7,"0,v2857f4,v2857ef",AND,enableToken,public,False,0x883,0,0x7f90x285
"    0x7f80x285: CALLPRIVATE v2857f7(0x883), v2857ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v2857eb, v2857e9, v2857db(0x7f9)",0x7d70x285,0,"0,v2857f7,v2857ee,v2857eb,v2857e9,v2857db",CALLPRIVATE,enableToken,public,False,0,0,0x7f90x285
    Begin block 0x7f90x285,0x7f90x285,0,0,0,enableToken,public,False,0,0,0x7f90x285
"    prev=[0x7d70x285], succ=[0xe06]",0x7f90x285,0,0,0,enableToken,public,False,0,0,0xe06
    =================================,0x7f90x285,0,0,0,enableToken,public,False,0,0,0xe06
    0x7fa0x285: v2857fa(0x1) = CONST ,0x7f90x285,v2857fa,0,CONST,enableToken,public,False,0x1,0,0xe06
    0x7fc0x285: v2857fc(0x1) = CONST ,0x7f90x285,v2857fc,0,CONST,enableToken,public,False,0x1,0,0xe06
    0x7fe0x285: v2857fe(0xa0) = CONST ,0x7f90x285,v2857fe,0,CONST,enableToken,public,False,0xa0,0,0xe06
"    0x8000x285: v285800(0x10000000000000000000000000000000000000000) = SHL v2857fe(0xa0), v2857fc(0x1)",0x7f90x285,v285800,"0,v2857fe,v2857fc",SHL,enableToken,public,False,0x10000000000000000000000000000000000000000,0,0xe06
"    0x8010x285: v285801(0xffffffffffffffffffffffffffffffffffffffff) = SUB v285800(0x10000000000000000000000000000000000000000), v2857fa(0x1)",0x7f90x285,v285801,"0,v285800,v2857fa",SUB,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xe06
"    0x8020x285: v285802 = AND v285801(0xffffffffffffffffffffffffffffffffffffffff), v2a6",0x7f90x285,v285802,"0,v285801,v2a6",AND,enableToken,public,False,0,0,0xe06
    0x8030x285: v285803(0x0) = CONST ,0x7f90x285,v285803,0,CONST,enableToken,public,False,0x0,0,0xe06
"    0x8070x285: MSTORE v285803(0x0), v285802",0x7f90x285,0,"0,v285803,v285802",MSTORE,enableToken,public,False,0,0,0xe06
    0x8080x285: v285808(0x35) = CONST ,0x7f90x285,v285808,0,CONST,enableToken,public,False,0x35,0,0xe06
    0x80a0x285: v28580a(0x20) = CONST ,0x7f90x285,v28580a,0,CONST,enableToken,public,False,0x20,0,0xe06
"    0x80c0x285: MSTORE v28580a(0x20), v285808(0x35)",0x7f90x285,0,"0,v28580a,v285808",MSTORE,enableToken,public,False,0,0,0xe06
    0x80d0x285: v28580d(0x40) = CONST ,0x7f90x285,v28580d,0,CONST,enableToken,public,False,0x40,0,0xe06
"    0x8100x285: v285810 = SHA3 v285803(0x0), v28580d(0x40)",0x7f90x285,v285810,"0,v285803,v28580d",SHA3,enableToken,public,False,0,0,0xe06
    0x8120x285: v285812 = SLOAD v285810,0x7f90x285,v285812,"0,v285810",SLOAD,enableToken,public,False,0,0,0xe06
    0x8130x285: v285813(0xff) = CONST ,0x7f90x285,v285813,0,CONST,enableToken,public,False,0xff,0,0xe06
    0x8150x285: v285815(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v285813(0xff),0x7f90x285,v285815,"0,v285813",NOT,enableToken,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0xe06
"    0x8160x285: v285816 = AND v285815(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), v285812",0x7f90x285,v285816,"0,v285815,v285812",AND,enableToken,public,False,0,0,0xe06
    0x8170x285: v285817(0x1) = CONST ,0x7f90x285,v285817,0,CONST,enableToken,public,False,0x1,0,0xe06
"    0x8190x285: v285819 = OR v285817(0x1), v285816",0x7f90x285,v285819,"0,v285817,v285816",OR,enableToken,public,False,0,0,0xe06
"    0x81b0x285: SSTORE v285810, v285819",0x7f90x285,0,"0,v285810,v285819",SSTORE,enableToken,public,False,0,0,0xe06
    0x81c0x285: JUMP v286(0xe06),0x7f90x285,0,"0,v286",JUMP,enableToken,public,False,0,0,0xe06
    Begin block 0xe06,0xe06,0,0,0,enableToken,public,False,0,0,0xe06
"    prev=[0x7f90x285], succ=[]",0xe06,0,0,0,enableToken,public,False,0,0,0xe06
    =================================,0xe06,0,0,0,enableToken,public,False,0,0,0xe06
    0xe07: STOP ,0xe06,0,0,STOP,enableToken,public,False,0,0,0xe06
},0xe06,0,0,0,enableToken,public,False,0,0,0xe06
function uniswapV2Router()() public {,0x82,0,0,public,uniswapV2Router,public,False,0,0,0xe06
    Begin block 0x82,0x82,0,0,0,uniswapV2Router,public,False,0,0,0xe06
"    prev=[], succ=[0x2ab]",0x82,0,0,0,uniswapV2Router,public,False,0,0,0x2ab
    =================================,0x82,0,0,0,uniswapV2Router,public,False,0,0,0x2ab
    0x83: v83(0xd4e) = CONST ,0x82,v83,0,CONST,uniswapV2Router,public,False,0xd4e,0,0x2ab
    0x86: v86(0x2ab) = CONST ,0x82,v86,0,CONST,uniswapV2Router,public,False,0x2ab,0,0x2ab
    0x89: JUMP v86(0x2ab),0x82,0,"0,v86",JUMP,uniswapV2Router,public,False,0,0,0x2ab
    Begin block 0x2ab,0x2ab,0,0,0,uniswapV2Router,public,False,0,0,0x2ab
"    prev=[0x82], succ=[0xd4e]",0x2ab,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
    =================================,0x2ab,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
    0x2ac: v2ac(0x33) = CONST ,0x2ab,v2ac,0,CONST,uniswapV2Router,public,False,0x33,0,0xd4e
    0x2ae: v2ae = SLOAD v2ac(0x33),0x2ab,v2ae,"0,v2ac",SLOAD,uniswapV2Router,public,False,0,0,0xd4e
    0x2af: v2af(0x1) = CONST ,0x2ab,v2af,0,CONST,uniswapV2Router,public,False,0x1,0,0xd4e
    0x2b1: v2b1(0x1) = CONST ,0x2ab,v2b1,0,CONST,uniswapV2Router,public,False,0x1,0,0xd4e
    0x2b3: v2b3(0xa0) = CONST ,0x2ab,v2b3,0,CONST,uniswapV2Router,public,False,0xa0,0,0xd4e
"    0x2b5: v2b5(0x10000000000000000000000000000000000000000) = SHL v2b3(0xa0), v2b1(0x1)",0x2ab,v2b5,"0,v2b3,v2b1",SHL,uniswapV2Router,public,False,0x10000000000000000000000000000000000000000,0,0xd4e
"    0x2b6: v2b6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2b5(0x10000000000000000000000000000000000000000), v2af(0x1)",0x2ab,v2b6,"0,v2b5,v2af",SUB,uniswapV2Router,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd4e
"    0x2b7: v2b7 = AND v2b6(0xffffffffffffffffffffffffffffffffffffffff), v2ae",0x2ab,v2b7,"0,v2b6,v2ae",AND,uniswapV2Router,public,False,0,0,0xd4e
    0x2b9: JUMP v83(0xd4e),0x2ab,0,"0,v83",JUMP,uniswapV2Router,public,False,0,0,0xd4e
    Begin block 0xd4e,0xd4e,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
"    prev=[0x2ab], succ=[]",0xd4e,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
    =================================,0xd4e,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
    0xd4f: vd4f(0x40) = CONST ,0xd4e,vd4f,0,CONST,uniswapV2Router,public,False,0x40,0,0xd4e
    0xd52: vd52 = MLOAD vd4f(0x40),0xd4e,vd52,"0,vd4f",MLOAD,uniswapV2Router,public,False,0,uniswapV2Router&m0x40,0xd4e
    0xd53: vd53(0x1) = CONST ,0xd4e,vd53,0,CONST,uniswapV2Router,public,False,0x1,0,0xd4e
    0xd55: vd55(0x1) = CONST ,0xd4e,vd55,0,CONST,uniswapV2Router,public,False,0x1,0,0xd4e
    0xd57: vd57(0xa0) = CONST ,0xd4e,vd57,0,CONST,uniswapV2Router,public,False,0xa0,0,0xd4e
"    0xd59: vd59(0x10000000000000000000000000000000000000000) = SHL vd57(0xa0), vd55(0x1)",0xd4e,vd59,"0,vd57,vd55",SHL,uniswapV2Router,public,False,0x10000000000000000000000000000000000000000,0,0xd4e
"    0xd5a: vd5a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd59(0x10000000000000000000000000000000000000000), vd53(0x1)",0xd4e,vd5a,"0,vd59,vd53",SUB,uniswapV2Router,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd4e
"    0xd5d: vd5d = AND v2b7, vd5a(0xffffffffffffffffffffffffffffffffffffffff)",0xd4e,vd5d,"0,v2b7,vd5a",AND,uniswapV2Router,public,False,0,0,0xd4e
"    0xd5f: MSTORE vd52, vd5d",0xd4e,uniswapV2Router&m0x40,"0,vd52,vd5d",MSTORE,uniswapV2Router,public,False,0,uniswapV2Router&m0x40,0xd4e
    0xd60: vd60 = MLOAD vd4f(0x40),0xd4e,vd60,"0,vd4f",MLOAD,uniswapV2Router,public,False,0,uniswapV2Router&m0x40,0xd4e
"    0xd64: vd64(0x0) = SUB vd52, vd60",0xd4e,vd64,"0,vd52,vd60",SUB,uniswapV2Router,public,False,0x0,uniswapV2Router&m0x40-0x0,0xd4e
    0xd65: vd65(0x20) = CONST ,0xd4e,vd65,0,CONST,uniswapV2Router,public,False,0x20,0,0xd4e
"    0xd67: vd67(0x20) = ADD vd65(0x20), vd64(0x0)",0xd4e,vd67,"0,vd65,vd64",ADD,uniswapV2Router,public,False,0x20,uniswapV2Router&m0x40-0x0+0x20,0xd4e
"    0xd69: RETURN vd60, vd67(0x20)",0xd4e,0,"0,vd60,vd67",RETURN,uniswapV2Router,public,False,0,0,0xd4e
},0xd4e,0,0,0,uniswapV2Router,public,False,0,0,0xd4e
"function 0x883(0x883arg0x0, 0x883arg0x1, 0x883arg0x2, 0x883arg0x3) private {",0x883,0,"0,private",0x883arg0x2,0x883,private,False,0,0,0xd4e
    Begin block 0x883,0x883,0,0,0,0x883,private,False,0,0,0xd4e
"    prev=[], succ=[0x909, 0x88b]",0x883,0,0,0,0x883,private,False,0,0,"0x909, 0x88b"
    =================================,0x883,0,0,0,0x883,private,False,0,0,"0x909, 0x88b"
    0x885: v885 = ISZERO v883arg0,0x883,v885,"0,v883arg0",ISZERO,0x883,private,False,0,0,"0x909, 0x88b"
    0x887: v887(0x909) = CONST ,0x883,v887,0,CONST,0x883,private,False,0x909,0,"0x909, 0x88b"
"    0x88a: JUMPI v887(0x909), v885",0x883,0,"0,v887,v885",JUMPI,0x883,private,False,0,0,"0x909, 0x88b"
    Begin block 0x909,0x909,0,0,0,0x883,private,False,0,0,"0x909, 0x88b"
"    prev=[0x905, 0x883], succ=[0x90e, 0x944]",0x909,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
    =================================,0x909,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
"    0x909_0x0: v909_0 = PHI v885, v908",0x909,v909_0,"0,v885,v908",PHI,0x883,private,False,0,0,"0x90e, 0x944"
    0x90a: v90a(0x944) = CONST ,0x909,v90a,0,CONST,0x883,private,False,0x944,0,"0x90e, 0x944"
"    0x90d: JUMPI v90a(0x944), v909_0",0x909,0,"0,v90a,v909_0",JUMPI,0x883,private,False,0,0,"0x90e, 0x944"
    Begin block 0x90e,0x90e,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
"    prev=[0x909], succ=[]",0x90e,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
    =================================,0x90e,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
    0x90e: v90e(0x40) = CONST ,0x90e,v90e,0,CONST,0x883,private,False,0x40,0,"0x90e, 0x944"
    0x910: v910 = MLOAD v90e(0x40),0x90e,v910,"0,v90e",MLOAD,0x883,private,False,0,0x883&m0x40,"0x90e, 0x944"
    0x911: v911(0x461bcd) = CONST ,0x90e,v911,0,CONST,0x883,private,False,0x461bcd,0,"0x90e, 0x944"
    0x915: v915(0xe5) = CONST ,0x90e,v915,0,CONST,0x883,private,False,0xe5,0,"0x90e, 0x944"
"    0x917: v917(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v915(0xe5), v911(0x461bcd)",0x90e,v917,"0,v915,v911",SHL,0x883,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x90e, 0x944"
"    0x919: MSTORE v910, v917(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x90e,0x883&m0x40,"0,v910,v917",MSTORE,0x883,private,False,0,0x883&m0x40,"0x90e, 0x944"
    0x91a: v91a(0x4) = CONST ,0x90e,v91a,0,CONST,0x883,private,False,0x4,0,"0x90e, 0x944"
"    0x91c: v91c = ADD v91a(0x4), v910",0x90e,v91c,"0,v91a,v910",ADD,0x883,private,False,0,0x883&m0x40+0x4,"0x90e, 0x944"
    0x91f: v91f(0x20) = CONST ,0x90e,v91f,0,CONST,0x883,private,False,0x20,0,"0x90e, 0x944"
"    0x921: v921 = ADD v91f(0x20), v91c",0x90e,v921,"0,v91f,v91c",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20,"0x90e, 0x944"
"    0x924: v924(0x20) = SUB v921, v91c",0x90e,v924,"0,v921,v91c",SUB,0x883,private,False,0x20,0x883&m0x40+0x4+0x20-0x20,"0x90e, 0x944"
"    0x926: MSTORE v91c, v924(0x20)",0x90e,0x883&m0x40+0x4,"0,v91c,v924",MSTORE,0x883,private,False,0,0x883&m0x40+0x4,"0x90e, 0x944"
    0x927: v927(0x36) = CONST ,0x90e,v927,0,CONST,0x883,private,False,0x36,0,"0x90e, 0x944"
"    0x92a: MSTORE v921, v927(0x36)",0x90e,0x883&m0x40+0x4+0x20,"0,v921,v927",MSTORE,0x883,private,False,0,0x883&m0x40+0x4+0x20,"0x90e, 0x944"
    0x92b: v92b(0x20) = CONST ,0x90e,v92b,0,CONST,0x883,private,False,0x20,0,"0x90e, 0x944"
"    0x92d: v92d = ADD v92b(0x20), v921",0x90e,v92d,"0,v92b,v921",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20+0x20,"0x90e, 0x944"
    0x92f: v92f(0xc7d) = CONST ,0x90e,v92f,0,CONST,0x883,private,False,0xc7d,0,"0x90e, 0x944"
    0x932: v932(0x36) = CONST ,0x90e,v932,0,CONST,0x883,private,False,0x36,0,"0x90e, 0x944"
"    0x935: CODECOPY v92d, v92f(0xc7d), v932(0x36)",0x90e,0,"0,v92d,v92f,v932",CODECOPY,0x883,private,False,0,0,"0x90e, 0x944"
    0x936: v936(0x40) = CONST ,0x90e,v936,0,CONST,0x883,private,False,0x40,0,"0x90e, 0x944"
"    0x938: v938 = ADD v936(0x40), v92d",0x90e,v938,"0,v936,v92d",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20+0x20+0x40,"0x90e, 0x944"
    0x93c: v93c(0x40) = CONST ,0x90e,v93c,0,CONST,0x883,private,False,0x40,0,"0x90e, 0x944"
    0x93e: v93e = MLOAD v93c(0x40),0x90e,v93e,"0,v93c",MLOAD,0x883,private,False,0,0x883&m0x40,"0x90e, 0x944"
"    0x941: v941(0x84) = SUB v938, v93e",0x90e,v941,"0,v938,v93e",SUB,0x883,private,False,0x84,0x883&m0x40+0x4+0x20+0x20+0x40-0x84,"0x90e, 0x944"
"    0x943: REVERT v93e, v941(0x84)",0x90e,0,"0,v93e,v941",REVERT,0x883,private,False,0,0,"0x90e, 0x944"
    Begin block 0x944,0x944,0,0,0,0x883,private,False,0,0,"0x90e, 0x944"
"    prev=[0x909], succ=[0x9920x883]",0x944,0,0,0,0x883,private,False,0,0,0x9920x883
    =================================,0x944,0,0,0,0x883,private,False,0,0,0x9920x883
    0x945: v945(0x40) = CONST ,0x944,v945,0,CONST,0x883,private,False,0x40,0,0x9920x883
    0x948: v948 = MLOAD v945(0x40),0x944,v948,"0,v945",MLOAD,0x883,private,False,0,0x883&m0x40,0x9920x883
    0x949: v949(0x1) = CONST ,0x944,v949,0,CONST,0x883,private,False,0x1,0,0x9920x883
    0x94b: v94b(0x1) = CONST ,0x944,v94b,0,CONST,0x883,private,False,0x1,0,0x9920x883
    0x94d: v94d(0xa0) = CONST ,0x944,v94d,0,CONST,0x883,private,False,0xa0,0,0x9920x883
"    0x94f: v94f(0x10000000000000000000000000000000000000000) = SHL v94d(0xa0), v94b(0x1)",0x944,v94f,"0,v94d,v94b",SHL,0x883,private,False,0x10000000000000000000000000000000000000000,0,0x9920x883
"    0x950: v950(0xffffffffffffffffffffffffffffffffffffffff) = SUB v94f(0x10000000000000000000000000000000000000000), v949(0x1)",0x944,v950,"0,v94f,v949",SUB,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x9920x883
"    0x952: v952 = AND v883arg1, v950(0xffffffffffffffffffffffffffffffffffffffff)",0x944,v952,"0,v883arg1,v950",AND,0x883,private,False,0,0,0x9920x883
    0x953: v953(0x24) = CONST ,0x944,v953,0,CONST,0x883,private,False,0x24,0,0x9920x883
"    0x956: v956 = ADD v948, v953(0x24)",0x944,v956,"0,v948,v953",ADD,0x883,private,False,0,0x883&m0x40+0x24,0x9920x883
"    0x957: MSTORE v956, v952",0x944,0x883&m0x40+0x24,"0,v956,v952",MSTORE,0x883,private,False,0,0x883&m0x40+0x24,0x9920x883
    0x958: v958(0x44) = CONST ,0x944,v958,0,CONST,0x883,private,False,0x44,0,0x9920x883
"    0x95c: v95c = ADD v948, v958(0x44)",0x944,v95c,"0,v948,v958",ADD,0x883,private,False,0,0x883&m0x40+0x44,0x9920x883
"    0x95f: MSTORE v95c, v883arg0",0x944,0x883&m0x40+0x44,"0,v95c,v883arg0",MSTORE,0x883,private,False,0,0x883&m0x40+0x44,0x9920x883
    0x961: v961 = MLOAD v945(0x40),0x944,v961,"0,v945",MLOAD,0x883,private,False,0,0x883&m0x40,0x9920x883
"    0x964: v964(0x0) = SUB v948, v961",0x944,v964,"0,v948,v961",SUB,0x883,private,False,0x0,0x883&m0x40-0x0,0x9920x883
"    0x967: v967(0x44) = ADD v958(0x44), v964(0x0)",0x944,v967,"0,v958,v964",ADD,0x883,private,False,0x44,0x883&m0x40-0x0+0x44,0x9920x883
"    0x969: MSTORE v961, v967(0x44)",0x944,0x883&m0x40,"0,v961,v967",MSTORE,0x883,private,False,0,0x883&m0x40,0x9920x883
    0x96a: v96a(0x64) = CONST ,0x944,v96a,0,CONST,0x883,private,False,0x64,0,0x9920x883
"    0x96e: v96e = ADD v948, v96a(0x64)",0x944,v96e,"0,v948,v96a",ADD,0x883,private,False,0,0x883&m0x40+0x64,0x9920x883
"    0x971: MSTORE v945(0x40), v96e",0x944,0,"0,v945,v96e",MSTORE,0x883,private,False,0,0,0x9920x883
    0x972: v972(0x20) = CONST ,0x944,v972,0,CONST,0x883,private,False,0x20,0,0x9920x883
"    0x975: v975 = ADD v961, v972(0x20)",0x944,v975,"0,v961,v972",ADD,0x883,private,False,0,0x883&m0x40+0x20,0x9920x883
    0x977: v977 = MLOAD v975,0x944,v977,"0,v975",MLOAD,0x883,private,False,0,0,0x9920x883
    0x978: v978(0x1) = CONST ,0x944,v978,0,CONST,0x883,private,False,0x1,0,0x9920x883
    0x97a: v97a(0x1) = CONST ,0x944,v97a,0,CONST,0x883,private,False,0x1,0,0x9920x883
    0x97c: v97c(0xe0) = CONST ,0x944,v97c,0,CONST,0x883,private,False,0xe0,0,0x9920x883
"    0x97e: v97e(0x100000000000000000000000000000000000000000000000000000000) = SHL v97c(0xe0), v97a(0x1)",0x944,v97e,"0,v97c,v97a",SHL,0x883,private,False,0x100000000000000000000000000000000000000000000000000000000,0,0x9920x883
"    0x97f: v97f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v97e(0x100000000000000000000000000000000000000000000000000000000), v978(0x1)",0x944,v97f,"0,v97e,v978",SUB,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0,0x9920x883
"    0x980: v980 = AND v97f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v977",0x944,v980,"0,v97f,v977",AND,0x883,private,False,0,0,0x9920x883
    0x981: v981(0x95ea7b3) = CONST ,0x944,v981,0,CONST,0x883,private,False,0x95ea7b3,0,0x9920x883
    0x986: v986(0xe0) = CONST ,0x944,v986,0,CONST,0x883,private,False,0xe0,0,0x9920x883
"    0x988: v988(0x95ea7b300000000000000000000000000000000000000000000000000000000) = SHL v986(0xe0), v981(0x95ea7b3)",0x944,v988,"0,v986,v981",SHL,0x883,private,False,0x95ea7b300000000000000000000000000000000000000000000000000000000,0,0x9920x883
"    0x989: v989 = OR v988(0x95ea7b300000000000000000000000000000000000000000000000000000000), v980",0x944,v989,"0,v988,v980",OR,0x883,private,False,0,0,0x9920x883
"    0x98b: MSTORE v975, v989",0x944,0x883&m0x40+0x20,"0,v975,v989",MSTORE,0x883,private,False,0,0x883&m0x40+0x20,0x9920x883
    0x98c: v98c(0xe70) = CONST ,0x944,v98c,0,CONST,0x883,private,False,0xe70,0,0x9920x883
    Begin block 0x9920x883,0x9920x883,0,0,0,0x883,private,False,0,0,0x9920x883
"    prev=[0x944], succ=[0xb4aB0x9920x883]",0x9920x883,0,0,0,0x883,private,False,0,0,0xb4aB0x9920x883
    =================================,0x9920x883,0,0,0,0x883,private,False,0,0,0xb4aB0x9920x883
    0x9930x883: v883993(0x9a4) = CONST ,0x9920x883,v883993,0,CONST,0x883,private,False,0x9a4,0,0xb4aB0x9920x883
    0x9970x883: v883997(0x1) = CONST ,0x9920x883,v883997,0,CONST,0x883,private,False,0x1,0,0xb4aB0x9920x883
    0x9990x883: v883999(0x1) = CONST ,0x9920x883,v883999,0,CONST,0x883,private,False,0x1,0,0xb4aB0x9920x883
    0x99b0x883: v88399b(0xa0) = CONST ,0x9920x883,v88399b,0,CONST,0x883,private,False,0xa0,0,0xb4aB0x9920x883
"    0x99d0x883: v88399d(0x10000000000000000000000000000000000000000) = SHL v88399b(0xa0), v883999(0x1)",0x9920x883,v88399d,"0,v88399b,v883999",SHL,0x883,private,False,0x10000000000000000000000000000000000000000,0,0xb4aB0x9920x883
"    0x99e0x883: v88399e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88399d(0x10000000000000000000000000000000000000000), v883997(0x1)",0x9920x883,v88399e,"0,v88399d,v883997",SUB,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xb4aB0x9920x883
"    0x99f0x883: v88399f = AND v88399e(0xffffffffffffffffffffffffffffffffffffffff), v883arg2",0x9920x883,v88399f,"0,v88399e,v883arg2",AND,0x883,private,False,0,0,0xb4aB0x9920x883
    0x9a00x883: v8839a0(0xb4a) = CONST ,0x9920x883,v8839a0,0,CONST,0x883,private,False,0xb4a,0,0xb4aB0x9920x883
    0x9a30x883: JUMP v8839a0(0xb4a),0x9920x883,0,"0,v8839a0",JUMP,0x883,private,False,0,0,0xb4aB0x9920x883
    Begin block 0xb4aB0x9920x883,0xb4aB0x9920x883,0,0,0,0x883,private,False,0,0,0xb4aB0x9920x883
"    prev=[0x9920x883], succ=[0xb7eB0x9920x883, 0xb79B0x9920x883]",0xb4aB0x9920x883,0,0,0,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    =================================,0xb4aB0x9920x883,0,0,0,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb4bS0x9920x883: vb4bV992883(0x0) = CONST ,0xb4aB0x9920x883,vb4bV992883,0,CONST,0x883,private,False,0x0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb4eS0x9920x883: vb4eV992883 = EXTCODEHASH v88399f,0xb4aB0x9920x883,vb4eV992883,"0,v88399f",EXTCODEHASH,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb4fS0x9920x883: vb4fV992883(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST ,0xb4aB0x9920x883,vb4fV992883,0,CONST,0x883,private,False,0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb71S0x9920x883: vb71V992883 = ISZERO vb4eV992883,0xb4aB0x9920x883,vb71V992883,"0,vb4eV992883",ISZERO,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb73S0x9920x883: vb73V992883 = ISZERO vb71V992883,0xb4aB0x9920x883,vb73V992883,"0,vb71V992883",ISZERO,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    0xb75S0x9920x883: vb75V992883(0xb7e) = CONST ,0xb4aB0x9920x883,vb75V992883,0,CONST,0x883,private,False,0xb7e,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
"    0xb78S0x9920x883: JUMPI vb75V992883(0xb7e), vb71V992883",0xb4aB0x9920x883,0,"0,vb75V992883,vb71V992883",JUMPI,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
    Begin block 0xb7eB0x9920x883,0xb7eB0x9920x883,0,0,0,0x883,private,False,0,0,"0xb7eB0x9920x883, 0xb79B0x9920x883"
"    prev=[0xb4aB0x9920x883, 0xb79B0x9920x883], succ=[0x9a40x883]",0xb7eB0x9920x883,0,0,0,0x883,private,False,0,0,0x9a40x883
    =================================,0xb7eB0x9920x883,0,0,0,0x883,private,False,0,0,0x9a40x883
"    0xb7e_0x0S0x9920x883: vb7e_0V992883 = PHI vb73V992883, vb7dV992883",0xb7eB0x9920x883,vb7e_0V992883,"0,vb73V992883,vb7dV992883",PHI,0x883,private,False,0,0,0x9a40x883
    0xb85S0x9920x883: JUMP v883993(0x9a4),0xb7eB0x9920x883,0,"0,v883993",JUMP,0x883,private,False,0,0,0x9a40x883
    Begin block 0x9a40x883,0x9a40x883,0,0,0,0x883,private,False,0,0,0x9a40x883
"    prev=[0xb7eB0x9920x883], succ=[0x9a90x883, 0x9f50x883]",0x9a40x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    =================================,0x9a40x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    0x9a50x883: v8839a5(0x9f5) = CONST ,0x9a40x883,v8839a5,0,CONST,0x883,private,False,0x9f5,0,"0x9a90x883, 0x9f50x883"
"    0x9a80x883: JUMPI v8839a5(0x9f5), vb7e_0V992883",0x9a40x883,0,"0,v8839a5,vb7e_0V992883",JUMPI,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    Begin block 0x9a90x883,0x9a90x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
"    prev=[0x9a40x883], succ=[]",0x9a90x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    =================================,0x9a90x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    0x9a90x883: v8839a9(0x40) = CONST ,0x9a90x883,v8839a9,0,CONST,0x883,private,False,0x40,0,"0x9a90x883, 0x9f50x883"
    0x9ac0x883: v8839ac = MLOAD v8839a9(0x40),0x9a90x883,v8839ac,"0,v8839a9",MLOAD,0x883,private,False,0,0x883&m0x40,"0x9a90x883, 0x9f50x883"
    0x9ad0x883: v8839ad(0x461bcd) = CONST ,0x9a90x883,v8839ad,0,CONST,0x883,private,False,0x461bcd,0,"0x9a90x883, 0x9f50x883"
    0x9b10x883: v8839b1(0xe5) = CONST ,0x9a90x883,v8839b1,0,CONST,0x883,private,False,0xe5,0,"0x9a90x883, 0x9f50x883"
"    0x9b30x883: v8839b3(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v8839b1(0xe5), v8839ad(0x461bcd)",0x9a90x883,v8839b3,"0,v8839b1,v8839ad",SHL,0x883,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x9a90x883, 0x9f50x883"
"    0x9b50x883: MSTORE v8839ac, v8839b3(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x9a90x883,0x883&m0x40,"0,v8839ac,v8839b3",MSTORE,0x883,private,False,0,0x883&m0x40,"0x9a90x883, 0x9f50x883"
    0x9b60x883: v8839b6(0x20) = CONST ,0x9a90x883,v8839b6,0,CONST,0x883,private,False,0x20,0,"0x9a90x883, 0x9f50x883"
    0x9b80x883: v8839b8(0x4) = CONST ,0x9a90x883,v8839b8,0,CONST,0x883,private,False,0x4,0,"0x9a90x883, 0x9f50x883"
"    0x9bb0x883: v8839bb = ADD v8839ac, v8839b8(0x4)",0x9a90x883,v8839bb,"0,v8839ac,v8839b8",ADD,0x883,private,False,0,0x883&m0x40+0x4,"0x9a90x883, 0x9f50x883"
"    0x9bc0x883: MSTORE v8839bb, v8839b6(0x20)",0x9a90x883,0x883&m0x40+0x4,"0,v8839bb,v8839b6",MSTORE,0x883,private,False,0,0x883&m0x40+0x4,"0x9a90x883, 0x9f50x883"
    0x9bd0x883: v8839bd(0x1f) = CONST ,0x9a90x883,v8839bd,0,CONST,0x883,private,False,0x1f,0,"0x9a90x883, 0x9f50x883"
    0x9bf0x883: v8839bf(0x24) = CONST ,0x9a90x883,v8839bf,0,CONST,0x883,private,False,0x24,0,"0x9a90x883, 0x9f50x883"
"    0x9c20x883: v8839c2 = ADD v8839ac, v8839bf(0x24)",0x9a90x883,v8839c2,"0,v8839ac,v8839bf",ADD,0x883,private,False,0,0x883&m0x40+0x24,"0x9a90x883, 0x9f50x883"
"    0x9c30x883: MSTORE v8839c2, v8839bd(0x1f)",0x9a90x883,0x883&m0x40+0x24,"0,v8839c2,v8839bd",MSTORE,0x883,private,False,0,0x883&m0x40+0x24,"0x9a90x883, 0x9f50x883"
    0x9c40x883: v8839c4(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400) = CONST ,0x9a90x883,v8839c4,0,CONST,0x883,private,False,0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400,0,"0x9a90x883, 0x9f50x883"
    0x9e50x883: v8839e5(0x44) = CONST ,0x9a90x883,v8839e5,0,CONST,0x883,private,False,0x44,0,"0x9a90x883, 0x9f50x883"
"    0x9e80x883: v8839e8 = ADD v8839ac, v8839e5(0x44)",0x9a90x883,v8839e8,"0,v8839ac,v8839e5",ADD,0x883,private,False,0,0x883&m0x40+0x44,"0x9a90x883, 0x9f50x883"
"    0x9e90x883: MSTORE v8839e8, v8839c4(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400)",0x9a90x883,0x883&m0x40+0x44,"0,v8839e8,v8839c4",MSTORE,0x883,private,False,0,0x883&m0x40+0x44,"0x9a90x883, 0x9f50x883"
    0x9eb0x883: v8839eb = MLOAD v8839a9(0x40),0x9a90x883,v8839eb,"0,v8839a9",MLOAD,0x883,private,False,0,0x883&m0x40,"0x9a90x883, 0x9f50x883"
"    0x9ef0x883: v8839ef(0x0) = SUB v8839ac, v8839eb",0x9a90x883,v8839ef,"0,v8839ac,v8839eb",SUB,0x883,private,False,0x0,0x883&m0x40-0x0,"0x9a90x883, 0x9f50x883"
    0x9f00x883: v8839f0(0x64) = CONST ,0x9a90x883,v8839f0,0,CONST,0x883,private,False,0x64,0,"0x9a90x883, 0x9f50x883"
"    0x9f20x883: v8839f2(0x64) = ADD v8839f0(0x64), v8839ef(0x0)",0x9a90x883,v8839f2,"0,v8839f0,v8839ef",ADD,0x883,private,False,0x64,0x883&m0x40-0x0+0x64,"0x9a90x883, 0x9f50x883"
"    0x9f40x883: REVERT v8839eb, v8839f2(0x64)",0x9a90x883,0,"0,v8839eb,v8839f2",REVERT,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
    Begin block 0x9f50x883,0x9f50x883,0,0,0,0x883,private,False,0,0,"0x9a90x883, 0x9f50x883"
"    prev=[0x9a40x883], succ=[0xa140x883]",0x9f50x883,0,0,0,0x883,private,False,0,0,0xa140x883
    =================================,0x9f50x883,0,0,0,0x883,private,False,0,0,0xa140x883
    0x9f60x883: v8839f6(0x0) = CONST ,0x9f50x883,v8839f6,0,CONST,0x883,private,False,0x0,0,0xa140x883
    0x9f80x883: v8839f8(0x60) = CONST ,0x9f50x883,v8839f8,0,CONST,0x883,private,False,0x60,0,0xa140x883
    0x9fb0x883: v8839fb(0x1) = CONST ,0x9f50x883,v8839fb,0,CONST,0x883,private,False,0x1,0,0xa140x883
    0x9fd0x883: v8839fd(0x1) = CONST ,0x9f50x883,v8839fd,0,CONST,0x883,private,False,0x1,0,0xa140x883
    0x9ff0x883: v8839ff(0xa0) = CONST ,0x9f50x883,v8839ff,0,CONST,0x883,private,False,0xa0,0,0xa140x883
"    0xa010x883: v883a01(0x10000000000000000000000000000000000000000) = SHL v8839ff(0xa0), v8839fd(0x1)",0x9f50x883,v883a01,"0,v8839ff,v8839fd",SHL,0x883,private,False,0x10000000000000000000000000000000000000000,0,0xa140x883
"    0xa020x883: v883a02(0xffffffffffffffffffffffffffffffffffffffff) = SUB v883a01(0x10000000000000000000000000000000000000000), v8839fb(0x1)",0x9f50x883,v883a02,"0,v883a01,v8839fb",SUB,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xa140x883
"    0xa030x883: v883a03 = AND v883a02(0xffffffffffffffffffffffffffffffffffffffff), v883arg2",0x9f50x883,v883a03,"0,v883a02,v883arg2",AND,0x883,private,False,0,0,0xa140x883
    0xa050x883: v883a05(0x40) = CONST ,0x9f50x883,v883a05,0,CONST,0x883,private,False,0x40,0,0xa140x883
    0xa070x883: v883a07 = MLOAD v883a05(0x40),0x9f50x883,v883a07,"0,v883a05",MLOAD,0x883,private,False,0,0x883&m0x40,0xa140x883
    0xa0b0x883: v883a0b(0x44) = MLOAD v961,0x9f50x883,v883a0b,"0,v961",MLOAD,0x883,private,False,0x44,0x883&m0x44,0xa140x883
    0xa0d0x883: v883a0d(0x20) = CONST ,0x9f50x883,v883a0d,0,CONST,0x883,private,False,0x20,0,0xa140x883
"    0xa0f0x883: v883a0f = ADD v883a0d(0x20), v961",0x9f50x883,v883a0f,"0,v883a0d,v961",ADD,0x883,private,False,0,0x883&m0x40+0x20,0xa140x883
    Begin block 0xa140x883,0xa140x883,0,0,0,0x883,private,False,0,0,0xa140x883
"    prev=[0xa1d0x883, 0x9f50x883], succ=[0xa330x883, 0xa1d0x883]",0xa140x883,0,0,0,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
    =================================,0xa140x883,0,0,0,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
"    0xa140x883_0x2: va14883_2 = PHI v883a26, v883a0b(0x44)",0xa140x883,va14883_2,"0,v883a26,v883a0b",PHI,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
    0xa150x883: v883a15(0x20) = CONST ,0xa140x883,v883a15,0,CONST,0x883,private,False,0x20,0,"0xa330x883, 0xa1d0x883"
"    0xa180x883: v883a18 = LT va14883_2, v883a15(0x20)",0xa140x883,v883a18,"0,va14883_2,v883a15",LT,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
    0xa190x883: v883a19(0xa33) = CONST ,0xa140x883,v883a19,0,CONST,0x883,private,False,0xa33,0,"0xa330x883, 0xa1d0x883"
"    0xa1c0x883: JUMPI v883a19(0xa33), v883a18",0xa140x883,0,"0,v883a19,v883a18",JUMPI,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
    Begin block 0xa330x883,0xa330x883,0,0,0,0x883,private,False,0,0,"0xa330x883, 0xa1d0x883"
"    prev=[0xa140x883], succ=[0xa740x883, 0xa950x883]",0xa330x883,0,0,0,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    =================================,0xa330x883,0,0,0,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa330x883_0x0: va33883_0 = PHI v883a2e, v883a0f",0xa330x883,va33883_0,"0,v883a2e,v883a0f",PHI,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa330x883_0x1: va33883_1 = PHI v883a2c, v883a07",0xa330x883,va33883_1,"0,v883a2c,v883a07",PHI,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa330x883_0x2: va33883_2 = PHI v883a26, v883a0b(0x44)",0xa330x883,va33883_2,"0,v883a26,v883a0b",PHI,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa340x883: v883a34(0x1) = CONST ,0xa330x883,v883a34,0,CONST,0x883,private,False,0x1,0,"0xa740x883, 0xa950x883"
    0xa370x883: v883a37(0x20) = CONST ,0xa330x883,v883a37,0,CONST,0x883,private,False,0x20,0,"0xa740x883, 0xa950x883"
"    0xa390x883: v883a39 = SUB v883a37(0x20), va33883_2",0xa330x883,v883a39,"0,v883a37,va33883_2",SUB,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa3a0x883: v883a3a(0x100) = CONST ,0xa330x883,v883a3a,0,CONST,0x883,private,False,0x100,0,"0xa740x883, 0xa950x883"
"    0xa3d0x883: v883a3d = EXP v883a3a(0x100), v883a39",0xa330x883,v883a3d,"0,v883a3a,v883a39",EXP,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa3e0x883: v883a3e = SUB v883a3d, v883a34(0x1)",0xa330x883,v883a3e,"0,v883a3d,v883a34",SUB,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa400x883: v883a40 = NOT v883a3e,0xa330x883,v883a40,"0,v883a3e",NOT,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa420x883: v883a42 = MLOAD va33883_0,0xa330x883,v883a42,"0,va33883_0",MLOAD,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa430x883: v883a43 = AND v883a42, v883a40",0xa330x883,v883a43,"0,v883a42,v883a40",AND,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa460x883: v883a46 = MLOAD va33883_1,0xa330x883,v883a46,"0,va33883_1",MLOAD,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa470x883: v883a47 = AND v883a46, v883a3e",0xa330x883,v883a47,"0,v883a46,v883a3e",AND,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa4a0x883: v883a4a = OR v883a43, v883a47",0xa330x883,v883a4a,"0,v883a43,v883a47",OR,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa4c0x883: MSTORE va33883_1, v883a4a",0xa330x883,0,"0,va33883_1,v883a4a",MSTORE,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa550x883: v883a55 = ADD v883a0b(0x44), v883a07",0xa330x883,v883a55,"0,v883a0b,v883a07",ADD,0x883,private,False,0,0x883&m0x40+0x44,"0xa740x883, 0xa950x883"
    0xa590x883: v883a59(0x0) = CONST ,0xa330x883,v883a59,0,CONST,0x883,private,False,0x0,0,"0xa740x883, 0xa950x883"
    0xa5b0x883: v883a5b(0x40) = CONST ,0xa330x883,v883a5b,0,CONST,0x883,private,False,0x40,0,"0xa740x883, 0xa950x883"
    0xa5d0x883: v883a5d = MLOAD v883a5b(0x40),0xa330x883,v883a5d,"0,v883a5b",MLOAD,0x883,private,False,0,0x883&m0x40,"0xa740x883, 0xa950x883"
"    0xa600x883: v883a60(0x44) = SUB v883a55, v883a5d",0xa330x883,v883a60,"0,v883a55,v883a5d",SUB,0x883,private,False,0x44,0x883&m0x40+0x44-0x44,"0xa740x883, 0xa950x883"
    0xa620x883: v883a62(0x0) = CONST ,0xa330x883,v883a62,0,CONST,0x883,private,False,0x0,0,"0xa740x883, 0xa950x883"
    0xa650x883: v883a65 = GAS ,0xa330x883,v883a65,0,GAS,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    0xa660x883: v883a66 = CALL v883a65, v883a03, v883a62(0x0), v883a5d, v883a60(0x44), v883a5d, v883a59(0x0)",0xa330x883,v883a66,"0,v883a65,v883a03,v883a62,v883a5d,v883a60,v883a5d,v883a59",CALL,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa6a0x883: v883a6a = RETURNDATASIZE ,0xa330x883,v883a6a,0,RETURNDATASIZE,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa6c0x883: v883a6c(0x0) = CONST ,0xa330x883,v883a6c,0,CONST,0x883,private,False,0x0,0,"0xa740x883, 0xa950x883"
"    0xa6f0x883: v883a6f = EQ v883a6a, v883a6c(0x0)",0xa330x883,v883a6f,"0,v883a6a,v883a6c",EQ,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    0xa700x883: v883a70(0xa95) = CONST ,0xa330x883,v883a70,0,CONST,0x883,private,False,0xa95,0,"0xa740x883, 0xa950x883"
"    0xa730x883: JUMPI v883a70(0xa95), v883a6f",0xa330x883,0,"0,v883a70,v883a6f",JUMPI,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
    Begin block 0xa740x883,0xa740x883,0,0,0,0x883,private,False,0,0,"0xa740x883, 0xa950x883"
"    prev=[0xa330x883], succ=[0xa9a0x883]",0xa740x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
    =================================,0xa740x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
    0xa740x883: v883a74(0x40) = CONST ,0xa740x883,v883a74,0,CONST,0x883,private,False,0x40,0,0xa9a0x883
    0xa760x883: v883a76 = MLOAD v883a74(0x40),0xa740x883,v883a76,"0,v883a74",MLOAD,0x883,private,False,0,0x883&m0x40,0xa9a0x883
    0xa790x883: v883a79(0x1f) = CONST ,0xa740x883,v883a79,0,CONST,0x883,private,False,0x1f,0,0xa9a0x883
    0xa7b0x883: v883a7b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v883a79(0x1f),0xa740x883,v883a7b,"0,v883a79",NOT,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xa9a0x883
    0xa7c0x883: v883a7c(0x3f) = CONST ,0xa740x883,v883a7c,0,CONST,0x883,private,False,0x3f,0,0xa9a0x883
    0xa7e0x883: v883a7e = RETURNDATASIZE ,0xa740x883,v883a7e,0,RETURNDATASIZE,0x883,private,False,0,0,0xa9a0x883
"    0xa7f0x883: v883a7f = ADD v883a7e, v883a7c(0x3f)",0xa740x883,v883a7f,"0,v883a7e,v883a7c",ADD,0x883,private,False,0,0,0xa9a0x883
"    0xa800x883: v883a80 = AND v883a7f, v883a7b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xa740x883,v883a80,"0,v883a7f,v883a7b",AND,0x883,private,False,0,0,0xa9a0x883
"    0xa820x883: v883a82 = ADD v883a76, v883a80",0xa740x883,v883a82,"0,v883a76,v883a80",ADD,0x883,private,False,0,0,0xa9a0x883
    0xa830x883: v883a83(0x40) = CONST ,0xa740x883,v883a83,0,CONST,0x883,private,False,0x40,0,0xa9a0x883
"    0xa850x883: MSTORE v883a83(0x40), v883a82",0xa740x883,0,"0,v883a83,v883a82",MSTORE,0x883,private,False,0,0,0xa9a0x883
    0xa860x883: v883a86 = RETURNDATASIZE ,0xa740x883,v883a86,0,RETURNDATASIZE,0x883,private,False,0,0,0xa9a0x883
"    0xa880x883: MSTORE v883a76, v883a86",0xa740x883,0x883&m0x40,"0,v883a76,v883a86",MSTORE,0x883,private,False,0,0x883&m0x40,0xa9a0x883
    0xa890x883: v883a89 = RETURNDATASIZE ,0xa740x883,v883a89,0,RETURNDATASIZE,0x883,private,False,0,0,0xa9a0x883
    0xa8a0x883: v883a8a(0x0) = CONST ,0xa740x883,v883a8a,0,CONST,0x883,private,False,0x0,0,0xa9a0x883
    0xa8c0x883: v883a8c(0x20) = CONST ,0xa740x883,v883a8c,0,CONST,0x883,private,False,0x20,0,0xa9a0x883
"    0xa8f0x883: v883a8f = ADD v883a76, v883a8c(0x20)",0xa740x883,v883a8f,"0,v883a76,v883a8c",ADD,0x883,private,False,0,0x883&m0x40+0x20,0xa9a0x883
"    0xa900x883: RETURNDATACOPY v883a8f, v883a8a(0x0), v883a89",0xa740x883,0,"0,v883a8f,v883a8a,v883a89",RETURNDATACOPY,0x883,private,False,0,0,0xa9a0x883
    0xa910x883: v883a91(0xa9a) = CONST ,0xa740x883,v883a91,0,CONST,0x883,private,False,0xa9a,0,0xa9a0x883
    0xa940x883: JUMP v883a91(0xa9a),0xa740x883,0,"0,v883a91",JUMP,0x883,private,False,0,0,0xa9a0x883
    Begin block 0xa9a0x883,0xa9a0x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
"    prev=[0xa740x883, 0xa950x883], succ=[0xaa50x883, 0xaf10x883]",0xa9a0x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    =================================,0xa9a0x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    0xaa10x883: v883aa1(0xaf1) = CONST ,0xa9a0x883,v883aa1,0,CONST,0x883,private,False,0xaf1,0,"0xaa50x883, 0xaf10x883"
"    0xaa40x883: JUMPI v883aa1(0xaf1), v883a66",0xa9a0x883,0,"0,v883aa1,v883a66",JUMPI,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    Begin block 0xaa50x883,0xaa50x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
"    prev=[0xa9a0x883], succ=[]",0xaa50x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    =================================,0xaa50x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    0xaa50x883: v883aa5(0x40) = CONST ,0xaa50x883,v883aa5,0,CONST,0x883,private,False,0x40,0,"0xaa50x883, 0xaf10x883"
    0xaa80x883: v883aa8 = MLOAD v883aa5(0x40),0xaa50x883,v883aa8,"0,v883aa5",MLOAD,0x883,private,False,0,0x883&m0x40,"0xaa50x883, 0xaf10x883"
    0xaa90x883: v883aa9(0x461bcd) = CONST ,0xaa50x883,v883aa9,0,CONST,0x883,private,False,0x461bcd,0,"0xaa50x883, 0xaf10x883"
    0xaad0x883: v883aad(0xe5) = CONST ,0xaa50x883,v883aad,0,CONST,0x883,private,False,0xe5,0,"0xaa50x883, 0xaf10x883"
"    0xaaf0x883: v883aaf(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v883aad(0xe5), v883aa9(0x461bcd)",0xaa50x883,v883aaf,"0,v883aad,v883aa9",SHL,0x883,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xaa50x883, 0xaf10x883"
"    0xab10x883: MSTORE v883aa8, v883aaf(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xaa50x883,0x883&m0x40,"0,v883aa8,v883aaf",MSTORE,0x883,private,False,0,0x883&m0x40,"0xaa50x883, 0xaf10x883"
    0xab20x883: v883ab2(0x20) = CONST ,0xaa50x883,v883ab2,0,CONST,0x883,private,False,0x20,0,"0xaa50x883, 0xaf10x883"
    0xab40x883: v883ab4(0x4) = CONST ,0xaa50x883,v883ab4,0,CONST,0x883,private,False,0x4,0,"0xaa50x883, 0xaf10x883"
"    0xab70x883: v883ab7 = ADD v883aa8, v883ab4(0x4)",0xaa50x883,v883ab7,"0,v883aa8,v883ab4",ADD,0x883,private,False,0,0x883&m0x40+0x4,"0xaa50x883, 0xaf10x883"
"    0xaba0x883: MSTORE v883ab7, v883ab2(0x20)",0xaa50x883,0x883&m0x40+0x4,"0,v883ab7,v883ab2",MSTORE,0x883,private,False,0,0x883&m0x40+0x4,"0xaa50x883, 0xaf10x883"
    0xabb0x883: v883abb(0x24) = CONST ,0xaa50x883,v883abb,0,CONST,0x883,private,False,0x24,0,"0xaa50x883, 0xaf10x883"
"    0xabe0x883: v883abe = ADD v883aa8, v883abb(0x24)",0xaa50x883,v883abe,"0,v883aa8,v883abb",ADD,0x883,private,False,0,0x883&m0x40+0x24,"0xaa50x883, 0xaf10x883"
"    0xabf0x883: MSTORE v883abe, v883ab2(0x20)",0xaa50x883,0x883&m0x40+0x24,"0,v883abe,v883ab2",MSTORE,0x883,private,False,0,0x883&m0x40+0x24,"0xaa50x883, 0xaf10x883"
    0xac00x883: v883ac0(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564) = CONST ,0xaa50x883,v883ac0,0,CONST,0x883,private,False,0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564,0,"0xaa50x883, 0xaf10x883"
    0xae10x883: v883ae1(0x44) = CONST ,0xaa50x883,v883ae1,0,CONST,0x883,private,False,0x44,0,"0xaa50x883, 0xaf10x883"
"    0xae40x883: v883ae4 = ADD v883aa8, v883ae1(0x44)",0xaa50x883,v883ae4,"0,v883aa8,v883ae1",ADD,0x883,private,False,0,0x883&m0x40+0x44,"0xaa50x883, 0xaf10x883"
"    0xae50x883: MSTORE v883ae4, v883ac0(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564)",0xaa50x883,0x883&m0x40+0x44,"0,v883ae4,v883ac0",MSTORE,0x883,private,False,0,0x883&m0x40+0x44,"0xaa50x883, 0xaf10x883"
    0xae70x883: v883ae7 = MLOAD v883aa5(0x40),0xaa50x883,v883ae7,"0,v883aa5",MLOAD,0x883,private,False,0,0x883&m0x40,"0xaa50x883, 0xaf10x883"
"    0xaeb0x883: v883aeb(0x0) = SUB v883aa8, v883ae7",0xaa50x883,v883aeb,"0,v883aa8,v883ae7",SUB,0x883,private,False,0x0,0x883&m0x40-0x0,"0xaa50x883, 0xaf10x883"
    0xaec0x883: v883aec(0x64) = CONST ,0xaa50x883,v883aec,0,CONST,0x883,private,False,0x64,0,"0xaa50x883, 0xaf10x883"
"    0xaee0x883: v883aee(0x64) = ADD v883aec(0x64), v883aeb(0x0)",0xaa50x883,v883aee,"0,v883aec,v883aeb",ADD,0x883,private,False,0x64,0x883&m0x40-0x0+0x64,"0xaa50x883, 0xaf10x883"
"    0xaf00x883: REVERT v883ae7, v883aee(0x64)",0xaa50x883,0,"0,v883ae7,v883aee",REVERT,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
    Begin block 0xaf10x883,0xaf10x883,0,0,0,0x883,private,False,0,0,"0xaa50x883, 0xaf10x883"
"    prev=[0xa9a0x883], succ=[0xaf90x883, 0xe940x883]",0xaf10x883,0,0,0,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
    =================================,0xaf10x883,0,0,0,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
"    0xaf10x883_0x0: vaf1883_0 = PHI v883a96(0x60), v883a76",0xaf10x883,vaf1883_0,"0,v883a96,v883a76",PHI,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
    0xaf30x883: v883af3 = MLOAD vaf1883_0,0xaf10x883,v883af3,"0,vaf1883_0",MLOAD,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
    0xaf40x883: v883af4 = ISZERO v883af3,0xaf10x883,v883af4,"0,v883af3",ISZERO,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
    0xaf50x883: v883af5(0xe94) = CONST ,0xaf10x883,v883af5,0,CONST,0x883,private,False,0xe94,0,"0xaf90x883, 0xe940x883"
"    0xaf80x883: JUMPI v883af5(0xe94), v883af4",0xaf10x883,0,"0,v883af5,v883af4",JUMPI,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
    Begin block 0xaf90x883,0xaf90x883,0,0,0,0x883,private,False,0,0,"0xaf90x883, 0xe940x883"
"    prev=[0xaf10x883], succ=[0xb090x883, 0xb0d0x883]",0xaf90x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    =================================,0xaf90x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
"    0xaf90x883_0x0: vaf9883_0 = PHI v883a96(0x60), v883a76",0xaf90x883,vaf9883_0,"0,v883a96,v883a76",PHI,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xafb0x883: v883afb(0x20) = CONST ,0xaf90x883,v883afb,0,CONST,0x883,private,False,0x20,0,"0xb090x883, 0xb0d0x883"
"    0xafd0x883: v883afd = ADD v883afb(0x20), vaf9883_0",0xaf90x883,v883afd,"0,v883afb,vaf9883_0",ADD,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xaff0x883: v883aff = MLOAD vaf9883_0,0xaf90x883,v883aff,"0,vaf9883_0",MLOAD,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xb000x883: v883b00(0x20) = CONST ,0xaf90x883,v883b00,0,CONST,0x883,private,False,0x20,0,"0xb090x883, 0xb0d0x883"
"    0xb030x883: v883b03 = LT v883aff, v883b00(0x20)",0xaf90x883,v883b03,"0,v883aff,v883b00",LT,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xb040x883: v883b04 = ISZERO v883b03,0xaf90x883,v883b04,"0,v883b03",ISZERO,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xb050x883: v883b05(0xb0d) = CONST ,0xaf90x883,v883b05,0,CONST,0x883,private,False,0xb0d,0,"0xb090x883, 0xb0d0x883"
"    0xb080x883: JUMPI v883b05(0xb0d), v883b04",0xaf90x883,0,"0,v883b05,v883b04",JUMPI,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    Begin block 0xb090x883,0xb090x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
"    prev=[0xaf90x883], succ=[]",0xb090x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    =================================,0xb090x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    0xb090x883: v883b09(0x0) = CONST ,0xb090x883,v883b09,0,CONST,0x883,private,False,0x0,0,"0xb090x883, 0xb0d0x883"
"    0xb0c0x883: REVERT v883b09(0x0), v883b09(0x0)",0xb090x883,0,"0,v883b09,v883b09",REVERT,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
    Begin block 0xb0d0x883,0xb0d0x883,0,0,0,0x883,private,False,0,0,"0xb090x883, 0xb0d0x883"
"    prev=[0xaf90x883], succ=[0xb140x883, 0xeb90x883]",0xb0d0x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    =================================,0xb0d0x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    0xb0f0x883: v883b0f = MLOAD v883afd,0xb0d0x883,v883b0f,"0,v883afd",MLOAD,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    0xb100x883: v883b10(0xeb9) = CONST ,0xb0d0x883,v883b10,0,CONST,0x883,private,False,0xeb9,0,"0xb140x883, 0xeb90x883"
"    0xb130x883: JUMPI v883b10(0xeb9), v883b0f",0xb0d0x883,0,"0,v883b10,v883b0f",JUMPI,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    Begin block 0xb140x883,0xb140x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
"    prev=[0xb0d0x883], succ=[]",0xb140x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    =================================,0xb140x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    0xb140x883: v883b14(0x40) = CONST ,0xb140x883,v883b14,0,CONST,0x883,private,False,0x40,0,"0xb140x883, 0xeb90x883"
    0xb160x883: v883b16 = MLOAD v883b14(0x40),0xb140x883,v883b16,"0,v883b14",MLOAD,0x883,private,False,0,0x883&m0x40,"0xb140x883, 0xeb90x883"
    0xb170x883: v883b17(0x461bcd) = CONST ,0xb140x883,v883b17,0,CONST,0x883,private,False,0x461bcd,0,"0xb140x883, 0xeb90x883"
    0xb1b0x883: v883b1b(0xe5) = CONST ,0xb140x883,v883b1b,0,CONST,0x883,private,False,0xe5,0,"0xb140x883, 0xeb90x883"
"    0xb1d0x883: v883b1d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v883b1b(0xe5), v883b17(0x461bcd)",0xb140x883,v883b1d,"0,v883b1b,v883b17",SHL,0x883,private,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0xb140x883, 0xeb90x883"
"    0xb1f0x883: MSTORE v883b16, v883b1d(0x8c379a000000000000000000000000000000000000000000000000000000000)",0xb140x883,0x883&m0x40,"0,v883b16,v883b1d",MSTORE,0x883,private,False,0,0x883&m0x40,"0xb140x883, 0xeb90x883"
    0xb200x883: v883b20(0x4) = CONST ,0xb140x883,v883b20,0,CONST,0x883,private,False,0x4,0,"0xb140x883, 0xeb90x883"
"    0xb220x883: v883b22 = ADD v883b20(0x4), v883b16",0xb140x883,v883b22,"0,v883b20,v883b16",ADD,0x883,private,False,0,0x883&m0x40+0x4,"0xb140x883, 0xeb90x883"
    0xb250x883: v883b25(0x20) = CONST ,0xb140x883,v883b25,0,CONST,0x883,private,False,0x20,0,"0xb140x883, 0xeb90x883"
"    0xb270x883: v883b27 = ADD v883b25(0x20), v883b22",0xb140x883,v883b27,"0,v883b25,v883b22",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20,"0xb140x883, 0xeb90x883"
"    0xb2a0x883: v883b2a(0x20) = SUB v883b27, v883b22",0xb140x883,v883b2a,"0,v883b27,v883b22",SUB,0x883,private,False,0x20,0x883&m0x40+0x4+0x20-0x20,"0xb140x883, 0xeb90x883"
"    0xb2c0x883: MSTORE v883b22, v883b2a(0x20)",0xb140x883,0x883&m0x40+0x4,"0,v883b22,v883b2a",MSTORE,0x883,private,False,0,0x883&m0x40+0x4,"0xb140x883, 0xeb90x883"
    0xb2d0x883: v883b2d(0x2a) = CONST ,0xb140x883,v883b2d,0,CONST,0x883,private,False,0x2a,0,"0xb140x883, 0xeb90x883"
"    0xb300x883: MSTORE v883b27, v883b2d(0x2a)",0xb140x883,0x883&m0x40+0x4+0x20,"0,v883b27,v883b2d",MSTORE,0x883,private,False,0,0x883&m0x40+0x4+0x20,"0xb140x883, 0xeb90x883"
    0xb310x883: v883b31(0x20) = CONST ,0xb140x883,v883b31,0,CONST,0x883,private,False,0x20,0,"0xb140x883, 0xeb90x883"
"    0xb330x883: v883b33 = ADD v883b31(0x20), v883b27",0xb140x883,v883b33,"0,v883b31,v883b27",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20+0x20,"0xb140x883, 0xeb90x883"
    0xb350x883: v883b35(0xc2f) = CONST ,0xb140x883,v883b35,0,CONST,0x883,private,False,0xc2f,0,"0xb140x883, 0xeb90x883"
    0xb380x883: v883b38(0x2a) = CONST ,0xb140x883,v883b38,0,CONST,0x883,private,False,0x2a,0,"0xb140x883, 0xeb90x883"
"    0xb3b0x883: CODECOPY v883b33, v883b35(0xc2f), v883b38(0x2a)",0xb140x883,0,"0,v883b33,v883b35,v883b38",CODECOPY,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    0xb3c0x883: v883b3c(0x40) = CONST ,0xb140x883,v883b3c,0,CONST,0x883,private,False,0x40,0,"0xb140x883, 0xeb90x883"
"    0xb3e0x883: v883b3e = ADD v883b3c(0x40), v883b33",0xb140x883,v883b3e,"0,v883b3c,v883b33",ADD,0x883,private,False,0,0x883&m0x40+0x4+0x20+0x20+0x40,"0xb140x883, 0xeb90x883"
    0xb420x883: v883b42(0x40) = CONST ,0xb140x883,v883b42,0,CONST,0x883,private,False,0x40,0,"0xb140x883, 0xeb90x883"
    0xb440x883: v883b44 = MLOAD v883b42(0x40),0xb140x883,v883b44,"0,v883b42",MLOAD,0x883,private,False,0,0x883&m0x40,"0xb140x883, 0xeb90x883"
"    0xb470x883: v883b47(0x84) = SUB v883b3e, v883b44",0xb140x883,v883b47,"0,v883b3e,v883b44",SUB,0x883,private,False,0x84,0x883&m0x40+0x4+0x20+0x20+0x40-0x84,"0xb140x883, 0xeb90x883"
"    0xb490x883: REVERT v883b44, v883b47(0x84)",0xb140x883,0,"0,v883b44,v883b47",REVERT,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
    Begin block 0xeb90x883,0xeb90x883,0,0,0,0x883,private,False,0,0,"0xb140x883, 0xeb90x883"
"    prev=[0xb0d0x883], succ=[0xe70]",0xeb90x883,0,0,0,0x883,private,False,0,0,0xe70
    =================================,0xeb90x883,0,0,0,0x883,private,False,0,0,0xe70
    0xebe0x883: JUMP v98c(0xe70),0xeb90x883,0,"0,v98c",JUMP,0x883,private,False,0,0,0xe70
    Begin block 0xe70,0xe70,0,0,0,0x883,private,False,0,0,0xe70
"    prev=[0xe940x883, 0xeb90x883], succ=[]",0xe70,0,0,0,0x883,private,False,0,0,0xe70
    =================================,0xe70,0,0,0,0x883,private,False,0,0,0xe70
    0xe74: RETURNPRIVATE v883arg3,0xe70,0,"0,v883arg3",RETURNPRIVATE,0x883,private,False,0,0,0xe70
    Begin block 0xe940x883,0xe940x883,0,0,0,0x883,private,False,0,0,0xe70
"    prev=[0xaf10x883], succ=[0xe70]",0xe940x883,0,0,0,0x883,private,False,0,0,0xe70
    =================================,0xe940x883,0,0,0,0x883,private,False,0,0,0xe70
    0xe990x883: JUMP v98c(0xe70),0xe940x883,0,"0,v98c",JUMP,0x883,private,False,0,0,0xe70
    Begin block 0xa950x883,0xa950x883,0,0,0,0x883,private,False,0,0,0xe70
"    prev=[0xa330x883], succ=[0xa9a0x883]",0xa950x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
    =================================,0xa950x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
    0xa960x883: v883a96(0x60) = CONST ,0xa950x883,v883a96,0,CONST,0x883,private,False,0x60,0,0xa9a0x883
    Begin block 0xa1d0x883,0xa1d0x883,0,0,0,0x883,private,False,0,0,0xa9a0x883
"    prev=[0xa140x883], succ=[0xa140x883]",0xa1d0x883,0,0,0,0x883,private,False,0,0,0xa140x883
    =================================,0xa1d0x883,0,0,0,0x883,private,False,0,0,0xa140x883
"    0xa1d0x883_0x0: va1d883_0 = PHI v883a2e, v883a0f",0xa1d0x883,va1d883_0,"0,v883a2e,v883a0f",PHI,0x883,private,False,0,0,0xa140x883
"    0xa1d0x883_0x1: va1d883_1 = PHI v883a2c, v883a07",0xa1d0x883,va1d883_1,"0,v883a2c,v883a07",PHI,0x883,private,False,0,0,0xa140x883
"    0xa1d0x883_0x2: va1d883_2 = PHI v883a26, v883a0b(0x44)",0xa1d0x883,va1d883_2,"0,v883a26,v883a0b",PHI,0x883,private,False,0,0,0xa140x883
    0xa1e0x883: v883a1e = MLOAD va1d883_0,0xa1d0x883,v883a1e,"0,va1d883_0",MLOAD,0x883,private,False,0,0,0xa140x883
"    0xa200x883: MSTORE va1d883_1, v883a1e",0xa1d0x883,0,"0,va1d883_1,v883a1e",MSTORE,0x883,private,False,0,0,0xa140x883
    0xa210x883: v883a21(0x1f) = CONST ,0xa1d0x883,v883a21,0,CONST,0x883,private,False,0x1f,0,0xa140x883
    0xa230x883: v883a23(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v883a21(0x1f),0xa1d0x883,v883a23,"0,v883a21",NOT,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0,0,0xa140x883
"    0xa260x883: v883a26 = ADD va1d883_2, v883a23(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)",0xa1d0x883,v883a26,"0,va1d883_2,v883a23",ADD,0x883,private,False,0,0,0xa140x883
    0xa280x883: v883a28(0x20) = CONST ,0xa1d0x883,v883a28,0,CONST,0x883,private,False,0x20,0,0xa140x883
"    0xa2c0x883: v883a2c = ADD v883a28(0x20), va1d883_1",0xa1d0x883,v883a2c,"0,v883a28,va1d883_1",ADD,0x883,private,False,0,0,0xa140x883
"    0xa2e0x883: v883a2e = ADD v883a28(0x20), va1d883_0",0xa1d0x883,v883a2e,"0,v883a28,va1d883_0",ADD,0x883,private,False,0,0,0xa140x883
    0xa2f0x883: v883a2f(0xa14) = CONST ,0xa1d0x883,v883a2f,0,CONST,0x883,private,False,0xa14,0,0xa140x883
    0xa320x883: JUMP v883a2f(0xa14),0xa1d0x883,0,"0,v883a2f",JUMP,0x883,private,False,0,0,0xa140x883
    Begin block 0xb79B0x9920x883,0xb79B0x9920x883,0,0,0,0x883,private,False,0,0,0xa140x883
"    prev=[0xb4aB0x9920x883], succ=[0xb7eB0x9920x883]",0xb79B0x9920x883,0,0,0,0x883,private,False,0,0,0xb7eB0x9920x883
    =================================,0xb79B0x9920x883,0,0,0,0x883,private,False,0,0,0xb7eB0x9920x883
"    0xb7cS0x9920x883: vb7cV992883 = EQ vb4eV992883, vb4fV992883(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470)",0xb79B0x9920x883,vb7cV992883,"0,vb4eV992883,vb4fV992883",EQ,0x883,private,False,0,0,0xb7eB0x9920x883
    0xb7dS0x9920x883: vb7dV992883 = ISZERO vb7cV992883,0xb79B0x9920x883,vb7dV992883,"0,vb7cV992883",ISZERO,0x883,private,False,0,0,0xb7eB0x9920x883
    Begin block 0x88b,0x88b,0,0,0,0x883,private,False,0,0,0xb7eB0x9920x883
"    prev=[0x883], succ=[0x8d7, 0x8db]",0x88b,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
    =================================,0x88b,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x88c: v88c(0x40) = CONST ,0x88b,v88c,0,CONST,0x883,private,False,0x40,0,"0x8d7, 0x8db"
    0x88f: v88f = MLOAD v88c(0x40),0x88b,v88f,"0,v88c",MLOAD,0x883,private,False,0,0x883&m0x40,"0x8d7, 0x8db"
    0x890: v890(0x6eb1769f) = CONST ,0x88b,v890,0,CONST,0x883,private,False,0x6eb1769f,0,"0x8d7, 0x8db"
    0x895: v895(0xe1) = CONST ,0x88b,v895,0,CONST,0x883,private,False,0xe1,0,"0x8d7, 0x8db"
"    0x897: v897(0xdd62ed3e00000000000000000000000000000000000000000000000000000000) = SHL v895(0xe1), v890(0x6eb1769f)",0x88b,v897,"0,v895,v890",SHL,0x883,private,False,0xdd62ed3e00000000000000000000000000000000000000000000000000000000,0,"0x8d7, 0x8db"
"    0x899: MSTORE v88f, v897(0xdd62ed3e00000000000000000000000000000000000000000000000000000000)",0x88b,0x883&m0x40,"0,v88f,v897",MSTORE,0x883,private,False,0,0x883&m0x40,"0x8d7, 0x8db"
    0x89a: v89a = ADDRESS ,0x88b,v89a,0,ADDRESS,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x89b: v89b(0x4) = CONST ,0x88b,v89b,0,CONST,0x883,private,False,0x4,0,"0x8d7, 0x8db"
"    0x89e: v89e = ADD v88f, v89b(0x4)",0x88b,v89e,"0,v88f,v89b",ADD,0x883,private,False,0,0x883&m0x40+0x4,"0x8d7, 0x8db"
"    0x89f: MSTORE v89e, v89a",0x88b,0x883&m0x40+0x4,"0,v89e,v89a",MSTORE,0x883,private,False,0,0x883&m0x40+0x4,"0x8d7, 0x8db"
    0x8a0: v8a0(0x1) = CONST ,0x88b,v8a0,0,CONST,0x883,private,False,0x1,0,"0x8d7, 0x8db"
    0x8a2: v8a2(0x1) = CONST ,0x88b,v8a2,0,CONST,0x883,private,False,0x1,0,"0x8d7, 0x8db"
    0x8a4: v8a4(0xa0) = CONST ,0x88b,v8a4,0,CONST,0x883,private,False,0xa0,0,"0x8d7, 0x8db"
"    0x8a6: v8a6(0x10000000000000000000000000000000000000000) = SHL v8a4(0xa0), v8a2(0x1)",0x88b,v8a6,"0,v8a4,v8a2",SHL,0x883,private,False,0x10000000000000000000000000000000000000000,0,"0x8d7, 0x8db"
"    0x8a7: v8a7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8a6(0x10000000000000000000000000000000000000000), v8a0(0x1)",0x88b,v8a7,"0,v8a6,v8a0",SUB,0x883,private,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x8d7, 0x8db"
"    0x8aa: v8aa = AND v8a7(0xffffffffffffffffffffffffffffffffffffffff), v883arg1",0x88b,v8aa,"0,v8a7,v883arg1",AND,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8ab: v8ab(0x24) = CONST ,0x88b,v8ab,0,CONST,0x883,private,False,0x24,0,"0x8d7, 0x8db"
"    0x8ae: v8ae = ADD v88f, v8ab(0x24)",0x88b,v8ae,"0,v88f,v8ab",ADD,0x883,private,False,0,0x883&m0x40+0x24,"0x8d7, 0x8db"
"    0x8af: MSTORE v8ae, v8aa",0x88b,0x883&m0x40+0x24,"0,v8ae,v8aa",MSTORE,0x883,private,False,0,0x883&m0x40+0x24,"0x8d7, 0x8db"
    0x8b1: v8b1 = MLOAD v88c(0x40),0x88b,v8b1,"0,v88c",MLOAD,0x883,private,False,0,0x883&m0x40,"0x8d7, 0x8db"
"    0x8b4: v8b4 = AND v883arg2, v8a7(0xffffffffffffffffffffffffffffffffffffffff)",0x88b,v8b4,"0,v883arg2,v8a7",AND,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8b6: v8b6(0xdd62ed3e) = CONST ,0x88b,v8b6,0,CONST,0x883,private,False,0xdd62ed3e,0,"0x8d7, 0x8db"
    0x8bc: v8bc(0x44) = CONST ,0x88b,v8bc,0,CONST,0x883,private,False,0x44,0,"0x8d7, 0x8db"
"    0x8c0: v8c0 = ADD v88f, v8bc(0x44)",0x88b,v8c0,"0,v88f,v8bc",ADD,0x883,private,False,0,0x883&m0x40+0x44,"0x8d7, 0x8db"
    0x8c2: v8c2(0x20) = CONST ,0x88b,v8c2,0,CONST,0x883,private,False,0x20,0,"0x8d7, 0x8db"
"    0x8ca: v8ca(0x0) = SUB v88f, v8b1",0x88b,v8ca,"0,v88f,v8b1",SUB,0x883,private,False,0x0,0x883&m0x40-0x0,"0x8d7, 0x8db"
"    0x8cb: v8cb(0x44) = ADD v8ca(0x0), v8bc(0x44)",0x88b,v8cb,"0,v8ca,v8bc",ADD,0x883,private,False,0x44,0x883&m0x40-0x0+0x44,"0x8d7, 0x8db"
    0x8cf: v8cf = EXTCODESIZE v8b4,0x88b,v8cf,"0,v8b4",EXTCODESIZE,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8d0: v8d0 = ISZERO v8cf,0x88b,v8d0,"0,v8cf",ISZERO,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8d2: v8d2 = ISZERO v8d0,0x88b,v8d2,"0,v8d0",ISZERO,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8d3: v8d3(0x8db) = CONST ,0x88b,v8d3,0,CONST,0x883,private,False,0x8db,0,"0x8d7, 0x8db"
"    0x8d6: JUMPI v8d3(0x8db), v8d2",0x88b,0,"0,v8d3,v8d2",JUMPI,0x883,private,False,0,0,"0x8d7, 0x8db"
    Begin block 0x8d7,0x8d7,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
"    prev=[0x88b], succ=[]",0x8d7,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
    =================================,0x8d7,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
    0x8d7: v8d7(0x0) = CONST ,0x8d7,v8d7,0,CONST,0x883,private,False,0x0,0,"0x8d7, 0x8db"
"    0x8da: REVERT v8d7(0x0), v8d7(0x0)",0x8d7,0,"0,v8d7,v8d7",REVERT,0x883,private,False,0,0,"0x8d7, 0x8db"
    Begin block 0x8db,0x8db,0,0,0,0x883,private,False,0,0,"0x8d7, 0x8db"
"    prev=[0x88b], succ=[0x8e6, 0x8ef]",0x8db,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
    =================================,0x8db,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8dd: v8dd = GAS ,0x8db,v8dd,0,GAS,0x883,private,False,0,0,"0x8e6, 0x8ef"
"    0x8de: v8de = STATICCALL v8dd, v8b4, v8b1, v8cb(0x44), v8b1, v8c2(0x20)",0x8db,v8de,"0,v8dd,v8b4,v8b1,v8cb,v8b1,v8c2",STATICCALL,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8df: v8df = ISZERO v8de,0x8db,v8df,"0,v8de",ISZERO,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8e1: v8e1 = ISZERO v8df,0x8db,v8e1,"0,v8df",ISZERO,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8e2: v8e2(0x8ef) = CONST ,0x8db,v8e2,0,CONST,0x883,private,False,0x8ef,0,"0x8e6, 0x8ef"
"    0x8e5: JUMPI v8e2(0x8ef), v8e1",0x8db,0,"0,v8e2,v8e1",JUMPI,0x883,private,False,0,0,"0x8e6, 0x8ef"
    Begin block 0x8e6,0x8e6,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
"    prev=[0x8db], succ=[]",0x8e6,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
    =================================,0x8e6,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8e6: v8e6 = RETURNDATASIZE ,0x8e6,v8e6,0,RETURNDATASIZE,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8e7: v8e7(0x0) = CONST ,0x8e6,v8e7,0,CONST,0x883,private,False,0x0,0,"0x8e6, 0x8ef"
"    0x8ea: RETURNDATACOPY v8e7(0x0), v8e7(0x0), v8e6",0x8e6,0,"0,v8e7,v8e7,v8e6",RETURNDATACOPY,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8eb: v8eb = RETURNDATASIZE ,0x8e6,v8eb,0,RETURNDATASIZE,0x883,private,False,0,0,"0x8e6, 0x8ef"
    0x8ec: v8ec(0x0) = CONST ,0x8e6,v8ec,0,CONST,0x883,private,False,0x0,0,"0x8e6, 0x8ef"
"    0x8ee: REVERT v8ec(0x0), v8eb",0x8e6,0,"0,v8ec,v8eb",REVERT,0x883,private,False,0,0,"0x8e6, 0x8ef"
    Begin block 0x8ef,0x8ef,0,0,0,0x883,private,False,0,0,"0x8e6, 0x8ef"
"    prev=[0x8db], succ=[0x901, 0x905]",0x8ef,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
    =================================,0x8ef,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
    0x8f4: v8f4(0x40) = CONST ,0x8ef,v8f4,0,CONST,0x883,private,False,0x40,0,"0x901, 0x905"
    0x8f6: v8f6 = MLOAD v8f4(0x40),0x8ef,v8f6,"0,v8f4",MLOAD,0x883,private,False,0,0x883&m0x40,"0x901, 0x905"
    0x8f7: v8f7 = RETURNDATASIZE ,0x8ef,v8f7,0,RETURNDATASIZE,0x883,private,False,0,0,"0x901, 0x905"
    0x8f8: v8f8(0x20) = CONST ,0x8ef,v8f8,0,CONST,0x883,private,False,0x20,0,"0x901, 0x905"
"    0x8fb: v8fb = LT v8f7, v8f8(0x20)",0x8ef,v8fb,"0,v8f7,v8f8",LT,0x883,private,False,0,0,"0x901, 0x905"
    0x8fc: v8fc = ISZERO v8fb,0x8ef,v8fc,"0,v8fb",ISZERO,0x883,private,False,0,0,"0x901, 0x905"
    0x8fd: v8fd(0x905) = CONST ,0x8ef,v8fd,0,CONST,0x883,private,False,0x905,0,"0x901, 0x905"
"    0x900: JUMPI v8fd(0x905), v8fc",0x8ef,0,"0,v8fd,v8fc",JUMPI,0x883,private,False,0,0,"0x901, 0x905"
    Begin block 0x901,0x901,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
"    prev=[0x8ef], succ=[]",0x901,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
    =================================,0x901,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
    0x901: v901(0x0) = CONST ,0x901,v901,0,CONST,0x883,private,False,0x0,0,"0x901, 0x905"
"    0x904: REVERT v901(0x0), v901(0x0)",0x901,0,"0,v901,v901",REVERT,0x883,private,False,0,0,"0x901, 0x905"
    Begin block 0x905,0x905,0,0,0,0x883,private,False,0,0,"0x901, 0x905"
"    prev=[0x8ef], succ=[0x909]",0x905,0,0,0,0x883,private,False,0,0,0x909
    =================================,0x905,0,0,0,0x883,private,False,0,0,0x909
    0x907: v907 = MLOAD v8f6,0x905,v907,"0,v8f6",MLOAD,0x883,private,False,0,0,0x909
    0x908: v908 = ISZERO v907,0x905,v908,"0,v907",ISZERO,0x883,private,False,0,0,0x909
},0x905,0,0,0,0x883,private,False,0,0,0x909
function dmg()() public {,0xa6,0,0,public,dmg,public,False,0,0,0x909
    Begin block 0xa6,0xa6,0,0,0,dmg,public,False,0,0,0x909
"    prev=[], succ=[0x2ba]",0xa6,0,0,0,dmg,public,False,0,0,0x2ba
    =================================,0xa6,0,0,0,dmg,public,False,0,0,0x2ba
    0xa7: va7(0xd89) = CONST ,0xa6,va7,0,CONST,dmg,public,False,0xd89,0,0x2ba
    0xaa: vaa(0x2ba) = CONST ,0xa6,vaa,0,CONST,dmg,public,False,0x2ba,0,0x2ba
    0xad: JUMP vaa(0x2ba),0xa6,0,"0,vaa",JUMP,dmg,public,False,0,0,0x2ba
    Begin block 0x2ba,0x2ba,0,0,0,dmg,public,False,0,0,0x2ba
"    prev=[0xa6], succ=[0xd89]",0x2ba,0,0,0,dmg,public,False,0,0,0xd89
    =================================,0x2ba,0,0,0,dmg,public,False,0,0,0xd89
    0x2bb: v2bb(0x34) = CONST ,0x2ba,v2bb,0,CONST,dmg,public,False,0x34,0,0xd89
    0x2bd: v2bd = SLOAD v2bb(0x34),0x2ba,v2bd,"0,v2bb",SLOAD,dmg,public,False,0,0,0xd89
    0x2be: v2be(0x1) = CONST ,0x2ba,v2be,0,CONST,dmg,public,False,0x1,0,0xd89
    0x2c0: v2c0(0x1) = CONST ,0x2ba,v2c0,0,CONST,dmg,public,False,0x1,0,0xd89
    0x2c2: v2c2(0xa0) = CONST ,0x2ba,v2c2,0,CONST,dmg,public,False,0xa0,0,0xd89
"    0x2c4: v2c4(0x10000000000000000000000000000000000000000) = SHL v2c2(0xa0), v2c0(0x1)",0x2ba,v2c4,"0,v2c2,v2c0",SHL,dmg,public,False,0x10000000000000000000000000000000000000000,0,0xd89
"    0x2c5: v2c5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2c4(0x10000000000000000000000000000000000000000), v2be(0x1)",0x2ba,v2c5,"0,v2c4,v2be",SUB,dmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd89
"    0x2c6: v2c6 = AND v2c5(0xffffffffffffffffffffffffffffffffffffffff), v2bd",0x2ba,v2c6,"0,v2c5,v2bd",AND,dmg,public,False,0,0,0xd89
    0x2c8: JUMP va7(0xd89),0x2ba,0,"0,va7",JUMP,dmg,public,False,0,0,0xd89
    Begin block 0xd89,0xd89,0,0,0,dmg,public,False,0,0,0xd89
"    prev=[0x2ba], succ=[]",0xd89,0,0,0,dmg,public,False,0,0,0xd89
    =================================,0xd89,0,0,0,dmg,public,False,0,0,0xd89
    0xd8a: vd8a(0x40) = CONST ,0xd89,vd8a,0,CONST,dmg,public,False,0x40,0,0xd89
    0xd8d: vd8d = MLOAD vd8a(0x40),0xd89,vd8d,"0,vd8a",MLOAD,dmg,public,False,0,dmg&m0x40,0xd89
    0xd8e: vd8e(0x1) = CONST ,0xd89,vd8e,0,CONST,dmg,public,False,0x1,0,0xd89
    0xd90: vd90(0x1) = CONST ,0xd89,vd90,0,CONST,dmg,public,False,0x1,0,0xd89
    0xd92: vd92(0xa0) = CONST ,0xd89,vd92,0,CONST,dmg,public,False,0xa0,0,0xd89
"    0xd94: vd94(0x10000000000000000000000000000000000000000) = SHL vd92(0xa0), vd90(0x1)",0xd89,vd94,"0,vd92,vd90",SHL,dmg,public,False,0x10000000000000000000000000000000000000000,0,0xd89
"    0xd95: vd95(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd94(0x10000000000000000000000000000000000000000), vd8e(0x1)",0xd89,vd95,"0,vd94,vd8e",SUB,dmg,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0xd89
"    0xd98: vd98 = AND v2c6, vd95(0xffffffffffffffffffffffffffffffffffffffff)",0xd89,vd98,"0,v2c6,vd95",AND,dmg,public,False,0,0,0xd89
"    0xd9a: MSTORE vd8d, vd98",0xd89,dmg&m0x40,"0,vd8d,vd98",MSTORE,dmg,public,False,0,dmg&m0x40,0xd89
    0xd9b: vd9b = MLOAD vd8a(0x40),0xd89,vd9b,"0,vd8a",MLOAD,dmg,public,False,0,dmg&m0x40,0xd89
"    0xd9f: vd9f(0x0) = SUB vd8d, vd9b",0xd89,vd9f,"0,vd8d,vd9b",SUB,dmg,public,False,0x0,dmg&m0x40-0x0,0xd89
    0xda0: vda0(0x20) = CONST ,0xd89,vda0,0,CONST,dmg,public,False,0x20,0,0xd89
"    0xda2: vda2(0x20) = ADD vda0(0x20), vd9f(0x0)",0xd89,vda2,"0,vda0,vd9f",ADD,dmg,public,False,0x20,dmg&m0x40-0x0+0x20,0xd89
"    0xda4: RETURN vd9b, vda2(0x20)",0xd89,0,"0,vd9b,vda2",RETURN,dmg,public,False,0,0,0xd89
},0xd89,0,0,0,dmg,public,False,0,0,0xd89
"function initialize(address,address)() public {",0xae,0,0,,initialize,public,False,0,0,0xd89
    Begin block 0xae,0xae,0,0,0,initialize,public,False,0,0,0xd89
"    prev=[], succ=[0xc0, 0xc4]",0xae,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
    =================================,0xae,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
    0xaf: vaf(0xdc4) = CONST ,0xae,vaf,0,CONST,initialize,public,False,0xdc4,0,"0xc0, 0xc4"
    0xb2: vb2(0x4) = CONST ,0xae,vb2,0,CONST,initialize,public,False,0x4,0,"0xc0, 0xc4"
    0xb5: vb5 = CALLDATASIZE ,0xae,vb5,0,CALLDATASIZE,initialize,public,False,0,0,"0xc0, 0xc4"
"    0xb6: vb6 = SUB vb5, vb2(0x4)",0xae,vb6,"0,vb5,vb2",SUB,initialize,public,False,0,0,"0xc0, 0xc4"
    0xb7: vb7(0x40) = CONST ,0xae,vb7,0,CONST,initialize,public,False,0x40,0,"0xc0, 0xc4"
"    0xba: vba = LT vb6, vb7(0x40)",0xae,vba,"0,vb6,vb7",LT,initialize,public,False,0,0,"0xc0, 0xc4"
    0xbb: vbb = ISZERO vba,0xae,vbb,"0,vba",ISZERO,initialize,public,False,0,0,"0xc0, 0xc4"
    0xbc: vbc(0xc4) = CONST ,0xae,vbc,0,CONST,initialize,public,False,0xc4,0,"0xc0, 0xc4"
"    0xbf: JUMPI vbc(0xc4), vbb",0xae,0,"0,vbc,vbb",JUMPI,initialize,public,False,0,0,"0xc0, 0xc4"
    Begin block 0xc0,0xc0,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
"    prev=[0xae], succ=[]",0xc0,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
    =================================,0xc0,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
    0xc0: vc0(0x0) = CONST ,0xc0,vc0,0,CONST,initialize,public,False,0x0,0,"0xc0, 0xc4"
"    0xc3: REVERT vc0(0x0), vc0(0x0)",0xc0,0,"0,vc0,vc0",REVERT,initialize,public,False,0,0,"0xc0, 0xc4"
    Begin block 0xc4,0xc4,0,0,0,initialize,public,False,0,0,"0xc0, 0xc4"
"    prev=[0xae], succ=[0x2c9]",0xc4,0,0,0,initialize,public,False,0,0,0x2c9
    =================================,0xc4,0,0,0,initialize,public,False,0,0,0x2c9
    0xc6: vc6(0x1) = CONST ,0xc4,vc6,0,CONST,initialize,public,False,0x1,0,0x2c9
    0xc8: vc8(0x1) = CONST ,0xc4,vc8,0,CONST,initialize,public,False,0x1,0,0x2c9
    0xca: vca(0xa0) = CONST ,0xc4,vca,0,CONST,initialize,public,False,0xa0,0,0x2c9
"    0xcc: vcc(0x10000000000000000000000000000000000000000) = SHL vca(0xa0), vc8(0x1)",0xc4,vcc,"0,vca,vc8",SHL,initialize,public,False,0x10000000000000000000000000000000000000000,0,0x2c9
"    0xcd: vcd(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcc(0x10000000000000000000000000000000000000000), vc6(0x1)",0xc4,vcd,"0,vcc,vc6",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2c9
    0xcf: vcf = CALLDATALOAD vb2(0x4),0xc4,vcf,"0,vb2",CALLDATALOAD,initialize,public,False,0,0,0x2c9
"    0xd1: vd1 = AND vcd(0xffffffffffffffffffffffffffffffffffffffff), vcf",0xc4,vd1,"0,vcd,vcf",AND,initialize,public,False,0,0,0x2c9
    0xd3: vd3(0x20) = CONST ,0xc4,vd3,0,CONST,initialize,public,False,0x20,0,0x2c9
"    0xd5: vd5(0x24) = ADD vd3(0x20), vb2(0x4)",0xc4,vd5,"0,vd3,vb2",ADD,initialize,public,False,0x24,0,0x2c9
    0xd6: vd6 = CALLDATALOAD vd5(0x24),0xc4,vd6,"0,vd5",CALLDATALOAD,initialize,public,False,0,0,0x2c9
"    0xd7: vd7 = AND vd6, vcd(0xffffffffffffffffffffffffffffffffffffffff)",0xc4,vd7,"0,vd6,vcd",AND,initialize,public,False,0,0,0x2c9
    0xd8: vd8(0x2c9) = CONST ,0xc4,vd8,0,CONST,initialize,public,False,0x2c9,0,0x2c9
    0xdb: JUMP vd8(0x2c9),0xc4,0,"0,vd8",JUMP,initialize,public,False,0,0,0x2c9
    Begin block 0x2c9,0x2c9,0,0,0,initialize,public,False,0,0,0x2c9
"    prev=[0xc4], succ=[0x2e2, 0x2da]",0x2c9,0,0,0,initialize,public,False,0,0,"0x2e2, 0x2da"
    =================================,0x2c9,0,0,0,initialize,public,False,0,0,"0x2e2, 0x2da"
    0x2ca: v2ca(0x0) = CONST ,0x2c9,v2ca,0,CONST,initialize,public,False,0x0,0,"0x2e2, 0x2da"
    0x2cc: v2cc = SLOAD v2ca(0x0),0x2c9,v2cc,"0,v2ca",SLOAD,initialize,public,False,0,0,"0x2e2, 0x2da"
    0x2cd: v2cd(0x100) = CONST ,0x2c9,v2cd,0,CONST,initialize,public,False,0x100,0,"0x2e2, 0x2da"
"    0x2d1: v2d1 = DIV v2cc, v2cd(0x100)",0x2c9,v2d1,"0,v2cc,v2cd",DIV,initialize,public,False,0,0,"0x2e2, 0x2da"
    0x2d2: v2d2(0xff) = CONST ,0x2c9,v2d2,0,CONST,initialize,public,False,0xff,0,"0x2e2, 0x2da"
"    0x2d4: v2d4 = AND v2d2(0xff), v2d1",0x2c9,v2d4,"0,v2d2,v2d1",AND,initialize,public,False,0,0,"0x2e2, 0x2da"
    0x2d6: v2d6(0x2e2) = CONST ,0x2c9,v2d6,0,CONST,initialize,public,False,0x2e2,0,"0x2e2, 0x2da"
"    0x2d9: JUMPI v2d6(0x2e2), v2d4",0x2c9,0,"0,v2d6,v2d4",JUMPI,initialize,public,False,0,0,"0x2e2, 0x2da"
    Begin block 0x2e2,0x2e2,0,0,0,initialize,public,False,0,0,"0x2e2, 0x2da"
"    prev=[0x2c9, 0x81d], succ=[0x2f0, 0x2e8]",0x2e2,0,0,0,initialize,public,False,0,0,"0x2f0, 0x2e8"
    =================================,0x2e2,0,0,0,initialize,public,False,0,0,"0x2f0, 0x2e8"
"    0x2e2_0x0: v2e2_0 = PHI v2d4, v820",0x2e2,v2e2_0,"0,v2d4,v820",PHI,initialize,public,False,0,0,"0x2f0, 0x2e8"
    0x2e4: v2e4(0x2f0) = CONST ,0x2e2,v2e4,0,CONST,initialize,public,False,0x2f0,0,"0x2f0, 0x2e8"
"    0x2e7: JUMPI v2e4(0x2f0), v2e2_0",0x2e2,0,"0,v2e4,v2e2_0",JUMPI,initialize,public,False,0,0,"0x2f0, 0x2e8"
    Begin block 0x2f0,0x2f0,0,0,0,initialize,public,False,0,0,"0x2f0, 0x2e8"
"    prev=[0x2e2, 0x2e8], succ=[0x2f5, 0x32b]",0x2f0,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
    =================================,0x2f0,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
"    0x2f0_0x0: v2f0_0 = PHI v2d4, v2ef, v820",0x2f0,v2f0_0,"0,v2d4,v2ef,v820",PHI,initialize,public,False,0,0,"0x2f5, 0x32b"
    0x2f1: v2f1(0x32b) = CONST ,0x2f0,v2f1,0,CONST,initialize,public,False,0x32b,0,"0x2f5, 0x32b"
"    0x2f4: JUMPI v2f1(0x32b), v2f0_0",0x2f0,0,"0,v2f1,v2f0_0",JUMPI,initialize,public,False,0,0,"0x2f5, 0x32b"
    Begin block 0x2f5,0x2f5,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
"    prev=[0x2f0], succ=[]",0x2f5,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
    =================================,0x2f5,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
    0x2f5: v2f5(0x40) = CONST ,0x2f5,v2f5,0,CONST,initialize,public,False,0x40,0,"0x2f5, 0x32b"
    0x2f7: v2f7 = MLOAD v2f5(0x40),0x2f5,v2f7,"0,v2f5",MLOAD,initialize,public,False,0,initialize&m0x40,"0x2f5, 0x32b"
    0x2f8: v2f8(0x461bcd) = CONST ,0x2f5,v2f8,0,CONST,initialize,public,False,0x461bcd,0,"0x2f5, 0x32b"
    0x2fc: v2fc(0xe5) = CONST ,0x2f5,v2fc,0,CONST,initialize,public,False,0xe5,0,"0x2f5, 0x32b"
"    0x2fe: v2fe(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2fc(0xe5), v2f8(0x461bcd)",0x2f5,v2fe,"0,v2fc,v2f8",SHL,initialize,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x2f5, 0x32b"
"    0x300: MSTORE v2f7, v2fe(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x2f5,initialize&m0x40,"0,v2f7,v2fe",MSTORE,initialize,public,False,0,initialize&m0x40,"0x2f5, 0x32b"
    0x301: v301(0x4) = CONST ,0x2f5,v301,0,CONST,initialize,public,False,0x4,0,"0x2f5, 0x32b"
"    0x303: v303 = ADD v301(0x4), v2f7",0x2f5,v303,"0,v301,v2f7",ADD,initialize,public,False,0,initialize&m0x40+0x4,"0x2f5, 0x32b"
    0x306: v306(0x20) = CONST ,0x2f5,v306,0,CONST,initialize,public,False,0x20,0,"0x2f5, 0x32b"
"    0x308: v308 = ADD v306(0x20), v303",0x2f5,v308,"0,v306,v303",ADD,initialize,public,False,0,initialize&m0x40+0x4+0x20,"0x2f5, 0x32b"
"    0x30b: v30b(0x20) = SUB v308, v303",0x2f5,v30b,"0,v308,v303",SUB,initialize,public,False,0x20,initialize&m0x40+0x4+0x20-0x20,"0x2f5, 0x32b"
"    0x30d: MSTORE v303, v30b(0x20)",0x2f5,initialize&m0x40+0x4,"0,v303,v30b",MSTORE,initialize,public,False,0,initialize&m0x40+0x4,"0x2f5, 0x32b"
    0x30e: v30e(0x2e) = CONST ,0x2f5,v30e,0,CONST,initialize,public,False,0x2e,0,"0x2f5, 0x32b"
"    0x311: MSTORE v308, v30e(0x2e)",0x2f5,initialize&m0x40+0x4+0x20,"0,v308,v30e",MSTORE,initialize,public,False,0,initialize&m0x40+0x4+0x20,"0x2f5, 0x32b"
    0x312: v312(0x20) = CONST ,0x2f5,v312,0,CONST,initialize,public,False,0x20,0,"0x2f5, 0x32b"
"    0x314: v314 = ADD v312(0x20), v308",0x2f5,v314,"0,v312,v308",ADD,initialize,public,False,0,initialize&m0x40+0x4+0x20+0x20,"0x2f5, 0x32b"
    0x316: v316(0xc01) = CONST ,0x2f5,v316,0,CONST,initialize,public,False,0xc01,0,"0x2f5, 0x32b"
    0x319: v319(0x2e) = CONST ,0x2f5,v319,0,CONST,initialize,public,False,0x2e,0,"0x2f5, 0x32b"
"    0x31c: CODECOPY v314, v316(0xc01), v319(0x2e)",0x2f5,0,"0,v314,v316,v319",CODECOPY,initialize,public,False,0,0,"0x2f5, 0x32b"
    0x31d: v31d(0x40) = CONST ,0x2f5,v31d,0,CONST,initialize,public,False,0x40,0,"0x2f5, 0x32b"
"    0x31f: v31f = ADD v31d(0x40), v314",0x2f5,v31f,"0,v31d,v314",ADD,initialize,public,False,0,initialize&m0x40+0x4+0x20+0x20+0x40,"0x2f5, 0x32b"
    0x323: v323(0x40) = CONST ,0x2f5,v323,0,CONST,initialize,public,False,0x40,0,"0x2f5, 0x32b"
    0x325: v325 = MLOAD v323(0x40),0x2f5,v325,"0,v323",MLOAD,initialize,public,False,0,initialize&m0x40,"0x2f5, 0x32b"
"    0x328: v328(0x84) = SUB v31f, v325",0x2f5,v328,"0,v31f,v325",SUB,initialize,public,False,0x84,initialize&m0x40+0x4+0x20+0x20+0x40-0x84,"0x2f5, 0x32b"
"    0x32a: REVERT v325, v328(0x84)",0x2f5,0,"0,v325,v328",REVERT,initialize,public,False,0,0,"0x2f5, 0x32b"
    Begin block 0x32b,0x32b,0,0,0,initialize,public,False,0,0,"0x2f5, 0x32b"
"    prev=[0x2f0], succ=[0x33e, 0x356]",0x32b,0,0,0,initialize,public,False,0,0,"0x33e, 0x356"
    =================================,0x32b,0,0,0,initialize,public,False,0,0,"0x33e, 0x356"
    0x32c: v32c(0x0) = CONST ,0x32b,v32c,0,CONST,initialize,public,False,0x0,0,"0x33e, 0x356"
    0x32e: v32e = SLOAD v32c(0x0),0x32b,v32e,"0,v32c",SLOAD,initialize,public,False,0,0,"0x33e, 0x356"
    0x32f: v32f(0x100) = CONST ,0x32b,v32f,0,CONST,initialize,public,False,0x100,0,"0x33e, 0x356"
"    0x333: v333 = DIV v32e, v32f(0x100)",0x32b,v333,"0,v32e,v32f",DIV,initialize,public,False,0,0,"0x33e, 0x356"
    0x334: v334(0xff) = CONST ,0x32b,v334,0,CONST,initialize,public,False,0xff,0,"0x33e, 0x356"
"    0x336: v336 = AND v334(0xff), v333",0x32b,v336,"0,v334,v333",AND,initialize,public,False,0,0,"0x33e, 0x356"
    0x337: v337 = ISZERO v336,0x32b,v337,"0,v336",ISZERO,initialize,public,False,0,0,"0x33e, 0x356"
    0x339: v339 = ISZERO v337,0x32b,v339,"0,v337",ISZERO,initialize,public,False,0,0,"0x33e, 0x356"
    0x33a: v33a(0x356) = CONST ,0x32b,v33a,0,CONST,initialize,public,False,0x356,0,"0x33e, 0x356"
"    0x33d: JUMPI v33a(0x356), v339",0x32b,0,"0,v33a,v339",JUMPI,initialize,public,False,0,0,"0x33e, 0x356"
    Begin block 0x33e,0x33e,0,0,0,initialize,public,False,0,0,"0x33e, 0x356"
"    prev=[0x32b], succ=[0x356]",0x33e,0,0,0,initialize,public,False,0,0,0x356
    =================================,0x33e,0,0,0,initialize,public,False,0,0,0x356
    0x33e: v33e(0x0) = CONST ,0x33e,v33e,0,CONST,initialize,public,False,0x0,0,0x356
    0x341: v341 = SLOAD v33e(0x0),0x33e,v341,"0,v33e",SLOAD,initialize,public,False,0,0,0x356
    0x342: v342(0xff) = CONST ,0x33e,v342,0,CONST,initialize,public,False,0xff,0,0x356
    0x344: v344(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v342(0xff),0x33e,v344,"0,v342",NOT,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00,0,0x356
    0x345: v345(0xff00) = CONST ,0x33e,v345,0,CONST,initialize,public,False,0xff00,0,0x356
    0x348: v348(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v345(0xff00),0x33e,v348,"0,v345",NOT,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x356
"    0x34b: v34b = AND v341, v348(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)",0x33e,v34b,"0,v341,v348",AND,initialize,public,False,0,0,0x356
    0x34c: v34c(0x100) = CONST ,0x33e,v34c,0,CONST,initialize,public,False,0x100,0,0x356
"    0x34f: v34f = OR v34c(0x100), v34b",0x33e,v34f,"0,v34c,v34b",OR,initialize,public,False,0,0,0x356
"    0x350: v350 = AND v34f, v344(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)",0x33e,v350,"0,v34f,v344",AND,initialize,public,False,0,0,0x356
    0x351: v351(0x1) = CONST ,0x33e,v351,0,CONST,initialize,public,False,0x1,0,0x356
"    0x353: v353 = OR v351(0x1), v350",0x33e,v353,"0,v351,v350",OR,initialize,public,False,0,0,0x356
"    0x355: SSTORE v33e(0x0), v353",0x33e,0,"0,v33e,v353",SSTORE,initialize,public,False,0,0,0x356
    Begin block 0x356,0x356,0,0,0,initialize,public,False,0,0,0x356
"    prev=[0x33e, 0x32b], succ=[0x38d, 0xe27]",0x356,0,0,0,initialize,public,False,0,0,"0x38d, 0xe27"
    =================================,0x356,0,0,0,initialize,public,False,0,0,"0x38d, 0xe27"
    0x357: v357(0x33) = CONST ,0x356,v357,0,CONST,initialize,public,False,0x33,0,"0x38d, 0xe27"
    0x35a: v35a = SLOAD v357(0x33),0x356,v35a,"0,v357",SLOAD,initialize,public,False,0,0,"0x38d, 0xe27"
    0x35b: v35b(0x1) = CONST ,0x356,v35b,0,CONST,initialize,public,False,0x1,0,"0x38d, 0xe27"
    0x35d: v35d(0x1) = CONST ,0x356,v35d,0,CONST,initialize,public,False,0x1,0,"0x38d, 0xe27"
    0x35f: v35f(0xa0) = CONST ,0x356,v35f,0,CONST,initialize,public,False,0xa0,0,"0x38d, 0xe27"
"    0x361: v361(0x10000000000000000000000000000000000000000) = SHL v35f(0xa0), v35d(0x1)",0x356,v361,"0,v35f,v35d",SHL,initialize,public,False,0x10000000000000000000000000000000000000000,0,"0x38d, 0xe27"
"    0x362: v362(0xffffffffffffffffffffffffffffffffffffffff) = SUB v361(0x10000000000000000000000000000000000000000), v35b(0x1)",0x356,v362,"0,v361,v35b",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x38d, 0xe27"
"    0x365: v365 = AND vd1, v362(0xffffffffffffffffffffffffffffffffffffffff)",0x356,v365,"0,vd1,v362",AND,initialize,public,False,0,0,"0x38d, 0xe27"
    0x366: v366(0x1) = CONST ,0x356,v366,0,CONST,initialize,public,False,0x1,0,"0x38d, 0xe27"
    0x368: v368(0x1) = CONST ,0x356,v368,0,CONST,initialize,public,False,0x1,0,"0x38d, 0xe27"
    0x36a: v36a(0xa0) = CONST ,0x356,v36a,0,CONST,initialize,public,False,0xa0,0,"0x38d, 0xe27"
"    0x36c: v36c(0x10000000000000000000000000000000000000000) = SHL v36a(0xa0), v368(0x1)",0x356,v36c,"0,v36a,v368",SHL,initialize,public,False,0x10000000000000000000000000000000000000000,0,"0x38d, 0xe27"
"    0x36d: v36d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36c(0x10000000000000000000000000000000000000000), v366(0x1)",0x356,v36d,"0,v36c,v366",SUB,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x38d, 0xe27"
    0x36e: v36e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v36d(0xffffffffffffffffffffffffffffffffffffffff),0x356,v36e,"0,v36d",NOT,initialize,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,"0x38d, 0xe27"
"    0x371: v371 = AND v36e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v35a",0x356,v371,"0,v36e,v35a",AND,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x372: v372 = OR v371, v365",0x356,v372,"0,v371,v365",OR,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x375: SSTORE v357(0x33), v372",0x356,0,"0,v357,v372",SSTORE,initialize,public,False,0,0,"0x38d, 0xe27"
    0x376: v376(0x34) = CONST ,0x356,v376,0,CONST,initialize,public,False,0x34,0,"0x38d, 0xe27"
    0x379: v379 = SLOAD v376(0x34),0x356,v379,"0,v376",SLOAD,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x37c: v37c = AND vd7, v362(0xffffffffffffffffffffffffffffffffffffffff)",0x356,v37c,"0,vd7,v362",AND,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x380: v380 = AND v36e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v379",0x356,v380,"0,v36e,v379",AND,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x384: v384 = OR v380, v37c",0x356,v384,"0,v380,v37c",OR,initialize,public,False,0,0,"0x38d, 0xe27"
"    0x386: SSTORE v376(0x34), v384",0x356,0,"0,v376,v384",SSTORE,initialize,public,False,0,0,"0x38d, 0xe27"
    0x388: v388 = ISZERO v337,0x356,v388,"0,v337",ISZERO,initialize,public,False,0,0,"0x38d, 0xe27"
    0x389: v389(0xe27) = CONST ,0x356,v389,0,CONST,initialize,public,False,0xe27,0,"0x38d, 0xe27"
"    0x38c: JUMPI v389(0xe27), v388",0x356,0,"0,v389,v388",JUMPI,initialize,public,False,0,0,"0x38d, 0xe27"
    Begin block 0x38d,0x38d,0,0,0,initialize,public,False,0,0,"0x38d, 0xe27"
"    prev=[0x356], succ=[0x398]",0x38d,0,0,0,initialize,public,False,0,0,0x398
    =================================,0x38d,0,0,0,initialize,public,False,0,0,0x398
    0x38d: v38d(0x0) = CONST ,0x38d,v38d,0,CONST,initialize,public,False,0x0,0,0x398
    0x390: v390 = SLOAD v38d(0x0),0x38d,v390,"0,v38d",SLOAD,initialize,public,False,0,0,0x398
    0x391: v391(0xff00) = CONST ,0x38d,v391,0,CONST,initialize,public,False,0xff00,0,0x398
    0x394: v394(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v391(0xff00),0x38d,v394,"0,v391",NOT,initialize,public,False,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff,0,0x398
"    0x395: v395 = AND v394(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v390",0x38d,v395,"0,v394,v390",AND,initialize,public,False,0,0,0x398
"    0x397: SSTORE v38d(0x0), v395",0x38d,0,"0,v38d,v395",SSTORE,initialize,public,False,0,0,0x398
    Begin block 0x398,0x398,0,0,0,initialize,public,False,0,0,0x398
"    prev=[0x38d], succ=[0xdc4]",0x398,0,0,0,initialize,public,False,0,0,0xdc4
    =================================,0x398,0,0,0,initialize,public,False,0,0,0xdc4
    0x39c: JUMP vaf(0xdc4),0x398,0,"0,vaf",JUMP,initialize,public,False,0,0,0xdc4
    Begin block 0xdc4,0xdc4,0,0,0,initialize,public,False,0,0,0xdc4
"    prev=[0xe27, 0x398], succ=[]",0xdc4,0,0,0,initialize,public,False,0,0,0xdc4
    =================================,0xdc4,0,0,0,initialize,public,False,0,0,0xdc4
    0xdc5: STOP ,0xdc4,0,0,STOP,initialize,public,False,0,0,0xdc4
    Begin block 0xe27,0xe27,0,0,0,initialize,public,False,0,0,0xdc4
"    prev=[0x356], succ=[0xdc4]",0xe27,0,0,0,initialize,public,False,0,0,0xdc4
    =================================,0xe27,0,0,0,initialize,public,False,0,0,0xdc4
    0xe2b: JUMP vaf(0xdc4),0xe27,0,"0,vaf",JUMP,initialize,public,False,0,0,0xdc4
    Begin block 0x2e8,0x2e8,0,0,0,initialize,public,False,0,0,0xdc4
"    prev=[0x2e2], succ=[0x2f0]",0x2e8,0,0,0,initialize,public,False,0,0,0x2f0
    =================================,0x2e8,0,0,0,initialize,public,False,0,0,0x2f0
    0x2e9: v2e9(0x0) = CONST ,0x2e8,v2e9,0,CONST,initialize,public,False,0x0,0,0x2f0
    0x2eb: v2eb = SLOAD v2e9(0x0),0x2e8,v2eb,"0,v2e9",SLOAD,initialize,public,False,0,0,0x2f0
    0x2ec: v2ec(0xff) = CONST ,0x2e8,v2ec,0,CONST,initialize,public,False,0xff,0,0x2f0
"    0x2ee: v2ee = AND v2ec(0xff), v2eb",0x2e8,v2ee,"0,v2ec,v2eb",AND,initialize,public,False,0,0,0x2f0
    0x2ef: v2ef = ISZERO v2ee,0x2e8,v2ef,"0,v2ee",ISZERO,initialize,public,False,0,0,0x2f0
    Begin block 0x2da,0x2da,0,0,0,initialize,public,False,0,0,0x2f0
"    prev=[0x2c9], succ=[0x81d]",0x2da,0,0,0,initialize,public,False,0,0,0x81d
    =================================,0x2da,0,0,0,initialize,public,False,0,0,0x81d
    0x2db: v2db(0x2e2) = CONST ,0x2da,v2db,0,CONST,initialize,public,False,0x2e2,0,0x81d
    0x2de: v2de(0x81d) = CONST ,0x2da,v2de,0,CONST,initialize,public,False,0x81d,0,0x81d
    0x2e1: JUMP v2de(0x81d),0x2da,0,"0,v2de",JUMP,initialize,public,False,0,0,0x81d
    Begin block 0x81d,0x81d,0,0,0,initialize,public,False,0,0,0x81d
"    prev=[0x2da], succ=[0x2e2]",0x81d,0,0,0,initialize,public,False,0,0,0x2e2
    =================================,0x81d,0,0,0,initialize,public,False,0,0,0x2e2
    0x81e: v81e = ADDRESS ,0x81d,v81e,0,ADDRESS,initialize,public,False,0,0,0x2e2
    0x81f: v81f = EXTCODESIZE v81e,0x81d,v81f,"0,v81e",EXTCODESIZE,initialize,public,False,0,0,0x2e2
    0x820: v820 = ISZERO v81f,0x81d,v820,"0,v81f",ISZERO,initialize,public,False,0,0,0x2e2
    0x822: JUMP v2db(0x2e2),0x81d,0,"0,v2db",JUMP,initialize,public,False,0,0,0x2e2
},0x81d,0,0,0,initialize,public,False,0,0,0x2e2
function fallback()() public {,0xd06,0,0,public,fallback,public,False,0,0,0x2e2
    Begin block 0xd06,0xd06,0,0,0,fallback,public,False,0,0,0x2e2
"    prev=[], succ=[]",0xd06,0,0,0,fallback,public,False,0,0,0x2e2
    =================================,0xd06,0,0,0,fallback,public,False,0,0,0x2e2
    0xd07: vd07(0x0) = CONST ,0xd06,vd07,0,CONST,fallback,public,False,0x0,0,0x2e2
"    0xd0a: REVERT vd07(0x0), vd07(0x0)",0xd06,0,"0,vd07,vd07",REVERT,fallback,public,False,0,0,0x2e2
},0xd06,0,0,0,fallback,public,False,0,0,0x2e2
function isTokenEnabled(address)() public {,0xde,0,0,public,isTokenEnabled,public,False,0,0,0x2e2
    Begin block 0xde,0xde,0,0,0,isTokenEnabled,public,False,0,0,0x2e2
"    prev=[], succ=[0xf0, 0xf4]",0xde,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    =================================,0xde,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    0xdf: vdf(0x104) = CONST ,0xde,vdf,0,CONST,isTokenEnabled,public,False,0x104,0,"0xf0, 0xf4"
    0xe2: ve2(0x4) = CONST ,0xde,ve2,0,CONST,isTokenEnabled,public,False,0x4,0,"0xf0, 0xf4"
    0xe5: ve5 = CALLDATASIZE ,0xde,ve5,0,CALLDATASIZE,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
"    0xe6: ve6 = SUB ve5, ve2(0x4)",0xde,ve6,"0,ve5,ve2",SUB,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    0xe7: ve7(0x20) = CONST ,0xde,ve7,0,CONST,isTokenEnabled,public,False,0x20,0,"0xf0, 0xf4"
"    0xea: vea = LT ve6, ve7(0x20)",0xde,vea,"0,ve6,ve7",LT,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    0xeb: veb = ISZERO vea,0xde,veb,"0,vea",ISZERO,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    0xec: vec(0xf4) = CONST ,0xde,vec,0,CONST,isTokenEnabled,public,False,0xf4,0,"0xf0, 0xf4"
"    0xef: JUMPI vec(0xf4), veb",0xde,0,"0,vec,veb",JUMPI,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    Begin block 0xf0,0xf0,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
"    prev=[0xde], succ=[]",0xf0,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    =================================,0xf0,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    0xf0: vf0(0x0) = CONST ,0xf0,vf0,0,CONST,isTokenEnabled,public,False,0x0,0,"0xf0, 0xf4"
"    0xf3: REVERT vf0(0x0), vf0(0x0)",0xf0,0,"0,vf0,vf0",REVERT,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
    Begin block 0xf4,0xf4,0,0,0,isTokenEnabled,public,False,0,0,"0xf0, 0xf4"
"    prev=[0xde], succ=[0x39d]",0xf4,0,0,0,isTokenEnabled,public,False,0,0,0x39d
    =================================,0xf4,0,0,0,isTokenEnabled,public,False,0,0,0x39d
    0xf6: vf6 = CALLDATALOAD ve2(0x4),0xf4,vf6,"0,ve2",CALLDATALOAD,isTokenEnabled,public,False,0,0,0x39d
    0xf7: vf7(0x1) = CONST ,0xf4,vf7,0,CONST,isTokenEnabled,public,False,0x1,0,0x39d
    0xf9: vf9(0x1) = CONST ,0xf4,vf9,0,CONST,isTokenEnabled,public,False,0x1,0,0x39d
    0xfb: vfb(0xa0) = CONST ,0xf4,vfb,0,CONST,isTokenEnabled,public,False,0xa0,0,0x39d
"    0xfd: vfd(0x10000000000000000000000000000000000000000) = SHL vfb(0xa0), vf9(0x1)",0xf4,vfd,"0,vfb,vf9",SHL,isTokenEnabled,public,False,0x10000000000000000000000000000000000000000,0,0x39d
"    0xfe: vfe(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfd(0x10000000000000000000000000000000000000000), vf7(0x1)",0xf4,vfe,"0,vfd,vf7",SUB,isTokenEnabled,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x39d
"    0xff: vff = AND vfe(0xffffffffffffffffffffffffffffffffffffffff), vf6",0xf4,vff,"0,vfe,vf6",AND,isTokenEnabled,public,False,0,0,0x39d
    0x100: v100(0x39d) = CONST ,0xf4,v100,0,CONST,isTokenEnabled,public,False,0x39d,0,0x39d
    0x103: JUMP v100(0x39d),0xf4,0,"0,v100",JUMP,isTokenEnabled,public,False,0,0,0x39d
    Begin block 0x39d,0x39d,0,0,0,isTokenEnabled,public,False,0,0,0x39d
"    prev=[0xf4], succ=[0x104]",0x39d,0,0,0,isTokenEnabled,public,False,0,0,0x104
    =================================,0x39d,0,0,0,isTokenEnabled,public,False,0,0,0x104
    0x39e: v39e(0x1) = CONST ,0x39d,v39e,0,CONST,isTokenEnabled,public,False,0x1,0,0x104
    0x3a0: v3a0(0x1) = CONST ,0x39d,v3a0,0,CONST,isTokenEnabled,public,False,0x1,0,0x104
    0x3a2: v3a2(0xa0) = CONST ,0x39d,v3a2,0,CONST,isTokenEnabled,public,False,0xa0,0,0x104
"    0x3a4: v3a4(0x10000000000000000000000000000000000000000) = SHL v3a2(0xa0), v3a0(0x1)",0x39d,v3a4,"0,v3a2,v3a0",SHL,isTokenEnabled,public,False,0x10000000000000000000000000000000000000000,0,0x104
"    0x3a5: v3a5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a4(0x10000000000000000000000000000000000000000), v39e(0x1)",0x39d,v3a5,"0,v3a4,v39e",SUB,isTokenEnabled,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x104
"    0x3a6: v3a6 = AND v3a5(0xffffffffffffffffffffffffffffffffffffffff), vff",0x39d,v3a6,"0,v3a5,vff",AND,isTokenEnabled,public,False,0,0,0x104
    0x3a7: v3a7(0x0) = CONST ,0x39d,v3a7,0,CONST,isTokenEnabled,public,False,0x0,0,0x104
"    0x3ab: MSTORE v3a7(0x0), v3a6",0x39d,0,"0,v3a7,v3a6",MSTORE,isTokenEnabled,public,False,0,0,0x104
    0x3ac: v3ac(0x35) = CONST ,0x39d,v3ac,0,CONST,isTokenEnabled,public,False,0x35,0,0x104
    0x3ae: v3ae(0x20) = CONST ,0x39d,v3ae,0,CONST,isTokenEnabled,public,False,0x20,0,0x104
"    0x3b0: MSTORE v3ae(0x20), v3ac(0x35)",0x39d,0,"0,v3ae,v3ac",MSTORE,isTokenEnabled,public,False,0,0,0x104
    0x3b1: v3b1(0x40) = CONST ,0x39d,v3b1,0,CONST,isTokenEnabled,public,False,0x40,0,0x104
"    0x3b4: v3b4 = SHA3 v3a7(0x0), v3b1(0x40)",0x39d,v3b4,"0,v3a7,v3b1",SHA3,isTokenEnabled,public,False,0,0,0x104
    0x3b5: v3b5 = SLOAD v3b4,0x39d,v3b5,"0,v3b4",SLOAD,isTokenEnabled,public,False,0,0,0x104
    0x3b6: v3b6(0xff) = CONST ,0x39d,v3b6,0,CONST,isTokenEnabled,public,False,0xff,0,0x104
"    0x3b8: v3b8 = AND v3b6(0xff), v3b5",0x39d,v3b8,"0,v3b6,v3b5",AND,isTokenEnabled,public,False,0,0,0x104
    0x3ba: JUMP vdf(0x104),0x39d,0,"0,vdf",JUMP,isTokenEnabled,public,False,0,0,0x104
    Begin block 0x104,0x104,0,0,0,isTokenEnabled,public,False,0,0,0x104
"    prev=[0x39d], succ=[]",0x104,0,0,0,isTokenEnabled,public,False,0,0,0x104
    =================================,0x104,0,0,0,isTokenEnabled,public,False,0,0,0x104
    0x105: v105(0x40) = CONST ,0x104,v105,0,CONST,isTokenEnabled,public,False,0x40,0,0x104
    0x108: v108 = MLOAD v105(0x40),0x104,v108,"0,v105",MLOAD,isTokenEnabled,public,False,0,isTokenEnabled&m0x40,0x104
    0x10a: v10a = ISZERO v3b8,0x104,v10a,"0,v3b8",ISZERO,isTokenEnabled,public,False,0,0,0x104
    0x10b: v10b = ISZERO v10a,0x104,v10b,"0,v10a",ISZERO,isTokenEnabled,public,False,0,0,0x104
"    0x10d: MSTORE v108, v10b",0x104,isTokenEnabled&m0x40,"0,v108,v10b",MSTORE,isTokenEnabled,public,False,0,isTokenEnabled&m0x40,0x104
    0x10e: v10e = MLOAD v105(0x40),0x104,v10e,"0,v105",MLOAD,isTokenEnabled,public,False,0,isTokenEnabled&m0x40,0x104
"    0x112: v112(0x0) = SUB v108, v10e",0x104,v112,"0,v108,v10e",SUB,isTokenEnabled,public,False,0x0,isTokenEnabled&m0x40-0x0,0x104
    0x113: v113(0x20) = CONST ,0x104,v113,0,CONST,isTokenEnabled,public,False,0x20,0,0x104
"    0x115: v115(0x20) = ADD v113(0x20), v112(0x0)",0x104,v115,"0,v113,v112",ADD,isTokenEnabled,public,False,0x20,isTokenEnabled&m0x40-0x0+0x20,0x104
"    0x117: RETURN v10e, v115(0x20)",0x104,0,"0,v10e,v115",RETURN,isTokenEnabled,public,False,0,0,0x104
},0x104,0,0,0,isTokenEnabled,public,False,0,0,0x104
