3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xf, 0xb]",0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xf, 0xb"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xf, 0xb"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xf, 0xb"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xf, 0xb"
    0x5: v5 = CALLVALUE ,0x0,v5,0,CALLVALUE,0,0,False,0,0,"0xf, 0xb"
    0x7: v7 = ISZERO v5,0x0,v7,"0,v5",ISZERO,0,0,False,0,0,"0xf, 0xb"
    0x8: v8(0xf) = CONST ,0x0,v8,0,CONST,0,0,False,0xf,0,"0xf, 0xb"
"    0xa: JUMPI v8(0xf), v7",0x0,0,"0,v8,v7",JUMPI,0,0,False,0,0,"0xf, 0xb"
    Begin block 0xf,0xf,0,0,0,0,0,False,0,0,"0xf, 0xb"
"    prev=[0x0], succ=[0x18, 0x102]",0xf,0,0,0,0,0,False,0,0,"0x18, 0x102"
    =================================,0xf,0,0,0,0,0,False,0,0,"0x18, 0x102"
    0x11: v11(0x4) = CONST ,0xf,v11,0,CONST,0,0,False,0x4,0,"0x18, 0x102"
    0x13: v13 = CALLDATASIZE ,0xf,v13,0,CALLDATASIZE,0,0,False,0,0,"0x18, 0x102"
"    0x14: v14 = LT v13, v11(0x4)",0xf,v14,"0,v13,v11",LT,0,0,False,0,0,"0x18, 0x102"
    0xfc: vfc(0x102) = CONST ,0xf,vfc,0,CONST,0,0,False,0x102,0,"0x18, 0x102"
"    0xfd: JUMPI vfc(0x102), v14",0xf,0,"0,vfc,v14",JUMPI,0,0,False,0,0,"0x18, 0x102"
    Begin block 0x18,0x18,0,0,0,0,0,False,0,0,"0x18, 0x102"
"    prev=[0xf], succ=[0x105, 0x28]",0x18,0,0,0,0,0,False,0,0,"0x105, 0x28"
    =================================,0x18,0,0,0,0,0,False,0,0,"0x105, 0x28"
    0x18: v18(0x0) = CONST ,0x18,v18,0,CONST,0,0,False,0x0,0,"0x105, 0x28"
    0x1a: v1a = CALLDATALOAD v18(0x0),0x18,v1a,"0,v18",CALLDATALOAD,0,0,False,0,0,"0x105, 0x28"
    0x1b: v1b(0xe0) = CONST ,0x18,v1b,0,CONST,0,0,False,0xe0,0,"0x105, 0x28"
"    0x1d: v1d = SHR v1b(0xe0), v1a",0x18,v1d,"0,v1b,v1a",SHR,0,0,False,0,0,"0x105, 0x28"
    0x1f: v1f(0xdbe671f) = CONST ,0x18,v1f,0,CONST,0,0,False,0xdbe671f,0,"0x105, 0x28"
"    0x24: v24 = EQ v1f(0xdbe671f), v1d",0x18,v24,"0,v1f,v1d",EQ,0,0,False,0,0,"0x105, 0x28"
    0xfe: vfe(0x105) = CONST ,0x18,vfe,0,CONST,0,0,False,0x105,0,"0x105, 0x28"
"    0xff: JUMPI vfe(0x105), v24",0x18,0,"0,vfe,v24",JUMPI,0,0,False,0,0,"0x105, 0x28"
    Begin block 0x105,0x105,0,0,0,0,0,False,0,0,"0x105, 0x28"
"    prev=[0x18], succ=[]",0x105,0,0,0,0,0,False,0,0,"0x105, 0x28"
    =================================,0x105,0,0,0,0,0,False,0,0,"0x105, 0x28"
    0x106: v106(0x37) = CONST ,0x105,v106,0,CONST,0,0,False,0x37,0,"0x105, 0x28"
    0x107: CALLPRIVATE v106(0x37),0x105,0,"0,v106",CALLPRIVATE,0,0,False,0,0,"0x105, 0x28"
    Begin block 0x28,0x28,0,0,0,0,0,False,0,0,"0x105, 0x28"
"    prev=[0x18], succ=[0x102, 0x108]",0x28,0,0,0,0,0,False,0,0,"0x102, 0x108"
    =================================,0x28,0,0,0,0,0,False,0,0,"0x102, 0x108"
    0x29: v29(0x6d4ce63c) = CONST ,0x28,v29,0,CONST,0,0,False,0x6d4ce63c,0,"0x102, 0x108"
"    0x2e: v2e = EQ v29(0x6d4ce63c), v1d",0x28,v2e,"0,v29,v1d",EQ,0,0,False,0,0,"0x102, 0x108"
    0x100: v100(0x108) = CONST ,0x28,v100,0,CONST,0,0,False,0x108,0,"0x102, 0x108"
"    0x101: JUMPI v100(0x108), v2e",0x28,0,"0,v100,v2e",JUMPI,0,0,False,0,0,"0x102, 0x108"
    Begin block 0x102,0x102,0,0,0,0,0,False,0,0,"0x102, 0x108"
"    prev=[0xf, 0x28], succ=[]",0x102,0,0,0,0,0,False,0,0,"0x102, 0x108"
    =================================,0x102,0,0,0,0,0,False,0,0,"0x102, 0x108"
    0x103: v103(0x32) = CONST ,0x102,v103,0,CONST,0,0,False,0x32,0,"0x102, 0x108"
    0x104: CALLPRIVATE v103(0x32),0x102,0,"0,v103",CALLPRIVATE,0,0,False,0,0,"0x102, 0x108"
    Begin block 0x108,0x108,0,0,0,0,0,False,0,0,"0x102, 0x108"
"    prev=[0x28], succ=[]",0x108,0,0,0,0,0,False,0,0,"0x102, 0x108"
    =================================,0x108,0,0,0,0,0,False,0,0,"0x102, 0x108"
    0x109: v109(0x4f) = CONST ,0x108,v109,0,CONST,0,0,False,0x4f,0,"0x102, 0x108"
    0x10a: CALLPRIVATE v109(0x4f),0x108,0,"0,v109",CALLPRIVATE,0,0,False,0,0,"0x102, 0x108"
    Begin block 0xb,0xb,0,0,0,0,0,False,0,0,"0x102, 0x108"
"    prev=[0x0], succ=[]",0xb,0,0,0,0,0,False,0,0,"0x102, 0x108"
    =================================,0xb,0,0,0,0,0,False,0,0,"0x102, 0x108"
    0xb: vb(0x0) = CONST ,0xb,vb,0,CONST,0,0,False,0x0,0,"0x102, 0x108"
"    0xe: REVERT vb(0x0), vb(0x0)",0xb,0,"0,vb,vb",REVERT,0,0,False,0,0,"0x102, 0x108"
},0xb,0,0,0,0,0,False,0,0,"0x102, 0x108"
function fallback()() public {,0x32,0,0,public,fallback,public,False,0,0,"0x102, 0x108"
    Begin block 0x32,0x32,0,0,0,fallback,public,False,0,0,"0x102, 0x108"
"    prev=[], succ=[]",0x32,0,0,0,fallback,public,False,0,0,"0x102, 0x108"
    =================================,0x32,0,0,0,fallback,public,False,0,0,"0x102, 0x108"
    0x33: v33(0x0) = CONST ,0x32,v33,0,CONST,fallback,public,False,0x0,0,"0x102, 0x108"
"    0x36: REVERT v33(0x0), v33(0x0)",0x32,0,"0,v33,v33",REVERT,fallback,public,False,0,0,"0x102, 0x108"
},0x32,0,0,0,fallback,public,False,0,0,"0x102, 0x108"
function a()() public {,0x37,0,0,public,a,public,False,0,0,"0x102, 0x108"
    Begin block 0x37,0x37,0,0,0,a,public,False,0,0,"0x102, 0x108"
"    prev=[], succ=[0x55]",0x37,0,0,0,a,public,False,0,0,0x55
    =================================,0x37,0,0,0,a,public,False,0,0,0x55
    0x38: v38(0xb9) = CONST ,0x37,v38,0,CONST,a,public,False,0xb9,0,0x55
    0x3a: v3a(0x55) = CONST ,0x37,v3a,0,CONST,a,public,False,0x55,0,0x55
    0x3c: JUMP v3a(0x55),0x37,0,"0,v3a",JUMP,a,public,False,0,0,0x55
    Begin block 0x55,0x55,0,0,0,a,public,False,0,0,0x55
"    prev=[0x37], succ=[0xb9]",0x55,0,0,0,a,public,False,0,0,0xb9
    =================================,0x55,0,0,0,a,public,False,0,0,0xb9
    0x56: v56(0x0) = CONST ,0x55,v56,0,CONST,a,public,False,0x0,0,0xb9
    0x58: v58 = SLOAD v56(0x0),0x55,v58,"0,v56",SLOAD,a,public,False,0,0,0xb9
    0x5a: JUMP v38(0xb9),0x55,0,"0,v38",JUMP,a,public,False,0,0,0xb9
    Begin block 0xb9,0xb9,0,0,0,a,public,False,0,0,0xb9
"    prev=[0x55], succ=[]",0xb9,0,0,0,a,public,False,0,0,0xb9
    =================================,0xb9,0,0,0,a,public,False,0,0,0xb9
    0xba: vba(0x40) = CONST ,0xb9,vba,0,CONST,a,public,False,0x40,0,0xb9
    0xbd: vbd = MLOAD vba(0x40),0xb9,vbd,"0,vba",MLOAD,a,public,False,0,a&m0x40,0xb9
"    0xc0: MSTORE vbd, v58",0xb9,a&m0x40,"0,vbd,v58",MSTORE,a,public,False,0,a&m0x40,0xb9
    0xc1: vc1 = MLOAD vba(0x40),0xb9,vc1,"0,vba",MLOAD,a,public,False,0,a&m0x40,0xb9
"    0xc5: vc5(0x0) = SUB vbd, vc1",0xb9,vc5,"0,vbd,vc1",SUB,a,public,False,0x0,a&m0x40-0x0,0xb9
    0xc6: vc6(0x20) = CONST ,0xb9,vc6,0,CONST,a,public,False,0x20,0,0xb9
"    0xc8: vc8(0x20) = ADD vc6(0x20), vc5(0x0)",0xb9,vc8,"0,vc6,vc5",ADD,a,public,False,0x20,a&m0x40-0x0+0x20,0xb9
"    0xca: RETURN vc1, vc8(0x20)",0xb9,0,"0,vc1,vc8",RETURN,a,public,False,0,0,0xb9
},0xb9,0,0,0,a,public,False,0,0,0xb9
function get()() public {,0x4f,0,0,public,get,public,False,0,0,0xb9
    Begin block 0x4f,0x4f,0,0,0,get,public,False,0,0,0xb9
"    prev=[], succ=[0x5b]",0x4f,0,0,0,get,public,False,0,0,0x5b
    =================================,0x4f,0,0,0,get,public,False,0,0,0x5b
    0x50: v50(0xea) = CONST ,0x4f,v50,0,CONST,get,public,False,0xea,0,0x5b
    0x52: v52(0x5b) = CONST ,0x4f,v52,0,CONST,get,public,False,0x5b,0,0x5b
    0x54: JUMP v52(0x5b),0x4f,0,"0,v52",JUMP,get,public,False,0,0,0x5b
    Begin block 0x5b,0x5b,0,0,0,get,public,False,0,0,0x5b
"    prev=[0x4f], succ=[0xea]",0x5b,0,0,0,get,public,False,0,0,0xea
    =================================,0x5b,0,0,0,get,public,False,0,0,0xea
    0x5c: v5c(0x0) = CONST ,0x5b,v5c,0,CONST,get,public,False,0x0,0,0xea
    0x5e: v5e = SLOAD v5c(0x0),0x5b,v5e,"0,v5c",SLOAD,get,public,False,0,0,0xea
    0x5f: v5f(0x1) = CONST ,0x5b,v5f,0,CONST,get,public,False,0x1,0,0xea
"    0x61: v61 = ADD v5f(0x1), v5e",0x5b,v61,"0,v5f,v5e",ADD,get,public,False,0,0,0xea
    0x63: JUMP v50(0xea),0x5b,0,"0,v50",JUMP,get,public,False,0,0,0xea
    Begin block 0xea,0xea,0,0,0,get,public,False,0,0,0xea
"    prev=[0x5b], succ=[]",0xea,0,0,0,get,public,False,0,0,0xea
    =================================,0xea,0,0,0,get,public,False,0,0,0xea
    0xeb: veb(0x40) = CONST ,0xea,veb,0,CONST,get,public,False,0x40,0,0xea
    0xee: vee = MLOAD veb(0x40),0xea,vee,"0,veb",MLOAD,get,public,False,0,get&m0x40,0xea
"    0xf1: MSTORE vee, v61",0xea,get&m0x40,"0,vee,v61",MSTORE,get,public,False,0,get&m0x40,0xea
    0xf2: vf2 = MLOAD veb(0x40),0xea,vf2,"0,veb",MLOAD,get,public,False,0,get&m0x40,0xea
"    0xf6: vf6(0x0) = SUB vee, vf2",0xea,vf6,"0,vee,vf2",SUB,get,public,False,0x0,get&m0x40-0x0,0xea
    0xf7: vf7(0x20) = CONST ,0xea,vf7,0,CONST,get,public,False,0x20,0,0xea
"    0xf9: vf9(0x20) = ADD vf7(0x20), vf6(0x0)",0xea,vf9,"0,vf7,vf6",ADD,get,public,False,0x20,get&m0x40-0x0+0x20,0xea
"    0xfb: RETURN vf2, vf9(0x20)",0xea,0,"0,vf2,vf9",RETURN,get,public,False,0,0,0xea
},0xea,0,0,0,get,public,False,0,0,0xea
