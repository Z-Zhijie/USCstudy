3IR,blockname,leftvariable,rightvariable,option,functionname,functiontype,callersource,constant,memloc,succ
    Begin block 0x0,0x0,0,0,0,0,0,False,0,0,
"    prev=[], succ=[0xd, 0x4f0]",0x0,0,0,0,0,0,False,0,0,"0xd, 0x4f0"
    =================================,0x0,0,0,0,0,0,False,0,0,"0xd, 0x4f0"
    0x0: v0(0x80) = CONST ,0x0,v0,0,CONST,0,0,False,0x80,0,"0xd, 0x4f0"
    0x2: v2(0x40) = CONST ,0x0,v2,0,CONST,0,0,False,0x40,0,"0xd, 0x4f0"
"    0x4: MSTORE v2(0x40), v0(0x80)",0x0,0,"0,v2,v0",MSTORE,0,0,False,0,0,"0xd, 0x4f0"
    0x5: v5(0x4) = CONST ,0x0,v5,0,CONST,0,0,False,0x4,0,"0xd, 0x4f0"
    0x7: v7 = CALLDATASIZE ,0x0,v7,0,CALLDATASIZE,0,0,False,0,0,"0xd, 0x4f0"
"    0x8: v8 = LT v7, v5(0x4)",0x0,v8,"0,v7,v5",LT,0,0,False,0,0,"0xd, 0x4f0"
    0x4e4: v4e4(0x4f0) = CONST ,0x0,v4e4,0,CONST,0,0,False,0x4f0,0,"0xd, 0x4f0"
"    0x4e5: JUMPI v4e4(0x4f0), v8",0x0,0,"0,v4e4,v8",JUMPI,0,0,False,0,0,"0xd, 0x4f0"
    Begin block 0xd,0xd,0,0,0,0,0,False,0,0,"0xd, 0x4f0"
"    prev=[0x0], succ=[0x4f3, 0x1e]",0xd,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
    =================================,0xd,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
    0xd: vd(0x0) = CONST ,0xd,vd,0,CONST,0,0,False,0x0,0,"0x4f3, 0x1e"
    0xf: vf = CALLDATALOAD vd(0x0),0xd,vf,"0,vd",CALLDATALOAD,0,0,False,0,0,"0x4f3, 0x1e"
    0x10: v10(0xe0) = CONST ,0xd,v10,0,CONST,0,0,False,0xe0,0,"0x4f3, 0x1e"
"    0x12: v12 = SHR v10(0xe0), vf",0xd,v12,"0,v10,vf",SHR,0,0,False,0,0,"0x4f3, 0x1e"
    0x14: v14(0x5c60da1b) = CONST ,0xd,v14,0,CONST,0,0,False,0x5c60da1b,0,"0x4f3, 0x1e"
"    0x19: v19 = EQ v14(0x5c60da1b), v12",0xd,v19,"0,v14,v12",EQ,0,0,False,0,0,"0x4f3, 0x1e"
    0x4e6: v4e6(0x4f3) = CONST ,0xd,v4e6,0,CONST,0,0,False,0x4f3,0,"0x4f3, 0x1e"
"    0x4e7: JUMPI v4e6(0x4f3), v19",0xd,0,"0,v4e6,v19",JUMPI,0,0,False,0,0,"0x4f3, 0x1e"
    Begin block 0x4f3,0x4f3,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
"    prev=[0xd], succ=[]",0x4f3,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
    =================================,0x4f3,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
    0x4f4: v4f4(0xc6) = CONST ,0x4f3,v4f4,0,CONST,0,0,False,0xc6,0,"0x4f3, 0x1e"
    0x4f5: CALLPRIVATE v4f4(0xc6),0x4f3,0,"0,v4f4",CALLPRIVATE,0,0,False,0,0,"0x4f3, 0x1e"
    Begin block 0x1e,0x1e,0,0,0,0,0,False,0,0,"0x4f3, 0x1e"
"    prev=[0xd], succ=[0x4f6, 0x29]",0x1e,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
    =================================,0x1e,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
    0x1f: v1f(0x8da5cb5b) = CONST ,0x1e,v1f,0,CONST,0,0,False,0x8da5cb5b,0,"0x4f6, 0x29"
"    0x24: v24 = EQ v1f(0x8da5cb5b), v12",0x1e,v24,"0,v1f,v12",EQ,0,0,False,0,0,"0x4f6, 0x29"
    0x4e8: v4e8(0x4f6) = CONST ,0x1e,v4e8,0,CONST,0,0,False,0x4f6,0,"0x4f6, 0x29"
"    0x4e9: JUMPI v4e8(0x4f6), v24",0x1e,0,"0,v4e8,v24",JUMPI,0,0,False,0,0,"0x4f6, 0x29"
    Begin block 0x4f6,0x4f6,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
"    prev=[0x1e], succ=[]",0x4f6,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
    =================================,0x4f6,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
    0x4f7: v4f7(0xf7) = CONST ,0x4f6,v4f7,0,CONST,0,0,False,0xf7,0,"0x4f6, 0x29"
    0x4f8: CALLPRIVATE v4f7(0xf7),0x4f6,0,"0,v4f7",CALLPRIVATE,0,0,False,0,0,"0x4f6, 0x29"
    Begin block 0x29,0x29,0,0,0,0,0,False,0,0,"0x4f6, 0x29"
"    prev=[0x1e], succ=[0x4f9, 0x34]",0x29,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
    =================================,0x29,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
    0x2a: v2a(0x8f32d59b) = CONST ,0x29,v2a,0,CONST,0,0,False,0x8f32d59b,0,"0x4f9, 0x34"
"    0x2f: v2f = EQ v2a(0x8f32d59b), v12",0x29,v2f,"0,v2a,v12",EQ,0,0,False,0,0,"0x4f9, 0x34"
    0x4ea: v4ea(0x4f9) = CONST ,0x29,v4ea,0,CONST,0,0,False,0x4f9,0,"0x4f9, 0x34"
"    0x4eb: JUMPI v4ea(0x4f9), v2f",0x29,0,"0,v4ea,v2f",JUMPI,0,0,False,0,0,"0x4f9, 0x34"
    Begin block 0x4f9,0x4f9,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
"    prev=[0x29], succ=[]",0x4f9,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
    =================================,0x4f9,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
    0x4fa: v4fa(0x10c) = CONST ,0x4f9,v4fa,0,CONST,0,0,False,0x10c,0,"0x4f9, 0x34"
    0x4fb: CALLPRIVATE v4fa(0x10c),0x4f9,0,"0,v4fa",CALLPRIVATE,0,0,False,0,0,"0x4f9, 0x34"
    Begin block 0x34,0x34,0,0,0,0,0,False,0,0,"0x4f9, 0x34"
"    prev=[0x29], succ=[0x3f, 0x4fc]",0x34,0,0,0,0,0,False,0,0,"0x3f, 0x4fc"
    =================================,0x34,0,0,0,0,0,False,0,0,"0x3f, 0x4fc"
    0x35: v35(0xd69efdc5) = CONST ,0x34,v35,0,CONST,0,0,False,0xd69efdc5,0,"0x3f, 0x4fc"
"    0x3a: v3a = EQ v35(0xd69efdc5), v12",0x34,v3a,"0,v35,v12",EQ,0,0,False,0,0,"0x3f, 0x4fc"
    0x4ec: v4ec(0x4fc) = CONST ,0x34,v4ec,0,CONST,0,0,False,0x4fc,0,"0x3f, 0x4fc"
"    0x4ed: JUMPI v4ec(0x4fc), v3a",0x34,0,"0,v4ec,v3a",JUMPI,0,0,False,0,0,"0x3f, 0x4fc"
    Begin block 0x3f,0x3f,0,0,0,0,0,False,0,0,"0x3f, 0x4fc"
"    prev=[0x34], succ=[0x4f0, 0x4ff]",0x3f,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    =================================,0x3f,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    0x40: v40(0xf2fde38b) = CONST ,0x3f,v40,0,CONST,0,0,False,0xf2fde38b,0,"0x4f0, 0x4ff"
"    0x45: v45 = EQ v40(0xf2fde38b), v12",0x3f,v45,"0,v40,v12",EQ,0,0,False,0,0,"0x4f0, 0x4ff"
    0x4ee: v4ee(0x4ff) = CONST ,0x3f,v4ee,0,CONST,0,0,False,0x4ff,0,"0x4f0, 0x4ff"
"    0x4ef: JUMPI v4ee(0x4ff), v45",0x3f,0,"0,v4ee,v45",JUMPI,0,0,False,0,0,"0x4f0, 0x4ff"
    Begin block 0x4f0,0x4f0,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
"    prev=[0x0, 0x3f], succ=[]",0x4f0,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    =================================,0x4f0,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    0x4f1: v4f1(0x4a) = CONST ,0x4f0,v4f1,0,CONST,0,0,False,0x4a,0,"0x4f0, 0x4ff"
    0x4f2: CALLPRIVATE v4f1(0x4a),0x4f0,0,"0,v4f1",CALLPRIVATE,0,0,False,0,0,"0x4f0, 0x4ff"
    Begin block 0x4ff,0x4ff,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
"    prev=[0x3f], succ=[]",0x4ff,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    =================================,0x4ff,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    0x500: v500(0x168) = CONST ,0x4ff,v500,0,CONST,0,0,False,0x168,0,"0x4f0, 0x4ff"
    0x501: CALLPRIVATE v500(0x168),0x4ff,0,"0,v500",CALLPRIVATE,0,0,False,0,0,"0x4f0, 0x4ff"
    Begin block 0x4fc,0x4fc,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
"    prev=[0x34], succ=[]",0x4fc,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    =================================,0x4fc,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
    0x4fd: v4fd(0x135) = CONST ,0x4fc,v4fd,0,CONST,0,0,False,0x135,0,"0x4f0, 0x4ff"
    0x4fe: CALLPRIVATE v4fd(0x135),0x4fc,0,"0,v4fd",CALLPRIVATE,0,0,False,0,0,"0x4f0, 0x4ff"
},0x4fc,0,0,0,0,0,False,0,0,"0x4f0, 0x4ff"
function isOwner()() public {,0x10c,0,0,public,isOwner,public,False,0,0,"0x4f0, 0x4ff"
    Begin block 0x10c,0x10c,0,0,0,isOwner,public,False,0,0,"0x4f0, 0x4ff"
"    prev=[], succ=[0x114, 0x118]",0x10c,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
    =================================,0x10c,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
    0x10d: v10d = CALLVALUE ,0x10c,v10d,0,CALLVALUE,isOwner,public,False,0,0,"0x114, 0x118"
    0x10f: v10f = ISZERO v10d,0x10c,v10f,"0,v10d",ISZERO,isOwner,public,False,0,0,"0x114, 0x118"
    0x110: v110(0x118) = CONST ,0x10c,v110,0,CONST,isOwner,public,False,0x118,0,"0x114, 0x118"
"    0x113: JUMPI v110(0x118), v10f",0x10c,0,"0,v110,v10f",JUMPI,isOwner,public,False,0,0,"0x114, 0x118"
    Begin block 0x114,0x114,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
"    prev=[0x10c], succ=[]",0x114,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
    =================================,0x114,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
    0x114: v114(0x0) = CONST ,0x114,v114,0,CONST,isOwner,public,False,0x0,0,"0x114, 0x118"
"    0x117: REVERT v114(0x0), v114(0x0)",0x114,0,"0,v114,v114",REVERT,isOwner,public,False,0,0,"0x114, 0x118"
    Begin block 0x118,0x118,0,0,0,isOwner,public,False,0,0,"0x114, 0x118"
"    prev=[0x10c], succ=[0x1b9B0x118]",0x118,0,0,0,isOwner,public,False,0,0,0x1b9B0x118
    =================================,0x118,0,0,0,isOwner,public,False,0,0,0x1b9B0x118
    0x11a: v11a(0x121) = CONST ,0x118,v11a,0,CONST,isOwner,public,False,0x121,0,0x1b9B0x118
    0x11d: v11d(0x1b9) = CONST ,0x118,v11d,0,CONST,isOwner,public,False,0x1b9,0,0x1b9B0x118
    0x120: JUMP v11d(0x1b9),0x118,0,"0,v11d",JUMP,isOwner,public,False,0,0,0x1b9B0x118
    Begin block 0x1b9B0x118,0x1b9B0x118,0,0,0,isOwner,public,False,0,0,0x1b9B0x118
"    prev=[0x118], succ=[0x2e6B0x118]",0x1b9B0x118,0,0,0,isOwner,public,False,0,0,0x2e6B0x118
    =================================,0x1b9B0x118,0,0,0,isOwner,public,False,0,0,0x2e6B0x118
    0x1baS0x118: v1baV118(0x0) = CONST ,0x1b9B0x118,v1baV118,0,CONST,isOwner,public,False,0x0,0,0x2e6B0x118
    0x1bdS0x118: v1bdV118 = SLOAD v1baV118(0x0),0x1b9B0x118,v1bdV118,"0,v1baV118",SLOAD,isOwner,public,False,0,0,0x2e6B0x118
    0x1beS0x118: v1beV118(0x1) = CONST ,0x1b9B0x118,v1beV118,0,CONST,isOwner,public,False,0x1,0,0x2e6B0x118
    0x1c0S0x118: v1c0V118(0x1) = CONST ,0x1b9B0x118,v1c0V118,0,CONST,isOwner,public,False,0x1,0,0x2e6B0x118
    0x1c2S0x118: v1c2V118(0xa0) = CONST ,0x1b9B0x118,v1c2V118,0,CONST,isOwner,public,False,0xa0,0,0x2e6B0x118
"    0x1c4S0x118: v1c4V118(0x10000000000000000000000000000000000000000) = SHL v1c2V118(0xa0), v1c0V118(0x1)",0x1b9B0x118,v1c4V118,"0,v1c2V118,v1c0V118",SHL,isOwner,public,False,0x10000000000000000000000000000000000000000,0,0x2e6B0x118
"    0x1c5S0x118: v1c5V118(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c4V118(0x10000000000000000000000000000000000000000), v1beV118(0x1)",0x1b9B0x118,v1c5V118,"0,v1c4V118,v1beV118",SUB,isOwner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e6B0x118
"    0x1c6S0x118: v1c6V118 = AND v1c5V118(0xffffffffffffffffffffffffffffffffffffffff), v1bdV118",0x1b9B0x118,v1c6V118,"0,v1c5V118,v1bdV118",AND,isOwner,public,False,0,0,0x2e6B0x118
    0x1c7S0x118: v1c7V118(0x1ce) = CONST ,0x1b9B0x118,v1c7V118,0,CONST,isOwner,public,False,0x1ce,0,0x2e6B0x118
    0x1caS0x118: v1caV118(0x2e6) = CONST ,0x1b9B0x118,v1caV118,0,CONST,isOwner,public,False,0x2e6,0,0x2e6B0x118
    0x1cdS0x118: JUMP v1caV118(0x2e6),0x1b9B0x118,0,"0,v1caV118",JUMP,isOwner,public,False,0,0,0x2e6B0x118
    Begin block 0x2e6B0x118,0x2e6B0x118,0,0,0,isOwner,public,False,0,0,0x2e6B0x118
"    prev=[0x1b9B0x118], succ=[0x1ceB0x118]",0x2e6B0x118,0,0,0,isOwner,public,False,0,0,0x1ceB0x118
    =================================,0x2e6B0x118,0,0,0,isOwner,public,False,0,0,0x1ceB0x118
    0x2e7S0x118: v2e7V118 = CALLER ,0x2e6B0x118,v2e7V118,0,CALLER,isOwner,public,True,0,0,0x1ceB0x118
    0x2e9S0x118: JUMP v1c7V118(0x1ce),0x2e6B0x118,0,"0,v1c7V118",JUMP,isOwner,public,False,0,0,0x1ceB0x118
    Begin block 0x1ceB0x118,0x1ceB0x118,0,0,0,isOwner,public,False,0,0,0x1ceB0x118
"    prev=[0x2e6B0x118], succ=[0x121]",0x1ceB0x118,0,0,0,isOwner,public,False,0,0,0x121
    =================================,0x1ceB0x118,0,0,0,isOwner,public,False,0,0,0x121
    0x1cfS0x118: v1cfV118(0x1) = CONST ,0x1ceB0x118,v1cfV118,0,CONST,isOwner,public,False,0x1,0,0x121
    0x1d1S0x118: v1d1V118(0x1) = CONST ,0x1ceB0x118,v1d1V118,0,CONST,isOwner,public,False,0x1,0,0x121
    0x1d3S0x118: v1d3V118(0xa0) = CONST ,0x1ceB0x118,v1d3V118,0,CONST,isOwner,public,False,0xa0,0,0x121
"    0x1d5S0x118: v1d5V118(0x10000000000000000000000000000000000000000) = SHL v1d3V118(0xa0), v1d1V118(0x1)",0x1ceB0x118,v1d5V118,"0,v1d3V118,v1d1V118",SHL,isOwner,public,False,0x10000000000000000000000000000000000000000,0,0x121
"    0x1d6S0x118: v1d6V118(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d5V118(0x10000000000000000000000000000000000000000), v1cfV118(0x1)",0x1ceB0x118,v1d6V118,"0,v1d5V118,v1cfV118",SUB,isOwner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x121
"    0x1d7S0x118: v1d7V118 = AND v1d6V118(0xffffffffffffffffffffffffffffffffffffffff), v2e7V118",0x1ceB0x118,v1d7V118,"0,v1d6V118,v2e7V118",AND,isOwner,public,True,0,0,0x121
"    0x1d8S0x118: v1d8V118 = EQ v1d7V118, v1c6V118",0x1ceB0x118,v1d8V118,"0,v1d7V118,v1c6V118",EQ,isOwner,public,False,0,0,0x121
    0x1dcS0x118: JUMP v11a(0x121),0x1ceB0x118,0,"0,v11a",JUMP,isOwner,public,False,0,0,0x121
    Begin block 0x121,0x121,0,0,0,isOwner,public,False,0,0,0x121
"    prev=[0x1ceB0x118], succ=[]",0x121,0,0,0,isOwner,public,False,0,0,0x121
    =================================,0x121,0,0,0,isOwner,public,False,0,0,0x121
    0x122: v122(0x40) = CONST ,0x121,v122,0,CONST,isOwner,public,False,0x40,0,0x121
    0x125: v125 = MLOAD v122(0x40),0x121,v125,"0,v122",MLOAD,isOwner,public,False,0,isOwner&m0x40,0x121
    0x127: v127 = ISZERO v1d8V118,0x121,v127,"0,v1d8V118",ISZERO,isOwner,public,False,0,0,0x121
    0x128: v128 = ISZERO v127,0x121,v128,"0,v127",ISZERO,isOwner,public,False,0,0,0x121
"    0x12a: MSTORE v125, v128",0x121,isOwner&m0x40,"0,v125,v128",MSTORE,isOwner,public,False,0,isOwner&m0x40,0x121
    0x12b: v12b = MLOAD v122(0x40),0x121,v12b,"0,v122",MLOAD,isOwner,public,False,0,isOwner&m0x40,0x121
"    0x12f: v12f(0x0) = SUB v125, v12b",0x121,v12f,"0,v125,v12b",SUB,isOwner,public,False,0x0,isOwner&m0x40-0x0,0x121
    0x130: v130(0x20) = CONST ,0x121,v130,0,CONST,isOwner,public,False,0x20,0,0x121
"    0x132: v132(0x20) = ADD v130(0x20), v12f(0x0)",0x121,v132,"0,v130,v12f",ADD,isOwner,public,False,0x20,isOwner&m0x40-0x0+0x20,0x121
"    0x134: RETURN v12b, v132(0x20)",0x121,0,"0,v12b,v132",RETURN,isOwner,public,False,0,0,0x121
},0x121,0,0,0,isOwner,public,False,0,0,0x121
function replaceImplementation(address)() public {,0x135,0,0,public,replaceImplementation,public,False,0,0,0x121
    Begin block 0x135,0x135,0,0,0,replaceImplementation,public,False,0,0,0x121
"    prev=[], succ=[0x13d, 0x141]",0x135,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    =================================,0x135,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    0x136: v136 = CALLVALUE ,0x135,v136,0,CALLVALUE,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    0x138: v138 = ISZERO v136,0x135,v138,"0,v136",ISZERO,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    0x139: v139(0x141) = CONST ,0x135,v139,0,CONST,replaceImplementation,public,False,0x141,0,"0x13d, 0x141"
"    0x13c: JUMPI v139(0x141), v138",0x135,0,"0,v139,v138",JUMPI,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    Begin block 0x13d,0x13d,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
"    prev=[0x135], succ=[]",0x13d,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    =================================,0x13d,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    0x13d: v13d(0x0) = CONST ,0x13d,v13d,0,CONST,replaceImplementation,public,False,0x0,0,"0x13d, 0x141"
"    0x140: REVERT v13d(0x0), v13d(0x0)",0x13d,0,"0,v13d,v13d",REVERT,replaceImplementation,public,False,0,0,"0x13d, 0x141"
    Begin block 0x141,0x141,0,0,0,replaceImplementation,public,False,0,0,"0x13d, 0x141"
"    prev=[0x135], succ=[0x154, 0x158]",0x141,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
    =================================,0x141,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
    0x143: v143(0x4c1) = CONST ,0x141,v143,0,CONST,replaceImplementation,public,False,0x4c1,0,"0x154, 0x158"
    0x146: v146(0x4) = CONST ,0x141,v146,0,CONST,replaceImplementation,public,False,0x4,0,"0x154, 0x158"
    0x149: v149 = CALLDATASIZE ,0x141,v149,0,CALLDATASIZE,replaceImplementation,public,False,0,0,"0x154, 0x158"
"    0x14a: v14a = SUB v149, v146(0x4)",0x141,v14a,"0,v149,v146",SUB,replaceImplementation,public,False,0,0,"0x154, 0x158"
    0x14b: v14b(0x20) = CONST ,0x141,v14b,0,CONST,replaceImplementation,public,False,0x20,0,"0x154, 0x158"
"    0x14e: v14e = LT v14a, v14b(0x20)",0x141,v14e,"0,v14a,v14b",LT,replaceImplementation,public,False,0,0,"0x154, 0x158"
    0x14f: v14f = ISZERO v14e,0x141,v14f,"0,v14e",ISZERO,replaceImplementation,public,False,0,0,"0x154, 0x158"
    0x150: v150(0x158) = CONST ,0x141,v150,0,CONST,replaceImplementation,public,False,0x158,0,"0x154, 0x158"
"    0x153: JUMPI v150(0x158), v14f",0x141,0,"0,v150,v14f",JUMPI,replaceImplementation,public,False,0,0,"0x154, 0x158"
    Begin block 0x154,0x154,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
"    prev=[0x141], succ=[]",0x154,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
    =================================,0x154,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
    0x154: v154(0x0) = CONST ,0x154,v154,0,CONST,replaceImplementation,public,False,0x0,0,"0x154, 0x158"
"    0x157: REVERT v154(0x0), v154(0x0)",0x154,0,"0,v154,v154",REVERT,replaceImplementation,public,False,0,0,"0x154, 0x158"
    Begin block 0x158,0x158,0,0,0,replaceImplementation,public,False,0,0,"0x154, 0x158"
"    prev=[0x141], succ=[0x1dd]",0x158,0,0,0,replaceImplementation,public,False,0,0,0x1dd
    =================================,0x158,0,0,0,replaceImplementation,public,False,0,0,0x1dd
    0x15a: v15a = CALLDATALOAD v146(0x4),0x158,v15a,"0,v146",CALLDATALOAD,replaceImplementation,public,False,0,0,0x1dd
    0x15b: v15b(0x1) = CONST ,0x158,v15b,0,CONST,replaceImplementation,public,False,0x1,0,0x1dd
    0x15d: v15d(0x1) = CONST ,0x158,v15d,0,CONST,replaceImplementation,public,False,0x1,0,0x1dd
    0x15f: v15f(0xa0) = CONST ,0x158,v15f,0,CONST,replaceImplementation,public,False,0xa0,0,0x1dd
"    0x161: v161(0x10000000000000000000000000000000000000000) = SHL v15f(0xa0), v15d(0x1)",0x158,v161,"0,v15f,v15d",SHL,replaceImplementation,public,False,0x10000000000000000000000000000000000000000,0,0x1dd
"    0x162: v162(0xffffffffffffffffffffffffffffffffffffffff) = SUB v161(0x10000000000000000000000000000000000000000), v15b(0x1)",0x158,v162,"0,v161,v15b",SUB,replaceImplementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1dd
"    0x163: v163 = AND v162(0xffffffffffffffffffffffffffffffffffffffff), v15a",0x158,v163,"0,v162,v15a",AND,replaceImplementation,public,False,0,0,0x1dd
    0x164: v164(0x1dd) = CONST ,0x158,v164,0,CONST,replaceImplementation,public,False,0x1dd,0,0x1dd
    0x167: JUMP v164(0x1dd),0x158,0,"0,v164",JUMP,replaceImplementation,public,False,0,0,0x1dd
    Begin block 0x1dd,0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1dd
"    prev=[0x158], succ=[0x1b9B0x1dd]",0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1b9B0x1dd
    =================================,0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1b9B0x1dd
    0x1de: v1de(0x1e5) = CONST ,0x1dd,v1de,0,CONST,replaceImplementation,public,False,0x1e5,0,0x1b9B0x1dd
    0x1e1: v1e1(0x1b9) = CONST ,0x1dd,v1e1,0,CONST,replaceImplementation,public,False,0x1b9,0,0x1b9B0x1dd
    0x1e4: JUMP v1e1(0x1b9),0x1dd,0,"0,v1e1",JUMP,replaceImplementation,public,False,0,0,0x1b9B0x1dd
    Begin block 0x1b9B0x1dd,0x1b9B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1b9B0x1dd
"    prev=[0x1dd], succ=[0x2e6B0x1dd]",0x1b9B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x2e6B0x1dd
    =================================,0x1b9B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x2e6B0x1dd
    0x1baS0x1dd: v1baV1dd(0x0) = CONST ,0x1b9B0x1dd,v1baV1dd,0,CONST,replaceImplementation,public,False,0x0,0,0x2e6B0x1dd
    0x1bdS0x1dd: v1bdV1dd = SLOAD v1baV1dd(0x0),0x1b9B0x1dd,v1bdV1dd,"0,v1baV1dd",SLOAD,replaceImplementation,public,False,0,0,0x2e6B0x1dd
    0x1beS0x1dd: v1beV1dd(0x1) = CONST ,0x1b9B0x1dd,v1beV1dd,0,CONST,replaceImplementation,public,False,0x1,0,0x2e6B0x1dd
    0x1c0S0x1dd: v1c0V1dd(0x1) = CONST ,0x1b9B0x1dd,v1c0V1dd,0,CONST,replaceImplementation,public,False,0x1,0,0x2e6B0x1dd
    0x1c2S0x1dd: v1c2V1dd(0xa0) = CONST ,0x1b9B0x1dd,v1c2V1dd,0,CONST,replaceImplementation,public,False,0xa0,0,0x2e6B0x1dd
"    0x1c4S0x1dd: v1c4V1dd(0x10000000000000000000000000000000000000000) = SHL v1c2V1dd(0xa0), v1c0V1dd(0x1)",0x1b9B0x1dd,v1c4V1dd,"0,v1c2V1dd,v1c0V1dd",SHL,replaceImplementation,public,False,0x10000000000000000000000000000000000000000,0,0x2e6B0x1dd
"    0x1c5S0x1dd: v1c5V1dd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c4V1dd(0x10000000000000000000000000000000000000000), v1beV1dd(0x1)",0x1b9B0x1dd,v1c5V1dd,"0,v1c4V1dd,v1beV1dd",SUB,replaceImplementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e6B0x1dd
"    0x1c6S0x1dd: v1c6V1dd = AND v1c5V1dd(0xffffffffffffffffffffffffffffffffffffffff), v1bdV1dd",0x1b9B0x1dd,v1c6V1dd,"0,v1c5V1dd,v1bdV1dd",AND,replaceImplementation,public,False,0,0,0x2e6B0x1dd
    0x1c7S0x1dd: v1c7V1dd(0x1ce) = CONST ,0x1b9B0x1dd,v1c7V1dd,0,CONST,replaceImplementation,public,False,0x1ce,0,0x2e6B0x1dd
    0x1caS0x1dd: v1caV1dd(0x2e6) = CONST ,0x1b9B0x1dd,v1caV1dd,0,CONST,replaceImplementation,public,False,0x2e6,0,0x2e6B0x1dd
    0x1cdS0x1dd: JUMP v1caV1dd(0x2e6),0x1b9B0x1dd,0,"0,v1caV1dd",JUMP,replaceImplementation,public,False,0,0,0x2e6B0x1dd
    Begin block 0x2e6B0x1dd,0x2e6B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x2e6B0x1dd
"    prev=[0x1b9B0x1dd], succ=[0x1ceB0x1dd]",0x2e6B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1ceB0x1dd
    =================================,0x2e6B0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1ceB0x1dd
    0x2e7S0x1dd: v2e7V1dd = CALLER ,0x2e6B0x1dd,v2e7V1dd,0,CALLER,replaceImplementation,public,True,0,0,0x1ceB0x1dd
    0x2e9S0x1dd: JUMP v1c7V1dd(0x1ce),0x2e6B0x1dd,0,"0,v1c7V1dd",JUMP,replaceImplementation,public,False,0,0,0x1ceB0x1dd
    Begin block 0x1ceB0x1dd,0x1ceB0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1ceB0x1dd
"    prev=[0x2e6B0x1dd], succ=[0x1e5]",0x1ceB0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1e5
    =================================,0x1ceB0x1dd,0,0,0,replaceImplementation,public,False,0,0,0x1e5
    0x1cfS0x1dd: v1cfV1dd(0x1) = CONST ,0x1ceB0x1dd,v1cfV1dd,0,CONST,replaceImplementation,public,False,0x1,0,0x1e5
    0x1d1S0x1dd: v1d1V1dd(0x1) = CONST ,0x1ceB0x1dd,v1d1V1dd,0,CONST,replaceImplementation,public,False,0x1,0,0x1e5
    0x1d3S0x1dd: v1d3V1dd(0xa0) = CONST ,0x1ceB0x1dd,v1d3V1dd,0,CONST,replaceImplementation,public,False,0xa0,0,0x1e5
"    0x1d5S0x1dd: v1d5V1dd(0x10000000000000000000000000000000000000000) = SHL v1d3V1dd(0xa0), v1d1V1dd(0x1)",0x1ceB0x1dd,v1d5V1dd,"0,v1d3V1dd,v1d1V1dd",SHL,replaceImplementation,public,False,0x10000000000000000000000000000000000000000,0,0x1e5
"    0x1d6S0x1dd: v1d6V1dd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d5V1dd(0x10000000000000000000000000000000000000000), v1cfV1dd(0x1)",0x1ceB0x1dd,v1d6V1dd,"0,v1d5V1dd,v1cfV1dd",SUB,replaceImplementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x1e5
"    0x1d7S0x1dd: v1d7V1dd = AND v1d6V1dd(0xffffffffffffffffffffffffffffffffffffffff), v2e7V1dd",0x1ceB0x1dd,v1d7V1dd,"0,v1d6V1dd,v2e7V1dd",AND,replaceImplementation,public,True,0,0,0x1e5
"    0x1d8S0x1dd: v1d8V1dd = EQ v1d7V1dd, v1c6V1dd",0x1ceB0x1dd,v1d8V1dd,"0,v1d7V1dd,v1c6V1dd",EQ,replaceImplementation,public,False,0,0,0x1e5
    0x1dcS0x1dd: JUMP v1de(0x1e5),0x1ceB0x1dd,0,"0,v1de",JUMP,replaceImplementation,public,False,0,0,0x1e5
    Begin block 0x1e5,0x1e5,0,0,0,replaceImplementation,public,False,0,0,0x1e5
"    prev=[0x1ceB0x1dd], succ=[0x1ea, 0x225]",0x1e5,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    =================================,0x1e5,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    0x1e6: v1e6(0x225) = CONST ,0x1e5,v1e6,0,CONST,replaceImplementation,public,False,0x225,0,"0x1ea, 0x225"
"    0x1e9: JUMPI v1e6(0x225), v1d8V1dd",0x1e5,0,"0,v1e6,v1d8V1dd",JUMPI,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    Begin block 0x1ea,0x1ea,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
"    prev=[0x1e5], succ=[]",0x1ea,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    =================================,0x1ea,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    0x1ea: v1ea(0x40) = CONST ,0x1ea,v1ea,0,CONST,replaceImplementation,public,False,0x40,0,"0x1ea, 0x225"
    0x1ed: v1ed = MLOAD v1ea(0x40),0x1ea,v1ed,"0,v1ea",MLOAD,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x1ea, 0x225"
    0x1ee: v1ee(0x461bcd) = CONST ,0x1ea,v1ee,0,CONST,replaceImplementation,public,False,0x461bcd,0,"0x1ea, 0x225"
    0x1f2: v1f2(0xe5) = CONST ,0x1ea,v1f2,0,CONST,replaceImplementation,public,False,0xe5,0,"0x1ea, 0x225"
"    0x1f4: v1f4(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1f2(0xe5), v1ee(0x461bcd)",0x1ea,v1f4,"0,v1f2,v1ee",SHL,replaceImplementation,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x1ea, 0x225"
"    0x1f6: MSTORE v1ed, v1f4(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x1ea,replaceImplementation&m0x40,"0,v1ed,v1f4",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x1ea, 0x225"
    0x1f7: v1f7(0x20) = CONST ,0x1ea,v1f7,0,CONST,replaceImplementation,public,False,0x20,0,"0x1ea, 0x225"
    0x1f9: v1f9(0x4) = CONST ,0x1ea,v1f9,0,CONST,replaceImplementation,public,False,0x4,0,"0x1ea, 0x225"
"    0x1fc: v1fc = ADD v1ed, v1f9(0x4)",0x1ea,v1fc,"0,v1ed,v1f9",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x4,"0x1ea, 0x225"
"    0x1fd: MSTORE v1fc, v1f7(0x20)",0x1ea,replaceImplementation&m0x40+0x4,"0,v1fc,v1f7",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x4,"0x1ea, 0x225"
    0x1fe: v1fe(0xc) = CONST ,0x1ea,v1fe,0,CONST,replaceImplementation,public,False,0xc,0,"0x1ea, 0x225"
    0x200: v200(0x24) = CONST ,0x1ea,v200,0,CONST,replaceImplementation,public,False,0x24,0,"0x1ea, 0x225"
"    0x203: v203 = ADD v1ed, v200(0x24)",0x1ea,v203,"0,v1ed,v200",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x24,"0x1ea, 0x225"
"    0x204: MSTORE v203, v1fe(0xc)",0x1ea,replaceImplementation&m0x40+0x24,"0,v203,v1fe",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x24,"0x1ea, 0x225"
    0x205: v205(0x1d5b985d5d1a1bdc9a5e9959) = CONST ,0x1ea,v205,0,CONST,replaceImplementation,public,False,0x1d5b985d5d1a1bdc9a5e9959,0,"0x1ea, 0x225"
    0x212: v212(0xa2) = CONST ,0x1ea,v212,0,CONST,replaceImplementation,public,False,0xa2,0,"0x1ea, 0x225"
"    0x214: v214(0x756e617574686f72697a65640000000000000000000000000000000000000000) = SHL v212(0xa2), v205(0x1d5b985d5d1a1bdc9a5e9959)",0x1ea,v214,"0,v212,v205",SHL,replaceImplementation,public,False,0x756e617574686f72697a65640000000000000000000000000000000000000000,0,"0x1ea, 0x225"
    0x215: v215(0x44) = CONST ,0x1ea,v215,0,CONST,replaceImplementation,public,False,0x44,0,"0x1ea, 0x225"
"    0x218: v218 = ADD v1ed, v215(0x44)",0x1ea,v218,"0,v1ed,v215",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x44,"0x1ea, 0x225"
"    0x219: MSTORE v218, v214(0x756e617574686f72697a65640000000000000000000000000000000000000000)",0x1ea,replaceImplementation&m0x40+0x44,"0,v218,v214",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x44,"0x1ea, 0x225"
    0x21b: v21b = MLOAD v1ea(0x40),0x1ea,v21b,"0,v1ea",MLOAD,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x1ea, 0x225"
"    0x21f: v21f(0x0) = SUB v1ed, v21b",0x1ea,v21f,"0,v1ed,v21b",SUB,replaceImplementation,public,False,0x0,replaceImplementation&m0x40-0x0,"0x1ea, 0x225"
    0x220: v220(0x64) = CONST ,0x1ea,v220,0,CONST,replaceImplementation,public,False,0x64,0,"0x1ea, 0x225"
"    0x222: v222(0x64) = ADD v220(0x64), v21f(0x0)",0x1ea,v222,"0,v220,v21f",ADD,replaceImplementation,public,False,0x64,replaceImplementation&m0x40-0x0+0x64,"0x1ea, 0x225"
"    0x224: REVERT v21b, v222(0x64)",0x1ea,0,"0,v21b,v222",REVERT,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
    Begin block 0x225,0x225,0,0,0,replaceImplementation,public,False,0,0,"0x1ea, 0x225"
"    prev=[0x1e5], succ=[0x2eaB0x225]",0x225,0,0,0,replaceImplementation,public,False,0,0,0x2eaB0x225
    =================================,0x225,0,0,0,replaceImplementation,public,False,0,0,0x2eaB0x225
    0x226: v226(0x22e) = CONST ,0x225,v226,0,CONST,replaceImplementation,public,False,0x22e,0,0x2eaB0x225
    0x22a: v22a(0x2ea) = CONST ,0x225,v22a,0,CONST,replaceImplementation,public,False,0x2ea,0,0x2eaB0x225
    0x22d: JUMP v22a(0x2ea),0x225,0,"0,v22a",JUMP,replaceImplementation,public,False,0,0,0x2eaB0x225
    Begin block 0x2eaB0x225,0x2eaB0x225,0,0,0,replaceImplementation,public,False,0,0,0x2eaB0x225
"    prev=[0x225], succ=[0x31eB0x225, 0x31aB0x225]",0x2eaB0x225,0,0,0,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    =================================,0x2eaB0x225,0,0,0,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    0x2ebS0x225: v2ebV225(0x0) = CONST ,0x2eaB0x225,v2ebV225,0,CONST,replaceImplementation,public,False,0x0,0,"0x31eB0x225, 0x31aB0x225"
    0x2eeS0x225: v2eeV225 = EXTCODEHASH v163,0x2eaB0x225,v2eeV225,"0,v163",EXTCODEHASH,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    0x2efS0x225: v2efV225(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST ,0x2eaB0x225,v2efV225,0,CONST,replaceImplementation,public,False,0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,0,"0x31eB0x225, 0x31aB0x225"
"    0x312S0x225: v312V225 = EQ v2efV225(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470), v2eeV225",0x2eaB0x225,v312V225,"0,v2efV225,v2eeV225",EQ,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    0x314S0x225: v314V225 = ISZERO v312V225,0x2eaB0x225,v314V225,"0,v312V225",ISZERO,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    0x316S0x225: v316V225(0x31e) = CONST ,0x2eaB0x225,v316V225,0,CONST,replaceImplementation,public,False,0x31e,0,"0x31eB0x225, 0x31aB0x225"
"    0x319S0x225: JUMPI v316V225(0x31e), v312V225",0x2eaB0x225,0,"0,v316V225,v312V225",JUMPI,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
    Begin block 0x31eB0x225,0x31eB0x225,0,0,0,replaceImplementation,public,False,0,0,"0x31eB0x225, 0x31aB0x225"
"    prev=[0x2eaB0x225, 0x31aB0x225], succ=[0x22e]",0x31eB0x225,0,0,0,replaceImplementation,public,False,0,0,0x22e
    =================================,0x31eB0x225,0,0,0,replaceImplementation,public,False,0,0,0x22e
"    0x31e_0x0S0x225: v31e_0V225 = PHI v314V225, v31dV225",0x31eB0x225,v31e_0V225,"0,v314V225,v31dV225",PHI,replaceImplementation,public,False,0,0,0x22e
    0x325S0x225: JUMP v226(0x22e),0x31eB0x225,0,"0,v226",JUMP,replaceImplementation,public,False,0,0,0x22e
    Begin block 0x22e,0x22e,0,0,0,replaceImplementation,public,False,0,0,0x22e
"    prev=[0x31eB0x225], succ=[0x233, 0x270]",0x22e,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
    =================================,0x22e,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
    0x22f: v22f(0x270) = CONST ,0x22e,v22f,0,CONST,replaceImplementation,public,False,0x270,0,"0x233, 0x270"
"    0x232: JUMPI v22f(0x270), v31e_0V225",0x22e,0,"0,v22f,v31e_0V225",JUMPI,replaceImplementation,public,False,0,0,"0x233, 0x270"
    Begin block 0x233,0x233,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
"    prev=[0x22e], succ=[]",0x233,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
    =================================,0x233,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
    0x233: v233(0x40) = CONST ,0x233,v233,0,CONST,replaceImplementation,public,False,0x40,0,"0x233, 0x270"
    0x236: v236 = MLOAD v233(0x40),0x233,v236,"0,v233",MLOAD,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x233, 0x270"
    0x237: v237(0x461bcd) = CONST ,0x233,v237,0,CONST,replaceImplementation,public,False,0x461bcd,0,"0x233, 0x270"
    0x23b: v23b(0xe5) = CONST ,0x233,v23b,0,CONST,replaceImplementation,public,False,0xe5,0,"0x233, 0x270"
"    0x23d: v23d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v23b(0xe5), v237(0x461bcd)",0x233,v23d,"0,v23b,v237",SHL,replaceImplementation,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x233, 0x270"
"    0x23f: MSTORE v236, v23d(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x233,replaceImplementation&m0x40,"0,v236,v23d",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x233, 0x270"
    0x240: v240(0x20) = CONST ,0x233,v240,0,CONST,replaceImplementation,public,False,0x20,0,"0x233, 0x270"
    0x242: v242(0x4) = CONST ,0x233,v242,0,CONST,replaceImplementation,public,False,0x4,0,"0x233, 0x270"
"    0x245: v245 = ADD v236, v242(0x4)",0x233,v245,"0,v236,v242",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x4,"0x233, 0x270"
"    0x246: MSTORE v245, v240(0x20)",0x233,replaceImplementation&m0x40+0x4,"0,v245,v240",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x4,"0x233, 0x270"
    0x247: v247(0xe) = CONST ,0x233,v247,0,CONST,replaceImplementation,public,False,0xe,0,"0x233, 0x270"
    0x249: v249(0x24) = CONST ,0x233,v249,0,CONST,replaceImplementation,public,False,0x24,0,"0x233, 0x270"
"    0x24c: v24c = ADD v236, v249(0x24)",0x233,v24c,"0,v236,v249",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x24,"0x233, 0x270"
"    0x24d: MSTORE v24c, v247(0xe)",0x233,replaceImplementation&m0x40+0x24,"0,v24c,v247",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x24,"0x233, 0x270"
    0x24e: v24e(0x1b9bdd08184818dbdb9d1c9858dd) = CONST ,0x233,v24e,0,CONST,replaceImplementation,public,False,0x1b9bdd08184818dbdb9d1c9858dd,0,"0x233, 0x270"
    0x25d: v25d(0x92) = CONST ,0x233,v25d,0,CONST,replaceImplementation,public,False,0x92,0,"0x233, 0x270"
"    0x25f: v25f(0x6e6f74206120636f6e7472616374000000000000000000000000000000000000) = SHL v25d(0x92), v24e(0x1b9bdd08184818dbdb9d1c9858dd)",0x233,v25f,"0,v25d,v24e",SHL,replaceImplementation,public,False,0x6e6f74206120636f6e7472616374000000000000000000000000000000000000,0,"0x233, 0x270"
    0x260: v260(0x44) = CONST ,0x233,v260,0,CONST,replaceImplementation,public,False,0x44,0,"0x233, 0x270"
"    0x263: v263 = ADD v236, v260(0x44)",0x233,v263,"0,v236,v260",ADD,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x44,"0x233, 0x270"
"    0x264: MSTORE v263, v25f(0x6e6f74206120636f6e7472616374000000000000000000000000000000000000)",0x233,replaceImplementation&m0x40+0x44,"0,v263,v25f",MSTORE,replaceImplementation,public,False,0,replaceImplementation&m0x40+0x44,"0x233, 0x270"
    0x266: v266 = MLOAD v233(0x40),0x233,v266,"0,v233",MLOAD,replaceImplementation,public,False,0,replaceImplementation&m0x40,"0x233, 0x270"
"    0x26a: v26a(0x0) = SUB v236, v266",0x233,v26a,"0,v236,v266",SUB,replaceImplementation,public,False,0x0,replaceImplementation&m0x40-0x0,"0x233, 0x270"
    0x26b: v26b(0x64) = CONST ,0x233,v26b,0,CONST,replaceImplementation,public,False,0x64,0,"0x233, 0x270"
"    0x26d: v26d(0x64) = ADD v26b(0x64), v26a(0x0)",0x233,v26d,"0,v26b,v26a",ADD,replaceImplementation,public,False,0x64,replaceImplementation&m0x40-0x0+0x64,"0x233, 0x270"
"    0x26f: REVERT v266, v26d(0x64)",0x233,0,"0,v266,v26d",REVERT,replaceImplementation,public,False,0,0,"0x233, 0x270"
    Begin block 0x270,0x270,0,0,0,replaceImplementation,public,False,0,0,"0x233, 0x270"
"    prev=[0x22e], succ=[0x4c1]",0x270,0,0,0,replaceImplementation,public,False,0,0,0x4c1
    =================================,0x270,0,0,0,replaceImplementation,public,False,0,0,0x4c1
    0x271: v271(0x1) = CONST ,0x270,v271,0,CONST,replaceImplementation,public,False,0x1,0,0x4c1
    0x274: v274 = SLOAD v271(0x1),0x270,v274,"0,v271",SLOAD,replaceImplementation,public,False,0,0,0x4c1
    0x275: v275(0x1) = CONST ,0x270,v275,0,CONST,replaceImplementation,public,False,0x1,0,0x4c1
    0x277: v277(0x1) = CONST ,0x270,v277,0,CONST,replaceImplementation,public,False,0x1,0,0x4c1
    0x279: v279(0xa0) = CONST ,0x270,v279,0,CONST,replaceImplementation,public,False,0xa0,0,0x4c1
"    0x27b: v27b(0x10000000000000000000000000000000000000000) = SHL v279(0xa0), v277(0x1)",0x270,v27b,"0,v279,v277",SHL,replaceImplementation,public,False,0x10000000000000000000000000000000000000000,0,0x4c1
"    0x27c: v27c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v27b(0x10000000000000000000000000000000000000000), v275(0x1)",0x270,v27c,"0,v27b,v275",SUB,replaceImplementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x4c1
    0x27d: v27d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v27c(0xffffffffffffffffffffffffffffffffffffffff),0x270,v27d,"0,v27c",NOT,replaceImplementation,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x4c1
"    0x27e: v27e = AND v27d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v274",0x270,v27e,"0,v27d,v274",AND,replaceImplementation,public,False,0,0,0x4c1
    0x27f: v27f(0x1) = CONST ,0x270,v27f,0,CONST,replaceImplementation,public,False,0x1,0,0x4c1
    0x281: v281(0x1) = CONST ,0x270,v281,0,CONST,replaceImplementation,public,False,0x1,0,0x4c1
    0x283: v283(0xa0) = CONST ,0x270,v283,0,CONST,replaceImplementation,public,False,0xa0,0,0x4c1
"    0x285: v285(0x10000000000000000000000000000000000000000) = SHL v283(0xa0), v281(0x1)",0x270,v285,"0,v283,v281",SHL,replaceImplementation,public,False,0x10000000000000000000000000000000000000000,0,0x4c1
"    0x286: v286(0xffffffffffffffffffffffffffffffffffffffff) = SUB v285(0x10000000000000000000000000000000000000000), v27f(0x1)",0x270,v286,"0,v285,v27f",SUB,replaceImplementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x4c1
"    0x28a: v28a = AND v286(0xffffffffffffffffffffffffffffffffffffffff), v163",0x270,v28a,"0,v286,v163",AND,replaceImplementation,public,False,0,0,0x4c1
"    0x28e: v28e = OR v28a, v27e",0x270,v28e,"0,v28a,v27e",OR,replaceImplementation,public,False,0,0,0x4c1
"    0x290: SSTORE v271(0x1), v28e",0x270,0,"0,v271,v28e",SSTORE,replaceImplementation,public,False,0,0,0x4c1
    0x291: JUMP v143(0x4c1),0x270,0,"0,v143",JUMP,replaceImplementation,public,False,0,0,0x4c1
    Begin block 0x4c1,0x4c1,0,0,0,replaceImplementation,public,False,0,0,0x4c1
"    prev=[0x270], succ=[]",0x4c1,0,0,0,replaceImplementation,public,False,0,0,0x4c1
    =================================,0x4c1,0,0,0,replaceImplementation,public,False,0,0,0x4c1
    0x4c2: STOP ,0x4c1,0,0,STOP,replaceImplementation,public,False,0,0,0x4c1
    Begin block 0x31aB0x225,0x31aB0x225,0,0,0,replaceImplementation,public,False,0,0,0x4c1
"    prev=[0x2eaB0x225], succ=[0x31eB0x225]",0x31aB0x225,0,0,0,replaceImplementation,public,False,0,0,0x31eB0x225
    =================================,0x31aB0x225,0,0,0,replaceImplementation,public,False,0,0,0x31eB0x225
    0x31cS0x225: v31cV225 = ISZERO v2eeV225,0x31aB0x225,v31cV225,"0,v2eeV225",ISZERO,replaceImplementation,public,False,0,0,0x31eB0x225
    0x31dS0x225: v31dV225 = ISZERO v31cV225,0x31aB0x225,v31dV225,"0,v31cV225",ISZERO,replaceImplementation,public,False,0,0,0x31eB0x225
},0x31aB0x225,0,0,0,replaceImplementation,public,False,0,0,0x31eB0x225
function transferOwnership(address)() public {,0x168,0,0,public,transferOwnership,public,False,0,0,0x31eB0x225
    Begin block 0x168,0x168,0,0,0,transferOwnership,public,False,0,0,0x31eB0x225
"    prev=[], succ=[0x170, 0x174]",0x168,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
    =================================,0x168,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
    0x169: v169 = CALLVALUE ,0x168,v169,0,CALLVALUE,transferOwnership,public,False,0,0,"0x170, 0x174"
    0x16b: v16b = ISZERO v169,0x168,v16b,"0,v169",ISZERO,transferOwnership,public,False,0,0,"0x170, 0x174"
    0x16c: v16c(0x174) = CONST ,0x168,v16c,0,CONST,transferOwnership,public,False,0x174,0,"0x170, 0x174"
"    0x16f: JUMPI v16c(0x174), v16b",0x168,0,"0,v16c,v16b",JUMPI,transferOwnership,public,False,0,0,"0x170, 0x174"
    Begin block 0x170,0x170,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
"    prev=[0x168], succ=[]",0x170,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
    =================================,0x170,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
    0x170: v170(0x0) = CONST ,0x170,v170,0,CONST,transferOwnership,public,False,0x0,0,"0x170, 0x174"
"    0x173: REVERT v170(0x0), v170(0x0)",0x170,0,"0,v170,v170",REVERT,transferOwnership,public,False,0,0,"0x170, 0x174"
    Begin block 0x174,0x174,0,0,0,transferOwnership,public,False,0,0,"0x170, 0x174"
"    prev=[0x168], succ=[0x187, 0x18b]",0x174,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
    =================================,0x174,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
    0x176: v176(0x4e2) = CONST ,0x174,v176,0,CONST,transferOwnership,public,False,0x4e2,0,"0x187, 0x18b"
    0x179: v179(0x4) = CONST ,0x174,v179,0,CONST,transferOwnership,public,False,0x4,0,"0x187, 0x18b"
    0x17c: v17c = CALLDATASIZE ,0x174,v17c,0,CALLDATASIZE,transferOwnership,public,False,0,0,"0x187, 0x18b"
"    0x17d: v17d = SUB v17c, v179(0x4)",0x174,v17d,"0,v17c,v179",SUB,transferOwnership,public,False,0,0,"0x187, 0x18b"
    0x17e: v17e(0x20) = CONST ,0x174,v17e,0,CONST,transferOwnership,public,False,0x20,0,"0x187, 0x18b"
"    0x181: v181 = LT v17d, v17e(0x20)",0x174,v181,"0,v17d,v17e",LT,transferOwnership,public,False,0,0,"0x187, 0x18b"
    0x182: v182 = ISZERO v181,0x174,v182,"0,v181",ISZERO,transferOwnership,public,False,0,0,"0x187, 0x18b"
    0x183: v183(0x18b) = CONST ,0x174,v183,0,CONST,transferOwnership,public,False,0x18b,0,"0x187, 0x18b"
"    0x186: JUMPI v183(0x18b), v182",0x174,0,"0,v183,v182",JUMPI,transferOwnership,public,False,0,0,"0x187, 0x18b"
    Begin block 0x187,0x187,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
"    prev=[0x174], succ=[]",0x187,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
    =================================,0x187,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
    0x187: v187(0x0) = CONST ,0x187,v187,0,CONST,transferOwnership,public,False,0x0,0,"0x187, 0x18b"
"    0x18a: REVERT v187(0x0), v187(0x0)",0x187,0,"0,v187,v187",REVERT,transferOwnership,public,False,0,0,"0x187, 0x18b"
    Begin block 0x18b,0x18b,0,0,0,transferOwnership,public,False,0,0,"0x187, 0x18b"
"    prev=[0x174], succ=[0x292]",0x18b,0,0,0,transferOwnership,public,False,0,0,0x292
    =================================,0x18b,0,0,0,transferOwnership,public,False,0,0,0x292
    0x18d: v18d = CALLDATALOAD v179(0x4),0x18b,v18d,"0,v179",CALLDATALOAD,transferOwnership,public,False,0,0,0x292
    0x18e: v18e(0x1) = CONST ,0x18b,v18e,0,CONST,transferOwnership,public,False,0x1,0,0x292
    0x190: v190(0x1) = CONST ,0x18b,v190,0,CONST,transferOwnership,public,False,0x1,0,0x292
    0x192: v192(0xa0) = CONST ,0x18b,v192,0,CONST,transferOwnership,public,False,0xa0,0,0x292
"    0x194: v194(0x10000000000000000000000000000000000000000) = SHL v192(0xa0), v190(0x1)",0x18b,v194,"0,v192,v190",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x292
"    0x195: v195(0xffffffffffffffffffffffffffffffffffffffff) = SUB v194(0x10000000000000000000000000000000000000000), v18e(0x1)",0x18b,v195,"0,v194,v18e",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x292
"    0x196: v196 = AND v195(0xffffffffffffffffffffffffffffffffffffffff), v18d",0x18b,v196,"0,v195,v18d",AND,transferOwnership,public,False,0,0,0x292
    0x197: v197(0x292) = CONST ,0x18b,v197,0,CONST,transferOwnership,public,False,0x292,0,0x292
    0x19a: JUMP v197(0x292),0x18b,0,"0,v197",JUMP,transferOwnership,public,False,0,0,0x292
    Begin block 0x292,0x292,0,0,0,transferOwnership,public,False,0,0,0x292
"    prev=[0x18b], succ=[0x1b9B0x292]",0x292,0,0,0,transferOwnership,public,False,0,0,0x1b9B0x292
    =================================,0x292,0,0,0,transferOwnership,public,False,0,0,0x1b9B0x292
    0x293: v293(0x29a) = CONST ,0x292,v293,0,CONST,transferOwnership,public,False,0x29a,0,0x1b9B0x292
    0x296: v296(0x1b9) = CONST ,0x292,v296,0,CONST,transferOwnership,public,False,0x1b9,0,0x1b9B0x292
    0x299: JUMP v296(0x1b9),0x292,0,"0,v296",JUMP,transferOwnership,public,False,0,0,0x1b9B0x292
    Begin block 0x1b9B0x292,0x1b9B0x292,0,0,0,transferOwnership,public,False,0,0,0x1b9B0x292
"    prev=[0x292], succ=[0x2e6B0x292]",0x1b9B0x292,0,0,0,transferOwnership,public,False,0,0,0x2e6B0x292
    =================================,0x1b9B0x292,0,0,0,transferOwnership,public,False,0,0,0x2e6B0x292
    0x1baS0x292: v1baV292(0x0) = CONST ,0x1b9B0x292,v1baV292,0,CONST,transferOwnership,public,False,0x0,0,0x2e6B0x292
    0x1bdS0x292: v1bdV292 = SLOAD v1baV292(0x0),0x1b9B0x292,v1bdV292,"0,v1baV292",SLOAD,transferOwnership,public,False,0,0,0x2e6B0x292
    0x1beS0x292: v1beV292(0x1) = CONST ,0x1b9B0x292,v1beV292,0,CONST,transferOwnership,public,False,0x1,0,0x2e6B0x292
    0x1c0S0x292: v1c0V292(0x1) = CONST ,0x1b9B0x292,v1c0V292,0,CONST,transferOwnership,public,False,0x1,0,0x2e6B0x292
    0x1c2S0x292: v1c2V292(0xa0) = CONST ,0x1b9B0x292,v1c2V292,0,CONST,transferOwnership,public,False,0xa0,0,0x2e6B0x292
"    0x1c4S0x292: v1c4V292(0x10000000000000000000000000000000000000000) = SHL v1c2V292(0xa0), v1c0V292(0x1)",0x1b9B0x292,v1c4V292,"0,v1c2V292,v1c0V292",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x2e6B0x292
"    0x1c5S0x292: v1c5V292(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c4V292(0x10000000000000000000000000000000000000000), v1beV292(0x1)",0x1b9B0x292,v1c5V292,"0,v1c4V292,v1beV292",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e6B0x292
"    0x1c6S0x292: v1c6V292 = AND v1c5V292(0xffffffffffffffffffffffffffffffffffffffff), v1bdV292",0x1b9B0x292,v1c6V292,"0,v1c5V292,v1bdV292",AND,transferOwnership,public,False,0,0,0x2e6B0x292
    0x1c7S0x292: v1c7V292(0x1ce) = CONST ,0x1b9B0x292,v1c7V292,0,CONST,transferOwnership,public,False,0x1ce,0,0x2e6B0x292
    0x1caS0x292: v1caV292(0x2e6) = CONST ,0x1b9B0x292,v1caV292,0,CONST,transferOwnership,public,False,0x2e6,0,0x2e6B0x292
    0x1cdS0x292: JUMP v1caV292(0x2e6),0x1b9B0x292,0,"0,v1caV292",JUMP,transferOwnership,public,False,0,0,0x2e6B0x292
    Begin block 0x2e6B0x292,0x2e6B0x292,0,0,0,transferOwnership,public,False,0,0,0x2e6B0x292
"    prev=[0x1b9B0x292], succ=[0x1ceB0x292]",0x2e6B0x292,0,0,0,transferOwnership,public,False,0,0,0x1ceB0x292
    =================================,0x2e6B0x292,0,0,0,transferOwnership,public,False,0,0,0x1ceB0x292
    0x2e7S0x292: v2e7V292 = CALLER ,0x2e6B0x292,v2e7V292,0,CALLER,transferOwnership,public,True,0,0,0x1ceB0x292
    0x2e9S0x292: JUMP v1c7V292(0x1ce),0x2e6B0x292,0,"0,v1c7V292",JUMP,transferOwnership,public,False,0,0,0x1ceB0x292
    Begin block 0x1ceB0x292,0x1ceB0x292,0,0,0,transferOwnership,public,False,0,0,0x1ceB0x292
"    prev=[0x2e6B0x292], succ=[0x29a]",0x1ceB0x292,0,0,0,transferOwnership,public,False,0,0,0x29a
    =================================,0x1ceB0x292,0,0,0,transferOwnership,public,False,0,0,0x29a
    0x1cfS0x292: v1cfV292(0x1) = CONST ,0x1ceB0x292,v1cfV292,0,CONST,transferOwnership,public,False,0x1,0,0x29a
    0x1d1S0x292: v1d1V292(0x1) = CONST ,0x1ceB0x292,v1d1V292,0,CONST,transferOwnership,public,False,0x1,0,0x29a
    0x1d3S0x292: v1d3V292(0xa0) = CONST ,0x1ceB0x292,v1d3V292,0,CONST,transferOwnership,public,False,0xa0,0,0x29a
"    0x1d5S0x292: v1d5V292(0x10000000000000000000000000000000000000000) = SHL v1d3V292(0xa0), v1d1V292(0x1)",0x1ceB0x292,v1d5V292,"0,v1d3V292,v1d1V292",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x29a
"    0x1d6S0x292: v1d6V292(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d5V292(0x10000000000000000000000000000000000000000), v1cfV292(0x1)",0x1ceB0x292,v1d6V292,"0,v1d5V292,v1cfV292",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x29a
"    0x1d7S0x292: v1d7V292 = AND v1d6V292(0xffffffffffffffffffffffffffffffffffffffff), v2e7V292",0x1ceB0x292,v1d7V292,"0,v1d6V292,v2e7V292",AND,transferOwnership,public,True,0,0,0x29a
"    0x1d8S0x292: v1d8V292 = EQ v1d7V292, v1c6V292",0x1ceB0x292,v1d8V292,"0,v1d7V292,v1c6V292",EQ,transferOwnership,public,False,0,0,0x29a
    0x1dcS0x292: JUMP v293(0x29a),0x1ceB0x292,0,"0,v293",JUMP,transferOwnership,public,False,0,0,0x29a
    Begin block 0x29a,0x29a,0,0,0,transferOwnership,public,False,0,0,0x29a
"    prev=[0x1ceB0x292], succ=[0x29f, 0x2da]",0x29a,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    =================================,0x29a,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    0x29b: v29b(0x2da) = CONST ,0x29a,v29b,0,CONST,transferOwnership,public,False,0x2da,0,"0x29f, 0x2da"
"    0x29e: JUMPI v29b(0x2da), v1d8V292",0x29a,0,"0,v29b,v1d8V292",JUMPI,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    Begin block 0x29f,0x29f,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
"    prev=[0x29a], succ=[]",0x29f,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    =================================,0x29f,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    0x29f: v29f(0x40) = CONST ,0x29f,v29f,0,CONST,transferOwnership,public,False,0x40,0,"0x29f, 0x2da"
    0x2a2: v2a2 = MLOAD v29f(0x40),0x29f,v2a2,"0,v29f",MLOAD,transferOwnership,public,False,0,transferOwnership&m0x40,"0x29f, 0x2da"
    0x2a3: v2a3(0x461bcd) = CONST ,0x29f,v2a3,0,CONST,transferOwnership,public,False,0x461bcd,0,"0x29f, 0x2da"
    0x2a7: v2a7(0xe5) = CONST ,0x29f,v2a7,0,CONST,transferOwnership,public,False,0xe5,0,"0x29f, 0x2da"
"    0x2a9: v2a9(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2a7(0xe5), v2a3(0x461bcd)",0x29f,v2a9,"0,v2a7,v2a3",SHL,transferOwnership,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x29f, 0x2da"
"    0x2ab: MSTORE v2a2, v2a9(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x29f,transferOwnership&m0x40,"0,v2a2,v2a9",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40,"0x29f, 0x2da"
    0x2ac: v2ac(0x20) = CONST ,0x29f,v2ac,0,CONST,transferOwnership,public,False,0x20,0,"0x29f, 0x2da"
    0x2ae: v2ae(0x4) = CONST ,0x29f,v2ae,0,CONST,transferOwnership,public,False,0x4,0,"0x29f, 0x2da"
"    0x2b1: v2b1 = ADD v2a2, v2ae(0x4)",0x29f,v2b1,"0,v2a2,v2ae",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x4,"0x29f, 0x2da"
"    0x2b2: MSTORE v2b1, v2ac(0x20)",0x29f,transferOwnership&m0x40+0x4,"0,v2b1,v2ac",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40+0x4,"0x29f, 0x2da"
    0x2b3: v2b3(0xc) = CONST ,0x29f,v2b3,0,CONST,transferOwnership,public,False,0xc,0,"0x29f, 0x2da"
    0x2b5: v2b5(0x24) = CONST ,0x29f,v2b5,0,CONST,transferOwnership,public,False,0x24,0,"0x29f, 0x2da"
"    0x2b8: v2b8 = ADD v2a2, v2b5(0x24)",0x29f,v2b8,"0,v2a2,v2b5",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x24,"0x29f, 0x2da"
"    0x2b9: MSTORE v2b8, v2b3(0xc)",0x29f,transferOwnership&m0x40+0x24,"0,v2b8,v2b3",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40+0x24,"0x29f, 0x2da"
    0x2ba: v2ba(0x1d5b985d5d1a1bdc9a5e9959) = CONST ,0x29f,v2ba,0,CONST,transferOwnership,public,False,0x1d5b985d5d1a1bdc9a5e9959,0,"0x29f, 0x2da"
    0x2c7: v2c7(0xa2) = CONST ,0x29f,v2c7,0,CONST,transferOwnership,public,False,0xa2,0,"0x29f, 0x2da"
"    0x2c9: v2c9(0x756e617574686f72697a65640000000000000000000000000000000000000000) = SHL v2c7(0xa2), v2ba(0x1d5b985d5d1a1bdc9a5e9959)",0x29f,v2c9,"0,v2c7,v2ba",SHL,transferOwnership,public,False,0x756e617574686f72697a65640000000000000000000000000000000000000000,0,"0x29f, 0x2da"
    0x2ca: v2ca(0x44) = CONST ,0x29f,v2ca,0,CONST,transferOwnership,public,False,0x44,0,"0x29f, 0x2da"
"    0x2cd: v2cd = ADD v2a2, v2ca(0x44)",0x29f,v2cd,"0,v2a2,v2ca",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x44,"0x29f, 0x2da"
"    0x2ce: MSTORE v2cd, v2c9(0x756e617574686f72697a65640000000000000000000000000000000000000000)",0x29f,transferOwnership&m0x40+0x44,"0,v2cd,v2c9",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40+0x44,"0x29f, 0x2da"
    0x2d0: v2d0 = MLOAD v29f(0x40),0x29f,v2d0,"0,v29f",MLOAD,transferOwnership,public,False,0,transferOwnership&m0x40,"0x29f, 0x2da"
"    0x2d4: v2d4(0x0) = SUB v2a2, v2d0",0x29f,v2d4,"0,v2a2,v2d0",SUB,transferOwnership,public,False,0x0,transferOwnership&m0x40-0x0,"0x29f, 0x2da"
    0x2d5: v2d5(0x64) = CONST ,0x29f,v2d5,0,CONST,transferOwnership,public,False,0x64,0,"0x29f, 0x2da"
"    0x2d7: v2d7(0x64) = ADD v2d5(0x64), v2d4(0x0)",0x29f,v2d7,"0,v2d5,v2d4",ADD,transferOwnership,public,False,0x64,transferOwnership&m0x40-0x0+0x64,"0x29f, 0x2da"
"    0x2d9: REVERT v2d0, v2d7(0x64)",0x29f,0,"0,v2d0,v2d7",REVERT,transferOwnership,public,False,0,0,"0x29f, 0x2da"
    Begin block 0x2da,0x2da,0,0,0,transferOwnership,public,False,0,0,"0x29f, 0x2da"
"    prev=[0x29a], succ=[0x326]",0x2da,0,0,0,transferOwnership,public,False,0,0,0x326
    =================================,0x2da,0,0,0,transferOwnership,public,False,0,0,0x326
    0x2db: v2db(0x2e3) = CONST ,0x2da,v2db,0,CONST,transferOwnership,public,False,0x2e3,0,0x326
    0x2df: v2df(0x326) = CONST ,0x2da,v2df,0,CONST,transferOwnership,public,False,0x326,0,0x326
    0x2e2: JUMP v2df(0x326),0x2da,0,"0,v2df",JUMP,transferOwnership,public,False,0,0,0x326
    Begin block 0x326,0x326,0,0,0,transferOwnership,public,False,0,0,0x326
"    prev=[0x2da], succ=[0x335, 0x36b]",0x326,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
    =================================,0x326,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
    0x327: v327(0x1) = CONST ,0x326,v327,0,CONST,transferOwnership,public,False,0x1,0,"0x335, 0x36b"
    0x329: v329(0x1) = CONST ,0x326,v329,0,CONST,transferOwnership,public,False,0x1,0,"0x335, 0x36b"
    0x32b: v32b(0xa0) = CONST ,0x326,v32b,0,CONST,transferOwnership,public,False,0xa0,0,"0x335, 0x36b"
"    0x32d: v32d(0x10000000000000000000000000000000000000000) = SHL v32b(0xa0), v329(0x1)",0x326,v32d,"0,v32b,v329",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,"0x335, 0x36b"
"    0x32e: v32e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v32d(0x10000000000000000000000000000000000000000), v327(0x1)",0x326,v32e,"0,v32d,v327",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0x335, 0x36b"
"    0x330: v330 = AND v196, v32e(0xffffffffffffffffffffffffffffffffffffffff)",0x326,v330,"0,v196,v32e",AND,transferOwnership,public,False,0,0,"0x335, 0x36b"
    0x331: v331(0x36b) = CONST ,0x326,v331,0,CONST,transferOwnership,public,False,0x36b,0,"0x335, 0x36b"
"    0x334: JUMPI v331(0x36b), v330",0x326,0,"0,v331,v330",JUMPI,transferOwnership,public,False,0,0,"0x335, 0x36b"
    Begin block 0x335,0x335,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
"    prev=[0x326], succ=[]",0x335,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
    =================================,0x335,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
    0x335: v335(0x40) = CONST ,0x335,v335,0,CONST,transferOwnership,public,False,0x40,0,"0x335, 0x36b"
    0x337: v337 = MLOAD v335(0x40),0x335,v337,"0,v335",MLOAD,transferOwnership,public,False,0,transferOwnership&m0x40,"0x335, 0x36b"
    0x338: v338(0x461bcd) = CONST ,0x335,v338,0,CONST,transferOwnership,public,False,0x461bcd,0,"0x335, 0x36b"
    0x33c: v33c(0xe5) = CONST ,0x335,v33c,0,CONST,transferOwnership,public,False,0xe5,0,"0x335, 0x36b"
"    0x33e: v33e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v33c(0xe5), v338(0x461bcd)",0x335,v33e,"0,v33c,v338",SHL,transferOwnership,public,False,0x8c379a000000000000000000000000000000000000000000000000000000000,0,"0x335, 0x36b"
"    0x340: MSTORE v337, v33e(0x8c379a000000000000000000000000000000000000000000000000000000000)",0x335,transferOwnership&m0x40,"0,v337,v33e",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40,"0x335, 0x36b"
    0x341: v341(0x4) = CONST ,0x335,v341,0,CONST,transferOwnership,public,False,0x4,0,"0x335, 0x36b"
"    0x343: v343 = ADD v341(0x4), v337",0x335,v343,"0,v341,v337",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x4,"0x335, 0x36b"
    0x346: v346(0x20) = CONST ,0x335,v346,0,CONST,transferOwnership,public,False,0x20,0,"0x335, 0x36b"
"    0x348: v348 = ADD v346(0x20), v343",0x335,v348,"0,v346,v343",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x4+0x20,"0x335, 0x36b"
"    0x34b: v34b(0x20) = SUB v348, v343",0x335,v34b,"0,v348,v343",SUB,transferOwnership,public,False,0x20,transferOwnership&m0x40+0x4+0x20-0x20,"0x335, 0x36b"
"    0x34d: MSTORE v343, v34b(0x20)",0x335,transferOwnership&m0x40+0x4,"0,v343,v34b",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40+0x4,"0x335, 0x36b"
    0x34e: v34e(0x26) = CONST ,0x335,v34e,0,CONST,transferOwnership,public,False,0x26,0,"0x335, 0x36b"
"    0x351: MSTORE v348, v34e(0x26)",0x335,transferOwnership&m0x40+0x4+0x20,"0,v348,v34e",MSTORE,transferOwnership,public,False,0,transferOwnership&m0x40+0x4+0x20,"0x335, 0x36b"
    0x352: v352(0x20) = CONST ,0x335,v352,0,CONST,transferOwnership,public,False,0x20,0,"0x335, 0x36b"
"    0x354: v354 = ADD v352(0x20), v348",0x335,v354,"0,v352,v348",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x4+0x20+0x20,"0x335, 0x36b"
    0x356: v356(0x3c7) = CONST ,0x335,v356,0,CONST,transferOwnership,public,False,0x3c7,0,"0x335, 0x36b"
    0x359: v359(0x26) = CONST ,0x335,v359,0,CONST,transferOwnership,public,False,0x26,0,"0x335, 0x36b"
"    0x35c: CODECOPY v354, v356(0x3c7), v359(0x26)",0x335,0,"0,v354,v356,v359",CODECOPY,transferOwnership,public,False,0,0,"0x335, 0x36b"
    0x35d: v35d(0x40) = CONST ,0x335,v35d,0,CONST,transferOwnership,public,False,0x40,0,"0x335, 0x36b"
"    0x35f: v35f = ADD v35d(0x40), v354",0x335,v35f,"0,v35d,v354",ADD,transferOwnership,public,False,0,transferOwnership&m0x40+0x4+0x20+0x20+0x40,"0x335, 0x36b"
    0x363: v363(0x40) = CONST ,0x335,v363,0,CONST,transferOwnership,public,False,0x40,0,"0x335, 0x36b"
    0x365: v365 = MLOAD v363(0x40),0x335,v365,"0,v363",MLOAD,transferOwnership,public,False,0,transferOwnership&m0x40,"0x335, 0x36b"
"    0x368: v368(0x84) = SUB v35f, v365",0x335,v368,"0,v35f,v365",SUB,transferOwnership,public,False,0x84,transferOwnership&m0x40+0x4+0x20+0x20+0x40-0x84,"0x335, 0x36b"
"    0x36a: REVERT v365, v368(0x84)",0x335,0,"0,v365,v368",REVERT,transferOwnership,public,False,0,0,"0x335, 0x36b"
    Begin block 0x36b,0x36b,0,0,0,transferOwnership,public,False,0,0,"0x335, 0x36b"
"    prev=[0x326], succ=[0x2e3]",0x36b,0,0,0,transferOwnership,public,False,0,0,0x2e3
    =================================,0x36b,0,0,0,transferOwnership,public,False,0,0,0x2e3
    0x36c: v36c(0x0) = CONST ,0x36b,v36c,0,CONST,transferOwnership,public,False,0x0,0,0x2e3
    0x36f: v36f = SLOAD v36c(0x0),0x36b,v36f,"0,v36c",SLOAD,transferOwnership,public,False,0,0,0x2e3
    0x370: v370(0x40) = CONST ,0x36b,v370,0,CONST,transferOwnership,public,False,0x40,0,0x2e3
    0x372: v372 = MLOAD v370(0x40),0x36b,v372,"0,v370",MLOAD,transferOwnership,public,False,0,transferOwnership&m0x40,0x2e3
    0x373: v373(0x1) = CONST ,0x36b,v373,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x375: v375(0x1) = CONST ,0x36b,v375,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x377: v377(0xa0) = CONST ,0x36b,v377,0,CONST,transferOwnership,public,False,0xa0,0,0x2e3
"    0x379: v379(0x10000000000000000000000000000000000000000) = SHL v377(0xa0), v375(0x1)",0x36b,v379,"0,v377,v375",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x2e3
"    0x37a: v37a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v379(0x10000000000000000000000000000000000000000), v373(0x1)",0x36b,v37a,"0,v379,v373",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e3
"    0x37d: v37d = AND v196, v37a(0xffffffffffffffffffffffffffffffffffffffff)",0x36b,v37d,"0,v196,v37a",AND,transferOwnership,public,False,0,0,0x2e3
"    0x380: v380 = AND v36f, v37a(0xffffffffffffffffffffffffffffffffffffffff)",0x36b,v380,"0,v36f,v37a",AND,transferOwnership,public,False,0,0,0x2e3
    0x382: v382(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST ,0x36b,v382,0,CONST,transferOwnership,public,False,0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0,0,0x2e3
"    0x3a4: LOG3 v372, v36c(0x0), v382(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0), v380, v37d",0x36b,0,"0,v372,v36c,v382,v380,v37d",LOG3,transferOwnership,public,False,0,0,0x2e3
    0x3a5: v3a5(0x0) = CONST ,0x36b,v3a5,0,CONST,transferOwnership,public,False,0x0,0,0x2e3
    0x3a8: v3a8 = SLOAD v3a5(0x0),0x36b,v3a8,"0,v3a5",SLOAD,transferOwnership,public,False,0,0,0x2e3
    0x3a9: v3a9(0x1) = CONST ,0x36b,v3a9,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x3ab: v3ab(0x1) = CONST ,0x36b,v3ab,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x3ad: v3ad(0xa0) = CONST ,0x36b,v3ad,0,CONST,transferOwnership,public,False,0xa0,0,0x2e3
"    0x3af: v3af(0x10000000000000000000000000000000000000000) = SHL v3ad(0xa0), v3ab(0x1)",0x36b,v3af,"0,v3ad,v3ab",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x2e3
"    0x3b0: v3b0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3af(0x10000000000000000000000000000000000000000), v3a9(0x1)",0x36b,v3b0,"0,v3af,v3a9",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e3
    0x3b1: v3b1(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v3b0(0xffffffffffffffffffffffffffffffffffffffff),0x36b,v3b1,"0,v3b0",NOT,transferOwnership,public,False,0xffffffffffffffffffffffff0000000000000000000000000000000000000000,0,0x2e3
"    0x3b2: v3b2 = AND v3b1(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v3a8",0x36b,v3b2,"0,v3b1,v3a8",AND,transferOwnership,public,False,0,0,0x2e3
    0x3b3: v3b3(0x1) = CONST ,0x36b,v3b3,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x3b5: v3b5(0x1) = CONST ,0x36b,v3b5,0,CONST,transferOwnership,public,False,0x1,0,0x2e3
    0x3b7: v3b7(0xa0) = CONST ,0x36b,v3b7,0,CONST,transferOwnership,public,False,0xa0,0,0x2e3
"    0x3b9: v3b9(0x10000000000000000000000000000000000000000) = SHL v3b7(0xa0), v3b5(0x1)",0x36b,v3b9,"0,v3b7,v3b5",SHL,transferOwnership,public,False,0x10000000000000000000000000000000000000000,0,0x2e3
"    0x3ba: v3ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b9(0x10000000000000000000000000000000000000000), v3b3(0x1)",0x36b,v3ba,"0,v3b9,v3b3",SUB,transferOwnership,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x2e3
"    0x3be: v3be = AND v3ba(0xffffffffffffffffffffffffffffffffffffffff), v196",0x36b,v3be,"0,v3ba,v196",AND,transferOwnership,public,False,0,0,0x2e3
"    0x3c2: v3c2 = OR v3be, v3b2",0x36b,v3c2,"0,v3be,v3b2",OR,transferOwnership,public,False,0,0,0x2e3
"    0x3c4: SSTORE v3a5(0x0), v3c2",0x36b,0,"0,v3a5,v3c2",SSTORE,transferOwnership,public,False,0,0,0x2e3
    0x3c5: JUMP v2db(0x2e3),0x36b,0,"0,v2db",JUMP,transferOwnership,public,False,0,0,0x2e3
    Begin block 0x2e3,0x2e3,0,0,0,transferOwnership,public,False,0,0,0x2e3
"    prev=[0x36b], succ=[0x4e2]",0x2e3,0,0,0,transferOwnership,public,False,0,0,0x4e2
    =================================,0x2e3,0,0,0,transferOwnership,public,False,0,0,0x4e2
    0x2e5: JUMP v176(0x4e2),0x2e3,0,"0,v176",JUMP,transferOwnership,public,False,0,0,0x4e2
    Begin block 0x4e2,0x4e2,0,0,0,transferOwnership,public,False,0,0,0x4e2
"    prev=[0x2e3], succ=[]",0x4e2,0,0,0,transferOwnership,public,False,0,0,0x4e2
    =================================,0x4e2,0,0,0,transferOwnership,public,False,0,0,0x4e2
    0x4e3: STOP ,0x4e2,0,0,STOP,transferOwnership,public,False,0,0,0x4e2
},0x4e2,0,0,0,transferOwnership,public,False,0,0,0x4e2
function fallback()() public {,0x4a,0,0,public,fallback,public,False,0,0,0x4e2
    Begin block 0x4a,0x4a,0,0,0,fallback,public,False,0,0,0x4e2
"    prev=[], succ=[0x54, 0x58]",0x4a,0,0,0,fallback,public,False,0,0,"0x54, 0x58"
    =================================,0x4a,0,0,0,fallback,public,False,0,0,"0x54, 0x58"
    0x4b: v4b(0x8fc) = CONST ,0x4a,v4b,0,CONST,fallback,public,False,0x8fc,0,"0x54, 0x58"
    0x4e: v4e = GAS ,0x4a,v4e,0,GAS,fallback,public,False,0,0,"0x54, 0x58"
"    0x4f: v4f = GT v4e, v4b(0x8fc)",0x4a,v4f,"0,v4e,v4b",GT,fallback,public,False,0,0,"0x54, 0x58"
    0x50: v50(0x58) = CONST ,0x4a,v50,0,CONST,fallback,public,False,0x58,0,"0x54, 0x58"
"    0x53: JUMPI v50(0x58), v4f",0x4a,0,"0,v50,v4f",JUMPI,fallback,public,False,0,0,"0x54, 0x58"
    Begin block 0x54,0x54,0,0,0,fallback,public,False,0,0,"0x54, 0x58"
"    prev=[0x4a], succ=[0x42a]",0x54,0,0,0,fallback,public,False,0,0,0x42a
    =================================,0x54,0,0,0,fallback,public,False,0,0,0x42a
    0x54: v54(0x42a) = CONST ,0x54,v54,0,CONST,fallback,public,False,0x42a,0,0x42a
    0x57: JUMP v54(0x42a),0x54,0,"0,v54",JUMP,fallback,public,False,0,0,0x42a
    Begin block 0x42a,0x42a,0,0,0,fallback,public,False,0,0,0x42a
"    prev=[0x54], succ=[]",0x42a,0,0,0,fallback,public,False,0,0,0x42a
    =================================,0x42a,0,0,0,fallback,public,False,0,0,0x42a
    0x42b: STOP ,0x42a,0,0,STOP,fallback,public,False,0,0,0x42a
    Begin block 0x58,0x58,0,0,0,fallback,public,False,0,0,0x42a
"    prev=[0x4a], succ=[0xc0, 0xbd]",0x58,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
    =================================,0x58,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
    0x59: v59(0x1) = CONST ,0x58,v59,0,CONST,fallback,public,False,0x1,0,"0xc0, 0xbd"
    0x5b: v5b = SLOAD v59(0x1),0x58,v5b,"0,v59",SLOAD,fallback,public,False,0,0,"0xc0, 0xbd"
    0x5c: v5c(0x40) = CONST ,0x58,v5c,0,CONST,fallback,public,False,0x40,0,"0xc0, 0xbd"
    0x5f: v5f = MLOAD v5c(0x40),0x58,v5f,"0,v5c",MLOAD,fallback,public,False,0,fallback&m0x40,"0xc0, 0xbd"
    0x60: v60(0x20) = CONST ,0x58,v60,0,CONST,fallback,public,False,0x20,0,"0xc0, 0xbd"
    0x62: v62 = CALLDATASIZE ,0x58,v62,0,CALLDATASIZE,fallback,public,False,0,0,"0xc0, 0xbd"
    0x63: v63(0x1f) = CONST ,0x58,v63,0,CONST,fallback,public,False,0x1f,0,"0xc0, 0xbd"
"    0x66: v66 = ADD v62, v63(0x1f)",0x58,v66,"0,v62,v63",ADD,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x69: v69 = DIV v66, v60(0x20)",0x58,v69,"0,v66,v60",DIV,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x6b: v6b = MUL v60(0x20), v69",0x58,v6b,"0,v60,v69",MUL,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x6d: v6d = ADD v5f, v6b",0x58,v6d,"0,v5f,v6b",ADD,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x6f: v6f = ADD v60(0x20), v6d",0x58,v6f,"0,v60,v6d",ADD,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x72: MSTORE v5c(0x40), v6f",0x58,0,"0,v5c,v6f",MSTORE,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x75: MSTORE v5f, v62",0x58,fallback&m0x40,"0,v5f,v62",MSTORE,fallback,public,False,0,fallback&m0x40,"0xc0, 0xbd"
    0x76: v76(0x1) = CONST ,0x58,v76,0,CONST,fallback,public,False,0x1,0,"0xc0, 0xbd"
    0x78: v78(0x1) = CONST ,0x58,v78,0,CONST,fallback,public,False,0x1,0,"0xc0, 0xbd"
    0x7a: v7a(0xa0) = CONST ,0x58,v7a,0,CONST,fallback,public,False,0xa0,0,"0xc0, 0xbd"
"    0x7c: v7c(0x10000000000000000000000000000000000000000) = SHL v7a(0xa0), v78(0x1)",0x58,v7c,"0,v7a,v78",SHL,fallback,public,False,0x10000000000000000000000000000000000000000,0,"0xc0, 0xbd"
"    0x7d: v7d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7c(0x10000000000000000000000000000000000000000), v76(0x1)",0x58,v7d,"0,v7c,v76",SUB,fallback,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,"0xc0, 0xbd"
"    0x80: v80 = AND v5b, v7d(0xffffffffffffffffffffffffffffffffffffffff)",0x58,v80,"0,v5b,v7d",AND,fallback,public,False,0,0,"0xc0, 0xbd"
    0x82: v82(0x60) = CONST ,0x58,v82,0,CONST,fallback,public,False,0x60,0,"0xc0, 0xbd"
    0x85: v85(0x0) = CONST ,0x58,v85,0,CONST,fallback,public,False,0x0,0,"0xc0, 0xbd"
"    0x8b: v8b = ADD v5f, v60(0x20)",0x58,v8b,"0,v5f,v60",ADD,fallback,public,False,0,fallback&m0x40+0x20,"0xc0, 0xbd"
"    0x91: CALLDATACOPY v8b, v85(0x0), v62",0x58,0,"0,v8b,v85,v62",CALLDATACOPY,fallback,public,False,0,0,"0xc0, 0xbd"
    0x92: v92(0x0) = CONST ,0x58,v92,0,CONST,fallback,public,False,0x0,0,"0xc0, 0xbd"
"    0x95: v95 = ADD v8b, v62",0x58,v95,"0,v8b,v62",ADD,fallback,public,False,0,0,"0xc0, 0xbd"
"    0x98: MSTORE v95, v92(0x0)",0x58,0,"0,v95,v92",MSTORE,fallback,public,False,0,0,"0xc0, 0xbd"
    0x9b: v9b = MLOAD v5f,0x58,v9b,"0,v5f",MLOAD,fallback,public,False,0,0,"0xc0, 0xbd"
    0xa6: va6(0x20) = CONST ,0x58,va6,0,CONST,fallback,public,False,0x20,0,"0xc0, 0xbd"
"    0xa9: va9 = ADD v5f, va6(0x20)",0x58,va9,"0,v5f,va6",ADD,fallback,public,False,0,fallback&m0x40+0x20,"0xc0, 0xbd"
    0xab: vab = GAS ,0x58,vab,0,GAS,fallback,public,False,0,0,"0xc0, 0xbd"
"    0xac: vac = DELEGATECALL vab, v80, va9, v9b, v92(0x0), v92(0x0)",0x58,vac,"0,vab,v80,va9,v9b,v92,v92",DELEGATECALL,fallback,public,False,0,0,"0xc0, 0xbd"
    0xad: vad = RETURNDATASIZE ,0x58,vad,0,RETURNDATASIZE,fallback,public,False,0,0,"0xc0, 0xbd"
    0xae: vae(0x40) = CONST ,0x58,vae,0,CONST,fallback,public,False,0x40,0,"0xc0, 0xbd"
    0xb0: vb0 = MLOAD vae(0x40),0x58,vb0,"0,vae",MLOAD,fallback,public,False,0,fallback&m0x40,"0xc0, 0xbd"
    0xb2: vb2(0x0) = CONST ,0x58,vb2,0,CONST,fallback,public,False,0x0,0,"0xc0, 0xbd"
"    0xb5: RETURNDATACOPY vb0, vb2(0x0), vad",0x58,0,"0,vb0,vb2,vad",RETURNDATACOPY,fallback,public,False,0,0,"0xc0, 0xbd"
    0xb8: vb8 = ISZERO vac,0x58,vb8,"0,vac",ISZERO,fallback,public,False,0,0,"0xc0, 0xbd"
    0xb9: vb9(0xc0) = CONST ,0x58,vb9,0,CONST,fallback,public,False,0xc0,0,"0xc0, 0xbd"
"    0xbc: JUMPI vb9(0xc0), vb8",0x58,0,"0,vb9,vb8",JUMPI,fallback,public,False,0,0,"0xc0, 0xbd"
    Begin block 0xc0,0xc0,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
"    prev=[0x58], succ=[]",0xc0,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
    =================================,0xc0,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
"    0xc3: REVERT vb0, vad",0xc0,0,"0,vb0,vad",REVERT,fallback,public,False,0,0,"0xc0, 0xbd"
    Begin block 0xbd,0xbd,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
"    prev=[0x58], succ=[]",0xbd,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
    =================================,0xbd,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
"    0xbf: RETURN vb0, vad",0xbd,0,"0,vb0,vad",RETURN,fallback,public,False,0,0,"0xc0, 0xbd"
},0xbd,0,0,0,fallback,public,False,0,0,"0xc0, 0xbd"
function implementation()() public {,0xc6,0,0,public,implementation,public,False,0,0,"0xc0, 0xbd"
    Begin block 0xc6,0xc6,0,0,0,implementation,public,False,0,0,"0xc0, 0xbd"
"    prev=[], succ=[0xce, 0xd2]",0xc6,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
    =================================,0xc6,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
    0xc7: vc7 = CALLVALUE ,0xc6,vc7,0,CALLVALUE,implementation,public,False,0,0,"0xce, 0xd2"
    0xc9: vc9 = ISZERO vc7,0xc6,vc9,"0,vc7",ISZERO,implementation,public,False,0,0,"0xce, 0xd2"
    0xca: vca(0xd2) = CONST ,0xc6,vca,0,CONST,implementation,public,False,0xd2,0,"0xce, 0xd2"
"    0xcd: JUMPI vca(0xd2), vc9",0xc6,0,"0,vca,vc9",JUMPI,implementation,public,False,0,0,"0xce, 0xd2"
    Begin block 0xce,0xce,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
"    prev=[0xc6], succ=[]",0xce,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
    =================================,0xce,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
    0xce: vce(0x0) = CONST ,0xce,vce,0,CONST,implementation,public,False,0x0,0,"0xce, 0xd2"
"    0xd1: REVERT vce(0x0), vce(0x0)",0xce,0,"0,vce,vce",REVERT,implementation,public,False,0,0,"0xce, 0xd2"
    Begin block 0xd2,0xd2,0,0,0,implementation,public,False,0,0,"0xce, 0xd2"
"    prev=[0xc6], succ=[0x19b]",0xd2,0,0,0,implementation,public,False,0,0,0x19b
    =================================,0xd2,0,0,0,implementation,public,False,0,0,0x19b
    0xd4: vd4(0x44b) = CONST ,0xd2,vd4,0,CONST,implementation,public,False,0x44b,0,0x19b
    0xd7: vd7(0x19b) = CONST ,0xd2,vd7,0,CONST,implementation,public,False,0x19b,0,0x19b
    0xda: JUMP vd7(0x19b),0xd2,0,"0,vd7",JUMP,implementation,public,False,0,0,0x19b
    Begin block 0x19b,0x19b,0,0,0,implementation,public,False,0,0,0x19b
"    prev=[0xd2], succ=[0x44b]",0x19b,0,0,0,implementation,public,False,0,0,0x44b
    =================================,0x19b,0,0,0,implementation,public,False,0,0,0x44b
    0x19c: v19c(0x1) = CONST ,0x19b,v19c,0,CONST,implementation,public,False,0x1,0,0x44b
    0x19e: v19e = SLOAD v19c(0x1),0x19b,v19e,"0,v19c",SLOAD,implementation,public,False,0,0,0x44b
    0x19f: v19f(0x1) = CONST ,0x19b,v19f,0,CONST,implementation,public,False,0x1,0,0x44b
    0x1a1: v1a1(0x1) = CONST ,0x19b,v1a1,0,CONST,implementation,public,False,0x1,0,0x44b
    0x1a3: v1a3(0xa0) = CONST ,0x19b,v1a3,0,CONST,implementation,public,False,0xa0,0,0x44b
"    0x1a5: v1a5(0x10000000000000000000000000000000000000000) = SHL v1a3(0xa0), v1a1(0x1)",0x19b,v1a5,"0,v1a3,v1a1",SHL,implementation,public,False,0x10000000000000000000000000000000000000000,0,0x44b
"    0x1a6: v1a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1a5(0x10000000000000000000000000000000000000000), v19f(0x1)",0x19b,v1a6,"0,v1a5,v19f",SUB,implementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x44b
"    0x1a7: v1a7 = AND v1a6(0xffffffffffffffffffffffffffffffffffffffff), v19e",0x19b,v1a7,"0,v1a6,v19e",AND,implementation,public,False,0,0,0x44b
    0x1a9: JUMP vd4(0x44b),0x19b,0,"0,vd4",JUMP,implementation,public,False,0,0,0x44b
    Begin block 0x44b,0x44b,0,0,0,implementation,public,False,0,0,0x44b
"    prev=[0x19b], succ=[]",0x44b,0,0,0,implementation,public,False,0,0,0x44b
    =================================,0x44b,0,0,0,implementation,public,False,0,0,0x44b
    0x44c: v44c(0x40) = CONST ,0x44b,v44c,0,CONST,implementation,public,False,0x40,0,0x44b
    0x44f: v44f = MLOAD v44c(0x40),0x44b,v44f,"0,v44c",MLOAD,implementation,public,False,0,implementation&m0x40,0x44b
    0x450: v450(0x1) = CONST ,0x44b,v450,0,CONST,implementation,public,False,0x1,0,0x44b
    0x452: v452(0x1) = CONST ,0x44b,v452,0,CONST,implementation,public,False,0x1,0,0x44b
    0x454: v454(0xa0) = CONST ,0x44b,v454,0,CONST,implementation,public,False,0xa0,0,0x44b
"    0x456: v456(0x10000000000000000000000000000000000000000) = SHL v454(0xa0), v452(0x1)",0x44b,v456,"0,v454,v452",SHL,implementation,public,False,0x10000000000000000000000000000000000000000,0,0x44b
"    0x457: v457(0xffffffffffffffffffffffffffffffffffffffff) = SUB v456(0x10000000000000000000000000000000000000000), v450(0x1)",0x44b,v457,"0,v456,v450",SUB,implementation,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x44b
"    0x45a: v45a = AND v1a7, v457(0xffffffffffffffffffffffffffffffffffffffff)",0x44b,v45a,"0,v1a7,v457",AND,implementation,public,False,0,0,0x44b
"    0x45c: MSTORE v44f, v45a",0x44b,implementation&m0x40,"0,v44f,v45a",MSTORE,implementation,public,False,0,implementation&m0x40,0x44b
    0x45d: v45d = MLOAD v44c(0x40),0x44b,v45d,"0,v44c",MLOAD,implementation,public,False,0,implementation&m0x40,0x44b
"    0x461: v461(0x0) = SUB v44f, v45d",0x44b,v461,"0,v44f,v45d",SUB,implementation,public,False,0x0,implementation&m0x40-0x0,0x44b
    0x462: v462(0x20) = CONST ,0x44b,v462,0,CONST,implementation,public,False,0x20,0,0x44b
"    0x464: v464(0x20) = ADD v462(0x20), v461(0x0)",0x44b,v464,"0,v462,v461",ADD,implementation,public,False,0x20,implementation&m0x40-0x0+0x20,0x44b
"    0x466: RETURN v45d, v464(0x20)",0x44b,0,"0,v45d,v464",RETURN,implementation,public,False,0,0,0x44b
},0x44b,0,0,0,implementation,public,False,0,0,0x44b
function owner()() public {,0xf7,0,0,public,owner,public,False,0,0,0x44b
    Begin block 0xf7,0xf7,0,0,0,owner,public,False,0,0,0x44b
"    prev=[], succ=[0xff, 0x103]",0xf7,0,0,0,owner,public,False,0,0,"0xff, 0x103"
    =================================,0xf7,0,0,0,owner,public,False,0,0,"0xff, 0x103"
    0xf8: vf8 = CALLVALUE ,0xf7,vf8,0,CALLVALUE,owner,public,False,0,0,"0xff, 0x103"
    0xfa: vfa = ISZERO vf8,0xf7,vfa,"0,vf8",ISZERO,owner,public,False,0,0,"0xff, 0x103"
    0xfb: vfb(0x103) = CONST ,0xf7,vfb,0,CONST,owner,public,False,0x103,0,"0xff, 0x103"
"    0xfe: JUMPI vfb(0x103), vfa",0xf7,0,"0,vfb,vfa",JUMPI,owner,public,False,0,0,"0xff, 0x103"
    Begin block 0xff,0xff,0,0,0,owner,public,False,0,0,"0xff, 0x103"
"    prev=[0xf7], succ=[]",0xff,0,0,0,owner,public,False,0,0,"0xff, 0x103"
    =================================,0xff,0,0,0,owner,public,False,0,0,"0xff, 0x103"
    0xff: vff(0x0) = CONST ,0xff,vff,0,CONST,owner,public,False,0x0,0,"0xff, 0x103"
"    0x102: REVERT vff(0x0), vff(0x0)",0xff,0,"0,vff,vff",REVERT,owner,public,False,0,0,"0xff, 0x103"
    Begin block 0x103,0x103,0,0,0,owner,public,False,0,0,"0xff, 0x103"
"    prev=[0xf7], succ=[0x1aa]",0x103,0,0,0,owner,public,False,0,0,0x1aa
    =================================,0x103,0,0,0,owner,public,False,0,0,0x1aa
    0x105: v105(0x486) = CONST ,0x103,v105,0,CONST,owner,public,False,0x486,0,0x1aa
    0x108: v108(0x1aa) = CONST ,0x103,v108,0,CONST,owner,public,False,0x1aa,0,0x1aa
    0x10b: JUMP v108(0x1aa),0x103,0,"0,v108",JUMP,owner,public,False,0,0,0x1aa
    Begin block 0x1aa,0x1aa,0,0,0,owner,public,False,0,0,0x1aa
"    prev=[0x103], succ=[0x486]",0x1aa,0,0,0,owner,public,False,0,0,0x486
    =================================,0x1aa,0,0,0,owner,public,False,0,0,0x486
    0x1ab: v1ab(0x0) = CONST ,0x1aa,v1ab,0,CONST,owner,public,False,0x0,0,0x486
    0x1ad: v1ad = SLOAD v1ab(0x0),0x1aa,v1ad,"0,v1ab",SLOAD,owner,public,False,0,0,0x486
    0x1ae: v1ae(0x1) = CONST ,0x1aa,v1ae,0,CONST,owner,public,False,0x1,0,0x486
    0x1b0: v1b0(0x1) = CONST ,0x1aa,v1b0,0,CONST,owner,public,False,0x1,0,0x486
    0x1b2: v1b2(0xa0) = CONST ,0x1aa,v1b2,0,CONST,owner,public,False,0xa0,0,0x486
"    0x1b4: v1b4(0x10000000000000000000000000000000000000000) = SHL v1b2(0xa0), v1b0(0x1)",0x1aa,v1b4,"0,v1b2,v1b0",SHL,owner,public,False,0x10000000000000000000000000000000000000000,0,0x486
"    0x1b5: v1b5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b4(0x10000000000000000000000000000000000000000), v1ae(0x1)",0x1aa,v1b5,"0,v1b4,v1ae",SUB,owner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x486
"    0x1b6: v1b6 = AND v1b5(0xffffffffffffffffffffffffffffffffffffffff), v1ad",0x1aa,v1b6,"0,v1b5,v1ad",AND,owner,public,False,0,0,0x486
    0x1b8: JUMP v105(0x486),0x1aa,0,"0,v105",JUMP,owner,public,False,0,0,0x486
    Begin block 0x486,0x486,0,0,0,owner,public,False,0,0,0x486
"    prev=[0x1aa], succ=[]",0x486,0,0,0,owner,public,False,0,0,0x486
    =================================,0x486,0,0,0,owner,public,False,0,0,0x486
    0x487: v487(0x40) = CONST ,0x486,v487,0,CONST,owner,public,False,0x40,0,0x486
    0x48a: v48a = MLOAD v487(0x40),0x486,v48a,"0,v487",MLOAD,owner,public,False,0,owner&m0x40,0x486
    0x48b: v48b(0x1) = CONST ,0x486,v48b,0,CONST,owner,public,False,0x1,0,0x486
    0x48d: v48d(0x1) = CONST ,0x486,v48d,0,CONST,owner,public,False,0x1,0,0x486
    0x48f: v48f(0xa0) = CONST ,0x486,v48f,0,CONST,owner,public,False,0xa0,0,0x486
"    0x491: v491(0x10000000000000000000000000000000000000000) = SHL v48f(0xa0), v48d(0x1)",0x486,v491,"0,v48f,v48d",SHL,owner,public,False,0x10000000000000000000000000000000000000000,0,0x486
"    0x492: v492(0xffffffffffffffffffffffffffffffffffffffff) = SUB v491(0x10000000000000000000000000000000000000000), v48b(0x1)",0x486,v492,"0,v491,v48b",SUB,owner,public,False,0xffffffffffffffffffffffffffffffffffffffff,0,0x486
"    0x495: v495 = AND v1b6, v492(0xffffffffffffffffffffffffffffffffffffffff)",0x486,v495,"0,v1b6,v492",AND,owner,public,False,0,0,0x486
"    0x497: MSTORE v48a, v495",0x486,owner&m0x40,"0,v48a,v495",MSTORE,owner,public,False,0,owner&m0x40,0x486
    0x498: v498 = MLOAD v487(0x40),0x486,v498,"0,v487",MLOAD,owner,public,False,0,owner&m0x40,0x486
"    0x49c: v49c(0x0) = SUB v48a, v498",0x486,v49c,"0,v48a,v498",SUB,owner,public,False,0x0,owner&m0x40-0x0,0x486
    0x49d: v49d(0x20) = CONST ,0x486,v49d,0,CONST,owner,public,False,0x20,0,0x486
"    0x49f: v49f(0x20) = ADD v49d(0x20), v49c(0x0)",0x486,v49f,"0,v49d,v49c",ADD,owner,public,False,0x20,owner&m0x40-0x0+0x20,0x486
"    0x4a1: RETURN v498, v49f(0x20)",0x486,0,"0,v498,v49f",RETURN,owner,public,False,0,0,0x486
},0x486,0,0,0,owner,public,False,0,0,0x486
