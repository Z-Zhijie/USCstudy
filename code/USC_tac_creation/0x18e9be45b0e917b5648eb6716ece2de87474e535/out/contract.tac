function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xc, 0x10]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5 = CALLVALUE 
    0x7: v7 = ISZERO v5
    0x8: v8(0x10) = CONST 
    0xb: JUMPI v8(0x10), v7

    Begin block 0xc
    prev=[0x0], succ=[]
    =================================
    0xc: vc(0x0) = CONST 
    0xf: REVERT vc(0x0), vc(0x0)

    Begin block 0x10
    prev=[0x0], succ=[0x9dB0x10]
    =================================
    0x12: v12(0x54) = CONST 
    0x15: v15(0x40) = CONST 
    0x17: v17 = MLOAD v15(0x40)
    0x18: v18(0x20) = CONST 
    0x1a: v1a = ADD v18(0x20), v17
    0x1d: v1d(0x13d5d3915497d4d313d5) = CONST 
    0x28: v28(0xb2) = CONST 
    0x2a: v2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = SHL v28(0xb2), v1d(0x13d5d3915497d4d313d5)
    0x2c: MSTORE v1a, v2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0x2e: v2e(0xa) = CONST 
    0x30: v30 = ADD v2e(0xa), v1a
    0x33: v33(0x40) = CONST 
    0x35: v35 = MLOAD v33(0x40)
    0x36: v36(0x20) = CONST 
    0x3a: v3a(0x2a) = SUB v30, v35
    0x3b: v3b(0xa) = SUB v3a(0x2a), v36(0x20)
    0x3d: MSTORE v35, v3b(0xa)
    0x3f: v3f(0x40) = CONST 
    0x41: MSTORE v3f(0x40), v30
    0x43: v43(0xa) = MLOAD v35
    0x45: v45(0x20) = CONST 
    0x47: v47 = ADD v45(0x20), v35
    0x48: v48 = SHA3 v47, v43(0xa)
    0x49: v49 = CALLER 
    0x4a: v4a(0x9d) = CONST 
    0x4d: v4d(0x20) = CONST 
    0x4f: v4f(0x9d00000000) = SHL v4d(0x20), v4a(0x9d)
    0x50: v50(0x20) = CONST 
    0x52: v52(0x9d) = SHR v50(0x20), v4f(0x9d00000000)
    0x53: JUMP v52(0x9d), v49, v48, v12(0x54)

    Begin block 0x9dB0x10
    prev=[0x10], succ=[0xb3B0x10]
    =================================
    0x9eS0x10: v9eV10(0xaf) = CONST 
    0xa2S0x10: va2V10(0xaa) = CONST 
    0xa6S0x10: va6V10(0xb3) = CONST 
    0xa9S0x10: JUMP va6V10(0xb3)

    Begin block 0xb3B0x10
    prev=[0x9dB0x10], succ=[0xaaB0x10]
    =================================
    0xb4S0x10: vb4V10(0x1) = CONST 
    0xb6S0x10: vb6V10(0x1) = CONST 
    0xb8S0x10: vb8V10(0xa0) = CONST 
    0xbaS0x10: vbaV10(0x10000000000000000000000000000000000000000) = SHL vb8V10(0xa0), vb6V10(0x1)
    0xbbS0x10: vbbV10(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbaV10(0x10000000000000000000000000000000000000000), vb4V10(0x1)
    0xbcS0x10: vbcV10 = AND vbbV10(0xffffffffffffffffffffffffffffffffffffffff), v49
    0xbeS0x10: JUMP va2V10(0xaa)

    Begin block 0xaaB0x10
    prev=[0xb3B0x10], succ=[0xbfB0x10]
    =================================
    0xabS0x10: vabV10(0xbf) = CONST 
    0xaeS0x10: JUMP vabV10(0xbf)

    Begin block 0xbfB0x10
    prev=[0xaaB0x10], succ=[0xafB0x10]
    =================================
    0xc1S0x10: SSTORE v48, vbcV10
    0xc2S0x10: JUMP v9eV10(0xaf)

    Begin block 0xafB0x10
    prev=[0xbfB0x10], succ=[0x54]
    =================================
    0xb2S0x10: JUMP v12(0x54)

    Begin block 0x54
    prev=[0xafB0x10], succ=[0x9dB0x54]
    =================================
    0x55: v55(0x98) = CONST 
    0x58: v58(0x40) = CONST 
    0x5a: v5a = MLOAD v58(0x40)
    0x5b: v5b(0x20) = CONST 
    0x5d: v5d = ADD v5b(0x20), v5a
    0x60: v60(0x14105556915497d4d313d5) = CONST 
    0x6c: v6c(0xaa) = CONST 
    0x6e: v6e(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = SHL v6c(0xaa), v60(0x14105556915497d4d313d5)
    0x70: MSTORE v5d, v6e(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0x72: v72(0xb) = CONST 
    0x74: v74 = ADD v72(0xb), v5d
    0x77: v77(0x40) = CONST 
    0x79: v79 = MLOAD v77(0x40)
    0x7a: v7a(0x20) = CONST 
    0x7e: v7e(0x2b) = SUB v74, v79
    0x7f: v7f(0xb) = SUB v7e(0x2b), v7a(0x20)
    0x81: MSTORE v79, v7f(0xb)
    0x83: v83(0x40) = CONST 
    0x85: MSTORE v83(0x40), v74
    0x87: v87(0xb) = MLOAD v79
    0x89: v89(0x20) = CONST 
    0x8b: v8b = ADD v89(0x20), v79
    0x8c: v8c = SHA3 v8b, v87(0xb)
    0x8d: v8d = CALLER 
    0x8e: v8e(0x9d) = CONST 
    0x91: v91(0x20) = CONST 
    0x93: v93(0x9d00000000) = SHL v91(0x20), v8e(0x9d)
    0x94: v94(0x20) = CONST 
    0x96: v96(0x9d) = SHR v94(0x20), v93(0x9d00000000)
    0x97: JUMP v96(0x9d), v8d, v8c, v55(0x98)

    Begin block 0x9dB0x54
    prev=[0x54], succ=[0xb3B0x54]
    =================================
    0x9eS0x54: v9eV54(0xaf) = CONST 
    0xa2S0x54: va2V54(0xaa) = CONST 
    0xa6S0x54: va6V54(0xb3) = CONST 
    0xa9S0x54: JUMP va6V54(0xb3)

    Begin block 0xb3B0x54
    prev=[0x9dB0x54], succ=[0xaaB0x54]
    =================================
    0xb4S0x54: vb4V54(0x1) = CONST 
    0xb6S0x54: vb6V54(0x1) = CONST 
    0xb8S0x54: vb8V54(0xa0) = CONST 
    0xbaS0x54: vbaV54(0x10000000000000000000000000000000000000000) = SHL vb8V54(0xa0), vb6V54(0x1)
    0xbbS0x54: vbbV54(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbaV54(0x10000000000000000000000000000000000000000), vb4V54(0x1)
    0xbcS0x54: vbcV54 = AND vbbV54(0xffffffffffffffffffffffffffffffffffffffff), v8d
    0xbeS0x54: JUMP va2V54(0xaa)

    Begin block 0xaaB0x54
    prev=[0xb3B0x54], succ=[0xbfB0x54]
    =================================
    0xabS0x54: vabV54(0xbf) = CONST 
    0xaeS0x54: JUMP vabV54(0xbf)

    Begin block 0xbfB0x54
    prev=[0xaaB0x54], succ=[0xafB0x54]
    =================================
    0xc1S0x54: SSTORE v8c, vbcV54
    0xc2S0x54: JUMP v9eV54(0xaf)

    Begin block 0xafB0x54
    prev=[0xbfB0x54], succ=[0x98]
    =================================
    0xb2S0x54: JUMP v55(0x98)

    Begin block 0x98
    prev=[0xafB0x54], succ=[0xc3]
    =================================
    0x99: v99(0xc3) = CONST 
    0x9c: JUMP v99(0xc3)

    Begin block 0xc3
    prev=[0x98], succ=[]
    =================================
    0xc4: vc4(0xa66) = CONST 
    0xc8: vc8(0xd2) = CONST 
    0xcb: vcb(0x0) = CONST 
    0xcd: CODECOPY vcb(0x0), vc8(0xd2), vc4(0xa66)
    0xce: vce(0x0) = CONST 
    0xd0: RETURN vce(0x0), vc4(0xa66)

}

