function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0x35B0x0]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x0) = CONST 
    0x7: v7(0xe) = CONST 
    0xa: va(0x35) = CONST 
    0xd: JUMP va(0x35)

    Begin block 0x35B0x0
    prev=[0x0], succ=[0xb9B0x0]
    =================================
    0x36S0x0: v36V0(0x0) = CONST 
    0x39S0x0: v39V0(0x40) = CONST 
    0x3cS0x0: v3cV0(0xb9) = CONST 
    0x3fS0x0: JUMP v3cV0(0xb9)

    Begin block 0xb9B0x0
    prev=[0x35B0x0], succ=[0xefB0x0]
    =================================
    0xbaS0x0: vbaV0(0x0) = CONST 
    0xbdS0x0: vbdV0(0x40) = CONST 
    0xbfS0x0: vbfV0 = MLOAD vbdV0(0x40)
    0xc0S0x0: vc0V0(0x20) = CONST 
    0xc2S0x0: vc2V0 = ADD vc0V0(0x20), vbfV0
    0xc3S0x0: vc3V0(0xef) = CONST 
    0xc7S0x0: vc7V0(0x666169726d696e742e626561636f6e70726f78792e626561636f6e0000000000) = CONST 
    0xe9S0x0: MSTORE vc2V0, vc7V0(0x666169726d696e742e626561636f6e70726f78792e626561636f6e0000000000)
    0xeaS0x0: veaV0(0x1b) = CONST 
    0xecS0x0: vecV0 = ADD veaV0(0x1b), vc2V0
    0xeeS0x0: JUMP vc3V0(0xef)

    Begin block 0xefB0x0
    prev=[0xb9B0x0], succ=[0x40B0x0]
    =================================
    0xf0S0x0: vf0V0(0x40) = CONST 
    0xf3S0x0: vf3V0 = MLOAD vf0V0(0x40)
    0xf4S0x0: vf4V0(0x1f) = CONST 
    0xf6S0x0: vf6V0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT vf4V0(0x1f)
    0xf9S0x0: vf9V0(0x3b) = SUB vecV0, vf3V0
    0xfaS0x0: vfaV0(0x1b) = ADD vf9V0(0x3b), vf6V0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0xfcS0x0: MSTORE vf3V0, vfaV0(0x1b)
    0xffS0x0: MSTORE vf0V0(0x40), vecV0
    0x101S0x0: v101V0(0x1b) = MLOAD vf3V0
    0x102S0x0: v102V0(0x20) = CONST 
    0x106S0x0: v106V0 = ADD vf3V0, v102V0(0x20)
    0x107S0x0: v107V0 = SHA3 v106V0, v101V0(0x1b)
    0x108S0x0: v108V0 = SLOAD v107V0
    0x10dS0x0: JUMP v39V0(0x40)

    Begin block 0x40B0x0
    prev=[0xefB0x0], succ=[0x77B0x0, 0x7bB0x0]
    =================================
    0x44S0x0: v44V0(0x1) = CONST 
    0x46S0x0: v46V0(0x1) = CONST 
    0x48S0x0: v48V0(0xa0) = CONST 
    0x4aS0x0: v4aV0(0x10000000000000000000000000000000000000000) = SHL v48V0(0xa0), v46V0(0x1)
    0x4bS0x0: v4bV0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4aV0(0x10000000000000000000000000000000000000000), v44V0(0x1)
    0x4cS0x0: v4cV0 = AND v4bV0(0xffffffffffffffffffffffffffffffffffffffff), v108V0
    0x4dS0x0: v4dV0(0xa9dfa711) = CONST 
    0x52S0x0: v52V0(0x40) = CONST 
    0x54S0x0: v54V0 = MLOAD v52V0(0x40)
    0x56S0x0: v56V0(0xffffffff) = CONST 
    0x5bS0x0: v5bV0(0xa9dfa711) = AND v56V0(0xffffffff), v4dV0(0xa9dfa711)
    0x5cS0x0: v5cV0(0xe0) = CONST 
    0x5eS0x0: v5eV0(0xa9dfa71100000000000000000000000000000000000000000000000000000000) = SHL v5cV0(0xe0), v5bV0(0xa9dfa711)
    0x60S0x0: MSTORE v54V0, v5eV0(0xa9dfa71100000000000000000000000000000000000000000000000000000000)
    0x61S0x0: v61V0(0x4) = CONST 
    0x63S0x0: v63V0 = ADD v61V0(0x4), v54V0
    0x64S0x0: v64V0(0x20) = CONST 
    0x66S0x0: v66V0(0x40) = CONST 
    0x68S0x0: v68V0 = MLOAD v66V0(0x40)
    0x6bS0x0: v6bV0(0x4) = SUB v63V0, v68V0
    0x6fS0x0: v6fV0 = EXTCODESIZE v4cV0
    0x70S0x0: v70V0 = ISZERO v6fV0
    0x72S0x0: v72V0 = ISZERO v70V0
    0x73S0x0: v73V0(0x7b) = CONST 
    0x76S0x0: JUMPI v73V0(0x7b), v72V0

    Begin block 0x77B0x0
    prev=[0x40B0x0], succ=[]
    =================================
    0x77S0x0: v77V0(0x0) = CONST 
    0x7aS0x0: REVERT v77V0(0x0), v77V0(0x0)

    Begin block 0x7bB0x0
    prev=[0x40B0x0], succ=[0x86B0x0, 0x8fB0x0]
    =================================
    0x7dS0x0: v7dV0 = GAS 
    0x7eS0x0: v7eV0 = STATICCALL v7dV0, v4cV0, v68V0, v6bV0(0x4), v68V0, v64V0(0x20)
    0x7fS0x0: v7fV0 = ISZERO v7eV0
    0x81S0x0: v81V0 = ISZERO v7fV0
    0x82S0x0: v82V0(0x8f) = CONST 
    0x85S0x0: JUMPI v82V0(0x8f), v81V0

    Begin block 0x86B0x0
    prev=[0x7bB0x0], succ=[]
    =================================
    0x86S0x0: v86V0 = RETURNDATASIZE 
    0x87S0x0: v87V0(0x0) = CONST 
    0x8aS0x0: RETURNDATACOPY v87V0(0x0), v87V0(0x0), v86V0
    0x8bS0x0: v8bV0 = RETURNDATASIZE 
    0x8cS0x0: v8cV0(0x0) = CONST 
    0x8eS0x0: REVERT v8cV0(0x0), v8bV0

    Begin block 0x8fB0x0
    prev=[0x7bB0x0], succ=[0x10eB0x8fB0x0]
    =================================
    0x94S0x0: v94V0(0x40) = CONST 
    0x96S0x0: v96V0 = MLOAD v94V0(0x40)
    0x97S0x0: v97V0 = RETURNDATASIZE 
    0x98S0x0: v98V0(0x1f) = CONST 
    0x9aS0x0: v9aV0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v98V0(0x1f)
    0x9bS0x0: v9bV0(0x1f) = CONST 
    0x9eS0x0: v9eV0 = ADD v97V0, v9bV0(0x1f)
    0x9fS0x0: v9fV0 = AND v9eV0, v9aV0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0xa1S0x0: va1V0 = ADD v96V0, v9fV0
    0xa3S0x0: va3V0(0x40) = CONST 
    0xa5S0x0: MSTORE va3V0(0x40), va1V0
    0xa8S0x0: va8V0 = ADD v96V0, v97V0
    0xaaS0x0: vaaV0(0xb3) = CONST 
    0xafS0x0: vafV0(0x10e) = CONST 
    0xb2S0x0: JUMP vafV0(0x10e)

    Begin block 0x10eB0x8fB0x0
    prev=[0x8fB0x0], succ=[0x11fB0x8fB0x0, 0x11cB0x8fB0x0]
    =================================
    0x10fS0x8fS0x0: v10fV8fV0(0x0) = CONST 
    0x111S0x8fS0x0: v111V8fV0(0x20) = CONST 
    0x115S0x8fS0x0: v115V8fV0 = SUB va8V0, v96V0
    0x116S0x8fS0x0: v116V8fV0 = SLT v115V8fV0, v111V8fV0(0x20)
    0x117S0x8fS0x0: v117V8fV0 = ISZERO v116V8fV0
    0x118S0x8fS0x0: v118V8fV0(0x11f) = CONST 
    0x11bS0x8fS0x0: JUMPI v118V8fV0(0x11f), v117V8fV0

    Begin block 0x11fB0x8fB0x0
    prev=[0x10eB0x8fB0x0], succ=[0x135B0x8fB0x0, 0x132B0x8fB0x0]
    =================================
    0x121S0x8fS0x0: v121V8fV0 = MLOAD v96V0
    0x122S0x8fS0x0: v122V8fV0(0x1) = CONST 
    0x124S0x8fS0x0: v124V8fV0(0x1) = CONST 
    0x126S0x8fS0x0: v126V8fV0(0xa0) = CONST 
    0x128S0x8fS0x0: v128V8fV0(0x10000000000000000000000000000000000000000) = SHL v126V8fV0(0xa0), v124V8fV0(0x1)
    0x129S0x8fS0x0: v129V8fV0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v128V8fV0(0x10000000000000000000000000000000000000000), v122V8fV0(0x1)
    0x12bS0x8fS0x0: v12bV8fV0 = AND v121V8fV0, v129V8fV0(0xffffffffffffffffffffffffffffffffffffffff)
    0x12dS0x8fS0x0: v12dV8fV0 = EQ v121V8fV0, v12bV8fV0
    0x12eS0x8fS0x0: v12eV8fV0(0x135) = CONST 
    0x131S0x8fS0x0: JUMPI v12eV8fV0(0x135), v12dV8fV0

    Begin block 0x135B0x8fB0x0
    prev=[0x11fB0x8fB0x0], succ=[0xb3B0x0]
    =================================
    0x13bS0x8fS0x0: JUMP vaaV0(0xb3)

    Begin block 0xb3B0x0
    prev=[0x135B0x8fB0x0], succ=[0xe]
    =================================
    0xb8S0x0: JUMP v7(0xe)

    Begin block 0xe
    prev=[0xb3B0x0], succ=[0x30, 0x2c]
    =================================
    0x11: v11 = CALLDATASIZE 
    0x12: v12(0x0) = CONST 
    0x15: CALLDATACOPY v12(0x0), v12(0x0), v11
    0x16: v16(0x0) = CONST 
    0x19: v19 = CALLDATASIZE 
    0x1a: v1a(0x0) = CONST 
    0x1d: v1d = GAS 
    0x1e: v1e = DELEGATECALL v1d, v121V8fV0, v1a(0x0), v19, v16(0x0), v16(0x0)
    0x1f: v1f = RETURNDATASIZE 
    0x21: v21(0x0) = CONST 
    0x24: RETURNDATACOPY v21(0x0), v21(0x0), v1f
    0x27: v27 = ISZERO v1e
    0x28: v28(0x30) = CONST 
    0x2b: JUMPI v28(0x30), v27

    Begin block 0x30
    prev=[0xe], succ=[]
    =================================
    0x32: v32(0x0) = CONST 
    0x34: REVERT v32(0x0), v1f

    Begin block 0x2c
    prev=[0xe], succ=[]
    =================================
    0x2d: v2d(0x0) = CONST 
    0x2f: RETURN v2d(0x0), v1f

    Begin block 0x132B0x8fB0x0
    prev=[0x11fB0x8fB0x0], succ=[]
    =================================
    0x134S0x8fS0x0: REVERT v10fV8fV0(0x0), v10fV8fV0(0x0)

    Begin block 0x11cB0x8fB0x0
    prev=[0x10eB0x8fB0x0], succ=[]
    =================================
    0x11eS0x8fS0x0: REVERT v10fV8fV0(0x0), v10fV8fV0(0x0)

}

