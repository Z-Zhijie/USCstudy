function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0xc13]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0xbe9: vbe9(0xc13) = CONST 
    0xbea: JUMPI vbe9(0xc13), v8

    Begin block 0xd
    prev=[0x0], succ=[0xa0, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x8b876347) = CONST 
    0x19: v19 = GT v14(0x8b876347), v12
    0x1a: v1a(0xa0) = CONST 
    0x1d: JUMPI v1a(0xa0), v19

    Begin block 0xa0
    prev=[0xd], succ=[0xe7, 0xac]
    =================================
    0xa2: va2(0x547d0738) = CONST 
    0xa7: va7 = GT va2(0x547d0738), v12
    0xa8: va8(0xe7) = CONST 
    0xab: JUMPI va8(0xe7), va7

    Begin block 0xe7
    prev=[0xa0], succ=[0xc16, 0xf3]
    =================================
    0xe9: ve9(0x11cee36) = CONST 
    0xee: vee = EQ ve9(0x11cee36), v12
    0xc09: vc09(0xc16) = CONST 
    0xc0a: JUMPI vc09(0xc16), vee

    Begin block 0xc16
    prev=[0xe7], succ=[]
    =================================
    0xc17: vc17(0x19b) = CONST 
    0xc18: CALLPRIVATE vc17(0x19b)

    Begin block 0xf3
    prev=[0xe7], succ=[0xc19, 0xfe]
    =================================
    0xf4: vf4(0x700037d) = CONST 
    0xf9: vf9 = EQ vf4(0x700037d), v12
    0xc0b: vc0b(0xc19) = CONST 
    0xc0c: JUMPI vc0b(0xc19), vf9

    Begin block 0xc19
    prev=[0xf3], succ=[]
    =================================
    0xc1a: vc1a(0x1c6) = CONST 
    0xc1b: CALLPRIVATE vc1a(0x1c6)

    Begin block 0xfe
    prev=[0xf3], succ=[0xc1c, 0x109]
    =================================
    0xff: vff(0x22f3e2d4) = CONST 
    0x104: v104 = EQ vff(0x22f3e2d4), v12
    0xc0d: vc0d(0xc1c) = CONST 
    0xc0e: JUMPI vc0d(0xc1c), v104

    Begin block 0xc1c
    prev=[0xfe], succ=[]
    =================================
    0xc1d: vc1d(0x1f3) = CONST 
    0xc1e: CALLPRIVATE vc1d(0x1f3)

    Begin block 0x109
    prev=[0xfe], succ=[0xc1f, 0x114]
    =================================
    0x10a: v10a(0x2d06e5bf) = CONST 
    0x10f: v10f = EQ v10a(0x2d06e5bf), v12
    0xc0f: vc0f(0xc1f) = CONST 
    0xc10: JUMPI vc0f(0xc1f), v10f

    Begin block 0xc1f
    prev=[0x109], succ=[]
    =================================
    0xc20: vc20(0x215) = CONST 
    0xc21: CALLPRIVATE vc20(0x215)

    Begin block 0x114
    prev=[0x109], succ=[0xc13, 0xc22]
    =================================
    0x115: v115(0x394e2d35) = CONST 
    0x11a: v11a = EQ v115(0x394e2d35), v12
    0xc11: vc11(0xc22) = CONST 
    0xc12: JUMPI vc11(0xc22), v11a

    Begin block 0xc13
    prev=[0x0, 0x114], succ=[]
    =================================
    0xc14: vc14(0x11f) = CONST 
    0xc15: CALLPRIVATE vc14(0x11f)

    Begin block 0xc22
    prev=[0x114], succ=[]
    =================================
    0xc23: vc23(0x22a) = CONST 
    0xc24: CALLPRIVATE vc23(0x22a)

    Begin block 0xac
    prev=[0xa0], succ=[0xc25, 0xb7]
    =================================
    0xad: vad(0x547d0738) = CONST 
    0xb2: vb2 = EQ vad(0x547d0738), v12
    0xbff: vbff(0xc25) = CONST 
    0xc00: JUMPI vbff(0xc25), vb2

    Begin block 0xc25
    prev=[0xac], succ=[]
    =================================
    0xc26: vc26(0x24a) = CONST 
    0xc27: CALLPRIVATE vc26(0x24a)

    Begin block 0xb7
    prev=[0xac], succ=[0xc28, 0xc2]
    =================================
    0xb8: vb8(0x5c19a95c) = CONST 
    0xbd: vbd = EQ vb8(0x5c19a95c), v12
    0xc01: vc01(0xc28) = CONST 
    0xc02: JUMPI vc01(0xc28), vbd

    Begin block 0xc28
    prev=[0xb7], succ=[]
    =================================
    0xc29: vc29(0x25f) = CONST 
    0xc2a: CALLPRIVATE vc29(0x25f)

    Begin block 0xc2
    prev=[0xb7], succ=[0xc2b, 0xcd]
    =================================
    0xc3: vc3(0x5c60da1b) = CONST 
    0xc8: vc8 = EQ vc3(0x5c60da1b), v12
    0xc03: vc03(0xc2b) = CONST 
    0xc04: JUMPI vc03(0xc2b), vc8

    Begin block 0xc2b
    prev=[0xc2], succ=[]
    =================================
    0xc2c: vc2c(0x27f) = CONST 
    0xc2d: CALLPRIVATE vc2c(0x27f)

    Begin block 0xcd
    prev=[0xc2], succ=[0xc2e, 0xd8]
    =================================
    0xce: vce(0x69b69ea7) = CONST 
    0xd3: vd3 = EQ vce(0x69b69ea7), v12
    0xc05: vc05(0xc2e) = CONST 
    0xc06: JUMPI vc05(0xc2e), vd3

    Begin block 0xc2e
    prev=[0xcd], succ=[]
    =================================
    0xc2f: vc2f(0x294) = CONST 
    0xc30: CALLPRIVATE vc2f(0x294)

    Begin block 0xd8
    prev=[0xcd], succ=[0xe3, 0xc31]
    =================================
    0xd9: vd9(0x7b0a47ee) = CONST 
    0xde: vde = EQ vd9(0x7b0a47ee), v12
    0xc07: vc07(0xc31) = CONST 
    0xc08: JUMPI vc07(0xc31), vde

    Begin block 0xe3
    prev=[0xd8], succ=[]
    =================================
    0xe3: ve3(0x11f) = CONST 
    0xe6: JUMP ve3(0x11f)

    Begin block 0xc31
    prev=[0xd8], succ=[]
    =================================
    0xc32: vc32(0x2b4) = CONST 
    0xc33: CALLPRIVATE vc32(0x2b4)

    Begin block 0x1e
    prev=[0xd], succ=[0x64, 0x29]
    =================================
    0x1f: v1f(0xd69efdc5) = CONST 
    0x24: v24 = GT v1f(0xd69efdc5), v12
    0x25: v25(0x64) = CONST 
    0x28: JUMPI v25(0x64), v24

    Begin block 0x64
    prev=[0x1e], succ=[0xc34, 0x70]
    =================================
    0x66: v66(0x8b876347) = CONST 
    0x6b: v6b = EQ v66(0x8b876347), v12
    0xbf5: vbf5(0xc34) = CONST 
    0xbf6: JUMPI vbf5(0xc34), v6b

    Begin block 0xc34
    prev=[0x64], succ=[]
    =================================
    0xc35: vc35(0x2c9) = CONST 
    0xc36: CALLPRIVATE vc35(0x2c9)

    Begin block 0x70
    prev=[0x64], succ=[0xc37, 0x7b]
    =================================
    0x71: v71(0x8da5cb5b) = CONST 
    0x76: v76 = EQ v71(0x8da5cb5b), v12
    0xbf7: vbf7(0xc37) = CONST 
    0xbf8: JUMPI vbf7(0xc37), v76

    Begin block 0xc37
    prev=[0x70], succ=[]
    =================================
    0xc38: vc38(0x2e9) = CONST 
    0xc39: CALLPRIVATE vc38(0x2e9)

    Begin block 0x7b
    prev=[0x70], succ=[0xc3a, 0x86]
    =================================
    0x7c: v7c(0x8f32d59b) = CONST 
    0x81: v81 = EQ v7c(0x8f32d59b), v12
    0xbf9: vbf9(0xc3a) = CONST 
    0xbfa: JUMPI vbf9(0xc3a), v81

    Begin block 0xc3a
    prev=[0x7b], succ=[]
    =================================
    0xc3b: vc3b(0x2fe) = CONST 
    0xc3c: CALLPRIVATE vc3b(0x2fe)

    Begin block 0x86
    prev=[0x7b], succ=[0xc3d, 0x91]
    =================================
    0x87: v87(0xb145a5b8) = CONST 
    0x8c: v8c = EQ v87(0xb145a5b8), v12
    0xbfb: vbfb(0xc3d) = CONST 
    0xbfc: JUMPI vbfb(0xc3d), v8c

    Begin block 0xc3d
    prev=[0x86], succ=[]
    =================================
    0xc3e: vc3e(0x313) = CONST 
    0xc3f: CALLPRIVATE vc3e(0x313)

    Begin block 0x91
    prev=[0x86], succ=[0x9c, 0xc40]
    =================================
    0x92: v92(0xc8f33c91) = CONST 
    0x97: v97 = EQ v92(0xc8f33c91), v12
    0xbfd: vbfd(0xc40) = CONST 
    0xbfe: JUMPI vbfd(0xc40), v97

    Begin block 0x9c
    prev=[0x91], succ=[]
    =================================
    0x9c: v9c(0x11f) = CONST 
    0x9f: JUMP v9c(0x11f)

    Begin block 0xc40
    prev=[0x91], succ=[]
    =================================
    0xc41: vc41(0x328) = CONST 
    0xc42: CALLPRIVATE vc41(0x328)

    Begin block 0x29
    prev=[0x1e], succ=[0xc43, 0x34]
    =================================
    0x2a: v2a(0xd69efdc5) = CONST 
    0x2f: v2f = EQ v2a(0xd69efdc5), v12
    0xbeb: vbeb(0xc43) = CONST 
    0xbec: JUMPI vbeb(0xc43), v2f

    Begin block 0xc43
    prev=[0x29], succ=[]
    =================================
    0xc44: vc44(0x33d) = CONST 
    0xc45: CALLPRIVATE vc44(0x33d)

    Begin block 0x34
    prev=[0x29], succ=[0x3f, 0xc46]
    =================================
    0x35: v35(0xdf136d65) = CONST 
    0x3a: v3a = EQ v35(0xdf136d65), v12
    0xbed: vbed(0xc46) = CONST 
    0xbee: JUMPI vbed(0xc46), v3a

    Begin block 0x3f
    prev=[0x34], succ=[0xc49, 0x4a]
    =================================
    0x40: v40(0xebe2b12b) = CONST 
    0x45: v45 = EQ v40(0xebe2b12b), v12
    0xbef: vbef(0xc49) = CONST 
    0xbf0: JUMPI vbef(0xc49), v45

    Begin block 0xc49
    prev=[0x3f], succ=[]
    =================================
    0xc4a: vc4a(0x372) = CONST 
    0xc4b: CALLPRIVATE vc4a(0x372)

    Begin block 0x4a
    prev=[0x3f], succ=[0xc4c, 0x55]
    =================================
    0x4b: v4b(0xf2fde38b) = CONST 
    0x50: v50 = EQ v4b(0xf2fde38b), v12
    0xbf1: vbf1(0xc4c) = CONST 
    0xbf2: JUMPI vbf1(0xc4c), v50

    Begin block 0xc4c
    prev=[0x4a], succ=[]
    =================================
    0xc4d: vc4d(0x387) = CONST 
    0xc4e: CALLPRIVATE vc4d(0x387)

    Begin block 0x55
    prev=[0x4a], succ=[0x60, 0xc4f]
    =================================
    0x56: v56(0xf30127a5) = CONST 
    0x5b: v5b = EQ v56(0xf30127a5), v12
    0xbf3: vbf3(0xc4f) = CONST 
    0xbf4: JUMPI vbf3(0xc4f), v5b

    Begin block 0x60
    prev=[0x55], succ=[]
    =================================
    0x60: v60(0x11f) = CONST 
    0x63: JUMP v60(0x11f)

    Begin block 0xc4f
    prev=[0x55], succ=[]
    =================================
    0xc50: vc50(0x3a7) = CONST 
    0xc51: CALLPRIVATE vc50(0x3a7)

    Begin block 0xc46
    prev=[0x34], succ=[]
    =================================
    0xc47: vc47(0x35d) = CONST 
    0xc48: CALLPRIVATE vc47(0x35d)

}

function fallback()() public {
    Begin block 0x11f
    prev=[], succ=[0x129, 0x12d]
    =================================
    0x120: v120(0x8fc) = CONST 
    0x123: v123 = GAS 
    0x124: v124 = GT v123, v120(0x8fc)
    0x125: v125(0x12d) = CONST 
    0x128: JUMPI v125(0x12d), v124

    Begin block 0x129
    prev=[0x11f], succ=[0x864]
    =================================
    0x129: v129(0x864) = CONST 
    0x12c: JUMP v129(0x864)

    Begin block 0x864
    prev=[0x129], succ=[]
    =================================
    0x865: STOP 

    Begin block 0x12d
    prev=[0x11f], succ=[0x195, 0x192]
    =================================
    0x12e: v12e(0x4) = CONST 
    0x130: v130 = SLOAD v12e(0x4)
    0x131: v131(0x40) = CONST 
    0x134: v134 = MLOAD v131(0x40)
    0x135: v135(0x20) = CONST 
    0x137: v137 = CALLDATASIZE 
    0x138: v138(0x1f) = CONST 
    0x13b: v13b = ADD v137, v138(0x1f)
    0x13e: v13e = DIV v13b, v135(0x20)
    0x140: v140 = MUL v135(0x20), v13e
    0x142: v142 = ADD v134, v140
    0x144: v144 = ADD v135(0x20), v142
    0x147: MSTORE v131(0x40), v144
    0x14a: MSTORE v134, v137
    0x14b: v14b(0x1) = CONST 
    0x14d: v14d(0x1) = CONST 
    0x14f: v14f(0xa0) = CONST 
    0x151: v151(0x10000000000000000000000000000000000000000) = SHL v14f(0xa0), v14d(0x1)
    0x152: v152(0xffffffffffffffffffffffffffffffffffffffff) = SUB v151(0x10000000000000000000000000000000000000000), v14b(0x1)
    0x155: v155 = AND v130, v152(0xffffffffffffffffffffffffffffffffffffffff)
    0x157: v157(0x60) = CONST 
    0x15a: v15a(0x0) = CONST 
    0x160: v160 = ADD v134, v135(0x20)
    0x166: CALLDATACOPY v160, v15a(0x0), v137
    0x167: v167(0x0) = CONST 
    0x16a: v16a = ADD v160, v137
    0x16d: MSTORE v16a, v167(0x0)
    0x170: v170 = MLOAD v134
    0x17b: v17b(0x20) = CONST 
    0x17e: v17e = ADD v134, v17b(0x20)
    0x180: v180 = GAS 
    0x181: v181 = DELEGATECALL v180, v155, v17e, v170, v167(0x0), v167(0x0)
    0x182: v182 = RETURNDATASIZE 
    0x183: v183(0x40) = CONST 
    0x185: v185 = MLOAD v183(0x40)
    0x187: v187(0x0) = CONST 
    0x18a: RETURNDATACOPY v185, v187(0x0), v182
    0x18d: v18d = ISZERO v181
    0x18e: v18e(0x195) = CONST 
    0x191: JUMPI v18e(0x195), v18d

    Begin block 0x195
    prev=[0x12d], succ=[]
    =================================
    0x198: REVERT v185, v182

    Begin block 0x192
    prev=[0x12d], succ=[]
    =================================
    0x194: RETURN v185, v182

}

function LPToken()() public {
    Begin block 0x19b
    prev=[], succ=[0x1a3, 0x1a7]
    =================================
    0x19c: v19c = CALLVALUE 
    0x19e: v19e = ISZERO v19c
    0x19f: v19f(0x1a7) = CONST 
    0x1a2: JUMPI v19f(0x1a7), v19e

    Begin block 0x1a3
    prev=[0x19b], succ=[]
    =================================
    0x1a3: v1a3(0x0) = CONST 
    0x1a6: REVERT v1a3(0x0), v1a3(0x0)

    Begin block 0x1a7
    prev=[0x19b], succ=[0x3bc]
    =================================
    0x1a9: v1a9(0x1b0) = CONST 
    0x1ac: v1ac(0x3bc) = CONST 
    0x1af: JUMP v1ac(0x3bc)

    Begin block 0x3bc
    prev=[0x1a7], succ=[0x1b00x19b]
    =================================
    0x3bd: v3bd(0x3) = CONST 
    0x3bf: v3bf = SLOAD v3bd(0x3)
    0x3c0: v3c0(0x1) = CONST 
    0x3c2: v3c2(0x1) = CONST 
    0x3c4: v3c4(0xa0) = CONST 
    0x3c6: v3c6(0x10000000000000000000000000000000000000000) = SHL v3c4(0xa0), v3c2(0x1)
    0x3c7: v3c7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c6(0x10000000000000000000000000000000000000000), v3c0(0x1)
    0x3c8: v3c8 = AND v3c7(0xffffffffffffffffffffffffffffffffffffffff), v3bf
    0x3ca: JUMP v1a9(0x1b0)

    Begin block 0x1b00x19b
    prev=[0x3bc], succ=[0x76cB0x1b00x19b]
    =================================
    0x1b10x19b: v19b1b1(0x40) = CONST 
    0x1b30x19b: v19b1b3 = MLOAD v19b1b1(0x40)
    0x1b40x19b: v19b1b4(0x885) = CONST 
    0x1b90x19b: v19b1b9(0x76c) = CONST 
    0x1bc0x19b: JUMP v19b1b9(0x76c)

    Begin block 0x76cB0x1b00x19b
    prev=[0x1b00x19b], succ=[0x6b1B0x1b00x19b]
    =================================
    0x76dS0x1b00x19b: v76dV1b019b(0x20) = CONST 
    0x770S0x1b00x19b: v770V1b019b = ADD v19b1b3, v76dV1b019b(0x20)
    0x771S0x1b00x19b: v771V1b019b(0xae3) = CONST 
    0x776S0x1b00x19b: v776V1b019b(0x6b1) = CONST 
    0x779S0x1b00x19b: JUMP v776V1b019b(0x6b1)

    Begin block 0x6b1B0x1b00x19b
    prev=[0x76cB0x1b00x19b], succ=[0x7cfB0x6b1B0x1b00x19b]
    =================================
    0x6b2S0x1b00x19b: v6b2V1b019b(0xa74) = CONST 
    0x6b6S0x1b00x19b: v6b6V1b019b(0x7cf) = CONST 
    0x6b9S0x1b00x19b: JUMP v6b6V1b019b(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x19b
    prev=[0x6b1B0x1b00x19b], succ=[0x7dfB0x6b1B0x1b00x19b]
    =================================
    0x7d0S0x6b1S0x1b00x19b: v7d0V6b1V1b019b(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x19b: v7d2V6b1V1b019b(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x19b: v7d6V6b1V1b019b(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x19b: JUMP v7d6V6b1V1b019b(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x19b
    prev=[0x7cfB0x6b1B0x1b00x19b], succ=[0xbc1B0x6b1B0x1b00x19b]
    =================================
    0x7e0S0x6b1S0x1b00x19b: v7e0V6b1V1b019b(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x19b: v7e2V6b1V1b019b(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x19b: v7e4V6b1V1b019b(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x19b: v7e6V6b1V1b019b(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b019b(0xa0), v7e2V6b1V1b019b(0x1)
    0x7e7S0x6b1S0x1b00x19b: v7e7V6b1V1b019b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b019b(0x10000000000000000000000000000000000000000), v7e0V6b1V1b019b(0x1)
    0x7e8S0x6b1S0x1b00x19b: v7e8V6b1V1b019b = AND v7e7V6b1V1b019b(0xffffffffffffffffffffffffffffffffffffffff), v3c8
    0x7eaS0x6b1S0x1b00x19b: JUMP v7d2V6b1V1b019b(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x19b
    prev=[0x7dfB0x6b1B0x1b00x19b], succ=[0xa74B0x1b00x19b]
    =================================
    0xbc6S0x6b1S0x1b00x19b: JUMP v6b2V1b019b(0xa74)

    Begin block 0xa74B0x1b00x19b
    prev=[0xbc1B0x6b1B0x1b00x19b], succ=[0xae3B0x1b00x19b]
    =================================
    0xa76S0x1b00x19b: MSTORE v19b1b3, v7e8V6b1V1b019b
    0xa79S0x1b00x19b: JUMP v771V1b019b(0xae3)

    Begin block 0xae3B0x1b00x19b
    prev=[0xa74B0x1b00x19b], succ=[0x8850x19b]
    =================================
    0xae8S0x1b00x19b: JUMP v19b1b4(0x885)

    Begin block 0x8850x19b
    prev=[0xae3B0x1b00x19b], succ=[]
    =================================
    0x8860x19b: v19b886(0x40) = CONST 
    0x8880x19b: v19b888 = MLOAD v19b886(0x40)
    0x88b0x19b: v19b88b(0x20) = SUB v770V1b019b, v19b888
    0x88d0x19b: RETURN v19b888, v19b88b(0x20)

}

function rewards(address)() public {
    Begin block 0x1c6
    prev=[], succ=[0x1ce, 0x1d2]
    =================================
    0x1c7: v1c7 = CALLVALUE 
    0x1c9: v1c9 = ISZERO v1c7
    0x1ca: v1ca(0x1d2) = CONST 
    0x1cd: JUMPI v1ca(0x1d2), v1c9

    Begin block 0x1ce
    prev=[0x1c6], succ=[]
    =================================
    0x1ce: v1ce(0x0) = CONST 
    0x1d1: REVERT v1ce(0x0), v1ce(0x0)

    Begin block 0x1d2
    prev=[0x1c6], succ=[0x659B0x1d2]
    =================================
    0x1d4: v1d4(0x1e6) = CONST 
    0x1d7: v1d7(0x1e1) = CONST 
    0x1da: v1da = CALLDATASIZE 
    0x1db: v1db(0x4) = CONST 
    0x1dd: v1dd(0x659) = CONST 
    0x1e0: JUMP v1dd(0x659)

    Begin block 0x659B0x1d2
    prev=[0x1d2], succ=[0x667B0x1d2, 0x66bB0x1d2]
    =================================
    0x65aS0x1d2: v65aV1d2(0x0) = CONST 
    0x65cS0x1d2: v65cV1d2(0x20) = CONST 
    0x660S0x1d2: v660V1d2 = SUB v1da, v1db(0x4)
    0x661S0x1d2: v661V1d2 = SLT v660V1d2, v65cV1d2(0x20)
    0x662S0x1d2: v662V1d2 = ISZERO v661V1d2
    0x663S0x1d2: v663V1d2(0x66b) = CONST 
    0x666S0x1d2: JUMPI v663V1d2(0x66b), v662V1d2

    Begin block 0x667B0x1d2
    prev=[0x659B0x1d2], succ=[]
    =================================
    0x667S0x1d2: v667V1d2(0x0) = CONST 
    0x66aS0x1d2: REVERT v667V1d2(0x0), v667V1d2(0x0)

    Begin block 0x66bB0x1d2
    prev=[0x659B0x1d2], succ=[0x648B0x66bB0x1d2]
    =================================
    0x66cS0x1d2: v66cV1d2(0x0) = CONST 
    0x66eS0x1d2: v66eV1d2(0xa4d) = CONST 
    0x673S0x1d2: v673V1d2(0x648) = CONST 
    0x676S0x1d2: JUMP v673V1d2(0x648)

    Begin block 0x648B0x66bB0x1d2
    prev=[0x66bB0x1d2], succ=[0x7eeB0x648B0x66bB0x1d2]
    =================================
    0x64aS0x66bS0x1d2: v64aV66bV1d2 = CALLDATALOAD v1db(0x4)
    0x64bS0x66bS0x1d2: v64bV66bV1d2(0xa28) = CONST 
    0x64fS0x66bS0x1d2: v64fV66bV1d2(0x7ee) = CONST 
    0x652S0x66bS0x1d2: JUMP v64fV66bV1d2(0x7ee), v64aV66bV1d2, v64bV66bV1d2(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x1d2
    prev=[0x648B0x66bB0x1d2], succ=[0x7cfB0x7eeB0x648B0x66bB0x1d2]
    =================================
    0x7efS0x648S0x66bS0x1d2: v7efV648V66bV1d2(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x1d2: v7f3V648V66bV1d2(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x1d2: JUMP v7f3V648V66bV1d2(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x1d2
    prev=[0x7eeB0x648B0x66bB0x1d2], succ=[0x7dfB0x7eeB0x648B0x66bB0x1d2]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x1d2: v7d0V7eeV648V66bV1d2(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x1d2: v7d2V7eeV648V66bV1d2(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x1d2: v7d6V7eeV648V66bV1d2(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x1d2: JUMP v7d6V7eeV648V66bV1d2(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x1d2
    prev=[0x7cfB0x7eeB0x648B0x66bB0x1d2], succ=[0xbc1B0x7eeB0x648B0x66bB0x1d2]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x1d2: v7e0V7eeV648V66bV1d2(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x1d2: v7e2V7eeV648V66bV1d2(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x1d2: v7e4V7eeV648V66bV1d2(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x1d2: v7e6V7eeV648V66bV1d2(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV1d2(0xa0), v7e2V7eeV648V66bV1d2(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x1d2: v7e7V7eeV648V66bV1d2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV1d2(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV1d2(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x1d2: v7e8V7eeV648V66bV1d2 = AND v7e7V7eeV648V66bV1d2(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV1d2
    0x7eaS0x7eeS0x648S0x66bS0x1d2: JUMP v7d2V7eeV648V66bV1d2(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x1d2
    prev=[0x7dfB0x7eeB0x648B0x66bB0x1d2], succ=[0x7f7B0x648B0x66bB0x1d2]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x1d2: JUMP v7efV648V66bV1d2(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x1d2
    prev=[0xbc1B0x7eeB0x648B0x66bB0x1d2], succ=[0x7feB0x648B0x66bB0x1d2, 0xbe6B0x648B0x66bB0x1d2]
    =================================
    0x7f9S0x648S0x66bS0x1d2: v7f9V648V66bV1d2 = EQ v64aV66bV1d2, v7e8V7eeV648V66bV1d2
    0x7faS0x648S0x66bS0x1d2: v7faV648V66bV1d2(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x1d2: JUMPI v7faV648V66bV1d2(0xbe6), v7f9V648V66bV1d2

    Begin block 0x7feB0x648B0x66bB0x1d2
    prev=[0x7f7B0x648B0x66bB0x1d2], succ=[]
    =================================
    0x7feS0x648S0x66bS0x1d2: v7feV648V66bV1d2(0x0) = CONST 
    0x801S0x648S0x66bS0x1d2: REVERT v7feV648V66bV1d2(0x0), v7feV648V66bV1d2(0x0)

    Begin block 0xbe6B0x648B0x66bB0x1d2
    prev=[0x7f7B0x648B0x66bB0x1d2], succ=[0xa28B0x66bB0x1d2]
    =================================
    0xbe8S0x648S0x66bS0x1d2: JUMP v64bV66bV1d2(0xa28)

    Begin block 0xa28B0x66bB0x1d2
    prev=[0xbe6B0x648B0x66bB0x1d2], succ=[0xa4dB0x1d2]
    =================================
    0xa2dS0x66bS0x1d2: JUMP v66eV1d2(0xa4d)

    Begin block 0xa4dB0x1d2
    prev=[0xa28B0x66bB0x1d2], succ=[0x1e1]
    =================================
    0xa54S0x1d2: JUMP v1d7(0x1e1)

    Begin block 0x1e1
    prev=[0xa4dB0x1d2], succ=[0x3cb]
    =================================
    0x1e2: v1e2(0x3cb) = CONST 
    0x1e5: JUMP v1e2(0x3cb)

    Begin block 0x3cb
    prev=[0x1e1], succ=[0x1e60x1c6]
    =================================
    0x3cc: v3cc(0xd) = CONST 
    0x3ce: v3ce(0x20) = CONST 
    0x3d0: MSTORE v3ce(0x20), v3cc(0xd)
    0x3d1: v3d1(0x0) = CONST 
    0x3d5: MSTORE v3d1(0x0), v64aV66bV1d2
    0x3d6: v3d6(0x40) = CONST 
    0x3d9: v3d9 = SHA3 v3d1(0x0), v3d6(0x40)
    0x3da: v3da = SLOAD v3d9
    0x3dc: JUMP v1d4(0x1e6)

    Begin block 0x1e60x1c6
    prev=[0x3cb], succ=[0x7b8B0x1e60x1c6]
    =================================
    0x1e70x1c6: v1c61e7(0x40) = CONST 
    0x1e90x1c6: v1c61e9 = MLOAD v1c61e7(0x40)
    0x1ea0x1c6: v1c61ea(0x8ad) = CONST 
    0x1ef0x1c6: v1c61ef(0x7b8) = CONST 
    0x1f20x1c6: JUMP v1c61ef(0x7b8)

    Begin block 0x7b8B0x1e60x1c6
    prev=[0x1e60x1c6], succ=[0x763B0x1e60x1c6]
    =================================
    0x7b9S0x1e60x1c6: v7b9V1e61c6(0x20) = CONST 
    0x7bcS0x1e60x1c6: v7bcV1e61c6 = ADD v1c61e9, v7b9V1e61c6(0x20)
    0x7bdS0x1e60x1c6: v7bdV1e61c6(0xb9c) = CONST 
    0x7c2S0x1e60x1c6: v7c2V1e61c6(0x763) = CONST 
    0x7c5S0x1e60x1c6: JUMP v7c2V1e61c6(0x763)

    Begin block 0x763B0x1e60x1c6
    prev=[0x7b8B0x1e60x1c6], succ=[0x7ebB0x763B0x1e60x1c6]
    =================================
    0x764S0x1e60x1c6: v764V1e61c6(0xabe) = CONST 
    0x768S0x1e60x1c6: v768V1e61c6(0x7eb) = CONST 
    0x76bS0x1e60x1c6: JUMP v768V1e61c6(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x1c6
    prev=[0x763B0x1e60x1c6], succ=[0xabeB0x1e60x1c6]
    =================================
    0x7edS0x763S0x1e60x1c6: JUMP v764V1e61c6(0xabe)

    Begin block 0xabeB0x1e60x1c6
    prev=[0x7ebB0x763B0x1e60x1c6], succ=[0xb9cB0x1e60x1c6]
    =================================
    0xac0S0x1e60x1c6: MSTORE v1c61e9, v3da
    0xac3S0x1e60x1c6: JUMP v7bdV1e61c6(0xb9c)

    Begin block 0xb9cB0x1e60x1c6
    prev=[0xabeB0x1e60x1c6], succ=[0x8ad0x1c6]
    =================================
    0xba1S0x1e60x1c6: JUMP v1c61ea(0x8ad)

    Begin block 0x8ad0x1c6
    prev=[0xb9cB0x1e60x1c6], succ=[]
    =================================
    0x8ae0x1c6: v1c68ae(0x40) = CONST 
    0x8b00x1c6: v1c68b0 = MLOAD v1c68ae(0x40)
    0x8b30x1c6: v1c68b3(0x20) = SUB v7bcV1e61c6, v1c68b0
    0x8b50x1c6: RETURN v1c68b0, v1c68b3(0x20)

}

function isActive()() public {
    Begin block 0x1f3
    prev=[], succ=[0x1fb, 0x1ff]
    =================================
    0x1f4: v1f4 = CALLVALUE 
    0x1f6: v1f6 = ISZERO v1f4
    0x1f7: v1f7(0x1ff) = CONST 
    0x1fa: JUMPI v1f7(0x1ff), v1f6

    Begin block 0x1fb
    prev=[0x1f3], succ=[]
    =================================
    0x1fb: v1fb(0x0) = CONST 
    0x1fe: REVERT v1fb(0x0), v1fb(0x0)

    Begin block 0x1ff
    prev=[0x1f3], succ=[0x3dd]
    =================================
    0x201: v201(0x208) = CONST 
    0x204: v204(0x3dd) = CONST 
    0x207: JUMP v204(0x3dd)

    Begin block 0x3dd
    prev=[0x1ff], succ=[0x2080x1f3]
    =================================
    0x3de: v3de(0x4) = CONST 
    0x3e0: v3e0 = SLOAD v3de(0x4)
    0x3e1: v3e1(0x1) = CONST 
    0x3e3: v3e3(0xa8) = CONST 
    0x3e5: v3e5(0x1000000000000000000000000000000000000000000) = SHL v3e3(0xa8), v3e1(0x1)
    0x3e7: v3e7 = DIV v3e0, v3e5(0x1000000000000000000000000000000000000000000)
    0x3e8: v3e8(0xff) = CONST 
    0x3ea: v3ea = AND v3e8(0xff), v3e7
    0x3ec: JUMP v201(0x208)

    Begin block 0x2080x1f3
    prev=[0x3dd], succ=[0x77aB0x2080x1f3]
    =================================
    0x2090x1f3: v1f3209(0x40) = CONST 
    0x20b0x1f3: v1f320b = MLOAD v1f3209(0x40)
    0x20c0x1f3: v1f320c(0x8d5) = CONST 
    0x2110x1f3: v1f3211(0x77a) = CONST 
    0x2140x1f3: JUMP v1f3211(0x77a)

    Begin block 0x77aB0x2080x1f3
    prev=[0x2080x1f3], succ=[0x6c0B0x2080x1f3]
    =================================
    0x77bS0x2080x1f3: v77bV2081f3(0x20) = CONST 
    0x77eS0x2080x1f3: v77eV2081f3 = ADD v1f320b, v77bV2081f3(0x20)
    0x77fS0x2080x1f3: v77fV2081f3(0xb08) = CONST 
    0x784S0x2080x1f3: v784V2081f3(0x6c0) = CONST 
    0x787S0x2080x1f3: JUMP v784V2081f3(0x6c0)

    Begin block 0x6c0B0x2080x1f3
    prev=[0x77aB0x2080x1f3], succ=[0x7daB0x2080x1f3]
    =================================
    0x6c1S0x2080x1f3: v6c1V2081f3(0xa99) = CONST 
    0x6c5S0x2080x1f3: v6c5V2081f3(0x7da) = CONST 
    0x6c8S0x2080x1f3: JUMP v6c5V2081f3(0x7da)

    Begin block 0x7daB0x2080x1f3
    prev=[0x6c0B0x2080x1f3], succ=[0xa99B0x2080x1f3]
    =================================
    0x7dbS0x2080x1f3: v7dbV2081f3 = ISZERO v3ea
    0x7dcS0x2080x1f3: v7dcV2081f3 = ISZERO v7dbV2081f3
    0x7deS0x2080x1f3: JUMP v6c1V2081f3(0xa99)

    Begin block 0xa99B0x2080x1f3
    prev=[0x7daB0x2080x1f3], succ=[0xb08B0x2080x1f3]
    =================================
    0xa9bS0x2080x1f3: MSTORE v1f320b, v7dcV2081f3
    0xa9eS0x2080x1f3: JUMP v77fV2081f3(0xb08)

    Begin block 0xb08B0x2080x1f3
    prev=[0xa99B0x2080x1f3], succ=[0x8d50x1f3]
    =================================
    0xb0dS0x2080x1f3: JUMP v1f320c(0x8d5)

    Begin block 0x8d50x1f3
    prev=[0xb08B0x2080x1f3], succ=[]
    =================================
    0x8d60x1f3: v1f38d6(0x40) = CONST 
    0x8d80x1f3: v1f38d8 = MLOAD v1f38d6(0x40)
    0x8db0x1f3: v1f38db(0x20) = SUB v77eV2081f3, v1f38d8
    0x8dd0x1f3: RETURN v1f38d8, v1f38db(0x20)

}

function initialCirculatingSupply()() public {
    Begin block 0x215
    prev=[], succ=[0x21d, 0x221]
    =================================
    0x216: v216 = CALLVALUE 
    0x218: v218 = ISZERO v216
    0x219: v219(0x221) = CONST 
    0x21c: JUMPI v219(0x221), v218

    Begin block 0x21d
    prev=[0x215], succ=[]
    =================================
    0x21d: v21d(0x0) = CONST 
    0x220: REVERT v21d(0x0), v21d(0x0)

    Begin block 0x221
    prev=[0x215], succ=[0x3ed]
    =================================
    0x223: v223(0x1e6) = CONST 
    0x226: v226(0x3ed) = CONST 
    0x229: JUMP v226(0x3ed)

    Begin block 0x3ed
    prev=[0x221], succ=[0x1e60x215]
    =================================
    0x3ee: v3ee(0x744f570177f475546c0000) = CONST 
    0x3fb: JUMP v223(0x1e6)

    Begin block 0x1e60x215
    prev=[0x3ed], succ=[0x7b8B0x1e60x215]
    =================================
    0x1e70x215: v2151e7(0x40) = CONST 
    0x1e90x215: v2151e9 = MLOAD v2151e7(0x40)
    0x1ea0x215: v2151ea(0x8ad) = CONST 
    0x1ef0x215: v2151ef(0x7b8) = CONST 
    0x1f20x215: JUMP v2151ef(0x7b8)

    Begin block 0x7b8B0x1e60x215
    prev=[0x1e60x215], succ=[0x763B0x1e60x215]
    =================================
    0x7b9S0x1e60x215: v7b9V1e6215(0x20) = CONST 
    0x7bcS0x1e60x215: v7bcV1e6215 = ADD v2151e9, v7b9V1e6215(0x20)
    0x7bdS0x1e60x215: v7bdV1e6215(0xb9c) = CONST 
    0x7c2S0x1e60x215: v7c2V1e6215(0x763) = CONST 
    0x7c5S0x1e60x215: JUMP v7c2V1e6215(0x763)

    Begin block 0x763B0x1e60x215
    prev=[0x7b8B0x1e60x215], succ=[0x7ebB0x763B0x1e60x215]
    =================================
    0x764S0x1e60x215: v764V1e6215(0xabe) = CONST 
    0x768S0x1e60x215: v768V1e6215(0x7eb) = CONST 
    0x76bS0x1e60x215: JUMP v768V1e6215(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x215
    prev=[0x763B0x1e60x215], succ=[0xabeB0x1e60x215]
    =================================
    0x7edS0x763S0x1e60x215: JUMP v764V1e6215(0xabe)

    Begin block 0xabeB0x1e60x215
    prev=[0x7ebB0x763B0x1e60x215], succ=[0xb9cB0x1e60x215]
    =================================
    0xac0S0x1e60x215: MSTORE v2151e9, v3ee(0x744f570177f475546c0000)
    0xac3S0x1e60x215: JUMP v7bdV1e6215(0xb9c)

    Begin block 0xb9cB0x1e60x215
    prev=[0xabeB0x1e60x215], succ=[0x8ad0x215]
    =================================
    0xba1S0x1e60x215: JUMP v2151ea(0x8ad)

    Begin block 0x8ad0x215
    prev=[0xb9cB0x1e60x215], succ=[]
    =================================
    0x8ae0x215: v2158ae(0x40) = CONST 
    0x8b00x215: v2158b0 = MLOAD v2158ae(0x40)
    0x8b30x215: v2158b3(0x20) = SUB v7bcV1e6215, v2158b0
    0x8b50x215: RETURN v2158b0, v2158b3(0x20)

}

function repStakedPerToken(address,address)() public {
    Begin block 0x22a
    prev=[], succ=[0x232, 0x236]
    =================================
    0x22b: v22b = CALLVALUE 
    0x22d: v22d = ISZERO v22b
    0x22e: v22e(0x236) = CONST 
    0x231: JUMPI v22e(0x236), v22d

    Begin block 0x232
    prev=[0x22a], succ=[]
    =================================
    0x232: v232(0x0) = CONST 
    0x235: REVERT v232(0x0), v232(0x0)

    Begin block 0x236
    prev=[0x22a], succ=[0x677B0x236]
    =================================
    0x238: v238(0x1e6) = CONST 
    0x23b: v23b(0x245) = CONST 
    0x23e: v23e = CALLDATASIZE 
    0x23f: v23f(0x4) = CONST 
    0x241: v241(0x677) = CONST 
    0x244: JUMP v241(0x677)

    Begin block 0x677B0x236
    prev=[0x236], succ=[0x686B0x236, 0x68aB0x236]
    =================================
    0x678S0x236: v678V236(0x0) = CONST 
    0x67bS0x236: v67bV236(0x40) = CONST 
    0x67fS0x236: v67fV236 = SUB v23e, v23f(0x4)
    0x680S0x236: v680V236 = SLT v67fV236, v67bV236(0x40)
    0x681S0x236: v681V236 = ISZERO v680V236
    0x682S0x236: v682V236(0x68a) = CONST 
    0x685S0x236: JUMPI v682V236(0x68a), v681V236

    Begin block 0x686B0x236
    prev=[0x677B0x236], succ=[]
    =================================
    0x686S0x236: v686V236(0x0) = CONST 
    0x689S0x236: REVERT v686V236(0x0), v686V236(0x0)

    Begin block 0x68aB0x236
    prev=[0x677B0x236], succ=[0x648B0x68aB0x236]
    =================================
    0x68bS0x236: v68bV236(0x0) = CONST 
    0x68dS0x236: v68dV236(0x696) = CONST 
    0x692S0x236: v692V236(0x648) = CONST 
    0x695S0x236: JUMP v692V236(0x648)

    Begin block 0x648B0x68aB0x236
    prev=[0x68aB0x236], succ=[0x7eeB0x648B0x68aB0x236]
    =================================
    0x64aS0x68aS0x236: v64aV68aV236 = CALLDATALOAD v23f(0x4)
    0x64bS0x68aS0x236: v64bV68aV236(0xa28) = CONST 
    0x64fS0x68aS0x236: v64fV68aV236(0x7ee) = CONST 
    0x652S0x68aS0x236: JUMP v64fV68aV236(0x7ee), v64aV68aV236, v64bV68aV236(0xa28)

    Begin block 0x7eeB0x648B0x68aB0x236
    prev=[0x648B0x68aB0x236], succ=[0x7cfB0x7eeB0x648B0x68aB0x236]
    =================================
    0x7efS0x648S0x68aS0x236: v7efV648V68aV236(0x7f7) = CONST 
    0x7f3S0x648S0x68aS0x236: v7f3V648V68aV236(0x7cf) = CONST 
    0x7f6S0x648S0x68aS0x236: JUMP v7f3V648V68aV236(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x68aB0x236
    prev=[0x7eeB0x648B0x68aB0x236], succ=[0x7dfB0x7eeB0x648B0x68aB0x236]
    =================================
    0x7d0S0x7eeS0x648S0x68aS0x236: v7d0V7eeV648V68aV236(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x68aS0x236: v7d2V7eeV648V68aV236(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x68aS0x236: v7d6V7eeV648V68aV236(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x68aS0x236: JUMP v7d6V7eeV648V68aV236(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x68aB0x236
    prev=[0x7cfB0x7eeB0x648B0x68aB0x236], succ=[0xbc1B0x7eeB0x648B0x68aB0x236]
    =================================
    0x7e0S0x7eeS0x648S0x68aS0x236: v7e0V7eeV648V68aV236(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x68aS0x236: v7e2V7eeV648V68aV236(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x68aS0x236: v7e4V7eeV648V68aV236(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x68aS0x236: v7e6V7eeV648V68aV236(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V68aV236(0xa0), v7e2V7eeV648V68aV236(0x1)
    0x7e7S0x7eeS0x648S0x68aS0x236: v7e7V7eeV648V68aV236(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V68aV236(0x10000000000000000000000000000000000000000), v7e0V7eeV648V68aV236(0x1)
    0x7e8S0x7eeS0x648S0x68aS0x236: v7e8V7eeV648V68aV236 = AND v7e7V7eeV648V68aV236(0xffffffffffffffffffffffffffffffffffffffff), v64aV68aV236
    0x7eaS0x7eeS0x648S0x68aS0x236: JUMP v7d2V7eeV648V68aV236(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x68aB0x236
    prev=[0x7dfB0x7eeB0x648B0x68aB0x236], succ=[0x7f7B0x648B0x68aB0x236]
    =================================
    0xbc6S0x7eeS0x648S0x68aS0x236: JUMP v7efV648V68aV236(0x7f7)

    Begin block 0x7f7B0x648B0x68aB0x236
    prev=[0xbc1B0x7eeB0x648B0x68aB0x236], succ=[0x7feB0x648B0x68aB0x236, 0xbe6B0x648B0x68aB0x236]
    =================================
    0x7f9S0x648S0x68aS0x236: v7f9V648V68aV236 = EQ v64aV68aV236, v7e8V7eeV648V68aV236
    0x7faS0x648S0x68aS0x236: v7faV648V68aV236(0xbe6) = CONST 
    0x7fdS0x648S0x68aS0x236: JUMPI v7faV648V68aV236(0xbe6), v7f9V648V68aV236

    Begin block 0x7feB0x648B0x68aB0x236
    prev=[0x7f7B0x648B0x68aB0x236], succ=[]
    =================================
    0x7feS0x648S0x68aS0x236: v7feV648V68aV236(0x0) = CONST 
    0x801S0x648S0x68aS0x236: REVERT v7feV648V68aV236(0x0), v7feV648V68aV236(0x0)

    Begin block 0xbe6B0x648B0x68aB0x236
    prev=[0x7f7B0x648B0x68aB0x236], succ=[0xa28B0x68aB0x236]
    =================================
    0xbe8S0x648S0x68aS0x236: JUMP v64bV68aV236(0xa28)

    Begin block 0xa28B0x68aB0x236
    prev=[0xbe6B0x648B0x68aB0x236], succ=[0x696B0x236]
    =================================
    0xa2dS0x68aS0x236: JUMP v68dV236(0x696)

    Begin block 0x696B0x236
    prev=[0xa28B0x68aB0x236], succ=[0x648B0x696B0x236]
    =================================
    0x69aS0x236: v69aV236(0x20) = CONST 
    0x69cS0x236: v69cV236(0x6a7) = CONST 
    0x6a2S0x236: v6a2V236(0x24) = ADD v23f(0x4), v69aV236(0x20)
    0x6a3S0x236: v6a3V236(0x648) = CONST 
    0x6a6S0x236: JUMP v6a3V236(0x648)

    Begin block 0x648B0x696B0x236
    prev=[0x696B0x236], succ=[0x7eeB0x648B0x696B0x236]
    =================================
    0x64aS0x696S0x236: v64aV696V236 = CALLDATALOAD v6a2V236(0x24)
    0x64bS0x696S0x236: v64bV696V236(0xa28) = CONST 
    0x64fS0x696S0x236: v64fV696V236(0x7ee) = CONST 
    0x652S0x696S0x236: JUMP v64fV696V236(0x7ee), v64aV696V236, v64bV696V236(0xa28)

    Begin block 0x7eeB0x648B0x696B0x236
    prev=[0x648B0x696B0x236], succ=[0x7cfB0x7eeB0x648B0x696B0x236]
    =================================
    0x7efS0x648S0x696S0x236: v7efV648V696V236(0x7f7) = CONST 
    0x7f3S0x648S0x696S0x236: v7f3V648V696V236(0x7cf) = CONST 
    0x7f6S0x648S0x696S0x236: JUMP v7f3V648V696V236(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x696B0x236
    prev=[0x7eeB0x648B0x696B0x236], succ=[0x7dfB0x7eeB0x648B0x696B0x236]
    =================================
    0x7d0S0x7eeS0x648S0x696S0x236: v7d0V7eeV648V696V236(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x696S0x236: v7d2V7eeV648V696V236(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x696S0x236: v7d6V7eeV648V696V236(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x696S0x236: JUMP v7d6V7eeV648V696V236(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x696B0x236
    prev=[0x7cfB0x7eeB0x648B0x696B0x236], succ=[0xbc1B0x7eeB0x648B0x696B0x236]
    =================================
    0x7e0S0x7eeS0x648S0x696S0x236: v7e0V7eeV648V696V236(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x696S0x236: v7e2V7eeV648V696V236(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x696S0x236: v7e4V7eeV648V696V236(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x696S0x236: v7e6V7eeV648V696V236(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V696V236(0xa0), v7e2V7eeV648V696V236(0x1)
    0x7e7S0x7eeS0x648S0x696S0x236: v7e7V7eeV648V696V236(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V696V236(0x10000000000000000000000000000000000000000), v7e0V7eeV648V696V236(0x1)
    0x7e8S0x7eeS0x648S0x696S0x236: v7e8V7eeV648V696V236 = AND v7e7V7eeV648V696V236(0xffffffffffffffffffffffffffffffffffffffff), v64aV696V236
    0x7eaS0x7eeS0x648S0x696S0x236: JUMP v7d2V7eeV648V696V236(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x696B0x236
    prev=[0x7dfB0x7eeB0x648B0x696B0x236], succ=[0x7f7B0x648B0x696B0x236]
    =================================
    0xbc6S0x7eeS0x648S0x696S0x236: JUMP v7efV648V696V236(0x7f7)

    Begin block 0x7f7B0x648B0x696B0x236
    prev=[0xbc1B0x7eeB0x648B0x696B0x236], succ=[0x7feB0x648B0x696B0x236, 0xbe6B0x648B0x696B0x236]
    =================================
    0x7f9S0x648S0x696S0x236: v7f9V648V696V236 = EQ v64aV696V236, v7e8V7eeV648V696V236
    0x7faS0x648S0x696S0x236: v7faV648V696V236(0xbe6) = CONST 
    0x7fdS0x648S0x696S0x236: JUMPI v7faV648V696V236(0xbe6), v7f9V648V696V236

    Begin block 0x7feB0x648B0x696B0x236
    prev=[0x7f7B0x648B0x696B0x236], succ=[]
    =================================
    0x7feS0x648S0x696S0x236: v7feV648V696V236(0x0) = CONST 
    0x801S0x648S0x696S0x236: REVERT v7feV648V696V236(0x0), v7feV648V696V236(0x0)

    Begin block 0xbe6B0x648B0x696B0x236
    prev=[0x7f7B0x648B0x696B0x236], succ=[0xa28B0x696B0x236]
    =================================
    0xbe8S0x648S0x696S0x236: JUMP v64bV696V236(0xa28)

    Begin block 0xa28B0x696B0x236
    prev=[0xbe6B0x648B0x696B0x236], succ=[0x6a7B0x236]
    =================================
    0xa2dS0x696S0x236: JUMP v69cV236(0x6a7)

    Begin block 0x6a7B0x236
    prev=[0xa28B0x696B0x236], succ=[0x245]
    =================================
    0x6b0S0x236: JUMP v23b(0x245)

    Begin block 0x245
    prev=[0x6a7B0x236], succ=[0x3fc]
    =================================
    0x246: v246(0x3fc) = CONST 
    0x249: JUMP v246(0x3fc)

    Begin block 0x3fc
    prev=[0x245], succ=[0x1e60x22a]
    =================================
    0x3fd: v3fd(0x9) = CONST 
    0x3ff: v3ff(0x20) = CONST 
    0x403: MSTORE v3ff(0x20), v3fd(0x9)
    0x404: v404(0x0) = CONST 
    0x408: MSTORE v404(0x0), v64aV68aV236
    0x409: v409(0x40) = CONST 
    0x40d: v40d = SHA3 v404(0x0), v409(0x40)
    0x410: MSTORE v3ff(0x20), v40d
    0x413: MSTORE v404(0x0), v64aV696V236
    0x415: v415 = SHA3 v404(0x0), v409(0x40)
    0x416: v416 = SLOAD v415
    0x418: JUMP v238(0x1e6)

    Begin block 0x1e60x22a
    prev=[0x3fc], succ=[0x7b8B0x1e60x22a]
    =================================
    0x1e70x22a: v22a1e7(0x40) = CONST 
    0x1e90x22a: v22a1e9 = MLOAD v22a1e7(0x40)
    0x1ea0x22a: v22a1ea(0x8ad) = CONST 
    0x1ef0x22a: v22a1ef(0x7b8) = CONST 
    0x1f20x22a: JUMP v22a1ef(0x7b8)

    Begin block 0x7b8B0x1e60x22a
    prev=[0x1e60x22a], succ=[0x763B0x1e60x22a]
    =================================
    0x7b9S0x1e60x22a: v7b9V1e622a(0x20) = CONST 
    0x7bcS0x1e60x22a: v7bcV1e622a = ADD v22a1e9, v7b9V1e622a(0x20)
    0x7bdS0x1e60x22a: v7bdV1e622a(0xb9c) = CONST 
    0x7c2S0x1e60x22a: v7c2V1e622a(0x763) = CONST 
    0x7c5S0x1e60x22a: JUMP v7c2V1e622a(0x763)

    Begin block 0x763B0x1e60x22a
    prev=[0x7b8B0x1e60x22a], succ=[0x7ebB0x763B0x1e60x22a]
    =================================
    0x764S0x1e60x22a: v764V1e622a(0xabe) = CONST 
    0x768S0x1e60x22a: v768V1e622a(0x7eb) = CONST 
    0x76bS0x1e60x22a: JUMP v768V1e622a(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x22a
    prev=[0x763B0x1e60x22a], succ=[0xabeB0x1e60x22a]
    =================================
    0x7edS0x763S0x1e60x22a: JUMP v764V1e622a(0xabe)

    Begin block 0xabeB0x1e60x22a
    prev=[0x7ebB0x763B0x1e60x22a], succ=[0xb9cB0x1e60x22a]
    =================================
    0xac0S0x1e60x22a: MSTORE v22a1e9, v416
    0xac3S0x1e60x22a: JUMP v7bdV1e622a(0xb9c)

    Begin block 0xb9cB0x1e60x22a
    prev=[0xabeB0x1e60x22a], succ=[0x8ad0x22a]
    =================================
    0xba1S0x1e60x22a: JUMP v22a1ea(0x8ad)

    Begin block 0x8ad0x22a
    prev=[0xb9cB0x1e60x22a], succ=[]
    =================================
    0x8ae0x22a: v22a8ae(0x40) = CONST 
    0x8b00x22a: v22a8b0 = MLOAD v22a8ae(0x40)
    0x8b30x22a: v22a8b3(0x20) = SUB v7bcV1e622a, v22a8b0
    0x8b50x22a: RETURN v22a8b0, v22a8b3(0x20)

}

function vBZRX()() public {
    Begin block 0x24a
    prev=[], succ=[0x252, 0x256]
    =================================
    0x24b: v24b = CALLVALUE 
    0x24d: v24d = ISZERO v24b
    0x24e: v24e(0x256) = CONST 
    0x251: JUMPI v24e(0x256), v24d

    Begin block 0x252
    prev=[0x24a], succ=[]
    =================================
    0x252: v252(0x0) = CONST 
    0x255: REVERT v252(0x0), v252(0x0)

    Begin block 0x256
    prev=[0x24a], succ=[0x419]
    =================================
    0x258: v258(0x1b0) = CONST 
    0x25b: v25b(0x419) = CONST 
    0x25e: JUMP v25b(0x419)

    Begin block 0x419
    prev=[0x256], succ=[0x1b00x24a]
    =================================
    0x41a: v41a(0x2) = CONST 
    0x41c: v41c = SLOAD v41a(0x2)
    0x41d: v41d(0x1) = CONST 
    0x41f: v41f(0x1) = CONST 
    0x421: v421(0xa0) = CONST 
    0x423: v423(0x10000000000000000000000000000000000000000) = SHL v421(0xa0), v41f(0x1)
    0x424: v424(0xffffffffffffffffffffffffffffffffffffffff) = SUB v423(0x10000000000000000000000000000000000000000), v41d(0x1)
    0x425: v425 = AND v424(0xffffffffffffffffffffffffffffffffffffffff), v41c
    0x427: JUMP v258(0x1b0)

    Begin block 0x1b00x24a
    prev=[0x419], succ=[0x76cB0x1b00x24a]
    =================================
    0x1b10x24a: v24a1b1(0x40) = CONST 
    0x1b30x24a: v24a1b3 = MLOAD v24a1b1(0x40)
    0x1b40x24a: v24a1b4(0x885) = CONST 
    0x1b90x24a: v24a1b9(0x76c) = CONST 
    0x1bc0x24a: JUMP v24a1b9(0x76c)

    Begin block 0x76cB0x1b00x24a
    prev=[0x1b00x24a], succ=[0x6b1B0x1b00x24a]
    =================================
    0x76dS0x1b00x24a: v76dV1b024a(0x20) = CONST 
    0x770S0x1b00x24a: v770V1b024a = ADD v24a1b3, v76dV1b024a(0x20)
    0x771S0x1b00x24a: v771V1b024a(0xae3) = CONST 
    0x776S0x1b00x24a: v776V1b024a(0x6b1) = CONST 
    0x779S0x1b00x24a: JUMP v776V1b024a(0x6b1)

    Begin block 0x6b1B0x1b00x24a
    prev=[0x76cB0x1b00x24a], succ=[0x7cfB0x6b1B0x1b00x24a]
    =================================
    0x6b2S0x1b00x24a: v6b2V1b024a(0xa74) = CONST 
    0x6b6S0x1b00x24a: v6b6V1b024a(0x7cf) = CONST 
    0x6b9S0x1b00x24a: JUMP v6b6V1b024a(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x24a
    prev=[0x6b1B0x1b00x24a], succ=[0x7dfB0x6b1B0x1b00x24a]
    =================================
    0x7d0S0x6b1S0x1b00x24a: v7d0V6b1V1b024a(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x24a: v7d2V6b1V1b024a(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x24a: v7d6V6b1V1b024a(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x24a: JUMP v7d6V6b1V1b024a(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x24a
    prev=[0x7cfB0x6b1B0x1b00x24a], succ=[0xbc1B0x6b1B0x1b00x24a]
    =================================
    0x7e0S0x6b1S0x1b00x24a: v7e0V6b1V1b024a(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x24a: v7e2V6b1V1b024a(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x24a: v7e4V6b1V1b024a(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x24a: v7e6V6b1V1b024a(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b024a(0xa0), v7e2V6b1V1b024a(0x1)
    0x7e7S0x6b1S0x1b00x24a: v7e7V6b1V1b024a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b024a(0x10000000000000000000000000000000000000000), v7e0V6b1V1b024a(0x1)
    0x7e8S0x6b1S0x1b00x24a: v7e8V6b1V1b024a = AND v7e7V6b1V1b024a(0xffffffffffffffffffffffffffffffffffffffff), v425
    0x7eaS0x6b1S0x1b00x24a: JUMP v7d2V6b1V1b024a(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x24a
    prev=[0x7dfB0x6b1B0x1b00x24a], succ=[0xa74B0x1b00x24a]
    =================================
    0xbc6S0x6b1S0x1b00x24a: JUMP v6b2V1b024a(0xa74)

    Begin block 0xa74B0x1b00x24a
    prev=[0xbc1B0x6b1B0x1b00x24a], succ=[0xae3B0x1b00x24a]
    =================================
    0xa76S0x1b00x24a: MSTORE v24a1b3, v7e8V6b1V1b024a
    0xa79S0x1b00x24a: JUMP v771V1b024a(0xae3)

    Begin block 0xae3B0x1b00x24a
    prev=[0xa74B0x1b00x24a], succ=[0x8850x24a]
    =================================
    0xae8S0x1b00x24a: JUMP v24a1b4(0x885)

    Begin block 0x8850x24a
    prev=[0xae3B0x1b00x24a], succ=[]
    =================================
    0x8860x24a: v24a886(0x40) = CONST 
    0x8880x24a: v24a888 = MLOAD v24a886(0x40)
    0x88b0x24a: v24a88b(0x20) = SUB v770V1b024a, v24a888
    0x88d0x24a: RETURN v24a888, v24a88b(0x20)

}

function delegate(address)() public {
    Begin block 0x25f
    prev=[], succ=[0x267, 0x26b]
    =================================
    0x260: v260 = CALLVALUE 
    0x262: v262 = ISZERO v260
    0x263: v263(0x26b) = CONST 
    0x266: JUMPI v263(0x26b), v262

    Begin block 0x267
    prev=[0x25f], succ=[]
    =================================
    0x267: v267(0x0) = CONST 
    0x26a: REVERT v267(0x0), v267(0x0)

    Begin block 0x26b
    prev=[0x25f], succ=[0x659B0x26b]
    =================================
    0x26d: v26d(0x1b0) = CONST 
    0x270: v270(0x27a) = CONST 
    0x273: v273 = CALLDATASIZE 
    0x274: v274(0x4) = CONST 
    0x276: v276(0x659) = CONST 
    0x279: JUMP v276(0x659)

    Begin block 0x659B0x26b
    prev=[0x26b], succ=[0x667B0x26b, 0x66bB0x26b]
    =================================
    0x65aS0x26b: v65aV26b(0x0) = CONST 
    0x65cS0x26b: v65cV26b(0x20) = CONST 
    0x660S0x26b: v660V26b = SUB v273, v274(0x4)
    0x661S0x26b: v661V26b = SLT v660V26b, v65cV26b(0x20)
    0x662S0x26b: v662V26b = ISZERO v661V26b
    0x663S0x26b: v663V26b(0x66b) = CONST 
    0x666S0x26b: JUMPI v663V26b(0x66b), v662V26b

    Begin block 0x667B0x26b
    prev=[0x659B0x26b], succ=[]
    =================================
    0x667S0x26b: v667V26b(0x0) = CONST 
    0x66aS0x26b: REVERT v667V26b(0x0), v667V26b(0x0)

    Begin block 0x66bB0x26b
    prev=[0x659B0x26b], succ=[0x648B0x66bB0x26b]
    =================================
    0x66cS0x26b: v66cV26b(0x0) = CONST 
    0x66eS0x26b: v66eV26b(0xa4d) = CONST 
    0x673S0x26b: v673V26b(0x648) = CONST 
    0x676S0x26b: JUMP v673V26b(0x648)

    Begin block 0x648B0x66bB0x26b
    prev=[0x66bB0x26b], succ=[0x7eeB0x648B0x66bB0x26b]
    =================================
    0x64aS0x66bS0x26b: v64aV66bV26b = CALLDATALOAD v274(0x4)
    0x64bS0x66bS0x26b: v64bV66bV26b(0xa28) = CONST 
    0x64fS0x66bS0x26b: v64fV66bV26b(0x7ee) = CONST 
    0x652S0x66bS0x26b: JUMP v64fV66bV26b(0x7ee), v64aV66bV26b, v64bV66bV26b(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x26b
    prev=[0x648B0x66bB0x26b], succ=[0x7cfB0x7eeB0x648B0x66bB0x26b]
    =================================
    0x7efS0x648S0x66bS0x26b: v7efV648V66bV26b(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x26b: v7f3V648V66bV26b(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x26b: JUMP v7f3V648V66bV26b(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x26b
    prev=[0x7eeB0x648B0x66bB0x26b], succ=[0x7dfB0x7eeB0x648B0x66bB0x26b]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x26b: v7d0V7eeV648V66bV26b(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x26b: v7d2V7eeV648V66bV26b(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x26b: v7d6V7eeV648V66bV26b(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x26b: JUMP v7d6V7eeV648V66bV26b(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x26b
    prev=[0x7cfB0x7eeB0x648B0x66bB0x26b], succ=[0xbc1B0x7eeB0x648B0x66bB0x26b]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x26b: v7e0V7eeV648V66bV26b(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x26b: v7e2V7eeV648V66bV26b(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x26b: v7e4V7eeV648V66bV26b(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x26b: v7e6V7eeV648V66bV26b(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV26b(0xa0), v7e2V7eeV648V66bV26b(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x26b: v7e7V7eeV648V66bV26b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV26b(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV26b(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x26b: v7e8V7eeV648V66bV26b = AND v7e7V7eeV648V66bV26b(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV26b
    0x7eaS0x7eeS0x648S0x66bS0x26b: JUMP v7d2V7eeV648V66bV26b(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x26b
    prev=[0x7dfB0x7eeB0x648B0x66bB0x26b], succ=[0x7f7B0x648B0x66bB0x26b]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x26b: JUMP v7efV648V66bV26b(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x26b
    prev=[0xbc1B0x7eeB0x648B0x66bB0x26b], succ=[0x7feB0x648B0x66bB0x26b, 0xbe6B0x648B0x66bB0x26b]
    =================================
    0x7f9S0x648S0x66bS0x26b: v7f9V648V66bV26b = EQ v64aV66bV26b, v7e8V7eeV648V66bV26b
    0x7faS0x648S0x66bS0x26b: v7faV648V66bV26b(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x26b: JUMPI v7faV648V66bV26b(0xbe6), v7f9V648V66bV26b

    Begin block 0x7feB0x648B0x66bB0x26b
    prev=[0x7f7B0x648B0x66bB0x26b], succ=[]
    =================================
    0x7feS0x648S0x66bS0x26b: v7feV648V66bV26b(0x0) = CONST 
    0x801S0x648S0x66bS0x26b: REVERT v7feV648V66bV26b(0x0), v7feV648V66bV26b(0x0)

    Begin block 0xbe6B0x648B0x66bB0x26b
    prev=[0x7f7B0x648B0x66bB0x26b], succ=[0xa28B0x66bB0x26b]
    =================================
    0xbe8S0x648S0x66bS0x26b: JUMP v64bV66bV26b(0xa28)

    Begin block 0xa28B0x66bB0x26b
    prev=[0xbe6B0x648B0x66bB0x26b], succ=[0xa4dB0x26b]
    =================================
    0xa2dS0x66bS0x26b: JUMP v66eV26b(0xa4d)

    Begin block 0xa4dB0x26b
    prev=[0xa28B0x66bB0x26b], succ=[0x27a]
    =================================
    0xa54S0x26b: JUMP v270(0x27a)

    Begin block 0x27a
    prev=[0xa4dB0x26b], succ=[0x428]
    =================================
    0x27b: v27b(0x428) = CONST 
    0x27e: JUMP v27b(0x428)

    Begin block 0x428
    prev=[0x27a], succ=[0x1b00x25f]
    =================================
    0x429: v429(0x8) = CONST 
    0x42b: v42b(0x20) = CONST 
    0x42d: MSTORE v42b(0x20), v429(0x8)
    0x42e: v42e(0x0) = CONST 
    0x432: MSTORE v42e(0x0), v64aV66bV26b
    0x433: v433(0x40) = CONST 
    0x436: v436 = SHA3 v42e(0x0), v433(0x40)
    0x437: v437 = SLOAD v436
    0x438: v438(0x1) = CONST 
    0x43a: v43a(0x1) = CONST 
    0x43c: v43c(0xa0) = CONST 
    0x43e: v43e(0x10000000000000000000000000000000000000000) = SHL v43c(0xa0), v43a(0x1)
    0x43f: v43f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v43e(0x10000000000000000000000000000000000000000), v438(0x1)
    0x440: v440 = AND v43f(0xffffffffffffffffffffffffffffffffffffffff), v437
    0x442: JUMP v26d(0x1b0)

    Begin block 0x1b00x25f
    prev=[0x428], succ=[0x76cB0x1b00x25f]
    =================================
    0x1b10x25f: v25f1b1(0x40) = CONST 
    0x1b30x25f: v25f1b3 = MLOAD v25f1b1(0x40)
    0x1b40x25f: v25f1b4(0x885) = CONST 
    0x1b90x25f: v25f1b9(0x76c) = CONST 
    0x1bc0x25f: JUMP v25f1b9(0x76c)

    Begin block 0x76cB0x1b00x25f
    prev=[0x1b00x25f], succ=[0x6b1B0x1b00x25f]
    =================================
    0x76dS0x1b00x25f: v76dV1b025f(0x20) = CONST 
    0x770S0x1b00x25f: v770V1b025f = ADD v25f1b3, v76dV1b025f(0x20)
    0x771S0x1b00x25f: v771V1b025f(0xae3) = CONST 
    0x776S0x1b00x25f: v776V1b025f(0x6b1) = CONST 
    0x779S0x1b00x25f: JUMP v776V1b025f(0x6b1)

    Begin block 0x6b1B0x1b00x25f
    prev=[0x76cB0x1b00x25f], succ=[0x7cfB0x6b1B0x1b00x25f]
    =================================
    0x6b2S0x1b00x25f: v6b2V1b025f(0xa74) = CONST 
    0x6b6S0x1b00x25f: v6b6V1b025f(0x7cf) = CONST 
    0x6b9S0x1b00x25f: JUMP v6b6V1b025f(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x25f
    prev=[0x6b1B0x1b00x25f], succ=[0x7dfB0x6b1B0x1b00x25f]
    =================================
    0x7d0S0x6b1S0x1b00x25f: v7d0V6b1V1b025f(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x25f: v7d2V6b1V1b025f(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x25f: v7d6V6b1V1b025f(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x25f: JUMP v7d6V6b1V1b025f(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x25f
    prev=[0x7cfB0x6b1B0x1b00x25f], succ=[0xbc1B0x6b1B0x1b00x25f]
    =================================
    0x7e0S0x6b1S0x1b00x25f: v7e0V6b1V1b025f(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x25f: v7e2V6b1V1b025f(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x25f: v7e4V6b1V1b025f(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x25f: v7e6V6b1V1b025f(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b025f(0xa0), v7e2V6b1V1b025f(0x1)
    0x7e7S0x6b1S0x1b00x25f: v7e7V6b1V1b025f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b025f(0x10000000000000000000000000000000000000000), v7e0V6b1V1b025f(0x1)
    0x7e8S0x6b1S0x1b00x25f: v7e8V6b1V1b025f = AND v7e7V6b1V1b025f(0xffffffffffffffffffffffffffffffffffffffff), v440
    0x7eaS0x6b1S0x1b00x25f: JUMP v7d2V6b1V1b025f(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x25f
    prev=[0x7dfB0x6b1B0x1b00x25f], succ=[0xa74B0x1b00x25f]
    =================================
    0xbc6S0x6b1S0x1b00x25f: JUMP v6b2V1b025f(0xa74)

    Begin block 0xa74B0x1b00x25f
    prev=[0xbc1B0x6b1B0x1b00x25f], succ=[0xae3B0x1b00x25f]
    =================================
    0xa76S0x1b00x25f: MSTORE v25f1b3, v7e8V6b1V1b025f
    0xa79S0x1b00x25f: JUMP v771V1b025f(0xae3)

    Begin block 0xae3B0x1b00x25f
    prev=[0xa74B0x1b00x25f], succ=[0x8850x25f]
    =================================
    0xae8S0x1b00x25f: JUMP v25f1b4(0x885)

    Begin block 0x8850x25f
    prev=[0xae3B0x1b00x25f], succ=[]
    =================================
    0x8860x25f: v25f886(0x40) = CONST 
    0x8880x25f: v25f888 = MLOAD v25f886(0x40)
    0x88b0x25f: v25f88b(0x20) = SUB v770V1b025f, v25f888
    0x88d0x25f: RETURN v25f888, v25f88b(0x20)

}

function implementation()() public {
    Begin block 0x27f
    prev=[], succ=[0x287, 0x28b]
    =================================
    0x280: v280 = CALLVALUE 
    0x282: v282 = ISZERO v280
    0x283: v283(0x28b) = CONST 
    0x286: JUMPI v283(0x28b), v282

    Begin block 0x287
    prev=[0x27f], succ=[]
    =================================
    0x287: v287(0x0) = CONST 
    0x28a: REVERT v287(0x0), v287(0x0)

    Begin block 0x28b
    prev=[0x27f], succ=[0x443]
    =================================
    0x28d: v28d(0x1b0) = CONST 
    0x290: v290(0x443) = CONST 
    0x293: JUMP v290(0x443)

    Begin block 0x443
    prev=[0x28b], succ=[0x1b00x27f]
    =================================
    0x444: v444(0x4) = CONST 
    0x446: v446 = SLOAD v444(0x4)
    0x447: v447(0x1) = CONST 
    0x449: v449(0x1) = CONST 
    0x44b: v44b(0xa0) = CONST 
    0x44d: v44d(0x10000000000000000000000000000000000000000) = SHL v44b(0xa0), v449(0x1)
    0x44e: v44e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v44d(0x10000000000000000000000000000000000000000), v447(0x1)
    0x44f: v44f = AND v44e(0xffffffffffffffffffffffffffffffffffffffff), v446
    0x451: JUMP v28d(0x1b0)

    Begin block 0x1b00x27f
    prev=[0x443], succ=[0x76cB0x1b00x27f]
    =================================
    0x1b10x27f: v27f1b1(0x40) = CONST 
    0x1b30x27f: v27f1b3 = MLOAD v27f1b1(0x40)
    0x1b40x27f: v27f1b4(0x885) = CONST 
    0x1b90x27f: v27f1b9(0x76c) = CONST 
    0x1bc0x27f: JUMP v27f1b9(0x76c)

    Begin block 0x76cB0x1b00x27f
    prev=[0x1b00x27f], succ=[0x6b1B0x1b00x27f]
    =================================
    0x76dS0x1b00x27f: v76dV1b027f(0x20) = CONST 
    0x770S0x1b00x27f: v770V1b027f = ADD v27f1b3, v76dV1b027f(0x20)
    0x771S0x1b00x27f: v771V1b027f(0xae3) = CONST 
    0x776S0x1b00x27f: v776V1b027f(0x6b1) = CONST 
    0x779S0x1b00x27f: JUMP v776V1b027f(0x6b1)

    Begin block 0x6b1B0x1b00x27f
    prev=[0x76cB0x1b00x27f], succ=[0x7cfB0x6b1B0x1b00x27f]
    =================================
    0x6b2S0x1b00x27f: v6b2V1b027f(0xa74) = CONST 
    0x6b6S0x1b00x27f: v6b6V1b027f(0x7cf) = CONST 
    0x6b9S0x1b00x27f: JUMP v6b6V1b027f(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x27f
    prev=[0x6b1B0x1b00x27f], succ=[0x7dfB0x6b1B0x1b00x27f]
    =================================
    0x7d0S0x6b1S0x1b00x27f: v7d0V6b1V1b027f(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x27f: v7d2V6b1V1b027f(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x27f: v7d6V6b1V1b027f(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x27f: JUMP v7d6V6b1V1b027f(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x27f
    prev=[0x7cfB0x6b1B0x1b00x27f], succ=[0xbc1B0x6b1B0x1b00x27f]
    =================================
    0x7e0S0x6b1S0x1b00x27f: v7e0V6b1V1b027f(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x27f: v7e2V6b1V1b027f(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x27f: v7e4V6b1V1b027f(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x27f: v7e6V6b1V1b027f(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b027f(0xa0), v7e2V6b1V1b027f(0x1)
    0x7e7S0x6b1S0x1b00x27f: v7e7V6b1V1b027f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b027f(0x10000000000000000000000000000000000000000), v7e0V6b1V1b027f(0x1)
    0x7e8S0x6b1S0x1b00x27f: v7e8V6b1V1b027f = AND v7e7V6b1V1b027f(0xffffffffffffffffffffffffffffffffffffffff), v44f
    0x7eaS0x6b1S0x1b00x27f: JUMP v7d2V6b1V1b027f(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x27f
    prev=[0x7dfB0x6b1B0x1b00x27f], succ=[0xa74B0x1b00x27f]
    =================================
    0xbc6S0x6b1S0x1b00x27f: JUMP v6b2V1b027f(0xa74)

    Begin block 0xa74B0x1b00x27f
    prev=[0xbc1B0x6b1B0x1b00x27f], succ=[0xae3B0x1b00x27f]
    =================================
    0xa76S0x1b00x27f: MSTORE v27f1b3, v7e8V6b1V1b027f
    0xa79S0x1b00x27f: JUMP v771V1b027f(0xae3)

    Begin block 0xae3B0x1b00x27f
    prev=[0xa74B0x1b00x27f], succ=[0x8850x27f]
    =================================
    0xae8S0x1b00x27f: JUMP v27f1b4(0x885)

    Begin block 0x8850x27f
    prev=[0xae3B0x1b00x27f], succ=[]
    =================================
    0x8860x27f: v27f886(0x40) = CONST 
    0x8880x27f: v27f888 = MLOAD v27f886(0x40)
    0x88b0x27f: v27f88b(0x20) = SUB v770V1b027f, v27f888
    0x88d0x27f: RETURN v27f888, v27f88b(0x20)

}

function reps(address)() public {
    Begin block 0x294
    prev=[], succ=[0x29c, 0x2a0]
    =================================
    0x295: v295 = CALLVALUE 
    0x297: v297 = ISZERO v295
    0x298: v298(0x2a0) = CONST 
    0x29b: JUMPI v298(0x2a0), v297

    Begin block 0x29c
    prev=[0x294], succ=[]
    =================================
    0x29c: v29c(0x0) = CONST 
    0x29f: REVERT v29c(0x0), v29c(0x0)

    Begin block 0x2a0
    prev=[0x294], succ=[0x659B0x2a0]
    =================================
    0x2a2: v2a2(0x208) = CONST 
    0x2a5: v2a5(0x2af) = CONST 
    0x2a8: v2a8 = CALLDATASIZE 
    0x2a9: v2a9(0x4) = CONST 
    0x2ab: v2ab(0x659) = CONST 
    0x2ae: JUMP v2ab(0x659)

    Begin block 0x659B0x2a0
    prev=[0x2a0], succ=[0x667B0x2a0, 0x66bB0x2a0]
    =================================
    0x65aS0x2a0: v65aV2a0(0x0) = CONST 
    0x65cS0x2a0: v65cV2a0(0x20) = CONST 
    0x660S0x2a0: v660V2a0 = SUB v2a8, v2a9(0x4)
    0x661S0x2a0: v661V2a0 = SLT v660V2a0, v65cV2a0(0x20)
    0x662S0x2a0: v662V2a0 = ISZERO v661V2a0
    0x663S0x2a0: v663V2a0(0x66b) = CONST 
    0x666S0x2a0: JUMPI v663V2a0(0x66b), v662V2a0

    Begin block 0x667B0x2a0
    prev=[0x659B0x2a0], succ=[]
    =================================
    0x667S0x2a0: v667V2a0(0x0) = CONST 
    0x66aS0x2a0: REVERT v667V2a0(0x0), v667V2a0(0x0)

    Begin block 0x66bB0x2a0
    prev=[0x659B0x2a0], succ=[0x648B0x66bB0x2a0]
    =================================
    0x66cS0x2a0: v66cV2a0(0x0) = CONST 
    0x66eS0x2a0: v66eV2a0(0xa4d) = CONST 
    0x673S0x2a0: v673V2a0(0x648) = CONST 
    0x676S0x2a0: JUMP v673V2a0(0x648)

    Begin block 0x648B0x66bB0x2a0
    prev=[0x66bB0x2a0], succ=[0x7eeB0x648B0x66bB0x2a0]
    =================================
    0x64aS0x66bS0x2a0: v64aV66bV2a0 = CALLDATALOAD v2a9(0x4)
    0x64bS0x66bS0x2a0: v64bV66bV2a0(0xa28) = CONST 
    0x64fS0x66bS0x2a0: v64fV66bV2a0(0x7ee) = CONST 
    0x652S0x66bS0x2a0: JUMP v64fV66bV2a0(0x7ee), v64aV66bV2a0, v64bV66bV2a0(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x2a0
    prev=[0x648B0x66bB0x2a0], succ=[0x7cfB0x7eeB0x648B0x66bB0x2a0]
    =================================
    0x7efS0x648S0x66bS0x2a0: v7efV648V66bV2a0(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x2a0: v7f3V648V66bV2a0(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x2a0: JUMP v7f3V648V66bV2a0(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x2a0
    prev=[0x7eeB0x648B0x66bB0x2a0], succ=[0x7dfB0x7eeB0x648B0x66bB0x2a0]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x2a0: v7d0V7eeV648V66bV2a0(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x2a0: v7d2V7eeV648V66bV2a0(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x2a0: v7d6V7eeV648V66bV2a0(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x2a0: JUMP v7d6V7eeV648V66bV2a0(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x2a0
    prev=[0x7cfB0x7eeB0x648B0x66bB0x2a0], succ=[0xbc1B0x7eeB0x648B0x66bB0x2a0]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x2a0: v7e0V7eeV648V66bV2a0(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x2a0: v7e2V7eeV648V66bV2a0(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x2a0: v7e4V7eeV648V66bV2a0(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x2a0: v7e6V7eeV648V66bV2a0(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV2a0(0xa0), v7e2V7eeV648V66bV2a0(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x2a0: v7e7V7eeV648V66bV2a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV2a0(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV2a0(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x2a0: v7e8V7eeV648V66bV2a0 = AND v7e7V7eeV648V66bV2a0(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV2a0
    0x7eaS0x7eeS0x648S0x66bS0x2a0: JUMP v7d2V7eeV648V66bV2a0(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x2a0
    prev=[0x7dfB0x7eeB0x648B0x66bB0x2a0], succ=[0x7f7B0x648B0x66bB0x2a0]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x2a0: JUMP v7efV648V66bV2a0(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x2a0
    prev=[0xbc1B0x7eeB0x648B0x66bB0x2a0], succ=[0x7feB0x648B0x66bB0x2a0, 0xbe6B0x648B0x66bB0x2a0]
    =================================
    0x7f9S0x648S0x66bS0x2a0: v7f9V648V66bV2a0 = EQ v64aV66bV2a0, v7e8V7eeV648V66bV2a0
    0x7faS0x648S0x66bS0x2a0: v7faV648V66bV2a0(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x2a0: JUMPI v7faV648V66bV2a0(0xbe6), v7f9V648V66bV2a0

    Begin block 0x7feB0x648B0x66bB0x2a0
    prev=[0x7f7B0x648B0x66bB0x2a0], succ=[]
    =================================
    0x7feS0x648S0x66bS0x2a0: v7feV648V66bV2a0(0x0) = CONST 
    0x801S0x648S0x66bS0x2a0: REVERT v7feV648V66bV2a0(0x0), v7feV648V66bV2a0(0x0)

    Begin block 0xbe6B0x648B0x66bB0x2a0
    prev=[0x7f7B0x648B0x66bB0x2a0], succ=[0xa28B0x66bB0x2a0]
    =================================
    0xbe8S0x648S0x66bS0x2a0: JUMP v64bV66bV2a0(0xa28)

    Begin block 0xa28B0x66bB0x2a0
    prev=[0xbe6B0x648B0x66bB0x2a0], succ=[0xa4dB0x2a0]
    =================================
    0xa2dS0x66bS0x2a0: JUMP v66eV2a0(0xa4d)

    Begin block 0xa4dB0x2a0
    prev=[0xa28B0x66bB0x2a0], succ=[0x2af]
    =================================
    0xa54S0x2a0: JUMP v2a5(0x2af)

    Begin block 0x2af
    prev=[0xa4dB0x2a0], succ=[0x452]
    =================================
    0x2b0: v2b0(0x452) = CONST 
    0x2b3: JUMP v2b0(0x452)

    Begin block 0x452
    prev=[0x2af], succ=[0x2080x294]
    =================================
    0x453: v453(0xa) = CONST 
    0x455: v455(0x20) = CONST 
    0x457: MSTORE v455(0x20), v453(0xa)
    0x458: v458(0x0) = CONST 
    0x45c: MSTORE v458(0x0), v64aV66bV2a0
    0x45d: v45d(0x40) = CONST 
    0x460: v460 = SHA3 v458(0x0), v45d(0x40)
    0x461: v461 = SLOAD v460
    0x462: v462(0xff) = CONST 
    0x464: v464 = AND v462(0xff), v461
    0x466: JUMP v2a2(0x208)

    Begin block 0x2080x294
    prev=[0x452], succ=[0x77aB0x2080x294]
    =================================
    0x2090x294: v294209(0x40) = CONST 
    0x20b0x294: v29420b = MLOAD v294209(0x40)
    0x20c0x294: v29420c(0x8d5) = CONST 
    0x2110x294: v294211(0x77a) = CONST 
    0x2140x294: JUMP v294211(0x77a)

    Begin block 0x77aB0x2080x294
    prev=[0x2080x294], succ=[0x6c0B0x2080x294]
    =================================
    0x77bS0x2080x294: v77bV208294(0x20) = CONST 
    0x77eS0x2080x294: v77eV208294 = ADD v29420b, v77bV208294(0x20)
    0x77fS0x2080x294: v77fV208294(0xb08) = CONST 
    0x784S0x2080x294: v784V208294(0x6c0) = CONST 
    0x787S0x2080x294: JUMP v784V208294(0x6c0)

    Begin block 0x6c0B0x2080x294
    prev=[0x77aB0x2080x294], succ=[0x7daB0x2080x294]
    =================================
    0x6c1S0x2080x294: v6c1V208294(0xa99) = CONST 
    0x6c5S0x2080x294: v6c5V208294(0x7da) = CONST 
    0x6c8S0x2080x294: JUMP v6c5V208294(0x7da)

    Begin block 0x7daB0x2080x294
    prev=[0x6c0B0x2080x294], succ=[0xa99B0x2080x294]
    =================================
    0x7dbS0x2080x294: v7dbV208294 = ISZERO v464
    0x7dcS0x2080x294: v7dcV208294 = ISZERO v7dbV208294
    0x7deS0x2080x294: JUMP v6c1V208294(0xa99)

    Begin block 0xa99B0x2080x294
    prev=[0x7daB0x2080x294], succ=[0xb08B0x2080x294]
    =================================
    0xa9bS0x2080x294: MSTORE v29420b, v7dcV208294
    0xa9eS0x2080x294: JUMP v77fV208294(0xb08)

    Begin block 0xb08B0x2080x294
    prev=[0xa99B0x2080x294], succ=[0x8d50x294]
    =================================
    0xb0dS0x2080x294: JUMP v29420c(0x8d5)

    Begin block 0x8d50x294
    prev=[0xb08B0x2080x294], succ=[]
    =================================
    0x8d60x294: v2948d6(0x40) = CONST 
    0x8d80x294: v2948d8 = MLOAD v2948d6(0x40)
    0x8db0x294: v2948db(0x20) = SUB v77eV208294, v2948d8
    0x8dd0x294: RETURN v2948d8, v2948db(0x20)

}

function rewardRate()() public {
    Begin block 0x2b4
    prev=[], succ=[0x2bc, 0x2c0]
    =================================
    0x2b5: v2b5 = CALLVALUE 
    0x2b7: v2b7 = ISZERO v2b5
    0x2b8: v2b8(0x2c0) = CONST 
    0x2bb: JUMPI v2b8(0x2c0), v2b7

    Begin block 0x2bc
    prev=[0x2b4], succ=[]
    =================================
    0x2bc: v2bc(0x0) = CONST 
    0x2bf: REVERT v2bc(0x0), v2bc(0x0)

    Begin block 0x2c0
    prev=[0x2b4], succ=[0x467]
    =================================
    0x2c2: v2c2(0x1e6) = CONST 
    0x2c5: v2c5(0x467) = CONST 
    0x2c8: JUMP v2c5(0x467)

    Begin block 0x467
    prev=[0x2c0], succ=[0x1e60x2b4]
    =================================
    0x468: v468(0x12) = CONST 
    0x46a: v46a = SLOAD v468(0x12)
    0x46c: JUMP v2c2(0x1e6)

    Begin block 0x1e60x2b4
    prev=[0x467], succ=[0x7b8B0x1e60x2b4]
    =================================
    0x1e70x2b4: v2b41e7(0x40) = CONST 
    0x1e90x2b4: v2b41e9 = MLOAD v2b41e7(0x40)
    0x1ea0x2b4: v2b41ea(0x8ad) = CONST 
    0x1ef0x2b4: v2b41ef(0x7b8) = CONST 
    0x1f20x2b4: JUMP v2b41ef(0x7b8)

    Begin block 0x7b8B0x1e60x2b4
    prev=[0x1e60x2b4], succ=[0x763B0x1e60x2b4]
    =================================
    0x7b9S0x1e60x2b4: v7b9V1e62b4(0x20) = CONST 
    0x7bcS0x1e60x2b4: v7bcV1e62b4 = ADD v2b41e9, v7b9V1e62b4(0x20)
    0x7bdS0x1e60x2b4: v7bdV1e62b4(0xb9c) = CONST 
    0x7c2S0x1e60x2b4: v7c2V1e62b4(0x763) = CONST 
    0x7c5S0x1e60x2b4: JUMP v7c2V1e62b4(0x763)

    Begin block 0x763B0x1e60x2b4
    prev=[0x7b8B0x1e60x2b4], succ=[0x7ebB0x763B0x1e60x2b4]
    =================================
    0x764S0x1e60x2b4: v764V1e62b4(0xabe) = CONST 
    0x768S0x1e60x2b4: v768V1e62b4(0x7eb) = CONST 
    0x76bS0x1e60x2b4: JUMP v768V1e62b4(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x2b4
    prev=[0x763B0x1e60x2b4], succ=[0xabeB0x1e60x2b4]
    =================================
    0x7edS0x763S0x1e60x2b4: JUMP v764V1e62b4(0xabe)

    Begin block 0xabeB0x1e60x2b4
    prev=[0x7ebB0x763B0x1e60x2b4], succ=[0xb9cB0x1e60x2b4]
    =================================
    0xac0S0x1e60x2b4: MSTORE v2b41e9, v46a
    0xac3S0x1e60x2b4: JUMP v7bdV1e62b4(0xb9c)

    Begin block 0xb9cB0x1e60x2b4
    prev=[0xabeB0x1e60x2b4], succ=[0x8ad0x2b4]
    =================================
    0xba1S0x1e60x2b4: JUMP v2b41ea(0x8ad)

    Begin block 0x8ad0x2b4
    prev=[0xb9cB0x1e60x2b4], succ=[]
    =================================
    0x8ae0x2b4: v2b48ae(0x40) = CONST 
    0x8b00x2b4: v2b48b0 = MLOAD v2b48ae(0x40)
    0x8b30x2b4: v2b48b3(0x20) = SUB v7bcV1e62b4, v2b48b0
    0x8b50x2b4: RETURN v2b48b0, v2b48b3(0x20)

}

function userRewardPerTokenPaid(address)() public {
    Begin block 0x2c9
    prev=[], succ=[0x2d1, 0x2d5]
    =================================
    0x2ca: v2ca = CALLVALUE 
    0x2cc: v2cc = ISZERO v2ca
    0x2cd: v2cd(0x2d5) = CONST 
    0x2d0: JUMPI v2cd(0x2d5), v2cc

    Begin block 0x2d1
    prev=[0x2c9], succ=[]
    =================================
    0x2d1: v2d1(0x0) = CONST 
    0x2d4: REVERT v2d1(0x0), v2d1(0x0)

    Begin block 0x2d5
    prev=[0x2c9], succ=[0x659B0x2d5]
    =================================
    0x2d7: v2d7(0x1e6) = CONST 
    0x2da: v2da(0x2e4) = CONST 
    0x2dd: v2dd = CALLDATASIZE 
    0x2de: v2de(0x4) = CONST 
    0x2e0: v2e0(0x659) = CONST 
    0x2e3: JUMP v2e0(0x659)

    Begin block 0x659B0x2d5
    prev=[0x2d5], succ=[0x667B0x2d5, 0x66bB0x2d5]
    =================================
    0x65aS0x2d5: v65aV2d5(0x0) = CONST 
    0x65cS0x2d5: v65cV2d5(0x20) = CONST 
    0x660S0x2d5: v660V2d5 = SUB v2dd, v2de(0x4)
    0x661S0x2d5: v661V2d5 = SLT v660V2d5, v65cV2d5(0x20)
    0x662S0x2d5: v662V2d5 = ISZERO v661V2d5
    0x663S0x2d5: v663V2d5(0x66b) = CONST 
    0x666S0x2d5: JUMPI v663V2d5(0x66b), v662V2d5

    Begin block 0x667B0x2d5
    prev=[0x659B0x2d5], succ=[]
    =================================
    0x667S0x2d5: v667V2d5(0x0) = CONST 
    0x66aS0x2d5: REVERT v667V2d5(0x0), v667V2d5(0x0)

    Begin block 0x66bB0x2d5
    prev=[0x659B0x2d5], succ=[0x648B0x66bB0x2d5]
    =================================
    0x66cS0x2d5: v66cV2d5(0x0) = CONST 
    0x66eS0x2d5: v66eV2d5(0xa4d) = CONST 
    0x673S0x2d5: v673V2d5(0x648) = CONST 
    0x676S0x2d5: JUMP v673V2d5(0x648)

    Begin block 0x648B0x66bB0x2d5
    prev=[0x66bB0x2d5], succ=[0x7eeB0x648B0x66bB0x2d5]
    =================================
    0x64aS0x66bS0x2d5: v64aV66bV2d5 = CALLDATALOAD v2de(0x4)
    0x64bS0x66bS0x2d5: v64bV66bV2d5(0xa28) = CONST 
    0x64fS0x66bS0x2d5: v64fV66bV2d5(0x7ee) = CONST 
    0x652S0x66bS0x2d5: JUMP v64fV66bV2d5(0x7ee), v64aV66bV2d5, v64bV66bV2d5(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x2d5
    prev=[0x648B0x66bB0x2d5], succ=[0x7cfB0x7eeB0x648B0x66bB0x2d5]
    =================================
    0x7efS0x648S0x66bS0x2d5: v7efV648V66bV2d5(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x2d5: v7f3V648V66bV2d5(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x2d5: JUMP v7f3V648V66bV2d5(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x2d5
    prev=[0x7eeB0x648B0x66bB0x2d5], succ=[0x7dfB0x7eeB0x648B0x66bB0x2d5]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x2d5: v7d0V7eeV648V66bV2d5(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x2d5: v7d2V7eeV648V66bV2d5(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x2d5: v7d6V7eeV648V66bV2d5(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x2d5: JUMP v7d6V7eeV648V66bV2d5(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x2d5
    prev=[0x7cfB0x7eeB0x648B0x66bB0x2d5], succ=[0xbc1B0x7eeB0x648B0x66bB0x2d5]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x2d5: v7e0V7eeV648V66bV2d5(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x2d5: v7e2V7eeV648V66bV2d5(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x2d5: v7e4V7eeV648V66bV2d5(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x2d5: v7e6V7eeV648V66bV2d5(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV2d5(0xa0), v7e2V7eeV648V66bV2d5(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x2d5: v7e7V7eeV648V66bV2d5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV2d5(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV2d5(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x2d5: v7e8V7eeV648V66bV2d5 = AND v7e7V7eeV648V66bV2d5(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV2d5
    0x7eaS0x7eeS0x648S0x66bS0x2d5: JUMP v7d2V7eeV648V66bV2d5(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x2d5
    prev=[0x7dfB0x7eeB0x648B0x66bB0x2d5], succ=[0x7f7B0x648B0x66bB0x2d5]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x2d5: JUMP v7efV648V66bV2d5(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x2d5
    prev=[0xbc1B0x7eeB0x648B0x66bB0x2d5], succ=[0x7feB0x648B0x66bB0x2d5, 0xbe6B0x648B0x66bB0x2d5]
    =================================
    0x7f9S0x648S0x66bS0x2d5: v7f9V648V66bV2d5 = EQ v64aV66bV2d5, v7e8V7eeV648V66bV2d5
    0x7faS0x648S0x66bS0x2d5: v7faV648V66bV2d5(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x2d5: JUMPI v7faV648V66bV2d5(0xbe6), v7f9V648V66bV2d5

    Begin block 0x7feB0x648B0x66bB0x2d5
    prev=[0x7f7B0x648B0x66bB0x2d5], succ=[]
    =================================
    0x7feS0x648S0x66bS0x2d5: v7feV648V66bV2d5(0x0) = CONST 
    0x801S0x648S0x66bS0x2d5: REVERT v7feV648V66bV2d5(0x0), v7feV648V66bV2d5(0x0)

    Begin block 0xbe6B0x648B0x66bB0x2d5
    prev=[0x7f7B0x648B0x66bB0x2d5], succ=[0xa28B0x66bB0x2d5]
    =================================
    0xbe8S0x648S0x66bS0x2d5: JUMP v64bV66bV2d5(0xa28)

    Begin block 0xa28B0x66bB0x2d5
    prev=[0xbe6B0x648B0x66bB0x2d5], succ=[0xa4dB0x2d5]
    =================================
    0xa2dS0x66bS0x2d5: JUMP v66eV2d5(0xa4d)

    Begin block 0xa4dB0x2d5
    prev=[0xa28B0x66bB0x2d5], succ=[0x2e4]
    =================================
    0xa54S0x2d5: JUMP v2da(0x2e4)

    Begin block 0x2e4
    prev=[0xa4dB0x2d5], succ=[0x46d]
    =================================
    0x2e5: v2e5(0x46d) = CONST 
    0x2e8: JUMP v2e5(0x46d)

    Begin block 0x46d
    prev=[0x2e4], succ=[0x1e60x2c9]
    =================================
    0x46e: v46e(0xc) = CONST 
    0x470: v470(0x20) = CONST 
    0x472: MSTORE v470(0x20), v46e(0xc)
    0x473: v473(0x0) = CONST 
    0x477: MSTORE v473(0x0), v64aV66bV2d5
    0x478: v478(0x40) = CONST 
    0x47b: v47b = SHA3 v473(0x0), v478(0x40)
    0x47c: v47c = SLOAD v47b
    0x47e: JUMP v2d7(0x1e6)

    Begin block 0x1e60x2c9
    prev=[0x46d], succ=[0x7b8B0x1e60x2c9]
    =================================
    0x1e70x2c9: v2c91e7(0x40) = CONST 
    0x1e90x2c9: v2c91e9 = MLOAD v2c91e7(0x40)
    0x1ea0x2c9: v2c91ea(0x8ad) = CONST 
    0x1ef0x2c9: v2c91ef(0x7b8) = CONST 
    0x1f20x2c9: JUMP v2c91ef(0x7b8)

    Begin block 0x7b8B0x1e60x2c9
    prev=[0x1e60x2c9], succ=[0x763B0x1e60x2c9]
    =================================
    0x7b9S0x1e60x2c9: v7b9V1e62c9(0x20) = CONST 
    0x7bcS0x1e60x2c9: v7bcV1e62c9 = ADD v2c91e9, v7b9V1e62c9(0x20)
    0x7bdS0x1e60x2c9: v7bdV1e62c9(0xb9c) = CONST 
    0x7c2S0x1e60x2c9: v7c2V1e62c9(0x763) = CONST 
    0x7c5S0x1e60x2c9: JUMP v7c2V1e62c9(0x763)

    Begin block 0x763B0x1e60x2c9
    prev=[0x7b8B0x1e60x2c9], succ=[0x7ebB0x763B0x1e60x2c9]
    =================================
    0x764S0x1e60x2c9: v764V1e62c9(0xabe) = CONST 
    0x768S0x1e60x2c9: v768V1e62c9(0x7eb) = CONST 
    0x76bS0x1e60x2c9: JUMP v768V1e62c9(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x2c9
    prev=[0x763B0x1e60x2c9], succ=[0xabeB0x1e60x2c9]
    =================================
    0x7edS0x763S0x1e60x2c9: JUMP v764V1e62c9(0xabe)

    Begin block 0xabeB0x1e60x2c9
    prev=[0x7ebB0x763B0x1e60x2c9], succ=[0xb9cB0x1e60x2c9]
    =================================
    0xac0S0x1e60x2c9: MSTORE v2c91e9, v47c
    0xac3S0x1e60x2c9: JUMP v7bdV1e62c9(0xb9c)

    Begin block 0xb9cB0x1e60x2c9
    prev=[0xabeB0x1e60x2c9], succ=[0x8ad0x2c9]
    =================================
    0xba1S0x1e60x2c9: JUMP v2c91ea(0x8ad)

    Begin block 0x8ad0x2c9
    prev=[0xb9cB0x1e60x2c9], succ=[]
    =================================
    0x8ae0x2c9: v2c98ae(0x40) = CONST 
    0x8b00x2c9: v2c98b0 = MLOAD v2c98ae(0x40)
    0x8b30x2c9: v2c98b3(0x20) = SUB v7bcV1e62c9, v2c98b0
    0x8b50x2c9: RETURN v2c98b0, v2c98b3(0x20)

}

function owner()() public {
    Begin block 0x2e9
    prev=[], succ=[0x2f1, 0x2f5]
    =================================
    0x2ea: v2ea = CALLVALUE 
    0x2ec: v2ec = ISZERO v2ea
    0x2ed: v2ed(0x2f5) = CONST 
    0x2f0: JUMPI v2ed(0x2f5), v2ec

    Begin block 0x2f1
    prev=[0x2e9], succ=[]
    =================================
    0x2f1: v2f1(0x0) = CONST 
    0x2f4: REVERT v2f1(0x0), v2f1(0x0)

    Begin block 0x2f5
    prev=[0x2e9], succ=[0x47f]
    =================================
    0x2f7: v2f7(0x1b0) = CONST 
    0x2fa: v2fa(0x47f) = CONST 
    0x2fd: JUMP v2fa(0x47f)

    Begin block 0x47f
    prev=[0x2f5], succ=[0x1b00x2e9]
    =================================
    0x480: v480(0x0) = CONST 
    0x482: v482 = SLOAD v480(0x0)
    0x483: v483(0x1) = CONST 
    0x485: v485(0x1) = CONST 
    0x487: v487(0xa0) = CONST 
    0x489: v489(0x10000000000000000000000000000000000000000) = SHL v487(0xa0), v485(0x1)
    0x48a: v48a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v489(0x10000000000000000000000000000000000000000), v483(0x1)
    0x48b: v48b = AND v48a(0xffffffffffffffffffffffffffffffffffffffff), v482
    0x48d: JUMP v2f7(0x1b0)

    Begin block 0x1b00x2e9
    prev=[0x47f], succ=[0x76cB0x1b00x2e9]
    =================================
    0x1b10x2e9: v2e91b1(0x40) = CONST 
    0x1b30x2e9: v2e91b3 = MLOAD v2e91b1(0x40)
    0x1b40x2e9: v2e91b4(0x885) = CONST 
    0x1b90x2e9: v2e91b9(0x76c) = CONST 
    0x1bc0x2e9: JUMP v2e91b9(0x76c)

    Begin block 0x76cB0x1b00x2e9
    prev=[0x1b00x2e9], succ=[0x6b1B0x1b00x2e9]
    =================================
    0x76dS0x1b00x2e9: v76dV1b02e9(0x20) = CONST 
    0x770S0x1b00x2e9: v770V1b02e9 = ADD v2e91b3, v76dV1b02e9(0x20)
    0x771S0x1b00x2e9: v771V1b02e9(0xae3) = CONST 
    0x776S0x1b00x2e9: v776V1b02e9(0x6b1) = CONST 
    0x779S0x1b00x2e9: JUMP v776V1b02e9(0x6b1)

    Begin block 0x6b1B0x1b00x2e9
    prev=[0x76cB0x1b00x2e9], succ=[0x7cfB0x6b1B0x1b00x2e9]
    =================================
    0x6b2S0x1b00x2e9: v6b2V1b02e9(0xa74) = CONST 
    0x6b6S0x1b00x2e9: v6b6V1b02e9(0x7cf) = CONST 
    0x6b9S0x1b00x2e9: JUMP v6b6V1b02e9(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x2e9
    prev=[0x6b1B0x1b00x2e9], succ=[0x7dfB0x6b1B0x1b00x2e9]
    =================================
    0x7d0S0x6b1S0x1b00x2e9: v7d0V6b1V1b02e9(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x2e9: v7d2V6b1V1b02e9(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x2e9: v7d6V6b1V1b02e9(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x2e9: JUMP v7d6V6b1V1b02e9(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x2e9
    prev=[0x7cfB0x6b1B0x1b00x2e9], succ=[0xbc1B0x6b1B0x1b00x2e9]
    =================================
    0x7e0S0x6b1S0x1b00x2e9: v7e0V6b1V1b02e9(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x2e9: v7e2V6b1V1b02e9(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x2e9: v7e4V6b1V1b02e9(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x2e9: v7e6V6b1V1b02e9(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b02e9(0xa0), v7e2V6b1V1b02e9(0x1)
    0x7e7S0x6b1S0x1b00x2e9: v7e7V6b1V1b02e9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b02e9(0x10000000000000000000000000000000000000000), v7e0V6b1V1b02e9(0x1)
    0x7e8S0x6b1S0x1b00x2e9: v7e8V6b1V1b02e9 = AND v7e7V6b1V1b02e9(0xffffffffffffffffffffffffffffffffffffffff), v48b
    0x7eaS0x6b1S0x1b00x2e9: JUMP v7d2V6b1V1b02e9(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x2e9
    prev=[0x7dfB0x6b1B0x1b00x2e9], succ=[0xa74B0x1b00x2e9]
    =================================
    0xbc6S0x6b1S0x1b00x2e9: JUMP v6b2V1b02e9(0xa74)

    Begin block 0xa74B0x1b00x2e9
    prev=[0xbc1B0x6b1B0x1b00x2e9], succ=[0xae3B0x1b00x2e9]
    =================================
    0xa76S0x1b00x2e9: MSTORE v2e91b3, v7e8V6b1V1b02e9
    0xa79S0x1b00x2e9: JUMP v771V1b02e9(0xae3)

    Begin block 0xae3B0x1b00x2e9
    prev=[0xa74B0x1b00x2e9], succ=[0x8850x2e9]
    =================================
    0xae8S0x1b00x2e9: JUMP v2e91b4(0x885)

    Begin block 0x8850x2e9
    prev=[0xae3B0x1b00x2e9], succ=[]
    =================================
    0x8860x2e9: v2e9886(0x40) = CONST 
    0x8880x2e9: v2e9888 = MLOAD v2e9886(0x40)
    0x88b0x2e9: v2e988b(0x20) = SUB v770V1b02e9, v2e9888
    0x88d0x2e9: RETURN v2e9888, v2e988b(0x20)

}

function isOwner()() public {
    Begin block 0x2fe
    prev=[], succ=[0x306, 0x30a]
    =================================
    0x2ff: v2ff = CALLVALUE 
    0x301: v301 = ISZERO v2ff
    0x302: v302(0x30a) = CONST 
    0x305: JUMPI v302(0x30a), v301

    Begin block 0x306
    prev=[0x2fe], succ=[]
    =================================
    0x306: v306(0x0) = CONST 
    0x309: REVERT v306(0x0), v306(0x0)

    Begin block 0x30a
    prev=[0x2fe], succ=[0x48eB0x30a]
    =================================
    0x30c: v30c(0x208) = CONST 
    0x30f: v30f(0x48e) = CONST 
    0x312: JUMP v30f(0x48e)

    Begin block 0x48eB0x30a
    prev=[0x30a], succ=[0x587B0x30a]
    =================================
    0x48fS0x30a: v48fV30a(0x0) = CONST 
    0x492S0x30a: v492V30a = SLOAD v48fV30a(0x0)
    0x493S0x30a: v493V30a(0x1) = CONST 
    0x495S0x30a: v495V30a(0x1) = CONST 
    0x497S0x30a: v497V30a(0xa0) = CONST 
    0x499S0x30a: v499V30a(0x10000000000000000000000000000000000000000) = SHL v497V30a(0xa0), v495V30a(0x1)
    0x49aS0x30a: v49aV30a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v499V30a(0x10000000000000000000000000000000000000000), v493V30a(0x1)
    0x49bS0x30a: v49bV30a = AND v49aV30a(0xffffffffffffffffffffffffffffffffffffffff), v492V30a
    0x49cS0x30a: v49cV30a(0x4a3) = CONST 
    0x49fS0x30a: v49fV30a(0x587) = CONST 
    0x4a2S0x30a: JUMP v49fV30a(0x587)

    Begin block 0x587B0x30a
    prev=[0x48eB0x30a], succ=[0x4a3B0x30a]
    =================================
    0x588S0x30a: v588V30a = CALLER 
    0x58aS0x30a: JUMP v49cV30a(0x4a3)

    Begin block 0x4a3B0x30a
    prev=[0x587B0x30a], succ=[0x2080x2fe]
    =================================
    0x4a4S0x30a: v4a4V30a(0x1) = CONST 
    0x4a6S0x30a: v4a6V30a(0x1) = CONST 
    0x4a8S0x30a: v4a8V30a(0xa0) = CONST 
    0x4aaS0x30a: v4aaV30a(0x10000000000000000000000000000000000000000) = SHL v4a8V30a(0xa0), v4a6V30a(0x1)
    0x4abS0x30a: v4abV30a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4aaV30a(0x10000000000000000000000000000000000000000), v4a4V30a(0x1)
    0x4acS0x30a: v4acV30a = AND v4abV30a(0xffffffffffffffffffffffffffffffffffffffff), v588V30a
    0x4adS0x30a: v4adV30a = EQ v4acV30a, v49bV30a
    0x4b1S0x30a: JUMP v30c(0x208)

    Begin block 0x2080x2fe
    prev=[0x4a3B0x30a], succ=[0x77aB0x2080x2fe]
    =================================
    0x2090x2fe: v2fe209(0x40) = CONST 
    0x20b0x2fe: v2fe20b = MLOAD v2fe209(0x40)
    0x20c0x2fe: v2fe20c(0x8d5) = CONST 
    0x2110x2fe: v2fe211(0x77a) = CONST 
    0x2140x2fe: JUMP v2fe211(0x77a)

    Begin block 0x77aB0x2080x2fe
    prev=[0x2080x2fe], succ=[0x6c0B0x2080x2fe]
    =================================
    0x77bS0x2080x2fe: v77bV2082fe(0x20) = CONST 
    0x77eS0x2080x2fe: v77eV2082fe = ADD v2fe20b, v77bV2082fe(0x20)
    0x77fS0x2080x2fe: v77fV2082fe(0xb08) = CONST 
    0x784S0x2080x2fe: v784V2082fe(0x6c0) = CONST 
    0x787S0x2080x2fe: JUMP v784V2082fe(0x6c0)

    Begin block 0x6c0B0x2080x2fe
    prev=[0x77aB0x2080x2fe], succ=[0x7daB0x2080x2fe]
    =================================
    0x6c1S0x2080x2fe: v6c1V2082fe(0xa99) = CONST 
    0x6c5S0x2080x2fe: v6c5V2082fe(0x7da) = CONST 
    0x6c8S0x2080x2fe: JUMP v6c5V2082fe(0x7da)

    Begin block 0x7daB0x2080x2fe
    prev=[0x6c0B0x2080x2fe], succ=[0xa99B0x2080x2fe]
    =================================
    0x7dbS0x2080x2fe: v7dbV2082fe = ISZERO v4adV30a
    0x7dcS0x2080x2fe: v7dcV2082fe = ISZERO v7dbV2082fe
    0x7deS0x2080x2fe: JUMP v6c1V2082fe(0xa99)

    Begin block 0xa99B0x2080x2fe
    prev=[0x7daB0x2080x2fe], succ=[0xb08B0x2080x2fe]
    =================================
    0xa9bS0x2080x2fe: MSTORE v2fe20b, v7dcV2082fe
    0xa9eS0x2080x2fe: JUMP v77fV2082fe(0xb08)

    Begin block 0xb08B0x2080x2fe
    prev=[0xa99B0x2080x2fe], succ=[0x8d50x2fe]
    =================================
    0xb0dS0x2080x2fe: JUMP v2fe20c(0x8d5)

    Begin block 0x8d50x2fe
    prev=[0xb08B0x2080x2fe], succ=[]
    =================================
    0x8d60x2fe: v2fe8d6(0x40) = CONST 
    0x8d80x2fe: v2fe8d8 = MLOAD v2fe8d6(0x40)
    0x8db0x2fe: v2fe8db(0x20) = SUB v77eV2082fe, v2fe8d8
    0x8dd0x2fe: RETURN v2fe8d8, v2fe8db(0x20)

}

function isInit()() public {
    Begin block 0x313
    prev=[], succ=[0x31b, 0x31f]
    =================================
    0x314: v314 = CALLVALUE 
    0x316: v316 = ISZERO v314
    0x317: v317(0x31f) = CONST 
    0x31a: JUMPI v317(0x31f), v316

    Begin block 0x31b
    prev=[0x313], succ=[]
    =================================
    0x31b: v31b(0x0) = CONST 
    0x31e: REVERT v31b(0x0), v31b(0x0)

    Begin block 0x31f
    prev=[0x313], succ=[0x4b2]
    =================================
    0x321: v321(0x208) = CONST 
    0x324: v324(0x4b2) = CONST 
    0x327: JUMP v324(0x4b2)

    Begin block 0x4b2
    prev=[0x31f], succ=[0x2080x313]
    =================================
    0x4b3: v4b3(0x4) = CONST 
    0x4b5: v4b5 = SLOAD v4b3(0x4)
    0x4b6: v4b6(0x1) = CONST 
    0x4b8: v4b8(0xa0) = CONST 
    0x4ba: v4ba(0x10000000000000000000000000000000000000000) = SHL v4b8(0xa0), v4b6(0x1)
    0x4bc: v4bc = DIV v4b5, v4ba(0x10000000000000000000000000000000000000000)
    0x4bd: v4bd(0xff) = CONST 
    0x4bf: v4bf = AND v4bd(0xff), v4bc
    0x4c1: JUMP v321(0x208)

    Begin block 0x2080x313
    prev=[0x4b2], succ=[0x77aB0x2080x313]
    =================================
    0x2090x313: v313209(0x40) = CONST 
    0x20b0x313: v31320b = MLOAD v313209(0x40)
    0x20c0x313: v31320c(0x8d5) = CONST 
    0x2110x313: v313211(0x77a) = CONST 
    0x2140x313: JUMP v313211(0x77a)

    Begin block 0x77aB0x2080x313
    prev=[0x2080x313], succ=[0x6c0B0x2080x313]
    =================================
    0x77bS0x2080x313: v77bV208313(0x20) = CONST 
    0x77eS0x2080x313: v77eV208313 = ADD v31320b, v77bV208313(0x20)
    0x77fS0x2080x313: v77fV208313(0xb08) = CONST 
    0x784S0x2080x313: v784V208313(0x6c0) = CONST 
    0x787S0x2080x313: JUMP v784V208313(0x6c0)

    Begin block 0x6c0B0x2080x313
    prev=[0x77aB0x2080x313], succ=[0x7daB0x2080x313]
    =================================
    0x6c1S0x2080x313: v6c1V208313(0xa99) = CONST 
    0x6c5S0x2080x313: v6c5V208313(0x7da) = CONST 
    0x6c8S0x2080x313: JUMP v6c5V208313(0x7da)

    Begin block 0x7daB0x2080x313
    prev=[0x6c0B0x2080x313], succ=[0xa99B0x2080x313]
    =================================
    0x7dbS0x2080x313: v7dbV208313 = ISZERO v4bf
    0x7dcS0x2080x313: v7dcV208313 = ISZERO v7dbV208313
    0x7deS0x2080x313: JUMP v6c1V208313(0xa99)

    Begin block 0xa99B0x2080x313
    prev=[0x7daB0x2080x313], succ=[0xb08B0x2080x313]
    =================================
    0xa9bS0x2080x313: MSTORE v31320b, v7dcV208313
    0xa9eS0x2080x313: JUMP v77fV208313(0xb08)

    Begin block 0xb08B0x2080x313
    prev=[0xa99B0x2080x313], succ=[0x8d50x313]
    =================================
    0xb0dS0x2080x313: JUMP v31320c(0x8d5)

    Begin block 0x8d50x313
    prev=[0xb08B0x2080x313], succ=[]
    =================================
    0x8d60x313: v3138d6(0x40) = CONST 
    0x8d80x313: v3138d8 = MLOAD v3138d6(0x40)
    0x8db0x313: v3138db(0x20) = SUB v77eV208313, v3138d8
    0x8dd0x313: RETURN v3138d8, v3138db(0x20)

}

function lastUpdateTime()() public {
    Begin block 0x328
    prev=[], succ=[0x330, 0x334]
    =================================
    0x329: v329 = CALLVALUE 
    0x32b: v32b = ISZERO v329
    0x32c: v32c(0x334) = CONST 
    0x32f: JUMPI v32c(0x334), v32b

    Begin block 0x330
    prev=[0x328], succ=[]
    =================================
    0x330: v330(0x0) = CONST 
    0x333: REVERT v330(0x0), v330(0x0)

    Begin block 0x334
    prev=[0x328], succ=[0x4c2]
    =================================
    0x336: v336(0x1e6) = CONST 
    0x339: v339(0x4c2) = CONST 
    0x33c: JUMP v339(0x4c2)

    Begin block 0x4c2
    prev=[0x334], succ=[0x1e60x328]
    =================================
    0x4c3: v4c3(0x10) = CONST 
    0x4c5: v4c5 = SLOAD v4c3(0x10)
    0x4c7: JUMP v336(0x1e6)

    Begin block 0x1e60x328
    prev=[0x4c2], succ=[0x7b8B0x1e60x328]
    =================================
    0x1e70x328: v3281e7(0x40) = CONST 
    0x1e90x328: v3281e9 = MLOAD v3281e7(0x40)
    0x1ea0x328: v3281ea(0x8ad) = CONST 
    0x1ef0x328: v3281ef(0x7b8) = CONST 
    0x1f20x328: JUMP v3281ef(0x7b8)

    Begin block 0x7b8B0x1e60x328
    prev=[0x1e60x328], succ=[0x763B0x1e60x328]
    =================================
    0x7b9S0x1e60x328: v7b9V1e6328(0x20) = CONST 
    0x7bcS0x1e60x328: v7bcV1e6328 = ADD v3281e9, v7b9V1e6328(0x20)
    0x7bdS0x1e60x328: v7bdV1e6328(0xb9c) = CONST 
    0x7c2S0x1e60x328: v7c2V1e6328(0x763) = CONST 
    0x7c5S0x1e60x328: JUMP v7c2V1e6328(0x763)

    Begin block 0x763B0x1e60x328
    prev=[0x7b8B0x1e60x328], succ=[0x7ebB0x763B0x1e60x328]
    =================================
    0x764S0x1e60x328: v764V1e6328(0xabe) = CONST 
    0x768S0x1e60x328: v768V1e6328(0x7eb) = CONST 
    0x76bS0x1e60x328: JUMP v768V1e6328(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x328
    prev=[0x763B0x1e60x328], succ=[0xabeB0x1e60x328]
    =================================
    0x7edS0x763S0x1e60x328: JUMP v764V1e6328(0xabe)

    Begin block 0xabeB0x1e60x328
    prev=[0x7ebB0x763B0x1e60x328], succ=[0xb9cB0x1e60x328]
    =================================
    0xac0S0x1e60x328: MSTORE v3281e9, v4c5
    0xac3S0x1e60x328: JUMP v7bdV1e6328(0xb9c)

    Begin block 0xb9cB0x1e60x328
    prev=[0xabeB0x1e60x328], succ=[0x8ad0x328]
    =================================
    0xba1S0x1e60x328: JUMP v3281ea(0x8ad)

    Begin block 0x8ad0x328
    prev=[0xb9cB0x1e60x328], succ=[]
    =================================
    0x8ae0x328: v3288ae(0x40) = CONST 
    0x8b00x328: v3288b0 = MLOAD v3288ae(0x40)
    0x8b30x328: v3288b3(0x20) = SUB v7bcV1e6328, v3288b0
    0x8b50x328: RETURN v3288b0, v3288b3(0x20)

}

function replaceImplementation(address)() public {
    Begin block 0x33d
    prev=[], succ=[0x345, 0x349]
    =================================
    0x33e: v33e = CALLVALUE 
    0x340: v340 = ISZERO v33e
    0x341: v341(0x349) = CONST 
    0x344: JUMPI v341(0x349), v340

    Begin block 0x345
    prev=[0x33d], succ=[]
    =================================
    0x345: v345(0x0) = CONST 
    0x348: REVERT v345(0x0), v345(0x0)

    Begin block 0x349
    prev=[0x33d], succ=[0x659B0x349]
    =================================
    0x34b: v34b(0x8fd) = CONST 
    0x34e: v34e(0x358) = CONST 
    0x351: v351 = CALLDATASIZE 
    0x352: v352(0x4) = CONST 
    0x354: v354(0x659) = CONST 
    0x357: JUMP v354(0x659)

    Begin block 0x659B0x349
    prev=[0x349], succ=[0x667B0x349, 0x66bB0x349]
    =================================
    0x65aS0x349: v65aV349(0x0) = CONST 
    0x65cS0x349: v65cV349(0x20) = CONST 
    0x660S0x349: v660V349 = SUB v351, v352(0x4)
    0x661S0x349: v661V349 = SLT v660V349, v65cV349(0x20)
    0x662S0x349: v662V349 = ISZERO v661V349
    0x663S0x349: v663V349(0x66b) = CONST 
    0x666S0x349: JUMPI v663V349(0x66b), v662V349

    Begin block 0x667B0x349
    prev=[0x659B0x349], succ=[]
    =================================
    0x667S0x349: v667V349(0x0) = CONST 
    0x66aS0x349: REVERT v667V349(0x0), v667V349(0x0)

    Begin block 0x66bB0x349
    prev=[0x659B0x349], succ=[0x648B0x66bB0x349]
    =================================
    0x66cS0x349: v66cV349(0x0) = CONST 
    0x66eS0x349: v66eV349(0xa4d) = CONST 
    0x673S0x349: v673V349(0x648) = CONST 
    0x676S0x349: JUMP v673V349(0x648)

    Begin block 0x648B0x66bB0x349
    prev=[0x66bB0x349], succ=[0x7eeB0x648B0x66bB0x349]
    =================================
    0x64aS0x66bS0x349: v64aV66bV349 = CALLDATALOAD v352(0x4)
    0x64bS0x66bS0x349: v64bV66bV349(0xa28) = CONST 
    0x64fS0x66bS0x349: v64fV66bV349(0x7ee) = CONST 
    0x652S0x66bS0x349: JUMP v64fV66bV349(0x7ee), v64aV66bV349, v64bV66bV349(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x349
    prev=[0x648B0x66bB0x349], succ=[0x7cfB0x7eeB0x648B0x66bB0x349]
    =================================
    0x7efS0x648S0x66bS0x349: v7efV648V66bV349(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x349: v7f3V648V66bV349(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x349: JUMP v7f3V648V66bV349(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x349
    prev=[0x7eeB0x648B0x66bB0x349], succ=[0x7dfB0x7eeB0x648B0x66bB0x349]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x349: v7d0V7eeV648V66bV349(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x349: v7d2V7eeV648V66bV349(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x349: v7d6V7eeV648V66bV349(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x349: JUMP v7d6V7eeV648V66bV349(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x349
    prev=[0x7cfB0x7eeB0x648B0x66bB0x349], succ=[0xbc1B0x7eeB0x648B0x66bB0x349]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x349: v7e0V7eeV648V66bV349(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x349: v7e2V7eeV648V66bV349(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x349: v7e4V7eeV648V66bV349(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x349: v7e6V7eeV648V66bV349(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV349(0xa0), v7e2V7eeV648V66bV349(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x349: v7e7V7eeV648V66bV349(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV349(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV349(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x349: v7e8V7eeV648V66bV349 = AND v7e7V7eeV648V66bV349(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV349
    0x7eaS0x7eeS0x648S0x66bS0x349: JUMP v7d2V7eeV648V66bV349(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x349
    prev=[0x7dfB0x7eeB0x648B0x66bB0x349], succ=[0x7f7B0x648B0x66bB0x349]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x349: JUMP v7efV648V66bV349(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x349
    prev=[0xbc1B0x7eeB0x648B0x66bB0x349], succ=[0x7feB0x648B0x66bB0x349, 0xbe6B0x648B0x66bB0x349]
    =================================
    0x7f9S0x648S0x66bS0x349: v7f9V648V66bV349 = EQ v64aV66bV349, v7e8V7eeV648V66bV349
    0x7faS0x648S0x66bS0x349: v7faV648V66bV349(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x349: JUMPI v7faV648V66bV349(0xbe6), v7f9V648V66bV349

    Begin block 0x7feB0x648B0x66bB0x349
    prev=[0x7f7B0x648B0x66bB0x349], succ=[]
    =================================
    0x7feS0x648S0x66bS0x349: v7feV648V66bV349(0x0) = CONST 
    0x801S0x648S0x66bS0x349: REVERT v7feV648V66bV349(0x0), v7feV648V66bV349(0x0)

    Begin block 0xbe6B0x648B0x66bB0x349
    prev=[0x7f7B0x648B0x66bB0x349], succ=[0xa28B0x66bB0x349]
    =================================
    0xbe8S0x648S0x66bS0x349: JUMP v64bV66bV349(0xa28)

    Begin block 0xa28B0x66bB0x349
    prev=[0xbe6B0x648B0x66bB0x349], succ=[0xa4dB0x349]
    =================================
    0xa2dS0x66bS0x349: JUMP v66eV349(0xa4d)

    Begin block 0xa4dB0x349
    prev=[0xa28B0x66bB0x349], succ=[0x358]
    =================================
    0xa54S0x349: JUMP v34e(0x358)

    Begin block 0x358
    prev=[0xa4dB0x349], succ=[0x4c8]
    =================================
    0x359: v359(0x4c8) = CONST 
    0x35c: JUMP v359(0x4c8)

    Begin block 0x4c8
    prev=[0x358], succ=[0x48eB0x4c8]
    =================================
    0x4c9: v4c9(0x4d0) = CONST 
    0x4cc: v4cc(0x48e) = CONST 
    0x4cf: JUMP v4cc(0x48e)

    Begin block 0x48eB0x4c8
    prev=[0x4c8], succ=[0x587B0x4c8]
    =================================
    0x48fS0x4c8: v48fV4c8(0x0) = CONST 
    0x492S0x4c8: v492V4c8 = SLOAD v48fV4c8(0x0)
    0x493S0x4c8: v493V4c8(0x1) = CONST 
    0x495S0x4c8: v495V4c8(0x1) = CONST 
    0x497S0x4c8: v497V4c8(0xa0) = CONST 
    0x499S0x4c8: v499V4c8(0x10000000000000000000000000000000000000000) = SHL v497V4c8(0xa0), v495V4c8(0x1)
    0x49aS0x4c8: v49aV4c8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v499V4c8(0x10000000000000000000000000000000000000000), v493V4c8(0x1)
    0x49bS0x4c8: v49bV4c8 = AND v49aV4c8(0xffffffffffffffffffffffffffffffffffffffff), v492V4c8
    0x49cS0x4c8: v49cV4c8(0x4a3) = CONST 
    0x49fS0x4c8: v49fV4c8(0x587) = CONST 
    0x4a2S0x4c8: JUMP v49fV4c8(0x587)

    Begin block 0x587B0x4c8
    prev=[0x48eB0x4c8], succ=[0x4a3B0x4c8]
    =================================
    0x588S0x4c8: v588V4c8 = CALLER 
    0x58aS0x4c8: JUMP v49cV4c8(0x4a3)

    Begin block 0x4a3B0x4c8
    prev=[0x587B0x4c8], succ=[0x4d0]
    =================================
    0x4a4S0x4c8: v4a4V4c8(0x1) = CONST 
    0x4a6S0x4c8: v4a6V4c8(0x1) = CONST 
    0x4a8S0x4c8: v4a8V4c8(0xa0) = CONST 
    0x4aaS0x4c8: v4aaV4c8(0x10000000000000000000000000000000000000000) = SHL v4a8V4c8(0xa0), v4a6V4c8(0x1)
    0x4abS0x4c8: v4abV4c8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4aaV4c8(0x10000000000000000000000000000000000000000), v4a4V4c8(0x1)
    0x4acS0x4c8: v4acV4c8 = AND v4abV4c8(0xffffffffffffffffffffffffffffffffffffffff), v588V4c8
    0x4adS0x4c8: v4adV4c8 = EQ v4acV4c8, v49bV4c8
    0x4b1S0x4c8: JUMP v4c9(0x4d0)

    Begin block 0x4d0
    prev=[0x4a3B0x4c8], succ=[0x4d5, 0x4f5]
    =================================
    0x4d1: v4d1(0x4f5) = CONST 
    0x4d4: JUMPI v4d1(0x4f5), v4adV4c8

    Begin block 0x4d5
    prev=[0x4d0], succ=[0x7a8B0x4d5]
    =================================
    0x4d5: v4d5(0x40) = CONST 
    0x4d7: v4d7 = MLOAD v4d5(0x40)
    0x4d8: v4d8(0x461bcd) = CONST 
    0x4dc: v4dc(0xe5) = CONST 
    0x4de: v4de(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v4dc(0xe5), v4d8(0x461bcd)
    0x4e0: MSTORE v4d7, v4de(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x4e1: v4e1(0x4) = CONST 
    0x4e3: v4e3 = ADD v4e1(0x4), v4d7
    0x4e4: v4e4(0x93f) = CONST 
    0x4e8: v4e8(0x7a8) = CONST 
    0x4eb: JUMP v4e8(0x7a8)

    Begin block 0x7a8B0x4d5
    prev=[0x4d5], succ=[0x73bB0x4d5]
    =================================
    0x7a9S0x4d5: v7a9V4d5(0x20) = CONST 
    0x7adS0x4d5: MSTORE v4e3, v7a9V4d5(0x20)
    0x7afS0x4d5: v7afV4d5 = ADD v4e3, v7a9V4d5(0x20)
    0x7b0S0x4d5: v7b0V4d5(0xb77) = CONST 
    0x7b4S0x4d5: v7b4V4d5(0x73b) = CONST 
    0x7b7S0x4d5: JUMP v7b4V4d5(0x73b)

    Begin block 0x73bB0x4d5
    prev=[0x7a8B0x4d5], succ=[0x7c6B0x73bB0x4d5]
    =================================
    0x73cS0x4d5: v73cV4d5(0x0) = CONST 
    0x73eS0x4d5: v73eV4d5(0x748) = CONST 
    0x741S0x4d5: v741V4d5(0xc) = CONST 
    0x744S0x4d5: v744V4d5(0x7c6) = CONST 
    0x747S0x4d5: JUMP v744V4d5(0x7c6)

    Begin block 0x7c6B0x73bB0x4d5
    prev=[0x73bB0x4d5], succ=[0x748B0x4d5]
    =================================
    0x7c9S0x73bS0x4d5: MSTORE v7afV4d5, v741V4d5(0xc)
    0x7caS0x73bS0x4d5: v7caV73bV4d5(0x20) = CONST 
    0x7ccS0x73bS0x4d5: v7ccV73bV4d5 = ADD v7caV73bV4d5(0x20), v7afV4d5
    0x7ceS0x73bS0x4d5: JUMP v73eV4d5(0x748)

    Begin block 0x748B0x4d5
    prev=[0x7c6B0x73bB0x4d5], succ=[0xb77B0x4d5]
    =================================
    0x749S0x4d5: v749V4d5(0x1d5b985d5d1a1bdc9a5e9959) = CONST 
    0x756S0x4d5: v756V4d5(0xa2) = CONST 
    0x758S0x4d5: v758V4d5(0x756e617574686f72697a65640000000000000000000000000000000000000000) = SHL v756V4d5(0xa2), v749V4d5(0x1d5b985d5d1a1bdc9a5e9959)
    0x75aS0x4d5: MSTORE v7ccV73bV4d5, v758V4d5(0x756e617574686f72697a65640000000000000000000000000000000000000000)
    0x75bS0x4d5: v75bV4d5(0x20) = CONST 
    0x75dS0x4d5: v75dV4d5 = ADD v75bV4d5(0x20), v7ccV73bV4d5
    0x762S0x4d5: JUMP v7b0V4d5(0xb77)

    Begin block 0xb77B0x4d5
    prev=[0x748B0x4d5], succ=[0x93f]
    =================================
    0xb7cS0x4d5: JUMP v4e4(0x93f)

    Begin block 0x93f
    prev=[0xb77B0x4d5], succ=[]
    =================================
    0x940: v940(0x40) = CONST 
    0x942: v942 = MLOAD v940(0x40)
    0x945: v945(0x64) = SUB v75dV4d5, v942
    0x947: REVERT v942, v945(0x64)

    Begin block 0x4f5
    prev=[0x4d0], succ=[0x4fe]
    =================================
    0x4f6: v4f6(0x4fe) = CONST 
    0x4fa: v4fa(0x58b) = CONST 
    0x4fd: v4fd_0 = CALLPRIVATE v4fa(0x58b), v64aV66bV349, v4f6(0x4fe)

    Begin block 0x4fe
    prev=[0x4f5], succ=[0x503, 0x51a]
    =================================
    0x4ff: v4ff(0x51a) = CONST 
    0x502: JUMPI v4ff(0x51a), v4fd_0

    Begin block 0x503
    prev=[0x4fe], succ=[0x798B0x503]
    =================================
    0x503: v503(0x40) = CONST 
    0x505: v505 = MLOAD v503(0x40)
    0x506: v506(0x461bcd) = CONST 
    0x50a: v50a(0xe5) = CONST 
    0x50c: v50c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v50a(0xe5), v506(0x461bcd)
    0x50e: MSTORE v505, v50c(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x50f: v50f(0x4) = CONST 
    0x511: v511 = ADD v50f(0x4), v505
    0x512: v512(0x967) = CONST 
    0x516: v516(0x798) = CONST 
    0x519: JUMP v516(0x798)

    Begin block 0x798B0x503
    prev=[0x503], succ=[0x711B0x503]
    =================================
    0x799S0x503: v799V503(0x20) = CONST 
    0x79dS0x503: MSTORE v511, v799V503(0x20)
    0x79fS0x503: v79fV503 = ADD v511, v799V503(0x20)
    0x7a0S0x503: v7a0V503(0xb52) = CONST 
    0x7a4S0x503: v7a4V503(0x711) = CONST 
    0x7a7S0x503: JUMP v7a4V503(0x711)

    Begin block 0x711B0x503
    prev=[0x798B0x503], succ=[0x7c6B0x711B0x503]
    =================================
    0x712S0x503: v712V503(0x0) = CONST 
    0x714S0x503: v714V503(0x71e) = CONST 
    0x717S0x503: v717V503(0xe) = CONST 
    0x71aS0x503: v71aV503(0x7c6) = CONST 
    0x71dS0x503: JUMP v71aV503(0x7c6)

    Begin block 0x7c6B0x711B0x503
    prev=[0x711B0x503], succ=[0x71eB0x503]
    =================================
    0x7c9S0x711S0x503: MSTORE v79fV503, v717V503(0xe)
    0x7caS0x711S0x503: v7caV711V503(0x20) = CONST 
    0x7ccS0x711S0x503: v7ccV711V503 = ADD v7caV711V503(0x20), v79fV503
    0x7ceS0x711S0x503: JUMP v714V503(0x71e)

    Begin block 0x71eB0x503
    prev=[0x7c6B0x711B0x503], succ=[0xb52B0x503]
    =================================
    0x71fS0x503: v71fV503(0x1b9bdd08184818dbdb9d1c9858dd) = CONST 
    0x72eS0x503: v72eV503(0x92) = CONST 
    0x730S0x503: v730V503(0x6e6f74206120636f6e7472616374000000000000000000000000000000000000) = SHL v72eV503(0x92), v71fV503(0x1b9bdd08184818dbdb9d1c9858dd)
    0x732S0x503: MSTORE v7ccV711V503, v730V503(0x6e6f74206120636f6e7472616374000000000000000000000000000000000000)
    0x733S0x503: v733V503(0x20) = CONST 
    0x735S0x503: v735V503 = ADD v733V503(0x20), v7ccV711V503
    0x73aS0x503: JUMP v7a0V503(0xb52)

    Begin block 0xb52B0x503
    prev=[0x71eB0x503], succ=[0x967]
    =================================
    0xb57S0x503: JUMP v512(0x967)

    Begin block 0x967
    prev=[0xb52B0x503], succ=[]
    =================================
    0x968: v968(0x40) = CONST 
    0x96a: v96a = MLOAD v968(0x40)
    0x96d: v96d(0x64) = SUB v735V503, v96a
    0x96f: REVERT v96a, v96d(0x64)

    Begin block 0x51a
    prev=[0x4fe], succ=[0x8fd]
    =================================
    0x51b: v51b(0x4) = CONST 
    0x51e: v51e = SLOAD v51b(0x4)
    0x51f: v51f(0x1) = CONST 
    0x521: v521(0x1) = CONST 
    0x523: v523(0xa0) = CONST 
    0x525: v525(0x10000000000000000000000000000000000000000) = SHL v523(0xa0), v521(0x1)
    0x526: v526(0xffffffffffffffffffffffffffffffffffffffff) = SUB v525(0x10000000000000000000000000000000000000000), v51f(0x1)
    0x527: v527(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v526(0xffffffffffffffffffffffffffffffffffffffff)
    0x528: v528 = AND v527(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v51e
    0x529: v529(0x1) = CONST 
    0x52b: v52b(0x1) = CONST 
    0x52d: v52d(0xa0) = CONST 
    0x52f: v52f(0x10000000000000000000000000000000000000000) = SHL v52d(0xa0), v52b(0x1)
    0x530: v530(0xffffffffffffffffffffffffffffffffffffffff) = SUB v52f(0x10000000000000000000000000000000000000000), v529(0x1)
    0x534: v534 = AND v530(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV349
    0x538: v538 = OR v534, v528
    0x53a: SSTORE v51b(0x4), v538
    0x53b: JUMP v34b(0x8fd)

    Begin block 0x8fd
    prev=[0x51a], succ=[]
    =================================
    0x8fe: STOP 

}

function rewardPerTokenStored()() public {
    Begin block 0x35d
    prev=[], succ=[0x365, 0x369]
    =================================
    0x35e: v35e = CALLVALUE 
    0x360: v360 = ISZERO v35e
    0x361: v361(0x369) = CONST 
    0x364: JUMPI v361(0x369), v360

    Begin block 0x365
    prev=[0x35d], succ=[]
    =================================
    0x365: v365(0x0) = CONST 
    0x368: REVERT v365(0x0), v365(0x0)

    Begin block 0x369
    prev=[0x35d], succ=[0x53c]
    =================================
    0x36b: v36b(0x1e6) = CONST 
    0x36e: v36e(0x53c) = CONST 
    0x371: JUMP v36e(0x53c)

    Begin block 0x53c
    prev=[0x369], succ=[0x1e60x35d]
    =================================
    0x53d: v53d(0xb) = CONST 
    0x53f: v53f = SLOAD v53d(0xb)
    0x541: JUMP v36b(0x1e6)

    Begin block 0x1e60x35d
    prev=[0x53c], succ=[0x7b8B0x1e60x35d]
    =================================
    0x1e70x35d: v35d1e7(0x40) = CONST 
    0x1e90x35d: v35d1e9 = MLOAD v35d1e7(0x40)
    0x1ea0x35d: v35d1ea(0x8ad) = CONST 
    0x1ef0x35d: v35d1ef(0x7b8) = CONST 
    0x1f20x35d: JUMP v35d1ef(0x7b8)

    Begin block 0x7b8B0x1e60x35d
    prev=[0x1e60x35d], succ=[0x763B0x1e60x35d]
    =================================
    0x7b9S0x1e60x35d: v7b9V1e635d(0x20) = CONST 
    0x7bcS0x1e60x35d: v7bcV1e635d = ADD v35d1e9, v7b9V1e635d(0x20)
    0x7bdS0x1e60x35d: v7bdV1e635d(0xb9c) = CONST 
    0x7c2S0x1e60x35d: v7c2V1e635d(0x763) = CONST 
    0x7c5S0x1e60x35d: JUMP v7c2V1e635d(0x763)

    Begin block 0x763B0x1e60x35d
    prev=[0x7b8B0x1e60x35d], succ=[0x7ebB0x763B0x1e60x35d]
    =================================
    0x764S0x1e60x35d: v764V1e635d(0xabe) = CONST 
    0x768S0x1e60x35d: v768V1e635d(0x7eb) = CONST 
    0x76bS0x1e60x35d: JUMP v768V1e635d(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x35d
    prev=[0x763B0x1e60x35d], succ=[0xabeB0x1e60x35d]
    =================================
    0x7edS0x763S0x1e60x35d: JUMP v764V1e635d(0xabe)

    Begin block 0xabeB0x1e60x35d
    prev=[0x7ebB0x763B0x1e60x35d], succ=[0xb9cB0x1e60x35d]
    =================================
    0xac0S0x1e60x35d: MSTORE v35d1e9, v53f
    0xac3S0x1e60x35d: JUMP v7bdV1e635d(0xb9c)

    Begin block 0xb9cB0x1e60x35d
    prev=[0xabeB0x1e60x35d], succ=[0x8ad0x35d]
    =================================
    0xba1S0x1e60x35d: JUMP v35d1ea(0x8ad)

    Begin block 0x8ad0x35d
    prev=[0xb9cB0x1e60x35d], succ=[]
    =================================
    0x8ae0x35d: v35d8ae(0x40) = CONST 
    0x8b00x35d: v35d8b0 = MLOAD v35d8ae(0x40)
    0x8b30x35d: v35d8b3(0x20) = SUB v7bcV1e635d, v35d8b0
    0x8b50x35d: RETURN v35d8b0, v35d8b3(0x20)

}

function periodFinish()() public {
    Begin block 0x372
    prev=[], succ=[0x37a, 0x37e]
    =================================
    0x373: v373 = CALLVALUE 
    0x375: v375 = ISZERO v373
    0x376: v376(0x37e) = CONST 
    0x379: JUMPI v376(0x37e), v375

    Begin block 0x37a
    prev=[0x372], succ=[]
    =================================
    0x37a: v37a(0x0) = CONST 
    0x37d: REVERT v37a(0x0), v37a(0x0)

    Begin block 0x37e
    prev=[0x372], succ=[0x542]
    =================================
    0x380: v380(0x1e6) = CONST 
    0x383: v383(0x542) = CONST 
    0x386: JUMP v383(0x542)

    Begin block 0x542
    prev=[0x37e], succ=[0x1e60x372]
    =================================
    0x543: v543(0x11) = CONST 
    0x545: v545 = SLOAD v543(0x11)
    0x547: JUMP v380(0x1e6)

    Begin block 0x1e60x372
    prev=[0x542], succ=[0x7b8B0x1e60x372]
    =================================
    0x1e70x372: v3721e7(0x40) = CONST 
    0x1e90x372: v3721e9 = MLOAD v3721e7(0x40)
    0x1ea0x372: v3721ea(0x8ad) = CONST 
    0x1ef0x372: v3721ef(0x7b8) = CONST 
    0x1f20x372: JUMP v3721ef(0x7b8)

    Begin block 0x7b8B0x1e60x372
    prev=[0x1e60x372], succ=[0x763B0x1e60x372]
    =================================
    0x7b9S0x1e60x372: v7b9V1e6372(0x20) = CONST 
    0x7bcS0x1e60x372: v7bcV1e6372 = ADD v3721e9, v7b9V1e6372(0x20)
    0x7bdS0x1e60x372: v7bdV1e6372(0xb9c) = CONST 
    0x7c2S0x1e60x372: v7c2V1e6372(0x763) = CONST 
    0x7c5S0x1e60x372: JUMP v7c2V1e6372(0x763)

    Begin block 0x763B0x1e60x372
    prev=[0x7b8B0x1e60x372], succ=[0x7ebB0x763B0x1e60x372]
    =================================
    0x764S0x1e60x372: v764V1e6372(0xabe) = CONST 
    0x768S0x1e60x372: v768V1e6372(0x7eb) = CONST 
    0x76bS0x1e60x372: JUMP v768V1e6372(0x7eb)

    Begin block 0x7ebB0x763B0x1e60x372
    prev=[0x763B0x1e60x372], succ=[0xabeB0x1e60x372]
    =================================
    0x7edS0x763S0x1e60x372: JUMP v764V1e6372(0xabe)

    Begin block 0xabeB0x1e60x372
    prev=[0x7ebB0x763B0x1e60x372], succ=[0xb9cB0x1e60x372]
    =================================
    0xac0S0x1e60x372: MSTORE v3721e9, v545
    0xac3S0x1e60x372: JUMP v7bdV1e6372(0xb9c)

    Begin block 0xb9cB0x1e60x372
    prev=[0xabeB0x1e60x372], succ=[0x8ad0x372]
    =================================
    0xba1S0x1e60x372: JUMP v3721ea(0x8ad)

    Begin block 0x8ad0x372
    prev=[0xb9cB0x1e60x372], succ=[]
    =================================
    0x8ae0x372: v3728ae(0x40) = CONST 
    0x8b00x372: v3728b0 = MLOAD v3728ae(0x40)
    0x8b30x372: v3728b3(0x20) = SUB v7bcV1e6372, v3728b0
    0x8b50x372: RETURN v3728b0, v3728b3(0x20)

}

function transferOwnership(address)() public {
    Begin block 0x387
    prev=[], succ=[0x38f, 0x393]
    =================================
    0x388: v388 = CALLVALUE 
    0x38a: v38a = ISZERO v388
    0x38b: v38b(0x393) = CONST 
    0x38e: JUMPI v38b(0x393), v38a

    Begin block 0x38f
    prev=[0x387], succ=[]
    =================================
    0x38f: v38f(0x0) = CONST 
    0x392: REVERT v38f(0x0), v38f(0x0)

    Begin block 0x393
    prev=[0x387], succ=[0x659B0x393]
    =================================
    0x395: v395(0x91e) = CONST 
    0x398: v398(0x3a2) = CONST 
    0x39b: v39b = CALLDATASIZE 
    0x39c: v39c(0x4) = CONST 
    0x39e: v39e(0x659) = CONST 
    0x3a1: JUMP v39e(0x659)

    Begin block 0x659B0x393
    prev=[0x393], succ=[0x667B0x393, 0x66bB0x393]
    =================================
    0x65aS0x393: v65aV393(0x0) = CONST 
    0x65cS0x393: v65cV393(0x20) = CONST 
    0x660S0x393: v660V393 = SUB v39b, v39c(0x4)
    0x661S0x393: v661V393 = SLT v660V393, v65cV393(0x20)
    0x662S0x393: v662V393 = ISZERO v661V393
    0x663S0x393: v663V393(0x66b) = CONST 
    0x666S0x393: JUMPI v663V393(0x66b), v662V393

    Begin block 0x667B0x393
    prev=[0x659B0x393], succ=[]
    =================================
    0x667S0x393: v667V393(0x0) = CONST 
    0x66aS0x393: REVERT v667V393(0x0), v667V393(0x0)

    Begin block 0x66bB0x393
    prev=[0x659B0x393], succ=[0x648B0x66bB0x393]
    =================================
    0x66cS0x393: v66cV393(0x0) = CONST 
    0x66eS0x393: v66eV393(0xa4d) = CONST 
    0x673S0x393: v673V393(0x648) = CONST 
    0x676S0x393: JUMP v673V393(0x648)

    Begin block 0x648B0x66bB0x393
    prev=[0x66bB0x393], succ=[0x7eeB0x648B0x66bB0x393]
    =================================
    0x64aS0x66bS0x393: v64aV66bV393 = CALLDATALOAD v39c(0x4)
    0x64bS0x66bS0x393: v64bV66bV393(0xa28) = CONST 
    0x64fS0x66bS0x393: v64fV66bV393(0x7ee) = CONST 
    0x652S0x66bS0x393: JUMP v64fV66bV393(0x7ee), v64aV66bV393, v64bV66bV393(0xa28)

    Begin block 0x7eeB0x648B0x66bB0x393
    prev=[0x648B0x66bB0x393], succ=[0x7cfB0x7eeB0x648B0x66bB0x393]
    =================================
    0x7efS0x648S0x66bS0x393: v7efV648V66bV393(0x7f7) = CONST 
    0x7f3S0x648S0x66bS0x393: v7f3V648V66bV393(0x7cf) = CONST 
    0x7f6S0x648S0x66bS0x393: JUMP v7f3V648V66bV393(0x7cf)

    Begin block 0x7cfB0x7eeB0x648B0x66bB0x393
    prev=[0x7eeB0x648B0x66bB0x393], succ=[0x7dfB0x7eeB0x648B0x66bB0x393]
    =================================
    0x7d0S0x7eeS0x648S0x66bS0x393: v7d0V7eeV648V66bV393(0x0) = CONST 
    0x7d2S0x7eeS0x648S0x66bS0x393: v7d2V7eeV648V66bV393(0xbc1) = CONST 
    0x7d6S0x7eeS0x648S0x66bS0x393: v7d6V7eeV648V66bV393(0x7df) = CONST 
    0x7d9S0x7eeS0x648S0x66bS0x393: JUMP v7d6V7eeV648V66bV393(0x7df)

    Begin block 0x7dfB0x7eeB0x648B0x66bB0x393
    prev=[0x7cfB0x7eeB0x648B0x66bB0x393], succ=[0xbc1B0x7eeB0x648B0x66bB0x393]
    =================================
    0x7e0S0x7eeS0x648S0x66bS0x393: v7e0V7eeV648V66bV393(0x1) = CONST 
    0x7e2S0x7eeS0x648S0x66bS0x393: v7e2V7eeV648V66bV393(0x1) = CONST 
    0x7e4S0x7eeS0x648S0x66bS0x393: v7e4V7eeV648V66bV393(0xa0) = CONST 
    0x7e6S0x7eeS0x648S0x66bS0x393: v7e6V7eeV648V66bV393(0x10000000000000000000000000000000000000000) = SHL v7e4V7eeV648V66bV393(0xa0), v7e2V7eeV648V66bV393(0x1)
    0x7e7S0x7eeS0x648S0x66bS0x393: v7e7V7eeV648V66bV393(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V7eeV648V66bV393(0x10000000000000000000000000000000000000000), v7e0V7eeV648V66bV393(0x1)
    0x7e8S0x7eeS0x648S0x66bS0x393: v7e8V7eeV648V66bV393 = AND v7e7V7eeV648V66bV393(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV393
    0x7eaS0x7eeS0x648S0x66bS0x393: JUMP v7d2V7eeV648V66bV393(0xbc1)

    Begin block 0xbc1B0x7eeB0x648B0x66bB0x393
    prev=[0x7dfB0x7eeB0x648B0x66bB0x393], succ=[0x7f7B0x648B0x66bB0x393]
    =================================
    0xbc6S0x7eeS0x648S0x66bS0x393: JUMP v7efV648V66bV393(0x7f7)

    Begin block 0x7f7B0x648B0x66bB0x393
    prev=[0xbc1B0x7eeB0x648B0x66bB0x393], succ=[0x7feB0x648B0x66bB0x393, 0xbe6B0x648B0x66bB0x393]
    =================================
    0x7f9S0x648S0x66bS0x393: v7f9V648V66bV393 = EQ v64aV66bV393, v7e8V7eeV648V66bV393
    0x7faS0x648S0x66bS0x393: v7faV648V66bV393(0xbe6) = CONST 
    0x7fdS0x648S0x66bS0x393: JUMPI v7faV648V66bV393(0xbe6), v7f9V648V66bV393

    Begin block 0x7feB0x648B0x66bB0x393
    prev=[0x7f7B0x648B0x66bB0x393], succ=[]
    =================================
    0x7feS0x648S0x66bS0x393: v7feV648V66bV393(0x0) = CONST 
    0x801S0x648S0x66bS0x393: REVERT v7feV648V66bV393(0x0), v7feV648V66bV393(0x0)

    Begin block 0xbe6B0x648B0x66bB0x393
    prev=[0x7f7B0x648B0x66bB0x393], succ=[0xa28B0x66bB0x393]
    =================================
    0xbe8S0x648S0x66bS0x393: JUMP v64bV66bV393(0xa28)

    Begin block 0xa28B0x66bB0x393
    prev=[0xbe6B0x648B0x66bB0x393], succ=[0xa4dB0x393]
    =================================
    0xa2dS0x66bS0x393: JUMP v66eV393(0xa4d)

    Begin block 0xa4dB0x393
    prev=[0xa28B0x66bB0x393], succ=[0x3a2]
    =================================
    0xa54S0x393: JUMP v398(0x3a2)

    Begin block 0x3a2
    prev=[0xa4dB0x393], succ=[0x548B0x3a2]
    =================================
    0x3a3: v3a3(0x548) = CONST 
    0x3a6: JUMP v3a3(0x548), v64aV66bV393, v395(0x91e)

    Begin block 0x548B0x3a2
    prev=[0x3a2], succ=[0x48eB0x548B0x3a2]
    =================================
    0x549S0x3a2: v549V3a2(0x550) = CONST 
    0x54cS0x3a2: v54cV3a2(0x48e) = CONST 
    0x54fS0x3a2: JUMP v54cV3a2(0x48e)

    Begin block 0x48eB0x548B0x3a2
    prev=[0x548B0x3a2], succ=[0x587B0x548B0x3a2]
    =================================
    0x48fS0x548S0x3a2: v48fV548V3a2(0x0) = CONST 
    0x492S0x548S0x3a2: v492V548V3a2 = SLOAD v48fV548V3a2(0x0)
    0x493S0x548S0x3a2: v493V548V3a2(0x1) = CONST 
    0x495S0x548S0x3a2: v495V548V3a2(0x1) = CONST 
    0x497S0x548S0x3a2: v497V548V3a2(0xa0) = CONST 
    0x499S0x548S0x3a2: v499V548V3a2(0x10000000000000000000000000000000000000000) = SHL v497V548V3a2(0xa0), v495V548V3a2(0x1)
    0x49aS0x548S0x3a2: v49aV548V3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v499V548V3a2(0x10000000000000000000000000000000000000000), v493V548V3a2(0x1)
    0x49bS0x548S0x3a2: v49bV548V3a2 = AND v49aV548V3a2(0xffffffffffffffffffffffffffffffffffffffff), v492V548V3a2
    0x49cS0x548S0x3a2: v49cV548V3a2(0x4a3) = CONST 
    0x49fS0x548S0x3a2: v49fV548V3a2(0x587) = CONST 
    0x4a2S0x548S0x3a2: JUMP v49fV548V3a2(0x587)

    Begin block 0x587B0x548B0x3a2
    prev=[0x48eB0x548B0x3a2], succ=[0x4a3B0x548B0x3a2]
    =================================
    0x588S0x548S0x3a2: v588V548V3a2 = CALLER 
    0x58aS0x548S0x3a2: JUMP v49cV548V3a2(0x4a3)

    Begin block 0x4a3B0x548B0x3a2
    prev=[0x587B0x548B0x3a2], succ=[0x550B0x3a2]
    =================================
    0x4a4S0x548S0x3a2: v4a4V548V3a2(0x1) = CONST 
    0x4a6S0x548S0x3a2: v4a6V548V3a2(0x1) = CONST 
    0x4a8S0x548S0x3a2: v4a8V548V3a2(0xa0) = CONST 
    0x4aaS0x548S0x3a2: v4aaV548V3a2(0x10000000000000000000000000000000000000000) = SHL v4a8V548V3a2(0xa0), v4a6V548V3a2(0x1)
    0x4abS0x548S0x3a2: v4abV548V3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4aaV548V3a2(0x10000000000000000000000000000000000000000), v4a4V548V3a2(0x1)
    0x4acS0x548S0x3a2: v4acV548V3a2 = AND v4abV548V3a2(0xffffffffffffffffffffffffffffffffffffffff), v588V548V3a2
    0x4adS0x548S0x3a2: v4adV548V3a2 = EQ v4acV548V3a2, v49bV548V3a2
    0x4b1S0x548S0x3a2: JUMP v549V3a2(0x550)

    Begin block 0x550B0x3a2
    prev=[0x4a3B0x548B0x3a2], succ=[0x555B0x3a2, 0x56cB0x3a2]
    =================================
    0x551S0x3a2: v551V3a2(0x56c) = CONST 
    0x554S0x3a2: JUMPI v551V3a2(0x56c), v4adV548V3a2

    Begin block 0x555B0x3a2
    prev=[0x550B0x3a2], succ=[0x7a8B0x555B0x3a2]
    =================================
    0x555S0x3a2: v555V3a2(0x40) = CONST 
    0x557S0x3a2: v557V3a2 = MLOAD v555V3a2(0x40)
    0x558S0x3a2: v558V3a2(0x461bcd) = CONST 
    0x55cS0x3a2: v55cV3a2(0xe5) = CONST 
    0x55eS0x3a2: v55eV3a2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v55cV3a2(0xe5), v558V3a2(0x461bcd)
    0x560S0x3a2: MSTORE v557V3a2, v55eV3a2(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x561S0x3a2: v561V3a2(0x4) = CONST 
    0x563S0x3a2: v563V3a2 = ADD v561V3a2(0x4), v557V3a2
    0x564S0x3a2: v564V3a2(0x98f) = CONST 
    0x568S0x3a2: v568V3a2(0x7a8) = CONST 
    0x56bS0x3a2: JUMP v568V3a2(0x7a8)

    Begin block 0x7a8B0x555B0x3a2
    prev=[0x555B0x3a2], succ=[0x73bB0x555B0x3a2]
    =================================
    0x7a9S0x555S0x3a2: v7a9V555V3a2(0x20) = CONST 
    0x7adS0x555S0x3a2: MSTORE v563V3a2, v7a9V555V3a2(0x20)
    0x7afS0x555S0x3a2: v7afV555V3a2 = ADD v563V3a2, v7a9V555V3a2(0x20)
    0x7b0S0x555S0x3a2: v7b0V555V3a2(0xb77) = CONST 
    0x7b4S0x555S0x3a2: v7b4V555V3a2(0x73b) = CONST 
    0x7b7S0x555S0x3a2: JUMP v7b4V555V3a2(0x73b)

    Begin block 0x73bB0x555B0x3a2
    prev=[0x7a8B0x555B0x3a2], succ=[0x7c6B0x73bB0x555B0x3a2]
    =================================
    0x73cS0x555S0x3a2: v73cV555V3a2(0x0) = CONST 
    0x73eS0x555S0x3a2: v73eV555V3a2(0x748) = CONST 
    0x741S0x555S0x3a2: v741V555V3a2(0xc) = CONST 
    0x744S0x555S0x3a2: v744V555V3a2(0x7c6) = CONST 
    0x747S0x555S0x3a2: JUMP v744V555V3a2(0x7c6)

    Begin block 0x7c6B0x73bB0x555B0x3a2
    prev=[0x73bB0x555B0x3a2], succ=[0x748B0x555B0x3a2]
    =================================
    0x7c9S0x73bS0x555S0x3a2: MSTORE v7afV555V3a2, v741V555V3a2(0xc)
    0x7caS0x73bS0x555S0x3a2: v7caV73bV555V3a2(0x20) = CONST 
    0x7ccS0x73bS0x555S0x3a2: v7ccV73bV555V3a2 = ADD v7caV73bV555V3a2(0x20), v7afV555V3a2
    0x7ceS0x73bS0x555S0x3a2: JUMP v73eV555V3a2(0x748)

    Begin block 0x748B0x555B0x3a2
    prev=[0x7c6B0x73bB0x555B0x3a2], succ=[0xb77B0x555B0x3a2]
    =================================
    0x749S0x555S0x3a2: v749V555V3a2(0x1d5b985d5d1a1bdc9a5e9959) = CONST 
    0x756S0x555S0x3a2: v756V555V3a2(0xa2) = CONST 
    0x758S0x555S0x3a2: v758V555V3a2(0x756e617574686f72697a65640000000000000000000000000000000000000000) = SHL v756V555V3a2(0xa2), v749V555V3a2(0x1d5b985d5d1a1bdc9a5e9959)
    0x75aS0x555S0x3a2: MSTORE v7ccV73bV555V3a2, v758V555V3a2(0x756e617574686f72697a65640000000000000000000000000000000000000000)
    0x75bS0x555S0x3a2: v75bV555V3a2(0x20) = CONST 
    0x75dS0x555S0x3a2: v75dV555V3a2 = ADD v75bV555V3a2(0x20), v7ccV73bV555V3a2
    0x762S0x555S0x3a2: JUMP v7b0V555V3a2(0xb77)

    Begin block 0xb77B0x555B0x3a2
    prev=[0x748B0x555B0x3a2], succ=[0x98fB0x3a2]
    =================================
    0xb7cS0x555S0x3a2: JUMP v564V3a2(0x98f)

    Begin block 0x98fB0x3a2
    prev=[0xb77B0x555B0x3a2], succ=[]
    =================================
    0x990S0x3a2: v990V3a2(0x40) = CONST 
    0x992S0x3a2: v992V3a2 = MLOAD v990V3a2(0x40)
    0x995S0x3a2: v995V3a2(0x64) = SUB v75dV555V3a2, v992V3a2
    0x997S0x3a2: REVERT v992V3a2, v995V3a2(0x64)

    Begin block 0x56cB0x3a2
    prev=[0x550B0x3a2], succ=[0x5c7B0x3a2]
    =================================
    0x56dS0x3a2: v56dV3a2(0x9b7) = CONST 
    0x571S0x3a2: v571V3a2(0x5c7) = CONST 
    0x574S0x3a2: JUMP v571V3a2(0x5c7)

    Begin block 0x5c7B0x3a2
    prev=[0x56cB0x3a2], succ=[0x5d6B0x3a2, 0x5edB0x3a2]
    =================================
    0x5c8S0x3a2: v5c8V3a2(0x1) = CONST 
    0x5caS0x3a2: v5caV3a2(0x1) = CONST 
    0x5ccS0x3a2: v5ccV3a2(0xa0) = CONST 
    0x5ceS0x3a2: v5ceV3a2(0x10000000000000000000000000000000000000000) = SHL v5ccV3a2(0xa0), v5caV3a2(0x1)
    0x5cfS0x3a2: v5cfV3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5ceV3a2(0x10000000000000000000000000000000000000000), v5c8V3a2(0x1)
    0x5d1S0x3a2: v5d1V3a2 = AND v64aV66bV393, v5cfV3a2(0xffffffffffffffffffffffffffffffffffffffff)
    0x5d2S0x3a2: v5d2V3a2(0x5ed) = CONST 
    0x5d5S0x3a2: JUMPI v5d2V3a2(0x5ed), v5d1V3a2

    Begin block 0x5d6B0x3a2
    prev=[0x5c7B0x3a2], succ=[0x788B0x5d6B0x3a2]
    =================================
    0x5d6S0x3a2: v5d6V3a2(0x40) = CONST 
    0x5d8S0x3a2: v5d8V3a2 = MLOAD v5d6V3a2(0x40)
    0x5d9S0x3a2: v5d9V3a2(0x461bcd) = CONST 
    0x5ddS0x3a2: v5ddV3a2(0xe5) = CONST 
    0x5dfS0x3a2: v5dfV3a2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5ddV3a2(0xe5), v5d9V3a2(0x461bcd)
    0x5e1S0x3a2: MSTORE v5d8V3a2, v5dfV3a2(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5e2S0x3a2: v5e2V3a2(0x4) = CONST 
    0x5e4S0x3a2: v5e4V3a2 = ADD v5e2V3a2(0x4), v5d8V3a2
    0x5e5S0x3a2: v5e5V3a2(0xa00) = CONST 
    0x5e9S0x3a2: v5e9V3a2(0x788) = CONST 
    0x5ecS0x3a2: JUMP v5e9V3a2(0x788)

    Begin block 0x788B0x5d6B0x3a2
    prev=[0x5d6B0x3a2], succ=[0x6c9B0x5d6B0x3a2]
    =================================
    0x789S0x5d6S0x3a2: v789V5d6V3a2(0x20) = CONST 
    0x78dS0x5d6S0x3a2: MSTORE v5e4V3a2, v789V5d6V3a2(0x20)
    0x78fS0x5d6S0x3a2: v78fV5d6V3a2 = ADD v5e4V3a2, v789V5d6V3a2(0x20)
    0x790S0x5d6S0x3a2: v790V5d6V3a2(0xb2d) = CONST 
    0x794S0x5d6S0x3a2: v794V5d6V3a2(0x6c9) = CONST 
    0x797S0x5d6S0x3a2: JUMP v794V5d6V3a2(0x6c9)

    Begin block 0x6c9B0x5d6B0x3a2
    prev=[0x788B0x5d6B0x3a2], succ=[0x7c6B0x6c9B0x5d6B0x3a2]
    =================================
    0x6caS0x5d6S0x3a2: v6caV5d6V3a2(0x0) = CONST 
    0x6ccS0x5d6S0x3a2: v6ccV5d6V3a2(0x6d6) = CONST 
    0x6cfS0x5d6S0x3a2: v6cfV5d6V3a2(0x26) = CONST 
    0x6d2S0x5d6S0x3a2: v6d2V5d6V3a2(0x7c6) = CONST 
    0x6d5S0x5d6S0x3a2: JUMP v6d2V5d6V3a2(0x7c6)

    Begin block 0x7c6B0x6c9B0x5d6B0x3a2
    prev=[0x6c9B0x5d6B0x3a2], succ=[0x6d6B0x5d6B0x3a2]
    =================================
    0x7c9S0x6c9S0x5d6S0x3a2: MSTORE v78fV5d6V3a2, v6cfV5d6V3a2(0x26)
    0x7caS0x6c9S0x5d6S0x3a2: v7caV6c9V5d6V3a2(0x20) = CONST 
    0x7ccS0x6c9S0x5d6S0x3a2: v7ccV6c9V5d6V3a2 = ADD v7caV6c9V5d6V3a2(0x20), v78fV5d6V3a2
    0x7ceS0x6c9S0x5d6S0x3a2: JUMP v6ccV5d6V3a2(0x6d6)

    Begin block 0x6d6B0x5d6B0x3a2
    prev=[0x7c6B0x6c9B0x5d6B0x3a2], succ=[0xb2dB0x5d6B0x3a2]
    =================================
    0x6d7S0x5d6S0x3a2: v6d7V5d6V3a2(0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061) = CONST 
    0x6f9S0x5d6S0x3a2: MSTORE v7ccV6c9V5d6V3a2, v6d7V5d6V3a2(0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061)
    0x6faS0x5d6S0x3a2: v6faV5d6V3a2(0x646472657373) = CONST 
    0x701S0x5d6S0x3a2: v701V5d6V3a2(0xd0) = CONST 
    0x703S0x5d6S0x3a2: v703V5d6V3a2(0x6464726573730000000000000000000000000000000000000000000000000000) = SHL v701V5d6V3a2(0xd0), v6faV5d6V3a2(0x646472657373)
    0x704S0x5d6S0x3a2: v704V5d6V3a2(0x20) = CONST 
    0x707S0x5d6S0x3a2: v707V5d6V3a2 = ADD v7ccV6c9V5d6V3a2, v704V5d6V3a2(0x20)
    0x708S0x5d6S0x3a2: MSTORE v707V5d6V3a2, v703V5d6V3a2(0x6464726573730000000000000000000000000000000000000000000000000000)
    0x709S0x5d6S0x3a2: v709V5d6V3a2(0x40) = CONST 
    0x70bS0x5d6S0x3a2: v70bV5d6V3a2 = ADD v709V5d6V3a2(0x40), v7ccV6c9V5d6V3a2
    0x710S0x5d6S0x3a2: JUMP v790V5d6V3a2(0xb2d)

    Begin block 0xb2dB0x5d6B0x3a2
    prev=[0x6d6B0x5d6B0x3a2], succ=[0xa00B0x3a2]
    =================================
    0xb32S0x5d6S0x3a2: JUMP v5e5V3a2(0xa00)

    Begin block 0xa00B0x3a2
    prev=[0xb2dB0x5d6B0x3a2], succ=[]
    =================================
    0xa01S0x3a2: va01V3a2(0x40) = CONST 
    0xa03S0x3a2: va03V3a2 = MLOAD va01V3a2(0x40)
    0xa06S0x3a2: va06V3a2(0x84) = SUB v70bV5d6V3a2, va03V3a2
    0xa08S0x3a2: REVERT va03V3a2, va06V3a2(0x84)

    Begin block 0x5edB0x3a2
    prev=[0x5c7B0x3a2], succ=[0x9b7B0x3a2]
    =================================
    0x5eeS0x3a2: v5eeV3a2(0x0) = CONST 
    0x5f1S0x3a2: v5f1V3a2 = SLOAD v5eeV3a2(0x0)
    0x5f2S0x3a2: v5f2V3a2(0x40) = CONST 
    0x5f4S0x3a2: v5f4V3a2 = MLOAD v5f2V3a2(0x40)
    0x5f5S0x3a2: v5f5V3a2(0x1) = CONST 
    0x5f7S0x3a2: v5f7V3a2(0x1) = CONST 
    0x5f9S0x3a2: v5f9V3a2(0xa0) = CONST 
    0x5fbS0x3a2: v5fbV3a2(0x10000000000000000000000000000000000000000) = SHL v5f9V3a2(0xa0), v5f7V3a2(0x1)
    0x5fcS0x3a2: v5fcV3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5fbV3a2(0x10000000000000000000000000000000000000000), v5f5V3a2(0x1)
    0x5ffS0x3a2: v5ffV3a2 = AND v64aV66bV393, v5fcV3a2(0xffffffffffffffffffffffffffffffffffffffff)
    0x602S0x3a2: v602V3a2 = AND v5f1V3a2, v5fcV3a2(0xffffffffffffffffffffffffffffffffffffffff)
    0x604S0x3a2: v604V3a2(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
    0x626S0x3a2: LOG3 v5f4V3a2, v5eeV3a2(0x0), v604V3a2(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0), v602V3a2, v5ffV3a2
    0x627S0x3a2: v627V3a2(0x0) = CONST 
    0x62aS0x3a2: v62aV3a2 = SLOAD v627V3a2(0x0)
    0x62bS0x3a2: v62bV3a2(0x1) = CONST 
    0x62dS0x3a2: v62dV3a2(0x1) = CONST 
    0x62fS0x3a2: v62fV3a2(0xa0) = CONST 
    0x631S0x3a2: v631V3a2(0x10000000000000000000000000000000000000000) = SHL v62fV3a2(0xa0), v62dV3a2(0x1)
    0x632S0x3a2: v632V3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v631V3a2(0x10000000000000000000000000000000000000000), v62bV3a2(0x1)
    0x633S0x3a2: v633V3a2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v632V3a2(0xffffffffffffffffffffffffffffffffffffffff)
    0x634S0x3a2: v634V3a2 = AND v633V3a2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v62aV3a2
    0x635S0x3a2: v635V3a2(0x1) = CONST 
    0x637S0x3a2: v637V3a2(0x1) = CONST 
    0x639S0x3a2: v639V3a2(0xa0) = CONST 
    0x63bS0x3a2: v63bV3a2(0x10000000000000000000000000000000000000000) = SHL v639V3a2(0xa0), v637V3a2(0x1)
    0x63cS0x3a2: v63cV3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v63bV3a2(0x10000000000000000000000000000000000000000), v635V3a2(0x1)
    0x640S0x3a2: v640V3a2 = AND v63cV3a2(0xffffffffffffffffffffffffffffffffffffffff), v64aV66bV393
    0x644S0x3a2: v644V3a2 = OR v640V3a2, v634V3a2
    0x646S0x3a2: SSTORE v627V3a2(0x0), v644V3a2
    0x647S0x3a2: JUMP v56dV3a2(0x9b7)

    Begin block 0x9b7B0x3a2
    prev=[0x5edB0x3a2], succ=[0x91e]
    =================================
    0x9b9S0x3a2: JUMP v395(0x91e)

    Begin block 0x91e
    prev=[0x9b7B0x3a2], succ=[]
    =================================
    0x91f: STOP 

}

function BZRX()() public {
    Begin block 0x3a7
    prev=[], succ=[0x3af, 0x3b3]
    =================================
    0x3a8: v3a8 = CALLVALUE 
    0x3aa: v3aa = ISZERO v3a8
    0x3ab: v3ab(0x3b3) = CONST 
    0x3ae: JUMPI v3ab(0x3b3), v3aa

    Begin block 0x3af
    prev=[0x3a7], succ=[]
    =================================
    0x3af: v3af(0x0) = CONST 
    0x3b2: REVERT v3af(0x0), v3af(0x0)

    Begin block 0x3b3
    prev=[0x3a7], succ=[0x578]
    =================================
    0x3b5: v3b5(0x1b0) = CONST 
    0x3b8: v3b8(0x578) = CONST 
    0x3bb: JUMP v3b8(0x578)

    Begin block 0x578
    prev=[0x3b3], succ=[0x1b00x3a7]
    =================================
    0x579: v579(0x1) = CONST 
    0x57b: v57b = SLOAD v579(0x1)
    0x57c: v57c(0x1) = CONST 
    0x57e: v57e(0x1) = CONST 
    0x580: v580(0xa0) = CONST 
    0x582: v582(0x10000000000000000000000000000000000000000) = SHL v580(0xa0), v57e(0x1)
    0x583: v583(0xffffffffffffffffffffffffffffffffffffffff) = SUB v582(0x10000000000000000000000000000000000000000), v57c(0x1)
    0x584: v584 = AND v583(0xffffffffffffffffffffffffffffffffffffffff), v57b
    0x586: JUMP v3b5(0x1b0)

    Begin block 0x1b00x3a7
    prev=[0x578], succ=[0x76cB0x1b00x3a7]
    =================================
    0x1b10x3a7: v3a71b1(0x40) = CONST 
    0x1b30x3a7: v3a71b3 = MLOAD v3a71b1(0x40)
    0x1b40x3a7: v3a71b4(0x885) = CONST 
    0x1b90x3a7: v3a71b9(0x76c) = CONST 
    0x1bc0x3a7: JUMP v3a71b9(0x76c)

    Begin block 0x76cB0x1b00x3a7
    prev=[0x1b00x3a7], succ=[0x6b1B0x1b00x3a7]
    =================================
    0x76dS0x1b00x3a7: v76dV1b03a7(0x20) = CONST 
    0x770S0x1b00x3a7: v770V1b03a7 = ADD v3a71b3, v76dV1b03a7(0x20)
    0x771S0x1b00x3a7: v771V1b03a7(0xae3) = CONST 
    0x776S0x1b00x3a7: v776V1b03a7(0x6b1) = CONST 
    0x779S0x1b00x3a7: JUMP v776V1b03a7(0x6b1)

    Begin block 0x6b1B0x1b00x3a7
    prev=[0x76cB0x1b00x3a7], succ=[0x7cfB0x6b1B0x1b00x3a7]
    =================================
    0x6b2S0x1b00x3a7: v6b2V1b03a7(0xa74) = CONST 
    0x6b6S0x1b00x3a7: v6b6V1b03a7(0x7cf) = CONST 
    0x6b9S0x1b00x3a7: JUMP v6b6V1b03a7(0x7cf)

    Begin block 0x7cfB0x6b1B0x1b00x3a7
    prev=[0x6b1B0x1b00x3a7], succ=[0x7dfB0x6b1B0x1b00x3a7]
    =================================
    0x7d0S0x6b1S0x1b00x3a7: v7d0V6b1V1b03a7(0x0) = CONST 
    0x7d2S0x6b1S0x1b00x3a7: v7d2V6b1V1b03a7(0xbc1) = CONST 
    0x7d6S0x6b1S0x1b00x3a7: v7d6V6b1V1b03a7(0x7df) = CONST 
    0x7d9S0x6b1S0x1b00x3a7: JUMP v7d6V6b1V1b03a7(0x7df)

    Begin block 0x7dfB0x6b1B0x1b00x3a7
    prev=[0x7cfB0x6b1B0x1b00x3a7], succ=[0xbc1B0x6b1B0x1b00x3a7]
    =================================
    0x7e0S0x6b1S0x1b00x3a7: v7e0V6b1V1b03a7(0x1) = CONST 
    0x7e2S0x6b1S0x1b00x3a7: v7e2V6b1V1b03a7(0x1) = CONST 
    0x7e4S0x6b1S0x1b00x3a7: v7e4V6b1V1b03a7(0xa0) = CONST 
    0x7e6S0x6b1S0x1b00x3a7: v7e6V6b1V1b03a7(0x10000000000000000000000000000000000000000) = SHL v7e4V6b1V1b03a7(0xa0), v7e2V6b1V1b03a7(0x1)
    0x7e7S0x6b1S0x1b00x3a7: v7e7V6b1V1b03a7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e6V6b1V1b03a7(0x10000000000000000000000000000000000000000), v7e0V6b1V1b03a7(0x1)
    0x7e8S0x6b1S0x1b00x3a7: v7e8V6b1V1b03a7 = AND v7e7V6b1V1b03a7(0xffffffffffffffffffffffffffffffffffffffff), v584
    0x7eaS0x6b1S0x1b00x3a7: JUMP v7d2V6b1V1b03a7(0xbc1)

    Begin block 0xbc1B0x6b1B0x1b00x3a7
    prev=[0x7dfB0x6b1B0x1b00x3a7], succ=[0xa74B0x1b00x3a7]
    =================================
    0xbc6S0x6b1S0x1b00x3a7: JUMP v6b2V1b03a7(0xa74)

    Begin block 0xa74B0x1b00x3a7
    prev=[0xbc1B0x6b1B0x1b00x3a7], succ=[0xae3B0x1b00x3a7]
    =================================
    0xa76S0x1b00x3a7: MSTORE v3a71b3, v7e8V6b1V1b03a7
    0xa79S0x1b00x3a7: JUMP v771V1b03a7(0xae3)

    Begin block 0xae3B0x1b00x3a7
    prev=[0xa74B0x1b00x3a7], succ=[0x8850x3a7]
    =================================
    0xae8S0x1b00x3a7: JUMP v3a71b4(0x885)

    Begin block 0x8850x3a7
    prev=[0xae3B0x1b00x3a7], succ=[]
    =================================
    0x8860x3a7: v3a7886(0x40) = CONST 
    0x8880x3a7: v3a7888 = MLOAD v3a7886(0x40)
    0x88b0x3a7: v3a788b(0x20) = SUB v770V1b03a7, v3a7888
    0x88d0x3a7: RETURN v3a7888, v3a788b(0x20)

}

function 0x58b(0x58barg0x0, 0x58barg0x1) private {
    Begin block 0x58b
    prev=[], succ=[0x9d9, 0x5bb]
    =================================
    0x58c: v58c(0x0) = CONST 
    0x58f: v58f = EXTCODEHASH v58barg0
    0x590: v590(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST 
    0x5b3: v5b3 = EQ v590(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470), v58f
    0x5b5: v5b5 = ISZERO v5b3
    0x5b7: v5b7(0x9d9) = CONST 
    0x5ba: JUMPI v5b7(0x9d9), v5b3

    Begin block 0x9d9
    prev=[0x58b], succ=[]
    =================================
    0x9e0: RETURNPRIVATE v58barg1, v5b5

    Begin block 0x5bb
    prev=[0x58b], succ=[0x5bf]
    =================================
    0x5bd: v5bd = ISZERO v58f
    0x5be: v5be = ISZERO v5bd

    Begin block 0x5bf
    prev=[0x5bb], succ=[]
    =================================
    0x5c6: RETURNPRIVATE v58barg1, v5be

}

