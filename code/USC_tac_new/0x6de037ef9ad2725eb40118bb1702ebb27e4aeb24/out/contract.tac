function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x873]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x867: v867(0x873) = CONST 
    0x868: JUMPI v867(0x873), v8

    Begin block 0xd
    prev=[0x0], succ=[0x876, 0x41]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
    0x2f: v2f = DIV vf, v10(0x100000000000000000000000000000000000000000000000000000000)
    0x30: v30(0xffffffff) = CONST 
    0x35: v35 = AND v30(0xffffffff), v2f
    0x37: v37(0x3659cfe6) = CONST 
    0x3c: v3c = EQ v37(0x3659cfe6), v35
    0x869: v869(0x876) = CONST 
    0x86a: JUMPI v869(0x876), v3c

    Begin block 0x876
    prev=[0xd], succ=[]
    =================================
    0x877: v877(0x77) = CONST 
    0x878: CALLPRIVATE v877(0x77)

    Begin block 0x41
    prev=[0xd], succ=[0x879, 0x4c]
    =================================
    0x42: v42(0x4f1ef286) = CONST 
    0x47: v47 = EQ v42(0x4f1ef286), v35
    0x86b: v86b(0x879) = CONST 
    0x86c: JUMPI v86b(0x879), v47

    Begin block 0x879
    prev=[0x41], succ=[]
    =================================
    0x87a: v87a(0xba) = CONST 
    0x87b: CALLPRIVATE v87a(0xba)

    Begin block 0x4c
    prev=[0x41], succ=[0x87c, 0x57]
    =================================
    0x4d: v4d(0x5c60da1b) = CONST 
    0x52: v52 = EQ v4d(0x5c60da1b), v35
    0x86d: v86d(0x87c) = CONST 
    0x86e: JUMPI v86d(0x87c), v52

    Begin block 0x87c
    prev=[0x4c], succ=[]
    =================================
    0x87d: v87d(0x108) = CONST 
    0x87e: CALLPRIVATE v87d(0x108)

    Begin block 0x57
    prev=[0x4c], succ=[0x87f, 0x62]
    =================================
    0x58: v58(0x8f283970) = CONST 
    0x5d: v5d = EQ v58(0x8f283970), v35
    0x86f: v86f(0x87f) = CONST 
    0x870: JUMPI v86f(0x87f), v5d

    Begin block 0x87f
    prev=[0x57], succ=[]
    =================================
    0x880: v880(0x15f) = CONST 
    0x881: CALLPRIVATE v880(0x15f)

    Begin block 0x62
    prev=[0x57], succ=[0x873, 0x882]
    =================================
    0x63: v63(0xf851a440) = CONST 
    0x68: v68 = EQ v63(0xf851a440), v35
    0x871: v871(0x882) = CONST 
    0x872: JUMPI v871(0x882), v68

    Begin block 0x873
    prev=[0x0, 0x62], succ=[]
    =================================
    0x874: v874(0x6d) = CONST 
    0x875: CALLPRIVATE v874(0x6d)

    Begin block 0x882
    prev=[0x62], succ=[]
    =================================
    0x883: v883(0x1a2) = CONST 
    0x884: CALLPRIVATE v883(0x1a2)

}

function implementation()() public {
    Begin block 0x108
    prev=[], succ=[0x110, 0x114]
    =================================
    0x109: v109 = CALLVALUE 
    0x10b: v10b = ISZERO v109
    0x10c: v10c(0x114) = CONST 
    0x10f: JUMPI v10c(0x114), v10b

    Begin block 0x110
    prev=[0x108], succ=[]
    =================================
    0x110: v110(0x0) = CONST 
    0x113: REVERT v110(0x0), v110(0x0)

    Begin block 0x114
    prev=[0x108], succ=[0x11d]
    =================================
    0x116: v116(0x11d) = CONST 
    0x119: v119(0x305) = CONST 
    0x11c: v11c_0 = CALLPRIVATE v119(0x305), v116(0x11d)

    Begin block 0x11d
    prev=[0x114], succ=[]
    =================================
    0x11e: v11e(0x40) = CONST 
    0x120: v120 = MLOAD v11e(0x40)
    0x123: v123(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x138: v138 = AND v123(0xffffffffffffffffffffffffffffffffffffffff), v11c_0
    0x139: v139(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x14e: v14e = AND v139(0xffffffffffffffffffffffffffffffffffffffff), v138
    0x150: MSTORE v120, v14e
    0x151: v151(0x20) = CONST 
    0x153: v153 = ADD v151(0x20), v120
    0x157: v157(0x40) = CONST 
    0x159: v159 = MLOAD v157(0x40)
    0x15c: v15c(0x20) = SUB v153, v159
    0x15e: RETURN v159, v15c(0x20)

}

function changeAdmin(address)() public {
    Begin block 0x15f
    prev=[], succ=[0x167, 0x16b]
    =================================
    0x160: v160 = CALLVALUE 
    0x162: v162 = ISZERO v160
    0x163: v163(0x16b) = CONST 
    0x166: JUMPI v163(0x16b), v162

    Begin block 0x167
    prev=[0x15f], succ=[]
    =================================
    0x167: v167(0x0) = CONST 
    0x16a: REVERT v167(0x0), v167(0x0)

    Begin block 0x16b
    prev=[0x15f], succ=[0x35dB0x16b]
    =================================
    0x16d: v16d(0x1a0) = CONST 
    0x170: v170(0x4) = CONST 
    0x173: v173 = CALLDATASIZE 
    0x174: v174 = SUB v173, v170(0x4)
    0x176: v176 = ADD v170(0x4), v174
    0x17a: v17a = CALLDATALOAD v170(0x4)
    0x17b: v17b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x190: v190 = AND v17b(0xffffffffffffffffffffffffffffffffffffffff), v17a
    0x192: v192(0x20) = CONST 
    0x194: v194(0x24) = ADD v192(0x20), v170(0x4)
    0x19c: v19c(0x35d) = CONST 
    0x19f: JUMP v19c(0x35d), v190, v16d(0x1a0)

    Begin block 0x35dB0x16b
    prev=[0x16b], succ=[0x6a5B0x35dB0x16b]
    =================================
    0x35eS0x16b: v35eV16b(0x365) = CONST 
    0x361S0x16b: v361V16b(0x6a5) = CONST 
    0x364S0x16b: JUMP v361V16b(0x6a5)

    Begin block 0x6a5B0x35dB0x16b
    prev=[0x35dB0x16b], succ=[0x365B0x16b]
    =================================
    0x6a6S0x35dS0x16b: v6a6V35dV16b(0x0) = CONST 
    0x6a9S0x35dS0x16b: v6a9V35dV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x35dS0x16b: v6caV35dV16b(0x1) = CONST 
    0x6ccS0x35dS0x16b: v6ccV35dV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV35dV16b(0x1), v6a9V35dV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x35dS0x16b: v6d0V35dV16b = SLOAD v6ccV35dV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x35dS0x16b: JUMP v35eV16b(0x365)

    Begin block 0x365B0x16b
    prev=[0x6a5B0x35dB0x16b], succ=[0x399B0x16b, 0x50fB0x16b]
    =================================
    0x366S0x16b: v366V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x37bS0x16b: v37bV16b = AND v366V16b(0xffffffffffffffffffffffffffffffffffffffff), v6d0V35dV16b
    0x37cS0x16b: v37cV16b = CALLER 
    0x37dS0x16b: v37dV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x392S0x16b: v392V16b = AND v37dV16b(0xffffffffffffffffffffffffffffffffffffffff), v37cV16b
    0x393S0x16b: v393V16b = EQ v392V16b, v37bV16b
    0x394S0x16b: v394V16b = ISZERO v393V16b
    0x395S0x16b: v395V16b(0x50f) = CONST 
    0x398S0x16b: JUMPI v395V16b(0x50f), v394V16b

    Begin block 0x399B0x16b
    prev=[0x365B0x16b], succ=[0x3d0B0x16b, 0x463B0x16b]
    =================================
    0x399S0x16b: v399V16b(0x0) = CONST 
    0x39bS0x16b: v39bV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x3b0S0x16b: v3b0V16b(0x0) = AND v39bV16b(0xffffffffffffffffffffffffffffffffffffffff), v399V16b(0x0)
    0x3b2S0x16b: v3b2V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x3c7S0x16b: v3c7V16b = AND v3b2V16b(0xffffffffffffffffffffffffffffffffffffffff), v190
    0x3c8S0x16b: v3c8V16b = EQ v3c7V16b, v3b0V16b(0x0)
    0x3c9S0x16b: v3c9V16b = ISZERO v3c8V16b
    0x3caS0x16b: v3caV16b = ISZERO v3c9V16b
    0x3cbS0x16b: v3cbV16b = ISZERO v3caV16b
    0x3ccS0x16b: v3ccV16b(0x463) = CONST 
    0x3cfS0x16b: JUMPI v3ccV16b(0x463), v3cbV16b

    Begin block 0x3d0B0x16b
    prev=[0x399B0x16b], succ=[]
    =================================
    0x3d0S0x16b: v3d0V16b(0x40) = CONST 
    0x3d2S0x16b: v3d2V16b = MLOAD v3d0V16b(0x40)
    0x3d3S0x16b: v3d3V16b(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x3f5S0x16b: MSTORE v3d2V16b, v3d3V16b(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x3f6S0x16b: v3f6V16b(0x4) = CONST 
    0x3f8S0x16b: v3f8V16b = ADD v3f6V16b(0x4), v3d2V16b
    0x3fbS0x16b: v3fbV16b(0x20) = CONST 
    0x3fdS0x16b: v3fdV16b = ADD v3fbV16b(0x20), v3f8V16b
    0x400S0x16b: v400V16b(0x20) = SUB v3fdV16b, v3f8V16b
    0x402S0x16b: MSTORE v3f8V16b, v400V16b(0x20)
    0x403S0x16b: v403V16b(0x36) = CONST 
    0x406S0x16b: MSTORE v3fdV16b, v403V16b(0x36)
    0x407S0x16b: v407V16b(0x20) = CONST 
    0x409S0x16b: v409V16b = ADD v407V16b(0x20), v3fdV16b
    0x40bS0x16b: v40bV16b(0x43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f) = CONST 
    0x42dS0x16b: MSTORE v409V16b, v40bV16b(0x43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f)
    0x42eS0x16b: v42eV16b(0x20) = CONST 
    0x430S0x16b: v430V16b = ADD v42eV16b(0x20), v409V16b
    0x431S0x16b: v431V16b(0x787920746f20746865207a65726f206164647265737300000000000000000000) = CONST 
    0x453S0x16b: MSTORE v430V16b, v431V16b(0x787920746f20746865207a65726f206164647265737300000000000000000000)
    0x455S0x16b: v455V16b(0x40) = CONST 
    0x457S0x16b: v457V16b = ADD v455V16b(0x40), v409V16b
    0x45bS0x16b: v45bV16b(0x40) = CONST 
    0x45dS0x16b: v45dV16b = MLOAD v45bV16b(0x40)
    0x460S0x16b: v460V16b(0x84) = SUB v457V16b, v45dV16b
    0x462S0x16b: REVERT v45dV16b, v460V16b(0x84)

    Begin block 0x463B0x16b
    prev=[0x399B0x16b], succ=[0x6a5B0x463B0x16b]
    =================================
    0x464S0x16b: v464V16b(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f) = CONST 
    0x485S0x16b: v485V16b(0x48c) = CONST 
    0x488S0x16b: v488V16b(0x6a5) = CONST 
    0x48bS0x16b: JUMP v488V16b(0x6a5)

    Begin block 0x6a5B0x463B0x16b
    prev=[0x463B0x16b], succ=[0x48cB0x16b]
    =================================
    0x6a6S0x463S0x16b: v6a6V463V16b(0x0) = CONST 
    0x6a9S0x463S0x16b: v6a9V463V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x463S0x16b: v6caV463V16b(0x1) = CONST 
    0x6ccS0x463S0x16b: v6ccV463V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV463V16b(0x1), v6a9V463V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x463S0x16b: v6d0V463V16b = SLOAD v6ccV463V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x463S0x16b: JUMP v485V16b(0x48c)

    Begin block 0x48cB0x16b
    prev=[0x6a5B0x463B0x16b], succ=[0x725B0x16b]
    =================================
    0x48eS0x16b: v48eV16b(0x40) = CONST 
    0x490S0x16b: v490V16b = MLOAD v48eV16b(0x40)
    0x493S0x16b: v493V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4a8S0x16b: v4a8V16b = AND v493V16b(0xffffffffffffffffffffffffffffffffffffffff), v6d0V463V16b
    0x4a9S0x16b: v4a9V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4beS0x16b: v4beV16b = AND v4a9V16b(0xffffffffffffffffffffffffffffffffffffffff), v4a8V16b
    0x4c0S0x16b: MSTORE v490V16b, v4beV16b
    0x4c1S0x16b: v4c1V16b(0x20) = CONST 
    0x4c3S0x16b: v4c3V16b = ADD v4c1V16b(0x20), v490V16b
    0x4c5S0x16b: v4c5V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4daS0x16b: v4daV16b = AND v4c5V16b(0xffffffffffffffffffffffffffffffffffffffff), v190
    0x4dbS0x16b: v4dbV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4f0S0x16b: v4f0V16b = AND v4dbV16b(0xffffffffffffffffffffffffffffffffffffffff), v4daV16b
    0x4f2S0x16b: MSTORE v4c3V16b, v4f0V16b
    0x4f3S0x16b: v4f3V16b(0x20) = CONST 
    0x4f5S0x16b: v4f5V16b = ADD v4f3V16b(0x20), v4c3V16b
    0x4faS0x16b: v4faV16b(0x40) = CONST 
    0x4fcS0x16b: v4fcV16b = MLOAD v4faV16b(0x40)
    0x4ffS0x16b: v4ffV16b(0x40) = SUB v4f5V16b, v4fcV16b
    0x501S0x16b: LOG1 v4fcV16b, v4ffV16b(0x40), v464V16b(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)
    0x502S0x16b: v502V16b(0x50a) = CONST 
    0x506S0x16b: v506V16b(0x725) = CONST 
    0x509S0x16b: JUMP v506V16b(0x725)

    Begin block 0x725B0x16b
    prev=[0x48cB0x16b], succ=[0x50aB0x16b]
    =================================
    0x726S0x16b: v726V16b(0x0) = CONST 
    0x728S0x16b: v728V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x749S0x16b: v749V16b(0x1) = CONST 
    0x74bS0x16b: v74bV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v749V16b(0x1), v728V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x750S0x16b: SSTORE v74bV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b), v190
    0x753S0x16b: JUMP v502V16b(0x50a)

    Begin block 0x50aB0x16b
    prev=[0x725B0x16b], succ=[0x518B0x16b]
    =================================
    0x50bS0x16b: v50bV16b(0x518) = CONST 
    0x50eS0x16b: JUMP v50bV16b(0x518)

    Begin block 0x518B0x16b
    prev=[0x50aB0x16b], succ=[0x1a0]
    =================================
    0x51aS0x16b: JUMP v16d(0x1a0)

    Begin block 0x1a0
    prev=[0x69c0x35dB0x16b, 0x518B0x16b], succ=[]
    =================================
    0x1a1: STOP 

    Begin block 0x50fB0x16b
    prev=[0x365B0x16b], succ=[0x1f90x35dB0x16b]
    =================================
    0x510S0x16b: v510V16b(0x517) = CONST 
    0x513S0x16b: v513V16b(0x1f9) = CONST 
    0x516S0x16b: JUMP v513V16b(0x1f9)

    Begin block 0x1f90x35dB0x16b
    prev=[0x50fB0x16b], succ=[0x2010x35dB0x16b]
    =================================
    0x1fa0x35dS0x16b: v35d1faV16b(0x201) = CONST 
    0x1fd0x35dS0x16b: v35d1fdV16b(0x573) = CONST 
    0x2000x35dS0x16b: CALLPRIVATE v35d1fdV16b(0x573), v35d1faV16b(0x201)

    Begin block 0x2010x35dB0x16b
    prev=[0x1f90x35dB0x16b], succ=[0x64eB0x2010x35dB0x16b]
    =================================
    0x2020x35dS0x16b: v35d202V16b(0x211) = CONST 
    0x2050x35dS0x16b: v35d205V16b(0x20c) = CONST 
    0x2080x35dS0x16b: v35d208V16b(0x64e) = CONST 
    0x20b0x35dS0x16b: JUMP v35d208V16b(0x64e)

    Begin block 0x64eB0x2010x35dB0x16b
    prev=[0x2010x35dB0x16b], succ=[0x20c0x35dB0x16b]
    =================================
    0x64fS0x2010x35dS0x16b: v64fV20135dV16b(0x0) = CONST 
    0x652S0x2010x35dS0x16b: v652V20135dV16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x35dS0x16b: v673V20135dV16b(0x1) = CONST 
    0x675S0x2010x35dS0x16b: v675V20135dV16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V20135dV16b(0x1), v652V20135dV16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x35dS0x16b: v679V20135dV16b = SLOAD v675V20135dV16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x35dS0x16b: JUMP v35d205V16b(0x20c)

    Begin block 0x20c0x35dB0x16b
    prev=[0x64eB0x2010x35dB0x16b], succ=[0x67f0x35dB0x16b]
    =================================
    0x20d0x35dS0x16b: v35d20dV16b(0x67f) = CONST 
    0x2100x35dS0x16b: JUMP v35d20dV16b(0x67f)

    Begin block 0x67f0x35dB0x16b
    prev=[0x20c0x35dB0x16b], succ=[0x69c0x35dB0x16b, 0x6a00x35dB0x16b]
    =================================
    0x6800x35dS0x16b: v35d680V16b = CALLDATASIZE 
    0x6810x35dS0x16b: v35d681V16b(0x0) = CONST 
    0x6840x35dS0x16b: CALLDATACOPY v35d681V16b(0x0), v35d681V16b(0x0), v35d680V16b
    0x6850x35dS0x16b: v35d685V16b(0x0) = CONST 
    0x6880x35dS0x16b: v35d688V16b = CALLDATASIZE 
    0x6890x35dS0x16b: v35d689V16b(0x0) = CONST 
    0x68c0x35dS0x16b: v35d68cV16b = GAS 
    0x68d0x35dS0x16b: v35d68dV16b = DELEGATECALL v35d68cV16b, v679V20135dV16b, v35d689V16b(0x0), v35d688V16b, v35d685V16b(0x0), v35d685V16b(0x0)
    0x68e0x35dS0x16b: v35d68eV16b = RETURNDATASIZE 
    0x68f0x35dS0x16b: v35d68fV16b(0x0) = CONST 
    0x6920x35dS0x16b: RETURNDATACOPY v35d68fV16b(0x0), v35d68fV16b(0x0), v35d68eV16b
    0x6940x35dS0x16b: v35d694V16b(0x0) = CONST 
    0x6970x35dS0x16b: v35d697V16b = EQ v35d68dV16b, v35d694V16b(0x0)
    0x6980x35dS0x16b: v35d698V16b(0x6a0) = CONST 
    0x69b0x35dS0x16b: JUMPI v35d698V16b(0x6a0), v35d697V16b

    Begin block 0x69c0x35dB0x16b
    prev=[0x67f0x35dB0x16b], succ=[0x1a0]
    =================================
    0x69c0x35dS0x16b: v35d69cV16b = RETURNDATASIZE 
    0x69d0x35dS0x16b: v35d69dV16b(0x0) = CONST 
    0x69f0x35dS0x16b: RETURN v35d69dV16b(0x0), v35d69cV16b

    Begin block 0x6a00x35dB0x16b
    prev=[0x67f0x35dB0x16b], succ=[]
    =================================
    0x6a10x35dS0x16b: v35d6a1V16b = RETURNDATASIZE 
    0x6a20x35dS0x16b: v35d6a2V16b(0x0) = CONST 
    0x6a40x35dS0x16b: REVERT v35d6a2V16b(0x0), v35d6a1V16b

}

function admin()() public {
    Begin block 0x1a2
    prev=[], succ=[0x1aa, 0x1ae]
    =================================
    0x1a3: v1a3 = CALLVALUE 
    0x1a5: v1a5 = ISZERO v1a3
    0x1a6: v1a6(0x1ae) = CONST 
    0x1a9: JUMPI v1a6(0x1ae), v1a5

    Begin block 0x1aa
    prev=[0x1a2], succ=[]
    =================================
    0x1aa: v1aa(0x0) = CONST 
    0x1ad: REVERT v1aa(0x0), v1aa(0x0)

    Begin block 0x1ae
    prev=[0x1a2], succ=[0x1b7]
    =================================
    0x1b0: v1b0(0x1b7) = CONST 
    0x1b3: v1b3(0x51b) = CONST 
    0x1b6: v1b6_0 = CALLPRIVATE v1b3(0x51b), v1b0(0x1b7)

    Begin block 0x1b7
    prev=[0x1ae], succ=[]
    =================================
    0x1b8: v1b8(0x40) = CONST 
    0x1ba: v1ba = MLOAD v1b8(0x40)
    0x1bd: v1bd(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1d2: v1d2 = AND v1bd(0xffffffffffffffffffffffffffffffffffffffff), v1b6_0
    0x1d3: v1d3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1e8: v1e8 = AND v1d3(0xffffffffffffffffffffffffffffffffffffffff), v1d2
    0x1ea: MSTORE v1ba, v1e8
    0x1eb: v1eb(0x20) = CONST 
    0x1ed: v1ed = ADD v1eb(0x20), v1ba
    0x1f1: v1f1(0x40) = CONST 
    0x1f3: v1f3 = MLOAD v1f1(0x40)
    0x1f6: v1f6(0x20) = SUB v1ed, v1f3
    0x1f8: RETURN v1f3, v1f6(0x20)

}

function 0x305(0x305arg0x0) private {
    Begin block 0x305
    prev=[], succ=[0x6a5B0x305]
    =================================
    0x306: v306(0x0) = CONST 
    0x308: v308(0x30f) = CONST 
    0x30b: v30b(0x6a5) = CONST 
    0x30e: JUMP v30b(0x6a5)

    Begin block 0x6a5B0x305
    prev=[0x305], succ=[0x30f]
    =================================
    0x6a6S0x305: v6a6V305(0x0) = CONST 
    0x6a9S0x305: v6a9V305(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x305: v6caV305(0x1) = CONST 
    0x6ccS0x305: v6ccV305(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV305(0x1), v6a9V305(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x305: v6d0V305 = SLOAD v6ccV305(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x305: JUMP v308(0x30f)

    Begin block 0x30f
    prev=[0x6a5B0x305], succ=[0x343, 0x351]
    =================================
    0x310: v310(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x325: v325 = AND v310(0xffffffffffffffffffffffffffffffffffffffff), v6d0V305
    0x326: v326 = CALLER 
    0x327: v327(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x33c: v33c = AND v327(0xffffffffffffffffffffffffffffffffffffffff), v326
    0x33d: v33d = EQ v33c, v325
    0x33e: v33e = ISZERO v33d
    0x33f: v33f(0x351) = CONST 
    0x342: JUMPI v33f(0x351), v33e

    Begin block 0x343
    prev=[0x30f], succ=[0x64eB0x343]
    =================================
    0x343: v343(0x34a) = CONST 
    0x346: v346(0x64e) = CONST 
    0x349: JUMP v346(0x64e)

    Begin block 0x64eB0x343
    prev=[0x343], succ=[0x34a]
    =================================
    0x64fS0x343: v64fV343(0x0) = CONST 
    0x652S0x343: v652V343(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x343: v673V343(0x1) = CONST 
    0x675S0x343: v675V343(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V343(0x1), v652V343(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x343: v679V343 = SLOAD v675V343(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x343: JUMP v343(0x34a)

    Begin block 0x34a
    prev=[0x64eB0x343], succ=[0x35a]
    =================================
    0x34d: v34d(0x35a) = CONST 
    0x350: JUMP v34d(0x35a)

    Begin block 0x35a
    prev=[0x34a], succ=[]
    =================================
    0x35c: RETURNPRIVATE v305arg0, v679V343

    Begin block 0x351
    prev=[0x30f], succ=[0x1f90x305]
    =================================
    0x352: v352(0x359) = CONST 
    0x355: v355(0x1f9) = CONST 
    0x358: JUMP v355(0x1f9)

    Begin block 0x1f90x305
    prev=[0x351], succ=[0x2010x305]
    =================================
    0x1fa0x305: v3051fa(0x201) = CONST 
    0x1fd0x305: v3051fd(0x573) = CONST 
    0x2000x305: CALLPRIVATE v3051fd(0x573), v3051fa(0x201)

    Begin block 0x2010x305
    prev=[0x1f90x305], succ=[0x64eB0x2010x305]
    =================================
    0x2020x305: v305202(0x211) = CONST 
    0x2050x305: v305205(0x20c) = CONST 
    0x2080x305: v305208(0x64e) = CONST 
    0x20b0x305: JUMP v305208(0x64e)

    Begin block 0x64eB0x2010x305
    prev=[0x2010x305], succ=[0x20c0x305]
    =================================
    0x64fS0x2010x305: v64fV201305(0x0) = CONST 
    0x652S0x2010x305: v652V201305(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x305: v673V201305(0x1) = CONST 
    0x675S0x2010x305: v675V201305(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V201305(0x1), v652V201305(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x305: v679V201305 = SLOAD v675V201305(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x305: JUMP v305205(0x20c)

    Begin block 0x20c0x305
    prev=[0x64eB0x2010x305], succ=[0x67f0x305]
    =================================
    0x20d0x305: v30520d(0x67f) = CONST 
    0x2100x305: JUMP v30520d(0x67f)

    Begin block 0x67f0x305
    prev=[0x20c0x305], succ=[0x69c0x305, 0x6a00x305]
    =================================
    0x6800x305: v305680 = CALLDATASIZE 
    0x6810x305: v305681(0x0) = CONST 
    0x6840x305: CALLDATACOPY v305681(0x0), v305681(0x0), v305680
    0x6850x305: v305685(0x0) = CONST 
    0x6880x305: v305688 = CALLDATASIZE 
    0x6890x305: v305689(0x0) = CONST 
    0x68c0x305: v30568c = GAS 
    0x68d0x305: v30568d = DELEGATECALL v30568c, v679V201305, v305689(0x0), v305688, v305685(0x0), v305685(0x0)
    0x68e0x305: v30568e = RETURNDATASIZE 
    0x68f0x305: v30568f(0x0) = CONST 
    0x6920x305: RETURNDATACOPY v30568f(0x0), v30568f(0x0), v30568e
    0x6940x305: v305694(0x0) = CONST 
    0x6970x305: v305697 = EQ v30568d, v305694(0x0)
    0x6980x305: v305698(0x6a0) = CONST 
    0x69b0x305: JUMPI v305698(0x6a0), v305697

    Begin block 0x69c0x305
    prev=[0x67f0x305], succ=[]
    =================================
    0x69c0x305: v30569c = RETURNDATASIZE 
    0x69d0x305: v30569d(0x0) = CONST 
    0x69f0x305: RETURN v30569d(0x0), v30569c

    Begin block 0x6a00x305
    prev=[0x67f0x305], succ=[]
    =================================
    0x6a10x305: v3056a1 = RETURNDATASIZE 
    0x6a20x305: v3056a2(0x0) = CONST 
    0x6a40x305: REVERT v3056a2(0x0), v3056a1

}

function 0x51b(0x51barg0x0) private {
    Begin block 0x51b
    prev=[], succ=[0x6a5B0x51b]
    =================================
    0x51c: v51c(0x0) = CONST 
    0x51e: v51e(0x525) = CONST 
    0x521: v521(0x6a5) = CONST 
    0x524: JUMP v521(0x6a5)

    Begin block 0x6a5B0x51b
    prev=[0x51b], succ=[0x525]
    =================================
    0x6a6S0x51b: v6a6V51b(0x0) = CONST 
    0x6a9S0x51b: v6a9V51b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x51b: v6caV51b(0x1) = CONST 
    0x6ccS0x51b: v6ccV51b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV51b(0x1), v6a9V51b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x51b: v6d0V51b = SLOAD v6ccV51b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x51b: JUMP v51e(0x525)

    Begin block 0x525
    prev=[0x6a5B0x51b], succ=[0x559, 0x567]
    =================================
    0x526: v526(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x53b: v53b = AND v526(0xffffffffffffffffffffffffffffffffffffffff), v6d0V51b
    0x53c: v53c = CALLER 
    0x53d: v53d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x552: v552 = AND v53d(0xffffffffffffffffffffffffffffffffffffffff), v53c
    0x553: v553 = EQ v552, v53b
    0x554: v554 = ISZERO v553
    0x555: v555(0x567) = CONST 
    0x558: JUMPI v555(0x567), v554

    Begin block 0x559
    prev=[0x525], succ=[0x6a5B0x559]
    =================================
    0x559: v559(0x560) = CONST 
    0x55c: v55c(0x6a5) = CONST 
    0x55f: JUMP v55c(0x6a5)

    Begin block 0x6a5B0x559
    prev=[0x559], succ=[0x560]
    =================================
    0x6a6S0x559: v6a6V559(0x0) = CONST 
    0x6a9S0x559: v6a9V559(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x559: v6caV559(0x1) = CONST 
    0x6ccS0x559: v6ccV559(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV559(0x1), v6a9V559(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x559: v6d0V559 = SLOAD v6ccV559(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x559: JUMP v559(0x560)

    Begin block 0x560
    prev=[0x6a5B0x559], succ=[0x570]
    =================================
    0x563: v563(0x570) = CONST 
    0x566: JUMP v563(0x570)

    Begin block 0x570
    prev=[0x560], succ=[]
    =================================
    0x572: RETURNPRIVATE v51barg0, v6d0V559

    Begin block 0x567
    prev=[0x525], succ=[0x1f90x51b]
    =================================
    0x568: v568(0x56f) = CONST 
    0x56b: v56b(0x1f9) = CONST 
    0x56e: JUMP v56b(0x1f9)

    Begin block 0x1f90x51b
    prev=[0x567], succ=[0x2010x51b]
    =================================
    0x1fa0x51b: v51b1fa(0x201) = CONST 
    0x1fd0x51b: v51b1fd(0x573) = CONST 
    0x2000x51b: CALLPRIVATE v51b1fd(0x573), v51b1fa(0x201)

    Begin block 0x2010x51b
    prev=[0x1f90x51b], succ=[0x64eB0x2010x51b]
    =================================
    0x2020x51b: v51b202(0x211) = CONST 
    0x2050x51b: v51b205(0x20c) = CONST 
    0x2080x51b: v51b208(0x64e) = CONST 
    0x20b0x51b: JUMP v51b208(0x64e)

    Begin block 0x64eB0x2010x51b
    prev=[0x2010x51b], succ=[0x20c0x51b]
    =================================
    0x64fS0x2010x51b: v64fV20151b(0x0) = CONST 
    0x652S0x2010x51b: v652V20151b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x51b: v673V20151b(0x1) = CONST 
    0x675S0x2010x51b: v675V20151b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V20151b(0x1), v652V20151b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x51b: v679V20151b = SLOAD v675V20151b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x51b: JUMP v51b205(0x20c)

    Begin block 0x20c0x51b
    prev=[0x64eB0x2010x51b], succ=[0x67f0x51b]
    =================================
    0x20d0x51b: v51b20d(0x67f) = CONST 
    0x2100x51b: JUMP v51b20d(0x67f)

    Begin block 0x67f0x51b
    prev=[0x20c0x51b], succ=[0x69c0x51b, 0x6a00x51b]
    =================================
    0x6800x51b: v51b680 = CALLDATASIZE 
    0x6810x51b: v51b681(0x0) = CONST 
    0x6840x51b: CALLDATACOPY v51b681(0x0), v51b681(0x0), v51b680
    0x6850x51b: v51b685(0x0) = CONST 
    0x6880x51b: v51b688 = CALLDATASIZE 
    0x6890x51b: v51b689(0x0) = CONST 
    0x68c0x51b: v51b68c = GAS 
    0x68d0x51b: v51b68d = DELEGATECALL v51b68c, v679V20151b, v51b689(0x0), v51b688, v51b685(0x0), v51b685(0x0)
    0x68e0x51b: v51b68e = RETURNDATASIZE 
    0x68f0x51b: v51b68f(0x0) = CONST 
    0x6920x51b: RETURNDATACOPY v51b68f(0x0), v51b68f(0x0), v51b68e
    0x6940x51b: v51b694(0x0) = CONST 
    0x6970x51b: v51b697 = EQ v51b68d, v51b694(0x0)
    0x6980x51b: v51b698(0x6a0) = CONST 
    0x69b0x51b: JUMPI v51b698(0x6a0), v51b697

    Begin block 0x69c0x51b
    prev=[0x67f0x51b], succ=[]
    =================================
    0x69c0x51b: v51b69c = RETURNDATASIZE 
    0x69d0x51b: v51b69d(0x0) = CONST 
    0x69f0x51b: RETURN v51b69d(0x0), v51b69c

    Begin block 0x6a00x51b
    prev=[0x67f0x51b], succ=[]
    =================================
    0x6a10x51b: v51b6a1 = RETURNDATASIZE 
    0x6a20x51b: v51b6a2(0x0) = CONST 
    0x6a40x51b: REVERT v51b6a2(0x0), v51b6a1

}

function 0x573(0x573arg0x0) private {
    Begin block 0x573
    prev=[], succ=[0x6a5B0x573]
    =================================
    0x574: v574(0x57b) = CONST 
    0x577: v577(0x6a5) = CONST 
    0x57a: JUMP v577(0x6a5)

    Begin block 0x6a5B0x573
    prev=[0x573], succ=[0x57b]
    =================================
    0x6a6S0x573: v6a6V573(0x0) = CONST 
    0x6a9S0x573: v6a9V573(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x573: v6caV573(0x1) = CONST 
    0x6ccS0x573: v6ccV573(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV573(0x1), v6a9V573(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x573: v6d0V573 = SLOAD v6ccV573(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x573: JUMP v574(0x57b)

    Begin block 0x57b
    prev=[0x6a5B0x573], succ=[0x5b1, 0x644]
    =================================
    0x57c: v57c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x591: v591 = AND v57c(0xffffffffffffffffffffffffffffffffffffffff), v6d0V573
    0x592: v592 = CALLER 
    0x593: v593(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x5a8: v5a8 = AND v593(0xffffffffffffffffffffffffffffffffffffffff), v592
    0x5a9: v5a9 = EQ v5a8, v591
    0x5aa: v5aa = ISZERO v5a9
    0x5ab: v5ab = ISZERO v5aa
    0x5ac: v5ac = ISZERO v5ab
    0x5ad: v5ad(0x644) = CONST 
    0x5b0: JUMPI v5ad(0x644), v5ac

    Begin block 0x5b1
    prev=[0x57b], succ=[]
    =================================
    0x5b1: v5b1(0x40) = CONST 
    0x5b3: v5b3 = MLOAD v5b1(0x40)
    0x5b4: v5b4(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x5d6: MSTORE v5b3, v5b4(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5d7: v5d7(0x4) = CONST 
    0x5d9: v5d9 = ADD v5d7(0x4), v5b3
    0x5dc: v5dc(0x20) = CONST 
    0x5de: v5de = ADD v5dc(0x20), v5d9
    0x5e1: v5e1(0x20) = SUB v5de, v5d9
    0x5e3: MSTORE v5d9, v5e1(0x20)
    0x5e4: v5e4(0x32) = CONST 
    0x5e7: MSTORE v5de, v5e4(0x32)
    0x5e8: v5e8(0x20) = CONST 
    0x5ea: v5ea = ADD v5e8(0x20), v5de
    0x5ec: v5ec(0x43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672) = CONST 
    0x60e: MSTORE v5ea, v5ec(0x43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672)
    0x60f: v60f(0x20) = CONST 
    0x611: v611 = ADD v60f(0x20), v5ea
    0x612: v612(0x6f6d207468652070726f78792061646d696e0000000000000000000000000000) = CONST 
    0x634: MSTORE v611, v612(0x6f6d207468652070726f78792061646d696e0000000000000000000000000000)
    0x636: v636(0x40) = CONST 
    0x638: v638 = ADD v636(0x40), v5ea
    0x63c: v63c(0x40) = CONST 
    0x63e: v63e = MLOAD v63c(0x40)
    0x641: v641(0x84) = SUB v638, v63e
    0x643: REVERT v63e, v641(0x84)

    Begin block 0x644
    prev=[0x57b], succ=[0x754B0x644]
    =================================
    0x645: v645(0x64c) = CONST 
    0x648: v648(0x754) = CONST 
    0x64b: JUMP v648(0x754), v645(0x64c)

    Begin block 0x754B0x644
    prev=[0x644], succ=[0x64c]
    =================================
    0x755S0x644: JUMP v645(0x64c)

    Begin block 0x64c
    prev=[0x754B0x644], succ=[]
    =================================
    0x64d: RETURNPRIVATE v573arg0

}

function fallback()() public {
    Begin block 0x6d
    prev=[], succ=[0x1f90x6d]
    =================================
    0x6e: v6e(0x75) = CONST 
    0x71: v71(0x1f9) = CONST 
    0x74: JUMP v71(0x1f9)

    Begin block 0x1f90x6d
    prev=[0x6d], succ=[0x2010x6d]
    =================================
    0x1fa0x6d: v6d1fa(0x201) = CONST 
    0x1fd0x6d: v6d1fd(0x573) = CONST 
    0x2000x6d: CALLPRIVATE v6d1fd(0x573), v6d1fa(0x201)

    Begin block 0x2010x6d
    prev=[0x1f90x6d], succ=[0x64eB0x2010x6d]
    =================================
    0x2020x6d: v6d202(0x211) = CONST 
    0x2050x6d: v6d205(0x20c) = CONST 
    0x2080x6d: v6d208(0x64e) = CONST 
    0x20b0x6d: JUMP v6d208(0x64e)

    Begin block 0x64eB0x2010x6d
    prev=[0x2010x6d], succ=[0x20c0x6d]
    =================================
    0x64fS0x2010x6d: v64fV2016d(0x0) = CONST 
    0x652S0x2010x6d: v652V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x6d: v673V2016d(0x1) = CONST 
    0x675S0x2010x6d: v675V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V2016d(0x1), v652V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x6d: v679V2016d = SLOAD v675V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x6d: JUMP v6d205(0x20c)

    Begin block 0x20c0x6d
    prev=[0x64eB0x2010x6d], succ=[0x67f0x6d]
    =================================
    0x20d0x6d: v6d20d(0x67f) = CONST 
    0x2100x6d: JUMP v6d20d(0x67f)

    Begin block 0x67f0x6d
    prev=[0x20c0x6d], succ=[0x69c0x6d, 0x6a00x6d]
    =================================
    0x6800x6d: v6d680 = CALLDATASIZE 
    0x6810x6d: v6d681(0x0) = CONST 
    0x6840x6d: CALLDATACOPY v6d681(0x0), v6d681(0x0), v6d680
    0x6850x6d: v6d685(0x0) = CONST 
    0x6880x6d: v6d688 = CALLDATASIZE 
    0x6890x6d: v6d689(0x0) = CONST 
    0x68c0x6d: v6d68c = GAS 
    0x68d0x6d: v6d68d = DELEGATECALL v6d68c, v679V2016d, v6d689(0x0), v6d688, v6d685(0x0), v6d685(0x0)
    0x68e0x6d: v6d68e = RETURNDATASIZE 
    0x68f0x6d: v6d68f(0x0) = CONST 
    0x6920x6d: RETURNDATACOPY v6d68f(0x0), v6d68f(0x0), v6d68e
    0x6940x6d: v6d694(0x0) = CONST 
    0x6970x6d: v6d697 = EQ v6d68d, v6d694(0x0)
    0x6980x6d: v6d698(0x6a0) = CONST 
    0x69b0x6d: JUMPI v6d698(0x6a0), v6d697

    Begin block 0x69c0x6d
    prev=[0x67f0x6d], succ=[]
    =================================
    0x69c0x6d: v6d69c = RETURNDATASIZE 
    0x69d0x6d: v6d69d(0x0) = CONST 
    0x69f0x6d: RETURN v6d69d(0x0), v6d69c

    Begin block 0x6a00x6d
    prev=[0x67f0x6d], succ=[]
    =================================
    0x6a10x6d: v6d6a1 = RETURNDATASIZE 
    0x6a20x6d: v6d6a2(0x0) = CONST 
    0x6a40x6d: REVERT v6d6a2(0x0), v6d6a1

}

function 0x6d6(0x6d6arg0x0, 0x6d6arg0x1) private {
    Begin block 0x6d6
    prev=[], succ=[0x756]
    =================================
    0x6d7: v6d7(0x6df) = CONST 
    0x6db: v6db(0x756) = CONST 
    0x6de: JUMP v6db(0x756)

    Begin block 0x756
    prev=[0x6d6], succ=[0x828]
    =================================
    0x757: v757(0x0) = CONST 
    0x759: v759(0x761) = CONST 
    0x75d: v75d(0x828) = CONST 
    0x760: JUMP v75d(0x828)

    Begin block 0x828
    prev=[0x756], succ=[0x761]
    =================================
    0x829: v829(0x0) = CONST 
    0x82d: v82d = EXTCODESIZE v6d6arg0
    0x830: v830(0x0) = CONST 
    0x833: v833 = GT v82d, v830(0x0)
    0x83a: JUMP v759(0x761)

    Begin block 0x761
    prev=[0x828], succ=[0x768, 0x7fb]
    =================================
    0x762: v762 = ISZERO v833
    0x763: v763 = ISZERO v762
    0x764: v764(0x7fb) = CONST 
    0x767: JUMPI v764(0x7fb), v763

    Begin block 0x768
    prev=[0x761], succ=[]
    =================================
    0x768: v768(0x40) = CONST 
    0x76a: v76a = MLOAD v768(0x40)
    0x76b: v76b(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x78d: MSTORE v76a, v76b(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x78e: v78e(0x4) = CONST 
    0x790: v790 = ADD v78e(0x4), v76a
    0x793: v793(0x20) = CONST 
    0x795: v795 = ADD v793(0x20), v790
    0x798: v798(0x20) = SUB v795, v790
    0x79a: MSTORE v790, v798(0x20)
    0x79b: v79b(0x3b) = CONST 
    0x79e: MSTORE v795, v79b(0x3b)
    0x79f: v79f(0x20) = CONST 
    0x7a1: v7a1 = ADD v79f(0x20), v795
    0x7a3: v7a3(0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f) = CONST 
    0x7c5: MSTORE v7a1, v7a3(0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f)
    0x7c6: v7c6(0x20) = CONST 
    0x7c8: v7c8 = ADD v7c6(0x20), v7a1
    0x7c9: v7c9(0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000) = CONST 
    0x7eb: MSTORE v7c8, v7c9(0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000)
    0x7ed: v7ed(0x40) = CONST 
    0x7ef: v7ef = ADD v7ed(0x40), v7a1
    0x7f3: v7f3(0x40) = CONST 
    0x7f5: v7f5 = MLOAD v7f3(0x40)
    0x7f8: v7f8(0x84) = SUB v7ef, v7f5
    0x7fa: REVERT v7f5, v7f8(0x84)

    Begin block 0x7fb
    prev=[0x761], succ=[0x6df]
    =================================
    0x7fc: v7fc(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x81d: v81d(0x1) = CONST 
    0x81f: v81f(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v81d(0x1), v7fc(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x824: SSTORE v81f(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3), v6d6arg0
    0x827: JUMP v6d7(0x6df)

    Begin block 0x6df
    prev=[0x7fb], succ=[]
    =================================
    0x6e1: v6e1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x6f6: v6f6 = AND v6e1(0xffffffffffffffffffffffffffffffffffffffff), v6d6arg0
    0x6f7: v6f7(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b) = CONST 
    0x718: v718(0x40) = CONST 
    0x71a: v71a = MLOAD v718(0x40)
    0x71b: v71b(0x40) = CONST 
    0x71d: v71d = MLOAD v71b(0x40)
    0x720: v720(0x0) = SUB v71a, v71d
    0x722: LOG2 v71d, v720(0x0), v6f7(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b), v6f6
    0x724: RETURNPRIVATE v6d6arg1

}

function upgradeTo(address)() public {
    Begin block 0x77
    prev=[], succ=[0x7f, 0x83]
    =================================
    0x78: v78 = CALLVALUE 
    0x7a: v7a = ISZERO v78
    0x7b: v7b(0x83) = CONST 
    0x7e: JUMPI v7b(0x83), v7a

    Begin block 0x7f
    prev=[0x77], succ=[]
    =================================
    0x7f: v7f(0x0) = CONST 
    0x82: REVERT v7f(0x0), v7f(0x0)

    Begin block 0x83
    prev=[0x77], succ=[0x213B0x83]
    =================================
    0x85: v85(0xb8) = CONST 
    0x88: v88(0x4) = CONST 
    0x8b: v8b = CALLDATASIZE 
    0x8c: v8c = SUB v8b, v88(0x4)
    0x8e: v8e = ADD v88(0x4), v8c
    0x92: v92 = CALLDATALOAD v88(0x4)
    0x93: v93(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xa8: va8 = AND v93(0xffffffffffffffffffffffffffffffffffffffff), v92
    0xaa: vaa(0x20) = CONST 
    0xac: vac(0x24) = ADD vaa(0x20), v88(0x4)
    0xb4: vb4(0x213) = CONST 
    0xb7: JUMP vb4(0x213), va8, v85(0xb8)

    Begin block 0x213B0x83
    prev=[0x83], succ=[0x6a5B0x213B0x83]
    =================================
    0x214S0x83: v214V83(0x21b) = CONST 
    0x217S0x83: v217V83(0x6a5) = CONST 
    0x21aS0x83: JUMP v217V83(0x6a5)

    Begin block 0x6a5B0x213B0x83
    prev=[0x213B0x83], succ=[0x21bB0x83]
    =================================
    0x6a6S0x213S0x83: v6a6V213V83(0x0) = CONST 
    0x6a9S0x213S0x83: v6a9V213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x213S0x83: v6caV213V83(0x1) = CONST 
    0x6ccS0x213S0x83: v6ccV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV213V83(0x1), v6a9V213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x213S0x83: v6d0V213V83 = SLOAD v6ccV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x213S0x83: JUMP v214V83(0x21b)

    Begin block 0x21bB0x83
    prev=[0x6a5B0x213B0x83], succ=[0x24fB0x83, 0x25cB0x83]
    =================================
    0x21cS0x83: v21cV83(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x231S0x83: v231V83 = AND v21cV83(0xffffffffffffffffffffffffffffffffffffffff), v6d0V213V83
    0x232S0x83: v232V83 = CALLER 
    0x233S0x83: v233V83(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x248S0x83: v248V83 = AND v233V83(0xffffffffffffffffffffffffffffffffffffffff), v232V83
    0x249S0x83: v249V83 = EQ v248V83, v231V83
    0x24aS0x83: v24aV83 = ISZERO v249V83
    0x24bS0x83: v24bV83(0x25c) = CONST 
    0x24eS0x83: JUMPI v24bV83(0x25c), v24aV83

    Begin block 0x24fB0x83
    prev=[0x21bB0x83], succ=[0x257B0x83]
    =================================
    0x24fS0x83: v24fV83(0x257) = CONST 
    0x253S0x83: v253V83(0x6d6) = CONST 
    0x256S0x83: CALLPRIVATE v253V83(0x6d6), va8, v24fV83(0x257)

    Begin block 0x257B0x83
    prev=[0x24fB0x83], succ=[0x265B0x83]
    =================================
    0x258S0x83: v258V83(0x265) = CONST 
    0x25bS0x83: JUMP v258V83(0x265)

    Begin block 0x265B0x83
    prev=[0x257B0x83], succ=[0xb8]
    =================================
    0x267S0x83: JUMP v85(0xb8)

    Begin block 0xb8
    prev=[0x69c0x213B0x83, 0x265B0x83], succ=[]
    =================================
    0xb9: STOP 

    Begin block 0x25cB0x83
    prev=[0x21bB0x83], succ=[0x1f90x213B0x83]
    =================================
    0x25dS0x83: v25dV83(0x264) = CONST 
    0x260S0x83: v260V83(0x1f9) = CONST 
    0x263S0x83: JUMP v260V83(0x1f9)

    Begin block 0x1f90x213B0x83
    prev=[0x25cB0x83], succ=[0x2010x213B0x83]
    =================================
    0x1fa0x213S0x83: v2131faV83(0x201) = CONST 
    0x1fd0x213S0x83: v2131fdV83(0x573) = CONST 
    0x2000x213S0x83: CALLPRIVATE v2131fdV83(0x573), v2131faV83(0x201)

    Begin block 0x2010x213B0x83
    prev=[0x1f90x213B0x83], succ=[0x64eB0x2010x213B0x83]
    =================================
    0x2020x213S0x83: v213202V83(0x211) = CONST 
    0x2050x213S0x83: v213205V83(0x20c) = CONST 
    0x2080x213S0x83: v213208V83(0x64e) = CONST 
    0x20b0x213S0x83: JUMP v213208V83(0x64e)

    Begin block 0x64eB0x2010x213B0x83
    prev=[0x2010x213B0x83], succ=[0x20c0x213B0x83]
    =================================
    0x64fS0x2010x213S0x83: v64fV201213V83(0x0) = CONST 
    0x652S0x2010x213S0x83: v652V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x213S0x83: v673V201213V83(0x1) = CONST 
    0x675S0x2010x213S0x83: v675V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V201213V83(0x1), v652V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x213S0x83: v679V201213V83 = SLOAD v675V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x213S0x83: JUMP v213205V83(0x20c)

    Begin block 0x20c0x213B0x83
    prev=[0x64eB0x2010x213B0x83], succ=[0x67f0x213B0x83]
    =================================
    0x20d0x213S0x83: v21320dV83(0x67f) = CONST 
    0x2100x213S0x83: JUMP v21320dV83(0x67f)

    Begin block 0x67f0x213B0x83
    prev=[0x20c0x213B0x83], succ=[0x69c0x213B0x83, 0x6a00x213B0x83]
    =================================
    0x6800x213S0x83: v213680V83 = CALLDATASIZE 
    0x6810x213S0x83: v213681V83(0x0) = CONST 
    0x6840x213S0x83: CALLDATACOPY v213681V83(0x0), v213681V83(0x0), v213680V83
    0x6850x213S0x83: v213685V83(0x0) = CONST 
    0x6880x213S0x83: v213688V83 = CALLDATASIZE 
    0x6890x213S0x83: v213689V83(0x0) = CONST 
    0x68c0x213S0x83: v21368cV83 = GAS 
    0x68d0x213S0x83: v21368dV83 = DELEGATECALL v21368cV83, v679V201213V83, v213689V83(0x0), v213688V83, v213685V83(0x0), v213685V83(0x0)
    0x68e0x213S0x83: v21368eV83 = RETURNDATASIZE 
    0x68f0x213S0x83: v21368fV83(0x0) = CONST 
    0x6920x213S0x83: RETURNDATACOPY v21368fV83(0x0), v21368fV83(0x0), v21368eV83
    0x6940x213S0x83: v213694V83(0x0) = CONST 
    0x6970x213S0x83: v213697V83 = EQ v21368dV83, v213694V83(0x0)
    0x6980x213S0x83: v213698V83(0x6a0) = CONST 
    0x69b0x213S0x83: JUMPI v213698V83(0x6a0), v213697V83

    Begin block 0x69c0x213B0x83
    prev=[0x67f0x213B0x83], succ=[0xb8]
    =================================
    0x69c0x213S0x83: v21369cV83 = RETURNDATASIZE 
    0x69d0x213S0x83: v21369dV83(0x0) = CONST 
    0x69f0x213S0x83: RETURN v21369dV83(0x0), v21369cV83

    Begin block 0x6a00x213B0x83
    prev=[0x67f0x213B0x83], succ=[]
    =================================
    0x6a10x213S0x83: v2136a1V83 = RETURNDATASIZE 
    0x6a20x213S0x83: v2136a2V83(0x0) = CONST 
    0x6a40x213S0x83: REVERT v2136a2V83(0x0), v2136a1V83

}

function upgradeToAndCall(address,bytes)() public {
    Begin block 0xba
    prev=[], succ=[0x268B0xba]
    =================================
    0xbb: vbb(0x106) = CONST 
    0xbe: vbe(0x4) = CONST 
    0xc1: vc1 = CALLDATASIZE 
    0xc2: vc2 = SUB vc1, vbe(0x4)
    0xc4: vc4 = ADD vbe(0x4), vc2
    0xc8: vc8 = CALLDATALOAD vbe(0x4)
    0xc9: vc9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xde: vde = AND vc9(0xffffffffffffffffffffffffffffffffffffffff), vc8
    0xe0: ve0(0x20) = CONST 
    0xe2: ve2(0x24) = ADD ve0(0x20), vbe(0x4)
    0xe8: ve8 = CALLDATALOAD ve2(0x24)
    0xea: vea(0x20) = CONST 
    0xec: vec(0x44) = ADD vea(0x20), ve2(0x24)
    0xef: vef = ADD vbe(0x4), ve8
    0xf1: vf1 = CALLDATALOAD vef
    0xf3: vf3(0x20) = CONST 
    0xf5: vf5 = ADD vf3(0x20), vef
    0x102: v102(0x268) = CONST 
    0x105: JUMP v102(0x268), vf1, vf5, vde, vbb(0x106)

    Begin block 0x268B0xba
    prev=[0xba], succ=[0x6a5B0x268B0xba]
    =================================
    0x269S0xba: v269Vba(0x270) = CONST 
    0x26cS0xba: v26cVba(0x6a5) = CONST 
    0x26fS0xba: JUMP v26cVba(0x6a5)

    Begin block 0x6a5B0x268B0xba
    prev=[0x268B0xba], succ=[0x270B0xba]
    =================================
    0x6a6S0x268S0xba: v6a6V268Vba(0x0) = CONST 
    0x6a9S0x268S0xba: v6a9V268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6caS0x268S0xba: v6caV268Vba(0x1) = CONST 
    0x6ccS0x268S0xba: v6ccV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6caV268Vba(0x1), v6a9V268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d0S0x268S0xba: v6d0V268Vba = SLOAD v6ccV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d5S0x268S0xba: JUMP v269Vba(0x270)

    Begin block 0x270B0xba
    prev=[0x6a5B0x268B0xba], succ=[0x2a4B0xba, 0x2f7B0xba]
    =================================
    0x271S0xba: v271Vba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x286S0xba: v286Vba = AND v271Vba(0xffffffffffffffffffffffffffffffffffffffff), v6d0V268Vba
    0x287S0xba: v287Vba = CALLER 
    0x288S0xba: v288Vba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x29dS0xba: v29dVba = AND v288Vba(0xffffffffffffffffffffffffffffffffffffffff), v287Vba
    0x29eS0xba: v29eVba = EQ v29dVba, v286Vba
    0x29fS0xba: v29fVba = ISZERO v29eVba
    0x2a0S0xba: v2a0Vba(0x2f7) = CONST 
    0x2a3S0xba: JUMPI v2a0Vba(0x2f7), v29fVba

    Begin block 0x2a4B0xba
    prev=[0x270B0xba], succ=[0x2acB0xba]
    =================================
    0x2a4S0xba: v2a4Vba(0x2ac) = CONST 
    0x2a8S0xba: v2a8Vba(0x6d6) = CONST 
    0x2abS0xba: CALLPRIVATE v2a8Vba(0x6d6), vde, v2a4Vba(0x2ac)

    Begin block 0x2acB0xba
    prev=[0x2a4B0xba], succ=[0x2eeB0xba, 0x2f2B0xba]
    =================================
    0x2aeS0xba: v2aeVba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2c3S0xba: v2c3Vba = AND v2aeVba(0xffffffffffffffffffffffffffffffffffffffff), vde
    0x2c6S0xba: v2c6Vba(0x40) = CONST 
    0x2c8S0xba: v2c8Vba = MLOAD v2c6Vba(0x40)
    0x2cfS0xba: CALLDATACOPY v2c8Vba, vf5, vf1
    0x2d1S0xba: v2d1Vba = ADD v2c8Vba, vf1
    0x2d9S0xba: v2d9Vba(0x0) = CONST 
    0x2dbS0xba: v2dbVba(0x40) = CONST 
    0x2ddS0xba: v2ddVba = MLOAD v2dbVba(0x40)
    0x2e0S0xba: v2e0Vba = SUB v2d1Vba, v2ddVba
    0x2e3S0xba: v2e3Vba = GAS 
    0x2e4S0xba: v2e4Vba = DELEGATECALL v2e3Vba, v2c3Vba, v2ddVba, v2e0Vba, v2ddVba, v2d9Vba(0x0)
    0x2e8S0xba: v2e8Vba = ISZERO v2e4Vba
    0x2e9S0xba: v2e9Vba = ISZERO v2e8Vba
    0x2eaS0xba: v2eaVba(0x2f2) = CONST 
    0x2edS0xba: JUMPI v2eaVba(0x2f2), v2e9Vba

    Begin block 0x2eeB0xba
    prev=[0x2acB0xba], succ=[]
    =================================
    0x2eeS0xba: v2eeVba(0x0) = CONST 
    0x2f1S0xba: REVERT v2eeVba(0x0), v2eeVba(0x0)

    Begin block 0x2f2B0xba
    prev=[0x2acB0xba], succ=[0x300B0xba]
    =================================
    0x2f3S0xba: v2f3Vba(0x300) = CONST 
    0x2f6S0xba: JUMP v2f3Vba(0x300)

    Begin block 0x300B0xba
    prev=[0x2f2B0xba], succ=[0x106]
    =================================
    0x304S0xba: JUMP vbb(0x106)

    Begin block 0x106
    prev=[0x69c0x268B0xba, 0x300B0xba], succ=[]
    =================================
    0x107: STOP 

    Begin block 0x2f7B0xba
    prev=[0x270B0xba], succ=[0x1f90x268B0xba]
    =================================
    0x2f8S0xba: v2f8Vba(0x2ff) = CONST 
    0x2fbS0xba: v2fbVba(0x1f9) = CONST 
    0x2feS0xba: JUMP v2fbVba(0x1f9)

    Begin block 0x1f90x268B0xba
    prev=[0x2f7B0xba], succ=[0x2010x268B0xba]
    =================================
    0x1fa0x268S0xba: v2681faVba(0x201) = CONST 
    0x1fd0x268S0xba: v2681fdVba(0x573) = CONST 
    0x2000x268S0xba: CALLPRIVATE v2681fdVba(0x573), v2681faVba(0x201)

    Begin block 0x2010x268B0xba
    prev=[0x1f90x268B0xba], succ=[0x64eB0x2010x268B0xba]
    =================================
    0x2020x268S0xba: v268202Vba(0x211) = CONST 
    0x2050x268S0xba: v268205Vba(0x20c) = CONST 
    0x2080x268S0xba: v268208Vba(0x64e) = CONST 
    0x20b0x268S0xba: JUMP v268208Vba(0x64e)

    Begin block 0x64eB0x2010x268B0xba
    prev=[0x2010x268B0xba], succ=[0x20c0x268B0xba]
    =================================
    0x64fS0x2010x268S0xba: v64fV201268Vba(0x0) = CONST 
    0x652S0x2010x268S0xba: v652V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x673S0x2010x268S0xba: v673V201268Vba(0x1) = CONST 
    0x675S0x2010x268S0xba: v675V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v673V201268Vba(0x1), v652V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x679S0x2010x268S0xba: v679V201268Vba = SLOAD v675V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67eS0x2010x268S0xba: JUMP v268205Vba(0x20c)

    Begin block 0x20c0x268B0xba
    prev=[0x64eB0x2010x268B0xba], succ=[0x67f0x268B0xba]
    =================================
    0x20d0x268S0xba: v26820dVba(0x67f) = CONST 
    0x2100x268S0xba: JUMP v26820dVba(0x67f)

    Begin block 0x67f0x268B0xba
    prev=[0x20c0x268B0xba], succ=[0x69c0x268B0xba, 0x6a00x268B0xba]
    =================================
    0x6800x268S0xba: v268680Vba = CALLDATASIZE 
    0x6810x268S0xba: v268681Vba(0x0) = CONST 
    0x6840x268S0xba: CALLDATACOPY v268681Vba(0x0), v268681Vba(0x0), v268680Vba
    0x6850x268S0xba: v268685Vba(0x0) = CONST 
    0x6880x268S0xba: v268688Vba = CALLDATASIZE 
    0x6890x268S0xba: v268689Vba(0x0) = CONST 
    0x68c0x268S0xba: v26868cVba = GAS 
    0x68d0x268S0xba: v26868dVba = DELEGATECALL v26868cVba, v679V201268Vba, v268689Vba(0x0), v268688Vba, v268685Vba(0x0), v268685Vba(0x0)
    0x68e0x268S0xba: v26868eVba = RETURNDATASIZE 
    0x68f0x268S0xba: v26868fVba(0x0) = CONST 
    0x6920x268S0xba: RETURNDATACOPY v26868fVba(0x0), v26868fVba(0x0), v26868eVba
    0x6940x268S0xba: v268694Vba(0x0) = CONST 
    0x6970x268S0xba: v268697Vba = EQ v26868dVba, v268694Vba(0x0)
    0x6980x268S0xba: v268698Vba(0x6a0) = CONST 
    0x69b0x268S0xba: JUMPI v268698Vba(0x6a0), v268697Vba

    Begin block 0x69c0x268B0xba
    prev=[0x67f0x268B0xba], succ=[0x106]
    =================================
    0x69c0x268S0xba: v26869cVba = RETURNDATASIZE 
    0x69d0x268S0xba: v26869dVba(0x0) = CONST 
    0x69f0x268S0xba: RETURN v26869dVba(0x0), v26869cVba

    Begin block 0x6a00x268B0xba
    prev=[0x67f0x268B0xba], succ=[]
    =================================
    0x6a10x268S0xba: v2686a1Vba = RETURNDATASIZE 
    0x6a20x268S0xba: v2686a2Vba(0x0) = CONST 
    0x6a40x268S0xba: REVERT v2686a2Vba(0x0), v2686a1Vba

}

