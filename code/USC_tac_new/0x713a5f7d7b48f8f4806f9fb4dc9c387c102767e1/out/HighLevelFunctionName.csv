0x0	__function_selector__
0x2cd	userInfo(address,address)
0x326	setVaultMaster(address)
0x34e	strategist()
0x372	withdraw(address,uint256,address,uint256,uint8)
0x3b6	whitelistedContract(address)
0x3f0	deposit(address,address,uint256,uint256,bool,uint8)
0x43e	withdraw_fee(address,uint256)
0x47c	whitelistContract(address)
0x4a2	governanceRecoverUnsupported(address,uint256,address)
0x4d8	calc_token_amount_withdraw(address,uint256,address)
0x50e	governance()
0x516	updateReward(address)
0x53c	depositMultiVault(address[],address,uint256[],uint256[],bool,uint8)
0x668	calculateMultiMinReceive(address[],address,uint256[])
0x787	setAcceptContractDepositor(bool)
0x7a6	exit(address,address,uint256,uint8)
0x7e6	updatePool(address,uint256,uint256,uint256)
0x81e	stakeVaultShares(address,uint256,uint8)
0x853	getReward(address,address,uint8)
0x88d	unstake(address,uint256,uint8)
0x8c2	updatePoolReward(address[],uint256[])
0x984	vaultMaster()
0x98c	claimReward(address,uint8)
0x9bb	pendingReward(address,address)
0x9e9	acceptContractDepositor()
0x9f1	cap(address)
0xa17	rewardPoolInfo(address)
0xa7f	setGovernance(address)
0xaa5	calc_token_amount_deposit(address,address,uint256)
0xadb	calc_transfer_vault_shares(address,address,uint256)
0xb11	harvestAllStrategies(address,uint8)
0xb40	transferVault(address,address,uint256,uint256,bool,uint8)
0xb8e	initialize(address)
0xbb4	setStrategist(address)
0xbda	chi()
0xbe2	unfrozenStakeTime(address,address)
0xc10	unwhitelistContract(address)
0xc36	approveForSpender(address,address,uint256)
0xc6c	addPool(address,address,uint256,uint256,uint256,uint256)
0xcb4	shares_owner(address,address)
0x2148	0x2148
0x2d43	0x2d43
0x2fc4	0x2fc4
0x53c3	0x53c3
0x5601	0x5601
0x5607	0x5607
0x567a	0x567a
0x5733	0x5733
0x5775	0x5775
0x57e0	0x57e0
0x58b5	0x58b5
0x590e	0x590e
0x5950	0x5950
0x59aa	0x59aa
0x5a62	0x5a62
0x5b8a	0x5b8a
0x5d37	0x5d37
0x5d4e	0x5d4e
0x5fe2	()
0x5fe2	fallback()
