function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0xf1f]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0xf01: vf01(0xf1f) = CONST 
    0xf02: JUMPI vf01(0xf1f), v8

    Begin block 0xd
    prev=[0x0], succ=[0x7f, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x82c947b7) = CONST 
    0x19: v19 = GT v14(0x82c947b7), v12
    0x1a: v1a(0x7f) = CONST 
    0x1d: JUMPI v1a(0x7f), v19

    Begin block 0x7f
    prev=[0xd], succ=[0xbb, 0x8b]
    =================================
    0x81: v81(0x37a440e6) = CONST 
    0x86: v86 = GT v81(0x37a440e6), v12
    0x87: v87(0xbb) = CONST 
    0x8a: JUMPI v87(0xbb), v86

    Begin block 0xbb
    prev=[0x7f], succ=[0xf22, 0xc7]
    =================================
    0xbd: vbd(0x16c38b3c) = CONST 
    0xc2: vc2 = EQ vbd(0x16c38b3c), v12
    0xf19: vf19(0xf22) = CONST 
    0xf1a: JUMPI vf19(0xf22), vc2

    Begin block 0xf22
    prev=[0xbb], succ=[]
    =================================
    0xf23: vf23(0xec) = CONST 
    0xf24: CALLPRIVATE vf23(0xec)

    Begin block 0xc7
    prev=[0xbb], succ=[0xf25, 0xd2]
    =================================
    0xc8: vc8(0x17b857dd) = CONST 
    0xcd: vcd = EQ vc8(0x17b857dd), v12
    0xf1b: vf1b(0xf25) = CONST 
    0xf1c: JUMPI vf1b(0xf25), vcd

    Begin block 0xf25
    prev=[0xc7], succ=[]
    =================================
    0xf26: vf26(0x129) = CONST 
    0xf27: CALLPRIVATE vf26(0x129)

    Begin block 0xd2
    prev=[0xc7], succ=[0xdd, 0xf28]
    =================================
    0xd3: vd3(0x1ab7710d) = CONST 
    0xd8: vd8 = EQ vd3(0x1ab7710d), v12
    0xf1d: vf1d(0xf28) = CONST 
    0xf1e: JUMPI vf1d(0xf28), vd8

    Begin block 0xdd
    prev=[0xd2], succ=[0xe20x0]
    =================================
    0xdd: vdd(0xe2) = CONST 
    0xe0: JUMP vdd(0xe2)

    Begin block 0xe20x0
    prev=[0x55, 0x7b, 0xb7, 0xdd], succ=[0x5640x0]
    =================================
    0xe30x0: v0e3(0xea) = CONST 
    0xe60x0: v0e6(0x564) = CONST 
    0xe90x0: JUMP v0e6(0x564)

    Begin block 0x5640x0
    prev=[0xe20x0], succ=[0xb34B0x5640x0]
    =================================
    0x5650x0: v0565(0x5b3) = CONST 
    0x5680x0: v0568(0x40) = CONST 
    0x56a0x0: v056a = MLOAD v0568(0x40)
    0x56b0x0: v056b(0x20) = CONST 
    0x56d0x0: v056d = ADD v056b(0x20), v056a
    0x5700x0: v0570(0x5041555345445f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x5920x0: MSTORE v056d, v0570(0x5041555345445f534c4f54000000000000000000000000000000000000000000)
    0x5940x0: v0594(0xb) = CONST 
    0x5960x0: v0596 = ADD v0594(0xb), v056d
    0x5990x0: v0599(0x40) = CONST 
    0x59b0x0: v059b = MLOAD v0599(0x40)
    0x59c0x0: v059c(0x20) = CONST 
    0x5a00x0: v05a0(0x2b) = SUB v0596, v059b
    0x5a10x0: v05a1(0xb) = SUB v05a0(0x2b), v059c(0x20)
    0x5a30x0: MSTORE v059b, v05a1(0xb)
    0x5a50x0: v05a5(0x40) = CONST 
    0x5a70x0: MSTORE v05a5(0x40), v0596
    0x5a90x0: v05a9(0xb) = MLOAD v059b
    0x5ab0x0: v05ab(0x20) = CONST 
    0x5ad0x0: v05ad = ADD v05ab(0x20), v059b
    0x5ae0x0: v05ae = SHA3 v05ad, v05a9(0xb)
    0x5af0x0: v05af(0xb34) = CONST 
    0x5b20x0: JUMP v05af(0xb34)

    Begin block 0xb34B0x5640x0
    prev=[0x5640x0], succ=[0x8b3B0xb34B0x5640x0]
    =================================
    0xb35S0x5640x0: vb35V5640(0x0) = CONST 
    0xb37S0x5640x0: vb37V5640(0x1) = CONST 
    0xb39S0x5640x0: vb39V5640(0x0) = CONST 
    0xb3bS0x5640x0: vb3bV5640(0x1) = SHL vb39V5640(0x0), vb37V5640(0x1)
    0xb3cS0x5640x0: vb3cV5640(0xb44) = CONST 
    0xb40S0x5640x0: vb40V5640(0x8b3) = CONST 
    0xb43S0x5640x0: JUMP vb40V5640(0x8b3)

    Begin block 0x8b3B0xb34B0x5640x0
    prev=[0xb34B0x5640x0], succ=[0xb440xb34B0x5640x0]
    =================================
    0x8b4S0xb34S0x5640x0: v8b4Vb34V5640(0x0) = CONST 
    0x8b8S0xb34S0x5640x0: v8b8Vb34V5640 = SLOAD v05ae
    0x8c2S0xb34S0x5640x0: JUMP vb3cV5640(0xb44)

    Begin block 0xb440xb34B0x5640x0
    prev=[0x8b3B0xb34B0x5640x0], succ=[0x5b30x0]
    =================================
    0xb450xb34S0x5640x0: vb34b45V5640 = EQ v8b8Vb34V5640, vb3bV5640(0x1)
    0xb4b0xb34S0x5640x0: JUMP v0565(0x5b3)

    Begin block 0x5b30x0
    prev=[0xb440xb34B0x5640x0], succ=[0x5b90x0, 0x6090x0]
    =================================
    0x5b40x0: v05b4 = ISZERO vb34b45V5640
    0x5b50x0: v05b5(0x609) = CONST 
    0x5b80x0: JUMPI v05b5(0x609), v05b4

    Begin block 0x5b90x0
    prev=[0x5b30x0], succ=[]
    =================================
    0x5b90x0: v05b9(0x40) = CONST 
    0x5bb0x0: v05bb = MLOAD v05b9(0x40)
    0x5bc0x0: v05bc(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x5de0x0: MSTORE v05bb, v05bc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5df0x0: v05df(0x4) = CONST 
    0x5e10x0: v05e1 = ADD v05df(0x4), v05bb
    0x5e40x0: v05e4(0x20) = CONST 
    0x5e60x0: v05e6 = ADD v05e4(0x20), v05e1
    0x5e90x0: v05e9(0x20) = SUB v05e6, v05e1
    0x5eb0x0: MSTORE v05e1, v05e9(0x20)
    0x5ec0x0: v05ec(0x2c) = CONST 
    0x5ef0x0: MSTORE v05e6, v05ec(0x2c)
    0x5f00x0: v05f0(0x20) = CONST 
    0x5f20x0: v05f2 = ADD v05f0(0x20), v05e6
    0x5f40x0: v05f4(0xeba) = CONST 
    0x5f70x0: v05f7(0x2c) = CONST 
    0x5fa0x0: CODECOPY v05f2, v05f4(0xeba), v05f7(0x2c)
    0x5fb0x0: v05fb(0x40) = CONST 
    0x5fd0x0: v05fd = ADD v05fb(0x40), v05f2
    0x6010x0: v0601(0x40) = CONST 
    0x6030x0: v0603 = MLOAD v0601(0x40)
    0x6060x0: v0606(0x84) = SUB v05fd, v0603
    0x6080x0: REVERT v0603, v0606(0x84)

    Begin block 0x6090x0
    prev=[0x5b30x0], succ=[0xd960x0]
    =================================
    0x60a0x0: v060a(0x611) = CONST 
    0x60d0x0: v060d(0xd96) = CONST 
    0x6100x0: JUMP v060d(0xd96)

    Begin block 0xd960x0
    prev=[0x6090x0], succ=[0xac4B0xd960x0]
    =================================
    0xd970x0: v0d97(0x0) = CONST 
    0xd990x0: v0d99(0xde7) = CONST 
    0xd9c0x0: v0d9c(0x40) = CONST 
    0xd9e0x0: v0d9e = MLOAD v0d9c(0x40)
    0xd9f0x0: v0d9f(0x20) = CONST 
    0xda10x0: v0da1 = ADD v0d9f(0x20), v0d9e
    0xda40x0: v0da4(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000) = CONST 
    0xdc60x0: MSTORE v0da1, v0da4(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000)
    0xdc80x0: v0dc8(0x13) = CONST 
    0xdca0x0: v0dca = ADD v0dc8(0x13), v0da1
    0xdcd0x0: v0dcd(0x40) = CONST 
    0xdcf0x0: v0dcf = MLOAD v0dcd(0x40)
    0xdd00x0: v0dd0(0x20) = CONST 
    0xdd40x0: v0dd4(0x33) = SUB v0dca, v0dcf
    0xdd50x0: v0dd5(0x13) = SUB v0dd4(0x33), v0dd0(0x20)
    0xdd70x0: MSTORE v0dcf, v0dd5(0x13)
    0xdd90x0: v0dd9(0x40) = CONST 
    0xddb0x0: MSTORE v0dd9(0x40), v0dca
    0xddd0x0: v0ddd(0x13) = MLOAD v0dcf
    0xddf0x0: v0ddf(0x20) = CONST 
    0xde10x0: v0de1 = ADD v0ddf(0x20), v0dcf
    0xde20x0: v0de2 = SHA3 v0de1, v0ddd(0x13)
    0xde30x0: v0de3(0xac4) = CONST 
    0xde60x0: JUMP v0de3(0xac4)

    Begin block 0xac4B0xd960x0
    prev=[0xd960x0], succ=[0x8b3B0xac4B0xd960x0]
    =================================
    0xac5S0xd960x0: vac5Vd960(0x0) = CONST 
    0xac7S0xd960x0: vac7Vd960(0xad7) = CONST 
    0xacaS0xd960x0: vacaVd960(0xad2) = CONST 
    0xaceS0xd960x0: vaceVd960(0x8b3) = CONST 
    0xad1S0xd960x0: JUMP vaceVd960(0x8b3)

    Begin block 0x8b3B0xac4B0xd960x0
    prev=[0xac4B0xd960x0], succ=[0xad20xac4B0xd960x0]
    =================================
    0x8b4S0xac4S0xd960x0: v8b4Vac4Vd960(0x0) = CONST 
    0x8b8S0xac4S0xd960x0: v8b8Vac4Vd960 = SLOAD v0de2
    0x8c2S0xac4S0xd960x0: JUMP vacaVd960(0xad2)

    Begin block 0xad20xac4B0xd960x0
    prev=[0x8b3B0xac4B0xd960x0], succ=[0x9190xac4B0xd960x0]
    =================================
    0xad30xac4S0xd960x0: vac4ad3Vd960(0x919) = CONST 
    0xad60xac4S0xd960x0: JUMP vac4ad3Vd960(0x919)

    Begin block 0x9190xac4B0xd960x0
    prev=[0xad20xac4B0xd960x0], succ=[0xad70xac4B0xd960x0]
    =================================
    0x91a0xac4S0xd960x0: vac491aVd960(0x0) = CONST 
    0x91d0xac4S0xd960x0: vac491dVd960(0x0) = CONST 
    0x91f0xac4S0xd960x0: vac491fVd960 = SHR vac491dVd960(0x0), v8b8Vac4Vd960
    0x9250xac4S0xd960x0: JUMP vac7Vd960(0xad7)

    Begin block 0xad70xac4B0xd960x0
    prev=[0x9190xac4B0xd960x0], succ=[0xde70x0]
    =================================
    0xadd0xac4S0xd960x0: JUMP v0d99(0xde7)

    Begin block 0xde70x0
    prev=[0xad70xac4B0xd960x0], succ=[0xe090x0, 0xe0c0x0]
    =================================
    0xdea0x0: v0dea(0x40) = CONST 
    0xdec0x0: v0dec = MLOAD v0dea(0x40)
    0xded0x0: v0ded = CALLDATASIZE 
    0xdee0x0: v0dee(0x0) = CONST 
    0xdf10x0: CALLDATACOPY v0dec, v0dee(0x0), v0ded
    0xdf20x0: v0df2(0x0) = CONST 
    0xdf50x0: v0df5 = CALLDATASIZE 
    0xdf80x0: v0df8 = GAS 
    0xdf90x0: v0df9 = DELEGATECALL v0df8, vac491fVd960, v0dec, v0df5, v0df2(0x0), v0df2(0x0)
    0xdfa0x0: v0dfa = RETURNDATASIZE 
    0xdfc0x0: v0dfc(0x0) = CONST 
    0xdff0x0: RETURNDATACOPY v0dec, v0dfc(0x0), v0dfa
    0xe010x0: v0e01(0x0) = CONST 
    0xe040x0: v0e04 = EQ v0df9, v0e01(0x0)
    0xe050x0: v0e05(0xe0c) = CONST 
    0xe080x0: JUMPI v0e05(0xe0c), v0e04

    Begin block 0xe090x0
    prev=[0xde70x0], succ=[]
    =================================
    0xe0b0x0: RETURN v0dec, v0dfa

    Begin block 0xe0c0x0
    prev=[0xde70x0], succ=[]
    =================================
    0xe0f0x0: REVERT v0dec, v0dfa

    Begin block 0xf28
    prev=[0xd2], succ=[]
    =================================
    0xf29: vf29(0x140) = CONST 
    0xf2a: CALLPRIVATE vf29(0x140)

    Begin block 0x8b
    prev=[0x7f], succ=[0xf2b, 0x96]
    =================================
    0x8c: v8c(0x37a440e6) = CONST 
    0x91: v91 = EQ v8c(0x37a440e6), v12
    0xf11: vf11(0xf2b) = CONST 
    0xf12: JUMPI vf11(0xf2b), v91

    Begin block 0xf2b
    prev=[0x8b], succ=[]
    =================================
    0xf2c: vf2c(0x197) = CONST 
    0xf2d: CALLPRIVATE vf2c(0x197)

    Begin block 0x96
    prev=[0x8b], succ=[0xf2e, 0xa1]
    =================================
    0x97: v97(0x4bde4b2e) = CONST 
    0x9c: v9c = EQ v97(0x4bde4b2e), v12
    0xf13: vf13(0xf2e) = CONST 
    0xf14: JUMPI vf13(0xf2e), v9c

    Begin block 0xf2e
    prev=[0x96], succ=[]
    =================================
    0xf2f: vf2f(0x1e6) = CONST 
    0xf30: CALLPRIVATE vf2f(0x1e6)

    Begin block 0xa1
    prev=[0x96], succ=[0xf31, 0xac]
    =================================
    0xa2: va2(0x5ced058e) = CONST 
    0xa7: va7 = EQ va2(0x5ced058e), v12
    0xf15: vf15(0xf31) = CONST 
    0xf16: JUMPI vf15(0xf31), va7

    Begin block 0xf31
    prev=[0xa1], succ=[]
    =================================
    0xf32: vf32(0x23d) = CONST 
    0xf33: CALLPRIVATE vf32(0x23d)

    Begin block 0xac
    prev=[0xa1], succ=[0xb7, 0xf34]
    =================================
    0xad: vad(0x6805b84b) = CONST 
    0xb2: vb2 = EQ vad(0x6805b84b), v12
    0xf17: vf17(0xf34) = CONST 
    0xf18: JUMPI vf17(0xf34), vb2

    Begin block 0xb7
    prev=[0xac], succ=[0xe20x0]
    =================================
    0xb7: vb7(0xe2) = CONST 
    0xba: JUMP vb7(0xe2)

    Begin block 0xf34
    prev=[0xac], succ=[]
    =================================
    0xf35: vf35(0x2b8) = CONST 
    0xf36: CALLPRIVATE vf35(0x2b8)

    Begin block 0x1e
    prev=[0xd], succ=[0x59, 0x29]
    =================================
    0x1f: v1f(0xaaf10f42) = CONST 
    0x24: v24 = GT v1f(0xaaf10f42), v12
    0x25: v25(0x59) = CONST 
    0x28: JUMPI v25(0x59), v24

    Begin block 0x59
    prev=[0x1e], succ=[0xf37, 0x65]
    =================================
    0x5b: v5b(0x82c947b7) = CONST 
    0x60: v60 = EQ v5b(0x82c947b7), v12
    0xf0b: vf0b(0xf37) = CONST 
    0xf0c: JUMPI vf0b(0xf37), v60

    Begin block 0xf37
    prev=[0x59], succ=[]
    =================================
    0xf38: vf38(0x2e7) = CONST 
    0xf39: CALLPRIVATE vf38(0x2e7)

    Begin block 0x65
    prev=[0x59], succ=[0xf3a, 0x70]
    =================================
    0x66: v66(0x8f4edfe2) = CONST 
    0x6b: v6b = EQ v66(0x8f4edfe2), v12
    0xf0d: vf0d(0xf3a) = CONST 
    0xf0e: JUMPI vf0d(0xf3a), v6b

    Begin block 0xf3a
    prev=[0x65], succ=[]
    =================================
    0xf3b: vf3b(0x34c) = CONST 
    0xf3c: CALLPRIVATE vf3b(0x34c)

    Begin block 0x70
    prev=[0x65], succ=[0x7b, 0xf3d]
    =================================
    0x71: v71(0x9d84ae69) = CONST 
    0x76: v76 = EQ v71(0x9d84ae69), v12
    0xf0f: vf0f(0xf3d) = CONST 
    0xf10: JUMPI vf0f(0xf3d), v76

    Begin block 0x7b
    prev=[0x70], succ=[0xe20x0]
    =================================
    0x7b: v7b(0xe2) = CONST 
    0x7e: JUMP v7b(0xe2)

    Begin block 0xf3d
    prev=[0x70], succ=[]
    =================================
    0xf3e: vf3e(0x39d) = CONST 
    0xf3f: CALLPRIVATE vf3e(0x39d)

    Begin block 0x29
    prev=[0x1e], succ=[0xf40, 0x34]
    =================================
    0x2a: v2a(0xaaf10f42) = CONST 
    0x2f: v2f = EQ v2a(0xaaf10f42), v12
    0xf03: vf03(0xf40) = CONST 
    0xf04: JUMPI vf03(0xf40), v2f

    Begin block 0xf40
    prev=[0x29], succ=[]
    =================================
    0xf41: vf41(0x418) = CONST 
    0xf42: CALLPRIVATE vf41(0x418)

    Begin block 0x34
    prev=[0x29], succ=[0x3f, 0xf43]
    =================================
    0x35: v35(0xbb15ac8e) = CONST 
    0x3a: v3a = EQ v35(0xbb15ac8e), v12
    0xf05: vf05(0xf43) = CONST 
    0xf06: JUMPI vf05(0xf43), v3a

    Begin block 0x3f
    prev=[0x34], succ=[0xf46, 0x4a]
    =================================
    0x40: v40(0xcaaee91c) = CONST 
    0x45: v45 = EQ v40(0xcaaee91c), v12
    0xf07: vf07(0xf46) = CONST 
    0xf08: JUMPI vf07(0xf46), v45

    Begin block 0xf46
    prev=[0x3f], succ=[]
    =================================
    0xf47: vf47(0x4c2) = CONST 
    0xf48: CALLPRIVATE vf47(0x4c2)

    Begin block 0x4a
    prev=[0x3f], succ=[0x55, 0xf49]
    =================================
    0x4b: v4b(0xd784d426) = CONST 
    0x50: v50 = EQ v4b(0xd784d426), v12
    0xf09: vf09(0xf49) = CONST 
    0xf0a: JUMPI vf09(0xf49), v50

    Begin block 0x55
    prev=[0x4a], succ=[0xe20x0]
    =================================
    0x55: v55(0xe2) = CONST 
    0x58: JUMP v55(0xe2)

    Begin block 0xf49
    prev=[0x4a], succ=[]
    =================================
    0xf4a: vf4a(0x513) = CONST 
    0xf4b: CALLPRIVATE vf4a(0x513)

    Begin block 0xf43
    prev=[0x34], succ=[]
    =================================
    0xf44: vf44(0x46f) = CONST 
    0xf45: CALLPRIVATE vf44(0x46f)

    Begin block 0xf1f
    prev=[0x0], succ=[]
    =================================
    0xf20: vf20(0xe1) = CONST 
    0xf21: CALLPRIVATE vf20(0xe1)

}

function renouncePauzer()() public {
    Begin block 0x129
    prev=[], succ=[0x131, 0x135]
    =================================
    0x12a: v12a = CALLVALUE 
    0x12c: v12c = ISZERO v12a
    0x12d: v12d(0x135) = CONST 
    0x130: JUMPI v12d(0x135), v12c

    Begin block 0x131
    prev=[0x129], succ=[]
    =================================
    0x131: v131(0x0) = CONST 
    0x134: REVERT v131(0x0), v131(0x0)

    Begin block 0x135
    prev=[0x129], succ=[0x738B0x135]
    =================================
    0x137: v137(0x13e) = CONST 
    0x13a: v13a(0x738) = CONST 
    0x13d: JUMP v13a(0x738), v137(0x13e)

    Begin block 0x738B0x135
    prev=[0x135], succ=[0xac4B0x738B0x135]
    =================================
    0x739S0x135: v739V135(0x787) = CONST 
    0x73cS0x135: v73cV135(0x40) = CONST 
    0x73eS0x135: v73eV135 = MLOAD v73cV135(0x40)
    0x73fS0x135: v73fV135(0x20) = CONST 
    0x741S0x135: v741V135 = ADD v73fV135(0x20), v73eV135
    0x744S0x135: v744V135(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x766S0x135: MSTORE v741V135, v744V135(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0x768S0x135: v768V135(0xb) = CONST 
    0x76aS0x135: v76aV135 = ADD v768V135(0xb), v741V135
    0x76dS0x135: v76dV135(0x40) = CONST 
    0x76fS0x135: v76fV135 = MLOAD v76dV135(0x40)
    0x770S0x135: v770V135(0x20) = CONST 
    0x774S0x135: v774V135(0x2b) = SUB v76aV135, v76fV135
    0x775S0x135: v775V135(0xb) = SUB v774V135(0x2b), v770V135(0x20)
    0x777S0x135: MSTORE v76fV135, v775V135(0xb)
    0x779S0x135: v779V135(0x40) = CONST 
    0x77bS0x135: MSTORE v779V135(0x40), v76aV135
    0x77dS0x135: v77dV135(0xb) = MLOAD v76fV135
    0x77fS0x135: v77fV135(0x20) = CONST 
    0x781S0x135: v781V135 = ADD v77fV135(0x20), v76fV135
    0x782S0x135: v782V135 = SHA3 v781V135, v77dV135(0xb)
    0x783S0x135: v783V135(0xac4) = CONST 
    0x786S0x135: JUMP v783V135(0xac4)

    Begin block 0xac4B0x738B0x135
    prev=[0x738B0x135], succ=[0x8b3B0xac4B0x738B0x135]
    =================================
    0xac5S0x738B0x135: vac5V738B135(0x0) = CONST 
    0xac7S0x738B0x135: vac7V738B135(0xad7) = CONST 
    0xacaS0x738B0x135: vacaV738B135(0xad2) = CONST 
    0xaceS0x738B0x135: vaceV738B135(0x8b3) = CONST 
    0xad1S0x738B0x135: JUMP vaceV738B135(0x8b3)

    Begin block 0x8b3B0xac4B0x738B0x135
    prev=[0xac4B0x738B0x135], succ=[0xad20xac4B0x738B0x135]
    =================================
    0x8b4S0xac4S0x738B0x135: v8b4Vac4V738B135(0x0) = CONST 
    0x8b8S0xac4S0x738B0x135: v8b8Vac4V738B135 = SLOAD v782V135
    0x8c2S0xac4S0x738B0x135: JUMP vacaV738B135(0xad2)

    Begin block 0xad20xac4B0x738B0x135
    prev=[0x8b3B0xac4B0x738B0x135], succ=[0x9190xac4B0x738B0x135]
    =================================
    0xad30xac4S0x738B0x135: vac4ad3V738B135(0x919) = CONST 
    0xad60xac4S0x738B0x135: JUMP vac4ad3V738B135(0x919)

    Begin block 0x9190xac4B0x738B0x135
    prev=[0xad20xac4B0x738B0x135], succ=[0xad70xac4B0x738B0x135]
    =================================
    0x91a0xac4S0x738B0x135: vac491aV738B135(0x0) = CONST 
    0x91d0xac4S0x738B0x135: vac491dV738B135(0x0) = CONST 
    0x91f0xac4S0x738B0x135: vac491fV738B135 = SHR vac491dV738B135(0x0), v8b8Vac4V738B135
    0x9250xac4S0x738B0x135: JUMP vac7V738B135(0xad7)

    Begin block 0xad70xac4B0x738B0x135
    prev=[0x9190xac4B0x738B0x135], succ=[0x787B0x135]
    =================================
    0xadd0xac4S0x738B0x135: JUMP v739V135(0x787)

    Begin block 0x787B0x135
    prev=[0xad70xac4B0x738B0x135], succ=[0x7baB0x135, 0x80aB0x135]
    =================================
    0x788S0x135: v788V135(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x79dS0x135: v79dV135 = AND v788V135(0xffffffffffffffffffffffffffffffffffffffff), vac491fV738B135
    0x79eS0x135: v79eV135 = CALLER 
    0x79fS0x135: v79fV135(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x7b4S0x135: v7b4V135 = AND v79fV135(0xffffffffffffffffffffffffffffffffffffffff), v79eV135
    0x7b5S0x135: v7b5V135 = EQ v7b4V135, v79dV135
    0x7b6S0x135: v7b6V135(0x80a) = CONST 
    0x7b9S0x135: JUMPI v7b6V135(0x80a), v7b5V135

    Begin block 0x7baB0x135
    prev=[0x787B0x135], succ=[]
    =================================
    0x7baS0x135: v7baV135(0x40) = CONST 
    0x7bcS0x135: v7bcV135 = MLOAD v7baV135(0x40)
    0x7bdS0x135: v7bdV135(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x7dfS0x135: MSTORE v7bcV135, v7bdV135(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x7e0S0x135: v7e0V135(0x4) = CONST 
    0x7e2S0x135: v7e2V135 = ADD v7e0V135(0x4), v7bcV135
    0x7e5S0x135: v7e5V135(0x20) = CONST 
    0x7e7S0x135: v7e7V135 = ADD v7e5V135(0x20), v7e2V135
    0x7eaS0x135: v7eaV135(0x20) = SUB v7e7V135, v7e2V135
    0x7ecS0x135: MSTORE v7e2V135, v7eaV135(0x20)
    0x7edS0x135: v7edV135(0x30) = CONST 
    0x7f0S0x135: MSTORE v7e7V135, v7edV135(0x30)
    0x7f1S0x135: v7f1V135(0x20) = CONST 
    0x7f3S0x135: v7f3V135 = ADD v7f1V135(0x20), v7e7V135
    0x7f5S0x135: v7f5V135(0xe5f) = CONST 
    0x7f8S0x135: v7f8V135(0x30) = CONST 
    0x7fbS0x135: CODECOPY v7f3V135, v7f5V135(0xe5f), v7f8V135(0x30)
    0x7fcS0x135: v7fcV135(0x40) = CONST 
    0x7feS0x135: v7feV135 = ADD v7fcV135(0x40), v7f3V135
    0x802S0x135: v802V135(0x40) = CONST 
    0x804S0x135: v804V135 = MLOAD v802V135(0x40)
    0x807S0x135: v807V135(0x84) = SUB v7feV135, v804V135
    0x809S0x135: REVERT v804V135, v807V135(0x84)

    Begin block 0x80aB0x135
    prev=[0x787B0x135], succ=[0xe3bB0x80aB0x135]
    =================================
    0x80bS0x135: v80bV135(0x85b) = CONST 
    0x80eS0x135: v80eV135(0x40) = CONST 
    0x810S0x135: v810V135 = MLOAD v80eV135(0x40)
    0x811S0x135: v811V135(0x20) = CONST 
    0x813S0x135: v813V135 = ADD v811V135(0x20), v810V135
    0x816S0x135: v816V135(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x838S0x135: MSTORE v813V135, v816V135(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0x83aS0x135: v83aV135(0xb) = CONST 
    0x83cS0x135: v83cV135 = ADD v83aV135(0xb), v813V135
    0x83fS0x135: v83fV135(0x40) = CONST 
    0x841S0x135: v841V135 = MLOAD v83fV135(0x40)
    0x842S0x135: v842V135(0x20) = CONST 
    0x846S0x135: v846V135(0x2b) = SUB v83cV135, v841V135
    0x847S0x135: v847V135(0xb) = SUB v846V135(0x2b), v842V135(0x20)
    0x849S0x135: MSTORE v841V135, v847V135(0xb)
    0x84bS0x135: v84bV135(0x40) = CONST 
    0x84dS0x135: MSTORE v84bV135(0x40), v83cV135
    0x84fS0x135: v84fV135(0xb) = MLOAD v841V135
    0x851S0x135: v851V135(0x20) = CONST 
    0x853S0x135: v853V135 = ADD v851V135(0x20), v841V135
    0x854S0x135: v854V135 = SHA3 v853V135, v84fV135(0xb)
    0x855S0x135: v855V135(0x0) = CONST 
    0x857S0x135: v857V135(0xe3b) = CONST 
    0x85aS0x135: JUMP v857V135(0xe3b), v855V135(0x0), v854V135, v80bV135(0x85b)

    Begin block 0xe3bB0x80aB0x135
    prev=[0x80aB0x135], succ=[0x97c0xe3bB0x80aB0x135]
    =================================
    0xe3cS0x80aB0x135: ve3cV80aB135(0xe4d) = CONST 
    0xe40S0x80aB0x135: ve40V80aB135(0xe48) = CONST 
    0xe44S0x80aB0x135: ve44V80aB135(0x97c) = CONST 
    0xe47S0x80aB0x135: JUMP ve44V80aB135(0x97c)

    Begin block 0x97c0xe3bB0x80aB0x135
    prev=[0xe3bB0x80aB0x135], succ=[0xe48B0x80aB0x135]
    =================================
    0x97d0xe3bS0x80aB0x135: ve3b97dV80aB135(0x0) = CONST 
    0x9800xe3bS0x80aB0x135: ve3b980V80aB135(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9950xe3bS0x80aB0x135: ve3b995V80aB135(0x0) = AND ve3b980V80aB135(0xffffffffffffffffffffffffffffffffffffffff), v855V135(0x0)
    0x9960xe3bS0x80aB0x135: ve3b996V80aB135(0x0) = CONST 
    0x9980xe3bS0x80aB0x135: ve3b998V80aB135(0x0) = SHL ve3b996V80aB135(0x0), ve3b995V80aB135(0x0)
    0x99e0xe3bS0x80aB0x135: JUMP ve40V80aB135(0xe48)

    Begin block 0xe48B0x80aB0x135
    prev=[0x97c0xe3bB0x80aB0x135], succ=[0xe51B0xe48B0x80aB0x135]
    =================================
    0xe49S0x80aB0x135: ve49V80aB135(0xe51) = CONST 
    0xe4cS0x80aB0x135: JUMP ve49V80aB135(0xe51), ve3b998V80aB135(0x0), v854V135, ve3cV80aB135(0xe4d)

    Begin block 0xe51B0xe48B0x80aB0x135
    prev=[0xe48B0x80aB0x135], succ=[0xe4dB0x80aB0x135]
    =================================
    0xe52S0xe48S0x80aB0x135: ve52Ve48V80aB135(0x0) = CONST 
    0xe59S0xe48S0x80aB0x135: SSTORE v854V135, ve3b998V80aB135(0x0)
    0xe5dS0xe48S0x80aB0x135: JUMP ve3cV80aB135(0xe4d)

    Begin block 0xe4dB0x80aB0x135
    prev=[0xe51B0xe48B0x80aB0x135], succ=[0x85bB0x135]
    =================================
    0xe50S0x80aB0x135: JUMP v80bV135(0x85b)

    Begin block 0x85bB0x135
    prev=[0xe4dB0x80aB0x135], succ=[0x13e]
    =================================
    0x85cS0x135: JUMP v137(0x13e)

    Begin block 0x13e
    prev=[0x85bB0x135], succ=[]
    =================================
    0x13f: STOP 

}

function getProxyOwner()() public {
    Begin block 0x140
    prev=[], succ=[0x148, 0x14c]
    =================================
    0x141: v141 = CALLVALUE 
    0x143: v143 = ISZERO v141
    0x144: v144(0x14c) = CONST 
    0x147: JUMPI v144(0x14c), v143

    Begin block 0x148
    prev=[0x140], succ=[]
    =================================
    0x148: v148(0x0) = CONST 
    0x14b: REVERT v148(0x0), v148(0x0)

    Begin block 0x14c
    prev=[0x140], succ=[0x85dB0x14c]
    =================================
    0x14e: v14e(0x155) = CONST 
    0x151: v151(0x85d) = CONST 
    0x154: JUMP v151(0x85d)

    Begin block 0x85dB0x14c
    prev=[0x14c], succ=[0xac4B0x85dB0x14c]
    =================================
    0x85eS0x14c: v85eV14c(0x0) = CONST 
    0x860S0x14c: v860V14c(0x8ae) = CONST 
    0x863S0x14c: v863V14c(0x40) = CONST 
    0x865S0x14c: v865V14c = MLOAD v863V14c(0x40)
    0x866S0x14c: v866V14c(0x20) = CONST 
    0x868S0x14c: v868V14c = ADD v866V14c(0x20), v865V14c
    0x86bS0x14c: v86bV14c(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST 
    0x88dS0x14c: MSTORE v868V14c, v86bV14c(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0x88fS0x14c: v88fV14c(0xa) = CONST 
    0x891S0x14c: v891V14c = ADD v88fV14c(0xa), v868V14c
    0x894S0x14c: v894V14c(0x40) = CONST 
    0x896S0x14c: v896V14c = MLOAD v894V14c(0x40)
    0x897S0x14c: v897V14c(0x20) = CONST 
    0x89bS0x14c: v89bV14c(0x2a) = SUB v891V14c, v896V14c
    0x89cS0x14c: v89cV14c(0xa) = SUB v89bV14c(0x2a), v897V14c(0x20)
    0x89eS0x14c: MSTORE v896V14c, v89cV14c(0xa)
    0x8a0S0x14c: v8a0V14c(0x40) = CONST 
    0x8a2S0x14c: MSTORE v8a0V14c(0x40), v891V14c
    0x8a4S0x14c: v8a4V14c(0xa) = MLOAD v896V14c
    0x8a6S0x14c: v8a6V14c(0x20) = CONST 
    0x8a8S0x14c: v8a8V14c = ADD v8a6V14c(0x20), v896V14c
    0x8a9S0x14c: v8a9V14c = SHA3 v8a8V14c, v8a4V14c(0xa)
    0x8aaS0x14c: v8aaV14c(0xac4) = CONST 
    0x8adS0x14c: JUMP v8aaV14c(0xac4)

    Begin block 0xac4B0x85dB0x14c
    prev=[0x85dB0x14c], succ=[0x8b3B0xac4B0x85dB0x14c]
    =================================
    0xac5S0x85dB0x14c: vac5V85dB14c(0x0) = CONST 
    0xac7S0x85dB0x14c: vac7V85dB14c(0xad7) = CONST 
    0xacaS0x85dB0x14c: vacaV85dB14c(0xad2) = CONST 
    0xaceS0x85dB0x14c: vaceV85dB14c(0x8b3) = CONST 
    0xad1S0x85dB0x14c: JUMP vaceV85dB14c(0x8b3)

    Begin block 0x8b3B0xac4B0x85dB0x14c
    prev=[0xac4B0x85dB0x14c], succ=[0xad20xac4B0x85dB0x14c]
    =================================
    0x8b4S0xac4S0x85dB0x14c: v8b4Vac4V85dB14c(0x0) = CONST 
    0x8b8S0xac4S0x85dB0x14c: v8b8Vac4V85dB14c = SLOAD v8a9V14c
    0x8c2S0xac4S0x85dB0x14c: JUMP vacaV85dB14c(0xad2)

    Begin block 0xad20xac4B0x85dB0x14c
    prev=[0x8b3B0xac4B0x85dB0x14c], succ=[0x9190xac4B0x85dB0x14c]
    =================================
    0xad30xac4S0x85dB0x14c: vac4ad3V85dB14c(0x919) = CONST 
    0xad60xac4S0x85dB0x14c: JUMP vac4ad3V85dB14c(0x919)

    Begin block 0x9190xac4B0x85dB0x14c
    prev=[0xad20xac4B0x85dB0x14c], succ=[0xad70xac4B0x85dB0x14c]
    =================================
    0x91a0xac4S0x85dB0x14c: vac491aV85dB14c(0x0) = CONST 
    0x91d0xac4S0x85dB0x14c: vac491dV85dB14c(0x0) = CONST 
    0x91f0xac4S0x85dB0x14c: vac491fV85dB14c = SHR vac491dV85dB14c(0x0), v8b8Vac4V85dB14c
    0x9250xac4S0x85dB0x14c: JUMP vac7V85dB14c(0xad7)

    Begin block 0xad70xac4B0x85dB0x14c
    prev=[0x9190xac4B0x85dB0x14c], succ=[0x8aeB0x14c]
    =================================
    0xadd0xac4S0x85dB0x14c: JUMP v860V14c(0x8ae)

    Begin block 0x8aeB0x14c
    prev=[0xad70xac4B0x85dB0x14c], succ=[0x155]
    =================================
    0x8b2S0x14c: JUMP v14e(0x155)

    Begin block 0x155
    prev=[0x8aeB0x14c], succ=[]
    =================================
    0x156: v156(0x40) = CONST 
    0x158: v158 = MLOAD v156(0x40)
    0x15b: v15b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x170: v170 = AND v15b(0xffffffffffffffffffffffffffffffffffffffff), vac491fV85dB14c
    0x171: v171(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x186: v186 = AND v171(0xffffffffffffffffffffffffffffffffffffffff), v170
    0x188: MSTORE v158, v186
    0x189: v189(0x20) = CONST 
    0x18b: v18b = ADD v189(0x20), v158
    0x18f: v18f(0x40) = CONST 
    0x191: v191 = MLOAD v18f(0x40)
    0x194: v194(0x20) = SUB v18b, v191
    0x196: RETURN v191, v194(0x20)

}

function storageRead(bytes32)() public {
    Begin block 0x197
    prev=[], succ=[0x19f, 0x1a3]
    =================================
    0x198: v198 = CALLVALUE 
    0x19a: v19a = ISZERO v198
    0x19b: v19b(0x1a3) = CONST 
    0x19e: JUMPI v19b(0x1a3), v19a

    Begin block 0x19f
    prev=[0x197], succ=[]
    =================================
    0x19f: v19f(0x0) = CONST 
    0x1a2: REVERT v19f(0x0), v19f(0x0)

    Begin block 0x1a3
    prev=[0x197], succ=[0x1b6, 0x1ba]
    =================================
    0x1a5: v1a5(0x1d0) = CONST 
    0x1a8: v1a8(0x4) = CONST 
    0x1ab: v1ab = CALLDATASIZE 
    0x1ac: v1ac = SUB v1ab, v1a8(0x4)
    0x1ad: v1ad(0x20) = CONST 
    0x1b0: v1b0 = LT v1ac, v1ad(0x20)
    0x1b1: v1b1 = ISZERO v1b0
    0x1b2: v1b2(0x1ba) = CONST 
    0x1b5: JUMPI v1b2(0x1ba), v1b1

    Begin block 0x1b6
    prev=[0x1a3], succ=[]
    =================================
    0x1b6: v1b6(0x0) = CONST 
    0x1b9: REVERT v1b6(0x0), v1b6(0x0)

    Begin block 0x1ba
    prev=[0x1a3], succ=[0x8b30x197]
    =================================
    0x1bc: v1bc = ADD v1a8(0x4), v1ac
    0x1c0: v1c0 = CALLDATALOAD v1a8(0x4)
    0x1c2: v1c2(0x20) = CONST 
    0x1c4: v1c4(0x24) = ADD v1c2(0x20), v1a8(0x4)
    0x1cc: v1cc(0x8b3) = CONST 
    0x1cf: JUMP v1cc(0x8b3)

    Begin block 0x8b30x197
    prev=[0x1ba], succ=[0x1d0]
    =================================
    0x8b40x197: v1978b4(0x0) = CONST 
    0x8b80x197: v1978b8 = SLOAD v1c0
    0x8c20x197: JUMP v1a5(0x1d0)

    Begin block 0x1d0
    prev=[0x8b30x197], succ=[]
    =================================
    0x1d1: v1d1(0x40) = CONST 
    0x1d3: v1d3 = MLOAD v1d1(0x40)
    0x1d7: MSTORE v1d3, v1978b8
    0x1d8: v1d8(0x20) = CONST 
    0x1da: v1da = ADD v1d8(0x20), v1d3
    0x1de: v1de(0x40) = CONST 
    0x1e0: v1e0 = MLOAD v1de(0x40)
    0x1e3: v1e3(0x20) = SUB v1da, v1e0
    0x1e5: RETURN v1e0, v1e3(0x20)

}

function getPauzer()() public {
    Begin block 0x1e6
    prev=[], succ=[0x1ee, 0x1f2]
    =================================
    0x1e7: v1e7 = CALLVALUE 
    0x1e9: v1e9 = ISZERO v1e7
    0x1ea: v1ea(0x1f2) = CONST 
    0x1ed: JUMPI v1ea(0x1f2), v1e9

    Begin block 0x1ee
    prev=[0x1e6], succ=[]
    =================================
    0x1ee: v1ee(0x0) = CONST 
    0x1f1: REVERT v1ee(0x0), v1ee(0x0)

    Begin block 0x1f2
    prev=[0x1e6], succ=[0x8c3B0x1f2]
    =================================
    0x1f4: v1f4(0x1fb) = CONST 
    0x1f7: v1f7(0x8c3) = CONST 
    0x1fa: JUMP v1f7(0x8c3)

    Begin block 0x8c3B0x1f2
    prev=[0x1f2], succ=[0xac4B0x8c3B0x1f2]
    =================================
    0x8c4S0x1f2: v8c4V1f2(0x0) = CONST 
    0x8c6S0x1f2: v8c6V1f2(0x914) = CONST 
    0x8c9S0x1f2: v8c9V1f2(0x40) = CONST 
    0x8cbS0x1f2: v8cbV1f2 = MLOAD v8c9V1f2(0x40)
    0x8ccS0x1f2: v8ccV1f2(0x20) = CONST 
    0x8ceS0x1f2: v8ceV1f2 = ADD v8ccV1f2(0x20), v8cbV1f2
    0x8d1S0x1f2: v8d1V1f2(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x8f3S0x1f2: MSTORE v8ceV1f2, v8d1V1f2(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0x8f5S0x1f2: v8f5V1f2(0xb) = CONST 
    0x8f7S0x1f2: v8f7V1f2 = ADD v8f5V1f2(0xb), v8ceV1f2
    0x8faS0x1f2: v8faV1f2(0x40) = CONST 
    0x8fcS0x1f2: v8fcV1f2 = MLOAD v8faV1f2(0x40)
    0x8fdS0x1f2: v8fdV1f2(0x20) = CONST 
    0x901S0x1f2: v901V1f2(0x2b) = SUB v8f7V1f2, v8fcV1f2
    0x902S0x1f2: v902V1f2(0xb) = SUB v901V1f2(0x2b), v8fdV1f2(0x20)
    0x904S0x1f2: MSTORE v8fcV1f2, v902V1f2(0xb)
    0x906S0x1f2: v906V1f2(0x40) = CONST 
    0x908S0x1f2: MSTORE v906V1f2(0x40), v8f7V1f2
    0x90aS0x1f2: v90aV1f2(0xb) = MLOAD v8fcV1f2
    0x90cS0x1f2: v90cV1f2(0x20) = CONST 
    0x90eS0x1f2: v90eV1f2 = ADD v90cV1f2(0x20), v8fcV1f2
    0x90fS0x1f2: v90fV1f2 = SHA3 v90eV1f2, v90aV1f2(0xb)
    0x910S0x1f2: v910V1f2(0xac4) = CONST 
    0x913S0x1f2: JUMP v910V1f2(0xac4)

    Begin block 0xac4B0x8c3B0x1f2
    prev=[0x8c3B0x1f2], succ=[0x8b3B0xac4B0x8c3B0x1f2]
    =================================
    0xac5S0x8c3B0x1f2: vac5V8c3B1f2(0x0) = CONST 
    0xac7S0x8c3B0x1f2: vac7V8c3B1f2(0xad7) = CONST 
    0xacaS0x8c3B0x1f2: vacaV8c3B1f2(0xad2) = CONST 
    0xaceS0x8c3B0x1f2: vaceV8c3B1f2(0x8b3) = CONST 
    0xad1S0x8c3B0x1f2: JUMP vaceV8c3B1f2(0x8b3)

    Begin block 0x8b3B0xac4B0x8c3B0x1f2
    prev=[0xac4B0x8c3B0x1f2], succ=[0xad20xac4B0x8c3B0x1f2]
    =================================
    0x8b4S0xac4S0x8c3B0x1f2: v8b4Vac4V8c3B1f2(0x0) = CONST 
    0x8b8S0xac4S0x8c3B0x1f2: v8b8Vac4V8c3B1f2 = SLOAD v90fV1f2
    0x8c2S0xac4S0x8c3B0x1f2: JUMP vacaV8c3B1f2(0xad2)

    Begin block 0xad20xac4B0x8c3B0x1f2
    prev=[0x8b3B0xac4B0x8c3B0x1f2], succ=[0x9190xac4B0x8c3B0x1f2]
    =================================
    0xad30xac4S0x8c3B0x1f2: vac4ad3V8c3B1f2(0x919) = CONST 
    0xad60xac4S0x8c3B0x1f2: JUMP vac4ad3V8c3B1f2(0x919)

    Begin block 0x9190xac4B0x8c3B0x1f2
    prev=[0xad20xac4B0x8c3B0x1f2], succ=[0xad70xac4B0x8c3B0x1f2]
    =================================
    0x91a0xac4S0x8c3B0x1f2: vac491aV8c3B1f2(0x0) = CONST 
    0x91d0xac4S0x8c3B0x1f2: vac491dV8c3B1f2(0x0) = CONST 
    0x91f0xac4S0x8c3B0x1f2: vac491fV8c3B1f2 = SHR vac491dV8c3B1f2(0x0), v8b8Vac4V8c3B1f2
    0x9250xac4S0x8c3B0x1f2: JUMP vac7V8c3B1f2(0xad7)

    Begin block 0xad70xac4B0x8c3B0x1f2
    prev=[0x9190xac4B0x8c3B0x1f2], succ=[0x914B0x1f2]
    =================================
    0xadd0xac4S0x8c3B0x1f2: JUMP v8c6V1f2(0x914)

    Begin block 0x914B0x1f2
    prev=[0xad70xac4B0x8c3B0x1f2], succ=[0x1fb]
    =================================
    0x918S0x1f2: JUMP v1f4(0x1fb)

    Begin block 0x1fb
    prev=[0x914B0x1f2], succ=[]
    =================================
    0x1fc: v1fc(0x40) = CONST 
    0x1fe: v1fe = MLOAD v1fc(0x40)
    0x201: v201(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x216: v216 = AND v201(0xffffffffffffffffffffffffffffffffffffffff), vac491fV8c3B1f2
    0x217: v217(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x22c: v22c = AND v217(0xffffffffffffffffffffffffffffffffffffffff), v216
    0x22e: MSTORE v1fe, v22c
    0x22f: v22f(0x20) = CONST 
    0x231: v231 = ADD v22f(0x20), v1fe
    0x235: v235(0x40) = CONST 
    0x237: v237 = MLOAD v235(0x40)
    0x23a: v23a(0x20) = SUB v231, v237
    0x23c: RETURN v237, v23a(0x20)

}

function bytes32ToAddress(bytes32)() public {
    Begin block 0x23d
    prev=[], succ=[0x245, 0x249]
    =================================
    0x23e: v23e = CALLVALUE 
    0x240: v240 = ISZERO v23e
    0x241: v241(0x249) = CONST 
    0x244: JUMPI v241(0x249), v240

    Begin block 0x245
    prev=[0x23d], succ=[]
    =================================
    0x245: v245(0x0) = CONST 
    0x248: REVERT v245(0x0), v245(0x0)

    Begin block 0x249
    prev=[0x23d], succ=[0x25c, 0x260]
    =================================
    0x24b: v24b(0x276) = CONST 
    0x24e: v24e(0x4) = CONST 
    0x251: v251 = CALLDATASIZE 
    0x252: v252 = SUB v251, v24e(0x4)
    0x253: v253(0x20) = CONST 
    0x256: v256 = LT v252, v253(0x20)
    0x257: v257 = ISZERO v256
    0x258: v258(0x260) = CONST 
    0x25b: JUMPI v258(0x260), v257

    Begin block 0x25c
    prev=[0x249], succ=[]
    =================================
    0x25c: v25c(0x0) = CONST 
    0x25f: REVERT v25c(0x0), v25c(0x0)

    Begin block 0x260
    prev=[0x249], succ=[0x9190x23d]
    =================================
    0x262: v262 = ADD v24e(0x4), v252
    0x266: v266 = CALLDATALOAD v24e(0x4)
    0x268: v268(0x20) = CONST 
    0x26a: v26a(0x24) = ADD v268(0x20), v24e(0x4)
    0x272: v272(0x919) = CONST 
    0x275: JUMP v272(0x919)

    Begin block 0x9190x23d
    prev=[0x260], succ=[0x276]
    =================================
    0x91a0x23d: v23d91a(0x0) = CONST 
    0x91d0x23d: v23d91d(0x0) = CONST 
    0x91f0x23d: v23d91f = SHR v23d91d(0x0), v266
    0x9250x23d: JUMP v24b(0x276)

    Begin block 0x276
    prev=[0x9190x23d], succ=[]
    =================================
    0x277: v277(0x40) = CONST 
    0x279: v279 = MLOAD v277(0x40)
    0x27c: v27c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x291: v291 = AND v27c(0xffffffffffffffffffffffffffffffffffffffff), v23d91f
    0x292: v292(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2a7: v2a7 = AND v292(0xffffffffffffffffffffffffffffffffffffffff), v291
    0x2a9: MSTORE v279, v2a7
    0x2aa: v2aa(0x20) = CONST 
    0x2ac: v2ac = ADD v2aa(0x20), v279
    0x2b0: v2b0(0x40) = CONST 
    0x2b2: v2b2 = MLOAD v2b0(0x40)
    0x2b5: v2b5(0x20) = SUB v2ac, v2b2
    0x2b7: RETURN v2b2, v2b5(0x20)

}

function getPaused()() public {
    Begin block 0x2b8
    prev=[], succ=[0x2c0, 0x2c4]
    =================================
    0x2b9: v2b9 = CALLVALUE 
    0x2bb: v2bb = ISZERO v2b9
    0x2bc: v2bc(0x2c4) = CONST 
    0x2bf: JUMPI v2bc(0x2c4), v2bb

    Begin block 0x2c0
    prev=[0x2b8], succ=[]
    =================================
    0x2c0: v2c0(0x0) = CONST 
    0x2c3: REVERT v2c0(0x0), v2c0(0x0)

    Begin block 0x2c4
    prev=[0x2b8], succ=[0x926B0x2c4]
    =================================
    0x2c6: v2c6(0x2cd) = CONST 
    0x2c9: v2c9(0x926) = CONST 
    0x2cc: JUMP v2c9(0x926)

    Begin block 0x926B0x2c4
    prev=[0x2c4], succ=[0xb34B0x926B0x2c4]
    =================================
    0x927S0x2c4: v927V2c4(0x0) = CONST 
    0x929S0x2c4: v929V2c4(0x977) = CONST 
    0x92cS0x2c4: v92cV2c4(0x40) = CONST 
    0x92eS0x2c4: v92eV2c4 = MLOAD v92cV2c4(0x40)
    0x92fS0x2c4: v92fV2c4(0x20) = CONST 
    0x931S0x2c4: v931V2c4 = ADD v92fV2c4(0x20), v92eV2c4
    0x934S0x2c4: v934V2c4(0x5041555345445f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x956S0x2c4: MSTORE v931V2c4, v934V2c4(0x5041555345445f534c4f54000000000000000000000000000000000000000000)
    0x958S0x2c4: v958V2c4(0xb) = CONST 
    0x95aS0x2c4: v95aV2c4 = ADD v958V2c4(0xb), v931V2c4
    0x95dS0x2c4: v95dV2c4(0x40) = CONST 
    0x95fS0x2c4: v95fV2c4 = MLOAD v95dV2c4(0x40)
    0x960S0x2c4: v960V2c4(0x20) = CONST 
    0x964S0x2c4: v964V2c4(0x2b) = SUB v95aV2c4, v95fV2c4
    0x965S0x2c4: v965V2c4(0xb) = SUB v964V2c4(0x2b), v960V2c4(0x20)
    0x967S0x2c4: MSTORE v95fV2c4, v965V2c4(0xb)
    0x969S0x2c4: v969V2c4(0x40) = CONST 
    0x96bS0x2c4: MSTORE v969V2c4(0x40), v95aV2c4
    0x96dS0x2c4: v96dV2c4(0xb) = MLOAD v95fV2c4
    0x96fS0x2c4: v96fV2c4(0x20) = CONST 
    0x971S0x2c4: v971V2c4 = ADD v96fV2c4(0x20), v95fV2c4
    0x972S0x2c4: v972V2c4 = SHA3 v971V2c4, v96dV2c4(0xb)
    0x973S0x2c4: v973V2c4(0xb34) = CONST 
    0x976S0x2c4: JUMP v973V2c4(0xb34)

    Begin block 0xb34B0x926B0x2c4
    prev=[0x926B0x2c4], succ=[0x8b3B0xb34B0x926B0x2c4]
    =================================
    0xb35S0x926S0x2c4: vb35V926V2c4(0x0) = CONST 
    0xb37S0x926S0x2c4: vb37V926V2c4(0x1) = CONST 
    0xb39S0x926S0x2c4: vb39V926V2c4(0x0) = CONST 
    0xb3bS0x926S0x2c4: vb3bV926V2c4(0x1) = SHL vb39V926V2c4(0x0), vb37V926V2c4(0x1)
    0xb3cS0x926S0x2c4: vb3cV926V2c4(0xb44) = CONST 
    0xb40S0x926S0x2c4: vb40V926V2c4(0x8b3) = CONST 
    0xb43S0x926S0x2c4: JUMP vb40V926V2c4(0x8b3)

    Begin block 0x8b3B0xb34B0x926B0x2c4
    prev=[0xb34B0x926B0x2c4], succ=[0xb440xb34B0x926B0x2c4]
    =================================
    0x8b4S0xb34S0x926S0x2c4: v8b4Vb34V926V2c4(0x0) = CONST 
    0x8b8S0xb34S0x926S0x2c4: v8b8Vb34V926V2c4 = SLOAD v972V2c4
    0x8c2S0xb34S0x926S0x2c4: JUMP vb3cV926V2c4(0xb44)

    Begin block 0xb440xb34B0x926B0x2c4
    prev=[0x8b3B0xb34B0x926B0x2c4], succ=[0x977B0x2c4]
    =================================
    0xb450xb34S0x926S0x2c4: vb34b45V926V2c4 = EQ v8b8Vb34V926V2c4, vb3bV926V2c4(0x1)
    0xb4b0xb34S0x926S0x2c4: JUMP v929V2c4(0x977)

    Begin block 0x977B0x2c4
    prev=[0xb440xb34B0x926B0x2c4], succ=[0x2cd]
    =================================
    0x97bS0x2c4: JUMP v2c6(0x2cd)

    Begin block 0x2cd
    prev=[0x977B0x2c4], succ=[]
    =================================
    0x2ce: v2ce(0x40) = CONST 
    0x2d0: v2d0 = MLOAD v2ce(0x40)
    0x2d3: v2d3 = ISZERO vb34b45V926V2c4
    0x2d4: v2d4 = ISZERO v2d3
    0x2d5: v2d5 = ISZERO v2d4
    0x2d6: v2d6 = ISZERO v2d5
    0x2d8: MSTORE v2d0, v2d6
    0x2d9: v2d9(0x20) = CONST 
    0x2db: v2db = ADD v2d9(0x20), v2d0
    0x2df: v2df(0x40) = CONST 
    0x2e1: v2e1 = MLOAD v2df(0x40)
    0x2e4: v2e4(0x20) = SUB v2db, v2e1
    0x2e6: RETURN v2e1, v2e4(0x20)

}

function addressToBytes32(address)() public {
    Begin block 0x2e7
    prev=[], succ=[0x2ef, 0x2f3]
    =================================
    0x2e8: v2e8 = CALLVALUE 
    0x2ea: v2ea = ISZERO v2e8
    0x2eb: v2eb(0x2f3) = CONST 
    0x2ee: JUMPI v2eb(0x2f3), v2ea

    Begin block 0x2ef
    prev=[0x2e7], succ=[]
    =================================
    0x2ef: v2ef(0x0) = CONST 
    0x2f2: REVERT v2ef(0x0), v2ef(0x0)

    Begin block 0x2f3
    prev=[0x2e7], succ=[0x306, 0x30a]
    =================================
    0x2f5: v2f5(0x336) = CONST 
    0x2f8: v2f8(0x4) = CONST 
    0x2fb: v2fb = CALLDATASIZE 
    0x2fc: v2fc = SUB v2fb, v2f8(0x4)
    0x2fd: v2fd(0x20) = CONST 
    0x300: v300 = LT v2fc, v2fd(0x20)
    0x301: v301 = ISZERO v300
    0x302: v302(0x30a) = CONST 
    0x305: JUMPI v302(0x30a), v301

    Begin block 0x306
    prev=[0x2f3], succ=[]
    =================================
    0x306: v306(0x0) = CONST 
    0x309: REVERT v306(0x0), v306(0x0)

    Begin block 0x30a
    prev=[0x2f3], succ=[0x97c0x2e7]
    =================================
    0x30c: v30c = ADD v2f8(0x4), v2fc
    0x310: v310 = CALLDATALOAD v2f8(0x4)
    0x311: v311(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x326: v326 = AND v311(0xffffffffffffffffffffffffffffffffffffffff), v310
    0x328: v328(0x20) = CONST 
    0x32a: v32a(0x24) = ADD v328(0x20), v2f8(0x4)
    0x332: v332(0x97c) = CONST 
    0x335: JUMP v332(0x97c)

    Begin block 0x97c0x2e7
    prev=[0x30a], succ=[0x336]
    =================================
    0x97d0x2e7: v2e797d(0x0) = CONST 
    0x9800x2e7: v2e7980(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9950x2e7: v2e7995 = AND v2e7980(0xffffffffffffffffffffffffffffffffffffffff), v326
    0x9960x2e7: v2e7996(0x0) = CONST 
    0x9980x2e7: v2e7998 = SHL v2e7996(0x0), v2e7995
    0x99e0x2e7: JUMP v2f5(0x336)

    Begin block 0x336
    prev=[0x97c0x2e7], succ=[]
    =================================
    0x337: v337(0x40) = CONST 
    0x339: v339 = MLOAD v337(0x40)
    0x33d: MSTORE v339, v2e7998
    0x33e: v33e(0x20) = CONST 
    0x340: v340 = ADD v33e(0x20), v339
    0x344: v344(0x40) = CONST 
    0x346: v346 = MLOAD v344(0x40)
    0x349: v349(0x20) = SUB v340, v346
    0x34b: RETURN v346, v349(0x20)

}

function setPauzer(address)() public {
    Begin block 0x34c
    prev=[], succ=[0x354, 0x358]
    =================================
    0x34d: v34d = CALLVALUE 
    0x34f: v34f = ISZERO v34d
    0x350: v350(0x358) = CONST 
    0x353: JUMPI v350(0x358), v34f

    Begin block 0x354
    prev=[0x34c], succ=[]
    =================================
    0x354: v354(0x0) = CONST 
    0x357: REVERT v354(0x0), v354(0x0)

    Begin block 0x358
    prev=[0x34c], succ=[0x36b, 0x36f]
    =================================
    0x35a: v35a(0x39b) = CONST 
    0x35d: v35d(0x4) = CONST 
    0x360: v360 = CALLDATASIZE 
    0x361: v361 = SUB v360, v35d(0x4)
    0x362: v362(0x20) = CONST 
    0x365: v365 = LT v361, v362(0x20)
    0x366: v366 = ISZERO v365
    0x367: v367(0x36f) = CONST 
    0x36a: JUMPI v367(0x36f), v366

    Begin block 0x36b
    prev=[0x358], succ=[]
    =================================
    0x36b: v36b(0x0) = CONST 
    0x36e: REVERT v36b(0x0), v36b(0x0)

    Begin block 0x36f
    prev=[0x358], succ=[0x99f]
    =================================
    0x371: v371 = ADD v35d(0x4), v361
    0x375: v375 = CALLDATALOAD v35d(0x4)
    0x376: v376(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x38b: v38b = AND v376(0xffffffffffffffffffffffffffffffffffffffff), v375
    0x38d: v38d(0x20) = CONST 
    0x38f: v38f(0x24) = ADD v38d(0x20), v35d(0x4)
    0x397: v397(0x99f) = CONST 
    0x39a: JUMP v397(0x99f)

    Begin block 0x99f
    prev=[0x36f], succ=[0xac4B0x99f]
    =================================
    0x9a0: v9a0(0x9ee) = CONST 
    0x9a3: v9a3(0x40) = CONST 
    0x9a5: v9a5 = MLOAD v9a3(0x40)
    0x9a6: v9a6(0x20) = CONST 
    0x9a8: v9a8 = ADD v9a6(0x20), v9a5
    0x9ab: v9ab(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST 
    0x9cd: MSTORE v9a8, v9ab(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0x9cf: v9cf(0xa) = CONST 
    0x9d1: v9d1 = ADD v9cf(0xa), v9a8
    0x9d4: v9d4(0x40) = CONST 
    0x9d6: v9d6 = MLOAD v9d4(0x40)
    0x9d7: v9d7(0x20) = CONST 
    0x9db: v9db(0x2a) = SUB v9d1, v9d6
    0x9dc: v9dc(0xa) = SUB v9db(0x2a), v9d7(0x20)
    0x9de: MSTORE v9d6, v9dc(0xa)
    0x9e0: v9e0(0x40) = CONST 
    0x9e2: MSTORE v9e0(0x40), v9d1
    0x9e4: v9e4(0xa) = MLOAD v9d6
    0x9e6: v9e6(0x20) = CONST 
    0x9e8: v9e8 = ADD v9e6(0x20), v9d6
    0x9e9: v9e9 = SHA3 v9e8, v9e4(0xa)
    0x9ea: v9ea(0xac4) = CONST 
    0x9ed: JUMP v9ea(0xac4)

    Begin block 0xac4B0x99f
    prev=[0x99f], succ=[0x8b3B0xac4B0x99f]
    =================================
    0xac5S0x99f: vac5V99f(0x0) = CONST 
    0xac7S0x99f: vac7V99f(0xad7) = CONST 
    0xacaS0x99f: vacaV99f(0xad2) = CONST 
    0xaceS0x99f: vaceV99f(0x8b3) = CONST 
    0xad1S0x99f: JUMP vaceV99f(0x8b3)

    Begin block 0x8b3B0xac4B0x99f
    prev=[0xac4B0x99f], succ=[0xad20xac4B0x99f]
    =================================
    0x8b4S0xac4S0x99f: v8b4Vac4V99f(0x0) = CONST 
    0x8b8S0xac4S0x99f: v8b8Vac4V99f = SLOAD v9e9
    0x8c2S0xac4S0x99f: JUMP vacaV99f(0xad2)

    Begin block 0xad20xac4B0x99f
    prev=[0x8b3B0xac4B0x99f], succ=[0x9190xac4B0x99f]
    =================================
    0xad30xac4S0x99f: vac4ad3V99f(0x919) = CONST 
    0xad60xac4S0x99f: JUMP vac4ad3V99f(0x919)

    Begin block 0x9190xac4B0x99f
    prev=[0xad20xac4B0x99f], succ=[0xad70xac4B0x99f]
    =================================
    0x91a0xac4S0x99f: vac491aV99f(0x0) = CONST 
    0x91d0xac4S0x99f: vac491dV99f(0x0) = CONST 
    0x91f0xac4S0x99f: vac491fV99f = SHR vac491dV99f(0x0), v8b8Vac4V99f
    0x9250xac4S0x99f: JUMP vac7V99f(0xad7)

    Begin block 0xad70xac4B0x99f
    prev=[0x9190xac4B0x99f], succ=[0x9ee]
    =================================
    0xadd0xac4S0x99f: JUMP v9a0(0x9ee)

    Begin block 0x9ee
    prev=[0xad70xac4B0x99f], succ=[0xa21, 0xa71]
    =================================
    0x9ef: v9ef(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xa04: va04 = AND v9ef(0xffffffffffffffffffffffffffffffffffffffff), vac491fV99f
    0xa05: va05 = CALLER 
    0xa06: va06(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xa1b: va1b = AND va06(0xffffffffffffffffffffffffffffffffffffffff), va05
    0xa1c: va1c = EQ va1b, va04
    0xa1d: va1d(0xa71) = CONST 
    0xa20: JUMPI va1d(0xa71), va1c

    Begin block 0xa21
    prev=[0x9ee], succ=[]
    =================================
    0xa21: va21(0x40) = CONST 
    0xa23: va23 = MLOAD va21(0x40)
    0xa24: va24(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0xa46: MSTORE va23, va24(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0xa47: va47(0x4) = CONST 
    0xa49: va49 = ADD va47(0x4), va23
    0xa4c: va4c(0x20) = CONST 
    0xa4e: va4e = ADD va4c(0x20), va49
    0xa51: va51(0x20) = SUB va4e, va49
    0xa53: MSTORE va49, va51(0x20)
    0xa54: va54(0x2b) = CONST 
    0xa57: MSTORE va4e, va54(0x2b)
    0xa58: va58(0x20) = CONST 
    0xa5a: va5a = ADD va58(0x20), va4e
    0xa5c: va5c(0xe8f) = CONST 
    0xa5f: va5f(0x2b) = CONST 
    0xa62: CODECOPY va5a, va5c(0xe8f), va5f(0x2b)
    0xa63: va63(0x40) = CONST 
    0xa65: va65 = ADD va63(0x40), va5a
    0xa69: va69(0x40) = CONST 
    0xa6b: va6b = MLOAD va69(0x40)
    0xa6e: va6e(0x84) = SUB va65, va6b
    0xa70: REVERT va6b, va6e(0x84)

    Begin block 0xa71
    prev=[0x9ee], succ=[0xe3bB0xa71]
    =================================
    0xa72: va72(0xac1) = CONST 
    0xa75: va75(0x40) = CONST 
    0xa77: va77 = MLOAD va75(0x40)
    0xa78: va78(0x20) = CONST 
    0xa7a: va7a = ADD va78(0x20), va77
    0xa7d: va7d(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = CONST 
    0xa9f: MSTORE va7a, va7d(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0xaa1: vaa1(0xb) = CONST 
    0xaa3: vaa3 = ADD vaa1(0xb), va7a
    0xaa6: vaa6(0x40) = CONST 
    0xaa8: vaa8 = MLOAD vaa6(0x40)
    0xaa9: vaa9(0x20) = CONST 
    0xaad: vaad(0x2b) = SUB vaa3, vaa8
    0xaae: vaae(0xb) = SUB vaad(0x2b), vaa9(0x20)
    0xab0: MSTORE vaa8, vaae(0xb)
    0xab2: vab2(0x40) = CONST 
    0xab4: MSTORE vab2(0x40), vaa3
    0xab6: vab6(0xb) = MLOAD vaa8
    0xab8: vab8(0x20) = CONST 
    0xaba: vaba = ADD vab8(0x20), vaa8
    0xabb: vabb = SHA3 vaba, vab6(0xb)
    0xabd: vabd(0xe3b) = CONST 
    0xac0: JUMP vabd(0xe3b), v38b, vabb, va72(0xac1)

    Begin block 0xe3bB0xa71
    prev=[0xa71], succ=[0x97c0xe3bB0xa71]
    =================================
    0xe3cS0xa71: ve3cVa71(0xe4d) = CONST 
    0xe40S0xa71: ve40Va71(0xe48) = CONST 
    0xe44S0xa71: ve44Va71(0x97c) = CONST 
    0xe47S0xa71: JUMP ve44Va71(0x97c)

    Begin block 0x97c0xe3bB0xa71
    prev=[0xe3bB0xa71], succ=[0xe48B0xa71]
    =================================
    0x97d0xe3bS0xa71: ve3b97dVa71(0x0) = CONST 
    0x9800xe3bS0xa71: ve3b980Va71(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9950xe3bS0xa71: ve3b995Va71 = AND ve3b980Va71(0xffffffffffffffffffffffffffffffffffffffff), v38b
    0x9960xe3bS0xa71: ve3b996Va71(0x0) = CONST 
    0x9980xe3bS0xa71: ve3b998Va71 = SHL ve3b996Va71(0x0), ve3b995Va71
    0x99e0xe3bS0xa71: JUMP ve40Va71(0xe48)

    Begin block 0xe48B0xa71
    prev=[0x97c0xe3bB0xa71], succ=[0xe51B0xe48B0xa71]
    =================================
    0xe49S0xa71: ve49Va71(0xe51) = CONST 
    0xe4cS0xa71: JUMP ve49Va71(0xe51), ve3b998Va71, vabb, ve3cVa71(0xe4d)

    Begin block 0xe51B0xe48B0xa71
    prev=[0xe48B0xa71], succ=[0xe4dB0xa71]
    =================================
    0xe52S0xe48S0xa71: ve52Ve48Va71(0x0) = CONST 
    0xe59S0xe48S0xa71: SSTORE vabb, ve3b998Va71
    0xe5dS0xe48S0xa71: JUMP ve3cVa71(0xe4d)

    Begin block 0xe4dB0xa71
    prev=[0xe51B0xe48B0xa71], succ=[0xac1]
    =================================
    0xe50S0xa71: JUMP va72(0xac1)

    Begin block 0xac1
    prev=[0xe4dB0xa71], succ=[0x39b]
    =================================
    0xac3: JUMP v35a(0x39b)

    Begin block 0x39b
    prev=[0xac1], succ=[]
    =================================
    0x39c: STOP 

}

function readAddress(bytes32)() public {
    Begin block 0x39d
    prev=[], succ=[0x3a5, 0x3a9]
    =================================
    0x39e: v39e = CALLVALUE 
    0x3a0: v3a0 = ISZERO v39e
    0x3a1: v3a1(0x3a9) = CONST 
    0x3a4: JUMPI v3a1(0x3a9), v3a0

    Begin block 0x3a5
    prev=[0x39d], succ=[]
    =================================
    0x3a5: v3a5(0x0) = CONST 
    0x3a8: REVERT v3a5(0x0), v3a5(0x0)

    Begin block 0x3a9
    prev=[0x39d], succ=[0x3bc, 0x3c0]
    =================================
    0x3ab: v3ab(0x3d6) = CONST 
    0x3ae: v3ae(0x4) = CONST 
    0x3b1: v3b1 = CALLDATASIZE 
    0x3b2: v3b2 = SUB v3b1, v3ae(0x4)
    0x3b3: v3b3(0x20) = CONST 
    0x3b6: v3b6 = LT v3b2, v3b3(0x20)
    0x3b7: v3b7 = ISZERO v3b6
    0x3b8: v3b8(0x3c0) = CONST 
    0x3bb: JUMPI v3b8(0x3c0), v3b7

    Begin block 0x3bc
    prev=[0x3a9], succ=[]
    =================================
    0x3bc: v3bc(0x0) = CONST 
    0x3bf: REVERT v3bc(0x0), v3bc(0x0)

    Begin block 0x3c0
    prev=[0x3a9], succ=[0xac40x39d]
    =================================
    0x3c2: v3c2 = ADD v3ae(0x4), v3b2
    0x3c6: v3c6 = CALLDATALOAD v3ae(0x4)
    0x3c8: v3c8(0x20) = CONST 
    0x3ca: v3ca(0x24) = ADD v3c8(0x20), v3ae(0x4)
    0x3d2: v3d2(0xac4) = CONST 
    0x3d5: JUMP v3d2(0xac4)

    Begin block 0xac40x39d
    prev=[0x3c0], succ=[0x8b3B0xac40x39d]
    =================================
    0xac50x39d: v39dac5(0x0) = CONST 
    0xac70x39d: v39dac7(0xad7) = CONST 
    0xaca0x39d: v39daca(0xad2) = CONST 
    0xace0x39d: v39dace(0x8b3) = CONST 
    0xad10x39d: JUMP v39dace(0x8b3)

    Begin block 0x8b3B0xac40x39d
    prev=[0xac40x39d], succ=[0xad20x39d]
    =================================
    0x8b4S0xac40x39d: v8b4Vac439d(0x0) = CONST 
    0x8b8S0xac40x39d: v8b8Vac439d = SLOAD v3c6
    0x8c2S0xac40x39d: JUMP v39daca(0xad2)

    Begin block 0xad20x39d
    prev=[0x8b3B0xac40x39d], succ=[0x9190x39d]
    =================================
    0xad30x39d: v39dad3(0x919) = CONST 
    0xad60x39d: JUMP v39dad3(0x919)

    Begin block 0x9190x39d
    prev=[0xad20x39d], succ=[0xad70x39d]
    =================================
    0x91a0x39d: v39d91a(0x0) = CONST 
    0x91d0x39d: v39d91d(0x0) = CONST 
    0x91f0x39d: v39d91f = SHR v39d91d(0x0), v8b8Vac439d
    0x9250x39d: JUMP v39dac7(0xad7)

    Begin block 0xad70x39d
    prev=[0x9190x39d], succ=[0x3d6]
    =================================
    0xadd0x39d: JUMP v3ab(0x3d6)

    Begin block 0x3d6
    prev=[0xad70x39d], succ=[]
    =================================
    0x3d7: v3d7(0x40) = CONST 
    0x3d9: v3d9 = MLOAD v3d7(0x40)
    0x3dc: v3dc(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x3f1: v3f1 = AND v3dc(0xffffffffffffffffffffffffffffffffffffffff), v39d91f
    0x3f2: v3f2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x407: v407 = AND v3f2(0xffffffffffffffffffffffffffffffffffffffff), v3f1
    0x409: MSTORE v3d9, v407
    0x40a: v40a(0x20) = CONST 
    0x40c: v40c = ADD v40a(0x20), v3d9
    0x410: v410(0x40) = CONST 
    0x412: v412 = MLOAD v410(0x40)
    0x415: v415(0x20) = SUB v40c, v412
    0x417: RETURN v412, v415(0x20)

}

function getImplementation()() public {
    Begin block 0x418
    prev=[], succ=[0x420, 0x424]
    =================================
    0x419: v419 = CALLVALUE 
    0x41b: v41b = ISZERO v419
    0x41c: v41c(0x424) = CONST 
    0x41f: JUMPI v41c(0x424), v41b

    Begin block 0x420
    prev=[0x418], succ=[]
    =================================
    0x420: v420(0x0) = CONST 
    0x423: REVERT v420(0x0), v420(0x0)

    Begin block 0x424
    prev=[0x418], succ=[0xadeB0x424]
    =================================
    0x426: v426(0x42d) = CONST 
    0x429: v429(0xade) = CONST 
    0x42c: JUMP v429(0xade)

    Begin block 0xadeB0x424
    prev=[0x424], succ=[0xac4B0xadeB0x424]
    =================================
    0xadfS0x424: vadfV424(0x0) = CONST 
    0xae1S0x424: vae1V424(0xb2f) = CONST 
    0xae4S0x424: vae4V424(0x40) = CONST 
    0xae6S0x424: vae6V424 = MLOAD vae4V424(0x40)
    0xae7S0x424: vae7V424(0x20) = CONST 
    0xae9S0x424: vae9V424 = ADD vae7V424(0x20), vae6V424
    0xaecS0x424: vaecV424(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000) = CONST 
    0xb0eS0x424: MSTORE vae9V424, vaecV424(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000)
    0xb10S0x424: vb10V424(0x13) = CONST 
    0xb12S0x424: vb12V424 = ADD vb10V424(0x13), vae9V424
    0xb15S0x424: vb15V424(0x40) = CONST 
    0xb17S0x424: vb17V424 = MLOAD vb15V424(0x40)
    0xb18S0x424: vb18V424(0x20) = CONST 
    0xb1cS0x424: vb1cV424(0x33) = SUB vb12V424, vb17V424
    0xb1dS0x424: vb1dV424(0x13) = SUB vb1cV424(0x33), vb18V424(0x20)
    0xb1fS0x424: MSTORE vb17V424, vb1dV424(0x13)
    0xb21S0x424: vb21V424(0x40) = CONST 
    0xb23S0x424: MSTORE vb21V424(0x40), vb12V424
    0xb25S0x424: vb25V424(0x13) = MLOAD vb17V424
    0xb27S0x424: vb27V424(0x20) = CONST 
    0xb29S0x424: vb29V424 = ADD vb27V424(0x20), vb17V424
    0xb2aS0x424: vb2aV424 = SHA3 vb29V424, vb25V424(0x13)
    0xb2bS0x424: vb2bV424(0xac4) = CONST 
    0xb2eS0x424: JUMP vb2bV424(0xac4)

    Begin block 0xac4B0xadeB0x424
    prev=[0xadeB0x424], succ=[0x8b3B0xac4B0xadeB0x424]
    =================================
    0xac5S0xadeB0x424: vac5VadeB424(0x0) = CONST 
    0xac7S0xadeB0x424: vac7VadeB424(0xad7) = CONST 
    0xacaS0xadeB0x424: vacaVadeB424(0xad2) = CONST 
    0xaceS0xadeB0x424: vaceVadeB424(0x8b3) = CONST 
    0xad1S0xadeB0x424: JUMP vaceVadeB424(0x8b3)

    Begin block 0x8b3B0xac4B0xadeB0x424
    prev=[0xac4B0xadeB0x424], succ=[0xad20xac4B0xadeB0x424]
    =================================
    0x8b4S0xac4S0xadeB0x424: v8b4Vac4VadeB424(0x0) = CONST 
    0x8b8S0xac4S0xadeB0x424: v8b8Vac4VadeB424 = SLOAD vb2aV424
    0x8c2S0xac4S0xadeB0x424: JUMP vacaVadeB424(0xad2)

    Begin block 0xad20xac4B0xadeB0x424
    prev=[0x8b3B0xac4B0xadeB0x424], succ=[0x9190xac4B0xadeB0x424]
    =================================
    0xad30xac4S0xadeB0x424: vac4ad3VadeB424(0x919) = CONST 
    0xad60xac4S0xadeB0x424: JUMP vac4ad3VadeB424(0x919)

    Begin block 0x9190xac4B0xadeB0x424
    prev=[0xad20xac4B0xadeB0x424], succ=[0xad70xac4B0xadeB0x424]
    =================================
    0x91a0xac4S0xadeB0x424: vac491aVadeB424(0x0) = CONST 
    0x91d0xac4S0xadeB0x424: vac491dVadeB424(0x0) = CONST 
    0x91f0xac4S0xadeB0x424: vac491fVadeB424 = SHR vac491dVadeB424(0x0), v8b8Vac4VadeB424
    0x9250xac4S0xadeB0x424: JUMP vac7VadeB424(0xad7)

    Begin block 0xad70xac4B0xadeB0x424
    prev=[0x9190xac4B0xadeB0x424], succ=[0xb2fB0x424]
    =================================
    0xadd0xac4S0xadeB0x424: JUMP vae1V424(0xb2f)

    Begin block 0xb2fB0x424
    prev=[0xad70xac4B0xadeB0x424], succ=[0x42d]
    =================================
    0xb33S0x424: JUMP v426(0x42d)

    Begin block 0x42d
    prev=[0xb2fB0x424], succ=[]
    =================================
    0x42e: v42e(0x40) = CONST 
    0x430: v430 = MLOAD v42e(0x40)
    0x433: v433(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x448: v448 = AND v433(0xffffffffffffffffffffffffffffffffffffffff), vac491fVadeB424
    0x449: v449(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x45e: v45e = AND v449(0xffffffffffffffffffffffffffffffffffffffff), v448
    0x460: MSTORE v430, v45e
    0x461: v461(0x20) = CONST 
    0x463: v463 = ADD v461(0x20), v430
    0x467: v467(0x40) = CONST 
    0x469: v469 = MLOAD v467(0x40)
    0x46c: v46c(0x20) = SUB v463, v469
    0x46e: RETURN v469, v46c(0x20)

}

function readBool(bytes32)() public {
    Begin block 0x46f
    prev=[], succ=[0x477, 0x47b]
    =================================
    0x470: v470 = CALLVALUE 
    0x472: v472 = ISZERO v470
    0x473: v473(0x47b) = CONST 
    0x476: JUMPI v473(0x47b), v472

    Begin block 0x477
    prev=[0x46f], succ=[]
    =================================
    0x477: v477(0x0) = CONST 
    0x47a: REVERT v477(0x0), v477(0x0)

    Begin block 0x47b
    prev=[0x46f], succ=[0x48e, 0x492]
    =================================
    0x47d: v47d(0x4a8) = CONST 
    0x480: v480(0x4) = CONST 
    0x483: v483 = CALLDATASIZE 
    0x484: v484 = SUB v483, v480(0x4)
    0x485: v485(0x20) = CONST 
    0x488: v488 = LT v484, v485(0x20)
    0x489: v489 = ISZERO v488
    0x48a: v48a(0x492) = CONST 
    0x48d: JUMPI v48a(0x492), v489

    Begin block 0x48e
    prev=[0x47b], succ=[]
    =================================
    0x48e: v48e(0x0) = CONST 
    0x491: REVERT v48e(0x0), v48e(0x0)

    Begin block 0x492
    prev=[0x47b], succ=[0xb340x46f]
    =================================
    0x494: v494 = ADD v480(0x4), v484
    0x498: v498 = CALLDATALOAD v480(0x4)
    0x49a: v49a(0x20) = CONST 
    0x49c: v49c(0x24) = ADD v49a(0x20), v480(0x4)
    0x4a4: v4a4(0xb34) = CONST 
    0x4a7: JUMP v4a4(0xb34)

    Begin block 0xb340x46f
    prev=[0x492], succ=[0x8b3B0xb340x46f]
    =================================
    0xb350x46f: v46fb35(0x0) = CONST 
    0xb370x46f: v46fb37(0x1) = CONST 
    0xb390x46f: v46fb39(0x0) = CONST 
    0xb3b0x46f: v46fb3b(0x1) = SHL v46fb39(0x0), v46fb37(0x1)
    0xb3c0x46f: v46fb3c(0xb44) = CONST 
    0xb400x46f: v46fb40(0x8b3) = CONST 
    0xb430x46f: JUMP v46fb40(0x8b3)

    Begin block 0x8b3B0xb340x46f
    prev=[0xb340x46f], succ=[0xb440x46f]
    =================================
    0x8b4S0xb340x46f: v8b4Vb3446f(0x0) = CONST 
    0x8b8S0xb340x46f: v8b8Vb3446f = SLOAD v498
    0x8c2S0xb340x46f: JUMP v46fb3c(0xb44)

    Begin block 0xb440x46f
    prev=[0x8b3B0xb340x46f], succ=[0x4a8]
    =================================
    0xb450x46f: v46fb45 = EQ v8b8Vb3446f, v46fb3b(0x1)
    0xb4b0x46f: JUMP v47d(0x4a8)

    Begin block 0x4a8
    prev=[0xb440x46f], succ=[]
    =================================
    0x4a9: v4a9(0x40) = CONST 
    0x4ab: v4ab = MLOAD v4a9(0x40)
    0x4ae: v4ae = ISZERO v46fb45
    0x4af: v4af = ISZERO v4ae
    0x4b0: v4b0 = ISZERO v4af
    0x4b1: v4b1 = ISZERO v4b0
    0x4b3: MSTORE v4ab, v4b1
    0x4b4: v4b4(0x20) = CONST 
    0x4b6: v4b6 = ADD v4b4(0x20), v4ab
    0x4ba: v4ba(0x40) = CONST 
    0x4bc: v4bc = MLOAD v4ba(0x40)
    0x4bf: v4bf(0x20) = SUB v4b6, v4bc
    0x4c1: RETURN v4bc, v4bf(0x20)

}

function setProxyOwner(address)() public {
    Begin block 0x4c2
    prev=[], succ=[0x4ca, 0x4ce]
    =================================
    0x4c3: v4c3 = CALLVALUE 
    0x4c5: v4c5 = ISZERO v4c3
    0x4c6: v4c6(0x4ce) = CONST 
    0x4c9: JUMPI v4c6(0x4ce), v4c5

    Begin block 0x4ca
    prev=[0x4c2], succ=[]
    =================================
    0x4ca: v4ca(0x0) = CONST 
    0x4cd: REVERT v4ca(0x0), v4ca(0x0)

    Begin block 0x4ce
    prev=[0x4c2], succ=[0x4e1, 0x4e5]
    =================================
    0x4d0: v4d0(0x511) = CONST 
    0x4d3: v4d3(0x4) = CONST 
    0x4d6: v4d6 = CALLDATASIZE 
    0x4d7: v4d7 = SUB v4d6, v4d3(0x4)
    0x4d8: v4d8(0x20) = CONST 
    0x4db: v4db = LT v4d7, v4d8(0x20)
    0x4dc: v4dc = ISZERO v4db
    0x4dd: v4dd(0x4e5) = CONST 
    0x4e0: JUMPI v4dd(0x4e5), v4dc

    Begin block 0x4e1
    prev=[0x4ce], succ=[]
    =================================
    0x4e1: v4e1(0x0) = CONST 
    0x4e4: REVERT v4e1(0x0), v4e1(0x0)

    Begin block 0x4e5
    prev=[0x4ce], succ=[0xb4c]
    =================================
    0x4e7: v4e7 = ADD v4d3(0x4), v4d7
    0x4eb: v4eb = CALLDATALOAD v4d3(0x4)
    0x4ec: v4ec(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x501: v501 = AND v4ec(0xffffffffffffffffffffffffffffffffffffffff), v4eb
    0x503: v503(0x20) = CONST 
    0x505: v505(0x24) = ADD v503(0x20), v4d3(0x4)
    0x50d: v50d(0xb4c) = CONST 
    0x510: JUMP v50d(0xb4c)

    Begin block 0xb4c
    prev=[0x4e5], succ=[0xac4B0xb4c]
    =================================
    0xb4d: vb4d(0xb9b) = CONST 
    0xb50: vb50(0x40) = CONST 
    0xb52: vb52 = MLOAD vb50(0x40)
    0xb53: vb53(0x20) = CONST 
    0xb55: vb55 = ADD vb53(0x20), vb52
    0xb58: vb58(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST 
    0xb7a: MSTORE vb55, vb58(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0xb7c: vb7c(0xa) = CONST 
    0xb7e: vb7e = ADD vb7c(0xa), vb55
    0xb81: vb81(0x40) = CONST 
    0xb83: vb83 = MLOAD vb81(0x40)
    0xb84: vb84(0x20) = CONST 
    0xb88: vb88(0x2a) = SUB vb7e, vb83
    0xb89: vb89(0xa) = SUB vb88(0x2a), vb84(0x20)
    0xb8b: MSTORE vb83, vb89(0xa)
    0xb8d: vb8d(0x40) = CONST 
    0xb8f: MSTORE vb8d(0x40), vb7e
    0xb91: vb91(0xa) = MLOAD vb83
    0xb93: vb93(0x20) = CONST 
    0xb95: vb95 = ADD vb93(0x20), vb83
    0xb96: vb96 = SHA3 vb95, vb91(0xa)
    0xb97: vb97(0xac4) = CONST 
    0xb9a: JUMP vb97(0xac4)

    Begin block 0xac4B0xb4c
    prev=[0xb4c], succ=[0x8b3B0xac4B0xb4c]
    =================================
    0xac5S0xb4c: vac5Vb4c(0x0) = CONST 
    0xac7S0xb4c: vac7Vb4c(0xad7) = CONST 
    0xacaS0xb4c: vacaVb4c(0xad2) = CONST 
    0xaceS0xb4c: vaceVb4c(0x8b3) = CONST 
    0xad1S0xb4c: JUMP vaceVb4c(0x8b3)

    Begin block 0x8b3B0xac4B0xb4c
    prev=[0xac4B0xb4c], succ=[0xad20xac4B0xb4c]
    =================================
    0x8b4S0xac4S0xb4c: v8b4Vac4Vb4c(0x0) = CONST 
    0x8b8S0xac4S0xb4c: v8b8Vac4Vb4c = SLOAD vb96
    0x8c2S0xac4S0xb4c: JUMP vacaVb4c(0xad2)

    Begin block 0xad20xac4B0xb4c
    prev=[0x8b3B0xac4B0xb4c], succ=[0x9190xac4B0xb4c]
    =================================
    0xad30xac4S0xb4c: vac4ad3Vb4c(0x919) = CONST 
    0xad60xac4S0xb4c: JUMP vac4ad3Vb4c(0x919)

    Begin block 0x9190xac4B0xb4c
    prev=[0xad20xac4B0xb4c], succ=[0xad70xac4B0xb4c]
    =================================
    0x91a0xac4S0xb4c: vac491aVb4c(0x0) = CONST 
    0x91d0xac4S0xb4c: vac491dVb4c(0x0) = CONST 
    0x91f0xac4S0xb4c: vac491fVb4c = SHR vac491dVb4c(0x0), v8b8Vac4Vb4c
    0x9250xac4S0xb4c: JUMP vac7Vb4c(0xad7)

    Begin block 0xad70xac4B0xb4c
    prev=[0x9190xac4B0xb4c], succ=[0xb9b]
    =================================
    0xadd0xac4S0xb4c: JUMP vb4d(0xb9b)

    Begin block 0xb9b
    prev=[0xad70xac4B0xb4c], succ=[0xbce, 0xc1e]
    =================================
    0xb9c: vb9c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xbb1: vbb1 = AND vb9c(0xffffffffffffffffffffffffffffffffffffffff), vac491fVb4c
    0xbb2: vbb2 = CALLER 
    0xbb3: vbb3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xbc8: vbc8 = AND vbb3(0xffffffffffffffffffffffffffffffffffffffff), vbb2
    0xbc9: vbc9 = EQ vbc8, vbb1
    0xbca: vbca(0xc1e) = CONST 
    0xbcd: JUMPI vbca(0xc1e), vbc9

    Begin block 0xbce
    prev=[0xb9b], succ=[]
    =================================
    0xbce: vbce(0x40) = CONST 
    0xbd0: vbd0 = MLOAD vbce(0x40)
    0xbd1: vbd1(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0xbf3: MSTORE vbd0, vbd1(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0xbf4: vbf4(0x4) = CONST 
    0xbf6: vbf6 = ADD vbf4(0x4), vbd0
    0xbf9: vbf9(0x20) = CONST 
    0xbfb: vbfb = ADD vbf9(0x20), vbf6
    0xbfe: vbfe(0x20) = SUB vbfb, vbf6
    0xc00: MSTORE vbf6, vbfe(0x20)
    0xc01: vc01(0x2b) = CONST 
    0xc04: MSTORE vbfb, vc01(0x2b)
    0xc05: vc05(0x20) = CONST 
    0xc07: vc07 = ADD vc05(0x20), vbfb
    0xc09: vc09(0xe8f) = CONST 
    0xc0c: vc0c(0x2b) = CONST 
    0xc0f: CODECOPY vc07, vc09(0xe8f), vc0c(0x2b)
    0xc10: vc10(0x40) = CONST 
    0xc12: vc12 = ADD vc10(0x40), vc07
    0xc16: vc16(0x40) = CONST 
    0xc18: vc18 = MLOAD vc16(0x40)
    0xc1b: vc1b(0x84) = SUB vc12, vc18
    0xc1d: REVERT vc18, vc1b(0x84)

    Begin block 0xc1e
    prev=[0xb9b], succ=[0xe3bB0xc1e]
    =================================
    0xc1f: vc1f(0xc6e) = CONST 
    0xc22: vc22(0x40) = CONST 
    0xc24: vc24 = MLOAD vc22(0x40)
    0xc25: vc25(0x20) = CONST 
    0xc27: vc27 = ADD vc25(0x20), vc24
    0xc2a: vc2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST 
    0xc4c: MSTORE vc27, vc2a(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0xc4e: vc4e(0xa) = CONST 
    0xc50: vc50 = ADD vc4e(0xa), vc27
    0xc53: vc53(0x40) = CONST 
    0xc55: vc55 = MLOAD vc53(0x40)
    0xc56: vc56(0x20) = CONST 
    0xc5a: vc5a(0x2a) = SUB vc50, vc55
    0xc5b: vc5b(0xa) = SUB vc5a(0x2a), vc56(0x20)
    0xc5d: MSTORE vc55, vc5b(0xa)
    0xc5f: vc5f(0x40) = CONST 
    0xc61: MSTORE vc5f(0x40), vc50
    0xc63: vc63(0xa) = MLOAD vc55
    0xc65: vc65(0x20) = CONST 
    0xc67: vc67 = ADD vc65(0x20), vc55
    0xc68: vc68 = SHA3 vc67, vc63(0xa)
    0xc6a: vc6a(0xe3b) = CONST 
    0xc6d: JUMP vc6a(0xe3b), v501, vc68, vc1f(0xc6e)

    Begin block 0xe3bB0xc1e
    prev=[0xc1e], succ=[0x97c0xe3bB0xc1e]
    =================================
    0xe3cS0xc1e: ve3cVc1e(0xe4d) = CONST 
    0xe40S0xc1e: ve40Vc1e(0xe48) = CONST 
    0xe44S0xc1e: ve44Vc1e(0x97c) = CONST 
    0xe47S0xc1e: JUMP ve44Vc1e(0x97c)

    Begin block 0x97c0xe3bB0xc1e
    prev=[0xe3bB0xc1e], succ=[0xe48B0xc1e]
    =================================
    0x97d0xe3bS0xc1e: ve3b97dVc1e(0x0) = CONST 
    0x9800xe3bS0xc1e: ve3b980Vc1e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9950xe3bS0xc1e: ve3b995Vc1e = AND ve3b980Vc1e(0xffffffffffffffffffffffffffffffffffffffff), v501
    0x9960xe3bS0xc1e: ve3b996Vc1e(0x0) = CONST 
    0x9980xe3bS0xc1e: ve3b998Vc1e = SHL ve3b996Vc1e(0x0), ve3b995Vc1e
    0x99e0xe3bS0xc1e: JUMP ve40Vc1e(0xe48)

    Begin block 0xe48B0xc1e
    prev=[0x97c0xe3bB0xc1e], succ=[0xe51B0xe48B0xc1e]
    =================================
    0xe49S0xc1e: ve49Vc1e(0xe51) = CONST 
    0xe4cS0xc1e: JUMP ve49Vc1e(0xe51), ve3b998Vc1e, vc68, ve3cVc1e(0xe4d)

    Begin block 0xe51B0xe48B0xc1e
    prev=[0xe48B0xc1e], succ=[0xe4dB0xc1e]
    =================================
    0xe52S0xe48S0xc1e: ve52Ve48Vc1e(0x0) = CONST 
    0xe59S0xe48S0xc1e: SSTORE vc68, ve3b998Vc1e
    0xe5dS0xe48S0xc1e: JUMP ve3cVc1e(0xe4d)

    Begin block 0xe4dB0xc1e
    prev=[0xe51B0xe48B0xc1e], succ=[0xc6e]
    =================================
    0xe50S0xc1e: JUMP vc1f(0xc6e)

    Begin block 0xc6e
    prev=[0xe4dB0xc1e], succ=[0x511]
    =================================
    0xc70: JUMP v4d0(0x511)

    Begin block 0x511
    prev=[0xc6e], succ=[]
    =================================
    0x512: STOP 

}

function setImplementation(address)() public {
    Begin block 0x513
    prev=[], succ=[0x51b, 0x51f]
    =================================
    0x514: v514 = CALLVALUE 
    0x516: v516 = ISZERO v514
    0x517: v517(0x51f) = CONST 
    0x51a: JUMPI v517(0x51f), v516

    Begin block 0x51b
    prev=[0x513], succ=[]
    =================================
    0x51b: v51b(0x0) = CONST 
    0x51e: REVERT v51b(0x0), v51b(0x0)

    Begin block 0x51f
    prev=[0x513], succ=[0x532, 0x536]
    =================================
    0x521: v521(0x562) = CONST 
    0x524: v524(0x4) = CONST 
    0x527: v527 = CALLDATASIZE 
    0x528: v528 = SUB v527, v524(0x4)
    0x529: v529(0x20) = CONST 
    0x52c: v52c = LT v528, v529(0x20)
    0x52d: v52d = ISZERO v52c
    0x52e: v52e(0x536) = CONST 
    0x531: JUMPI v52e(0x536), v52d

    Begin block 0x532
    prev=[0x51f], succ=[]
    =================================
    0x532: v532(0x0) = CONST 
    0x535: REVERT v532(0x0), v532(0x0)

    Begin block 0x536
    prev=[0x51f], succ=[0xc71]
    =================================
    0x538: v538 = ADD v524(0x4), v528
    0x53c: v53c = CALLDATALOAD v524(0x4)
    0x53d: v53d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x552: v552 = AND v53d(0xffffffffffffffffffffffffffffffffffffffff), v53c
    0x554: v554(0x20) = CONST 
    0x556: v556(0x24) = ADD v554(0x20), v524(0x4)
    0x55e: v55e(0xc71) = CONST 
    0x561: JUMP v55e(0xc71)

    Begin block 0xc71
    prev=[0x536], succ=[0xac4B0xc71]
    =================================
    0xc72: vc72(0xcc0) = CONST 
    0xc75: vc75(0x40) = CONST 
    0xc77: vc77 = MLOAD vc75(0x40)
    0xc78: vc78(0x20) = CONST 
    0xc7a: vc7a = ADD vc78(0x20), vc77
    0xc7d: vc7d(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000) = CONST 
    0xc9f: MSTORE vc7a, vc7d(0x4f574e45525f534c4f5400000000000000000000000000000000000000000000)
    0xca1: vca1(0xa) = CONST 
    0xca3: vca3 = ADD vca1(0xa), vc7a
    0xca6: vca6(0x40) = CONST 
    0xca8: vca8 = MLOAD vca6(0x40)
    0xca9: vca9(0x20) = CONST 
    0xcad: vcad(0x2a) = SUB vca3, vca8
    0xcae: vcae(0xa) = SUB vcad(0x2a), vca9(0x20)
    0xcb0: MSTORE vca8, vcae(0xa)
    0xcb2: vcb2(0x40) = CONST 
    0xcb4: MSTORE vcb2(0x40), vca3
    0xcb6: vcb6(0xa) = MLOAD vca8
    0xcb8: vcb8(0x20) = CONST 
    0xcba: vcba = ADD vcb8(0x20), vca8
    0xcbb: vcbb = SHA3 vcba, vcb6(0xa)
    0xcbc: vcbc(0xac4) = CONST 
    0xcbf: JUMP vcbc(0xac4)

    Begin block 0xac4B0xc71
    prev=[0xc71], succ=[0x8b3B0xac4B0xc71]
    =================================
    0xac5S0xc71: vac5Vc71(0x0) = CONST 
    0xac7S0xc71: vac7Vc71(0xad7) = CONST 
    0xacaS0xc71: vacaVc71(0xad2) = CONST 
    0xaceS0xc71: vaceVc71(0x8b3) = CONST 
    0xad1S0xc71: JUMP vaceVc71(0x8b3)

    Begin block 0x8b3B0xac4B0xc71
    prev=[0xac4B0xc71], succ=[0xad20xac4B0xc71]
    =================================
    0x8b4S0xac4S0xc71: v8b4Vac4Vc71(0x0) = CONST 
    0x8b8S0xac4S0xc71: v8b8Vac4Vc71 = SLOAD vcbb
    0x8c2S0xac4S0xc71: JUMP vacaVc71(0xad2)

    Begin block 0xad20xac4B0xc71
    prev=[0x8b3B0xac4B0xc71], succ=[0x9190xac4B0xc71]
    =================================
    0xad30xac4S0xc71: vac4ad3Vc71(0x919) = CONST 
    0xad60xac4S0xc71: JUMP vac4ad3Vc71(0x919)

    Begin block 0x9190xac4B0xc71
    prev=[0xad20xac4B0xc71], succ=[0xad70xac4B0xc71]
    =================================
    0x91a0xac4S0xc71: vac491aVc71(0x0) = CONST 
    0x91d0xac4S0xc71: vac491dVc71(0x0) = CONST 
    0x91f0xac4S0xc71: vac491fVc71 = SHR vac491dVc71(0x0), v8b8Vac4Vc71
    0x9250xac4S0xc71: JUMP vac7Vc71(0xad7)

    Begin block 0xad70xac4B0xc71
    prev=[0x9190xac4B0xc71], succ=[0xcc0]
    =================================
    0xadd0xac4S0xc71: JUMP vc72(0xcc0)

    Begin block 0xcc0
    prev=[0xad70xac4B0xc71], succ=[0xcf3, 0xd43]
    =================================
    0xcc1: vcc1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xcd6: vcd6 = AND vcc1(0xffffffffffffffffffffffffffffffffffffffff), vac491fVc71
    0xcd7: vcd7 = CALLER 
    0xcd8: vcd8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xced: vced = AND vcd8(0xffffffffffffffffffffffffffffffffffffffff), vcd7
    0xcee: vcee = EQ vced, vcd6
    0xcef: vcef(0xd43) = CONST 
    0xcf2: JUMPI vcef(0xd43), vcee

    Begin block 0xcf3
    prev=[0xcc0], succ=[]
    =================================
    0xcf3: vcf3(0x40) = CONST 
    0xcf5: vcf5 = MLOAD vcf3(0x40)
    0xcf6: vcf6(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0xd18: MSTORE vcf5, vcf6(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0xd19: vd19(0x4) = CONST 
    0xd1b: vd1b = ADD vd19(0x4), vcf5
    0xd1e: vd1e(0x20) = CONST 
    0xd20: vd20 = ADD vd1e(0x20), vd1b
    0xd23: vd23(0x20) = SUB vd20, vd1b
    0xd25: MSTORE vd1b, vd23(0x20)
    0xd26: vd26(0x2b) = CONST 
    0xd29: MSTORE vd20, vd26(0x2b)
    0xd2a: vd2a(0x20) = CONST 
    0xd2c: vd2c = ADD vd2a(0x20), vd20
    0xd2e: vd2e(0xe8f) = CONST 
    0xd31: vd31(0x2b) = CONST 
    0xd34: CODECOPY vd2c, vd2e(0xe8f), vd31(0x2b)
    0xd35: vd35(0x40) = CONST 
    0xd37: vd37 = ADD vd35(0x40), vd2c
    0xd3b: vd3b(0x40) = CONST 
    0xd3d: vd3d = MLOAD vd3b(0x40)
    0xd40: vd40(0x84) = SUB vd37, vd3d
    0xd42: REVERT vd3d, vd40(0x84)

    Begin block 0xd43
    prev=[0xcc0], succ=[0xe3bB0xd43]
    =================================
    0xd44: vd44(0xd93) = CONST 
    0xd47: vd47(0x40) = CONST 
    0xd49: vd49 = MLOAD vd47(0x40)
    0xd4a: vd4a(0x20) = CONST 
    0xd4c: vd4c = ADD vd4a(0x20), vd49
    0xd4f: vd4f(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000) = CONST 
    0xd71: MSTORE vd4c, vd4f(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000)
    0xd73: vd73(0x13) = CONST 
    0xd75: vd75 = ADD vd73(0x13), vd4c
    0xd78: vd78(0x40) = CONST 
    0xd7a: vd7a = MLOAD vd78(0x40)
    0xd7b: vd7b(0x20) = CONST 
    0xd7f: vd7f(0x33) = SUB vd75, vd7a
    0xd80: vd80(0x13) = SUB vd7f(0x33), vd7b(0x20)
    0xd82: MSTORE vd7a, vd80(0x13)
    0xd84: vd84(0x40) = CONST 
    0xd86: MSTORE vd84(0x40), vd75
    0xd88: vd88(0x13) = MLOAD vd7a
    0xd8a: vd8a(0x20) = CONST 
    0xd8c: vd8c = ADD vd8a(0x20), vd7a
    0xd8d: vd8d = SHA3 vd8c, vd88(0x13)
    0xd8f: vd8f(0xe3b) = CONST 
    0xd92: JUMP vd8f(0xe3b), v552, vd8d, vd44(0xd93)

    Begin block 0xe3bB0xd43
    prev=[0xd43], succ=[0x97c0xe3bB0xd43]
    =================================
    0xe3cS0xd43: ve3cVd43(0xe4d) = CONST 
    0xe40S0xd43: ve40Vd43(0xe48) = CONST 
    0xe44S0xd43: ve44Vd43(0x97c) = CONST 
    0xe47S0xd43: JUMP ve44Vd43(0x97c)

    Begin block 0x97c0xe3bB0xd43
    prev=[0xe3bB0xd43], succ=[0xe48B0xd43]
    =================================
    0x97d0xe3bS0xd43: ve3b97dVd43(0x0) = CONST 
    0x9800xe3bS0xd43: ve3b980Vd43(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9950xe3bS0xd43: ve3b995Vd43 = AND ve3b980Vd43(0xffffffffffffffffffffffffffffffffffffffff), v552
    0x9960xe3bS0xd43: ve3b996Vd43(0x0) = CONST 
    0x9980xe3bS0xd43: ve3b998Vd43 = SHL ve3b996Vd43(0x0), ve3b995Vd43
    0x99e0xe3bS0xd43: JUMP ve40Vd43(0xe48)

    Begin block 0xe48B0xd43
    prev=[0x97c0xe3bB0xd43], succ=[0xe51B0xe48B0xd43]
    =================================
    0xe49S0xd43: ve49Vd43(0xe51) = CONST 
    0xe4cS0xd43: JUMP ve49Vd43(0xe51), ve3b998Vd43, vd8d, ve3cVd43(0xe4d)

    Begin block 0xe51B0xe48B0xd43
    prev=[0xe48B0xd43], succ=[0xe4dB0xd43]
    =================================
    0xe52S0xe48S0xd43: ve52Ve48Vd43(0x0) = CONST 
    0xe59S0xe48S0xd43: SSTORE vd8d, ve3b998Vd43
    0xe5dS0xe48S0xd43: JUMP ve3cVd43(0xe4d)

    Begin block 0xe4dB0xd43
    prev=[0xe51B0xe48B0xd43], succ=[0xd93]
    =================================
    0xe50S0xd43: JUMP vd44(0xd93)

    Begin block 0xd93
    prev=[0xe4dB0xd43], succ=[0x562]
    =================================
    0xd95: JUMP v521(0x562)

    Begin block 0x562
    prev=[0xd93], succ=[]
    =================================
    0x563: STOP 

}

function fallback()() public {
    Begin block 0xe1
    prev=[], succ=[0xe20xe1]
    =================================

    Begin block 0xe20xe1
    prev=[0xe1], succ=[0x5640xe1]
    =================================
    0xe30xe1: ve1e3(0xea) = CONST 
    0xe60xe1: ve1e6(0x564) = CONST 
    0xe90xe1: JUMP ve1e6(0x564)

    Begin block 0x5640xe1
    prev=[0xe20xe1], succ=[0xb34B0x5640xe1]
    =================================
    0x5650xe1: ve1565(0x5b3) = CONST 
    0x5680xe1: ve1568(0x40) = CONST 
    0x56a0xe1: ve156a = MLOAD ve1568(0x40)
    0x56b0xe1: ve156b(0x20) = CONST 
    0x56d0xe1: ve156d = ADD ve156b(0x20), ve156a
    0x5700xe1: ve1570(0x5041555345445f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x5920xe1: MSTORE ve156d, ve1570(0x5041555345445f534c4f54000000000000000000000000000000000000000000)
    0x5940xe1: ve1594(0xb) = CONST 
    0x5960xe1: ve1596 = ADD ve1594(0xb), ve156d
    0x5990xe1: ve1599(0x40) = CONST 
    0x59b0xe1: ve159b = MLOAD ve1599(0x40)
    0x59c0xe1: ve159c(0x20) = CONST 
    0x5a00xe1: ve15a0(0x2b) = SUB ve1596, ve159b
    0x5a10xe1: ve15a1(0xb) = SUB ve15a0(0x2b), ve159c(0x20)
    0x5a30xe1: MSTORE ve159b, ve15a1(0xb)
    0x5a50xe1: ve15a5(0x40) = CONST 
    0x5a70xe1: MSTORE ve15a5(0x40), ve1596
    0x5a90xe1: ve15a9(0xb) = MLOAD ve159b
    0x5ab0xe1: ve15ab(0x20) = CONST 
    0x5ad0xe1: ve15ad = ADD ve15ab(0x20), ve159b
    0x5ae0xe1: ve15ae = SHA3 ve15ad, ve15a9(0xb)
    0x5af0xe1: ve15af(0xb34) = CONST 
    0x5b20xe1: JUMP ve15af(0xb34)

    Begin block 0xb34B0x5640xe1
    prev=[0x5640xe1], succ=[0x8b3B0xb34B0x5640xe1]
    =================================
    0xb35S0x5640xe1: vb35V564e1(0x0) = CONST 
    0xb37S0x5640xe1: vb37V564e1(0x1) = CONST 
    0xb39S0x5640xe1: vb39V564e1(0x0) = CONST 
    0xb3bS0x5640xe1: vb3bV564e1(0x1) = SHL vb39V564e1(0x0), vb37V564e1(0x1)
    0xb3cS0x5640xe1: vb3cV564e1(0xb44) = CONST 
    0xb40S0x5640xe1: vb40V564e1(0x8b3) = CONST 
    0xb43S0x5640xe1: JUMP vb40V564e1(0x8b3)

    Begin block 0x8b3B0xb34B0x5640xe1
    prev=[0xb34B0x5640xe1], succ=[0xb440xb34B0x5640xe1]
    =================================
    0x8b4S0xb34S0x5640xe1: v8b4Vb34V564e1(0x0) = CONST 
    0x8b8S0xb34S0x5640xe1: v8b8Vb34V564e1 = SLOAD ve15ae
    0x8c2S0xb34S0x5640xe1: JUMP vb3cV564e1(0xb44)

    Begin block 0xb440xb34B0x5640xe1
    prev=[0x8b3B0xb34B0x5640xe1], succ=[0x5b30xe1]
    =================================
    0xb450xb34S0x5640xe1: vb34b45V564e1 = EQ v8b8Vb34V564e1, vb3bV564e1(0x1)
    0xb4b0xb34S0x5640xe1: JUMP ve1565(0x5b3)

    Begin block 0x5b30xe1
    prev=[0xb440xb34B0x5640xe1], succ=[0x5b90xe1, 0x6090xe1]
    =================================
    0x5b40xe1: ve15b4 = ISZERO vb34b45V564e1
    0x5b50xe1: ve15b5(0x609) = CONST 
    0x5b80xe1: JUMPI ve15b5(0x609), ve15b4

    Begin block 0x5b90xe1
    prev=[0x5b30xe1], succ=[]
    =================================
    0x5b90xe1: ve15b9(0x40) = CONST 
    0x5bb0xe1: ve15bb = MLOAD ve15b9(0x40)
    0x5bc0xe1: ve15bc(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x5de0xe1: MSTORE ve15bb, ve15bc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5df0xe1: ve15df(0x4) = CONST 
    0x5e10xe1: ve15e1 = ADD ve15df(0x4), ve15bb
    0x5e40xe1: ve15e4(0x20) = CONST 
    0x5e60xe1: ve15e6 = ADD ve15e4(0x20), ve15e1
    0x5e90xe1: ve15e9(0x20) = SUB ve15e6, ve15e1
    0x5eb0xe1: MSTORE ve15e1, ve15e9(0x20)
    0x5ec0xe1: ve15ec(0x2c) = CONST 
    0x5ef0xe1: MSTORE ve15e6, ve15ec(0x2c)
    0x5f00xe1: ve15f0(0x20) = CONST 
    0x5f20xe1: ve15f2 = ADD ve15f0(0x20), ve15e6
    0x5f40xe1: ve15f4(0xeba) = CONST 
    0x5f70xe1: ve15f7(0x2c) = CONST 
    0x5fa0xe1: CODECOPY ve15f2, ve15f4(0xeba), ve15f7(0x2c)
    0x5fb0xe1: ve15fb(0x40) = CONST 
    0x5fd0xe1: ve15fd = ADD ve15fb(0x40), ve15f2
    0x6010xe1: ve1601(0x40) = CONST 
    0x6030xe1: ve1603 = MLOAD ve1601(0x40)
    0x6060xe1: ve1606(0x84) = SUB ve15fd, ve1603
    0x6080xe1: REVERT ve1603, ve1606(0x84)

    Begin block 0x6090xe1
    prev=[0x5b30xe1], succ=[0xd960xe1]
    =================================
    0x60a0xe1: ve160a(0x611) = CONST 
    0x60d0xe1: ve160d(0xd96) = CONST 
    0x6100xe1: JUMP ve160d(0xd96)

    Begin block 0xd960xe1
    prev=[0x6090xe1], succ=[0xac4B0xd960xe1]
    =================================
    0xd970xe1: ve1d97(0x0) = CONST 
    0xd990xe1: ve1d99(0xde7) = CONST 
    0xd9c0xe1: ve1d9c(0x40) = CONST 
    0xd9e0xe1: ve1d9e = MLOAD ve1d9c(0x40)
    0xd9f0xe1: ve1d9f(0x20) = CONST 
    0xda10xe1: ve1da1 = ADD ve1d9f(0x20), ve1d9e
    0xda40xe1: ve1da4(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000) = CONST 
    0xdc60xe1: MSTORE ve1da1, ve1da4(0x494d504c454d454e544154494f4e5f534c4f5400000000000000000000000000)
    0xdc80xe1: ve1dc8(0x13) = CONST 
    0xdca0xe1: ve1dca = ADD ve1dc8(0x13), ve1da1
    0xdcd0xe1: ve1dcd(0x40) = CONST 
    0xdcf0xe1: ve1dcf = MLOAD ve1dcd(0x40)
    0xdd00xe1: ve1dd0(0x20) = CONST 
    0xdd40xe1: ve1dd4(0x33) = SUB ve1dca, ve1dcf
    0xdd50xe1: ve1dd5(0x13) = SUB ve1dd4(0x33), ve1dd0(0x20)
    0xdd70xe1: MSTORE ve1dcf, ve1dd5(0x13)
    0xdd90xe1: ve1dd9(0x40) = CONST 
    0xddb0xe1: MSTORE ve1dd9(0x40), ve1dca
    0xddd0xe1: ve1ddd(0x13) = MLOAD ve1dcf
    0xddf0xe1: ve1ddf(0x20) = CONST 
    0xde10xe1: ve1de1 = ADD ve1ddf(0x20), ve1dcf
    0xde20xe1: ve1de2 = SHA3 ve1de1, ve1ddd(0x13)
    0xde30xe1: ve1de3(0xac4) = CONST 
    0xde60xe1: JUMP ve1de3(0xac4)

    Begin block 0xac4B0xd960xe1
    prev=[0xd960xe1], succ=[0x8b3B0xac4B0xd960xe1]
    =================================
    0xac5S0xd960xe1: vac5Vd96e1(0x0) = CONST 
    0xac7S0xd960xe1: vac7Vd96e1(0xad7) = CONST 
    0xacaS0xd960xe1: vacaVd96e1(0xad2) = CONST 
    0xaceS0xd960xe1: vaceVd96e1(0x8b3) = CONST 
    0xad1S0xd960xe1: JUMP vaceVd96e1(0x8b3)

    Begin block 0x8b3B0xac4B0xd960xe1
    prev=[0xac4B0xd960xe1], succ=[0xad20xac4B0xd960xe1]
    =================================
    0x8b4S0xac4S0xd960xe1: v8b4Vac4Vd96e1(0x0) = CONST 
    0x8b8S0xac4S0xd960xe1: v8b8Vac4Vd96e1 = SLOAD ve1de2
    0x8c2S0xac4S0xd960xe1: JUMP vacaVd96e1(0xad2)

    Begin block 0xad20xac4B0xd960xe1
    prev=[0x8b3B0xac4B0xd960xe1], succ=[0x9190xac4B0xd960xe1]
    =================================
    0xad30xac4S0xd960xe1: vac4ad3Vd96e1(0x919) = CONST 
    0xad60xac4S0xd960xe1: JUMP vac4ad3Vd96e1(0x919)

    Begin block 0x9190xac4B0xd960xe1
    prev=[0xad20xac4B0xd960xe1], succ=[0xad70xac4B0xd960xe1]
    =================================
    0x91a0xac4S0xd960xe1: vac491aVd96e1(0x0) = CONST 
    0x91d0xac4S0xd960xe1: vac491dVd96e1(0x0) = CONST 
    0x91f0xac4S0xd960xe1: vac491fVd96e1 = SHR vac491dVd96e1(0x0), v8b8Vac4Vd96e1
    0x9250xac4S0xd960xe1: JUMP vac7Vd96e1(0xad7)

    Begin block 0xad70xac4B0xd960xe1
    prev=[0x9190xac4B0xd960xe1], succ=[0xde70xe1]
    =================================
    0xadd0xac4S0xd960xe1: JUMP ve1d99(0xde7)

    Begin block 0xde70xe1
    prev=[0xad70xac4B0xd960xe1], succ=[0xe090xe1, 0xe0c0xe1]
    =================================
    0xdea0xe1: ve1dea(0x40) = CONST 
    0xdec0xe1: ve1dec = MLOAD ve1dea(0x40)
    0xded0xe1: ve1ded = CALLDATASIZE 
    0xdee0xe1: ve1dee(0x0) = CONST 
    0xdf10xe1: CALLDATACOPY ve1dec, ve1dee(0x0), ve1ded
    0xdf20xe1: ve1df2(0x0) = CONST 
    0xdf50xe1: ve1df5 = CALLDATASIZE 
    0xdf80xe1: ve1df8 = GAS 
    0xdf90xe1: ve1df9 = DELEGATECALL ve1df8, vac491fVd96e1, ve1dec, ve1df5, ve1df2(0x0), ve1df2(0x0)
    0xdfa0xe1: ve1dfa = RETURNDATASIZE 
    0xdfc0xe1: ve1dfc(0x0) = CONST 
    0xdff0xe1: RETURNDATACOPY ve1dec, ve1dfc(0x0), ve1dfa
    0xe010xe1: ve1e01(0x0) = CONST 
    0xe040xe1: ve1e04 = EQ ve1df9, ve1e01(0x0)
    0xe050xe1: ve1e05(0xe0c) = CONST 
    0xe080xe1: JUMPI ve1e05(0xe0c), ve1e04

    Begin block 0xe090xe1
    prev=[0xde70xe1], succ=[]
    =================================
    0xe0b0xe1: RETURN ve1dec, ve1dfa

    Begin block 0xe0c0xe1
    prev=[0xde70xe1], succ=[]
    =================================
    0xe0f0xe1: REVERT ve1dec, ve1dfa

}

function setPaused(bool)() public {
    Begin block 0xec
    prev=[], succ=[0xf4, 0xf8]
    =================================
    0xed: ved = CALLVALUE 
    0xef: vef = ISZERO ved
    0xf0: vf0(0xf8) = CONST 
    0xf3: JUMPI vf0(0xf8), vef

    Begin block 0xf4
    prev=[0xec], succ=[]
    =================================
    0xf4: vf4(0x0) = CONST 
    0xf7: REVERT vf4(0x0), vf4(0x0)

    Begin block 0xf8
    prev=[0xec], succ=[0x10b, 0x10f]
    =================================
    0xfa: vfa(0x127) = CONST 
    0xfd: vfd(0x4) = CONST 
    0x100: v100 = CALLDATASIZE 
    0x101: v101 = SUB v100, vfd(0x4)
    0x102: v102(0x20) = CONST 
    0x105: v105 = LT v101, v102(0x20)
    0x106: v106 = ISZERO v105
    0x107: v107(0x10f) = CONST 
    0x10a: JUMPI v107(0x10f), v106

    Begin block 0x10b
    prev=[0xf8], succ=[]
    =================================
    0x10b: v10b(0x0) = CONST 
    0x10e: REVERT v10b(0x0), v10b(0x0)

    Begin block 0x10f
    prev=[0xf8], succ=[0x613]
    =================================
    0x111: v111 = ADD vfd(0x4), v101
    0x115: v115 = CALLDATALOAD vfd(0x4)
    0x116: v116 = ISZERO v115
    0x117: v117 = ISZERO v116
    0x119: v119(0x20) = CONST 
    0x11b: v11b(0x24) = ADD v119(0x20), vfd(0x4)
    0x123: v123(0x613) = CONST 
    0x126: JUMP v123(0x613)

    Begin block 0x613
    prev=[0x10f], succ=[0xac4B0x613]
    =================================
    0x614: v614(0x662) = CONST 
    0x617: v617(0x40) = CONST 
    0x619: v619 = MLOAD v617(0x40)
    0x61a: v61a(0x20) = CONST 
    0x61c: v61c = ADD v61a(0x20), v619
    0x61f: v61f(0x5041555a45525f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x641: MSTORE v61c, v61f(0x5041555a45525f534c4f54000000000000000000000000000000000000000000)
    0x643: v643(0xb) = CONST 
    0x645: v645 = ADD v643(0xb), v61c
    0x648: v648(0x40) = CONST 
    0x64a: v64a = MLOAD v648(0x40)
    0x64b: v64b(0x20) = CONST 
    0x64f: v64f(0x2b) = SUB v645, v64a
    0x650: v650(0xb) = SUB v64f(0x2b), v64b(0x20)
    0x652: MSTORE v64a, v650(0xb)
    0x654: v654(0x40) = CONST 
    0x656: MSTORE v654(0x40), v645
    0x658: v658(0xb) = MLOAD v64a
    0x65a: v65a(0x20) = CONST 
    0x65c: v65c = ADD v65a(0x20), v64a
    0x65d: v65d = SHA3 v65c, v658(0xb)
    0x65e: v65e(0xac4) = CONST 
    0x661: JUMP v65e(0xac4)

    Begin block 0xac4B0x613
    prev=[0x613], succ=[0x8b3B0xac4B0x613]
    =================================
    0xac5S0x613: vac5V613(0x0) = CONST 
    0xac7S0x613: vac7V613(0xad7) = CONST 
    0xacaS0x613: vacaV613(0xad2) = CONST 
    0xaceS0x613: vaceV613(0x8b3) = CONST 
    0xad1S0x613: JUMP vaceV613(0x8b3)

    Begin block 0x8b3B0xac4B0x613
    prev=[0xac4B0x613], succ=[0xad20xac4B0x613]
    =================================
    0x8b4S0xac4S0x613: v8b4Vac4V613(0x0) = CONST 
    0x8b8S0xac4S0x613: v8b8Vac4V613 = SLOAD v65d
    0x8c2S0xac4S0x613: JUMP vacaV613(0xad2)

    Begin block 0xad20xac4B0x613
    prev=[0x8b3B0xac4B0x613], succ=[0x9190xac4B0x613]
    =================================
    0xad30xac4S0x613: vac4ad3V613(0x919) = CONST 
    0xad60xac4S0x613: JUMP vac4ad3V613(0x919)

    Begin block 0x9190xac4B0x613
    prev=[0xad20xac4B0x613], succ=[0xad70xac4B0x613]
    =================================
    0x91a0xac4S0x613: vac491aV613(0x0) = CONST 
    0x91d0xac4S0x613: vac491dV613(0x0) = CONST 
    0x91f0xac4S0x613: vac491fV613 = SHR vac491dV613(0x0), v8b8Vac4V613
    0x9250xac4S0x613: JUMP vac7V613(0xad7)

    Begin block 0xad70xac4B0x613
    prev=[0x9190xac4B0x613], succ=[0x662]
    =================================
    0xadd0xac4S0x613: JUMP v614(0x662)

    Begin block 0x662
    prev=[0xad70xac4B0x613], succ=[0x695, 0x6e5]
    =================================
    0x663: v663(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x678: v678 = AND v663(0xffffffffffffffffffffffffffffffffffffffff), vac491fV613
    0x679: v679 = CALLER 
    0x67a: v67a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x68f: v68f = AND v67a(0xffffffffffffffffffffffffffffffffffffffff), v679
    0x690: v690 = EQ v68f, v678
    0x691: v691(0x6e5) = CONST 
    0x694: JUMPI v691(0x6e5), v690

    Begin block 0x695
    prev=[0x662], succ=[]
    =================================
    0x695: v695(0x40) = CONST 
    0x697: v697 = MLOAD v695(0x40)
    0x698: v698(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x6ba: MSTORE v697, v698(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x6bb: v6bb(0x4) = CONST 
    0x6bd: v6bd = ADD v6bb(0x4), v697
    0x6c0: v6c0(0x20) = CONST 
    0x6c2: v6c2 = ADD v6c0(0x20), v6bd
    0x6c5: v6c5(0x20) = SUB v6c2, v6bd
    0x6c7: MSTORE v6bd, v6c5(0x20)
    0x6c8: v6c8(0x30) = CONST 
    0x6cb: MSTORE v6c2, v6c8(0x30)
    0x6cc: v6cc(0x20) = CONST 
    0x6ce: v6ce = ADD v6cc(0x20), v6c2
    0x6d0: v6d0(0xe5f) = CONST 
    0x6d3: v6d3(0x30) = CONST 
    0x6d6: CODECOPY v6ce, v6d0(0xe5f), v6d3(0x30)
    0x6d7: v6d7(0x40) = CONST 
    0x6d9: v6d9 = ADD v6d7(0x40), v6ce
    0x6dd: v6dd(0x40) = CONST 
    0x6df: v6df = MLOAD v6dd(0x40)
    0x6e2: v6e2(0x84) = SUB v6d9, v6df
    0x6e4: REVERT v6df, v6e2(0x84)

    Begin block 0x6e5
    prev=[0x662], succ=[0xe10B0x6e5]
    =================================
    0x6e6: v6e6(0x735) = CONST 
    0x6e9: v6e9(0x40) = CONST 
    0x6eb: v6eb = MLOAD v6e9(0x40)
    0x6ec: v6ec(0x20) = CONST 
    0x6ee: v6ee = ADD v6ec(0x20), v6eb
    0x6f1: v6f1(0x5041555345445f534c4f54000000000000000000000000000000000000000000) = CONST 
    0x713: MSTORE v6ee, v6f1(0x5041555345445f534c4f54000000000000000000000000000000000000000000)
    0x715: v715(0xb) = CONST 
    0x717: v717 = ADD v715(0xb), v6ee
    0x71a: v71a(0x40) = CONST 
    0x71c: v71c = MLOAD v71a(0x40)
    0x71d: v71d(0x20) = CONST 
    0x721: v721(0x2b) = SUB v717, v71c
    0x722: v722(0xb) = SUB v721(0x2b), v71d(0x20)
    0x724: MSTORE v71c, v722(0xb)
    0x726: v726(0x40) = CONST 
    0x728: MSTORE v726(0x40), v717
    0x72a: v72a(0xb) = MLOAD v71c
    0x72c: v72c(0x20) = CONST 
    0x72e: v72e = ADD v72c(0x20), v71c
    0x72f: v72f = SHA3 v72e, v72a(0xb)
    0x731: v731(0xe10) = CONST 
    0x734: JUMP v731(0xe10), v117, v72f, v6e6(0x735)

    Begin block 0xe10B0x6e5
    prev=[0x6e5], succ=[0xe17B0x6e5, 0xe29B0x6e5]
    =================================
    0xe12S0x6e5: ve12V6e5 = ISZERO v117
    0xe13S0x6e5: ve13V6e5(0xe29) = CONST 
    0xe16S0x6e5: JUMPI ve13V6e5(0xe29), ve12V6e5

    Begin block 0xe17B0x6e5
    prev=[0xe10B0x6e5], succ=[0xe51B0xe17B0x6e5]
    =================================
    0xe17S0x6e5: ve17V6e5(0xe24) = CONST 
    0xe1bS0x6e5: ve1bV6e5(0x1) = CONST 
    0xe1dS0x6e5: ve1dV6e5(0x0) = CONST 
    0xe1fS0x6e5: ve1fV6e5(0x1) = SHL ve1dV6e5(0x0), ve1bV6e5(0x1)
    0xe20S0x6e5: ve20V6e5(0xe51) = CONST 
    0xe23S0x6e5: JUMP ve20V6e5(0xe51), ve1fV6e5(0x1), v72f, ve17V6e5(0xe24)

    Begin block 0xe51B0xe17B0x6e5
    prev=[0xe17B0x6e5], succ=[0xe24B0x6e5]
    =================================
    0xe52S0xe17S0x6e5: ve52Ve17V6e5(0x0) = CONST 
    0xe59S0xe17S0x6e5: SSTORE v72f, ve1fV6e5(0x1)
    0xe5dS0xe17S0x6e5: JUMP ve17V6e5(0xe24)

    Begin block 0xe24B0x6e5
    prev=[0xe51B0xe17B0x6e5], succ=[0xe37B0x6e5]
    =================================
    0xe25S0x6e5: ve25V6e5(0xe37) = CONST 
    0xe28S0x6e5: JUMP ve25V6e5(0xe37)

    Begin block 0xe37B0x6e5
    prev=[0xe24B0x6e5, 0xe36B0x6e5], succ=[0x735]
    =================================
    0xe3aS0x6e5: JUMP v6e6(0x735)

    Begin block 0x735
    prev=[0xe37B0x6e5], succ=[0x127]
    =================================
    0x737: JUMP vfa(0x127)

    Begin block 0x127
    prev=[0x735], succ=[]
    =================================
    0x128: STOP 

    Begin block 0xe29B0x6e5
    prev=[0xe10B0x6e5], succ=[0xe51B0xe29B0x6e5]
    =================================
    0xe2aS0x6e5: ve2aV6e5(0xe36) = CONST 
    0xe2eS0x6e5: ve2eV6e5(0x0) = CONST 
    0xe31S0x6e5: ve31V6e5(0x0) = SHL ve2eV6e5(0x0), ve2eV6e5(0x0)
    0xe32S0x6e5: ve32V6e5(0xe51) = CONST 
    0xe35S0x6e5: JUMP ve32V6e5(0xe51), ve31V6e5(0x0), v72f, ve2aV6e5(0xe36)

    Begin block 0xe51B0xe29B0x6e5
    prev=[0xe29B0x6e5], succ=[0xe36B0x6e5]
    =================================
    0xe52S0xe29S0x6e5: ve52Ve29V6e5(0x0) = CONST 
    0xe59S0xe29S0x6e5: SSTORE v72f, ve31V6e5(0x0)
    0xe5dS0xe29S0x6e5: JUMP ve2aV6e5(0xe36)

    Begin block 0xe36B0x6e5
    prev=[0xe51B0xe29B0x6e5], succ=[0xe37B0x6e5]
    =================================

}

