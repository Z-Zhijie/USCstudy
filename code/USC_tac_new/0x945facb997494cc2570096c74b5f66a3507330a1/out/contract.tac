function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x4e]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x9: v9(0x4e) = CONST 
    0xc: JUMPI v9(0x4e), v8

    Begin block 0xd
    prev=[0x0], succ=[0x954, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x3659cfe6) = CONST 
    0x19: v19 = EQ v14(0x3659cfe6), v12
    0x947: v947(0x954) = CONST 
    0x948: JUMPI v947(0x954), v19

    Begin block 0x954
    prev=[0xd], succ=[]
    =================================
    0x955: v955(0x65) = CONST 
    0x956: CALLPRIVATE v955(0x65)

    Begin block 0x1e
    prev=[0xd], succ=[0x957, 0x29]
    =================================
    0x1f: v1f(0x4f1ef286) = CONST 
    0x24: v24 = EQ v1f(0x4f1ef286), v12
    0x949: v949(0x957) = CONST 
    0x94a: JUMPI v949(0x957), v24

    Begin block 0x957
    prev=[0x1e], succ=[]
    =================================
    0x958: v958(0x85) = CONST 
    0x959: CALLPRIVATE v958(0x85)

    Begin block 0x29
    prev=[0x1e], succ=[0x95a, 0x34]
    =================================
    0x2a: v2a(0x5c60da1b) = CONST 
    0x2f: v2f = EQ v2a(0x5c60da1b), v12
    0x94b: v94b(0x95a) = CONST 
    0x94c: JUMPI v94b(0x95a), v2f

    Begin block 0x95a
    prev=[0x29], succ=[]
    =================================
    0x95b: v95b(0x98) = CONST 
    0x95c: CALLPRIVATE v95b(0x98)

    Begin block 0x34
    prev=[0x29], succ=[0x3f, 0x95d]
    =================================
    0x35: v35(0x8f283970) = CONST 
    0x3a: v3a = EQ v35(0x8f283970), v12
    0x94d: v94d(0x95d) = CONST 
    0x94e: JUMPI v94d(0x95d), v3a

    Begin block 0x3f
    prev=[0x34], succ=[0x4a, 0x960]
    =================================
    0x40: v40(0xf851a440) = CONST 
    0x45: v45 = EQ v40(0xf851a440), v12
    0x94f: v94f(0x960) = CONST 
    0x950: JUMPI v94f(0x960), v45

    Begin block 0x4a
    prev=[0x3f], succ=[0x5d]
    =================================
    0x4a: v4a(0x5d) = CONST 
    0x4d: JUMP v4a(0x5d)

    Begin block 0x5d
    prev=[0x4a, 0x4e], succ=[0xf80x0]
    =================================
    0x5e: v5e(0x6df) = CONST 
    0x61: v61(0xf8) = CONST 
    0x64: JUMP v61(0xf8)

    Begin block 0xf80x0
    prev=[0x5d], succ=[0x1000x0]
    =================================
    0xf90x0: v0f9(0x100) = CONST 
    0xfc0x0: v0fc(0x2fe) = CONST 
    0xff0x0: CALLPRIVATE v0fc(0x2fe), v0f9(0x100)

    Begin block 0x1000x0
    prev=[0xf80x0], succ=[0x33fB0x1000x0]
    =================================
    0x1010x0: v0101(0x7bb) = CONST 
    0x1040x0: v0104(0x10b) = CONST 
    0x1070x0: v0107(0x33f) = CONST 
    0x10a0x0: JUMP v0107(0x33f)

    Begin block 0x33fB0x1000x0
    prev=[0x1000x0], succ=[0x10b0x0]
    =================================
    0x340S0x1000x0: v340V1000(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x0: v361V1000 = SLOAD v340V1000(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x0: JUMP v0104(0x10b)

    Begin block 0x10b0x0
    prev=[0x33fB0x1000x0], succ=[0x3640x0]
    =================================
    0x10c0x0: v010c(0x364) = CONST 
    0x10f0x0: JUMP v010c(0x364)

    Begin block 0x3640x0
    prev=[0x10b0x0], succ=[0x37f0x0, 0x3830x0]
    =================================
    0x3650x0: v0365 = CALLDATASIZE 
    0x3660x0: v0366(0x0) = CONST 
    0x3690x0: CALLDATACOPY v0366(0x0), v0366(0x0), v0365
    0x36a0x0: v036a(0x0) = CONST 
    0x36d0x0: v036d = CALLDATASIZE 
    0x36e0x0: v036e(0x0) = CONST 
    0x3710x0: v0371 = GAS 
    0x3720x0: v0372 = DELEGATECALL v0371, v361V1000, v036e(0x0), v036d, v036a(0x0), v036a(0x0)
    0x3730x0: v0373 = RETURNDATASIZE 
    0x3740x0: v0374(0x0) = CONST 
    0x3770x0: RETURNDATACOPY v0374(0x0), v0374(0x0), v0373
    0x37a0x0: v037a = ISZERO v0372
    0x37b0x0: v037b(0x383) = CONST 
    0x37e0x0: JUMPI v037b(0x383), v037a

    Begin block 0x37f0x0
    prev=[0x3640x0], succ=[]
    =================================
    0x37f0x0: v037f = RETURNDATASIZE 
    0x3800x0: v0380(0x0) = CONST 
    0x3820x0: RETURN v0380(0x0), v037f

    Begin block 0x3830x0
    prev=[0x3640x0], succ=[]
    =================================
    0x3840x0: v0384 = RETURNDATASIZE 
    0x3850x0: v0385(0x0) = CONST 
    0x3870x0: REVERT v0385(0x0), v0384

    Begin block 0x960
    prev=[0x3f], succ=[]
    =================================
    0x961: v961(0xe3) = CONST 
    0x962: CALLPRIVATE v961(0xe3)

    Begin block 0x95d
    prev=[0x34], succ=[]
    =================================
    0x95e: v95e(0xc3) = CONST 
    0x95f: CALLPRIVATE v95e(0xc3)

    Begin block 0x4e
    prev=[0x0], succ=[0x951, 0x5d]
    =================================
    0x4f: v4f = CALLDATASIZE 
    0x50: v50(0x5d) = CONST 
    0x53: JUMPI v50(0x5d), v4f

    Begin block 0x951
    prev=[0x4e], succ=[]
    =================================
    0x951: v951(0x953) = CONST 
    0x952: CALLPRIVATE v951(0x953)

}

function 0x1f3(0x1f3arg0x0) private {
    Begin block 0x1f3
    prev=[], succ=[0x388B0x1f3]
    =================================
    0x1f4: v1f4(0x0) = CONST 
    0x1f6: v1f6(0x1fd) = CONST 
    0x1f9: v1f9(0x388) = CONST 
    0x1fc: JUMP v1f9(0x388)

    Begin block 0x388B0x1f3
    prev=[0x1f3], succ=[0x1fd]
    =================================
    0x389S0x1f3: v389V1f3(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x1f3: v3aaV1f3 = SLOAD v389V1f3(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x1f3: JUMP v1f6(0x1fd)

    Begin block 0x1fd
    prev=[0x388B0x1f3], succ=[0x217, 0x2250x1f3]
    =================================
    0x1fe: v1fe(0x1) = CONST 
    0x200: v200(0x1) = CONST 
    0x202: v202(0xa0) = CONST 
    0x204: v204(0x10000000000000000000000000000000000000000) = SHL v202(0xa0), v200(0x1)
    0x205: v205(0xffffffffffffffffffffffffffffffffffffffff) = SUB v204(0x10000000000000000000000000000000000000000), v1fe(0x1)
    0x206: v206 = AND v205(0xffffffffffffffffffffffffffffffffffffffff), v3aaV1f3
    0x207: v207 = CALLER 
    0x208: v208(0x1) = CONST 
    0x20a: v20a(0x1) = CONST 
    0x20c: v20c(0xa0) = CONST 
    0x20e: v20e(0x10000000000000000000000000000000000000000) = SHL v20c(0xa0), v20a(0x1)
    0x20f: v20f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v20e(0x10000000000000000000000000000000000000000), v208(0x1)
    0x210: v210 = AND v20f(0xffffffffffffffffffffffffffffffffffffffff), v207
    0x211: v211 = EQ v210, v206
    0x212: v212 = ISZERO v211
    0x213: v213(0x225) = CONST 
    0x216: JUMPI v213(0x225), v212

    Begin block 0x217
    prev=[0x1fd], succ=[0x33fB0x217]
    =================================
    0x217: v217(0x21e) = CONST 
    0x21a: v21a(0x33f) = CONST 
    0x21d: JUMP v21a(0x33f)

    Begin block 0x33fB0x217
    prev=[0x217], succ=[0x21e0x1f3]
    =================================
    0x340S0x217: v340V217(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x217: v361V217 = SLOAD v340V217(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x217: JUMP v217(0x21e)

    Begin block 0x21e0x1f3
    prev=[0x33fB0x217], succ=[0x8680x1f3]
    =================================
    0x2210x1f3: v1f3221(0x868) = CONST 
    0x2240x1f3: JUMP v1f3221(0x868)

    Begin block 0x8680x1f3
    prev=[0x21e0x1f3], succ=[]
    =================================
    0x86a0x1f3: RETURNPRIVATE v1f3arg0, v361V217

    Begin block 0x2250x1f3
    prev=[0x1fd], succ=[0xf80x1f3]
    =================================
    0x2260x1f3: v1f3226(0x88a) = CONST 
    0x2290x1f3: v1f3229(0xf8) = CONST 
    0x22c0x1f3: JUMP v1f3229(0xf8)

    Begin block 0xf80x1f3
    prev=[0x2250x1f3], succ=[0x1000x1f3]
    =================================
    0xf90x1f3: v1f3f9(0x100) = CONST 
    0xfc0x1f3: v1f3fc(0x2fe) = CONST 
    0xff0x1f3: CALLPRIVATE v1f3fc(0x2fe), v1f3f9(0x100)

    Begin block 0x1000x1f3
    prev=[0xf80x1f3], succ=[0x33fB0x1000x1f3]
    =================================
    0x1010x1f3: v1f3101(0x7bb) = CONST 
    0x1040x1f3: v1f3104(0x10b) = CONST 
    0x1070x1f3: v1f3107(0x33f) = CONST 
    0x10a0x1f3: JUMP v1f3107(0x33f)

    Begin block 0x33fB0x1000x1f3
    prev=[0x1000x1f3], succ=[0x10b0x1f3]
    =================================
    0x340S0x1000x1f3: v340V1001f3(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x1f3: v361V1001f3 = SLOAD v340V1001f3(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x1f3: JUMP v1f3104(0x10b)

    Begin block 0x10b0x1f3
    prev=[0x33fB0x1000x1f3], succ=[0x3640x1f3]
    =================================
    0x10c0x1f3: v1f310c(0x364) = CONST 
    0x10f0x1f3: JUMP v1f310c(0x364)

    Begin block 0x3640x1f3
    prev=[0x10b0x1f3], succ=[0x37f0x1f3, 0x3830x1f3]
    =================================
    0x3650x1f3: v1f3365 = CALLDATASIZE 
    0x3660x1f3: v1f3366(0x0) = CONST 
    0x3690x1f3: CALLDATACOPY v1f3366(0x0), v1f3366(0x0), v1f3365
    0x36a0x1f3: v1f336a(0x0) = CONST 
    0x36d0x1f3: v1f336d = CALLDATASIZE 
    0x36e0x1f3: v1f336e(0x0) = CONST 
    0x3710x1f3: v1f3371 = GAS 
    0x3720x1f3: v1f3372 = DELEGATECALL v1f3371, v361V1001f3, v1f336e(0x0), v1f336d, v1f336a(0x0), v1f336a(0x0)
    0x3730x1f3: v1f3373 = RETURNDATASIZE 
    0x3740x1f3: v1f3374(0x0) = CONST 
    0x3770x1f3: RETURNDATACOPY v1f3374(0x0), v1f3374(0x0), v1f3373
    0x37a0x1f3: v1f337a = ISZERO v1f3372
    0x37b0x1f3: v1f337b(0x383) = CONST 
    0x37e0x1f3: JUMPI v1f337b(0x383), v1f337a

    Begin block 0x37f0x1f3
    prev=[0x3640x1f3], succ=[]
    =================================
    0x37f0x1f3: v1f337f = RETURNDATASIZE 
    0x3800x1f3: v1f3380(0x0) = CONST 
    0x3820x1f3: RETURN v1f3380(0x0), v1f337f

    Begin block 0x3830x1f3
    prev=[0x3640x1f3], succ=[]
    =================================
    0x3840x1f3: v1f3384 = RETURNDATASIZE 
    0x3850x1f3: v1f3385(0x0) = CONST 
    0x3870x1f3: REVERT v1f3385(0x0), v1f3384

}

function 0x2c9(0x2c9arg0x0) private {
    Begin block 0x2c9
    prev=[], succ=[0x388B0x2c9]
    =================================
    0x2ca: v2ca(0x0) = CONST 
    0x2cc: v2cc(0x2d3) = CONST 
    0x2cf: v2cf(0x388) = CONST 
    0x2d2: JUMP v2cf(0x388)

    Begin block 0x388B0x2c9
    prev=[0x2c9], succ=[0x2d3]
    =================================
    0x389S0x2c9: v389V2c9(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x2c9: v3aaV2c9 = SLOAD v389V2c9(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x2c9: JUMP v2cc(0x2d3)

    Begin block 0x2d3
    prev=[0x388B0x2c9], succ=[0x2ed, 0x2250x2c9]
    =================================
    0x2d4: v2d4(0x1) = CONST 
    0x2d6: v2d6(0x1) = CONST 
    0x2d8: v2d8(0xa0) = CONST 
    0x2da: v2da(0x10000000000000000000000000000000000000000) = SHL v2d8(0xa0), v2d6(0x1)
    0x2db: v2db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2da(0x10000000000000000000000000000000000000000), v2d4(0x1)
    0x2dc: v2dc = AND v2db(0xffffffffffffffffffffffffffffffffffffffff), v3aaV2c9
    0x2dd: v2dd = CALLER 
    0x2de: v2de(0x1) = CONST 
    0x2e0: v2e0(0x1) = CONST 
    0x2e2: v2e2(0xa0) = CONST 
    0x2e4: v2e4(0x10000000000000000000000000000000000000000) = SHL v2e2(0xa0), v2e0(0x1)
    0x2e5: v2e5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2e4(0x10000000000000000000000000000000000000000), v2de(0x1)
    0x2e6: v2e6 = AND v2e5(0xffffffffffffffffffffffffffffffffffffffff), v2dd
    0x2e7: v2e7 = EQ v2e6, v2dc
    0x2e8: v2e8 = ISZERO v2e7
    0x2e9: v2e9(0x225) = CONST 
    0x2ec: JUMPI v2e9(0x225), v2e8

    Begin block 0x2ed
    prev=[0x2d3], succ=[0x388B0x2ed]
    =================================
    0x2ed: v2ed(0x21e) = CONST 
    0x2f0: v2f0(0x388) = CONST 
    0x2f3: JUMP v2f0(0x388)

    Begin block 0x388B0x2ed
    prev=[0x2ed], succ=[0x21e0x2c9]
    =================================
    0x389S0x2ed: v389V2ed(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x2ed: v3aaV2ed = SLOAD v389V2ed(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x2ed: JUMP v2ed(0x21e)

    Begin block 0x21e0x2c9
    prev=[0x388B0x2ed], succ=[0x8680x2c9]
    =================================
    0x2210x2c9: v2c9221(0x868) = CONST 
    0x2240x2c9: JUMP v2c9221(0x868)

    Begin block 0x8680x2c9
    prev=[0x21e0x2c9], succ=[]
    =================================
    0x86a0x2c9: RETURNPRIVATE v2c9arg0, v3aaV2ed

    Begin block 0x2250x2c9
    prev=[0x2d3], succ=[0xf80x2c9]
    =================================
    0x2260x2c9: v2c9226(0x88a) = CONST 
    0x2290x2c9: v2c9229(0xf8) = CONST 
    0x22c0x2c9: JUMP v2c9229(0xf8)

    Begin block 0xf80x2c9
    prev=[0x2250x2c9], succ=[0x1000x2c9]
    =================================
    0xf90x2c9: v2c9f9(0x100) = CONST 
    0xfc0x2c9: v2c9fc(0x2fe) = CONST 
    0xff0x2c9: CALLPRIVATE v2c9fc(0x2fe), v2c9f9(0x100)

    Begin block 0x1000x2c9
    prev=[0xf80x2c9], succ=[0x33fB0x1000x2c9]
    =================================
    0x1010x2c9: v2c9101(0x7bb) = CONST 
    0x1040x2c9: v2c9104(0x10b) = CONST 
    0x1070x2c9: v2c9107(0x33f) = CONST 
    0x10a0x2c9: JUMP v2c9107(0x33f)

    Begin block 0x33fB0x1000x2c9
    prev=[0x1000x2c9], succ=[0x10b0x2c9]
    =================================
    0x340S0x1000x2c9: v340V1002c9(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x2c9: v361V1002c9 = SLOAD v340V1002c9(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x2c9: JUMP v2c9104(0x10b)

    Begin block 0x10b0x2c9
    prev=[0x33fB0x1000x2c9], succ=[0x3640x2c9]
    =================================
    0x10c0x2c9: v2c910c(0x364) = CONST 
    0x10f0x2c9: JUMP v2c910c(0x364)

    Begin block 0x3640x2c9
    prev=[0x10b0x2c9], succ=[0x37f0x2c9, 0x3830x2c9]
    =================================
    0x3650x2c9: v2c9365 = CALLDATASIZE 
    0x3660x2c9: v2c9366(0x0) = CONST 
    0x3690x2c9: CALLDATACOPY v2c9366(0x0), v2c9366(0x0), v2c9365
    0x36a0x2c9: v2c936a(0x0) = CONST 
    0x36d0x2c9: v2c936d = CALLDATASIZE 
    0x36e0x2c9: v2c936e(0x0) = CONST 
    0x3710x2c9: v2c9371 = GAS 
    0x3720x2c9: v2c9372 = DELEGATECALL v2c9371, v361V1002c9, v2c936e(0x0), v2c936d, v2c936a(0x0), v2c936a(0x0)
    0x3730x2c9: v2c9373 = RETURNDATASIZE 
    0x3740x2c9: v2c9374(0x0) = CONST 
    0x3770x2c9: RETURNDATACOPY v2c9374(0x0), v2c9374(0x0), v2c9373
    0x37a0x2c9: v2c937a = ISZERO v2c9372
    0x37b0x2c9: v2c937b(0x383) = CONST 
    0x37e0x2c9: JUMPI v2c937b(0x383), v2c937a

    Begin block 0x37f0x2c9
    prev=[0x3640x2c9], succ=[]
    =================================
    0x37f0x2c9: v2c937f = RETURNDATASIZE 
    0x3800x2c9: v2c9380(0x0) = CONST 
    0x3820x2c9: RETURN v2c9380(0x0), v2c937f

    Begin block 0x3830x2c9
    prev=[0x3640x2c9], succ=[]
    =================================
    0x3840x2c9: v2c9384 = RETURNDATASIZE 
    0x3850x2c9: v2c9385(0x0) = CONST 
    0x3870x2c9: REVERT v2c9385(0x0), v2c9384

}

function 0x2fe(0x2fearg0x0) private {
    Begin block 0x2fe
    prev=[], succ=[0x388B0x2fe]
    =================================
    0x2ff: v2ff(0x306) = CONST 
    0x302: v302(0x388) = CONST 
    0x305: JUMP v302(0x388)

    Begin block 0x388B0x2fe
    prev=[0x2fe], succ=[0x306]
    =================================
    0x389S0x2fe: v389V2fe(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x2fe: v3aaV2fe = SLOAD v389V2fe(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x2fe: JUMP v2ff(0x306)

    Begin block 0x306
    prev=[0x388B0x2fe], succ=[0x320, 0x337]
    =================================
    0x307: v307(0x1) = CONST 
    0x309: v309(0x1) = CONST 
    0x30b: v30b(0xa0) = CONST 
    0x30d: v30d(0x10000000000000000000000000000000000000000) = SHL v30b(0xa0), v309(0x1)
    0x30e: v30e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v30d(0x10000000000000000000000000000000000000000), v307(0x1)
    0x30f: v30f = AND v30e(0xffffffffffffffffffffffffffffffffffffffff), v3aaV2fe
    0x310: v310 = CALLER 
    0x311: v311(0x1) = CONST 
    0x313: v313(0x1) = CONST 
    0x315: v315(0xa0) = CONST 
    0x317: v317(0x10000000000000000000000000000000000000000) = SHL v315(0xa0), v313(0x1)
    0x318: v318(0xffffffffffffffffffffffffffffffffffffffff) = SUB v317(0x10000000000000000000000000000000000000000), v311(0x1)
    0x319: v319 = AND v318(0xffffffffffffffffffffffffffffffffffffffff), v310
    0x31a: v31a = EQ v319, v30f
    0x31b: v31b = ISZERO v31a
    0x31c: v31c(0x337) = CONST 
    0x31f: JUMPI v31c(0x337), v31b

    Begin block 0x320
    prev=[0x306], succ=[0x601]
    =================================
    0x320: v320(0x40) = CONST 
    0x322: v322 = MLOAD v320(0x40)
    0x323: v323(0x461bcd) = CONST 
    0x327: v327(0xe5) = CONST 
    0x329: v329(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v327(0xe5), v323(0x461bcd)
    0x32b: MSTORE v322, v329(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x32c: v32c(0x4) = CONST 
    0x32e: v32e = ADD v32c(0x4), v322
    0x32f: v32f(0x8d4) = CONST 
    0x333: v333(0x601) = CONST 
    0x336: JUMP v333(0x601)

    Begin block 0x601
    prev=[0x320], succ=[0x8d4]
    =================================
    0x602: v602(0x20) = CONST 
    0x606: MSTORE v32e, v602(0x20)
    0x607: v607(0x42) = CONST 
    0x60b: v60b = ADD v32e, v602(0x20)
    0x60c: MSTORE v60b, v607(0x42)
    0x60d: v60d(0x5472616e73706172656e745570677261646561626c6550726f78793a2061646d) = CONST 
    0x62e: v62e(0x40) = CONST 
    0x631: v631 = ADD v32e, v62e(0x40)
    0x632: MSTORE v631, v60d(0x5472616e73706172656e745570677261646561626c6550726f78793a2061646d)
    0x633: v633(0x696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267) = CONST 
    0x654: v654(0x60) = CONST 
    0x657: v657 = ADD v32e, v654(0x60)
    0x658: MSTORE v657, v633(0x696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267)
    0x659: v659(0x195d) = CONST 
    0x65c: v65c(0xf2) = CONST 
    0x65e: v65e(0x6574000000000000000000000000000000000000000000000000000000000000) = SHL v65c(0xf2), v659(0x195d)
    0x65f: v65f(0x80) = CONST 
    0x662: v662 = ADD v32e, v65f(0x80)
    0x663: MSTORE v662, v65e(0x6574000000000000000000000000000000000000000000000000000000000000)
    0x664: v664(0xa0) = CONST 
    0x666: v666 = ADD v664(0xa0), v32e
    0x668: JUMP v32f(0x8d4)

    Begin block 0x8d4
    prev=[0x601], succ=[]
    =================================
    0x8d5: v8d5(0x40) = CONST 
    0x8d7: v8d7 = MLOAD v8d5(0x40)
    0x8da: v8da(0xa4) = SUB v666, v8d7
    0x8dc: REVERT v8d7, v8da(0xa4)

    Begin block 0x337
    prev=[0x306], succ=[0x91dB0x337]
    =================================
    0x338: v338(0x8fc) = CONST 
    0x33b: v33b(0x91d) = CONST 
    0x33e: JUMP v33b(0x91d), v338(0x8fc)

    Begin block 0x91dB0x337
    prev=[0x337], succ=[0x8fc]
    =================================
    0x91eS0x337: JUMP v338(0x8fc)

    Begin block 0x8fc
    prev=[0x91dB0x337], succ=[]
    =================================
    0x8fd: RETURNPRIVATE v2fearg0

}

function 0x3ad(0x3adarg0x0, 0x3adarg0x1) private {
    Begin block 0x3ad
    prev=[], succ=[0x411]
    =================================
    0x3ae: v3ae(0x3b6) = CONST 
    0x3b2: v3b2(0x411) = CONST 
    0x3b5: JUMP v3b2(0x411)

    Begin block 0x411
    prev=[0x3ad], succ=[0x2f4B0x411]
    =================================
    0x412: v412(0x41a) = CONST 
    0x416: v416(0x2f4) = CONST 
    0x419: JUMP v416(0x2f4)

    Begin block 0x2f4B0x411
    prev=[0x411], succ=[0x2f90x2f4B0x411]
    =================================
    0x2f6S0x411: v2f6V411 = EXTCODESIZE v3adarg0
    0x2f7S0x411: v2f7V411 = ISZERO v2f6V411
    0x2f8S0x411: v2f8V411 = ISZERO v2f7V411

    Begin block 0x2f90x2f4B0x411
    prev=[0x2f4B0x411], succ=[0x41a]
    =================================
    0x2fd0x2f4S0x411: JUMP v412(0x41a)

    Begin block 0x41a
    prev=[0x2f90x2f4B0x411], succ=[0x41f, 0x436]
    =================================
    0x41b: v41b(0x436) = CONST 
    0x41e: JUMPI v41b(0x436), v2f8V411

    Begin block 0x41f
    prev=[0x41a], succ=[0x5ab]
    =================================
    0x41f: v41f(0x40) = CONST 
    0x421: v421 = MLOAD v41f(0x40)
    0x422: v422(0x461bcd) = CONST 
    0x426: v426(0xe5) = CONST 
    0x428: v428(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v426(0xe5), v422(0x461bcd)
    0x42a: MSTORE v421, v428(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x42b: v42b(0x4) = CONST 
    0x42d: v42d = ADD v42b(0x4), v421
    0x42e: v42e(0x93e) = CONST 
    0x432: v432(0x5ab) = CONST 
    0x435: JUMP v432(0x5ab)

    Begin block 0x5ab
    prev=[0x41f], succ=[0x93e]
    =================================
    0x5ac: v5ac(0x20) = CONST 
    0x5b0: MSTORE v42d, v5ac(0x20)
    0x5b1: v5b1(0x36) = CONST 
    0x5b5: v5b5 = ADD v42d, v5ac(0x20)
    0x5b6: MSTORE v5b5, v5b1(0x36)
    0x5b7: v5b7(0x5570677261646561626c6550726f78793a206e657720696d706c656d656e7461) = CONST 
    0x5d8: v5d8(0x40) = CONST 
    0x5db: v5db = ADD v42d, v5d8(0x40)
    0x5dc: MSTORE v5db, v5b7(0x5570677261646561626c6550726f78793a206e657720696d706c656d656e7461)
    0x5dd: v5dd(0x1d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd) = CONST 
    0x5f4: v5f4(0x52) = CONST 
    0x5f6: v5f6(0x74696f6e206973206e6f74206120636f6e747261637400000000000000000000) = SHL v5f4(0x52), v5dd(0x1d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd)
    0x5f7: v5f7(0x60) = CONST 
    0x5fa: v5fa = ADD v42d, v5f7(0x60)
    0x5fb: MSTORE v5fa, v5f6(0x74696f6e206973206e6f74206120636f6e747261637400000000000000000000)
    0x5fc: v5fc(0x80) = CONST 
    0x5fe: v5fe = ADD v5fc(0x80), v42d
    0x600: JUMP v42e(0x93e)

    Begin block 0x93e
    prev=[0x5ab], succ=[]
    =================================
    0x93f: v93f(0x40) = CONST 
    0x941: v941 = MLOAD v93f(0x40)
    0x944: v944(0x84) = SUB v5fe, v941
    0x946: REVERT v941, v944(0x84)

    Begin block 0x436
    prev=[0x41a], succ=[0x3b6]
    =================================
    0x437: v437(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x458: SSTORE v437(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), v3adarg0
    0x459: JUMP v3ae(0x3b6)

    Begin block 0x3b6
    prev=[0x436], succ=[]
    =================================
    0x3b7: v3b7(0x40) = CONST 
    0x3b9: v3b9 = MLOAD v3b7(0x40)
    0x3ba: v3ba(0x1) = CONST 
    0x3bc: v3bc(0x1) = CONST 
    0x3be: v3be(0xa0) = CONST 
    0x3c0: v3c0(0x10000000000000000000000000000000000000000) = SHL v3be(0xa0), v3bc(0x1)
    0x3c1: v3c1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c0(0x10000000000000000000000000000000000000000), v3ba(0x1)
    0x3c3: v3c3 = AND v3adarg0, v3c1(0xffffffffffffffffffffffffffffffffffffffff)
    0x3c5: v3c5(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b) = CONST 
    0x3e7: v3e7(0x0) = CONST 
    0x3ea: LOG2 v3b9, v3e7(0x0), v3c5(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b), v3c3
    0x3ec: RETURNPRIVATE v3adarg1

}

function upgradeTo(address)() public {
    Begin block 0x65
    prev=[], succ=[0x6d, 0x71]
    =================================
    0x66: v66 = CALLVALUE 
    0x68: v68 = ISZERO v66
    0x69: v69(0x71) = CONST 
    0x6c: JUMPI v69(0x71), v68

    Begin block 0x6d
    prev=[0x65], succ=[]
    =================================
    0x6d: v6d(0x0) = CONST 
    0x70: REVERT v6d(0x0), v6d(0x0)

    Begin block 0x71
    prev=[0x65], succ=[0x471B0x71]
    =================================
    0x73: v73(0x700) = CONST 
    0x76: v76(0x80) = CONST 
    0x79: v79 = CALLDATASIZE 
    0x7a: v7a(0x4) = CONST 
    0x7c: v7c(0x471) = CONST 
    0x7f: JUMP v7c(0x471)

    Begin block 0x471B0x71
    prev=[0x71], succ=[0x482B0x71, 0x47fB0x71]
    =================================
    0x472S0x71: v472V71(0x0) = CONST 
    0x474S0x71: v474V71(0x20) = CONST 
    0x478S0x71: v478V71 = SUB v79, v7a(0x4)
    0x479S0x71: v479V71 = SLT v478V71, v474V71(0x20)
    0x47aS0x71: v47aV71 = ISZERO v479V71
    0x47bS0x71: v47bV71(0x482) = CONST 
    0x47eS0x71: JUMPI v47bV71(0x482), v47aV71

    Begin block 0x482B0x71
    prev=[0x471B0x71], succ=[0x45aB0x482B0x71]
    =================================
    0x483S0x71: v483V71(0x48b) = CONST 
    0x487S0x71: v487V71(0x45a) = CONST 
    0x48aS0x71: JUMP v487V71(0x45a)

    Begin block 0x45aB0x482B0x71
    prev=[0x482B0x71], succ=[0x46dB0x482B0x71, 0x2f90x45aB0x482B0x71]
    =================================
    0x45cS0x482S0x71: v45cV482V71 = CALLDATALOAD v7a(0x4)
    0x45dS0x482S0x71: v45dV482V71(0x1) = CONST 
    0x45fS0x482S0x71: v45fV482V71(0x1) = CONST 
    0x461S0x482S0x71: v461V482V71(0xa0) = CONST 
    0x463S0x482S0x71: v463V482V71(0x10000000000000000000000000000000000000000) = SHL v461V482V71(0xa0), v45fV482V71(0x1)
    0x464S0x482S0x71: v464V482V71(0xffffffffffffffffffffffffffffffffffffffff) = SUB v463V482V71(0x10000000000000000000000000000000000000000), v45dV482V71(0x1)
    0x466S0x482S0x71: v466V482V71 = AND v45cV482V71, v464V482V71(0xffffffffffffffffffffffffffffffffffffffff)
    0x468S0x482S0x71: v468V482V71 = EQ v45cV482V71, v466V482V71
    0x469S0x482S0x71: v469V482V71(0x2f9) = CONST 
    0x46cS0x482S0x71: JUMPI v469V482V71(0x2f9), v468V482V71

    Begin block 0x46dB0x482B0x71
    prev=[0x45aB0x482B0x71], succ=[]
    =================================
    0x46dS0x482S0x71: v46dV482V71(0x0) = CONST 
    0x470S0x482S0x71: REVERT v46dV482V71(0x0), v46dV482V71(0x0)

    Begin block 0x2f90x45aB0x482B0x71
    prev=[0x45aB0x482B0x71], succ=[0x48bB0x71]
    =================================
    0x2fd0x45aS0x482S0x71: JUMP v483V71(0x48b)

    Begin block 0x48bB0x71
    prev=[0x2f90x45aB0x482B0x71], succ=[0x80]
    =================================
    0x491S0x71: JUMP v76(0x80)

    Begin block 0x80
    prev=[0x48bB0x71], succ=[0x112B0x80]
    =================================
    0x81: v81(0x112) = CONST 
    0x84: JUMP v81(0x112), v45cV482V71, v73(0x700)

    Begin block 0x112B0x80
    prev=[0x80], succ=[0x388B0x112B0x80]
    =================================
    0x113S0x80: v113V80(0x11a) = CONST 
    0x116S0x80: v116V80(0x388) = CONST 
    0x119S0x80: JUMP v116V80(0x388)

    Begin block 0x388B0x112B0x80
    prev=[0x112B0x80], succ=[0x11aB0x80]
    =================================
    0x389S0x112S0x80: v389V112V80(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x112S0x80: v3aaV112V80 = SLOAD v389V112V80(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x112S0x80: JUMP v113V80(0x11a)

    Begin block 0x11aB0x80
    prev=[0x388B0x112B0x80], succ=[0x134B0x80, 0x1410x112B0x80]
    =================================
    0x11bS0x80: v11bV80(0x1) = CONST 
    0x11dS0x80: v11dV80(0x1) = CONST 
    0x11fS0x80: v11fV80(0xa0) = CONST 
    0x121S0x80: v121V80(0x10000000000000000000000000000000000000000) = SHL v11fV80(0xa0), v11dV80(0x1)
    0x122S0x80: v122V80(0xffffffffffffffffffffffffffffffffffffffff) = SUB v121V80(0x10000000000000000000000000000000000000000), v11bV80(0x1)
    0x123S0x80: v123V80 = AND v122V80(0xffffffffffffffffffffffffffffffffffffffff), v3aaV112V80
    0x124S0x80: v124V80 = CALLER 
    0x125S0x80: v125V80(0x1) = CONST 
    0x127S0x80: v127V80(0x1) = CONST 
    0x129S0x80: v129V80(0xa0) = CONST 
    0x12bS0x80: v12bV80(0x10000000000000000000000000000000000000000) = SHL v129V80(0xa0), v127V80(0x1)
    0x12cS0x80: v12cV80(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12bV80(0x10000000000000000000000000000000000000000), v125V80(0x1)
    0x12dS0x80: v12dV80 = AND v12cV80(0xffffffffffffffffffffffffffffffffffffffff), v124V80
    0x12eS0x80: v12eV80 = EQ v12dV80, v123V80
    0x12fS0x80: v12fV80 = ISZERO v12eV80
    0x130S0x80: v130V80(0x141) = CONST 
    0x133S0x80: JUMPI v130V80(0x141), v12fV80

    Begin block 0x134B0x80
    prev=[0x11aB0x80], succ=[0x13c0x112B0x80]
    =================================
    0x134S0x80: v134V80(0x13c) = CONST 
    0x138S0x80: v138V80(0x3ad) = CONST 
    0x13bS0x80: CALLPRIVATE v138V80(0x3ad), v45cV482V71, v134V80(0x13c)

    Begin block 0x13c0x112B0x80
    prev=[0x134B0x80], succ=[0x7dc0x112B0x80]
    =================================
    0x13d0x112S0x80: v11213dV80(0x7dc) = CONST 
    0x1400x112S0x80: JUMP v11213dV80(0x7dc)

    Begin block 0x7dc0x112B0x80
    prev=[0x13c0x112B0x80], succ=[0x700]
    =================================
    0x7de0x112S0x80: JUMP v73(0x700)

    Begin block 0x700
    prev=[0x37f0x112B0x80, 0x7dc0x112B0x80], succ=[]
    =================================
    0x701: STOP 

    Begin block 0x1410x112B0x80
    prev=[0x11aB0x80], succ=[0xf80x112B0x80]
    =================================
    0x1420x112S0x80: v112142V80(0x7fe) = CONST 
    0x1450x112S0x80: v112145V80(0xf8) = CONST 
    0x1480x112S0x80: JUMP v112145V80(0xf8)

    Begin block 0xf80x112B0x80
    prev=[0x1410x112B0x80], succ=[0x1000x112B0x80]
    =================================
    0xf90x112S0x80: v112f9V80(0x100) = CONST 
    0xfc0x112S0x80: v112fcV80(0x2fe) = CONST 
    0xff0x112S0x80: CALLPRIVATE v112fcV80(0x2fe), v112f9V80(0x100)

    Begin block 0x1000x112B0x80
    prev=[0xf80x112B0x80], succ=[0x33fB0x1000x112B0x80]
    =================================
    0x1010x112S0x80: v112101V80(0x7bb) = CONST 
    0x1040x112S0x80: v112104V80(0x10b) = CONST 
    0x1070x112S0x80: v112107V80(0x33f) = CONST 
    0x10a0x112S0x80: JUMP v112107V80(0x33f)

    Begin block 0x33fB0x1000x112B0x80
    prev=[0x1000x112B0x80], succ=[0x10b0x112B0x80]
    =================================
    0x340S0x1000x112S0x80: v340V100112V80(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x112S0x80: v361V100112V80 = SLOAD v340V100112V80(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x112S0x80: JUMP v112104V80(0x10b)

    Begin block 0x10b0x112B0x80
    prev=[0x33fB0x1000x112B0x80], succ=[0x3640x112B0x80]
    =================================
    0x10c0x112S0x80: v11210cV80(0x364) = CONST 
    0x10f0x112S0x80: JUMP v11210cV80(0x364)

    Begin block 0x3640x112B0x80
    prev=[0x10b0x112B0x80], succ=[0x37f0x112B0x80, 0x3830x112B0x80]
    =================================
    0x3650x112S0x80: v112365V80 = CALLDATASIZE 
    0x3660x112S0x80: v112366V80(0x0) = CONST 
    0x3690x112S0x80: CALLDATACOPY v112366V80(0x0), v112366V80(0x0), v112365V80
    0x36a0x112S0x80: v11236aV80(0x0) = CONST 
    0x36d0x112S0x80: v11236dV80 = CALLDATASIZE 
    0x36e0x112S0x80: v11236eV80(0x0) = CONST 
    0x3710x112S0x80: v112371V80 = GAS 
    0x3720x112S0x80: v112372V80 = DELEGATECALL v112371V80, v361V100112V80, v11236eV80(0x0), v11236dV80, v11236aV80(0x0), v11236aV80(0x0)
    0x3730x112S0x80: v112373V80 = RETURNDATASIZE 
    0x3740x112S0x80: v112374V80(0x0) = CONST 
    0x3770x112S0x80: RETURNDATACOPY v112374V80(0x0), v112374V80(0x0), v112373V80
    0x37a0x112S0x80: v11237aV80 = ISZERO v112372V80
    0x37b0x112S0x80: v11237bV80(0x383) = CONST 
    0x37e0x112S0x80: JUMPI v11237bV80(0x383), v11237aV80

    Begin block 0x37f0x112B0x80
    prev=[0x3640x112B0x80], succ=[0x700]
    =================================
    0x37f0x112S0x80: v11237fV80 = RETURNDATASIZE 
    0x3800x112S0x80: v112380V80(0x0) = CONST 
    0x3820x112S0x80: RETURN v112380V80(0x0), v11237fV80

    Begin block 0x3830x112B0x80
    prev=[0x3640x112B0x80], succ=[]
    =================================
    0x3840x112S0x80: v112384V80 = RETURNDATASIZE 
    0x3850x112S0x80: v112385V80(0x0) = CONST 
    0x3870x112S0x80: REVERT v112385V80(0x0), v112384V80

    Begin block 0x47fB0x71
    prev=[0x471B0x71], succ=[]
    =================================
    0x481S0x71: REVERT v472V71(0x0), v472V71(0x0)

}

function upgradeToAndCall(address,bytes)() public {
    Begin block 0x85
    prev=[], succ=[0x492]
    =================================
    0x86: v86(0x721) = CONST 
    0x89: v89(0x93) = CONST 
    0x8c: v8c = CALLDATASIZE 
    0x8d: v8d(0x4) = CONST 
    0x8f: v8f(0x492) = CONST 
    0x92: JUMP v8f(0x492)

    Begin block 0x492
    prev=[0x85], succ=[0x4a6, 0x4a3]
    =================================
    0x493: v493(0x0) = CONST 
    0x496: v496(0x0) = CONST 
    0x498: v498(0x40) = CONST 
    0x49c: v49c = SUB v8c, v8d(0x4)
    0x49d: v49d = SLT v49c, v498(0x40)
    0x49e: v49e = ISZERO v49d
    0x49f: v49f(0x4a6) = CONST 
    0x4a2: JUMPI v49f(0x4a6), v49e

    Begin block 0x4a6
    prev=[0x492], succ=[0x45aB0x4a6]
    =================================
    0x4a7: v4a7(0x4af) = CONST 
    0x4ab: v4ab(0x45a) = CONST 
    0x4ae: JUMP v4ab(0x45a)

    Begin block 0x45aB0x4a6
    prev=[0x4a6], succ=[0x46dB0x4a6, 0x2f90x45aB0x4a6]
    =================================
    0x45cS0x4a6: v45cV4a6 = CALLDATALOAD v8d(0x4)
    0x45dS0x4a6: v45dV4a6(0x1) = CONST 
    0x45fS0x4a6: v45fV4a6(0x1) = CONST 
    0x461S0x4a6: v461V4a6(0xa0) = CONST 
    0x463S0x4a6: v463V4a6(0x10000000000000000000000000000000000000000) = SHL v461V4a6(0xa0), v45fV4a6(0x1)
    0x464S0x4a6: v464V4a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v463V4a6(0x10000000000000000000000000000000000000000), v45dV4a6(0x1)
    0x466S0x4a6: v466V4a6 = AND v45cV4a6, v464V4a6(0xffffffffffffffffffffffffffffffffffffffff)
    0x468S0x4a6: v468V4a6 = EQ v45cV4a6, v466V4a6
    0x469S0x4a6: v469V4a6(0x2f9) = CONST 
    0x46cS0x4a6: JUMPI v469V4a6(0x2f9), v468V4a6

    Begin block 0x46dB0x4a6
    prev=[0x45aB0x4a6], succ=[]
    =================================
    0x46dS0x4a6: v46dV4a6(0x0) = CONST 
    0x470S0x4a6: REVERT v46dV4a6(0x0), v46dV4a6(0x0)

    Begin block 0x2f90x45aB0x4a6
    prev=[0x45aB0x4a6], succ=[0x4af]
    =================================
    0x2fd0x45aS0x4a6: JUMP v4a7(0x4af)

    Begin block 0x4af
    prev=[0x2f90x45aB0x4a6], succ=[0x4cb, 0x4c8]
    =================================
    0x4b2: v4b2(0x20) = CONST 
    0x4b5: v4b5(0x24) = ADD v8d(0x4), v4b2(0x20)
    0x4b6: v4b6 = CALLDATALOAD v4b5(0x24)
    0x4b7: v4b7(0xffffffffffffffff) = CONST 
    0x4c2: v4c2 = GT v4b6, v4b7(0xffffffffffffffff)
    0x4c3: v4c3 = ISZERO v4c2
    0x4c4: v4c4(0x4cb) = CONST 
    0x4c7: JUMPI v4c4(0x4cb), v4c3

    Begin block 0x4cb
    prev=[0x4af], succ=[0x4de, 0x4db]
    =================================
    0x4ce: v4ce = ADD v8d(0x4), v4b6
    0x4d2: v4d2(0x1f) = CONST 
    0x4d5: v4d5 = ADD v4ce, v4d2(0x1f)
    0x4d6: v4d6 = SLT v4d5, v8c
    0x4d7: v4d7(0x4de) = CONST 
    0x4da: JUMPI v4d7(0x4de), v4d6

    Begin block 0x4de
    prev=[0x4cb], succ=[0x4ec, 0x4e9]
    =================================
    0x4e0: v4e0 = CALLDATALOAD v4ce
    0x4e3: v4e3 = GT v4e0, v4b7(0xffffffffffffffff)
    0x4e4: v4e4 = ISZERO v4e3
    0x4e5: v4e5(0x4ec) = CONST 
    0x4e8: JUMPI v4e5(0x4ec), v4e4

    Begin block 0x4ec
    prev=[0x4de], succ=[0x4fd, 0x4fa]
    =================================
    0x4ee: v4ee(0x20) = CONST 
    0x4f2: v4f2 = ADD v4ce, v4e0
    0x4f3: v4f3 = ADD v4f2, v4ee(0x20)
    0x4f4: v4f4 = GT v4f3, v8c
    0x4f5: v4f5 = ISZERO v4f4
    0x4f6: v4f6(0x4fd) = CONST 
    0x4f9: JUMPI v4f6(0x4fd), v4f5

    Begin block 0x4fd
    prev=[0x4ec], succ=[0x93]
    =================================
    0x4fe: v4fe(0x20) = CONST 
    0x501: v501 = ADD v4ce, v4fe(0x20)
    0x50f: JUMP v89(0x93)

    Begin block 0x93
    prev=[0x4fd], succ=[0x14cB0x93]
    =================================
    0x94: v94(0x14c) = CONST 
    0x97: JUMP v94(0x14c), v4e0, v501, v45cV4a6, v86(0x721)

    Begin block 0x14cB0x93
    prev=[0x93], succ=[0x388B0x14cB0x93]
    =================================
    0x14dS0x93: v14dV93(0x154) = CONST 
    0x150S0x93: v150V93(0x388) = CONST 
    0x153S0x93: JUMP v150V93(0x388)

    Begin block 0x388B0x14cB0x93
    prev=[0x14cB0x93], succ=[0x154B0x93]
    =================================
    0x389S0x14cS0x93: v389V14cV93(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x14cS0x93: v3aaV14cV93 = SLOAD v389V14cV93(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x14cS0x93: JUMP v14dV93(0x154)

    Begin block 0x154B0x93
    prev=[0x388B0x14cB0x93], succ=[0x16eB0x93, 0x1e6B0x93]
    =================================
    0x155S0x93: v155V93(0x1) = CONST 
    0x157S0x93: v157V93(0x1) = CONST 
    0x159S0x93: v159V93(0xa0) = CONST 
    0x15bS0x93: v15bV93(0x10000000000000000000000000000000000000000) = SHL v159V93(0xa0), v157V93(0x1)
    0x15cS0x93: v15cV93(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15bV93(0x10000000000000000000000000000000000000000), v155V93(0x1)
    0x15dS0x93: v15dV93 = AND v15cV93(0xffffffffffffffffffffffffffffffffffffffff), v3aaV14cV93
    0x15eS0x93: v15eV93 = CALLER 
    0x15fS0x93: v15fV93(0x1) = CONST 
    0x161S0x93: v161V93(0x1) = CONST 
    0x163S0x93: v163V93(0xa0) = CONST 
    0x165S0x93: v165V93(0x10000000000000000000000000000000000000000) = SHL v163V93(0xa0), v161V93(0x1)
    0x166S0x93: v166V93(0xffffffffffffffffffffffffffffffffffffffff) = SUB v165V93(0x10000000000000000000000000000000000000000), v15fV93(0x1)
    0x167S0x93: v167V93 = AND v166V93(0xffffffffffffffffffffffffffffffffffffffff), v15eV93
    0x168S0x93: v168V93 = EQ v167V93, v15dV93
    0x169S0x93: v169V93 = ISZERO v168V93
    0x16aS0x93: v16aV93(0x1e6) = CONST 
    0x16dS0x93: JUMPI v16aV93(0x1e6), v169V93

    Begin block 0x16eB0x93
    prev=[0x154B0x93], succ=[0x176B0x93]
    =================================
    0x16eS0x93: v16eV93(0x176) = CONST 
    0x172S0x93: v172V93(0x3ad) = CONST 
    0x175S0x93: CALLPRIVATE v172V93(0x3ad), v45cV4a6, v16eV93(0x176)

    Begin block 0x176B0x93
    prev=[0x16eB0x93], succ=[0x510B0x93]
    =================================
    0x177S0x93: v177V93(0x0) = CONST 
    0x17aS0x93: v17aV93(0x1) = CONST 
    0x17cS0x93: v17cV93(0x1) = CONST 
    0x17eS0x93: v17eV93(0xa0) = CONST 
    0x180S0x93: v180V93(0x10000000000000000000000000000000000000000) = SHL v17eV93(0xa0), v17cV93(0x1)
    0x181S0x93: v181V93(0xffffffffffffffffffffffffffffffffffffffff) = SUB v180V93(0x10000000000000000000000000000000000000000), v17aV93(0x1)
    0x182S0x93: v182V93 = AND v181V93(0xffffffffffffffffffffffffffffffffffffffff), v45cV4a6
    0x185S0x93: v185V93(0x40) = CONST 
    0x187S0x93: v187V93 = MLOAD v185V93(0x40)
    0x188S0x93: v188V93(0x192) = CONST 
    0x18eS0x93: v18eV93(0x510) = CONST 
    0x191S0x93: JUMP v18eV93(0x510)

    Begin block 0x510B0x93
    prev=[0x176B0x93], succ=[0x192B0x93]
    =================================
    0x511S0x93: v511V93(0x0) = CONST 
    0x516S0x93: CALLDATACOPY v187V93, v501, v4e0
    0x518S0x93: v518V93 = ADD v4e0, v187V93
    0x51bS0x93: MSTORE v518V93, v511V93(0x0)
    0x51fS0x93: JUMP v188V93(0x192)

    Begin block 0x192B0x93
    prev=[0x510B0x93], succ=[0x1acB0x93, 0x1cdB0x93]
    =================================
    0x193S0x93: v193V93(0x0) = CONST 
    0x195S0x93: v195V93(0x40) = CONST 
    0x197S0x93: v197V93 = MLOAD v195V93(0x40)
    0x19aS0x93: v19aV93 = SUB v518V93, v197V93
    0x19dS0x93: v19dV93 = GAS 
    0x19eS0x93: v19eV93 = DELEGATECALL v19dV93, v182V93, v197V93, v19aV93, v197V93, v193V93(0x0)
    0x1a2S0x93: v1a2V93 = RETURNDATASIZE 
    0x1a4S0x93: v1a4V93(0x0) = CONST 
    0x1a7S0x93: v1a7V93 = EQ v1a2V93, v1a4V93(0x0)
    0x1a8S0x93: v1a8V93(0x1cd) = CONST 
    0x1abS0x93: JUMPI v1a8V93(0x1cd), v1a7V93

    Begin block 0x1acB0x93
    prev=[0x192B0x93], succ=[0x1d2B0x93]
    =================================
    0x1acS0x93: v1acV93(0x40) = CONST 
    0x1aeS0x93: v1aeV93 = MLOAD v1acV93(0x40)
    0x1b1S0x93: v1b1V93(0x1f) = CONST 
    0x1b3S0x93: v1b3V93(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1b1V93(0x1f)
    0x1b4S0x93: v1b4V93(0x3f) = CONST 
    0x1b6S0x93: v1b6V93 = RETURNDATASIZE 
    0x1b7S0x93: v1b7V93 = ADD v1b6V93, v1b4V93(0x3f)
    0x1b8S0x93: v1b8V93 = AND v1b7V93, v1b3V93(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x1baS0x93: v1baV93 = ADD v1aeV93, v1b8V93
    0x1bbS0x93: v1bbV93(0x40) = CONST 
    0x1bdS0x93: MSTORE v1bbV93(0x40), v1baV93
    0x1beS0x93: v1beV93 = RETURNDATASIZE 
    0x1c0S0x93: MSTORE v1aeV93, v1beV93
    0x1c1S0x93: v1c1V93 = RETURNDATASIZE 
    0x1c2S0x93: v1c2V93(0x0) = CONST 
    0x1c4S0x93: v1c4V93(0x20) = CONST 
    0x1c7S0x93: v1c7V93 = ADD v1aeV93, v1c4V93(0x20)
    0x1c8S0x93: RETURNDATACOPY v1c7V93, v1c2V93(0x0), v1c1V93
    0x1c9S0x93: v1c9V93(0x1d2) = CONST 
    0x1ccS0x93: JUMP v1c9V93(0x1d2)

    Begin block 0x1d2B0x93
    prev=[0x1acB0x93, 0x1cdB0x93], succ=[0x1dcB0x93, 0x1e0B0x93]
    =================================
    0x1d8S0x93: v1d8V93(0x1e0) = CONST 
    0x1dbS0x93: JUMPI v1d8V93(0x1e0), v19eV93

    Begin block 0x1dcB0x93
    prev=[0x1d2B0x93], succ=[]
    =================================
    0x1dcS0x93: v1dcV93(0x0) = CONST 
    0x1dfS0x93: REVERT v1dcV93(0x0), v1dcV93(0x0)

    Begin block 0x1e0B0x93
    prev=[0x1d2B0x93], succ=[0x820B0x93]
    =================================
    0x1e2S0x93: v1e2V93(0x820) = CONST 
    0x1e5S0x93: JUMP v1e2V93(0x820)

    Begin block 0x820B0x93
    prev=[0x1e0B0x93], succ=[0x721]
    =================================
    0x824S0x93: JUMP v86(0x721)

    Begin block 0x721
    prev=[0x37f0x14cB0x93, 0x820B0x93], succ=[]
    =================================
    0x722: STOP 

    Begin block 0x1cdB0x93
    prev=[0x192B0x93], succ=[0x1d2B0x93]
    =================================
    0x1ceS0x93: v1ceV93(0x60) = CONST 

    Begin block 0x1e6B0x93
    prev=[0x154B0x93], succ=[0xf80x14cB0x93]
    =================================
    0x1e7S0x93: v1e7V93(0x844) = CONST 
    0x1eaS0x93: v1eaV93(0xf8) = CONST 
    0x1edS0x93: JUMP v1eaV93(0xf8)

    Begin block 0xf80x14cB0x93
    prev=[0x1e6B0x93], succ=[0x1000x14cB0x93]
    =================================
    0xf90x14cS0x93: v14cf9V93(0x100) = CONST 
    0xfc0x14cS0x93: v14cfcV93(0x2fe) = CONST 
    0xff0x14cS0x93: CALLPRIVATE v14cfcV93(0x2fe), v14cf9V93(0x100)

    Begin block 0x1000x14cB0x93
    prev=[0xf80x14cB0x93], succ=[0x33fB0x1000x14cB0x93]
    =================================
    0x1010x14cS0x93: v14c101V93(0x7bb) = CONST 
    0x1040x14cS0x93: v14c104V93(0x10b) = CONST 
    0x1070x14cS0x93: v14c107V93(0x33f) = CONST 
    0x10a0x14cS0x93: JUMP v14c107V93(0x33f)

    Begin block 0x33fB0x1000x14cB0x93
    prev=[0x1000x14cB0x93], succ=[0x10b0x14cB0x93]
    =================================
    0x340S0x1000x14cS0x93: v340V10014cV93(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x14cS0x93: v361V10014cV93 = SLOAD v340V10014cV93(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x14cS0x93: JUMP v14c104V93(0x10b)

    Begin block 0x10b0x14cB0x93
    prev=[0x33fB0x1000x14cB0x93], succ=[0x3640x14cB0x93]
    =================================
    0x10c0x14cS0x93: v14c10cV93(0x364) = CONST 
    0x10f0x14cS0x93: JUMP v14c10cV93(0x364)

    Begin block 0x3640x14cB0x93
    prev=[0x10b0x14cB0x93], succ=[0x37f0x14cB0x93, 0x3830x14cB0x93]
    =================================
    0x3650x14cS0x93: v14c365V93 = CALLDATASIZE 
    0x3660x14cS0x93: v14c366V93(0x0) = CONST 
    0x3690x14cS0x93: CALLDATACOPY v14c366V93(0x0), v14c366V93(0x0), v14c365V93
    0x36a0x14cS0x93: v14c36aV93(0x0) = CONST 
    0x36d0x14cS0x93: v14c36dV93 = CALLDATASIZE 
    0x36e0x14cS0x93: v14c36eV93(0x0) = CONST 
    0x3710x14cS0x93: v14c371V93 = GAS 
    0x3720x14cS0x93: v14c372V93 = DELEGATECALL v14c371V93, v361V10014cV93, v14c36eV93(0x0), v14c36dV93, v14c36aV93(0x0), v14c36aV93(0x0)
    0x3730x14cS0x93: v14c373V93 = RETURNDATASIZE 
    0x3740x14cS0x93: v14c374V93(0x0) = CONST 
    0x3770x14cS0x93: RETURNDATACOPY v14c374V93(0x0), v14c374V93(0x0), v14c373V93
    0x37a0x14cS0x93: v14c37aV93 = ISZERO v14c372V93
    0x37b0x14cS0x93: v14c37bV93(0x383) = CONST 
    0x37e0x14cS0x93: JUMPI v14c37bV93(0x383), v14c37aV93

    Begin block 0x37f0x14cB0x93
    prev=[0x3640x14cB0x93], succ=[0x721]
    =================================
    0x37f0x14cS0x93: v14c37fV93 = RETURNDATASIZE 
    0x3800x14cS0x93: v14c380V93(0x0) = CONST 
    0x3820x14cS0x93: RETURN v14c380V93(0x0), v14c37fV93

    Begin block 0x3830x14cB0x93
    prev=[0x3640x14cB0x93], succ=[]
    =================================
    0x3840x14cS0x93: v14c384V93 = RETURNDATASIZE 
    0x3850x14cS0x93: v14c385V93(0x0) = CONST 
    0x3870x14cS0x93: REVERT v14c385V93(0x0), v14c384V93

    Begin block 0x4fa
    prev=[0x4ec], succ=[]
    =================================
    0x4fc: REVERT v493(0x0), v493(0x0)

    Begin block 0x4e9
    prev=[0x4de], succ=[]
    =================================
    0x4eb: REVERT v493(0x0), v493(0x0)

    Begin block 0x4db
    prev=[0x4cb], succ=[]
    =================================
    0x4dd: REVERT v493(0x0), v493(0x0)

    Begin block 0x4c8
    prev=[0x4af], succ=[]
    =================================
    0x4ca: REVERT v493(0x0), v493(0x0)

    Begin block 0x4a3
    prev=[0x492], succ=[]
    =================================
    0x4a5: REVERT v493(0x0), v493(0x0)

}

function fallback()() public {
    Begin block 0x953
    prev=[], succ=[0xf80x953]
    =================================
    0x54: v54(0x6be) = CONST 
    0x57: v57(0xf8) = CONST 
    0x5a: JUMP v57(0xf8)

    Begin block 0xf80x953
    prev=[0x953], succ=[0x1000x953]
    =================================
    0xf90x953: v953f9(0x100) = CONST 
    0xfc0x953: v953fc(0x2fe) = CONST 
    0xff0x953: CALLPRIVATE v953fc(0x2fe), v953f9(0x100)

    Begin block 0x1000x953
    prev=[0xf80x953], succ=[0x33fB0x1000x953]
    =================================
    0x1010x953: v953101(0x7bb) = CONST 
    0x1040x953: v953104(0x10b) = CONST 
    0x1070x953: v953107(0x33f) = CONST 
    0x10a0x953: JUMP v953107(0x33f)

    Begin block 0x33fB0x1000x953
    prev=[0x1000x953], succ=[0x10b0x953]
    =================================
    0x340S0x1000x953: v340V100953(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x953: v361V100953 = SLOAD v340V100953(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x953: JUMP v953104(0x10b)

    Begin block 0x10b0x953
    prev=[0x33fB0x1000x953], succ=[0x3640x953]
    =================================
    0x10c0x953: v95310c(0x364) = CONST 
    0x10f0x953: JUMP v95310c(0x364)

    Begin block 0x3640x953
    prev=[0x10b0x953], succ=[0x37f0x953, 0x3830x953]
    =================================
    0x3650x953: v953365 = CALLDATASIZE 
    0x3660x953: v953366(0x0) = CONST 
    0x3690x953: CALLDATACOPY v953366(0x0), v953366(0x0), v953365
    0x36a0x953: v95336a(0x0) = CONST 
    0x36d0x953: v95336d = CALLDATASIZE 
    0x36e0x953: v95336e(0x0) = CONST 
    0x3710x953: v953371 = GAS 
    0x3720x953: v953372 = DELEGATECALL v953371, v361V100953, v95336e(0x0), v95336d, v95336a(0x0), v95336a(0x0)
    0x3730x953: v953373 = RETURNDATASIZE 
    0x3740x953: v953374(0x0) = CONST 
    0x3770x953: RETURNDATACOPY v953374(0x0), v953374(0x0), v953373
    0x37a0x953: v95337a = ISZERO v953372
    0x37b0x953: v95337b(0x383) = CONST 
    0x37e0x953: JUMPI v95337b(0x383), v95337a

    Begin block 0x37f0x953
    prev=[0x3640x953], succ=[]
    =================================
    0x37f0x953: v95337f = RETURNDATASIZE 
    0x3800x953: v953380(0x0) = CONST 
    0x3820x953: RETURN v953380(0x0), v95337f

    Begin block 0x3830x953
    prev=[0x3640x953], succ=[]
    =================================
    0x3840x953: v953384 = RETURNDATASIZE 
    0x3850x953: v953385(0x0) = CONST 
    0x3870x953: REVERT v953385(0x0), v953384

}

function implementation()() public {
    Begin block 0x98
    prev=[], succ=[0xa0, 0xa4]
    =================================
    0x99: v99 = CALLVALUE 
    0x9b: v9b = ISZERO v99
    0x9c: v9c(0xa4) = CONST 
    0x9f: JUMPI v9c(0xa4), v9b

    Begin block 0xa0
    prev=[0x98], succ=[]
    =================================
    0xa0: va0(0x0) = CONST 
    0xa3: REVERT va0(0x0), va0(0x0)

    Begin block 0xa4
    prev=[0x98], succ=[0x742]
    =================================
    0xa6: va6(0x742) = CONST 
    0xa9: va9(0x1f3) = CONST 
    0xac: vac_0 = CALLPRIVATE va9(0x1f3), va6(0x742)

    Begin block 0x742
    prev=[0xa4], succ=[0x520B0x742]
    =================================
    0x743: v743(0x40) = CONST 
    0x745: v745 = MLOAD v743(0x40)
    0x746: v746(0xba) = CONST 
    0x74b: v74b(0x520) = CONST 
    0x74e: JUMP v74b(0x520)

    Begin block 0x520B0x742
    prev=[0x742], succ=[0xba0x98]
    =================================
    0x521S0x742: v521V742(0x1) = CONST 
    0x523S0x742: v523V742(0x1) = CONST 
    0x525S0x742: v525V742(0xa0) = CONST 
    0x527S0x742: v527V742(0x10000000000000000000000000000000000000000) = SHL v525V742(0xa0), v523V742(0x1)
    0x528S0x742: v528V742(0xffffffffffffffffffffffffffffffffffffffff) = SUB v527V742(0x10000000000000000000000000000000000000000), v521V742(0x1)
    0x52cS0x742: v52cV742 = AND v528V742(0xffffffffffffffffffffffffffffffffffffffff), vac_0
    0x52eS0x742: MSTORE v745, v52cV742
    0x52fS0x742: v52fV742(0x20) = CONST 
    0x531S0x742: v531V742 = ADD v52fV742(0x20), v745
    0x533S0x742: JUMP v746(0xba)

    Begin block 0xba0x98
    prev=[0x520B0x742], succ=[]
    =================================
    0xbb0x98: v98bb(0x40) = CONST 
    0xbd0x98: v98bd = MLOAD v98bb(0x40)
    0xc00x98: v98c0(0x20) = SUB v531V742, v98bd
    0xc20x98: RETURN v98bd, v98c0(0x20)

}

function changeAdmin(address)() public {
    Begin block 0xc3
    prev=[], succ=[0xcb, 0xcf]
    =================================
    0xc4: vc4 = CALLVALUE 
    0xc6: vc6 = ISZERO vc4
    0xc7: vc7(0xcf) = CONST 
    0xca: JUMPI vc7(0xcf), vc6

    Begin block 0xcb
    prev=[0xc3], succ=[]
    =================================
    0xcb: vcb(0x0) = CONST 
    0xce: REVERT vcb(0x0), vcb(0x0)

    Begin block 0xcf
    prev=[0xc3], succ=[0x471B0xcf]
    =================================
    0xd1: vd1(0x76e) = CONST 
    0xd4: vd4(0xde) = CONST 
    0xd7: vd7 = CALLDATASIZE 
    0xd8: vd8(0x4) = CONST 
    0xda: vda(0x471) = CONST 
    0xdd: JUMP vda(0x471)

    Begin block 0x471B0xcf
    prev=[0xcf], succ=[0x482B0xcf, 0x47fB0xcf]
    =================================
    0x472S0xcf: v472Vcf(0x0) = CONST 
    0x474S0xcf: v474Vcf(0x20) = CONST 
    0x478S0xcf: v478Vcf = SUB vd7, vd8(0x4)
    0x479S0xcf: v479Vcf = SLT v478Vcf, v474Vcf(0x20)
    0x47aS0xcf: v47aVcf = ISZERO v479Vcf
    0x47bS0xcf: v47bVcf(0x482) = CONST 
    0x47eS0xcf: JUMPI v47bVcf(0x482), v47aVcf

    Begin block 0x482B0xcf
    prev=[0x471B0xcf], succ=[0x45aB0x482B0xcf]
    =================================
    0x483S0xcf: v483Vcf(0x48b) = CONST 
    0x487S0xcf: v487Vcf(0x45a) = CONST 
    0x48aS0xcf: JUMP v487Vcf(0x45a)

    Begin block 0x45aB0x482B0xcf
    prev=[0x482B0xcf], succ=[0x46dB0x482B0xcf, 0x2f90x45aB0x482B0xcf]
    =================================
    0x45cS0x482S0xcf: v45cV482Vcf = CALLDATALOAD vd8(0x4)
    0x45dS0x482S0xcf: v45dV482Vcf(0x1) = CONST 
    0x45fS0x482S0xcf: v45fV482Vcf(0x1) = CONST 
    0x461S0x482S0xcf: v461V482Vcf(0xa0) = CONST 
    0x463S0x482S0xcf: v463V482Vcf(0x10000000000000000000000000000000000000000) = SHL v461V482Vcf(0xa0), v45fV482Vcf(0x1)
    0x464S0x482S0xcf: v464V482Vcf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v463V482Vcf(0x10000000000000000000000000000000000000000), v45dV482Vcf(0x1)
    0x466S0x482S0xcf: v466V482Vcf = AND v45cV482Vcf, v464V482Vcf(0xffffffffffffffffffffffffffffffffffffffff)
    0x468S0x482S0xcf: v468V482Vcf = EQ v45cV482Vcf, v466V482Vcf
    0x469S0x482S0xcf: v469V482Vcf(0x2f9) = CONST 
    0x46cS0x482S0xcf: JUMPI v469V482Vcf(0x2f9), v468V482Vcf

    Begin block 0x46dB0x482B0xcf
    prev=[0x45aB0x482B0xcf], succ=[]
    =================================
    0x46dS0x482S0xcf: v46dV482Vcf(0x0) = CONST 
    0x470S0x482S0xcf: REVERT v46dV482Vcf(0x0), v46dV482Vcf(0x0)

    Begin block 0x2f90x45aB0x482B0xcf
    prev=[0x45aB0x482B0xcf], succ=[0x48bB0xcf]
    =================================
    0x2fd0x45aS0x482S0xcf: JUMP v483Vcf(0x48b)

    Begin block 0x48bB0xcf
    prev=[0x2f90x45aB0x482B0xcf], succ=[0xde]
    =================================
    0x491S0xcf: JUMP vd4(0xde)

    Begin block 0xde
    prev=[0x48bB0xcf], succ=[0x230B0xde]
    =================================
    0xdf: vdf(0x230) = CONST 
    0xe2: JUMP vdf(0x230), v45cV482Vcf, vd1(0x76e)

    Begin block 0x230B0xde
    prev=[0xde], succ=[0x388B0x230B0xde]
    =================================
    0x231S0xde: v231Vde(0x238) = CONST 
    0x234S0xde: v234Vde(0x388) = CONST 
    0x237S0xde: JUMP v234Vde(0x388)

    Begin block 0x388B0x230B0xde
    prev=[0x230B0xde], succ=[0x238B0xde]
    =================================
    0x389S0x230S0xde: v389V230Vde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x230S0xde: v3aaV230Vde = SLOAD v389V230Vde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x230S0xde: JUMP v231Vde(0x238)

    Begin block 0x238B0xde
    prev=[0x388B0x230B0xde], succ=[0x252B0xde, 0x1410x230B0xde]
    =================================
    0x239S0xde: v239Vde(0x1) = CONST 
    0x23bS0xde: v23bVde(0x1) = CONST 
    0x23dS0xde: v23dVde(0xa0) = CONST 
    0x23fS0xde: v23fVde(0x10000000000000000000000000000000000000000) = SHL v23dVde(0xa0), v23bVde(0x1)
    0x240S0xde: v240Vde(0xffffffffffffffffffffffffffffffffffffffff) = SUB v23fVde(0x10000000000000000000000000000000000000000), v239Vde(0x1)
    0x241S0xde: v241Vde = AND v240Vde(0xffffffffffffffffffffffffffffffffffffffff), v3aaV230Vde
    0x242S0xde: v242Vde = CALLER 
    0x243S0xde: v243Vde(0x1) = CONST 
    0x245S0xde: v245Vde(0x1) = CONST 
    0x247S0xde: v247Vde(0xa0) = CONST 
    0x249S0xde: v249Vde(0x10000000000000000000000000000000000000000) = SHL v247Vde(0xa0), v245Vde(0x1)
    0x24aS0xde: v24aVde(0xffffffffffffffffffffffffffffffffffffffff) = SUB v249Vde(0x10000000000000000000000000000000000000000), v243Vde(0x1)
    0x24bS0xde: v24bVde = AND v24aVde(0xffffffffffffffffffffffffffffffffffffffff), v242Vde
    0x24cS0xde: v24cVde = EQ v24bVde, v241Vde
    0x24dS0xde: v24dVde = ISZERO v24cVde
    0x24eS0xde: v24eVde(0x141) = CONST 
    0x251S0xde: JUMPI v24eVde(0x141), v24dVde

    Begin block 0x252B0xde
    prev=[0x238B0xde], succ=[0x260B0xde, 0x280B0xde]
    =================================
    0x252S0xde: v252Vde(0x1) = CONST 
    0x254S0xde: v254Vde(0x1) = CONST 
    0x256S0xde: v256Vde(0xa0) = CONST 
    0x258S0xde: v258Vde(0x10000000000000000000000000000000000000000) = SHL v256Vde(0xa0), v254Vde(0x1)
    0x259S0xde: v259Vde(0xffffffffffffffffffffffffffffffffffffffff) = SUB v258Vde(0x10000000000000000000000000000000000000000), v252Vde(0x1)
    0x25bS0xde: v25bVde = AND v45cV482Vcf, v259Vde(0xffffffffffffffffffffffffffffffffffffffff)
    0x25cS0xde: v25cVde(0x280) = CONST 
    0x25fS0xde: JUMPI v25cVde(0x280), v25bVde

    Begin block 0x260B0xde
    prev=[0x252B0xde], succ=[0x54eB0xde]
    =================================
    0x260S0xde: v260Vde(0x40) = CONST 
    0x262S0xde: v262Vde = MLOAD v260Vde(0x40)
    0x263S0xde: v263Vde(0x461bcd) = CONST 
    0x267S0xde: v267Vde(0xe5) = CONST 
    0x269S0xde: v269Vde(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v267Vde(0xe5), v263Vde(0x461bcd)
    0x26bS0xde: MSTORE v262Vde, v269Vde(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x26cS0xde: v26cVde(0x4) = CONST 
    0x26eS0xde: v26eVde = ADD v26cVde(0x4), v262Vde
    0x26fS0xde: v26fVde(0x8ac) = CONST 
    0x273S0xde: v273Vde(0x54e) = CONST 
    0x276S0xde: JUMP v273Vde(0x54e)

    Begin block 0x54eB0xde
    prev=[0x260B0xde], succ=[0x8acB0xde]
    =================================
    0x54fS0xde: v54fVde(0x20) = CONST 
    0x553S0xde: MSTORE v26eVde, v54fVde(0x20)
    0x554S0xde: v554Vde(0x3a) = CONST 
    0x558S0xde: v558Vde = ADD v26eVde, v54fVde(0x20)
    0x559S0xde: MSTORE v558Vde, v554Vde(0x3a)
    0x55aS0xde: v55aVde(0x5472616e73706172656e745570677261646561626c6550726f78793a206e6577) = CONST 
    0x57bS0xde: v57bVde(0x40) = CONST 
    0x57eS0xde: v57eVde = ADD v26eVde, v57bVde(0x40)
    0x57fS0xde: MSTORE v57eVde, v55aVde(0x5472616e73706172656e745570677261646561626c6550726f78793a206e6577)
    0x580S0xde: v580Vde(0x2061646d696e20697320746865207a65726f2061646472657373000000000000) = CONST 
    0x5a1S0xde: v5a1Vde(0x60) = CONST 
    0x5a4S0xde: v5a4Vde = ADD v26eVde, v5a1Vde(0x60)
    0x5a5S0xde: MSTORE v5a4Vde, v580Vde(0x2061646d696e20697320746865207a65726f2061646472657373000000000000)
    0x5a6S0xde: v5a6Vde(0x80) = CONST 
    0x5a8S0xde: v5a8Vde = ADD v5a6Vde(0x80), v26eVde
    0x5aaS0xde: JUMP v26fVde(0x8ac)

    Begin block 0x8acB0xde
    prev=[0x54eB0xde], succ=[]
    =================================
    0x8adS0xde: v8adVde(0x40) = CONST 
    0x8afS0xde: v8afVde = MLOAD v8adVde(0x40)
    0x8b2S0xde: v8b2Vde(0x84) = SUB v5a8Vde, v8afVde
    0x8b4S0xde: REVERT v8afVde, v8b2Vde(0x84)

    Begin block 0x280B0xde
    prev=[0x252B0xde], succ=[0x388B0x280B0xde]
    =================================
    0x281S0xde: v281Vde(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f) = CONST 
    0x2a2S0xde: v2a2Vde(0x2a9) = CONST 
    0x2a5S0xde: v2a5Vde(0x388) = CONST 
    0x2a8S0xde: JUMP v2a5Vde(0x388)

    Begin block 0x388B0x280B0xde
    prev=[0x280B0xde], succ=[0x2a9B0xde]
    =================================
    0x389S0x280S0xde: v389V280Vde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x3aaS0x280S0xde: v3aaV280Vde = SLOAD v389V280Vde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)
    0x3acS0x280S0xde: JUMP v2a2Vde(0x2a9)

    Begin block 0x2a9B0xde
    prev=[0x388B0x280B0xde], succ=[0x534B0xde]
    =================================
    0x2abS0xde: v2abVde(0x40) = CONST 
    0x2adS0xde: v2adVde = MLOAD v2abVde(0x40)
    0x2aeS0xde: v2aeVde(0x2b8) = CONST 
    0x2b4S0xde: v2b4Vde(0x534) = CONST 
    0x2b7S0xde: JUMP v2b4Vde(0x534)

    Begin block 0x534B0xde
    prev=[0x2a9B0xde], succ=[0x2b8B0xde]
    =================================
    0x535S0xde: v535Vde(0x1) = CONST 
    0x537S0xde: v537Vde(0x1) = CONST 
    0x539S0xde: v539Vde(0xa0) = CONST 
    0x53bS0xde: v53bVde(0x10000000000000000000000000000000000000000) = SHL v539Vde(0xa0), v537Vde(0x1)
    0x53cS0xde: v53cVde(0xffffffffffffffffffffffffffffffffffffffff) = SUB v53bVde(0x10000000000000000000000000000000000000000), v535Vde(0x1)
    0x53fS0xde: v53fVde = AND v53cVde(0xffffffffffffffffffffffffffffffffffffffff), v3aaV280Vde
    0x541S0xde: MSTORE v2adVde, v53fVde
    0x543S0xde: v543Vde = AND v53cVde(0xffffffffffffffffffffffffffffffffffffffff), v45cV482Vcf
    0x544S0xde: v544Vde(0x20) = CONST 
    0x547S0xde: v547Vde = ADD v2adVde, v544Vde(0x20)
    0x548S0xde: MSTORE v547Vde, v543Vde
    0x549S0xde: v549Vde(0x40) = CONST 
    0x54bS0xde: v54bVde = ADD v549Vde(0x40), v2adVde
    0x54dS0xde: JUMP v2aeVde(0x2b8)

    Begin block 0x2b8B0xde
    prev=[0x534B0xde], succ=[0x3edB0xde]
    =================================
    0x2b9S0xde: v2b9Vde(0x40) = CONST 
    0x2bbS0xde: v2bbVde = MLOAD v2b9Vde(0x40)
    0x2beS0xde: v2beVde(0x40) = SUB v54bVde, v2bbVde
    0x2c0S0xde: LOG1 v2bbVde, v2beVde(0x40), v281Vde(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)
    0x2c1S0xde: v2c1Vde(0x13c) = CONST 
    0x2c5S0xde: v2c5Vde(0x3ed) = CONST 
    0x2c8S0xde: JUMP v2c5Vde(0x3ed)

    Begin block 0x3edB0xde
    prev=[0x2b8B0xde], succ=[0x13c0x230B0xde]
    =================================
    0x3eeS0xde: v3eeVde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103) = CONST 
    0x40fS0xde: SSTORE v3eeVde(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), v45cV482Vcf
    0x410S0xde: JUMP v2c1Vde(0x13c)

    Begin block 0x13c0x230B0xde
    prev=[0x3edB0xde], succ=[0x7dc0x230B0xde]
    =================================
    0x13d0x230S0xde: v23013dVde(0x7dc) = CONST 
    0x1400x230S0xde: JUMP v23013dVde(0x7dc)

    Begin block 0x7dc0x230B0xde
    prev=[0x13c0x230B0xde], succ=[0x76e]
    =================================
    0x7de0x230S0xde: JUMP vd1(0x76e)

    Begin block 0x76e
    prev=[0x37f0x230B0xde, 0x7dc0x230B0xde], succ=[]
    =================================
    0x76f: STOP 

    Begin block 0x1410x230B0xde
    prev=[0x238B0xde], succ=[0xf80x230B0xde]
    =================================
    0x1420x230S0xde: v230142Vde(0x7fe) = CONST 
    0x1450x230S0xde: v230145Vde(0xf8) = CONST 
    0x1480x230S0xde: JUMP v230145Vde(0xf8)

    Begin block 0xf80x230B0xde
    prev=[0x1410x230B0xde], succ=[0x1000x230B0xde]
    =================================
    0xf90x230S0xde: v230f9Vde(0x100) = CONST 
    0xfc0x230S0xde: v230fcVde(0x2fe) = CONST 
    0xff0x230S0xde: CALLPRIVATE v230fcVde(0x2fe), v230f9Vde(0x100)

    Begin block 0x1000x230B0xde
    prev=[0xf80x230B0xde], succ=[0x33fB0x1000x230B0xde]
    =================================
    0x1010x230S0xde: v230101Vde(0x7bb) = CONST 
    0x1040x230S0xde: v230104Vde(0x10b) = CONST 
    0x1070x230S0xde: v230107Vde(0x33f) = CONST 
    0x10a0x230S0xde: JUMP v230107Vde(0x33f)

    Begin block 0x33fB0x1000x230B0xde
    prev=[0x1000x230B0xde], succ=[0x10b0x230B0xde]
    =================================
    0x340S0x1000x230S0xde: v340V100230Vde(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x361S0x1000x230S0xde: v361V100230Vde = SLOAD v340V100230Vde(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x363S0x1000x230S0xde: JUMP v230104Vde(0x10b)

    Begin block 0x10b0x230B0xde
    prev=[0x33fB0x1000x230B0xde], succ=[0x3640x230B0xde]
    =================================
    0x10c0x230S0xde: v23010cVde(0x364) = CONST 
    0x10f0x230S0xde: JUMP v23010cVde(0x364)

    Begin block 0x3640x230B0xde
    prev=[0x10b0x230B0xde], succ=[0x37f0x230B0xde, 0x3830x230B0xde]
    =================================
    0x3650x230S0xde: v230365Vde = CALLDATASIZE 
    0x3660x230S0xde: v230366Vde(0x0) = CONST 
    0x3690x230S0xde: CALLDATACOPY v230366Vde(0x0), v230366Vde(0x0), v230365Vde
    0x36a0x230S0xde: v23036aVde(0x0) = CONST 
    0x36d0x230S0xde: v23036dVde = CALLDATASIZE 
    0x36e0x230S0xde: v23036eVde(0x0) = CONST 
    0x3710x230S0xde: v230371Vde = GAS 
    0x3720x230S0xde: v230372Vde = DELEGATECALL v230371Vde, v361V100230Vde, v23036eVde(0x0), v23036dVde, v23036aVde(0x0), v23036aVde(0x0)
    0x3730x230S0xde: v230373Vde = RETURNDATASIZE 
    0x3740x230S0xde: v230374Vde(0x0) = CONST 
    0x3770x230S0xde: RETURNDATACOPY v230374Vde(0x0), v230374Vde(0x0), v230373Vde
    0x37a0x230S0xde: v23037aVde = ISZERO v230372Vde
    0x37b0x230S0xde: v23037bVde(0x383) = CONST 
    0x37e0x230S0xde: JUMPI v23037bVde(0x383), v23037aVde

    Begin block 0x37f0x230B0xde
    prev=[0x3640x230B0xde], succ=[0x76e]
    =================================
    0x37f0x230S0xde: v23037fVde = RETURNDATASIZE 
    0x3800x230S0xde: v230380Vde(0x0) = CONST 
    0x3820x230S0xde: RETURN v230380Vde(0x0), v23037fVde

    Begin block 0x3830x230B0xde
    prev=[0x3640x230B0xde], succ=[]
    =================================
    0x3840x230S0xde: v230384Vde = RETURNDATASIZE 
    0x3850x230S0xde: v230385Vde(0x0) = CONST 
    0x3870x230S0xde: REVERT v230385Vde(0x0), v230384Vde

    Begin block 0x47fB0xcf
    prev=[0x471B0xcf], succ=[]
    =================================
    0x481S0xcf: REVERT v472Vcf(0x0), v472Vcf(0x0)

}

function admin()() public {
    Begin block 0xe3
    prev=[], succ=[0xeb, 0xef]
    =================================
    0xe4: ve4 = CALLVALUE 
    0xe6: ve6 = ISZERO ve4
    0xe7: ve7(0xef) = CONST 
    0xea: JUMPI ve7(0xef), ve6

    Begin block 0xeb
    prev=[0xe3], succ=[]
    =================================
    0xeb: veb(0x0) = CONST 
    0xee: REVERT veb(0x0), veb(0x0)

    Begin block 0xef
    prev=[0xe3], succ=[0x78f]
    =================================
    0xf1: vf1(0x78f) = CONST 
    0xf4: vf4(0x2c9) = CONST 
    0xf7: vf7_0 = CALLPRIVATE vf4(0x2c9), vf1(0x78f)

    Begin block 0x78f
    prev=[0xef], succ=[0x520B0x78f]
    =================================
    0x790: v790(0x40) = CONST 
    0x792: v792 = MLOAD v790(0x40)
    0x793: v793(0xba) = CONST 
    0x798: v798(0x520) = CONST 
    0x79b: JUMP v798(0x520)

    Begin block 0x520B0x78f
    prev=[0x78f], succ=[0xba0xe3]
    =================================
    0x521S0x78f: v521V78f(0x1) = CONST 
    0x523S0x78f: v523V78f(0x1) = CONST 
    0x525S0x78f: v525V78f(0xa0) = CONST 
    0x527S0x78f: v527V78f(0x10000000000000000000000000000000000000000) = SHL v525V78f(0xa0), v523V78f(0x1)
    0x528S0x78f: v528V78f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v527V78f(0x10000000000000000000000000000000000000000), v521V78f(0x1)
    0x52cS0x78f: v52cV78f = AND v528V78f(0xffffffffffffffffffffffffffffffffffffffff), vf7_0
    0x52eS0x78f: MSTORE v792, v52cV78f
    0x52fS0x78f: v52fV78f(0x20) = CONST 
    0x531S0x78f: v531V78f = ADD v52fV78f(0x20), v792
    0x533S0x78f: JUMP v793(0xba)

    Begin block 0xba0xe3
    prev=[0x520B0x78f], succ=[]
    =================================
    0xbb0xe3: ve3bb(0x40) = CONST 
    0xbd0xe3: ve3bd = MLOAD ve3bb(0x40)
    0xc00xe3: ve3c0(0x20) = SUB v531V78f, ve3bd
    0xc20xe3: RETURN ve3bd, ve3c0(0x20)

}

