function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x69]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x9: v9(0x69) = CONST 
    0xc: JUMPI v9(0x69), v8

    Begin block 0xd
    prev=[0x0], succ=[0x43, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x5c60da1b) = CONST 
    0x19: v19 = GT v14(0x5c60da1b), v12
    0x1a: v1a(0x43) = CONST 
    0x1d: JUMPI v1a(0x43), v19

    Begin block 0x43
    prev=[0xd], succ=[0x807, 0x4f]
    =================================
    0x45: v45(0x25313a2) = CONST 
    0x4a: v4a = EQ v45(0x25313a2), v12
    0x7fe: v7fe(0x807) = CONST 
    0x7ff: JUMPI v7fe(0x807), v4a

    Begin block 0x807
    prev=[0x43], succ=[]
    =================================
    0x808: v808(0x80) = CONST 
    0x809: CALLPRIVATE v808(0x80)

    Begin block 0x4f
    prev=[0x43], succ=[0x80a, 0x5a]
    =================================
    0x50: v50(0xadd8140) = CONST 
    0x55: v55 = EQ v50(0xadd8140), v12
    0x800: v800(0x80a) = CONST 
    0x801: JUMPI v800(0x80a), v55

    Begin block 0x80a
    prev=[0x4f], succ=[]
    =================================
    0x80b: v80b(0xbe) = CONST 
    0x80c: CALLPRIVATE v80b(0xbe)

    Begin block 0x5a
    prev=[0x4f], succ=[0x65, 0x80d]
    =================================
    0x5b: v5b(0x2463aba5) = CONST 
    0x60: v60 = EQ v5b(0x2463aba5), v12
    0x802: v802(0x80d) = CONST 
    0x803: JUMPI v802(0x80d), v60

    Begin block 0x65
    prev=[0x5a], succ=[0x78]
    =================================
    0x65: v65(0x78) = CONST 
    0x68: JUMP v65(0x78)

    Begin block 0x78
    prev=[0x3f, 0x65, 0x69], succ=[0x17d0x0]
    =================================
    0x79: v79(0x6bb) = CONST 
    0x7c: v7c(0x17d) = CONST 
    0x7f: JUMP v7c(0x17d)

    Begin block 0x17d0x0
    prev=[0x78], succ=[0x2a4B0x17d0x0]
    =================================
    0x17e0x0: v017e(0x0) = CONST 
    0x1800x0: v0180(0x187) = CONST 
    0x1830x0: v0183(0x2a4) = CONST 
    0x1860x0: JUMP v0183(0x2a4)

    Begin block 0x2a4B0x17d0x0
    prev=[0x17d0x0], succ=[0x30aB0x17d0x0, 0x30eB0x17d0x0]
    =================================
    0x2a5S0x17d0x0: v2a5V17d0(0x0) = CONST 
    0x2a8S0x17d0x0: v2a8V17d0(0x40) = CONST 
    0x2aaS0x17d0x0: v2aaV17d0 = MLOAD v2a8V17d0(0x40)
    0x2adS0x17d0x0: v2adV17d0(0x640) = CONST 
    0x2b0S0x17d0x0: v2b0V17d0(0x23) = CONST 
    0x2b3S0x17d0x0: CODECOPY v2aaV17d0, v2adV17d0(0x640), v2b0V17d0(0x23)
    0x2b4S0x17d0x0: v2b4V17d0(0x23) = CONST 
    0x2b6S0x17d0x0: v2b6V17d0 = ADD v2b4V17d0(0x23), v2aaV17d0
    0x2b9S0x17d0x0: v2b9V17d0(0x40) = CONST 
    0x2bbS0x17d0x0: v2bbV17d0 = MLOAD v2b9V17d0(0x40)
    0x2beS0x17d0x0: v2beV17d0(0x23) = SUB v2b6V17d0, v2bbV17d0
    0x2c0S0x17d0x0: v2c0V17d0 = SHA3 v2bbV17d0, v2beV17d0(0x23)
    0x2c3S0x17d0x0: v2c3V17d0(0x0) = CONST 
    0x2c6S0x17d0x0: v2c6V17d0 = SLOAD v2c0V17d0
    0x2caS0x17d0x0: v2caV17d0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2dfS0x17d0x0: v2dfV17d0 = AND v2caV17d0(0xffffffffffffffffffffffffffffffffffffffff), v2c6V17d0
    0x2e0S0x17d0x0: v2e0V17d0(0x5c60da1b) = CONST 
    0x2e5S0x17d0x0: v2e5V17d0(0x40) = CONST 
    0x2e7S0x17d0x0: v2e7V17d0 = MLOAD v2e5V17d0(0x40)
    0x2e9S0x17d0x0: v2e9V17d0(0xffffffff) = CONST 
    0x2eeS0x17d0x0: v2eeV17d0(0x5c60da1b) = AND v2e9V17d0(0xffffffff), v2e0V17d0(0x5c60da1b)
    0x2efS0x17d0x0: v2efV17d0(0xe0) = CONST 
    0x2f1S0x17d0x0: v2f1V17d0(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = SHL v2efV17d0(0xe0), v2eeV17d0(0x5c60da1b)
    0x2f3S0x17d0x0: MSTORE v2e7V17d0, v2f1V17d0(0x5c60da1b00000000000000000000000000000000000000000000000000000000)
    0x2f4S0x17d0x0: v2f4V17d0(0x4) = CONST 
    0x2f6S0x17d0x0: v2f6V17d0 = ADD v2f4V17d0(0x4), v2e7V17d0
    0x2f7S0x17d0x0: v2f7V17d0(0x20) = CONST 
    0x2f9S0x17d0x0: v2f9V17d0(0x40) = CONST 
    0x2fbS0x17d0x0: v2fbV17d0 = MLOAD v2f9V17d0(0x40)
    0x2feS0x17d0x0: v2feV17d0(0x4) = SUB v2f6V17d0, v2fbV17d0
    0x302S0x17d0x0: v302V17d0 = EXTCODESIZE v2dfV17d0
    0x303S0x17d0x0: v303V17d0 = ISZERO v302V17d0
    0x305S0x17d0x0: v305V17d0 = ISZERO v303V17d0
    0x306S0x17d0x0: v306V17d0(0x30e) = CONST 
    0x309S0x17d0x0: JUMPI v306V17d0(0x30e), v305V17d0

    Begin block 0x30aB0x17d0x0
    prev=[0x2a4B0x17d0x0], succ=[]
    =================================
    0x30aS0x17d0x0: v30aV17d0(0x0) = CONST 
    0x30dS0x17d0x0: REVERT v30aV17d0(0x0), v30aV17d0(0x0)

    Begin block 0x30eB0x17d0x0
    prev=[0x2a4B0x17d0x0], succ=[0x319B0x17d0x0, 0x322B0x17d0x0]
    =================================
    0x310S0x17d0x0: v310V17d0 = GAS 
    0x311S0x17d0x0: v311V17d0 = STATICCALL v310V17d0, v2dfV17d0, v2fbV17d0, v2feV17d0(0x4), v2fbV17d0, v2f7V17d0(0x20)
    0x312S0x17d0x0: v312V17d0 = ISZERO v311V17d0
    0x314S0x17d0x0: v314V17d0 = ISZERO v312V17d0
    0x315S0x17d0x0: v315V17d0(0x322) = CONST 
    0x318S0x17d0x0: JUMPI v315V17d0(0x322), v314V17d0

    Begin block 0x319B0x17d0x0
    prev=[0x30eB0x17d0x0], succ=[]
    =================================
    0x319S0x17d0x0: v319V17d0 = RETURNDATASIZE 
    0x31aS0x17d0x0: v31aV17d0(0x0) = CONST 
    0x31dS0x17d0x0: RETURNDATACOPY v31aV17d0(0x0), v31aV17d0(0x0), v319V17d0
    0x31eS0x17d0x0: v31eV17d0 = RETURNDATASIZE 
    0x31fS0x17d0x0: v31fV17d0(0x0) = CONST 
    0x321S0x17d0x0: REVERT v31fV17d0(0x0), v31eV17d0

    Begin block 0x322B0x17d0x0
    prev=[0x30eB0x17d0x0], succ=[0x334B0x17d0x0, 0x338B0x17d0x0]
    =================================
    0x327S0x17d0x0: v327V17d0(0x40) = CONST 
    0x329S0x17d0x0: v329V17d0 = MLOAD v327V17d0(0x40)
    0x32aS0x17d0x0: v32aV17d0 = RETURNDATASIZE 
    0x32bS0x17d0x0: v32bV17d0(0x20) = CONST 
    0x32eS0x17d0x0: v32eV17d0 = LT v32aV17d0, v32bV17d0(0x20)
    0x32fS0x17d0x0: v32fV17d0 = ISZERO v32eV17d0
    0x330S0x17d0x0: v330V17d0(0x338) = CONST 
    0x333S0x17d0x0: JUMPI v330V17d0(0x338), v32fV17d0

    Begin block 0x334B0x17d0x0
    prev=[0x322B0x17d0x0], succ=[]
    =================================
    0x334S0x17d0x0: v334V17d0(0x0) = CONST 
    0x337S0x17d0x0: REVERT v334V17d0(0x0), v334V17d0(0x0)

    Begin block 0x338B0x17d0x0
    prev=[0x322B0x17d0x0], succ=[0x1870x0]
    =================================
    0x33aS0x17d0x0: v33aV17d0 = MLOAD v329V17d0
    0x340S0x17d0x0: JUMP v0180(0x187)

    Begin block 0x1870x0
    prev=[0x338B0x17d0x0], succ=[0x1a60x0, 0x1a90x0]
    =================================
    0x18a0x0: v018a(0x40) = CONST 
    0x18c0x0: v018c = MLOAD v018a(0x40)
    0x18d0x0: v018d = CALLDATASIZE 
    0x18e0x0: v018e(0x0) = CONST 
    0x1910x0: CALLDATACOPY v018c, v018e(0x0), v018d
    0x1920x0: v0192(0x0) = CONST 
    0x1950x0: v0195 = CALLDATASIZE 
    0x1980x0: v0198 = GAS 
    0x1990x0: v0199 = DELEGATECALL v0198, v33aV17d0, v018c, v0195, v0192(0x0), v0192(0x0)
    0x19a0x0: v019a = RETURNDATASIZE 
    0x19b0x0: v019b(0x0) = CONST 
    0x19e0x0: RETURNDATACOPY v018c, v019b(0x0), v019a
    0x1a10x0: v01a1 = ISZERO v0199
    0x1a20x0: v01a2(0x1a9) = CONST 
    0x1a50x0: JUMPI v01a2(0x1a9), v01a1

    Begin block 0x1a60x0
    prev=[0x1870x0], succ=[]
    =================================
    0x1a60x0: v01a6 = RETURNDATASIZE 
    0x1a80x0: RETURN v018c, v01a6

    Begin block 0x1a90x0
    prev=[0x1870x0], succ=[]
    =================================
    0x1aa0x0: v01aa = RETURNDATASIZE 
    0x1ac0x0: REVERT v018c, v01aa

    Begin block 0x80d
    prev=[0x5a], succ=[]
    =================================
    0x80e: v80e(0xd3) = CONST 
    0x80f: CALLPRIVATE v80e(0xd3)

    Begin block 0x1e
    prev=[0xd], succ=[0x810, 0x29]
    =================================
    0x1f: v1f(0x5c60da1b) = CONST 
    0x24: v24 = EQ v1f(0x5c60da1b), v12
    0x7f8: v7f8(0x810) = CONST 
    0x7f9: JUMPI v7f8(0x810), v24

    Begin block 0x810
    prev=[0x1e], succ=[]
    =================================
    0x811: v811(0x113) = CONST 
    0x812: CALLPRIVATE v811(0x113)

    Begin block 0x29
    prev=[0x1e], succ=[0x813, 0x34]
    =================================
    0x2a: v2a(0x9965b3d6) = CONST 
    0x2f: v2f = EQ v2a(0x9965b3d6), v12
    0x7fa: v7fa(0x813) = CONST 
    0x7fb: JUMPI v7fa(0x813), v2f

    Begin block 0x813
    prev=[0x29], succ=[]
    =================================
    0x814: v814(0x128) = CONST 
    0x815: CALLPRIVATE v814(0x128)

    Begin block 0x34
    prev=[0x29], succ=[0x3f, 0x816]
    =================================
    0x35: v35(0xf1739cae) = CONST 
    0x3a: v3a = EQ v35(0xf1739cae), v12
    0x7fc: v7fc(0x816) = CONST 
    0x7fd: JUMPI v7fc(0x816), v3a

    Begin block 0x3f
    prev=[0x34], succ=[0x78]
    =================================
    0x3f: v3f(0x78) = CONST 
    0x42: JUMP v3f(0x78)

    Begin block 0x816
    prev=[0x34], succ=[]
    =================================
    0x817: v817(0x13d) = CONST 
    0x818: CALLPRIVATE v817(0x13d)

    Begin block 0x69
    prev=[0x0], succ=[0x804, 0x78]
    =================================
    0x6a: v6a = CALLDATASIZE 
    0x6b: v6b(0x78) = CONST 
    0x6e: JUMPI v6b(0x78), v6a

    Begin block 0x804
    prev=[0x69], succ=[]
    =================================
    0x804: v804(0x806) = CONST 
    0x805: CALLPRIVATE v804(0x806)

}

function implementation()() public {
    Begin block 0x113
    prev=[], succ=[0x11b, 0x11f]
    =================================
    0x114: v114 = CALLVALUE 
    0x116: v116 = ISZERO v114
    0x117: v117(0x11f) = CONST 
    0x11a: JUMPI v117(0x11f), v116

    Begin block 0x11b
    prev=[0x113], succ=[]
    =================================
    0x11b: v11b(0x0) = CONST 
    0x11e: REVERT v11b(0x0), v11b(0x0)

    Begin block 0x11f
    prev=[0x113], succ=[0x2a4B0x11f]
    =================================
    0x121: v121(0x78d) = CONST 
    0x124: v124(0x2a4) = CONST 
    0x127: JUMP v124(0x2a4)

    Begin block 0x2a4B0x11f
    prev=[0x11f], succ=[0x30aB0x11f, 0x30eB0x11f]
    =================================
    0x2a5S0x11f: v2a5V11f(0x0) = CONST 
    0x2a8S0x11f: v2a8V11f(0x40) = CONST 
    0x2aaS0x11f: v2aaV11f = MLOAD v2a8V11f(0x40)
    0x2adS0x11f: v2adV11f(0x640) = CONST 
    0x2b0S0x11f: v2b0V11f(0x23) = CONST 
    0x2b3S0x11f: CODECOPY v2aaV11f, v2adV11f(0x640), v2b0V11f(0x23)
    0x2b4S0x11f: v2b4V11f(0x23) = CONST 
    0x2b6S0x11f: v2b6V11f = ADD v2b4V11f(0x23), v2aaV11f
    0x2b9S0x11f: v2b9V11f(0x40) = CONST 
    0x2bbS0x11f: v2bbV11f = MLOAD v2b9V11f(0x40)
    0x2beS0x11f: v2beV11f(0x23) = SUB v2b6V11f, v2bbV11f
    0x2c0S0x11f: v2c0V11f = SHA3 v2bbV11f, v2beV11f(0x23)
    0x2c3S0x11f: v2c3V11f(0x0) = CONST 
    0x2c6S0x11f: v2c6V11f = SLOAD v2c0V11f
    0x2caS0x11f: v2caV11f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2dfS0x11f: v2dfV11f = AND v2caV11f(0xffffffffffffffffffffffffffffffffffffffff), v2c6V11f
    0x2e0S0x11f: v2e0V11f(0x5c60da1b) = CONST 
    0x2e5S0x11f: v2e5V11f(0x40) = CONST 
    0x2e7S0x11f: v2e7V11f = MLOAD v2e5V11f(0x40)
    0x2e9S0x11f: v2e9V11f(0xffffffff) = CONST 
    0x2eeS0x11f: v2eeV11f(0x5c60da1b) = AND v2e9V11f(0xffffffff), v2e0V11f(0x5c60da1b)
    0x2efS0x11f: v2efV11f(0xe0) = CONST 
    0x2f1S0x11f: v2f1V11f(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = SHL v2efV11f(0xe0), v2eeV11f(0x5c60da1b)
    0x2f3S0x11f: MSTORE v2e7V11f, v2f1V11f(0x5c60da1b00000000000000000000000000000000000000000000000000000000)
    0x2f4S0x11f: v2f4V11f(0x4) = CONST 
    0x2f6S0x11f: v2f6V11f = ADD v2f4V11f(0x4), v2e7V11f
    0x2f7S0x11f: v2f7V11f(0x20) = CONST 
    0x2f9S0x11f: v2f9V11f(0x40) = CONST 
    0x2fbS0x11f: v2fbV11f = MLOAD v2f9V11f(0x40)
    0x2feS0x11f: v2feV11f(0x4) = SUB v2f6V11f, v2fbV11f
    0x302S0x11f: v302V11f = EXTCODESIZE v2dfV11f
    0x303S0x11f: v303V11f = ISZERO v302V11f
    0x305S0x11f: v305V11f = ISZERO v303V11f
    0x306S0x11f: v306V11f(0x30e) = CONST 
    0x309S0x11f: JUMPI v306V11f(0x30e), v305V11f

    Begin block 0x30aB0x11f
    prev=[0x2a4B0x11f], succ=[]
    =================================
    0x30aS0x11f: v30aV11f(0x0) = CONST 
    0x30dS0x11f: REVERT v30aV11f(0x0), v30aV11f(0x0)

    Begin block 0x30eB0x11f
    prev=[0x2a4B0x11f], succ=[0x319B0x11f, 0x322B0x11f]
    =================================
    0x310S0x11f: v310V11f = GAS 
    0x311S0x11f: v311V11f = STATICCALL v310V11f, v2dfV11f, v2fbV11f, v2feV11f(0x4), v2fbV11f, v2f7V11f(0x20)
    0x312S0x11f: v312V11f = ISZERO v311V11f
    0x314S0x11f: v314V11f = ISZERO v312V11f
    0x315S0x11f: v315V11f(0x322) = CONST 
    0x318S0x11f: JUMPI v315V11f(0x322), v314V11f

    Begin block 0x319B0x11f
    prev=[0x30eB0x11f], succ=[]
    =================================
    0x319S0x11f: v319V11f = RETURNDATASIZE 
    0x31aS0x11f: v31aV11f(0x0) = CONST 
    0x31dS0x11f: RETURNDATACOPY v31aV11f(0x0), v31aV11f(0x0), v319V11f
    0x31eS0x11f: v31eV11f = RETURNDATASIZE 
    0x31fS0x11f: v31fV11f(0x0) = CONST 
    0x321S0x11f: REVERT v31fV11f(0x0), v31eV11f

    Begin block 0x322B0x11f
    prev=[0x30eB0x11f], succ=[0x334B0x11f, 0x338B0x11f]
    =================================
    0x327S0x11f: v327V11f(0x40) = CONST 
    0x329S0x11f: v329V11f = MLOAD v327V11f(0x40)
    0x32aS0x11f: v32aV11f = RETURNDATASIZE 
    0x32bS0x11f: v32bV11f(0x20) = CONST 
    0x32eS0x11f: v32eV11f = LT v32aV11f, v32bV11f(0x20)
    0x32fS0x11f: v32fV11f = ISZERO v32eV11f
    0x330S0x11f: v330V11f(0x338) = CONST 
    0x333S0x11f: JUMPI v330V11f(0x338), v32fV11f

    Begin block 0x334B0x11f
    prev=[0x322B0x11f], succ=[]
    =================================
    0x334S0x11f: v334V11f(0x0) = CONST 
    0x337S0x11f: REVERT v334V11f(0x0), v334V11f(0x0)

    Begin block 0x338B0x11f
    prev=[0x322B0x11f], succ=[0x78d]
    =================================
    0x33aS0x11f: v33aV11f = MLOAD v329V11f
    0x340S0x11f: JUMP v121(0x78d)

    Begin block 0x78d
    prev=[0x338B0x11f], succ=[]
    =================================
    0x78e: v78e(0x40) = CONST 
    0x791: v791 = MLOAD v78e(0x40)
    0x792: v792(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x7a9: v7a9 = AND v33aV11f, v792(0xffffffffffffffffffffffffffffffffffffffff)
    0x7ab: MSTORE v791, v7a9
    0x7ac: v7ac = MLOAD v78e(0x40)
    0x7b0: v7b0(0x0) = SUB v791, v7ac
    0x7b1: v7b1(0x20) = CONST 
    0x7b3: v7b3(0x20) = ADD v7b1(0x20), v7b0(0x0)
    0x7b5: RETURN v7ac, v7b3(0x20)

}

function claimProxyOwnership()() public {
    Begin block 0x128
    prev=[], succ=[0x130, 0x134]
    =================================
    0x129: v129 = CALLVALUE 
    0x12b: v12b = ISZERO v129
    0x12c: v12c(0x134) = CONST 
    0x12f: JUMPI v12c(0x134), v12b

    Begin block 0x130
    prev=[0x128], succ=[]
    =================================
    0x130: v130(0x0) = CONST 
    0x133: REVERT v130(0x0), v130(0x0)

    Begin block 0x134
    prev=[0x128], succ=[0x341B0x134]
    =================================
    0x136: v136(0x7d5) = CONST 
    0x139: v139(0x341) = CONST 
    0x13c: JUMP v139(0x341), v136(0x7d5)

    Begin block 0x341B0x134
    prev=[0x134], succ=[0x1d2B0x341B0x134]
    =================================
    0x342S0x134: v342V134(0x349) = CONST 
    0x345S0x134: v345V134(0x1d2) = CONST 
    0x348S0x134: JUMP v345V134(0x1d2)

    Begin block 0x1d2B0x341B0x134
    prev=[0x341B0x134], succ=[0x349B0x134]
    =================================
    0x1d3S0x341S0x134: v1d3V341V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x1f4S0x341S0x134: v1f4V341V134 = SLOAD v1d3V341V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4)
    0x1f6S0x341S0x134: JUMP v342V134(0x349)

    Begin block 0x349B0x134
    prev=[0x1d2B0x341B0x134], succ=[0x37cB0x134, 0x3e2B0x134]
    =================================
    0x34aS0x134: v34aV134(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x35fS0x134: v35fV134 = AND v34aV134(0xffffffffffffffffffffffffffffffffffffffff), v1f4V341V134
    0x360S0x134: v360V134 = CALLER 
    0x361S0x134: v361V134(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x376S0x134: v376V134 = AND v361V134(0xffffffffffffffffffffffffffffffffffffffff), v360V134
    0x377S0x134: v377V134 = EQ v376V134, v35fV134
    0x378S0x134: v378V134(0x3e2) = CONST 
    0x37bS0x134: JUMPI v378V134(0x3e2), v377V134

    Begin block 0x37cB0x134
    prev=[0x349B0x134], succ=[]
    =================================
    0x37cS0x134: v37cV134(0x40) = CONST 
    0x37fS0x134: v37fV134 = MLOAD v37cV134(0x40)
    0x380S0x134: v380V134(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x3a2S0x134: MSTORE v37fV134, v380V134(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x3a3S0x134: v3a3V134(0x20) = CONST 
    0x3a5S0x134: v3a5V134(0x4) = CONST 
    0x3a8S0x134: v3a8V134 = ADD v37fV134, v3a5V134(0x4)
    0x3a9S0x134: MSTORE v3a8V134, v3a3V134(0x20)
    0x3aaS0x134: v3aaV134(0x18) = CONST 
    0x3acS0x134: v3acV134(0x24) = CONST 
    0x3afS0x134: v3afV134 = ADD v37fV134, v3acV134(0x24)
    0x3b0S0x134: MSTORE v3afV134, v3aaV134(0x18)
    0x3b1S0x134: v3b1V134(0x6f6e6c792070656e64696e672050726f7879204f776e65720000000000000000) = CONST 
    0x3d2S0x134: v3d2V134(0x44) = CONST 
    0x3d5S0x134: v3d5V134 = ADD v37fV134, v3d2V134(0x44)
    0x3d6S0x134: MSTORE v3d5V134, v3b1V134(0x6f6e6c792070656e64696e672050726f7879204f776e65720000000000000000)
    0x3d8S0x134: v3d8V134 = MLOAD v37cV134(0x40)
    0x3dcS0x134: v3dcV134(0x0) = SUB v37fV134, v3d8V134
    0x3ddS0x134: v3ddV134(0x64) = CONST 
    0x3dfS0x134: v3dfV134(0x64) = ADD v3ddV134(0x64), v3dcV134(0x0)
    0x3e1S0x134: REVERT v3d8V134, v3dfV134(0x64)

    Begin block 0x3e2B0x134
    prev=[0x349B0x134], succ=[0x1d2B0x3e2B0x134]
    =================================
    0x3e3S0x134: v3e3V134(0x3ea) = CONST 
    0x3e6S0x134: v3e6V134(0x1d2) = CONST 
    0x3e9S0x134: JUMP v3e6V134(0x1d2)

    Begin block 0x1d2B0x3e2B0x134
    prev=[0x3e2B0x134], succ=[0x3eaB0x134]
    =================================
    0x1d3S0x3e2S0x134: v1d3V3e2V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x1f4S0x3e2S0x134: v1f4V3e2V134 = SLOAD v1d3V3e2V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4)
    0x1f6S0x3e2S0x134: JUMP v3e3V134(0x3ea)

    Begin block 0x3eaB0x134
    prev=[0x1d2B0x3e2B0x134], succ=[0x1adB0x3eaB0x134]
    =================================
    0x3ebS0x134: v3ebV134(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x400S0x134: v400V134 = AND v3ebV134(0xffffffffffffffffffffffffffffffffffffffff), v1f4V3e2V134
    0x401S0x134: v401V134(0x408) = CONST 
    0x404S0x134: v404V134(0x1ad) = CONST 
    0x407S0x134: JUMP v404V134(0x1ad)

    Begin block 0x1adB0x3eaB0x134
    prev=[0x3eaB0x134], succ=[0x408B0x134]
    =================================
    0x1aeS0x3eaS0x134: v1aeV3eaV134(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x1cfS0x3eaS0x134: v1cfV3eaV134 = SLOAD v1aeV3eaV134(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac)
    0x1d1S0x3eaS0x134: JUMP v401V134(0x408)

    Begin block 0x408B0x134
    prev=[0x1adB0x3eaB0x134], succ=[0x1d2B0x408B0x134]
    =================================
    0x409S0x134: v409V134(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x41eS0x134: v41eV134 = AND v409V134(0xffffffffffffffffffffffffffffffffffffffff), v1cfV3eaV134
    0x41fS0x134: v41fV134(0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9) = CONST 
    0x440S0x134: v440V134(0x40) = CONST 
    0x442S0x134: v442V134 = MLOAD v440V134(0x40)
    0x443S0x134: v443V134(0x40) = CONST 
    0x445S0x134: v445V134 = MLOAD v443V134(0x40)
    0x448S0x134: v448V134(0x0) = SUB v442V134, v445V134
    0x44aS0x134: LOG3 v445V134, v448V134(0x0), v41fV134(0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9), v41eV134, v400V134
    0x44bS0x134: v44bV134(0x45a) = CONST 
    0x44eS0x134: v44eV134(0x455) = CONST 
    0x451S0x134: v451V134(0x1d2) = CONST 
    0x454S0x134: JUMP v451V134(0x1d2)

    Begin block 0x1d2B0x408B0x134
    prev=[0x408B0x134], succ=[0x455B0x134]
    =================================
    0x1d3S0x408S0x134: v1d3V408V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x1f4S0x408S0x134: v1f4V408V134 = SLOAD v1d3V408V134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4)
    0x1f6S0x408S0x134: JUMP v44eV134(0x455)

    Begin block 0x455B0x134
    prev=[0x1d2B0x408B0x134], succ=[0x5f7B0x134]
    =================================
    0x456S0x134: v456V134(0x5f7) = CONST 
    0x459S0x134: JUMP v456V134(0x5f7)

    Begin block 0x5f7B0x134
    prev=[0x455B0x134], succ=[0x45aB0x134]
    =================================
    0x5f8S0x134: v5f8V134(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x619S0x134: SSTORE v5f8V134(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac), v1f4V408V134
    0x61aS0x134: JUMP v44bV134(0x45a)

    Begin block 0x45aB0x134
    prev=[0x5f7B0x134], succ=[0x61bB0x45aB0x134]
    =================================
    0x45bS0x134: v45bV134(0x464) = CONST 
    0x45eS0x134: v45eV134(0x0) = CONST 
    0x460S0x134: v460V134(0x61b) = CONST 
    0x463S0x134: JUMP v460V134(0x61b), v45eV134(0x0), v45bV134(0x464)

    Begin block 0x61bB0x45aB0x134
    prev=[0x45aB0x134], succ=[0x464B0x134]
    =================================
    0x61cS0x45aS0x134: v61cV45aV134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x63dS0x45aS0x134: SSTORE v61cV45aV134(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4), v45eV134(0x0)
    0x63eS0x45aS0x134: JUMP v45bV134(0x464)

    Begin block 0x464B0x134
    prev=[0x61bB0x45aB0x134], succ=[0x7d5]
    =================================
    0x465S0x134: JUMP v136(0x7d5)

    Begin block 0x7d5
    prev=[0x464B0x134], succ=[]
    =================================
    0x7d6: STOP 

}

function transferProxyOwnership(address)() public {
    Begin block 0x13d
    prev=[], succ=[0x145, 0x149]
    =================================
    0x13e: v13e = CALLVALUE 
    0x140: v140 = ISZERO v13e
    0x141: v141(0x149) = CONST 
    0x144: JUMPI v141(0x149), v140

    Begin block 0x145
    prev=[0x13d], succ=[]
    =================================
    0x145: v145(0x0) = CONST 
    0x148: REVERT v145(0x0), v145(0x0)

    Begin block 0x149
    prev=[0x13d], succ=[0x15c, 0x160]
    =================================
    0x14b: v14b(0x7f6) = CONST 
    0x14e: v14e(0x4) = CONST 
    0x151: v151 = CALLDATASIZE 
    0x152: v152 = SUB v151, v14e(0x4)
    0x153: v153(0x20) = CONST 
    0x156: v156 = LT v152, v153(0x20)
    0x157: v157 = ISZERO v156
    0x158: v158(0x160) = CONST 
    0x15b: JUMPI v158(0x160), v157

    Begin block 0x15c
    prev=[0x149], succ=[]
    =================================
    0x15c: v15c(0x0) = CONST 
    0x15f: REVERT v15c(0x0), v15c(0x0)

    Begin block 0x160
    prev=[0x149], succ=[0x466]
    =================================
    0x162: v162 = CALLDATALOAD v14e(0x4)
    0x163: v163(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x178: v178 = AND v163(0xffffffffffffffffffffffffffffffffffffffff), v162
    0x179: v179(0x466) = CONST 
    0x17c: JUMP v179(0x466)

    Begin block 0x466
    prev=[0x160], succ=[0x1adB0x466]
    =================================
    0x467: v467(0x46e) = CONST 
    0x46a: v46a(0x1ad) = CONST 
    0x46d: JUMP v46a(0x1ad)

    Begin block 0x1adB0x466
    prev=[0x466], succ=[0x46e]
    =================================
    0x1aeS0x466: v1aeV466(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x1cfS0x466: v1cfV466 = SLOAD v1aeV466(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac)
    0x1d1S0x466: JUMP v467(0x46e)

    Begin block 0x46e
    prev=[0x1adB0x466], succ=[0x4a1, 0x507]
    =================================
    0x46f: v46f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x484: v484 = AND v46f(0xffffffffffffffffffffffffffffffffffffffff), v1cfV466
    0x485: v485 = CALLER 
    0x486: v486(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x49b: v49b = AND v486(0xffffffffffffffffffffffffffffffffffffffff), v485
    0x49c: v49c = EQ v49b, v484
    0x49d: v49d(0x507) = CONST 
    0x4a0: JUMPI v49d(0x507), v49c

    Begin block 0x4a1
    prev=[0x46e], succ=[]
    =================================
    0x4a1: v4a1(0x40) = CONST 
    0x4a4: v4a4 = MLOAD v4a1(0x40)
    0x4a5: v4a5(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x4c7: MSTORE v4a4, v4a5(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x4c8: v4c8(0x20) = CONST 
    0x4ca: v4ca(0x4) = CONST 
    0x4cd: v4cd = ADD v4a4, v4ca(0x4)
    0x4ce: MSTORE v4cd, v4c8(0x20)
    0x4cf: v4cf(0x10) = CONST 
    0x4d1: v4d1(0x24) = CONST 
    0x4d4: v4d4 = ADD v4a4, v4d1(0x24)
    0x4d5: MSTORE v4d4, v4cf(0x10)
    0x4d6: v4d6(0x6f6e6c792050726f7879204f776e657200000000000000000000000000000000) = CONST 
    0x4f7: v4f7(0x44) = CONST 
    0x4fa: v4fa = ADD v4a4, v4f7(0x44)
    0x4fb: MSTORE v4fa, v4d6(0x6f6e6c792050726f7879204f776e657200000000000000000000000000000000)
    0x4fd: v4fd = MLOAD v4a1(0x40)
    0x501: v501(0x0) = SUB v4a4, v4fd
    0x502: v502(0x64) = CONST 
    0x504: v504(0x64) = ADD v502(0x64), v501(0x0)
    0x506: REVERT v4fd, v504(0x64)

    Begin block 0x507
    prev=[0x46e], succ=[0x523, 0x527]
    =================================
    0x508: v508(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x51e: v51e = AND v178, v508(0xffffffffffffffffffffffffffffffffffffffff)
    0x51f: v51f(0x527) = CONST 
    0x522: JUMPI v51f(0x527), v51e

    Begin block 0x523
    prev=[0x507], succ=[]
    =================================
    0x523: v523(0x0) = CONST 
    0x526: REVERT v523(0x0), v523(0x0)

    Begin block 0x527
    prev=[0x507], succ=[0x61bB0x527]
    =================================
    0x528: v528(0x530) = CONST 
    0x52c: v52c(0x61b) = CONST 
    0x52f: JUMP v52c(0x61b), v178, v528(0x530)

    Begin block 0x61bB0x527
    prev=[0x527], succ=[0x530]
    =================================
    0x61cS0x527: v61cV527(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x63dS0x527: SSTORE v61cV527(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4), v178
    0x63eS0x527: JUMP v528(0x530)

    Begin block 0x530
    prev=[0x61bB0x527], succ=[0x1adB0x530]
    =================================
    0x531: v531(0xb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b) = CONST 
    0x552: v552(0x559) = CONST 
    0x555: v555(0x1ad) = CONST 
    0x558: JUMP v555(0x1ad)

    Begin block 0x1adB0x530
    prev=[0x530], succ=[0x559]
    =================================
    0x1aeS0x530: v1aeV530(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x1cfS0x530: v1cfV530 = SLOAD v1aeV530(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac)
    0x1d1S0x530: JUMP v552(0x559)

    Begin block 0x559
    prev=[0x1adB0x530], succ=[0x7f6]
    =================================
    0x55a: v55a(0x40) = CONST 
    0x55d: v55d = MLOAD v55a(0x40)
    0x55e: v55e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x575: v575 = AND v55e(0xffffffffffffffffffffffffffffffffffffffff), v1cfV530
    0x577: MSTORE v55d, v575
    0x57a: v57a = AND v178, v55e(0xffffffffffffffffffffffffffffffffffffffff)
    0x57b: v57b(0x20) = CONST 
    0x57e: v57e = ADD v55d, v57b(0x20)
    0x57f: MSTORE v57e, v57a
    0x581: v581 = MLOAD v55a(0x40)
    0x585: v585(0x0) = SUB v55d, v581
    0x586: v586(0x40) = ADD v585(0x0), v55a(0x40)
    0x588: LOG1 v581, v586(0x40), v531(0xb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b)
    0x58a: JUMP v14b(0x7f6)

    Begin block 0x7f6
    prev=[0x559], succ=[]
    =================================
    0x7f7: STOP 

}

function proxyOwner()() public {
    Begin block 0x80
    prev=[], succ=[0x88, 0x8c]
    =================================
    0x81: v81 = CALLVALUE 
    0x83: v83 = ISZERO v81
    0x84: v84(0x8c) = CONST 
    0x87: JUMPI v84(0x8c), v83

    Begin block 0x88
    prev=[0x80], succ=[]
    =================================
    0x88: v88(0x0) = CONST 
    0x8b: REVERT v88(0x0), v88(0x0)

    Begin block 0x8c
    prev=[0x80], succ=[0x1adB0x8c]
    =================================
    0x8e: v8e(0x6dc) = CONST 
    0x91: v91(0x1ad) = CONST 
    0x94: JUMP v91(0x1ad)

    Begin block 0x1adB0x8c
    prev=[0x8c], succ=[0x6dc]
    =================================
    0x1aeS0x8c: v1aeV8c(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x1cfS0x8c: v1cfV8c = SLOAD v1aeV8c(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac)
    0x1d1S0x8c: JUMP v8e(0x6dc)

    Begin block 0x6dc
    prev=[0x1adB0x8c], succ=[]
    =================================
    0x6dd: v6dd(0x40) = CONST 
    0x6e0: v6e0 = MLOAD v6dd(0x40)
    0x6e1: v6e1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x6f8: v6f8 = AND v1cfV8c, v6e1(0xffffffffffffffffffffffffffffffffffffffff)
    0x6fa: MSTORE v6e0, v6f8
    0x6fb: v6fb = MLOAD v6dd(0x40)
    0x6ff: v6ff(0x0) = SUB v6e0, v6fb
    0x700: v700(0x20) = CONST 
    0x702: v702(0x20) = ADD v700(0x20), v6ff(0x0)
    0x704: RETURN v6fb, v702(0x20)

}

function fallback()() public {
    Begin block 0x806
    prev=[], succ=[0x17d0x806]
    =================================
    0x6f: v6f(0x69a) = CONST 
    0x72: v72(0x17d) = CONST 
    0x75: JUMP v72(0x17d)

    Begin block 0x17d0x806
    prev=[0x806], succ=[0x2a4B0x17d0x806]
    =================================
    0x17e0x806: v80617e(0x0) = CONST 
    0x1800x806: v806180(0x187) = CONST 
    0x1830x806: v806183(0x2a4) = CONST 
    0x1860x806: JUMP v806183(0x2a4)

    Begin block 0x2a4B0x17d0x806
    prev=[0x17d0x806], succ=[0x30aB0x17d0x806, 0x30eB0x17d0x806]
    =================================
    0x2a5S0x17d0x806: v2a5V17d806(0x0) = CONST 
    0x2a8S0x17d0x806: v2a8V17d806(0x40) = CONST 
    0x2aaS0x17d0x806: v2aaV17d806 = MLOAD v2a8V17d806(0x40)
    0x2adS0x17d0x806: v2adV17d806(0x640) = CONST 
    0x2b0S0x17d0x806: v2b0V17d806(0x23) = CONST 
    0x2b3S0x17d0x806: CODECOPY v2aaV17d806, v2adV17d806(0x640), v2b0V17d806(0x23)
    0x2b4S0x17d0x806: v2b4V17d806(0x23) = CONST 
    0x2b6S0x17d0x806: v2b6V17d806 = ADD v2b4V17d806(0x23), v2aaV17d806
    0x2b9S0x17d0x806: v2b9V17d806(0x40) = CONST 
    0x2bbS0x17d0x806: v2bbV17d806 = MLOAD v2b9V17d806(0x40)
    0x2beS0x17d0x806: v2beV17d806(0x23) = SUB v2b6V17d806, v2bbV17d806
    0x2c0S0x17d0x806: v2c0V17d806 = SHA3 v2bbV17d806, v2beV17d806(0x23)
    0x2c3S0x17d0x806: v2c3V17d806(0x0) = CONST 
    0x2c6S0x17d0x806: v2c6V17d806 = SLOAD v2c0V17d806
    0x2caS0x17d0x806: v2caV17d806(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2dfS0x17d0x806: v2dfV17d806 = AND v2caV17d806(0xffffffffffffffffffffffffffffffffffffffff), v2c6V17d806
    0x2e0S0x17d0x806: v2e0V17d806(0x5c60da1b) = CONST 
    0x2e5S0x17d0x806: v2e5V17d806(0x40) = CONST 
    0x2e7S0x17d0x806: v2e7V17d806 = MLOAD v2e5V17d806(0x40)
    0x2e9S0x17d0x806: v2e9V17d806(0xffffffff) = CONST 
    0x2eeS0x17d0x806: v2eeV17d806(0x5c60da1b) = AND v2e9V17d806(0xffffffff), v2e0V17d806(0x5c60da1b)
    0x2efS0x17d0x806: v2efV17d806(0xe0) = CONST 
    0x2f1S0x17d0x806: v2f1V17d806(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = SHL v2efV17d806(0xe0), v2eeV17d806(0x5c60da1b)
    0x2f3S0x17d0x806: MSTORE v2e7V17d806, v2f1V17d806(0x5c60da1b00000000000000000000000000000000000000000000000000000000)
    0x2f4S0x17d0x806: v2f4V17d806(0x4) = CONST 
    0x2f6S0x17d0x806: v2f6V17d806 = ADD v2f4V17d806(0x4), v2e7V17d806
    0x2f7S0x17d0x806: v2f7V17d806(0x20) = CONST 
    0x2f9S0x17d0x806: v2f9V17d806(0x40) = CONST 
    0x2fbS0x17d0x806: v2fbV17d806 = MLOAD v2f9V17d806(0x40)
    0x2feS0x17d0x806: v2feV17d806(0x4) = SUB v2f6V17d806, v2fbV17d806
    0x302S0x17d0x806: v302V17d806 = EXTCODESIZE v2dfV17d806
    0x303S0x17d0x806: v303V17d806 = ISZERO v302V17d806
    0x305S0x17d0x806: v305V17d806 = ISZERO v303V17d806
    0x306S0x17d0x806: v306V17d806(0x30e) = CONST 
    0x309S0x17d0x806: JUMPI v306V17d806(0x30e), v305V17d806

    Begin block 0x30aB0x17d0x806
    prev=[0x2a4B0x17d0x806], succ=[]
    =================================
    0x30aS0x17d0x806: v30aV17d806(0x0) = CONST 
    0x30dS0x17d0x806: REVERT v30aV17d806(0x0), v30aV17d806(0x0)

    Begin block 0x30eB0x17d0x806
    prev=[0x2a4B0x17d0x806], succ=[0x319B0x17d0x806, 0x322B0x17d0x806]
    =================================
    0x310S0x17d0x806: v310V17d806 = GAS 
    0x311S0x17d0x806: v311V17d806 = STATICCALL v310V17d806, v2dfV17d806, v2fbV17d806, v2feV17d806(0x4), v2fbV17d806, v2f7V17d806(0x20)
    0x312S0x17d0x806: v312V17d806 = ISZERO v311V17d806
    0x314S0x17d0x806: v314V17d806 = ISZERO v312V17d806
    0x315S0x17d0x806: v315V17d806(0x322) = CONST 
    0x318S0x17d0x806: JUMPI v315V17d806(0x322), v314V17d806

    Begin block 0x319B0x17d0x806
    prev=[0x30eB0x17d0x806], succ=[]
    =================================
    0x319S0x17d0x806: v319V17d806 = RETURNDATASIZE 
    0x31aS0x17d0x806: v31aV17d806(0x0) = CONST 
    0x31dS0x17d0x806: RETURNDATACOPY v31aV17d806(0x0), v31aV17d806(0x0), v319V17d806
    0x31eS0x17d0x806: v31eV17d806 = RETURNDATASIZE 
    0x31fS0x17d0x806: v31fV17d806(0x0) = CONST 
    0x321S0x17d0x806: REVERT v31fV17d806(0x0), v31eV17d806

    Begin block 0x322B0x17d0x806
    prev=[0x30eB0x17d0x806], succ=[0x334B0x17d0x806, 0x338B0x17d0x806]
    =================================
    0x327S0x17d0x806: v327V17d806(0x40) = CONST 
    0x329S0x17d0x806: v329V17d806 = MLOAD v327V17d806(0x40)
    0x32aS0x17d0x806: v32aV17d806 = RETURNDATASIZE 
    0x32bS0x17d0x806: v32bV17d806(0x20) = CONST 
    0x32eS0x17d0x806: v32eV17d806 = LT v32aV17d806, v32bV17d806(0x20)
    0x32fS0x17d0x806: v32fV17d806 = ISZERO v32eV17d806
    0x330S0x17d0x806: v330V17d806(0x338) = CONST 
    0x333S0x17d0x806: JUMPI v330V17d806(0x338), v32fV17d806

    Begin block 0x334B0x17d0x806
    prev=[0x322B0x17d0x806], succ=[]
    =================================
    0x334S0x17d0x806: v334V17d806(0x0) = CONST 
    0x337S0x17d0x806: REVERT v334V17d806(0x0), v334V17d806(0x0)

    Begin block 0x338B0x17d0x806
    prev=[0x322B0x17d0x806], succ=[0x1870x806]
    =================================
    0x33aS0x17d0x806: v33aV17d806 = MLOAD v329V17d806
    0x340S0x17d0x806: JUMP v806180(0x187)

    Begin block 0x1870x806
    prev=[0x338B0x17d0x806], succ=[0x1a60x806, 0x1a90x806]
    =================================
    0x18a0x806: v80618a(0x40) = CONST 
    0x18c0x806: v80618c = MLOAD v80618a(0x40)
    0x18d0x806: v80618d = CALLDATASIZE 
    0x18e0x806: v80618e(0x0) = CONST 
    0x1910x806: CALLDATACOPY v80618c, v80618e(0x0), v80618d
    0x1920x806: v806192(0x0) = CONST 
    0x1950x806: v806195 = CALLDATASIZE 
    0x1980x806: v806198 = GAS 
    0x1990x806: v806199 = DELEGATECALL v806198, v33aV17d806, v80618c, v806195, v806192(0x0), v806192(0x0)
    0x19a0x806: v80619a = RETURNDATASIZE 
    0x19b0x806: v80619b(0x0) = CONST 
    0x19e0x806: RETURNDATACOPY v80618c, v80619b(0x0), v80619a
    0x1a10x806: v8061a1 = ISZERO v806199
    0x1a20x806: v8061a2(0x1a9) = CONST 
    0x1a50x806: JUMPI v8061a2(0x1a9), v8061a1

    Begin block 0x1a60x806
    prev=[0x1870x806], succ=[]
    =================================
    0x1a60x806: v8061a6 = RETURNDATASIZE 
    0x1a80x806: RETURN v80618c, v8061a6

    Begin block 0x1a90x806
    prev=[0x1870x806], succ=[]
    =================================
    0x1aa0x806: v8061aa = RETURNDATASIZE 
    0x1ac0x806: REVERT v80618c, v8061aa

}

function pendingProxyOwner()() public {
    Begin block 0xbe
    prev=[], succ=[0xc6, 0xca]
    =================================
    0xbf: vbf = CALLVALUE 
    0xc1: vc1 = ISZERO vbf
    0xc2: vc2(0xca) = CONST 
    0xc5: JUMPI vc2(0xca), vc1

    Begin block 0xc6
    prev=[0xbe], succ=[]
    =================================
    0xc6: vc6(0x0) = CONST 
    0xc9: REVERT vc6(0x0), vc6(0x0)

    Begin block 0xca
    prev=[0xbe], succ=[0x1d2B0xca]
    =================================
    0xcc: vcc(0x724) = CONST 
    0xcf: vcf(0x1d2) = CONST 
    0xd2: JUMP vcf(0x1d2)

    Begin block 0x1d2B0xca
    prev=[0xca], succ=[0x724]
    =================================
    0x1d3S0xca: v1d3Vca(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4) = CONST 
    0x1f4S0xca: v1f4Vca = SLOAD v1d3Vca(0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4)
    0x1f6S0xca: JUMP vcc(0x724)

    Begin block 0x724
    prev=[0x1d2B0xca], succ=[]
    =================================
    0x725: v725(0x40) = CONST 
    0x728: v728 = MLOAD v725(0x40)
    0x729: v729(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x740: v740 = AND v1f4Vca, v729(0xffffffffffffffffffffffffffffffffffffffff)
    0x742: MSTORE v728, v740
    0x743: v743 = MLOAD v725(0x40)
    0x747: v747(0x0) = SUB v728, v743
    0x748: v748(0x20) = CONST 
    0x74a: v74a(0x20) = ADD v748(0x20), v747(0x0)
    0x74c: RETURN v743, v74a(0x20)

}

function changeImplementationReference(address)() public {
    Begin block 0xd3
    prev=[], succ=[0xdb, 0xdf]
    =================================
    0xd4: vd4 = CALLVALUE 
    0xd6: vd6 = ISZERO vd4
    0xd7: vd7(0xdf) = CONST 
    0xda: JUMPI vd7(0xdf), vd6

    Begin block 0xdb
    prev=[0xd3], succ=[]
    =================================
    0xdb: vdb(0x0) = CONST 
    0xde: REVERT vdb(0x0), vdb(0x0)

    Begin block 0xdf
    prev=[0xd3], succ=[0xf2, 0xf6]
    =================================
    0xe1: ve1(0x76c) = CONST 
    0xe4: ve4(0x4) = CONST 
    0xe7: ve7 = CALLDATASIZE 
    0xe8: ve8 = SUB ve7, ve4(0x4)
    0xe9: ve9(0x20) = CONST 
    0xec: vec = LT ve8, ve9(0x20)
    0xed: ved = ISZERO vec
    0xee: vee(0xf6) = CONST 
    0xf1: JUMPI vee(0xf6), ved

    Begin block 0xf2
    prev=[0xdf], succ=[]
    =================================
    0xf2: vf2(0x0) = CONST 
    0xf5: REVERT vf2(0x0), vf2(0x0)

    Begin block 0xf6
    prev=[0xdf], succ=[0x1f7]
    =================================
    0xf8: vf8 = CALLDATALOAD ve4(0x4)
    0xf9: vf9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x10e: v10e = AND vf9(0xffffffffffffffffffffffffffffffffffffffff), vf8
    0x10f: v10f(0x1f7) = CONST 
    0x112: JUMP v10f(0x1f7)

    Begin block 0x1f7
    prev=[0xf6], succ=[0x1adB0x1f7]
    =================================
    0x1f8: v1f8(0x1ff) = CONST 
    0x1fb: v1fb(0x1ad) = CONST 
    0x1fe: JUMP v1fb(0x1ad)

    Begin block 0x1adB0x1f7
    prev=[0x1f7], succ=[0x1ff]
    =================================
    0x1aeS0x1f7: v1aeV1f7(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac) = CONST 
    0x1cfS0x1f7: v1cfV1f7 = SLOAD v1aeV1f7(0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac)
    0x1d1S0x1f7: JUMP v1f8(0x1ff)

    Begin block 0x1ff
    prev=[0x1adB0x1f7], succ=[0x232, 0x298]
    =================================
    0x200: v200(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x215: v215 = AND v200(0xffffffffffffffffffffffffffffffffffffffff), v1cfV1f7
    0x216: v216 = CALLER 
    0x217: v217(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x22c: v22c = AND v217(0xffffffffffffffffffffffffffffffffffffffff), v216
    0x22d: v22d = EQ v22c, v215
    0x22e: v22e(0x298) = CONST 
    0x231: JUMPI v22e(0x298), v22d

    Begin block 0x232
    prev=[0x1ff], succ=[]
    =================================
    0x232: v232(0x40) = CONST 
    0x235: v235 = MLOAD v232(0x40)
    0x236: v236(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x258: MSTORE v235, v236(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x259: v259(0x20) = CONST 
    0x25b: v25b(0x4) = CONST 
    0x25e: v25e = ADD v235, v25b(0x4)
    0x25f: MSTORE v25e, v259(0x20)
    0x260: v260(0x10) = CONST 
    0x262: v262(0x24) = CONST 
    0x265: v265 = ADD v235, v262(0x24)
    0x266: MSTORE v265, v260(0x10)
    0x267: v267(0x6f6e6c792050726f7879204f776e657200000000000000000000000000000000) = CONST 
    0x288: v288(0x44) = CONST 
    0x28b: v28b = ADD v235, v288(0x44)
    0x28c: MSTORE v28b, v267(0x6f6e6c792050726f7879204f776e657200000000000000000000000000000000)
    0x28e: v28e = MLOAD v232(0x40)
    0x292: v292(0x0) = SUB v235, v28e
    0x293: v293(0x64) = CONST 
    0x295: v295(0x64) = ADD v293(0x64), v292(0x0)
    0x297: REVERT v28e, v295(0x64)

    Begin block 0x298
    prev=[0x1ff], succ=[0x58b]
    =================================
    0x299: v299(0x2a1) = CONST 
    0x29d: v29d(0x58b) = CONST 
    0x2a0: JUMP v29d(0x58b)

    Begin block 0x58b
    prev=[0x298], succ=[0x2a1]
    =================================
    0x58c: v58c(0x0) = CONST 
    0x58e: v58e(0x40) = CONST 
    0x590: v590 = MLOAD v58e(0x40)
    0x593: v593(0x640) = CONST 
    0x596: v596(0x23) = CONST 
    0x599: CODECOPY v590, v593(0x640), v596(0x23)
    0x59a: v59a(0x40) = CONST 
    0x59d: v59d = MLOAD v59a(0x40)
    0x5a1: v5a1(0x0) = SUB v590, v59d
    0x5a2: v5a2(0x23) = CONST 
    0x5a4: v5a4(0x23) = ADD v5a2(0x23), v5a1(0x0)
    0x5a6: v5a6 = SHA3 v59d, v5a4(0x23)
    0x5a9: SSTORE v5a6, v10e
    0x5aa: v5aa(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x5c0: v5c0 = AND v10e, v5aa(0xffffffffffffffffffffffffffffffffffffffff)
    0x5c2: MSTORE v59d, v5c0
    0x5c4: v5c4 = MLOAD v59a(0x40)
    0x5c8: v5c8(0xa8290438144fbf31e3a673ff5040273117d5e72f359860188a6df03b794f0354) = CONST 
    0x5ee: v5ee(0x0) = SUB v59d, v5c4
    0x5ef: v5ef(0x20) = CONST 
    0x5f1: v5f1(0x20) = ADD v5ef(0x20), v5ee(0x0)
    0x5f3: LOG1 v5c4, v5f1(0x20), v5c8(0xa8290438144fbf31e3a673ff5040273117d5e72f359860188a6df03b794f0354)
    0x5f6: JUMP v299(0x2a1)

    Begin block 0x2a1
    prev=[0x58b], succ=[0x76c]
    =================================
    0x2a3: JUMP ve1(0x76c)

    Begin block 0x76c
    prev=[0x2a1], succ=[]
    =================================
    0x76d: STOP 

}

