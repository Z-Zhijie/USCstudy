function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xc, 0x10]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5 = CALLVALUE 
    0x7: v7 = ISZERO v5
    0x8: v8(0x10) = CONST 
    0xb: JUMPI v8(0x10), v7

    Begin block 0xc
    prev=[0x0], succ=[]
    =================================
    0xc: vc(0x0) = CONST 
    0xf: REVERT vc(0x0), vc(0x0)

    Begin block 0x10
    prev=[0x0], succ=[0x1a, 0xaea]
    =================================
    0x12: v12(0x4) = CONST 
    0x14: v14 = CALLDATASIZE 
    0x15: v15 = LT v14, v12(0x4)
    0xaa7: vaa7(0xaea) = CONST 
    0xaa8: JUMPI vaa7(0xaea), v15

    Begin block 0x1a
    prev=[0x10], succ=[0x8c, 0x2b]
    =================================
    0x1a: v1a(0x0) = CONST 
    0x1c: v1c = CALLDATALOAD v1a(0x0)
    0x1d: v1d(0xe0) = CONST 
    0x1f: v1f = SHR v1d(0xe0), v1c
    0x21: v21(0x8ec872e3) = CONST 
    0x26: v26 = GT v21(0x8ec872e3), v1f
    0x27: v27(0x8c) = CONST 
    0x2a: JUMPI v27(0x8c), v26

    Begin block 0x8c
    prev=[0x1a], succ=[0xac3, 0x98]
    =================================
    0x8e: v8e(0xc340a24) = CONST 
    0x93: v93 = EQ v8e(0xc340a24), v1f
    0xab7: vab7(0xac3) = CONST 
    0xab8: JUMPI vab7(0xac3), v93

    Begin block 0xac3
    prev=[0x8c], succ=[]
    =================================
    0xac4: vac4(0xd4) = CONST 
    0xac5: CALLPRIVATE vac4(0xd4)

    Begin block 0x98
    prev=[0x8c], succ=[0xac6, 0xa3]
    =================================
    0x99: v99(0x15fe96dc) = CONST 
    0x9e: v9e = EQ v99(0x15fe96dc), v1f
    0xab9: vab9(0xac6) = CONST 
    0xaba: JUMPI vab9(0xac6), v9e

    Begin block 0xac6
    prev=[0x98], succ=[]
    =================================
    0xac7: vac7(0xf8) = CONST 
    0xac8: CALLPRIVATE vac7(0xf8)

    Begin block 0xa3
    prev=[0x98], succ=[0xac9, 0xae]
    =================================
    0xa4: va4(0x485cc955) = CONST 
    0xa9: va9 = EQ va4(0x485cc955), v1f
    0xabb: vabb(0xac9) = CONST 
    0xabc: JUMPI vabb(0xac9), va9

    Begin block 0xac9
    prev=[0xa3], succ=[]
    =================================
    0xaca: vaca(0x11d) = CONST 
    0xacb: CALLPRIVATE vaca(0x11d)

    Begin block 0xae
    prev=[0xa3], succ=[0xacc, 0xb9]
    =================================
    0xaf: vaf(0x52665f47) = CONST 
    0xb4: vb4 = EQ vaf(0x52665f47), v1f
    0xabd: vabd(0xacc) = CONST 
    0xabe: JUMPI vabd(0xacc), vb4

    Begin block 0xacc
    prev=[0xae], succ=[]
    =================================
    0xacd: vacd(0x14b) = CONST 
    0xace: CALLPRIVATE vacd(0x14b)

    Begin block 0xb9
    prev=[0xae], succ=[0xacf, 0xc4]
    =================================
    0xba: vba(0x6dd5b69d) = CONST 
    0xbf: vbf = EQ vba(0x6dd5b69d), v1f
    0xabf: vabf(0xacf) = CONST 
    0xac0: JUMPI vabf(0xacf), vbf

    Begin block 0xacf
    prev=[0xb9], succ=[]
    =================================
    0xad0: vad0(0x189) = CONST 
    0xad1: CALLPRIVATE vad0(0x189)

    Begin block 0xc4
    prev=[0xb9], succ=[0xad2, 0xcf]
    =================================
    0xc5: vc5(0x81c0c263) = CONST 
    0xca: vca = EQ vc5(0x81c0c263), v1f
    0xac1: vac1(0xad2) = CONST 
    0xac2: JUMPI vac1(0xad2), vca

    Begin block 0xad2
    prev=[0xc4], succ=[]
    =================================
    0xad3: vad3(0x1a6) = CONST 
    0xad4: CALLPRIVATE vad3(0x1a6)

    Begin block 0xcf
    prev=[0xc4], succ=[]
    =================================
    0xd0: vd0(0x0) = CONST 
    0xd3: REVERT vd0(0x0), vd0(0x0)

    Begin block 0x2b
    prev=[0x1a], succ=[0x66, 0x36]
    =================================
    0x2c: v2c(0xc4d66de8) = CONST 
    0x31: v31 = GT v2c(0xc4d66de8), v1f
    0x32: v32(0x66) = CONST 
    0x35: JUMPI v32(0x66), v31

    Begin block 0x66
    prev=[0x2b], succ=[0xad5, 0x72]
    =================================
    0x68: v68(0x8ec872e3) = CONST 
    0x6d: v6d = EQ v68(0x8ec872e3), v1f
    0xab1: vab1(0xad5) = CONST 
    0xab2: JUMPI vab1(0xad5), v6d

    Begin block 0xad5
    prev=[0x66], succ=[]
    =================================
    0xad6: vad6(0x1ae) = CONST 
    0xad7: CALLPRIVATE vad6(0x1ae)

    Begin block 0x72
    prev=[0x66], succ=[0xad8, 0x7d]
    =================================
    0x73: v73(0xb21544f3) = CONST 
    0x78: v78 = EQ v73(0xb21544f3), v1f
    0xab3: vab3(0xad8) = CONST 
    0xab4: JUMPI vab3(0xad8), v78

    Begin block 0xad8
    prev=[0x72], succ=[]
    =================================
    0xad9: vad9(0x1d1) = CONST 
    0xada: CALLPRIVATE vad9(0x1d1)

    Begin block 0x7d
    prev=[0x72], succ=[0x88, 0xadb]
    =================================
    0x7e: v7e(0xb6aa515b) = CONST 
    0x83: v83 = EQ v7e(0xb6aa515b), v1f
    0xab5: vab5(0xadb) = CONST 
    0xab6: JUMPI vab5(0xadb), v83

    Begin block 0x88
    prev=[0x7d], succ=[0x7bc]
    =================================
    0x88: v88(0x7bc) = CONST 
    0x8b: JUMP v88(0x7bc)

    Begin block 0x7bc
    prev=[0x88], succ=[]
    =================================
    0x7bd: v7bd(0x0) = CONST 
    0x7c0: REVERT v7bd(0x0), v7bd(0x0)

    Begin block 0xadb
    prev=[0x7d], succ=[]
    =================================
    0xadc: vadc(0x203) = CONST 
    0xadd: CALLPRIVATE vadc(0x203)

    Begin block 0x36
    prev=[0x2b], succ=[0xade, 0x41]
    =================================
    0x37: v37(0xc4d66de8) = CONST 
    0x3c: v3c = EQ v37(0xc4d66de8), v1f
    0xaa9: vaa9(0xade) = CONST 
    0xaaa: JUMPI vaa9(0xade), v3c

    Begin block 0xade
    prev=[0x36], succ=[]
    =================================
    0xadf: vadf(0x229) = CONST 
    0xae0: CALLPRIVATE vadf(0x229)

    Begin block 0x41
    prev=[0x36], succ=[0xae1, 0x4c]
    =================================
    0x42: v42(0xcddf2c6e) = CONST 
    0x47: v47 = EQ v42(0xcddf2c6e), v1f
    0xaab: vaab(0xae1) = CONST 
    0xaac: JUMPI vaab(0xae1), v47

    Begin block 0xae1
    prev=[0x41], succ=[]
    =================================
    0xae2: vae2(0x24f) = CONST 
    0xae3: CALLPRIVATE vae2(0x24f)

    Begin block 0x4c
    prev=[0x41], succ=[0xae4, 0x57]
    =================================
    0x4d: v4d(0xd1af0c7d) = CONST 
    0x52: v52 = EQ v4d(0xd1af0c7d), v1f
    0xaad: vaad(0xae4) = CONST 
    0xaae: JUMPI vaad(0xae4), v52

    Begin block 0xae4
    prev=[0x4c], succ=[]
    =================================
    0xae5: vae5(0x27b) = CONST 
    0xae6: CALLPRIVATE vae5(0x27b)

    Begin block 0x57
    prev=[0x4c], succ=[0x62, 0xae7]
    =================================
    0x58: v58(0xddf2be3f) = CONST 
    0x5d: v5d = EQ v58(0xddf2be3f), v1f
    0xaaf: vaaf(0xae7) = CONST 
    0xab0: JUMPI vaaf(0xae7), v5d

    Begin block 0x62
    prev=[0x57], succ=[0x798]
    =================================
    0x62: v62(0x798) = CONST 
    0x65: JUMP v62(0x798)

    Begin block 0x798
    prev=[0x62], succ=[]
    =================================
    0x799: v799(0x0) = CONST 
    0x79c: REVERT v799(0x0), v799(0x0)

    Begin block 0xae7
    prev=[0x57], succ=[]
    =================================
    0xae8: vae8(0x283) = CONST 
    0xae9: CALLPRIVATE vae8(0x283)

    Begin block 0xaea
    prev=[0x10], succ=[]
    =================================
    0xaeb: vaeb(0x774) = CONST 
    0xaec: CALLPRIVATE vaeb(0x774)

}

function initialize(address,address)() public {
    Begin block 0x11d
    prev=[], succ=[0x12f, 0x133]
    =================================
    0x11e: v11e(0x83c) = CONST 
    0x121: v121(0x4) = CONST 
    0x124: v124 = CALLDATASIZE 
    0x125: v125 = SUB v124, v121(0x4)
    0x126: v126(0x40) = CONST 
    0x129: v129 = LT v125, v126(0x40)
    0x12a: v12a = ISZERO v129
    0x12b: v12b(0x133) = CONST 
    0x12e: JUMPI v12b(0x133), v12a

    Begin block 0x12f
    prev=[0x11d], succ=[]
    =================================
    0x12f: v12f(0x0) = CONST 
    0x132: REVERT v12f(0x0), v12f(0x0)

    Begin block 0x133
    prev=[0x11d], succ=[0x2e0]
    =================================
    0x135: v135(0x1) = CONST 
    0x137: v137(0x1) = CONST 
    0x139: v139(0xa0) = CONST 
    0x13b: v13b(0x10000000000000000000000000000000000000000) = SHL v139(0xa0), v137(0x1)
    0x13c: v13c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13b(0x10000000000000000000000000000000000000000), v135(0x1)
    0x13e: v13e = CALLDATALOAD v121(0x4)
    0x140: v140 = AND v13c(0xffffffffffffffffffffffffffffffffffffffff), v13e
    0x142: v142(0x20) = CONST 
    0x144: v144(0x24) = ADD v142(0x20), v121(0x4)
    0x145: v145 = CALLDATALOAD v144(0x24)
    0x146: v146 = AND v145, v13c(0xffffffffffffffffffffffffffffffffffffffff)
    0x147: v147(0x2e0) = CONST 
    0x14a: JUMP v147(0x2e0)

    Begin block 0x2e0
    prev=[0x133], succ=[0x2f9, 0x2f1]
    =================================
    0x2e1: v2e1(0x0) = CONST 
    0x2e3: v2e3 = SLOAD v2e1(0x0)
    0x2e4: v2e4(0x100) = CONST 
    0x2e8: v2e8 = DIV v2e3, v2e4(0x100)
    0x2e9: v2e9(0xff) = CONST 
    0x2eb: v2eb = AND v2e9(0xff), v2e8
    0x2ed: v2ed(0x2f9) = CONST 
    0x2f0: JUMPI v2ed(0x2f9), v2eb

    Begin block 0x2f9
    prev=[0x2e0, 0x67cB0x2f1], succ=[0x307, 0x2ff]
    =================================
    0x2f9_0x0: v2f9_0 = PHI v2eb, v67fV2f1
    0x2fb: v2fb(0x307) = CONST 
    0x2fe: JUMPI v2fb(0x307), v2f9_0

    Begin block 0x307
    prev=[0x2f9, 0x2ff], succ=[0x30c, 0x342]
    =================================
    0x307_0x0: v307_0 = PHI v2eb, v306, v67fV2f1
    0x308: v308(0x342) = CONST 
    0x30b: JUMPI v308(0x342), v307_0

    Begin block 0x30c
    prev=[0x307], succ=[]
    =================================
    0x30c: v30c(0x40) = CONST 
    0x30e: v30e = MLOAD v30c(0x40)
    0x30f: v30f(0x461bcd) = CONST 
    0x313: v313(0xe5) = CONST 
    0x315: v315(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v313(0xe5), v30f(0x461bcd)
    0x317: MSTORE v30e, v315(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x318: v318(0x4) = CONST 
    0x31a: v31a = ADD v318(0x4), v30e
    0x31d: v31d(0x20) = CONST 
    0x31f: v31f = ADD v31d(0x20), v31a
    0x322: v322(0x20) = SUB v31f, v31a
    0x324: MSTORE v31a, v322(0x20)
    0x325: v325(0x2e) = CONST 
    0x328: MSTORE v31f, v325(0x2e)
    0x329: v329(0x20) = CONST 
    0x32b: v32b = ADD v329(0x20), v31f
    0x32d: v32d(0x6f2) = CONST 
    0x330: v330(0x2e) = CONST 
    0x333: CODECOPY v32b, v32d(0x6f2), v330(0x2e)
    0x334: v334(0x40) = CONST 
    0x336: v336 = ADD v334(0x40), v32b
    0x33a: v33a(0x40) = CONST 
    0x33c: v33c = MLOAD v33a(0x40)
    0x33f: v33f(0x84) = SUB v336, v33c
    0x341: REVERT v33c, v33f(0x84)

    Begin block 0x342
    prev=[0x307], succ=[0x355, 0x36d]
    =================================
    0x343: v343(0x0) = CONST 
    0x345: v345 = SLOAD v343(0x0)
    0x346: v346(0x100) = CONST 
    0x34a: v34a = DIV v345, v346(0x100)
    0x34b: v34b(0xff) = CONST 
    0x34d: v34d = AND v34b(0xff), v34a
    0x34e: v34e = ISZERO v34d
    0x350: v350 = ISZERO v34e
    0x351: v351(0x36d) = CONST 
    0x354: JUMPI v351(0x36d), v350

    Begin block 0x355
    prev=[0x342], succ=[0x36d]
    =================================
    0x355: v355(0x0) = CONST 
    0x358: v358 = SLOAD v355(0x0)
    0x359: v359(0xff) = CONST 
    0x35b: v35b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v359(0xff)
    0x35c: v35c(0xff00) = CONST 
    0x35f: v35f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v35c(0xff00)
    0x362: v362 = AND v358, v35f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)
    0x363: v363(0x100) = CONST 
    0x366: v366 = OR v363(0x100), v362
    0x367: v367 = AND v366, v35b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)
    0x368: v368(0x1) = CONST 
    0x36a: v36a = OR v368(0x1), v367
    0x36c: SSTORE v355(0x0), v36a

    Begin block 0x36d
    prev=[0x355, 0x342], succ=[0x499B0x36d]
    =================================
    0x36e: v36e(0x376) = CONST 
    0x372: v372(0x499) = CONST 
    0x375: JUMP v372(0x499), v140, v36e(0x376)

    Begin block 0x499B0x36d
    prev=[0x36d], succ=[0x4aa0x499B0x36d, 0x4b20x499B0x36d]
    =================================
    0x49aS0x36d: v49aV36d(0x0) = CONST 
    0x49cS0x36d: v49cV36d = SLOAD v49aV36d(0x0)
    0x49dS0x36d: v49dV36d(0x100) = CONST 
    0x4a1S0x36d: v4a1V36d = DIV v49cV36d, v49dV36d(0x100)
    0x4a2S0x36d: v4a2V36d(0xff) = CONST 
    0x4a4S0x36d: v4a4V36d = AND v4a2V36d(0xff), v4a1V36d
    0x4a6S0x36d: v4a6V36d(0x4b2) = CONST 
    0x4a9S0x36d: JUMPI v4a6V36d(0x4b2), v4a4V36d

    Begin block 0x4aa0x499B0x36d
    prev=[0x499B0x36d], succ=[0x67cB0x4aa0x499B0x36d]
    =================================
    0x4ab0x499S0x36d: v4994abV36d(0x4b2) = CONST 
    0x4ae0x499S0x36d: v4994aeV36d(0x67c) = CONST 
    0x4b10x499S0x36d: JUMP v4994aeV36d(0x67c)

    Begin block 0x67cB0x4aa0x499B0x36d
    prev=[0x4aa0x499B0x36d], succ=[0x4b20x499B0x36d]
    =================================
    0x67dS0x4aa0x499S0x36d: v67dV4aa499V36d = ADDRESS 
    0x67eS0x4aa0x499S0x36d: v67eV4aa499V36d = EXTCODESIZE v67dV4aa499V36d
    0x67fS0x4aa0x499S0x36d: v67fV4aa499V36d = ISZERO v67eV4aa499V36d
    0x681S0x4aa0x499S0x36d: JUMP v4994abV36d(0x4b2)

    Begin block 0x4b20x499B0x36d
    prev=[0x499B0x36d, 0x67cB0x4aa0x499B0x36d], succ=[0x4c00x499B0x36d, 0x4b80x499B0x36d]
    =================================
    0x4b20x499_0x0S0x36d: v4b2499_0V36d = PHI v4a4V36d, v67fV4aa499V36d
    0x4b40x499S0x36d: v4994b4V36d(0x4c0) = CONST 
    0x4b70x499S0x36d: JUMPI v4994b4V36d(0x4c0), v4b2499_0V36d

    Begin block 0x4c00x499B0x36d
    prev=[0x4b20x499B0x36d, 0x4b80x499B0x36d], succ=[0x4c50x499B0x36d, 0x4fb0x499B0x36d]
    =================================
    0x4c00x499_0x0S0x36d: v4c0499_0V36d = PHI v4a4V36d, v4994bfV36d, v67fV4aa499V36d
    0x4c10x499S0x36d: v4994c1V36d(0x4fb) = CONST 
    0x4c40x499S0x36d: JUMPI v4994c1V36d(0x4fb), v4c0499_0V36d

    Begin block 0x4c50x499B0x36d
    prev=[0x4c00x499B0x36d], succ=[]
    =================================
    0x4c50x499S0x36d: v4994c5V36d(0x40) = CONST 
    0x4c70x499S0x36d: v4994c7V36d = MLOAD v4994c5V36d(0x40)
    0x4c80x499S0x36d: v4994c8V36d(0x461bcd) = CONST 
    0x4cc0x499S0x36d: v4994ccV36d(0xe5) = CONST 
    0x4ce0x499S0x36d: v4994ceV36d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v4994ccV36d(0xe5), v4994c8V36d(0x461bcd)
    0x4d00x499S0x36d: MSTORE v4994c7V36d, v4994ceV36d(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x4d10x499S0x36d: v4994d1V36d(0x4) = CONST 
    0x4d30x499S0x36d: v4994d3V36d = ADD v4994d1V36d(0x4), v4994c7V36d
    0x4d60x499S0x36d: v4994d6V36d(0x20) = CONST 
    0x4d80x499S0x36d: v4994d8V36d = ADD v4994d6V36d(0x20), v4994d3V36d
    0x4db0x499S0x36d: v4994dbV36d(0x20) = SUB v4994d8V36d, v4994d3V36d
    0x4dd0x499S0x36d: MSTORE v4994d3V36d, v4994dbV36d(0x20)
    0x4de0x499S0x36d: v4994deV36d(0x2e) = CONST 
    0x4e10x499S0x36d: MSTORE v4994d8V36d, v4994deV36d(0x2e)
    0x4e20x499S0x36d: v4994e2V36d(0x20) = CONST 
    0x4e40x499S0x36d: v4994e4V36d = ADD v4994e2V36d(0x20), v4994d8V36d
    0x4e60x499S0x36d: v4994e6V36d(0x6f2) = CONST 
    0x4e90x499S0x36d: v4994e9V36d(0x2e) = CONST 
    0x4ec0x499S0x36d: CODECOPY v4994e4V36d, v4994e6V36d(0x6f2), v4994e9V36d(0x2e)
    0x4ed0x499S0x36d: v4994edV36d(0x40) = CONST 
    0x4ef0x499S0x36d: v4994efV36d = ADD v4994edV36d(0x40), v4994e4V36d
    0x4f30x499S0x36d: v4994f3V36d(0x40) = CONST 
    0x4f50x499S0x36d: v4994f5V36d = MLOAD v4994f3V36d(0x40)
    0x4f80x499S0x36d: v4994f8V36d(0x84) = SUB v4994efV36d, v4994f5V36d
    0x4fa0x499S0x36d: REVERT v4994f5V36d, v4994f8V36d(0x84)

    Begin block 0x4fb0x499B0x36d
    prev=[0x4c00x499B0x36d], succ=[0x50e0x499B0x36d, 0x5260x499B0x36d]
    =================================
    0x4fc0x499S0x36d: v4994fcV36d(0x0) = CONST 
    0x4fe0x499S0x36d: v4994feV36d = SLOAD v4994fcV36d(0x0)
    0x4ff0x499S0x36d: v4994ffV36d(0x100) = CONST 
    0x5030x499S0x36d: v499503V36d = DIV v4994feV36d, v4994ffV36d(0x100)
    0x5040x499S0x36d: v499504V36d(0xff) = CONST 
    0x5060x499S0x36d: v499506V36d = AND v499504V36d(0xff), v499503V36d
    0x5070x499S0x36d: v499507V36d = ISZERO v499506V36d
    0x5090x499S0x36d: v499509V36d = ISZERO v499507V36d
    0x50a0x499S0x36d: v49950aV36d(0x526) = CONST 
    0x50d0x499S0x36d: JUMPI v49950aV36d(0x526), v499509V36d

    Begin block 0x50e0x499B0x36d
    prev=[0x4fb0x499B0x36d], succ=[0x5260x499B0x36d]
    =================================
    0x50e0x499S0x36d: v49950eV36d(0x0) = CONST 
    0x5110x499S0x36d: v499511V36d = SLOAD v49950eV36d(0x0)
    0x5120x499S0x36d: v499512V36d(0xff) = CONST 
    0x5140x499S0x36d: v499514V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v499512V36d(0xff)
    0x5150x499S0x36d: v499515V36d(0xff00) = CONST 
    0x5180x499S0x36d: v499518V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v499515V36d(0xff00)
    0x51b0x499S0x36d: v49951bV36d = AND v499511V36d, v499518V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)
    0x51c0x499S0x36d: v49951cV36d(0x100) = CONST 
    0x51f0x499S0x36d: v49951fV36d = OR v49951cV36d(0x100), v49951bV36d
    0x5200x499S0x36d: v499520V36d = AND v49951fV36d, v499514V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)
    0x5210x499S0x36d: v499521V36d(0x1) = CONST 
    0x5230x499S0x36d: v499523V36d = OR v499521V36d(0x1), v499520V36d
    0x5250x499S0x36d: SSTORE v49950eV36d(0x0), v499523V36d

    Begin block 0x5260x499B0x36d
    prev=[0x50e0x499B0x36d, 0x4fb0x499B0x36d], succ=[0x57c0x499B0x36d, 0xa5c0x499B0x36d]
    =================================
    0x5270x499S0x36d: v499527V36d(0x33) = CONST 
    0x52a0x499S0x36d: v49952aV36d = SLOAD v499527V36d(0x33)
    0x52b0x499S0x36d: v49952bV36d(0x1) = CONST 
    0x52d0x499S0x36d: v49952dV36d(0x1) = CONST 
    0x52f0x499S0x36d: v49952fV36d(0xa0) = CONST 
    0x5310x499S0x36d: v499531V36d(0x10000000000000000000000000000000000000000) = SHL v49952fV36d(0xa0), v49952dV36d(0x1)
    0x5320x499S0x36d: v499532V36d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v499531V36d(0x10000000000000000000000000000000000000000), v49952bV36d(0x1)
    0x5330x499S0x36d: v499533V36d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v499532V36d(0xffffffffffffffffffffffffffffffffffffffff)
    0x5340x499S0x36d: v499534V36d = AND v499533V36d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v49952aV36d
    0x5350x499S0x36d: v499535V36d(0x1) = CONST 
    0x5370x499S0x36d: v499537V36d(0x1) = CONST 
    0x5390x499S0x36d: v499539V36d(0xa0) = CONST 
    0x53b0x499S0x36d: v49953bV36d(0x10000000000000000000000000000000000000000) = SHL v499539V36d(0xa0), v499537V36d(0x1)
    0x53c0x499S0x36d: v49953cV36d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v49953bV36d(0x10000000000000000000000000000000000000000), v499535V36d(0x1)
    0x53f0x499S0x36d: v49953fV36d = AND v49953cV36d(0xffffffffffffffffffffffffffffffffffffffff), v140
    0x5430x499S0x36d: v499543V36d = OR v49953fV36d, v499534V36d
    0x5470x499S0x36d: SSTORE v499527V36d(0x33), v499543V36d
    0x5480x499S0x36d: v499548V36d(0x40) = CONST 
    0x54a0x499S0x36d: v49954aV36d = MLOAD v499548V36d(0x40)
    0x54c0x499S0x36d: v49954cV36d = AND v499543V36d, v49953cV36d(0xffffffffffffffffffffffffffffffffffffffff)
    0x54e0x499S0x36d: v49954eV36d(0x0) = CONST 
    0x5510x499S0x36d: v499551V36d(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST 
    0x5750x499S0x36d: LOG3 v49954aV36d, v49954eV36d(0x0), v499551V36d(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v49954eV36d(0x0), v49954cV36d
    0x5770x499S0x36d: v499577V36d = ISZERO v499507V36d
    0x5780x499S0x36d: v499578V36d(0xa5c) = CONST 
    0x57b0x499S0x36d: JUMPI v499578V36d(0xa5c), v499577V36d

    Begin block 0x57c0x499B0x36d
    prev=[0x5260x499B0x36d], succ=[0x376]
    =================================
    0x57c0x499S0x36d: v49957cV36d(0x0) = CONST 
    0x57f0x499S0x36d: v49957fV36d = SLOAD v49957cV36d(0x0)
    0x5800x499S0x36d: v499580V36d(0xff00) = CONST 
    0x5830x499S0x36d: v499583V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v499580V36d(0xff00)
    0x5840x499S0x36d: v499584V36d = AND v499583V36d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v49957fV36d
    0x5860x499S0x36d: SSTORE v49957cV36d(0x0), v499584V36d
    0x5890x499S0x36d: JUMP v36e(0x376)

    Begin block 0x376
    prev=[0x57c0x499B0x36d, 0xa5c0x499B0x36d], succ=[0x398, 0xa14]
    =================================
    0x377: v377(0x35) = CONST 
    0x37a: v37a = SLOAD v377(0x35)
    0x37b: v37b(0x1) = CONST 
    0x37d: v37d(0x1) = CONST 
    0x37f: v37f(0xa0) = CONST 
    0x381: v381(0x10000000000000000000000000000000000000000) = SHL v37f(0xa0), v37d(0x1)
    0x382: v382(0xffffffffffffffffffffffffffffffffffffffff) = SUB v381(0x10000000000000000000000000000000000000000), v37b(0x1)
    0x383: v383(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v382(0xffffffffffffffffffffffffffffffffffffffff)
    0x384: v384 = AND v383(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v37a
    0x385: v385(0x1) = CONST 
    0x387: v387(0x1) = CONST 
    0x389: v389(0xa0) = CONST 
    0x38b: v38b(0x10000000000000000000000000000000000000000) = SHL v389(0xa0), v387(0x1)
    0x38c: v38c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v38b(0x10000000000000000000000000000000000000000), v385(0x1)
    0x38e: v38e = AND v146, v38c(0xffffffffffffffffffffffffffffffffffffffff)
    0x38f: v38f = OR v38e, v384
    0x391: SSTORE v377(0x35), v38f
    0x393: v393 = ISZERO v34e
    0x394: v394(0xa14) = CONST 
    0x397: JUMPI v394(0xa14), v393

    Begin block 0x398
    prev=[0x376], succ=[0x3a3]
    =================================
    0x398: v398(0x0) = CONST 
    0x39b: v39b = SLOAD v398(0x0)
    0x39c: v39c(0xff00) = CONST 
    0x39f: v39f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v39c(0xff00)
    0x3a0: v3a0 = AND v39f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v39b
    0x3a2: SSTORE v398(0x0), v3a0

    Begin block 0x3a3
    prev=[0x398], succ=[0x83c]
    =================================
    0x3a7: JUMP v11e(0x83c)

    Begin block 0x83c
    prev=[0xa14, 0x3a3], succ=[]
    =================================
    0x83d: STOP 

    Begin block 0xa14
    prev=[0x376], succ=[0x83c]
    =================================
    0xa18: JUMP v11e(0x83c)

    Begin block 0xa5c0x499B0x36d
    prev=[0x5260x499B0x36d], succ=[0x376]
    =================================
    0xa5f0x499S0x36d: JUMP v36e(0x376)

    Begin block 0x4b80x499B0x36d
    prev=[0x4b20x499B0x36d], succ=[0x4c00x499B0x36d]
    =================================
    0x4b90x499S0x36d: v4994b9V36d(0x0) = CONST 
    0x4bb0x499S0x36d: v4994bbV36d = SLOAD v4994b9V36d(0x0)
    0x4bc0x499S0x36d: v4994bcV36d(0xff) = CONST 
    0x4be0x499S0x36d: v4994beV36d = AND v4994bcV36d(0xff), v4994bbV36d
    0x4bf0x499S0x36d: v4994bfV36d = ISZERO v4994beV36d

    Begin block 0x2ff
    prev=[0x2f9], succ=[0x307]
    =================================
    0x300: v300(0x0) = CONST 
    0x302: v302 = SLOAD v300(0x0)
    0x303: v303(0xff) = CONST 
    0x305: v305 = AND v303(0xff), v302
    0x306: v306 = ISZERO v305

    Begin block 0x2f1
    prev=[0x2e0], succ=[0x67cB0x2f1]
    =================================
    0x2f2: v2f2(0x2f9) = CONST 
    0x2f5: v2f5(0x67c) = CONST 
    0x2f8: JUMP v2f5(0x67c)

    Begin block 0x67cB0x2f1
    prev=[0x2f1], succ=[0x2f9]
    =================================
    0x67dS0x2f1: v67dV2f1 = ADDRESS 
    0x67eS0x2f1: v67eV2f1 = EXTCODESIZE v67dV2f1
    0x67fS0x2f1: v67fV2f1 = ISZERO v67eV2f1
    0x681S0x2f1: JUMP v2f2(0x2f9)

}

function getConfig(bytes32,address)() public {
    Begin block 0x14b
    prev=[], succ=[0x15d, 0x161]
    =================================
    0x14c: v14c(0x85d) = CONST 
    0x14f: v14f(0x4) = CONST 
    0x152: v152 = CALLDATASIZE 
    0x153: v153 = SUB v152, v14f(0x4)
    0x154: v154(0x40) = CONST 
    0x157: v157 = LT v153, v154(0x40)
    0x158: v158 = ISZERO v157
    0x159: v159(0x161) = CONST 
    0x15c: JUMPI v159(0x161), v158

    Begin block 0x15d
    prev=[0x14b], succ=[]
    =================================
    0x15d: v15d(0x0) = CONST 
    0x160: REVERT v15d(0x0), v15d(0x0)

    Begin block 0x161
    prev=[0x14b], succ=[0x3a8]
    =================================
    0x164: v164 = CALLDATALOAD v14f(0x4)
    0x166: v166(0x20) = CONST 
    0x168: v168(0x24) = ADD v166(0x20), v14f(0x4)
    0x169: v169 = CALLDATALOAD v168(0x24)
    0x16a: v16a(0x1) = CONST 
    0x16c: v16c(0x1) = CONST 
    0x16e: v16e(0xa0) = CONST 
    0x170: v170(0x10000000000000000000000000000000000000000) = SHL v16e(0xa0), v16c(0x1)
    0x171: v171(0xffffffffffffffffffffffffffffffffffffffff) = SUB v170(0x10000000000000000000000000000000000000000), v16a(0x1)
    0x172: v172 = AND v171(0xffffffffffffffffffffffffffffffffffffffff), v169
    0x173: v173(0x3a8) = CONST 
    0x176: JUMP v173(0x3a8)

    Begin block 0x3a8
    prev=[0x161], succ=[0x85d]
    =================================
    0x3a9: v3a9(0x1) = CONST 
    0x3ab: v3ab(0x1) = CONST 
    0x3ad: v3ad(0xa0) = CONST 
    0x3af: v3af(0x10000000000000000000000000000000000000000) = SHL v3ad(0xa0), v3ab(0x1)
    0x3b0: v3b0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3af(0x10000000000000000000000000000000000000000), v3a9(0x1)
    0x3b1: v3b1 = AND v3b0(0xffffffffffffffffffffffffffffffffffffffff), v172
    0x3b2: v3b2 = XOR v3b1, v164
    0x3b3: v3b3(0x0) = CONST 
    0x3b7: MSTORE v3b3(0x0), v3b2
    0x3b8: v3b8(0x34) = CONST 
    0x3ba: v3ba(0x20) = CONST 
    0x3bc: MSTORE v3ba(0x20), v3b8(0x34)
    0x3bd: v3bd(0x40) = CONST 
    0x3c0: v3c0 = SHA3 v3b3(0x0), v3bd(0x40)
    0x3c1: v3c1 = SLOAD v3c0
    0x3c3: JUMP v14c(0x85d)

    Begin block 0x85d
    prev=[0x3a8], succ=[]
    =================================
    0x85e: v85e(0x40) = CONST 
    0x861: v861 = MLOAD v85e(0x40)
    0x864: MSTORE v861, v3c1
    0x865: v865 = MLOAD v85e(0x40)
    0x869: v869(0x0) = SUB v861, v865
    0x86a: v86a(0x20) = CONST 
    0x86c: v86c(0x20) = ADD v86a(0x20), v869(0x0)
    0x86e: RETURN v865, v86c(0x20)

}

function getConfig(bytes32)() public {
    Begin block 0x189
    prev=[], succ=[0x19b, 0x19f]
    =================================
    0x18a: v18a(0x88e) = CONST 
    0x18d: v18d(0x4) = CONST 
    0x190: v190 = CALLDATASIZE 
    0x191: v191 = SUB v190, v18d(0x4)
    0x192: v192(0x20) = CONST 
    0x195: v195 = LT v191, v192(0x20)
    0x196: v196 = ISZERO v195
    0x197: v197(0x19f) = CONST 
    0x19a: JUMPI v197(0x19f), v196

    Begin block 0x19b
    prev=[0x189], succ=[]
    =================================
    0x19b: v19b(0x0) = CONST 
    0x19e: REVERT v19b(0x0), v19b(0x0)

    Begin block 0x19f
    prev=[0x189], succ=[0x3c4]
    =================================
    0x1a1: v1a1 = CALLDATALOAD v18d(0x4)
    0x1a2: v1a2(0x3c4) = CONST 
    0x1a5: JUMP v1a2(0x3c4)

    Begin block 0x3c4
    prev=[0x19f], succ=[0x88e]
    =================================
    0x3c5: v3c5(0x0) = CONST 
    0x3c9: MSTORE v3c5(0x0), v1a1
    0x3ca: v3ca(0x34) = CONST 
    0x3cc: v3cc(0x20) = CONST 
    0x3ce: MSTORE v3cc(0x20), v3ca(0x34)
    0x3cf: v3cf(0x40) = CONST 
    0x3d2: v3d2 = SHA3 v3c5(0x0), v3cf(0x40)
    0x3d3: v3d3 = SLOAD v3d2
    0x3d5: JUMP v18a(0x88e)

    Begin block 0x88e
    prev=[0x3c4], succ=[]
    =================================
    0x88f: v88f(0x40) = CONST 
    0x892: v892 = MLOAD v88f(0x40)
    0x895: MSTORE v892, v3d3
    0x896: v896 = MLOAD v88f(0x40)
    0x89a: v89a(0x0) = SUB v892, v896
    0x89b: v89b(0x20) = CONST 
    0x89d: v89d(0x20) = ADD v89b(0x20), v89a(0x0)
    0x89f: RETURN v896, v89d(0x20)

}

function renounceGovernorship()() public {
    Begin block 0x1a6
    prev=[], succ=[0x3d6]
    =================================
    0x1a7: v1a7(0x8bf) = CONST 
    0x1aa: v1aa(0x3d6) = CONST 
    0x1ad: JUMP v1aa(0x3d6)

    Begin block 0x3d6
    prev=[0x1a6], succ=[0x3e9, 0x3ed]
    =================================
    0x3d7: v3d7(0x33) = CONST 
    0x3d9: v3d9 = SLOAD v3d7(0x33)
    0x3da: v3da(0x1) = CONST 
    0x3dc: v3dc(0x1) = CONST 
    0x3de: v3de(0xa0) = CONST 
    0x3e0: v3e0(0x10000000000000000000000000000000000000000) = SHL v3de(0xa0), v3dc(0x1)
    0x3e1: v3e1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e0(0x10000000000000000000000000000000000000000), v3da(0x1)
    0x3e2: v3e2 = AND v3e1(0xffffffffffffffffffffffffffffffffffffffff), v3d9
    0x3e3: v3e3 = CALLER 
    0x3e4: v3e4 = EQ v3e3, v3e2
    0x3e5: v3e5(0x3ed) = CONST 
    0x3e8: JUMPI v3e5(0x3ed), v3e4

    Begin block 0x3e9
    prev=[0x3d6], succ=[]
    =================================
    0x3e9: v3e9(0x0) = CONST 
    0x3ec: REVERT v3e9(0x0), v3e9(0x0)

    Begin block 0x3ed
    prev=[0x3d6], succ=[0x8bf]
    =================================
    0x3ee: v3ee(0x33) = CONST 
    0x3f0: v3f0 = SLOAD v3ee(0x33)
    0x3f1: v3f1(0x40) = CONST 
    0x3f3: v3f3 = MLOAD v3f1(0x40)
    0x3f4: v3f4(0x0) = CONST 
    0x3f7: v3f7(0x1) = CONST 
    0x3f9: v3f9(0x1) = CONST 
    0x3fb: v3fb(0xa0) = CONST 
    0x3fd: v3fd(0x10000000000000000000000000000000000000000) = SHL v3fb(0xa0), v3f9(0x1)
    0x3fe: v3fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3fd(0x10000000000000000000000000000000000000000), v3f7(0x1)
    0x3ff: v3ff = AND v3fe(0xffffffffffffffffffffffffffffffffffffffff), v3f0
    0x401: v401(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST 
    0x425: LOG3 v3f3, v3f4(0x0), v401(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v3ff, v3f4(0x0)
    0x426: v426(0x33) = CONST 
    0x429: v429 = SLOAD v426(0x33)
    0x42a: v42a(0x1) = CONST 
    0x42c: v42c(0x1) = CONST 
    0x42e: v42e(0xa0) = CONST 
    0x430: v430(0x10000000000000000000000000000000000000000) = SHL v42e(0xa0), v42c(0x1)
    0x431: v431(0xffffffffffffffffffffffffffffffffffffffff) = SUB v430(0x10000000000000000000000000000000000000000), v42a(0x1)
    0x432: v432(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v431(0xffffffffffffffffffffffffffffffffffffffff)
    0x433: v433 = AND v432(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v429
    0x435: SSTORE v426(0x33), v433
    0x436: JUMP v1a7(0x8bf)

    Begin block 0x8bf
    prev=[0x3ed], succ=[]
    =================================
    0x8c0: STOP 

}

function getConfig(bytes32,uint256)() public {
    Begin block 0x1ae
    prev=[], succ=[0x1c0, 0x1c4]
    =================================
    0x1af: v1af(0x8e0) = CONST 
    0x1b2: v1b2(0x4) = CONST 
    0x1b5: v1b5 = CALLDATASIZE 
    0x1b6: v1b6 = SUB v1b5, v1b2(0x4)
    0x1b7: v1b7(0x40) = CONST 
    0x1ba: v1ba = LT v1b6, v1b7(0x40)
    0x1bb: v1bb = ISZERO v1ba
    0x1bc: v1bc(0x1c4) = CONST 
    0x1bf: JUMPI v1bc(0x1c4), v1bb

    Begin block 0x1c0
    prev=[0x1ae], succ=[]
    =================================
    0x1c0: v1c0(0x0) = CONST 
    0x1c3: REVERT v1c0(0x0), v1c0(0x0)

    Begin block 0x1c4
    prev=[0x1ae], succ=[0x437]
    =================================
    0x1c7: v1c7 = CALLDATALOAD v1b2(0x4)
    0x1c9: v1c9(0x20) = CONST 
    0x1cb: v1cb(0x24) = ADD v1c9(0x20), v1b2(0x4)
    0x1cc: v1cc = CALLDATALOAD v1cb(0x24)
    0x1cd: v1cd(0x437) = CONST 
    0x1d0: JUMP v1cd(0x437)

    Begin block 0x437
    prev=[0x1c4], succ=[0x8e0]
    =================================
    0x438: v438 = XOR v1cc, v1c7
    0x439: v439(0x0) = CONST 
    0x43d: MSTORE v439(0x0), v438
    0x43e: v43e(0x34) = CONST 
    0x440: v440(0x20) = CONST 
    0x442: MSTORE v440(0x20), v43e(0x34)
    0x443: v443(0x40) = CONST 
    0x446: v446 = SHA3 v439(0x0), v443(0x40)
    0x447: v447 = SLOAD v446
    0x449: JUMP v1af(0x8e0)

    Begin block 0x8e0
    prev=[0x437], succ=[]
    =================================
    0x8e1: v8e1(0x40) = CONST 
    0x8e4: v8e4 = MLOAD v8e1(0x40)
    0x8e7: MSTORE v8e4, v447
    0x8e8: v8e8 = MLOAD v8e1(0x40)
    0x8ec: v8ec(0x0) = SUB v8e4, v8e8
    0x8ed: v8ed(0x20) = CONST 
    0x8ef: v8ef(0x20) = ADD v8ed(0x20), v8ec(0x0)
    0x8f1: RETURN v8e8, v8ef(0x20)

}

function setConfig(bytes32,address,uint256)() public {
    Begin block 0x1d1
    prev=[], succ=[0x1e3, 0x1e7]
    =================================
    0x1d2: v1d2(0x911) = CONST 
    0x1d5: v1d5(0x4) = CONST 
    0x1d8: v1d8 = CALLDATASIZE 
    0x1d9: v1d9 = SUB v1d8, v1d5(0x4)
    0x1da: v1da(0x60) = CONST 
    0x1dd: v1dd = LT v1d9, v1da(0x60)
    0x1de: v1de = ISZERO v1dd
    0x1df: v1df(0x1e7) = CONST 
    0x1e2: JUMPI v1df(0x1e7), v1de

    Begin block 0x1e3
    prev=[0x1d1], succ=[]
    =================================
    0x1e3: v1e3(0x0) = CONST 
    0x1e6: REVERT v1e3(0x0), v1e3(0x0)

    Begin block 0x1e7
    prev=[0x1d1], succ=[0x44a]
    =================================
    0x1ea: v1ea = CALLDATALOAD v1d5(0x4)
    0x1ec: v1ec(0x1) = CONST 
    0x1ee: v1ee(0x1) = CONST 
    0x1f0: v1f0(0xa0) = CONST 
    0x1f2: v1f2(0x10000000000000000000000000000000000000000) = SHL v1f0(0xa0), v1ee(0x1)
    0x1f3: v1f3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1f2(0x10000000000000000000000000000000000000000), v1ec(0x1)
    0x1f4: v1f4(0x20) = CONST 
    0x1f7: v1f7(0x24) = ADD v1d5(0x4), v1f4(0x20)
    0x1f8: v1f8 = CALLDATALOAD v1f7(0x24)
    0x1f9: v1f9 = AND v1f8, v1f3(0xffffffffffffffffffffffffffffffffffffffff)
    0x1fb: v1fb(0x40) = CONST 
    0x1fd: v1fd(0x44) = ADD v1fb(0x40), v1d5(0x4)
    0x1fe: v1fe = CALLDATALOAD v1fd(0x44)
    0x1ff: v1ff(0x44a) = CONST 
    0x202: JUMP v1ff(0x44a)

    Begin block 0x44a
    prev=[0x1e7], succ=[0x45d, 0x461]
    =================================
    0x44b: v44b(0x33) = CONST 
    0x44d: v44d = SLOAD v44b(0x33)
    0x44e: v44e(0x1) = CONST 
    0x450: v450(0x1) = CONST 
    0x452: v452(0xa0) = CONST 
    0x454: v454(0x10000000000000000000000000000000000000000) = SHL v452(0xa0), v450(0x1)
    0x455: v455(0xffffffffffffffffffffffffffffffffffffffff) = SUB v454(0x10000000000000000000000000000000000000000), v44e(0x1)
    0x456: v456 = AND v455(0xffffffffffffffffffffffffffffffffffffffff), v44d
    0x457: v457 = CALLER 
    0x458: v458 = EQ v457, v456
    0x459: v459(0x461) = CONST 
    0x45c: JUMPI v459(0x461), v458

    Begin block 0x45d
    prev=[0x44a], succ=[]
    =================================
    0x45d: v45d(0x0) = CONST 
    0x460: REVERT v45d(0x0), v45d(0x0)

    Begin block 0x461
    prev=[0x44a], succ=[0x655B0x461]
    =================================
    0x462: v462(0xa38) = CONST 
    0x465: v465(0x1) = CONST 
    0x467: v467(0x1) = CONST 
    0x469: v469(0xa0) = CONST 
    0x46b: v46b(0x10000000000000000000000000000000000000000) = SHL v469(0xa0), v467(0x1)
    0x46c: v46c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v46b(0x10000000000000000000000000000000000000000), v465(0x1)
    0x46e: v46e = AND v1f9, v46c(0xffffffffffffffffffffffffffffffffffffffff)
    0x470: v470 = XOR v1ea, v46e
    0x472: v472(0x655) = CONST 
    0x475: JUMP v472(0x655), v1fe, v470, v462(0xa38)

    Begin block 0x655B0x461
    prev=[0x461], succ=[0x66b0x655B0x461, 0xaa30x655B0x461]
    =================================
    0x656S0x461: v656V461(0x0) = CONST 
    0x65aS0x461: MSTORE v656V461(0x0), v470
    0x65bS0x461: v65bV461(0x34) = CONST 
    0x65dS0x461: v65dV461(0x20) = CONST 
    0x65fS0x461: MSTORE v65dV461(0x20), v65bV461(0x34)
    0x660S0x461: v660V461(0x40) = CONST 
    0x663S0x461: v663V461 = SHA3 v656V461(0x0), v660V461(0x40)
    0x664S0x461: v664V461 = SLOAD v663V461
    0x666S0x461: v666V461 = EQ v1fe, v664V461
    0x667S0x461: v667V461(0xaa3) = CONST 
    0x66aS0x461: JUMPI v667V461(0xaa3), v666V461

    Begin block 0x66b0x655B0x461
    prev=[0x655B0x461], succ=[0xa38]
    =================================
    0x66b0x655S0x461: v65566bV461(0x0) = CONST 
    0x66f0x655S0x461: MSTORE v65566bV461(0x0), v470
    0x6700x655S0x461: v655670V461(0x34) = CONST 
    0x6720x655S0x461: v655672V461(0x20) = CONST 
    0x6740x655S0x461: MSTORE v655672V461(0x20), v655670V461(0x34)
    0x6750x655S0x461: v655675V461(0x40) = CONST 
    0x6790x655S0x461: v655679V461 = SHA3 v65566bV461(0x0), v655675V461(0x40)
    0x67a0x655S0x461: SSTORE v655679V461, v1fe
    0x67b0x655S0x461: JUMP v462(0xa38)

    Begin block 0xa38
    prev=[0x66b0x655B0x461, 0xaa30x655B0x461], succ=[0x911]
    =================================
    0xa3c: JUMP v1d2(0x911)

    Begin block 0x911
    prev=[0xa38], succ=[]
    =================================
    0x912: STOP 

    Begin block 0xaa30x655B0x461
    prev=[0x655B0x461], succ=[0xa38]
    =================================
    0xaa60x655S0x461: JUMP v462(0xa38)

}

function transferGovernorship(address)() public {
    Begin block 0x203
    prev=[], succ=[0x215, 0x219]
    =================================
    0x204: v204(0x932) = CONST 
    0x207: v207(0x4) = CONST 
    0x20a: v20a = CALLDATASIZE 
    0x20b: v20b = SUB v20a, v207(0x4)
    0x20c: v20c(0x20) = CONST 
    0x20f: v20f = LT v20b, v20c(0x20)
    0x210: v210 = ISZERO v20f
    0x211: v211(0x219) = CONST 
    0x214: JUMPI v211(0x219), v210

    Begin block 0x215
    prev=[0x203], succ=[]
    =================================
    0x215: v215(0x0) = CONST 
    0x218: REVERT v215(0x0), v215(0x0)

    Begin block 0x219
    prev=[0x203], succ=[0x476]
    =================================
    0x21b: v21b = CALLDATALOAD v207(0x4)
    0x21c: v21c(0x1) = CONST 
    0x21e: v21e(0x1) = CONST 
    0x220: v220(0xa0) = CONST 
    0x222: v222(0x10000000000000000000000000000000000000000) = SHL v220(0xa0), v21e(0x1)
    0x223: v223(0xffffffffffffffffffffffffffffffffffffffff) = SUB v222(0x10000000000000000000000000000000000000000), v21c(0x1)
    0x224: v224 = AND v223(0xffffffffffffffffffffffffffffffffffffffff), v21b
    0x225: v225(0x476) = CONST 
    0x228: JUMP v225(0x476)

    Begin block 0x476
    prev=[0x219], succ=[0x489, 0x48d]
    =================================
    0x477: v477(0x33) = CONST 
    0x479: v479 = SLOAD v477(0x33)
    0x47a: v47a(0x1) = CONST 
    0x47c: v47c(0x1) = CONST 
    0x47e: v47e(0xa0) = CONST 
    0x480: v480(0x10000000000000000000000000000000000000000) = SHL v47e(0xa0), v47c(0x1)
    0x481: v481(0xffffffffffffffffffffffffffffffffffffffff) = SUB v480(0x10000000000000000000000000000000000000000), v47a(0x1)
    0x482: v482 = AND v481(0xffffffffffffffffffffffffffffffffffffffff), v479
    0x483: v483 = CALLER 
    0x484: v484 = EQ v483, v482
    0x485: v485(0x48d) = CONST 
    0x488: JUMPI v485(0x48d), v484

    Begin block 0x489
    prev=[0x476], succ=[]
    =================================
    0x489: v489(0x0) = CONST 
    0x48c: REVERT v489(0x0), v489(0x0)

    Begin block 0x48d
    prev=[0x476], succ=[0x682]
    =================================
    0x48e: v48e(0x496) = CONST 
    0x492: v492(0x682) = CONST 
    0x495: JUMP v492(0x682)

    Begin block 0x682
    prev=[0x48d], succ=[0x691, 0x695]
    =================================
    0x683: v683(0x1) = CONST 
    0x685: v685(0x1) = CONST 
    0x687: v687(0xa0) = CONST 
    0x689: v689(0x10000000000000000000000000000000000000000) = SHL v687(0xa0), v685(0x1)
    0x68a: v68a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v689(0x10000000000000000000000000000000000000000), v683(0x1)
    0x68c: v68c = AND v224, v68a(0xffffffffffffffffffffffffffffffffffffffff)
    0x68d: v68d(0x695) = CONST 
    0x690: JUMPI v68d(0x695), v68c

    Begin block 0x691
    prev=[0x682], succ=[]
    =================================
    0x691: v691(0x0) = CONST 
    0x694: REVERT v691(0x0), v691(0x0)

    Begin block 0x695
    prev=[0x682], succ=[0x496]
    =================================
    0x696: v696(0x33) = CONST 
    0x698: v698 = SLOAD v696(0x33)
    0x699: v699(0x40) = CONST 
    0x69b: v69b = MLOAD v699(0x40)
    0x69c: v69c(0x1) = CONST 
    0x69e: v69e(0x1) = CONST 
    0x6a0: v6a0(0xa0) = CONST 
    0x6a2: v6a2(0x10000000000000000000000000000000000000000) = SHL v6a0(0xa0), v69e(0x1)
    0x6a3: v6a3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6a2(0x10000000000000000000000000000000000000000), v69c(0x1)
    0x6a6: v6a6 = AND v224, v6a3(0xffffffffffffffffffffffffffffffffffffffff)
    0x6a8: v6a8 = AND v698, v6a3(0xffffffffffffffffffffffffffffffffffffffff)
    0x6aa: v6aa(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST 
    0x6cc: v6cc(0x0) = CONST 
    0x6cf: LOG3 v69b, v6cc(0x0), v6aa(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v6a8, v6a6
    0x6d0: v6d0(0x33) = CONST 
    0x6d3: v6d3 = SLOAD v6d0(0x33)
    0x6d4: v6d4(0x1) = CONST 
    0x6d6: v6d6(0x1) = CONST 
    0x6d8: v6d8(0xa0) = CONST 
    0x6da: v6da(0x10000000000000000000000000000000000000000) = SHL v6d8(0xa0), v6d6(0x1)
    0x6db: v6db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6da(0x10000000000000000000000000000000000000000), v6d4(0x1)
    0x6dc: v6dc(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v6db(0xffffffffffffffffffffffffffffffffffffffff)
    0x6dd: v6dd = AND v6dc(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v6d3
    0x6de: v6de(0x1) = CONST 
    0x6e0: v6e0(0x1) = CONST 
    0x6e2: v6e2(0xa0) = CONST 
    0x6e4: v6e4(0x10000000000000000000000000000000000000000) = SHL v6e2(0xa0), v6e0(0x1)
    0x6e5: v6e5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6e4(0x10000000000000000000000000000000000000000), v6de(0x1)
    0x6e9: v6e9 = AND v6e5(0xffffffffffffffffffffffffffffffffffffffff), v224
    0x6ed: v6ed = OR v6e9, v6dd
    0x6ef: SSTORE v6d0(0x33), v6ed
    0x6f0: JUMP v48e(0x496)

    Begin block 0x496
    prev=[0x695], succ=[0x932]
    =================================
    0x498: JUMP v204(0x932)

    Begin block 0x932
    prev=[0x496], succ=[]
    =================================
    0x933: STOP 

}

function initialize(address)() public {
    Begin block 0x229
    prev=[], succ=[0x23b, 0x23f]
    =================================
    0x22a: v22a(0x953) = CONST 
    0x22d: v22d(0x4) = CONST 
    0x230: v230 = CALLDATASIZE 
    0x231: v231 = SUB v230, v22d(0x4)
    0x232: v232(0x20) = CONST 
    0x235: v235 = LT v231, v232(0x20)
    0x236: v236 = ISZERO v235
    0x237: v237(0x23f) = CONST 
    0x23a: JUMPI v237(0x23f), v236

    Begin block 0x23b
    prev=[0x229], succ=[]
    =================================
    0x23b: v23b(0x0) = CONST 
    0x23e: REVERT v23b(0x0), v23b(0x0)

    Begin block 0x23f
    prev=[0x229], succ=[0x4990x229]
    =================================
    0x241: v241 = CALLDATALOAD v22d(0x4)
    0x242: v242(0x1) = CONST 
    0x244: v244(0x1) = CONST 
    0x246: v246(0xa0) = CONST 
    0x248: v248(0x10000000000000000000000000000000000000000) = SHL v246(0xa0), v244(0x1)
    0x249: v249(0xffffffffffffffffffffffffffffffffffffffff) = SUB v248(0x10000000000000000000000000000000000000000), v242(0x1)
    0x24a: v24a = AND v249(0xffffffffffffffffffffffffffffffffffffffff), v241
    0x24b: v24b(0x499) = CONST 
    0x24e: JUMP v24b(0x499)

    Begin block 0x4990x229
    prev=[0x23f], succ=[0x4b20x229, 0x4aa0x229]
    =================================
    0x49a0x229: v22949a(0x0) = CONST 
    0x49c0x229: v22949c = SLOAD v22949a(0x0)
    0x49d0x229: v22949d(0x100) = CONST 
    0x4a10x229: v2294a1 = DIV v22949c, v22949d(0x100)
    0x4a20x229: v2294a2(0xff) = CONST 
    0x4a40x229: v2294a4 = AND v2294a2(0xff), v2294a1
    0x4a60x229: v2294a6(0x4b2) = CONST 
    0x4a90x229: JUMPI v2294a6(0x4b2), v2294a4

    Begin block 0x4b20x229
    prev=[0x4990x229, 0x67cB0x4aa0x229], succ=[0x4c00x229, 0x4b80x229]
    =================================
    0x4b20x229_0x0: v4b2229_0 = PHI v2294a4, v67fV4aa229
    0x4b40x229: v2294b4(0x4c0) = CONST 
    0x4b70x229: JUMPI v2294b4(0x4c0), v4b2229_0

    Begin block 0x4c00x229
    prev=[0x4b20x229, 0x4b80x229], succ=[0x4c50x229, 0x4fb0x229]
    =================================
    0x4c00x229_0x0: v4c0229_0 = PHI v2294bf, v2294a4, v67fV4aa229
    0x4c10x229: v2294c1(0x4fb) = CONST 
    0x4c40x229: JUMPI v2294c1(0x4fb), v4c0229_0

    Begin block 0x4c50x229
    prev=[0x4c00x229], succ=[]
    =================================
    0x4c50x229: v2294c5(0x40) = CONST 
    0x4c70x229: v2294c7 = MLOAD v2294c5(0x40)
    0x4c80x229: v2294c8(0x461bcd) = CONST 
    0x4cc0x229: v2294cc(0xe5) = CONST 
    0x4ce0x229: v2294ce(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2294cc(0xe5), v2294c8(0x461bcd)
    0x4d00x229: MSTORE v2294c7, v2294ce(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x4d10x229: v2294d1(0x4) = CONST 
    0x4d30x229: v2294d3 = ADD v2294d1(0x4), v2294c7
    0x4d60x229: v2294d6(0x20) = CONST 
    0x4d80x229: v2294d8 = ADD v2294d6(0x20), v2294d3
    0x4db0x229: v2294db(0x20) = SUB v2294d8, v2294d3
    0x4dd0x229: MSTORE v2294d3, v2294db(0x20)
    0x4de0x229: v2294de(0x2e) = CONST 
    0x4e10x229: MSTORE v2294d8, v2294de(0x2e)
    0x4e20x229: v2294e2(0x20) = CONST 
    0x4e40x229: v2294e4 = ADD v2294e2(0x20), v2294d8
    0x4e60x229: v2294e6(0x6f2) = CONST 
    0x4e90x229: v2294e9(0x2e) = CONST 
    0x4ec0x229: CODECOPY v2294e4, v2294e6(0x6f2), v2294e9(0x2e)
    0x4ed0x229: v2294ed(0x40) = CONST 
    0x4ef0x229: v2294ef = ADD v2294ed(0x40), v2294e4
    0x4f30x229: v2294f3(0x40) = CONST 
    0x4f50x229: v2294f5 = MLOAD v2294f3(0x40)
    0x4f80x229: v2294f8(0x84) = SUB v2294ef, v2294f5
    0x4fa0x229: REVERT v2294f5, v2294f8(0x84)

    Begin block 0x4fb0x229
    prev=[0x4c00x229], succ=[0x50e0x229, 0x5260x229]
    =================================
    0x4fc0x229: v2294fc(0x0) = CONST 
    0x4fe0x229: v2294fe = SLOAD v2294fc(0x0)
    0x4ff0x229: v2294ff(0x100) = CONST 
    0x5030x229: v229503 = DIV v2294fe, v2294ff(0x100)
    0x5040x229: v229504(0xff) = CONST 
    0x5060x229: v229506 = AND v229504(0xff), v229503
    0x5070x229: v229507 = ISZERO v229506
    0x5090x229: v229509 = ISZERO v229507
    0x50a0x229: v22950a(0x526) = CONST 
    0x50d0x229: JUMPI v22950a(0x526), v229509

    Begin block 0x50e0x229
    prev=[0x4fb0x229], succ=[0x5260x229]
    =================================
    0x50e0x229: v22950e(0x0) = CONST 
    0x5110x229: v229511 = SLOAD v22950e(0x0)
    0x5120x229: v229512(0xff) = CONST 
    0x5140x229: v229514(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v229512(0xff)
    0x5150x229: v229515(0xff00) = CONST 
    0x5180x229: v229518(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v229515(0xff00)
    0x51b0x229: v22951b = AND v229511, v229518(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff)
    0x51c0x229: v22951c(0x100) = CONST 
    0x51f0x229: v22951f = OR v22951c(0x100), v22951b
    0x5200x229: v229520 = AND v22951f, v229514(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)
    0x5210x229: v229521(0x1) = CONST 
    0x5230x229: v229523 = OR v229521(0x1), v229520
    0x5250x229: SSTORE v22950e(0x0), v229523

    Begin block 0x5260x229
    prev=[0x50e0x229, 0x4fb0x229], succ=[0x57c0x229, 0xa5c0x229]
    =================================
    0x5270x229: v229527(0x33) = CONST 
    0x52a0x229: v22952a = SLOAD v229527(0x33)
    0x52b0x229: v22952b(0x1) = CONST 
    0x52d0x229: v22952d(0x1) = CONST 
    0x52f0x229: v22952f(0xa0) = CONST 
    0x5310x229: v229531(0x10000000000000000000000000000000000000000) = SHL v22952f(0xa0), v22952d(0x1)
    0x5320x229: v229532(0xffffffffffffffffffffffffffffffffffffffff) = SUB v229531(0x10000000000000000000000000000000000000000), v22952b(0x1)
    0x5330x229: v229533(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v229532(0xffffffffffffffffffffffffffffffffffffffff)
    0x5340x229: v229534 = AND v229533(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v22952a
    0x5350x229: v229535(0x1) = CONST 
    0x5370x229: v229537(0x1) = CONST 
    0x5390x229: v229539(0xa0) = CONST 
    0x53b0x229: v22953b(0x10000000000000000000000000000000000000000) = SHL v229539(0xa0), v229537(0x1)
    0x53c0x229: v22953c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v22953b(0x10000000000000000000000000000000000000000), v229535(0x1)
    0x53f0x229: v22953f = AND v22953c(0xffffffffffffffffffffffffffffffffffffffff), v24a
    0x5430x229: v229543 = OR v22953f, v229534
    0x5470x229: SSTORE v229527(0x33), v229543
    0x5480x229: v229548(0x40) = CONST 
    0x54a0x229: v22954a = MLOAD v229548(0x40)
    0x54c0x229: v22954c = AND v229543, v22953c(0xffffffffffffffffffffffffffffffffffffffff)
    0x54e0x229: v22954e(0x0) = CONST 
    0x5510x229: v229551(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a) = CONST 
    0x5750x229: LOG3 v22954a, v22954e(0x0), v229551(0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a), v22954e(0x0), v22954c
    0x5770x229: v229577 = ISZERO v229507
    0x5780x229: v229578(0xa5c) = CONST 
    0x57b0x229: JUMPI v229578(0xa5c), v229577

    Begin block 0x57c0x229
    prev=[0x5260x229], succ=[0x953]
    =================================
    0x57c0x229: v22957c(0x0) = CONST 
    0x57f0x229: v22957f = SLOAD v22957c(0x0)
    0x5800x229: v229580(0xff00) = CONST 
    0x5830x229: v229583(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff) = NOT v229580(0xff00)
    0x5840x229: v229584 = AND v229583(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff), v22957f
    0x5860x229: SSTORE v22957c(0x0), v229584
    0x5890x229: JUMP v22a(0x953)

    Begin block 0x953
    prev=[0x57c0x229, 0xa5c0x229], succ=[]
    =================================
    0x954: STOP 

    Begin block 0xa5c0x229
    prev=[0x5260x229], succ=[0x953]
    =================================
    0xa5f0x229: JUMP v22a(0x953)

    Begin block 0x4b80x229
    prev=[0x4b20x229], succ=[0x4c00x229]
    =================================
    0x4b90x229: v2294b9(0x0) = CONST 
    0x4bb0x229: v2294bb = SLOAD v2294b9(0x0)
    0x4bc0x229: v2294bc(0xff) = CONST 
    0x4be0x229: v2294be = AND v2294bc(0xff), v2294bb
    0x4bf0x229: v2294bf = ISZERO v2294be

    Begin block 0x4aa0x229
    prev=[0x4990x229], succ=[0x67cB0x4aa0x229]
    =================================
    0x4ab0x229: v2294ab(0x4b2) = CONST 
    0x4ae0x229: v2294ae(0x67c) = CONST 
    0x4b10x229: JUMP v2294ae(0x67c)

    Begin block 0x67cB0x4aa0x229
    prev=[0x4aa0x229], succ=[0x4b20x229]
    =================================
    0x67dS0x4aa0x229: v67dV4aa229 = ADDRESS 
    0x67eS0x4aa0x229: v67eV4aa229 = EXTCODESIZE v67dV4aa229
    0x67fS0x4aa0x229: v67fV4aa229 = ISZERO v67eV4aa229
    0x681S0x4aa0x229: JUMP v2294ab(0x4b2)

}

function approvePool(address,uint256)() public {
    Begin block 0x24f
    prev=[], succ=[0x261, 0x265]
    =================================
    0x250: v250(0x974) = CONST 
    0x253: v253(0x4) = CONST 
    0x256: v256 = CALLDATASIZE 
    0x257: v257 = SUB v256, v253(0x4)
    0x258: v258(0x40) = CONST 
    0x25b: v25b = LT v257, v258(0x40)
    0x25c: v25c = ISZERO v25b
    0x25d: v25d(0x265) = CONST 
    0x260: JUMPI v25d(0x265), v25c

    Begin block 0x261
    prev=[0x24f], succ=[]
    =================================
    0x261: v261(0x0) = CONST 
    0x264: REVERT v261(0x0), v261(0x0)

    Begin block 0x265
    prev=[0x24f], succ=[0x58a]
    =================================
    0x267: v267(0x1) = CONST 
    0x269: v269(0x1) = CONST 
    0x26b: v26b(0xa0) = CONST 
    0x26d: v26d(0x10000000000000000000000000000000000000000) = SHL v26b(0xa0), v269(0x1)
    0x26e: v26e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v26d(0x10000000000000000000000000000000000000000), v267(0x1)
    0x270: v270 = CALLDATALOAD v253(0x4)
    0x271: v271 = AND v270, v26e(0xffffffffffffffffffffffffffffffffffffffff)
    0x273: v273(0x20) = CONST 
    0x275: v275(0x24) = ADD v273(0x20), v253(0x4)
    0x276: v276 = CALLDATALOAD v275(0x24)
    0x277: v277(0x58a) = CONST 
    0x27a: JUMP v277(0x58a)

    Begin block 0x58a
    prev=[0x265], succ=[0x59d, 0x5a1]
    =================================
    0x58b: v58b(0x33) = CONST 
    0x58d: v58d = SLOAD v58b(0x33)
    0x58e: v58e(0x1) = CONST 
    0x590: v590(0x1) = CONST 
    0x592: v592(0xa0) = CONST 
    0x594: v594(0x10000000000000000000000000000000000000000) = SHL v592(0xa0), v590(0x1)
    0x595: v595(0xffffffffffffffffffffffffffffffffffffffff) = SUB v594(0x10000000000000000000000000000000000000000), v58e(0x1)
    0x596: v596 = AND v595(0xffffffffffffffffffffffffffffffffffffffff), v58d
    0x597: v597 = CALLER 
    0x598: v598 = EQ v597, v596
    0x599: v599(0x5a1) = CONST 
    0x59c: JUMPI v599(0x5a1), v598

    Begin block 0x59d
    prev=[0x58a], succ=[]
    =================================
    0x59d: v59d(0x0) = CONST 
    0x5a0: REVERT v59d(0x0), v59d(0x0)

    Begin block 0x5a1
    prev=[0x58a], succ=[0x5f3, 0x5f7]
    =================================
    0x5a2: v5a2(0x35) = CONST 
    0x5a4: v5a4 = SLOAD v5a2(0x35)
    0x5a5: v5a5(0x40) = CONST 
    0x5a8: v5a8 = MLOAD v5a5(0x40)
    0x5a9: v5a9(0x95ea7b3) = CONST 
    0x5ae: v5ae(0xe0) = CONST 
    0x5b0: v5b0(0x95ea7b300000000000000000000000000000000000000000000000000000000) = SHL v5ae(0xe0), v5a9(0x95ea7b3)
    0x5b2: MSTORE v5a8, v5b0(0x95ea7b300000000000000000000000000000000000000000000000000000000)
    0x5b3: v5b3(0x1) = CONST 
    0x5b5: v5b5(0x1) = CONST 
    0x5b7: v5b7(0xa0) = CONST 
    0x5b9: v5b9(0x10000000000000000000000000000000000000000) = SHL v5b7(0xa0), v5b5(0x1)
    0x5ba: v5ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5b9(0x10000000000000000000000000000000000000000), v5b3(0x1)
    0x5bd: v5bd = AND v5ba(0xffffffffffffffffffffffffffffffffffffffff), v271
    0x5be: v5be(0x4) = CONST 
    0x5c1: v5c1 = ADD v5a8, v5be(0x4)
    0x5c2: MSTORE v5c1, v5bd
    0x5c3: v5c3(0x24) = CONST 
    0x5c6: v5c6 = ADD v5a8, v5c3(0x24)
    0x5c9: MSTORE v5c6, v276
    0x5cb: v5cb = MLOAD v5a5(0x40)
    0x5cf: v5cf = AND v5a4, v5ba(0xffffffffffffffffffffffffffffffffffffffff)
    0x5d1: v5d1(0x95ea7b3) = CONST 
    0x5d7: v5d7(0x44) = CONST 
    0x5db: v5db = ADD v5a8, v5d7(0x44)
    0x5dd: v5dd(0x20) = CONST 
    0x5e4: v5e4(0x0) = SUB v5a8, v5cb
    0x5e5: v5e5(0x44) = ADD v5e4(0x0), v5d7(0x44)
    0x5e7: v5e7(0x0) = CONST 
    0x5eb: v5eb = EXTCODESIZE v5cf
    0x5ec: v5ec = ISZERO v5eb
    0x5ee: v5ee = ISZERO v5ec
    0x5ef: v5ef(0x5f7) = CONST 
    0x5f2: JUMPI v5ef(0x5f7), v5ee

    Begin block 0x5f3
    prev=[0x5a1], succ=[]
    =================================
    0x5f3: v5f3(0x0) = CONST 
    0x5f6: REVERT v5f3(0x0), v5f3(0x0)

    Begin block 0x5f7
    prev=[0x5a1], succ=[0x602, 0x60b]
    =================================
    0x5f9: v5f9 = GAS 
    0x5fa: v5fa = CALL v5f9, v5cf, v5e7(0x0), v5cb, v5e5(0x44), v5cb, v5dd(0x20)
    0x5fb: v5fb = ISZERO v5fa
    0x5fd: v5fd = ISZERO v5fb
    0x5fe: v5fe(0x60b) = CONST 
    0x601: JUMPI v5fe(0x60b), v5fd

    Begin block 0x602
    prev=[0x5f7], succ=[]
    =================================
    0x602: v602 = RETURNDATASIZE 
    0x603: v603(0x0) = CONST 
    0x606: RETURNDATACOPY v603(0x0), v603(0x0), v602
    0x607: v607 = RETURNDATASIZE 
    0x608: v608(0x0) = CONST 
    0x60a: REVERT v608(0x0), v607

    Begin block 0x60b
    prev=[0x5f7], succ=[0x61d, 0x621]
    =================================
    0x610: v610(0x40) = CONST 
    0x612: v612 = MLOAD v610(0x40)
    0x613: v613 = RETURNDATASIZE 
    0x614: v614(0x20) = CONST 
    0x617: v617 = LT v613, v614(0x20)
    0x618: v618 = ISZERO v617
    0x619: v619(0x621) = CONST 
    0x61c: JUMPI v619(0x621), v618

    Begin block 0x61d
    prev=[0x60b], succ=[]
    =================================
    0x61d: v61d(0x0) = CONST 
    0x620: REVERT v61d(0x0), v61d(0x0)

    Begin block 0x621
    prev=[0x60b], succ=[0x974]
    =================================
    0x626: JUMP v250(0x974)

    Begin block 0x974
    prev=[0x621], succ=[]
    =================================
    0x975: STOP 

}

function rewardsToken()() public {
    Begin block 0x27b
    prev=[], succ=[0x627]
    =================================
    0x27c: v27c(0x995) = CONST 
    0x27f: v27f(0x627) = CONST 
    0x282: JUMP v27f(0x627)

    Begin block 0x627
    prev=[0x27b], succ=[0x995]
    =================================
    0x628: v628(0x35) = CONST 
    0x62a: v62a = SLOAD v628(0x35)
    0x62b: v62b(0x1) = CONST 
    0x62d: v62d(0x1) = CONST 
    0x62f: v62f(0xa0) = CONST 
    0x631: v631(0x10000000000000000000000000000000000000000) = SHL v62f(0xa0), v62d(0x1)
    0x632: v632(0xffffffffffffffffffffffffffffffffffffffff) = SUB v631(0x10000000000000000000000000000000000000000), v62b(0x1)
    0x633: v633 = AND v632(0xffffffffffffffffffffffffffffffffffffffff), v62a
    0x635: JUMP v27c(0x995)

    Begin block 0x995
    prev=[0x627], succ=[]
    =================================
    0x996: v996(0x40) = CONST 
    0x999: v999 = MLOAD v996(0x40)
    0x99a: v99a(0x1) = CONST 
    0x99c: v99c(0x1) = CONST 
    0x99e: v99e(0xa0) = CONST 
    0x9a0: v9a0(0x10000000000000000000000000000000000000000) = SHL v99e(0xa0), v99c(0x1)
    0x9a1: v9a1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9a0(0x10000000000000000000000000000000000000000), v99a(0x1)
    0x9a4: v9a4 = AND v633, v9a1(0xffffffffffffffffffffffffffffffffffffffff)
    0x9a6: MSTORE v999, v9a4
    0x9a7: v9a7 = MLOAD v996(0x40)
    0x9ab: v9ab(0x0) = SUB v999, v9a7
    0x9ac: v9ac(0x20) = CONST 
    0x9ae: v9ae(0x20) = ADD v9ac(0x20), v9ab(0x0)
    0x9b0: RETURN v9a7, v9ae(0x20)

}

function setConfig(bytes32,uint256,uint256)() public {
    Begin block 0x283
    prev=[], succ=[0x295, 0x299]
    =================================
    0x284: v284(0x9d0) = CONST 
    0x287: v287(0x4) = CONST 
    0x28a: v28a = CALLDATASIZE 
    0x28b: v28b = SUB v28a, v287(0x4)
    0x28c: v28c(0x60) = CONST 
    0x28f: v28f = LT v28b, v28c(0x60)
    0x290: v290 = ISZERO v28f
    0x291: v291(0x299) = CONST 
    0x294: JUMPI v291(0x299), v290

    Begin block 0x295
    prev=[0x283], succ=[]
    =================================
    0x295: v295(0x0) = CONST 
    0x298: REVERT v295(0x0), v295(0x0)

    Begin block 0x299
    prev=[0x283], succ=[0x636]
    =================================
    0x29c: v29c = CALLDATALOAD v287(0x4)
    0x29e: v29e(0x20) = CONST 
    0x2a1: v2a1(0x24) = ADD v287(0x4), v29e(0x20)
    0x2a2: v2a2 = CALLDATALOAD v2a1(0x24)
    0x2a4: v2a4(0x40) = CONST 
    0x2a6: v2a6(0x44) = ADD v2a4(0x40), v287(0x4)
    0x2a7: v2a7 = CALLDATALOAD v2a6(0x44)
    0x2a8: v2a8(0x636) = CONST 
    0x2ab: JUMP v2a8(0x636)

    Begin block 0x636
    prev=[0x299], succ=[0x649, 0x64d]
    =================================
    0x637: v637(0x33) = CONST 
    0x639: v639 = SLOAD v637(0x33)
    0x63a: v63a(0x1) = CONST 
    0x63c: v63c(0x1) = CONST 
    0x63e: v63e(0xa0) = CONST 
    0x640: v640(0x10000000000000000000000000000000000000000) = SHL v63e(0xa0), v63c(0x1)
    0x641: v641(0xffffffffffffffffffffffffffffffffffffffff) = SUB v640(0x10000000000000000000000000000000000000000), v63a(0x1)
    0x642: v642 = AND v641(0xffffffffffffffffffffffffffffffffffffffff), v639
    0x643: v643 = CALLER 
    0x644: v644 = EQ v643, v642
    0x645: v645(0x64d) = CONST 
    0x648: JUMPI v645(0x64d), v644

    Begin block 0x649
    prev=[0x636], succ=[]
    =================================
    0x649: v649(0x0) = CONST 
    0x64c: REVERT v649(0x0), v649(0x0)

    Begin block 0x64d
    prev=[0x636], succ=[0x6550x283]
    =================================
    0x64e: v64e(0xa7f) = CONST 
    0x653: v653 = XOR v2a2, v29c

    Begin block 0x6550x283
    prev=[0x64d], succ=[0x66b0x283, 0xaa30x283]
    =================================
    0x6560x283: v283656(0x0) = CONST 
    0x65a0x283: MSTORE v283656(0x0), v653
    0x65b0x283: v28365b(0x34) = CONST 
    0x65d0x283: v28365d(0x20) = CONST 
    0x65f0x283: MSTORE v28365d(0x20), v28365b(0x34)
    0x6600x283: v283660(0x40) = CONST 
    0x6630x283: v283663 = SHA3 v283656(0x0), v283660(0x40)
    0x6640x283: v283664 = SLOAD v283663
    0x6660x283: v283666 = EQ v2a7, v283664
    0x6670x283: v283667(0xaa3) = CONST 
    0x66a0x283: JUMPI v283667(0xaa3), v283666

    Begin block 0x66b0x283
    prev=[0x6550x283], succ=[0xa7f]
    =================================
    0x66b0x283: v28366b(0x0) = CONST 
    0x66f0x283: MSTORE v28366b(0x0), v653
    0x6700x283: v283670(0x34) = CONST 
    0x6720x283: v283672(0x20) = CONST 
    0x6740x283: MSTORE v283672(0x20), v283670(0x34)
    0x6750x283: v283675(0x40) = CONST 
    0x6790x283: v283679 = SHA3 v28366b(0x0), v283675(0x40)
    0x67a0x283: SSTORE v283679, v2a7
    0x67b0x283: JUMP v64e(0xa7f)

    Begin block 0xa7f
    prev=[0x66b0x283, 0xaa30x283], succ=[0x9d0]
    =================================
    0xa83: JUMP v284(0x9d0)

    Begin block 0x9d0
    prev=[0xa7f], succ=[]
    =================================
    0x9d1: STOP 

    Begin block 0xaa30x283
    prev=[0x6550x283], succ=[0xa7f]
    =================================
    0xaa60x283: JUMP v64e(0xa7f)

}

function fallback()() public {
    Begin block 0x774
    prev=[], succ=[]
    =================================
    0x775: v775(0x0) = CONST 
    0x778: REVERT v775(0x0), v775(0x0)

}

function governor()() public {
    Begin block 0xd4
    prev=[], succ=[0x2ac]
    =================================
    0xd5: vd5(0x7e0) = CONST 
    0xd8: vd8(0x2ac) = CONST 
    0xdb: JUMP vd8(0x2ac)

    Begin block 0x2ac
    prev=[0xd4], succ=[0x7e0]
    =================================
    0x2ad: v2ad(0x33) = CONST 
    0x2af: v2af = SLOAD v2ad(0x33)
    0x2b0: v2b0(0x1) = CONST 
    0x2b2: v2b2(0x1) = CONST 
    0x2b4: v2b4(0xa0) = CONST 
    0x2b6: v2b6(0x10000000000000000000000000000000000000000) = SHL v2b4(0xa0), v2b2(0x1)
    0x2b7: v2b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2b6(0x10000000000000000000000000000000000000000), v2b0(0x1)
    0x2b8: v2b8 = AND v2b7(0xffffffffffffffffffffffffffffffffffffffff), v2af
    0x2ba: JUMP vd5(0x7e0)

    Begin block 0x7e0
    prev=[0x2ac], succ=[]
    =================================
    0x7e1: v7e1(0x40) = CONST 
    0x7e4: v7e4 = MLOAD v7e1(0x40)
    0x7e5: v7e5(0x1) = CONST 
    0x7e7: v7e7(0x1) = CONST 
    0x7e9: v7e9(0xa0) = CONST 
    0x7eb: v7eb(0x10000000000000000000000000000000000000000) = SHL v7e9(0xa0), v7e7(0x1)
    0x7ec: v7ec(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7eb(0x10000000000000000000000000000000000000000), v7e5(0x1)
    0x7ef: v7ef = AND v2b8, v7ec(0xffffffffffffffffffffffffffffffffffffffff)
    0x7f1: MSTORE v7e4, v7ef
    0x7f2: v7f2 = MLOAD v7e1(0x40)
    0x7f6: v7f6(0x0) = SUB v7e4, v7f2
    0x7f7: v7f7(0x20) = CONST 
    0x7f9: v7f9(0x20) = ADD v7f7(0x20), v7f6(0x0)
    0x7fb: RETURN v7f2, v7f9(0x20)

}

function setConfig(bytes32,uint256)() public {
    Begin block 0xf8
    prev=[], succ=[0x10a, 0x10e]
    =================================
    0xf9: vf9(0x81b) = CONST 
    0xfc: vfc(0x4) = CONST 
    0xff: vff = CALLDATASIZE 
    0x100: v100 = SUB vff, vfc(0x4)
    0x101: v101(0x40) = CONST 
    0x104: v104 = LT v100, v101(0x40)
    0x105: v105 = ISZERO v104
    0x106: v106(0x10e) = CONST 
    0x109: JUMPI v106(0x10e), v105

    Begin block 0x10a
    prev=[0xf8], succ=[]
    =================================
    0x10a: v10a(0x0) = CONST 
    0x10d: REVERT v10a(0x0), v10a(0x0)

    Begin block 0x10e
    prev=[0xf8], succ=[0x2bb]
    =================================
    0x111: v111 = CALLDATALOAD vfc(0x4)
    0x113: v113(0x20) = CONST 
    0x115: v115(0x24) = ADD v113(0x20), vfc(0x4)
    0x116: v116 = CALLDATALOAD v115(0x24)
    0x117: v117(0x2bb) = CONST 
    0x11a: JUMP v117(0x2bb)

    Begin block 0x2bb
    prev=[0x10e], succ=[0x2ce, 0x2d2]
    =================================
    0x2bc: v2bc(0x33) = CONST 
    0x2be: v2be = SLOAD v2bc(0x33)
    0x2bf: v2bf(0x1) = CONST 
    0x2c1: v2c1(0x1) = CONST 
    0x2c3: v2c3(0xa0) = CONST 
    0x2c5: v2c5(0x10000000000000000000000000000000000000000) = SHL v2c3(0xa0), v2c1(0x1)
    0x2c6: v2c6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2c5(0x10000000000000000000000000000000000000000), v2bf(0x1)
    0x2c7: v2c7 = AND v2c6(0xffffffffffffffffffffffffffffffffffffffff), v2be
    0x2c8: v2c8 = CALLER 
    0x2c9: v2c9 = EQ v2c8, v2c7
    0x2ca: v2ca(0x2d2) = CONST 
    0x2cd: JUMPI v2ca(0x2d2), v2c9

    Begin block 0x2ce
    prev=[0x2bb], succ=[]
    =================================
    0x2ce: v2ce(0x0) = CONST 
    0x2d1: REVERT v2ce(0x0), v2ce(0x0)

    Begin block 0x2d2
    prev=[0x2bb], succ=[0x655B0x2d2]
    =================================
    0x2d3: v2d3(0x9f1) = CONST 
    0x2d8: v2d8(0x655) = CONST 
    0x2db: JUMP v2d8(0x655), v116, v111, v2d3(0x9f1)

    Begin block 0x655B0x2d2
    prev=[0x2d2], succ=[0x66b0x655B0x2d2, 0xaa30x655B0x2d2]
    =================================
    0x656S0x2d2: v656V2d2(0x0) = CONST 
    0x65aS0x2d2: MSTORE v656V2d2(0x0), v111
    0x65bS0x2d2: v65bV2d2(0x34) = CONST 
    0x65dS0x2d2: v65dV2d2(0x20) = CONST 
    0x65fS0x2d2: MSTORE v65dV2d2(0x20), v65bV2d2(0x34)
    0x660S0x2d2: v660V2d2(0x40) = CONST 
    0x663S0x2d2: v663V2d2 = SHA3 v656V2d2(0x0), v660V2d2(0x40)
    0x664S0x2d2: v664V2d2 = SLOAD v663V2d2
    0x666S0x2d2: v666V2d2 = EQ v116, v664V2d2
    0x667S0x2d2: v667V2d2(0xaa3) = CONST 
    0x66aS0x2d2: JUMPI v667V2d2(0xaa3), v666V2d2

    Begin block 0x66b0x655B0x2d2
    prev=[0x655B0x2d2], succ=[0x9f1]
    =================================
    0x66b0x655S0x2d2: v65566bV2d2(0x0) = CONST 
    0x66f0x655S0x2d2: MSTORE v65566bV2d2(0x0), v111
    0x6700x655S0x2d2: v655670V2d2(0x34) = CONST 
    0x6720x655S0x2d2: v655672V2d2(0x20) = CONST 
    0x6740x655S0x2d2: MSTORE v655672V2d2(0x20), v655670V2d2(0x34)
    0x6750x655S0x2d2: v655675V2d2(0x40) = CONST 
    0x6790x655S0x2d2: v655679V2d2 = SHA3 v65566bV2d2(0x0), v655675V2d2(0x40)
    0x67a0x655S0x2d2: SSTORE v655679V2d2, v116
    0x67b0x655S0x2d2: JUMP v2d3(0x9f1)

    Begin block 0x9f1
    prev=[0x66b0x655B0x2d2, 0xaa30x655B0x2d2], succ=[0x81b]
    =================================
    0x9f4: JUMP vf9(0x81b)

    Begin block 0x81b
    prev=[0x9f1], succ=[]
    =================================
    0x81c: STOP 

    Begin block 0xaa30x655B0x2d2
    prev=[0x655B0x2d2], succ=[0x9f1]
    =================================
    0xaa60x655S0x2d2: JUMP v2d3(0x9f1)

}

