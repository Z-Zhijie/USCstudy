function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x66b]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x65f: v65f(0x66b) = CONST 
    0x660: JUMPI v65f(0x66b), v8

    Begin block 0xd
    prev=[0x0], succ=[0x66e, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x26782247) = CONST 
    0x19: v19 = EQ v14(0x26782247), v12
    0x661: v661(0x66e) = CONST 
    0x662: JUMPI v661(0x66e), v19

    Begin block 0x66e
    prev=[0xd], succ=[]
    =================================
    0x66f: v66f(0xc5) = CONST 
    0x670: CALLPRIVATE v66f(0xc5)

    Begin block 0x1e
    prev=[0xd], succ=[0x671, 0x29]
    =================================
    0x1f: v1f(0x452a9320) = CONST 
    0x24: v24 = EQ v1f(0x452a9320), v12
    0x663: v663(0x671) = CONST 
    0x664: JUMPI v663(0x671), v24

    Begin block 0x671
    prev=[0x1e], succ=[]
    =================================
    0x672: v672(0xf0) = CONST 
    0x673: CALLPRIVATE v672(0xf0)

    Begin block 0x29
    prev=[0x1e], succ=[0x674, 0x34]
    =================================
    0x2a: v2a(0x5c60da1b) = CONST 
    0x2f: v2f = EQ v2a(0x5c60da1b), v12
    0x665: v665(0x674) = CONST 
    0x666: JUMPI v665(0x674), v2f

    Begin block 0x674
    prev=[0x29], succ=[]
    =================================
    0x675: v675(0x105) = CONST 
    0x676: CALLPRIVATE v675(0x105)

    Begin block 0x34
    prev=[0x29], succ=[0x3f, 0x677]
    =================================
    0x35: v35(0xbb913f41) = CONST 
    0x3a: v3a = EQ v35(0xbb913f41), v12
    0x667: v667(0x677) = CONST 
    0x668: JUMPI v667(0x677), v3a

    Begin block 0x3f
    prev=[0x34], succ=[0x66b, 0x67a]
    =================================
    0x40: v40(0xf851a440) = CONST 
    0x45: v45 = EQ v40(0xf851a440), v12
    0x669: v669(0x67a) = CONST 
    0x66a: JUMPI v669(0x67a), v45

    Begin block 0x66b
    prev=[0x0, 0x3f], succ=[]
    =================================
    0x66c: v66c(0x4a) = CONST 
    0x66d: CALLPRIVATE v66c(0x4a)

    Begin block 0x67a
    prev=[0x3f], succ=[]
    =================================
    0x67b: v67b(0x13c) = CONST 
    0x67c: CALLPRIVATE v67b(0x13c)

    Begin block 0x677
    prev=[0x34], succ=[]
    =================================
    0x678: v678(0x11a) = CONST 
    0x679: CALLPRIVATE v678(0x11a)

}

function implementation()() public {
    Begin block 0x105
    prev=[], succ=[0x10d, 0x111]
    =================================
    0x106: v106 = CALLVALUE 
    0x108: v108 = ISZERO v106
    0x109: v109(0x111) = CONST 
    0x10c: JUMPI v109(0x111), v108

    Begin block 0x10d
    prev=[0x105], succ=[]
    =================================
    0x10d: v10d(0x0) = CONST 
    0x110: REVERT v10d(0x0), v10d(0x0)

    Begin block 0x111
    prev=[0x105], succ=[0x16f]
    =================================
    0x113: v113(0x4cf) = CONST 
    0x116: v116(0x16f) = CONST 
    0x119: JUMP v116(0x16f)

    Begin block 0x16f
    prev=[0x111], succ=[0x4cf]
    =================================
    0x170: v170(0x2) = CONST 
    0x172: v172 = SLOAD v170(0x2)
    0x173: v173(0x1) = CONST 
    0x175: v175(0x1) = CONST 
    0x177: v177(0xa0) = CONST 
    0x179: v179(0x10000000000000000000000000000000000000000) = SHL v177(0xa0), v175(0x1)
    0x17a: v17a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v179(0x10000000000000000000000000000000000000000), v173(0x1)
    0x17b: v17b = AND v17a(0xffffffffffffffffffffffffffffffffffffffff), v172
    0x17d: JUMP v113(0x4cf)

    Begin block 0x4cf
    prev=[0x16f], succ=[0x383B0x4cf]
    =================================
    0x4d0: v4d0(0x40) = CONST 
    0x4d2: v4d2 = MLOAD v4d0(0x40)
    0x4d3: v4d3(0xe7) = CONST 
    0x4d8: v4d8(0x383) = CONST 
    0x4db: JUMP v4d8(0x383)

    Begin block 0x383B0x4cf
    prev=[0x4cf], succ=[0x27eB0x383B0x4cf]
    =================================
    0x384S0x4cf: v384V4cf(0x20) = CONST 
    0x387S0x4cf: v387V4cf = ADD v4d2, v384V4cf(0x20)
    0x388S0x4cf: v388V4cf(0x5ea) = CONST 
    0x38dS0x4cf: v38dV4cf(0x27e) = CONST 
    0x390S0x4cf: JUMP v38dV4cf(0x27e), v17b, v4d2, v388V4cf(0x5ea)

    Begin block 0x27eB0x383B0x4cf
    prev=[0x383B0x4cf], succ=[0x3e1B0x27eB0x383B0x4cf]
    =================================
    0x27fS0x383S0x4cf: v27fV383V4cf(0x287) = CONST 
    0x283S0x383S0x4cf: v283V383V4cf(0x3e1) = CONST 
    0x286S0x383S0x4cf: JUMP v283V383V4cf(0x3e1)

    Begin block 0x3e1B0x27eB0x383B0x4cf
    prev=[0x27eB0x383B0x4cf], succ=[0x659B0x27eB0x383B0x4cf]
    =================================
    0x3e2S0x27eS0x383S0x4cf: v3e2V27eV383V4cf(0x0) = CONST 
    0x3e4S0x27eS0x383S0x4cf: v3e4V27eV383V4cf(0x1) = CONST 
    0x3e6S0x27eS0x383S0x4cf: v3e6V27eV383V4cf(0x1) = CONST 
    0x3e8S0x27eS0x383S0x4cf: v3e8V27eV383V4cf(0xa0) = CONST 
    0x3eaS0x27eS0x383S0x4cf: v3eaV27eV383V4cf(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV383V4cf(0xa0), v3e6V27eV383V4cf(0x1)
    0x3ebS0x27eS0x383S0x4cf: v3ebV27eV383V4cf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV383V4cf(0x10000000000000000000000000000000000000000), v3e4V27eV383V4cf(0x1)
    0x3edS0x27eS0x383S0x4cf: v3edV27eV383V4cf = AND v17b, v3ebV27eV383V4cf(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x383S0x4cf: v3eeV27eV383V4cf(0x659) = CONST 
    0x3f1S0x27eS0x383S0x4cf: JUMP v3eeV27eV383V4cf(0x659)

    Begin block 0x659B0x27eB0x383B0x4cf
    prev=[0x3e1B0x27eB0x383B0x4cf], succ=[0x287B0x383B0x4cf]
    =================================
    0x65eS0x27eS0x383S0x4cf: JUMP v27fV383V4cf(0x287)

    Begin block 0x287B0x383B0x4cf
    prev=[0x659B0x27eB0x383B0x4cf], succ=[0x5eaB0x4cf]
    =================================
    0x289S0x383S0x4cf: MSTORE v4d2, v3edV27eV383V4cf
    0x28cS0x383S0x4cf: JUMP v388V4cf(0x5ea)

    Begin block 0x5eaB0x4cf
    prev=[0x287B0x383B0x4cf], succ=[0xe70x105]
    =================================
    0x5efS0x4cf: JUMP v4d3(0xe7)

    Begin block 0xe70x105
    prev=[0x5eaB0x4cf], succ=[]
    =================================
    0xe80x105: v105e8(0x40) = CONST 
    0xea0x105: v105ea = MLOAD v105e8(0x40)
    0xed0x105: v105ed(0x20) = SUB v387V4cf, v105ea
    0xef0x105: RETURN v105ea, v105ed(0x20)

}

function _setImplementation(address)() public {
    Begin block 0x11a
    prev=[], succ=[0x122, 0x126]
    =================================
    0x11b: v11b = CALLVALUE 
    0x11d: v11d = ISZERO v11b
    0x11e: v11e(0x126) = CONST 
    0x121: JUMPI v11e(0x126), v11d

    Begin block 0x122
    prev=[0x11a], succ=[]
    =================================
    0x122: v122(0x0) = CONST 
    0x125: REVERT v122(0x0), v122(0x0)

    Begin block 0x126
    prev=[0x11a], succ=[0x258B0x126]
    =================================
    0x128: v128(0x13a) = CONST 
    0x12b: v12b(0x135) = CONST 
    0x12e: v12e = CALLDATASIZE 
    0x12f: v12f(0x4) = CONST 
    0x131: v131(0x258) = CONST 
    0x134: JUMP v131(0x258)

    Begin block 0x258B0x126
    prev=[0x126], succ=[0x266B0x126, 0x26aB0x126]
    =================================
    0x259S0x126: v259V126(0x0) = CONST 
    0x25bS0x126: v25bV126(0x20) = CONST 
    0x25fS0x126: v25fV126 = SUB v12e, v12f(0x4)
    0x260S0x126: v260V126 = SLT v25fV126, v25bV126(0x20)
    0x261S0x126: v261V126 = ISZERO v260V126
    0x262S0x126: v262V126(0x26a) = CONST 
    0x265S0x126: JUMPI v262V126(0x26a), v261V126

    Begin block 0x266B0x126
    prev=[0x258B0x126], succ=[]
    =================================
    0x266S0x126: v266V126(0x0) = CONST 
    0x269S0x126: REVERT v266V126(0x0), v266V126(0x0)

    Begin block 0x26aB0x126
    prev=[0x258B0x126], succ=[0x247B0x26aB0x126]
    =================================
    0x26bS0x126: v26bV126(0x0) = CONST 
    0x26dS0x126: v26dV126(0x59c) = CONST 
    0x272S0x126: v272V126(0x247) = CONST 
    0x275S0x126: JUMP v272V126(0x247)

    Begin block 0x247B0x26aB0x126
    prev=[0x26aB0x126], succ=[0x3feB0x247B0x26aB0x126]
    =================================
    0x249S0x26aS0x126: v249V26aV126 = CALLDATALOAD v12f(0x4)
    0x24aS0x26aS0x126: v24aV26aV126(0x577) = CONST 
    0x24eS0x26aS0x126: v24eV26aV126(0x3fe) = CONST 
    0x251S0x26aS0x126: JUMP v24eV26aV126(0x3fe), v249V26aV126, v24aV26aV126(0x577)

    Begin block 0x3feB0x247B0x26aB0x126
    prev=[0x247B0x26aB0x126], succ=[0x3e1B0x3feB0x247B0x26aB0x126]
    =================================
    0x3ffS0x247S0x26aS0x126: v3ffV247V26aV126(0x407) = CONST 
    0x403S0x247S0x26aS0x126: v403V247V26aV126(0x3e1) = CONST 
    0x406S0x247S0x26aS0x126: JUMP v403V247V26aV126(0x3e1)

    Begin block 0x3e1B0x3feB0x247B0x26aB0x126
    prev=[0x3feB0x247B0x26aB0x126], succ=[0x659B0x3feB0x247B0x26aB0x126]
    =================================
    0x3e2S0x3feS0x247S0x26aS0x126: v3e2V3feV247V26aV126(0x0) = CONST 
    0x3e4S0x3feS0x247S0x26aS0x126: v3e4V3feV247V26aV126(0x1) = CONST 
    0x3e6S0x3feS0x247S0x26aS0x126: v3e6V3feV247V26aV126(0x1) = CONST 
    0x3e8S0x3feS0x247S0x26aS0x126: v3e8V3feV247V26aV126(0xa0) = CONST 
    0x3eaS0x3feS0x247S0x26aS0x126: v3eaV3feV247V26aV126(0x10000000000000000000000000000000000000000) = SHL v3e8V3feV247V26aV126(0xa0), v3e6V3feV247V26aV126(0x1)
    0x3ebS0x3feS0x247S0x26aS0x126: v3ebV3feV247V26aV126(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV3feV247V26aV126(0x10000000000000000000000000000000000000000), v3e4V3feV247V26aV126(0x1)
    0x3edS0x3feS0x247S0x26aS0x126: v3edV3feV247V26aV126 = AND v249V26aV126, v3ebV3feV247V26aV126(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x3feS0x247S0x26aS0x126: v3eeV3feV247V26aV126(0x659) = CONST 
    0x3f1S0x3feS0x247S0x26aS0x126: JUMP v3eeV3feV247V26aV126(0x659)

    Begin block 0x659B0x3feB0x247B0x26aB0x126
    prev=[0x3e1B0x3feB0x247B0x26aB0x126], succ=[0x407B0x247B0x26aB0x126]
    =================================
    0x65eS0x3feS0x247S0x26aS0x126: JUMP v3ffV247V26aV126(0x407)

    Begin block 0x407B0x247B0x26aB0x126
    prev=[0x659B0x3feB0x247B0x26aB0x126], succ=[0x40eB0x247B0x26aB0x126, 0x412B0x247B0x26aB0x126]
    =================================
    0x409S0x247S0x26aS0x126: v409V247V26aV126 = EQ v249V26aV126, v3edV3feV247V26aV126
    0x40aS0x247S0x26aS0x126: v40aV247V26aV126(0x412) = CONST 
    0x40dS0x247S0x26aS0x126: JUMPI v40aV247V26aV126(0x412), v409V247V26aV126

    Begin block 0x40eB0x247B0x26aB0x126
    prev=[0x407B0x247B0x26aB0x126], succ=[]
    =================================
    0x40eS0x247S0x26aS0x126: v40eV247V26aV126(0x0) = CONST 
    0x411S0x247S0x26aS0x126: REVERT v40eV247V26aV126(0x0), v40eV247V26aV126(0x0)

    Begin block 0x412B0x247B0x26aB0x126
    prev=[0x407B0x247B0x26aB0x126], succ=[0x577B0x26aB0x126]
    =================================
    0x414S0x247S0x26aS0x126: JUMP v24aV26aV126(0x577)

    Begin block 0x577B0x26aB0x126
    prev=[0x412B0x247B0x26aB0x126], succ=[0x59cB0x126]
    =================================
    0x57cS0x26aS0x126: JUMP v26dV126(0x59c)

    Begin block 0x59cB0x126
    prev=[0x577B0x26aB0x126], succ=[0x135]
    =================================
    0x5a3S0x126: JUMP v12b(0x135)

    Begin block 0x135
    prev=[0x59cB0x126], succ=[0x17e]
    =================================
    0x136: v136(0x17e) = CONST 
    0x139: JUMP v136(0x17e)

    Begin block 0x17e
    prev=[0x135], succ=[0x191, 0x1b1]
    =================================
    0x17f: v17f(0x0) = CONST 
    0x181: v181 = SLOAD v17f(0x0)
    0x182: v182(0x1) = CONST 
    0x184: v184(0x1) = CONST 
    0x186: v186(0xa0) = CONST 
    0x188: v188(0x10000000000000000000000000000000000000000) = SHL v186(0xa0), v184(0x1)
    0x189: v189(0xffffffffffffffffffffffffffffffffffffffff) = SUB v188(0x10000000000000000000000000000000000000000), v182(0x1)
    0x18a: v18a = AND v189(0xffffffffffffffffffffffffffffffffffffffff), v181
    0x18b: v18b = CALLER 
    0x18c: v18c = EQ v18b, v18a
    0x18d: v18d(0x1b1) = CONST 
    0x190: JUMPI v18d(0x1b1), v18c

    Begin block 0x191
    prev=[0x17e], succ=[0x3c3B0x191]
    =================================
    0x191: v191(0x40) = CONST 
    0x193: v193 = MLOAD v191(0x40)
    0x194: v194(0x461bcd) = CONST 
    0x198: v198(0xe5) = CONST 
    0x19a: v19a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v198(0xe5), v194(0x461bcd)
    0x19c: MSTORE v193, v19a(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x19d: v19d(0x4) = CONST 
    0x19f: v19f = ADD v19d(0x4), v193
    0x1a0: v1a0(0x527) = CONST 
    0x1a4: v1a4(0x3c3) = CONST 
    0x1a7: JUMP v1a4(0x3c3)

    Begin block 0x3c3B0x191
    prev=[0x191], succ=[0x31eB0x191]
    =================================
    0x3c4S0x191: v3c4V191(0x20) = CONST 
    0x3c8S0x191: MSTORE v19f, v3c4V191(0x20)
    0x3caS0x191: v3caV191 = ADD v19f, v3c4V191(0x20)
    0x3cbS0x191: v3cbV191(0x634) = CONST 
    0x3cfS0x191: v3cfV191(0x31e) = CONST 
    0x3d2S0x191: JUMP v3cfV191(0x31e)

    Begin block 0x31eB0x191
    prev=[0x3c3B0x191], succ=[0x3d8B0x31eB0x191]
    =================================
    0x31fS0x191: v31fV191(0x0) = CONST 
    0x321S0x191: v321V191(0x32b) = CONST 
    0x324S0x191: v324V191(0x36) = CONST 
    0x327S0x191: v327V191(0x3d8) = CONST 
    0x32aS0x191: JUMP v327V191(0x3d8)

    Begin block 0x3d8B0x31eB0x191
    prev=[0x31eB0x191], succ=[0x32bB0x191]
    =================================
    0x3dbS0x31eS0x191: MSTORE v3caV191, v324V191(0x36)
    0x3dcS0x31eS0x191: v3dcV31eV191(0x20) = CONST 
    0x3deS0x31eS0x191: v3deV31eV191 = ADD v3dcV31eV191(0x20), v3caV191
    0x3e0S0x31eS0x191: JUMP v321V191(0x32b)

    Begin block 0x32bB0x191
    prev=[0x3d8B0x31eB0x191], succ=[0x634B0x191]
    =================================
    0x32cS0x191: v32cV191(0x476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c) = CONST 
    0x34eS0x191: MSTORE v3deV31eV191, v32cV191(0x476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c)
    0x34fS0x191: v34fV191(0x656d656e746174696f6e3a2061646d696e206f6e6c79) = CONST 
    0x366S0x191: v366V191(0x50) = CONST 
    0x368S0x191: v368V191(0x656d656e746174696f6e3a2061646d696e206f6e6c7900000000000000000000) = SHL v366V191(0x50), v34fV191(0x656d656e746174696f6e3a2061646d696e206f6e6c79)
    0x369S0x191: v369V191(0x20) = CONST 
    0x36cS0x191: v36cV191 = ADD v3deV31eV191, v369V191(0x20)
    0x36dS0x191: MSTORE v36cV191, v368V191(0x656d656e746174696f6e3a2061646d696e206f6e6c7900000000000000000000)
    0x36eS0x191: v36eV191(0x40) = CONST 
    0x370S0x191: v370V191 = ADD v36eV191(0x40), v3deV31eV191
    0x375S0x191: JUMP v3cbV191(0x634)

    Begin block 0x634B0x191
    prev=[0x32bB0x191], succ=[0x527]
    =================================
    0x639S0x191: JUMP v1a0(0x527)

    Begin block 0x527
    prev=[0x634B0x191], succ=[]
    =================================
    0x528: v528(0x40) = CONST 
    0x52a: v52a = MLOAD v528(0x40)
    0x52d: v52d(0x84) = SUB v370V191, v52a
    0x52f: REVERT v52a, v52d(0x84)

    Begin block 0x1b1
    prev=[0x17e], succ=[0x1c0, 0x1d7]
    =================================
    0x1b2: v1b2(0x1) = CONST 
    0x1b4: v1b4(0x1) = CONST 
    0x1b6: v1b6(0xa0) = CONST 
    0x1b8: v1b8(0x10000000000000000000000000000000000000000) = SHL v1b6(0xa0), v1b4(0x1)
    0x1b9: v1b9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b8(0x10000000000000000000000000000000000000000), v1b2(0x1)
    0x1bb: v1bb = AND v249V26aV126, v1b9(0xffffffffffffffffffffffffffffffffffffffff)
    0x1bc: v1bc(0x1d7) = CONST 
    0x1bf: JUMPI v1bc(0x1d7), v1bb

    Begin block 0x1c0
    prev=[0x1b1], succ=[0x3b3B0x1c0]
    =================================
    0x1c0: v1c0(0x40) = CONST 
    0x1c2: v1c2 = MLOAD v1c0(0x40)
    0x1c3: v1c3(0x461bcd) = CONST 
    0x1c7: v1c7(0xe5) = CONST 
    0x1c9: v1c9(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1c7(0xe5), v1c3(0x461bcd)
    0x1cb: MSTORE v1c2, v1c9(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x1cc: v1cc(0x4) = CONST 
    0x1ce: v1ce = ADD v1cc(0x4), v1c2
    0x1cf: v1cf(0x54f) = CONST 
    0x1d3: v1d3(0x3b3) = CONST 
    0x1d6: JUMP v1d3(0x3b3)

    Begin block 0x3b3B0x1c0
    prev=[0x1c0], succ=[0x2acB0x1c0]
    =================================
    0x3b4S0x1c0: v3b4V1c0(0x20) = CONST 
    0x3b8S0x1c0: MSTORE v1ce, v3b4V1c0(0x20)
    0x3baS0x1c0: v3baV1c0 = ADD v1ce, v3b4V1c0(0x20)
    0x3bbS0x1c0: v3bbV1c0(0x60f) = CONST 
    0x3bfS0x1c0: v3bfV1c0(0x2ac) = CONST 
    0x3c2S0x1c0: JUMP v3bfV1c0(0x2ac)

    Begin block 0x2acB0x1c0
    prev=[0x3b3B0x1c0], succ=[0x3d8B0x2acB0x1c0]
    =================================
    0x2adS0x1c0: v2adV1c0(0x0) = CONST 
    0x2afS0x1c0: v2afV1c0(0x2b9) = CONST 
    0x2b2S0x1c0: v2b2V1c0(0x4a) = CONST 
    0x2b5S0x1c0: v2b5V1c0(0x3d8) = CONST 
    0x2b8S0x1c0: JUMP v2b5V1c0(0x3d8)

    Begin block 0x3d8B0x2acB0x1c0
    prev=[0x2acB0x1c0], succ=[0x2b9B0x1c0]
    =================================
    0x3dbS0x2acS0x1c0: MSTORE v3baV1c0, v2b2V1c0(0x4a)
    0x3dcS0x2acS0x1c0: v3dcV2acV1c0(0x20) = CONST 
    0x3deS0x2acS0x1c0: v3deV2acV1c0 = ADD v3dcV2acV1c0(0x20), v3baV1c0
    0x3e0S0x2acS0x1c0: JUMP v2afV1c0(0x2b9)

    Begin block 0x2b9B0x1c0
    prev=[0x3d8B0x2acB0x1c0], succ=[0x60fB0x1c0]
    =================================
    0x2baS0x1c0: v2baV1c0(0x476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c) = CONST 
    0x2dcS0x1c0: MSTORE v3deV2acV1c0, v2baV1c0(0x476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c)
    0x2ddS0x1c0: v2ddV1c0(0x656d656e746174696f6e3a20696e76616c696420696d706c656d656e74617469) = CONST 
    0x2feS0x1c0: v2feV1c0(0x20) = CONST 
    0x301S0x1c0: v301V1c0 = ADD v3deV2acV1c0, v2feV1c0(0x20)
    0x302S0x1c0: MSTORE v301V1c0, v2ddV1c0(0x656d656e746174696f6e3a20696e76616c696420696d706c656d656e74617469)
    0x303S0x1c0: v303V1c0(0x6f6e2061646472657373) = CONST 
    0x30eS0x1c0: v30eV1c0(0xb0) = CONST 
    0x310S0x1c0: v310V1c0(0x6f6e206164647265737300000000000000000000000000000000000000000000) = SHL v30eV1c0(0xb0), v303V1c0(0x6f6e2061646472657373)
    0x311S0x1c0: v311V1c0(0x40) = CONST 
    0x314S0x1c0: v314V1c0 = ADD v3deV2acV1c0, v311V1c0(0x40)
    0x315S0x1c0: MSTORE v314V1c0, v310V1c0(0x6f6e206164647265737300000000000000000000000000000000000000000000)
    0x316S0x1c0: v316V1c0(0x60) = CONST 
    0x318S0x1c0: v318V1c0 = ADD v316V1c0(0x60), v3deV2acV1c0
    0x31dS0x1c0: JUMP v3bbV1c0(0x60f)

    Begin block 0x60fB0x1c0
    prev=[0x2b9B0x1c0], succ=[0x54f]
    =================================
    0x614S0x1c0: JUMP v1cf(0x54f)

    Begin block 0x54f
    prev=[0x60fB0x1c0], succ=[]
    =================================
    0x550: v550(0x40) = CONST 
    0x552: v552 = MLOAD v550(0x40)
    0x555: v555(0xa4) = SUB v318V1c0, v552
    0x557: REVERT v552, v555(0xa4)

    Begin block 0x1d7
    prev=[0x1b1], succ=[0x391B0x1d7]
    =================================
    0x1d8: v1d8(0x2) = CONST 
    0x1db: v1db = SLOAD v1d8(0x2)
    0x1dc: v1dc(0x1) = CONST 
    0x1de: v1de(0x1) = CONST 
    0x1e0: v1e0(0xa0) = CONST 
    0x1e2: v1e2(0x10000000000000000000000000000000000000000) = SHL v1e0(0xa0), v1de(0x1)
    0x1e3: v1e3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e2(0x10000000000000000000000000000000000000000), v1dc(0x1)
    0x1e6: v1e6 = AND v1e3(0xffffffffffffffffffffffffffffffffffffffff), v249V26aV126
    0x1e7: v1e7(0x1) = CONST 
    0x1e9: v1e9(0x1) = CONST 
    0x1eb: v1eb(0xa0) = CONST 
    0x1ed: v1ed(0x10000000000000000000000000000000000000000) = SHL v1eb(0xa0), v1e9(0x1)
    0x1ee: v1ee(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1ed(0x10000000000000000000000000000000000000000), v1e7(0x1)
    0x1ef: v1ef(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1ee(0xffffffffffffffffffffffffffffffffffffffff)
    0x1f1: v1f1 = AND v1db, v1ef(0xffffffffffffffffffffffff0000000000000000000000000000000000000000)
    0x1f2: v1f2 = OR v1f1, v1e6
    0x1f6: SSTORE v1d8(0x2), v1f2
    0x1f7: v1f7(0x40) = CONST 
    0x1f9: v1f9 = MLOAD v1f7(0x40)
    0x1fc: v1fc = AND v1e3(0xffffffffffffffffffffffffffffffffffffffff), v1db
    0x1fe: v1fe(0xd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a) = CONST 
    0x220: v220(0x22c) = CONST 
    0x226: v226 = AND v1f2, v1e3(0xffffffffffffffffffffffffffffffffffffffff)
    0x228: v228(0x391) = CONST 
    0x22b: JUMP v228(0x391)

    Begin block 0x391B0x1d7
    prev=[0x1d7], succ=[0x27eB0x391B0x1d7]
    =================================
    0x392S0x1d7: v392V1d7(0x40) = CONST 
    0x395S0x1d7: v395V1d7 = ADD v1f9, v392V1d7(0x40)
    0x396S0x1d7: v396V1d7(0x39f) = CONST 
    0x39bS0x1d7: v39bV1d7(0x27e) = CONST 
    0x39eS0x1d7: JUMP v39bV1d7(0x27e), v1fc, v1f9, v396V1d7(0x39f)

    Begin block 0x27eB0x391B0x1d7
    prev=[0x391B0x1d7], succ=[0x3e1B0x27eB0x391B0x1d7]
    =================================
    0x27fS0x391S0x1d7: v27fV391V1d7(0x287) = CONST 
    0x283S0x391S0x1d7: v283V391V1d7(0x3e1) = CONST 
    0x286S0x391S0x1d7: JUMP v283V391V1d7(0x3e1)

    Begin block 0x3e1B0x27eB0x391B0x1d7
    prev=[0x27eB0x391B0x1d7], succ=[0x659B0x27eB0x391B0x1d7]
    =================================
    0x3e2S0x27eS0x391S0x1d7: v3e2V27eV391V1d7(0x0) = CONST 
    0x3e4S0x27eS0x391S0x1d7: v3e4V27eV391V1d7(0x1) = CONST 
    0x3e6S0x27eS0x391S0x1d7: v3e6V27eV391V1d7(0x1) = CONST 
    0x3e8S0x27eS0x391S0x1d7: v3e8V27eV391V1d7(0xa0) = CONST 
    0x3eaS0x27eS0x391S0x1d7: v3eaV27eV391V1d7(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV391V1d7(0xa0), v3e6V27eV391V1d7(0x1)
    0x3ebS0x27eS0x391S0x1d7: v3ebV27eV391V1d7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV391V1d7(0x10000000000000000000000000000000000000000), v3e4V27eV391V1d7(0x1)
    0x3edS0x27eS0x391S0x1d7: v3edV27eV391V1d7 = AND v1fc, v3ebV27eV391V1d7(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x391S0x1d7: v3eeV27eV391V1d7(0x659) = CONST 
    0x3f1S0x27eS0x391S0x1d7: JUMP v3eeV27eV391V1d7(0x659)

    Begin block 0x659B0x27eB0x391B0x1d7
    prev=[0x3e1B0x27eB0x391B0x1d7], succ=[0x287B0x391B0x1d7]
    =================================
    0x65eS0x27eS0x391S0x1d7: JUMP v27fV391V1d7(0x287)

    Begin block 0x287B0x391B0x1d7
    prev=[0x659B0x27eB0x391B0x1d7], succ=[0x39fB0x1d7]
    =================================
    0x289S0x391S0x1d7: MSTORE v1f9, v3edV27eV391V1d7
    0x28cS0x391S0x1d7: JUMP v396V1d7(0x39f)

    Begin block 0x39fB0x1d7
    prev=[0x287B0x391B0x1d7], succ=[0x27eB0x39fB0x1d7]
    =================================
    0x3a0S0x1d7: v3a0V1d7(0x3ac) = CONST 
    0x3a3S0x1d7: v3a3V1d7(0x20) = CONST 
    0x3a6S0x1d7: v3a6V1d7 = ADD v1f9, v3a3V1d7(0x20)
    0x3a8S0x1d7: v3a8V1d7(0x27e) = CONST 
    0x3abS0x1d7: JUMP v3a8V1d7(0x27e), v226, v3a6V1d7, v3a0V1d7(0x3ac)

    Begin block 0x27eB0x39fB0x1d7
    prev=[0x39fB0x1d7], succ=[0x3e1B0x27eB0x39fB0x1d7]
    =================================
    0x27fS0x39fS0x1d7: v27fV39fV1d7(0x287) = CONST 
    0x283S0x39fS0x1d7: v283V39fV1d7(0x3e1) = CONST 
    0x286S0x39fS0x1d7: JUMP v283V39fV1d7(0x3e1)

    Begin block 0x3e1B0x27eB0x39fB0x1d7
    prev=[0x27eB0x39fB0x1d7], succ=[0x659B0x27eB0x39fB0x1d7]
    =================================
    0x3e2S0x27eS0x39fS0x1d7: v3e2V27eV39fV1d7(0x0) = CONST 
    0x3e4S0x27eS0x39fS0x1d7: v3e4V27eV39fV1d7(0x1) = CONST 
    0x3e6S0x27eS0x39fS0x1d7: v3e6V27eV39fV1d7(0x1) = CONST 
    0x3e8S0x27eS0x39fS0x1d7: v3e8V27eV39fV1d7(0xa0) = CONST 
    0x3eaS0x27eS0x39fS0x1d7: v3eaV27eV39fV1d7(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV39fV1d7(0xa0), v3e6V27eV39fV1d7(0x1)
    0x3ebS0x27eS0x39fS0x1d7: v3ebV27eV39fV1d7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV39fV1d7(0x10000000000000000000000000000000000000000), v3e4V27eV39fV1d7(0x1)
    0x3edS0x27eS0x39fS0x1d7: v3edV27eV39fV1d7 = AND v226, v3ebV27eV39fV1d7(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x39fS0x1d7: v3eeV27eV39fV1d7(0x659) = CONST 
    0x3f1S0x27eS0x39fS0x1d7: JUMP v3eeV27eV39fV1d7(0x659)

    Begin block 0x659B0x27eB0x39fB0x1d7
    prev=[0x3e1B0x27eB0x39fB0x1d7], succ=[0x287B0x39fB0x1d7]
    =================================
    0x65eS0x27eS0x39fS0x1d7: JUMP v27fV39fV1d7(0x287)

    Begin block 0x287B0x39fB0x1d7
    prev=[0x659B0x27eB0x39fB0x1d7], succ=[0x3acB0x1d7]
    =================================
    0x289S0x39fS0x1d7: MSTORE v3a6V1d7, v3edV27eV39fV1d7
    0x28cS0x39fS0x1d7: JUMP v3a0V1d7(0x3ac)

    Begin block 0x3acB0x1d7
    prev=[0x287B0x39fB0x1d7], succ=[0x22c]
    =================================
    0x3b2S0x1d7: JUMP v220(0x22c)

    Begin block 0x22c
    prev=[0x3acB0x1d7], succ=[0x13a]
    =================================
    0x22d: v22d(0x40) = CONST 
    0x22f: v22f = MLOAD v22d(0x40)
    0x232: v232(0x40) = SUB v395V1d7, v22f
    0x234: LOG1 v22f, v232(0x40), v1fe(0xd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a)
    0x237: JUMP v128(0x13a)

    Begin block 0x13a
    prev=[0x22c], succ=[]
    =================================
    0x13b: STOP 

}

function admin()() public {
    Begin block 0x13c
    prev=[], succ=[0x144, 0x148]
    =================================
    0x13d: v13d = CALLVALUE 
    0x13f: v13f = ISZERO v13d
    0x140: v140(0x148) = CONST 
    0x143: JUMPI v140(0x148), v13f

    Begin block 0x144
    prev=[0x13c], succ=[]
    =================================
    0x144: v144(0x0) = CONST 
    0x147: REVERT v144(0x0), v144(0x0)

    Begin block 0x148
    prev=[0x13c], succ=[0x238]
    =================================
    0x14a: v14a(0x4fb) = CONST 
    0x14d: v14d(0x238) = CONST 
    0x150: JUMP v14d(0x238)

    Begin block 0x238
    prev=[0x148], succ=[0x4fb]
    =================================
    0x239: v239(0x0) = CONST 
    0x23b: v23b = SLOAD v239(0x0)
    0x23c: v23c(0x1) = CONST 
    0x23e: v23e(0x1) = CONST 
    0x240: v240(0xa0) = CONST 
    0x242: v242(0x10000000000000000000000000000000000000000) = SHL v240(0xa0), v23e(0x1)
    0x243: v243(0xffffffffffffffffffffffffffffffffffffffff) = SUB v242(0x10000000000000000000000000000000000000000), v23c(0x1)
    0x244: v244 = AND v243(0xffffffffffffffffffffffffffffffffffffffff), v23b
    0x246: JUMP v14a(0x4fb)

    Begin block 0x4fb
    prev=[0x238], succ=[0x383B0x4fb]
    =================================
    0x4fc: v4fc(0x40) = CONST 
    0x4fe: v4fe = MLOAD v4fc(0x40)
    0x4ff: v4ff(0xe7) = CONST 
    0x504: v504(0x383) = CONST 
    0x507: JUMP v504(0x383)

    Begin block 0x383B0x4fb
    prev=[0x4fb], succ=[0x27eB0x383B0x4fb]
    =================================
    0x384S0x4fb: v384V4fb(0x20) = CONST 
    0x387S0x4fb: v387V4fb = ADD v4fe, v384V4fb(0x20)
    0x388S0x4fb: v388V4fb(0x5ea) = CONST 
    0x38dS0x4fb: v38dV4fb(0x27e) = CONST 
    0x390S0x4fb: JUMP v38dV4fb(0x27e), v244, v4fe, v388V4fb(0x5ea)

    Begin block 0x27eB0x383B0x4fb
    prev=[0x383B0x4fb], succ=[0x3e1B0x27eB0x383B0x4fb]
    =================================
    0x27fS0x383S0x4fb: v27fV383V4fb(0x287) = CONST 
    0x283S0x383S0x4fb: v283V383V4fb(0x3e1) = CONST 
    0x286S0x383S0x4fb: JUMP v283V383V4fb(0x3e1)

    Begin block 0x3e1B0x27eB0x383B0x4fb
    prev=[0x27eB0x383B0x4fb], succ=[0x659B0x27eB0x383B0x4fb]
    =================================
    0x3e2S0x27eS0x383S0x4fb: v3e2V27eV383V4fb(0x0) = CONST 
    0x3e4S0x27eS0x383S0x4fb: v3e4V27eV383V4fb(0x1) = CONST 
    0x3e6S0x27eS0x383S0x4fb: v3e6V27eV383V4fb(0x1) = CONST 
    0x3e8S0x27eS0x383S0x4fb: v3e8V27eV383V4fb(0xa0) = CONST 
    0x3eaS0x27eS0x383S0x4fb: v3eaV27eV383V4fb(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV383V4fb(0xa0), v3e6V27eV383V4fb(0x1)
    0x3ebS0x27eS0x383S0x4fb: v3ebV27eV383V4fb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV383V4fb(0x10000000000000000000000000000000000000000), v3e4V27eV383V4fb(0x1)
    0x3edS0x27eS0x383S0x4fb: v3edV27eV383V4fb = AND v244, v3ebV27eV383V4fb(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x383S0x4fb: v3eeV27eV383V4fb(0x659) = CONST 
    0x3f1S0x27eS0x383S0x4fb: JUMP v3eeV27eV383V4fb(0x659)

    Begin block 0x659B0x27eB0x383B0x4fb
    prev=[0x3e1B0x27eB0x383B0x4fb], succ=[0x287B0x383B0x4fb]
    =================================
    0x65eS0x27eS0x383S0x4fb: JUMP v27fV383V4fb(0x287)

    Begin block 0x287B0x383B0x4fb
    prev=[0x659B0x27eB0x383B0x4fb], succ=[0x5eaB0x4fb]
    =================================
    0x289S0x383S0x4fb: MSTORE v4fe, v3edV27eV383V4fb
    0x28cS0x383S0x4fb: JUMP v388V4fb(0x5ea)

    Begin block 0x5eaB0x4fb
    prev=[0x287B0x383B0x4fb], succ=[0xe70x13c]
    =================================
    0x5efS0x4fb: JUMP v4ff(0xe7)

    Begin block 0xe70x13c
    prev=[0x5eaB0x4fb], succ=[]
    =================================
    0xe80x13c: v13ce8(0x40) = CONST 
    0xea0x13c: v13cea = MLOAD v13ce8(0x40)
    0xed0x13c: v13ced(0x20) = SUB v387V4fb, v13cea
    0xef0x13c: RETURN v13cea, v13ced(0x20)

}

function fallback()() public {
    Begin block 0x4a
    prev=[], succ=[0x376B0x4a]
    =================================
    0x4b: v4b(0x2) = CONST 
    0x4d: v4d = SLOAD v4b(0x2)
    0x4e: v4e(0x40) = CONST 
    0x50: v50 = MLOAD v4e(0x40)
    0x51: v51(0x0) = CONST 
    0x54: v54(0x1) = CONST 
    0x56: v56(0x1) = CONST 
    0x58: v58(0xa0) = CONST 
    0x5a: v5a(0x10000000000000000000000000000000000000000) = SHL v58(0xa0), v56(0x1)
    0x5b: v5b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5a(0x10000000000000000000000000000000000000000), v54(0x1)
    0x5c: v5c = AND v5b(0xffffffffffffffffffffffffffffffffffffffff), v4d
    0x5e: v5e(0x6a) = CONST 
    0x64: v64 = CALLDATASIZE 
    0x66: v66(0x376) = CONST 
    0x69: JUMP v66(0x376)

    Begin block 0x376B0x4a
    prev=[0x4a], succ=[0x28dB0x4a]
    =================================
    0x377S0x4a: v377V4a(0x0) = CONST 
    0x379S0x4a: v379V4a(0x5c3) = CONST 
    0x37fS0x4a: v37fV4a(0x28d) = CONST 
    0x382S0x4a: JUMP v37fV4a(0x28d)

    Begin block 0x28dB0x4a
    prev=[0x376B0x4a], succ=[0x3d3B0x28dB0x4a]
    =================================
    0x28eS0x4a: v28eV4a(0x0) = CONST 
    0x290S0x4a: v290V4a(0x299) = CONST 
    0x295S0x4a: v295V4a(0x3d3) = CONST 
    0x298S0x4a: JUMP v295V4a(0x3d3)

    Begin block 0x3d3B0x28dB0x4a
    prev=[0x28dB0x4a], succ=[0x299B0x4a]
    =================================
    0x3d7S0x28dS0x4a: JUMP v290V4a(0x299)

    Begin block 0x299B0x4a
    prev=[0x3d3B0x28dB0x4a], succ=[0x3f2B0x4a]
    =================================
    0x29cS0x4a: v29cV4a(0x2a6) = CONST 
    0x2a2S0x4a: v2a2V4a(0x3f2) = CONST 
    0x2a5S0x4a: JUMP v2a2V4a(0x3f2)

    Begin block 0x3f2B0x4a
    prev=[0x299B0x4a], succ=[0x2a6B0x4a]
    =================================
    0x3f6S0x4a: CALLDATACOPY v50, v51(0x0), v64
    0x3f8S0x4a: v3f8V4a(0x0) = CONST 
    0x3fbS0x4a: v3fbV4a = ADD v64, v50
    0x3fcS0x4a: MSTORE v3fbV4a, v3f8V4a(0x0)
    0x3fdS0x4a: JUMP v29cV4a(0x2a6)

    Begin block 0x2a6B0x4a
    prev=[0x3f2B0x4a], succ=[0x5c3B0x4a]
    =================================
    0x2a9S0x4a: v2a9V4a = ADD v64, v50
    0x2abS0x4a: JUMP v379V4a(0x5c3)

    Begin block 0x5c3B0x4a
    prev=[0x2a6B0x4a], succ=[0x6a]
    =================================
    0x5caS0x4a: JUMP v5e(0x6a)

    Begin block 0x6a
    prev=[0x5c3B0x4a], succ=[0x84, 0xa5]
    =================================
    0x6b: v6b(0x0) = CONST 
    0x6d: v6d(0x40) = CONST 
    0x6f: v6f = MLOAD v6d(0x40)
    0x72: v72 = SUB v2a9V4a, v6f
    0x75: v75 = GAS 
    0x76: v76 = DELEGATECALL v75, v5c, v6f, v72, v6f, v6b(0x0)
    0x7a: v7a = RETURNDATASIZE 
    0x7c: v7c(0x0) = CONST 
    0x7f: v7f = EQ v7a, v7c(0x0)
    0x80: v80(0xa5) = CONST 
    0x83: JUMPI v80(0xa5), v7f

    Begin block 0x84
    prev=[0x6a], succ=[0xaa]
    =================================
    0x84: v84(0x40) = CONST 
    0x86: v86 = MLOAD v84(0x40)
    0x89: v89(0x1f) = CONST 
    0x8b: v8b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v89(0x1f)
    0x8c: v8c(0x3f) = CONST 
    0x8e: v8e = RETURNDATASIZE 
    0x8f: v8f = ADD v8e, v8c(0x3f)
    0x90: v90 = AND v8f, v8b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x92: v92 = ADD v86, v90
    0x93: v93(0x40) = CONST 
    0x95: MSTORE v93(0x40), v92
    0x96: v96 = RETURNDATASIZE 
    0x98: MSTORE v86, v96
    0x99: v99 = RETURNDATASIZE 
    0x9a: v9a(0x0) = CONST 
    0x9c: v9c(0x20) = CONST 
    0x9f: v9f = ADD v86, v9c(0x20)
    0xa0: RETURNDATACOPY v9f, v9a(0x0), v99
    0xa1: va1(0xaa) = CONST 
    0xa4: JUMP va1(0xaa)

    Begin block 0xaa
    prev=[0x84, 0xa5], succ=[0xbe, 0xc1]
    =================================
    0xaf: vaf(0x40) = CONST 
    0xb1: vb1 = MLOAD vaf(0x40)
    0xb2: vb2 = RETURNDATASIZE 
    0xb3: vb3(0x0) = CONST 
    0xb6: RETURNDATACOPY vb1, vb3(0x0), vb2
    0xb9: vb9 = ISZERO v76
    0xba: vba(0xc1) = CONST 
    0xbd: JUMPI vba(0xc1), vb9

    Begin block 0xbe
    prev=[0xaa], succ=[]
    =================================
    0xbe: vbe = RETURNDATASIZE 
    0xc0: RETURN vb1, vbe

    Begin block 0xc1
    prev=[0xaa], succ=[]
    =================================
    0xc2: vc2 = RETURNDATASIZE 
    0xc4: REVERT vb1, vc2

    Begin block 0xa5
    prev=[0x6a], succ=[0xaa]
    =================================
    0xa6: va6(0x60) = CONST 

}

function pendingAdmin()() public {
    Begin block 0xc5
    prev=[], succ=[0xcd, 0xd1]
    =================================
    0xc6: vc6 = CALLVALUE 
    0xc8: vc8 = ISZERO vc6
    0xc9: vc9(0xd1) = CONST 
    0xcc: JUMPI vc9(0xd1), vc8

    Begin block 0xcd
    prev=[0xc5], succ=[]
    =================================
    0xcd: vcd(0x0) = CONST 
    0xd0: REVERT vcd(0x0), vcd(0x0)

    Begin block 0xd1
    prev=[0xc5], succ=[0x151]
    =================================
    0xd3: vd3(0x477) = CONST 
    0xd6: vd6(0x151) = CONST 
    0xd9: JUMP vd6(0x151)

    Begin block 0x151
    prev=[0xd1], succ=[0x477]
    =================================
    0x152: v152(0x1) = CONST 
    0x154: v154 = SLOAD v152(0x1)
    0x155: v155(0x1) = CONST 
    0x157: v157(0x1) = CONST 
    0x159: v159(0xa0) = CONST 
    0x15b: v15b(0x10000000000000000000000000000000000000000) = SHL v159(0xa0), v157(0x1)
    0x15c: v15c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15b(0x10000000000000000000000000000000000000000), v155(0x1)
    0x15d: v15d = AND v15c(0xffffffffffffffffffffffffffffffffffffffff), v154
    0x15f: JUMP vd3(0x477)

    Begin block 0x477
    prev=[0x151], succ=[0x383B0x477]
    =================================
    0x478: v478(0x40) = CONST 
    0x47a: v47a = MLOAD v478(0x40)
    0x47b: v47b(0xe7) = CONST 
    0x480: v480(0x383) = CONST 
    0x483: JUMP v480(0x383)

    Begin block 0x383B0x477
    prev=[0x477], succ=[0x27eB0x383B0x477]
    =================================
    0x384S0x477: v384V477(0x20) = CONST 
    0x387S0x477: v387V477 = ADD v47a, v384V477(0x20)
    0x388S0x477: v388V477(0x5ea) = CONST 
    0x38dS0x477: v38dV477(0x27e) = CONST 
    0x390S0x477: JUMP v38dV477(0x27e), v15d, v47a, v388V477(0x5ea)

    Begin block 0x27eB0x383B0x477
    prev=[0x383B0x477], succ=[0x3e1B0x27eB0x383B0x477]
    =================================
    0x27fS0x383S0x477: v27fV383V477(0x287) = CONST 
    0x283S0x383S0x477: v283V383V477(0x3e1) = CONST 
    0x286S0x383S0x477: JUMP v283V383V477(0x3e1)

    Begin block 0x3e1B0x27eB0x383B0x477
    prev=[0x27eB0x383B0x477], succ=[0x659B0x27eB0x383B0x477]
    =================================
    0x3e2S0x27eS0x383S0x477: v3e2V27eV383V477(0x0) = CONST 
    0x3e4S0x27eS0x383S0x477: v3e4V27eV383V477(0x1) = CONST 
    0x3e6S0x27eS0x383S0x477: v3e6V27eV383V477(0x1) = CONST 
    0x3e8S0x27eS0x383S0x477: v3e8V27eV383V477(0xa0) = CONST 
    0x3eaS0x27eS0x383S0x477: v3eaV27eV383V477(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV383V477(0xa0), v3e6V27eV383V477(0x1)
    0x3ebS0x27eS0x383S0x477: v3ebV27eV383V477(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV383V477(0x10000000000000000000000000000000000000000), v3e4V27eV383V477(0x1)
    0x3edS0x27eS0x383S0x477: v3edV27eV383V477 = AND v15d, v3ebV27eV383V477(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x383S0x477: v3eeV27eV383V477(0x659) = CONST 
    0x3f1S0x27eS0x383S0x477: JUMP v3eeV27eV383V477(0x659)

    Begin block 0x659B0x27eB0x383B0x477
    prev=[0x3e1B0x27eB0x383B0x477], succ=[0x287B0x383B0x477]
    =================================
    0x65eS0x27eS0x383S0x477: JUMP v27fV383V477(0x287)

    Begin block 0x287B0x383B0x477
    prev=[0x659B0x27eB0x383B0x477], succ=[0x5eaB0x477]
    =================================
    0x289S0x383S0x477: MSTORE v47a, v3edV27eV383V477
    0x28cS0x383S0x477: JUMP v388V477(0x5ea)

    Begin block 0x5eaB0x477
    prev=[0x287B0x383B0x477], succ=[0xe70xc5]
    =================================
    0x5efS0x477: JUMP v47b(0xe7)

    Begin block 0xe70xc5
    prev=[0x5eaB0x477], succ=[]
    =================================
    0xe80xc5: vc5e8(0x40) = CONST 
    0xea0xc5: vc5ea = MLOAD vc5e8(0x40)
    0xed0xc5: vc5ed(0x20) = SUB v387V477, vc5ea
    0xef0xc5: RETURN vc5ea, vc5ed(0x20)

}

function guardian()() public {
    Begin block 0xf0
    prev=[], succ=[0xf8, 0xfc]
    =================================
    0xf1: vf1 = CALLVALUE 
    0xf3: vf3 = ISZERO vf1
    0xf4: vf4(0xfc) = CONST 
    0xf7: JUMPI vf4(0xfc), vf3

    Begin block 0xf8
    prev=[0xf0], succ=[]
    =================================
    0xf8: vf8(0x0) = CONST 
    0xfb: REVERT vf8(0x0), vf8(0x0)

    Begin block 0xfc
    prev=[0xf0], succ=[0x160]
    =================================
    0xfe: vfe(0x4a3) = CONST 
    0x101: v101(0x160) = CONST 
    0x104: JUMP v101(0x160)

    Begin block 0x160
    prev=[0xfc], succ=[0x4a3]
    =================================
    0x161: v161(0x3) = CONST 
    0x163: v163 = SLOAD v161(0x3)
    0x164: v164(0x1) = CONST 
    0x166: v166(0x1) = CONST 
    0x168: v168(0xa0) = CONST 
    0x16a: v16a(0x10000000000000000000000000000000000000000) = SHL v168(0xa0), v166(0x1)
    0x16b: v16b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16a(0x10000000000000000000000000000000000000000), v164(0x1)
    0x16c: v16c = AND v16b(0xffffffffffffffffffffffffffffffffffffffff), v163
    0x16e: JUMP vfe(0x4a3)

    Begin block 0x4a3
    prev=[0x160], succ=[0x383B0x4a3]
    =================================
    0x4a4: v4a4(0x40) = CONST 
    0x4a6: v4a6 = MLOAD v4a4(0x40)
    0x4a7: v4a7(0xe7) = CONST 
    0x4ac: v4ac(0x383) = CONST 
    0x4af: JUMP v4ac(0x383)

    Begin block 0x383B0x4a3
    prev=[0x4a3], succ=[0x27eB0x383B0x4a3]
    =================================
    0x384S0x4a3: v384V4a3(0x20) = CONST 
    0x387S0x4a3: v387V4a3 = ADD v4a6, v384V4a3(0x20)
    0x388S0x4a3: v388V4a3(0x5ea) = CONST 
    0x38dS0x4a3: v38dV4a3(0x27e) = CONST 
    0x390S0x4a3: JUMP v38dV4a3(0x27e), v16c, v4a6, v388V4a3(0x5ea)

    Begin block 0x27eB0x383B0x4a3
    prev=[0x383B0x4a3], succ=[0x3e1B0x27eB0x383B0x4a3]
    =================================
    0x27fS0x383S0x4a3: v27fV383V4a3(0x287) = CONST 
    0x283S0x383S0x4a3: v283V383V4a3(0x3e1) = CONST 
    0x286S0x383S0x4a3: JUMP v283V383V4a3(0x3e1)

    Begin block 0x3e1B0x27eB0x383B0x4a3
    prev=[0x27eB0x383B0x4a3], succ=[0x659B0x27eB0x383B0x4a3]
    =================================
    0x3e2S0x27eS0x383S0x4a3: v3e2V27eV383V4a3(0x0) = CONST 
    0x3e4S0x27eS0x383S0x4a3: v3e4V27eV383V4a3(0x1) = CONST 
    0x3e6S0x27eS0x383S0x4a3: v3e6V27eV383V4a3(0x1) = CONST 
    0x3e8S0x27eS0x383S0x4a3: v3e8V27eV383V4a3(0xa0) = CONST 
    0x3eaS0x27eS0x383S0x4a3: v3eaV27eV383V4a3(0x10000000000000000000000000000000000000000) = SHL v3e8V27eV383V4a3(0xa0), v3e6V27eV383V4a3(0x1)
    0x3ebS0x27eS0x383S0x4a3: v3ebV27eV383V4a3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3eaV27eV383V4a3(0x10000000000000000000000000000000000000000), v3e4V27eV383V4a3(0x1)
    0x3edS0x27eS0x383S0x4a3: v3edV27eV383V4a3 = AND v16c, v3ebV27eV383V4a3(0xffffffffffffffffffffffffffffffffffffffff)
    0x3eeS0x27eS0x383S0x4a3: v3eeV27eV383V4a3(0x659) = CONST 
    0x3f1S0x27eS0x383S0x4a3: JUMP v3eeV27eV383V4a3(0x659)

    Begin block 0x659B0x27eB0x383B0x4a3
    prev=[0x3e1B0x27eB0x383B0x4a3], succ=[0x287B0x383B0x4a3]
    =================================
    0x65eS0x27eS0x383S0x4a3: JUMP v27fV383V4a3(0x287)

    Begin block 0x287B0x383B0x4a3
    prev=[0x659B0x27eB0x383B0x4a3], succ=[0x5eaB0x4a3]
    =================================
    0x289S0x383S0x4a3: MSTORE v4a6, v3edV27eV383V4a3
    0x28cS0x383S0x4a3: JUMP v388V4a3(0x5ea)

    Begin block 0x5eaB0x4a3
    prev=[0x287B0x383B0x4a3], succ=[0xe70xf0]
    =================================
    0x5efS0x4a3: JUMP v4a7(0xe7)

    Begin block 0xe70xf0
    prev=[0x5eaB0x4a3], succ=[]
    =================================
    0xe80xf0: vf0e8(0x40) = CONST 
    0xea0xf0: vf0ea = MLOAD vf0e8(0x40)
    0xed0xf0: vf0ed(0x20) = SUB v387V4a3, vf0ea
    0xef0xf0: RETURN vf0ea, vf0ed(0x20)

}

