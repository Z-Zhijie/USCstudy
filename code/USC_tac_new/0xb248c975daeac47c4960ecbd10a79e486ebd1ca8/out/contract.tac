function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xc, 0x10]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5 = CALLVALUE 
    0x7: v7 = ISZERO v5
    0x8: v8(0x10) = CONST 
    0xb: JUMPI v8(0x10), v7

    Begin block 0xc
    prev=[0x0], succ=[]
    =================================
    0xc: vc(0x0) = CONST 
    0xf: REVERT vc(0x0), vc(0x0)

    Begin block 0x10
    prev=[0x0], succ=[0x1a, 0x9f8]
    =================================
    0x12: v12(0x4) = CONST 
    0x14: v14 = CALLDATASIZE 
    0x15: v15 = LT v14, v12(0x4)
    0x9dc: v9dc(0x9f8) = CONST 
    0x9dd: JUMPI v9dc(0x9f8), v15

    Begin block 0x1a
    prev=[0x10], succ=[0x8c, 0x2b]
    =================================
    0x1a: v1a(0x0) = CONST 
    0x1c: v1c = CALLDATALOAD v1a(0x0)
    0x1d: v1d(0xe0) = CONST 
    0x1f: v1f = SHR v1d(0xe0), v1c
    0x21: v21(0x6691cb3d) = CONST 
    0x26: v26 = GT v21(0x6691cb3d), v1f
    0x27: v27(0x8c) = CONST 
    0x2a: JUMPI v27(0x8c), v26

    Begin block 0x8c
    prev=[0x1a], succ=[0x9fb, 0x98]
    =================================
    0x8e: v8e(0x77f22b7) = CONST 
    0x93: v93 = EQ v8e(0x77f22b7), v1f
    0x9ec: v9ec(0x9fb) = CONST 
    0x9ed: JUMPI v9ec(0x9fb), v93

    Begin block 0x9fb
    prev=[0x8c], succ=[]
    =================================
    0x9fc: v9fc(0xd4) = CONST 
    0x9fd: CALLPRIVATE v9fc(0xd4)

    Begin block 0x98
    prev=[0x8c], succ=[0xa3, 0x9fe]
    =================================
    0x99: v99(0x3eaaf86b) = CONST 
    0x9e: v9e = EQ v99(0x3eaaf86b), v1f
    0x9ee: v9ee(0x9fe) = CONST 
    0x9ef: JUMPI v9ee(0x9fe), v9e

    Begin block 0xa3
    prev=[0x98], succ=[0xa01, 0xae]
    =================================
    0xa4: va4(0x430bf08a) = CONST 
    0xa9: va9 = EQ va4(0x430bf08a), v1f
    0x9f0: v9f0(0xa01) = CONST 
    0x9f1: JUMPI v9f0(0xa01), va9

    Begin block 0xa01
    prev=[0xa3], succ=[]
    =================================
    0xa02: va02(0xf8) = CONST 
    0xa03: CALLPRIVATE va02(0xf8)

    Begin block 0xae
    prev=[0xa3], succ=[0xa04, 0xb9]
    =================================
    0xaf: vaf(0x456ee286) = CONST 
    0xb4: vb4 = EQ vaf(0x456ee286), v1f
    0x9f2: v9f2(0xa04) = CONST 
    0x9f3: JUMPI v9f2(0xa04), vb4

    Begin block 0xa04
    prev=[0xae], succ=[]
    =================================
    0xa05: va05(0x123) = CONST 
    0xa06: CALLPRIVATE va05(0x123)

    Begin block 0xb9
    prev=[0xae], succ=[0xa07, 0xc4]
    =================================
    0xba: vba(0x51cfd6fe) = CONST 
    0xbf: vbf = EQ vba(0x51cfd6fe), v1f
    0x9f4: v9f4(0xa07) = CONST 
    0x9f5: JUMPI v9f4(0xa07), vbf

    Begin block 0xa07
    prev=[0xb9], succ=[]
    =================================
    0xa08: va08(0x153) = CONST 
    0xa09: CALLPRIVATE va08(0x153)

    Begin block 0xc4
    prev=[0xb9], succ=[0x9f8, 0xa0a]
    =================================
    0xc5: vc5(0x609350cd) = CONST 
    0xca: vca = EQ vc5(0x609350cd), v1f
    0x9f6: v9f6(0xa0a) = CONST 
    0x9f7: JUMPI v9f6(0xa0a), vca

    Begin block 0x9f8
    prev=[0x10, 0xc4], succ=[]
    =================================
    0x9f9: v9f9(0xcf) = CONST 
    0x9fa: CALLPRIVATE v9f9(0xcf)

    Begin block 0xa0a
    prev=[0xc4], succ=[]
    =================================
    0xa0b: va0b(0x15d) = CONST 
    0xa0c: CALLPRIVATE va0b(0x15d)

    Begin block 0x9fe
    prev=[0x98], succ=[]
    =================================
    0x9ff: v9ff(0xef) = CONST 
    0xa00: CALLPRIVATE v9ff(0xef)

    Begin block 0x2b
    prev=[0x1a], succ=[0x66, 0x36]
    =================================
    0x2c: v2c(0x95ef84b9) = CONST 
    0x31: v31 = GT v2c(0x95ef84b9), v1f
    0x32: v32(0x66) = CONST 
    0x35: JUMPI v32(0x66), v31

    Begin block 0x66
    prev=[0x2b], succ=[0xa0d, 0x72]
    =================================
    0x68: v68(0x6691cb3d) = CONST 
    0x6d: v6d = EQ v68(0x6691cb3d), v1f
    0x9e6: v9e6(0xa0d) = CONST 
    0x9e7: JUMPI v9e6(0xa0d), v6d

    Begin block 0xa0d
    prev=[0x66], succ=[]
    =================================
    0xa0e: va0e(0x17d) = CONST 
    0xa0f: CALLPRIVATE va0e(0x17d)

    Begin block 0x72
    prev=[0x66], succ=[0xa10, 0x7d]
    =================================
    0x73: v73(0x7a46a9c5) = CONST 
    0x78: v78 = EQ v73(0x7a46a9c5), v1f
    0x9e8: v9e8(0xa10) = CONST 
    0x9e9: JUMPI v9e8(0xa10), v78

    Begin block 0xa10
    prev=[0x72], succ=[]
    =================================
    0xa11: va11(0x185) = CONST 
    0xa12: CALLPRIVATE va11(0x185)

    Begin block 0x7d
    prev=[0x72], succ=[0x88, 0xa13]
    =================================
    0x7e: v7e(0x7d0d66ff) = CONST 
    0x83: v83 = EQ v7e(0x7d0d66ff), v1f
    0x9ea: v9ea(0xa13) = CONST 
    0x9eb: JUMPI v9ea(0xa13), v83

    Begin block 0x88
    prev=[0x7d], succ=[]
    =================================
    0x88: v88(0x0) = CONST 
    0x8b: REVERT v88(0x0), v88(0x0)

    Begin block 0xa13
    prev=[0x7d], succ=[]
    =================================
    0xa14: va14(0x18d) = CONST 
    0xa15: CALLPRIVATE va14(0x18d)

    Begin block 0x36
    prev=[0x2b], succ=[0xa16, 0x41]
    =================================
    0x37: v37(0x95ef84b9) = CONST 
    0x3c: v3c = EQ v37(0x95ef84b9), v1f
    0x9de: v9de(0xa16) = CONST 
    0x9df: JUMPI v9de(0xa16), v3c

    Begin block 0xa16
    prev=[0x36], succ=[]
    =================================
    0xa17: va17(0x195) = CONST 
    0xa18: CALLPRIVATE va17(0x195)

    Begin block 0x41
    prev=[0x36], succ=[0xa19, 0x4c]
    =================================
    0x42: v42(0xe5c4fffe) = CONST 
    0x47: v47 = EQ v42(0xe5c4fffe), v1f
    0x9e0: v9e0(0xa19) = CONST 
    0x9e1: JUMPI v9e0(0xa19), v47

    Begin block 0xa19
    prev=[0x41], succ=[]
    =================================
    0xa1a: va1a(0x1b5) = CONST 
    0xa1b: CALLPRIVATE va1a(0x1b5)

    Begin block 0x4c
    prev=[0x41], succ=[0xa1c, 0x57]
    =================================
    0x4d: v4d(0xe696393a) = CONST 
    0x52: v52 = EQ v4d(0xe696393a), v1f
    0x9e2: v9e2(0xa1c) = CONST 
    0x9e3: JUMPI v9e2(0xa1c), v52

    Begin block 0xa1c
    prev=[0x4c], succ=[]
    =================================
    0xa1d: va1d(0x1e5) = CONST 
    0xa1e: CALLPRIVATE va1d(0x1e5)

    Begin block 0x57
    prev=[0x4c], succ=[0x62, 0xa1f]
    =================================
    0x58: v58(0xeec037f6) = CONST 
    0x5d: v5d = EQ v58(0xeec037f6), v1f
    0x9e4: v9e4(0xa1f) = CONST 
    0x9e5: JUMPI v9e4(0xa1f), v5d

    Begin block 0x62
    prev=[0x57], succ=[]
    =================================
    0x62: v62(0x0) = CONST 
    0x65: REVERT v62(0x0), v62(0x0)

    Begin block 0xa1f
    prev=[0x57], succ=[]
    =================================
    0xa20: va20(0x1ee) = CONST 
    0xa21: CALLPRIVATE va20(0x1ee)

}

function rebaseState(address)() public {
    Begin block 0x123
    prev=[], succ=[0x66dB0x123]
    =================================
    0x124: v124(0x146) = CONST 
    0x127: v127(0x131) = CONST 
    0x12a: v12a = CALLDATASIZE 
    0x12b: v12b(0x4) = CONST 
    0x12d: v12d(0x66d) = CONST 
    0x130: JUMP v12d(0x66d)

    Begin block 0x66dB0x123
    prev=[0x123], succ=[0x67bB0x123, 0x67fB0x123]
    =================================
    0x66eS0x123: v66eV123(0x0) = CONST 
    0x670S0x123: v670V123(0x20) = CONST 
    0x674S0x123: v674V123 = SUB v12a, v12b(0x4)
    0x675S0x123: v675V123 = SLT v674V123, v670V123(0x20)
    0x676S0x123: v676V123 = ISZERO v675V123
    0x677S0x123: v677V123(0x67f) = CONST 
    0x67aS0x123: JUMPI v677V123(0x67f), v676V123

    Begin block 0x67bB0x123
    prev=[0x66dB0x123], succ=[]
    =================================
    0x67bS0x123: v67bV123(0x0) = CONST 
    0x67eS0x123: REVERT v67bV123(0x0), v67bV123(0x0)

    Begin block 0x67fB0x123
    prev=[0x66dB0x123], succ=[0x692B0x123, 0x696B0x123]
    =================================
    0x681S0x123: v681V123 = CALLDATALOAD v12b(0x4)
    0x682S0x123: v682V123(0x1) = CONST 
    0x684S0x123: v684V123(0x1) = CONST 
    0x686S0x123: v686V123(0xa0) = CONST 
    0x688S0x123: v688V123(0x10000000000000000000000000000000000000000) = SHL v686V123(0xa0), v684V123(0x1)
    0x689S0x123: v689V123(0xffffffffffffffffffffffffffffffffffffffff) = SUB v688V123(0x10000000000000000000000000000000000000000), v682V123(0x1)
    0x68bS0x123: v68bV123 = AND v681V123, v689V123(0xffffffffffffffffffffffffffffffffffffffff)
    0x68dS0x123: v68dV123 = EQ v681V123, v68bV123
    0x68eS0x123: v68eV123(0x696) = CONST 
    0x691S0x123: JUMPI v68eV123(0x696), v68dV123

    Begin block 0x692B0x123
    prev=[0x67fB0x123], succ=[]
    =================================
    0x692S0x123: v692V123(0x0) = CONST 
    0x695S0x123: REVERT v692V123(0x0), v692V123(0x0)

    Begin block 0x696B0x123
    prev=[0x67fB0x123], succ=[0x131]
    =================================
    0x69cS0x123: JUMP v127(0x131)

    Begin block 0x131
    prev=[0x696B0x123], succ=[0x146]
    =================================
    0x132: v132(0xa2) = CONST 
    0x134: v134(0x20) = CONST 
    0x136: MSTORE v134(0x20), v132(0xa2)
    0x137: v137(0x0) = CONST 
    0x13b: MSTORE v137(0x0), v681V123
    0x13c: v13c(0x40) = CONST 
    0x13f: v13f = SHA3 v137(0x0), v13c(0x40)
    0x140: v140 = SLOAD v13f
    0x141: v141(0xff) = CONST 
    0x143: v143 = AND v141(0xff), v140
    0x145: JUMP v124(0x146)

    Begin block 0x146
    prev=[0x131], succ=[0x712]
    =================================
    0x147: v147(0x40) = CONST 
    0x149: v149 = MLOAD v147(0x40)
    0x14a: v14a(0xe6) = CONST 
    0x14f: v14f(0x712) = CONST 
    0x152: JUMP v14f(0x712)

    Begin block 0x712
    prev=[0x146], succ=[0x71f, 0x734]
    =================================
    0x713: v713(0x20) = CONST 
    0x716: v716 = ADD v149, v713(0x20)
    0x717: v717(0x3) = CONST 
    0x71a: v71a = LT v143, v717(0x3)
    0x71b: v71b(0x734) = CONST 
    0x71e: JUMPI v71b(0x734), v71a

    Begin block 0x71f
    prev=[0x712], succ=[]
    =================================
    0x71f: v71f(0x4e487b71) = CONST 
    0x724: v724(0xe0) = CONST 
    0x726: v726(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v724(0xe0), v71f(0x4e487b71)
    0x727: v727(0x0) = CONST 
    0x729: MSTORE v727(0x0), v726(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x72a: v72a(0x21) = CONST 
    0x72c: v72c(0x4) = CONST 
    0x72e: MSTORE v72c(0x4), v72a(0x21)
    0x72f: v72f(0x24) = CONST 
    0x731: v731(0x0) = CONST 
    0x733: REVERT v731(0x0), v72f(0x24)

    Begin block 0x734
    prev=[0x712], succ=[0xe60x123]
    =================================
    0x737: MSTORE v149, v143
    0x739: JUMP v14a(0xe6)

    Begin block 0xe60x123
    prev=[0x734], succ=[]
    =================================
    0xe70x123: v123e7(0x40) = CONST 
    0xe90x123: v123e9 = MLOAD v123e7(0x40)
    0xec0x123: v123ec(0x20) = SUB v716, v123e9
    0xee0x123: RETURN v123e9, v123ec(0x20)

}

function upgradeGlobals()() public {
    Begin block 0x153
    prev=[], succ=[0x21a]
    =================================
    0x154: v154(0x971) = CONST 
    0x157: v157(0x21a) = CONST 
    0x15a: JUMP v157(0x21a)

    Begin block 0x21a
    prev=[0x153], succ=[0x24b, 0x297]
    =================================
    0x21b: v21b(0x0) = CONST 
    0x21e: MSTORE v21b(0x0), v21b(0x0)
    0x21f: v21f(0xa3) = CONST 
    0x221: v221(0x20) = CONST 
    0x223: MSTORE v221(0x20), v21f(0xa3)
    0x224: v224(0x69b4e8f94ad9e612080e13aad01219472d8c2c7ae7aa6cdf175400ddc8c4ed3d) = CONST 
    0x245: v245 = SLOAD v224(0x69b4e8f94ad9e612080e13aad01219472d8c2c7ae7aa6cdf175400ddc8c4ed3d)
    0x246: v246 = ISZERO v245
    0x247: v247(0x297) = CONST 
    0x24a: JUMPI v247(0x297), v246

    Begin block 0x24b
    prev=[0x21a], succ=[0x28e]
    =================================
    0x24b: v24b(0x40) = CONST 
    0x24d: v24d = MLOAD v24b(0x40)
    0x24e: v24e(0x461bcd) = CONST 
    0x252: v252(0xe5) = CONST 
    0x254: v254(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v252(0xe5), v24e(0x461bcd)
    0x256: MSTORE v24d, v254(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x257: v257(0x20) = CONST 
    0x259: v259(0x4) = CONST 
    0x25c: v25c = ADD v24d, v259(0x4)
    0x25d: MSTORE v25c, v257(0x20)
    0x25e: v25e(0x18) = CONST 
    0x260: v260(0x24) = CONST 
    0x263: v263 = ADD v24d, v260(0x24)
    0x264: MSTORE v263, v25e(0x18)
    0x265: v265(0x476c6f62616c7320616c72656164792075706772616465640000000000000000) = CONST 
    0x286: v286(0x44) = CONST 
    0x289: v289 = ADD v24d, v286(0x44)
    0x28a: MSTORE v289, v265(0x476c6f62616c7320616c72656164792075706772616465640000000000000000)
    0x28b: v28b(0x64) = CONST 
    0x28d: v28d = ADD v28b(0x64), v24d

    Begin block 0x28e
    prev=[0x24b], succ=[]
    =================================
    0x28f: v28f(0x40) = CONST 
    0x291: v291 = MLOAD v28f(0x40)
    0x294: v294(0x64) = SUB v28d, v291
    0x296: REVERT v291, v294(0x64)

    Begin block 0x297
    prev=[0x21a], succ=[0x2a2, 0x2e9]
    =================================
    0x298: v298(0x0) = CONST 
    0x29a: v29a(0x9e) = CONST 
    0x29c: v29c = SLOAD v29a(0x9e)
    0x29d: v29d = GT v29c, v298(0x0)
    0x29e: v29e(0x2e9) = CONST 
    0x2a1: JUMPI v29e(0x2e9), v29d

    Begin block 0x2a2
    prev=[0x297], succ=[0x817]
    =================================
    0x2a2: v2a2(0x40) = CONST 
    0x2a4: v2a4 = MLOAD v2a2(0x40)
    0x2a5: v2a5(0x461bcd) = CONST 
    0x2a9: v2a9(0xe5) = CONST 
    0x2ab: v2ab(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2a9(0xe5), v2a5(0x461bcd)
    0x2ad: MSTORE v2a4, v2ab(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x2ae: v2ae(0x20) = CONST 
    0x2b0: v2b0(0x4) = CONST 
    0x2b3: v2b3 = ADD v2a4, v2b0(0x4)
    0x2b4: MSTORE v2b3, v2ae(0x20)
    0x2b5: v2b5(0x17) = CONST 
    0x2b7: v2b7(0x24) = CONST 
    0x2ba: v2ba = ADD v2a4, v2b7(0x24)
    0x2bb: MSTORE v2ba, v2b5(0x17)
    0x2bc: v2bc(0x53616e697479205f7265626173696e6743726564697473000000000000000000) = CONST 
    0x2dd: v2dd(0x44) = CONST 
    0x2e0: v2e0 = ADD v2a4, v2dd(0x44)
    0x2e1: MSTORE v2e0, v2bc(0x53616e697479205f7265626173696e6743726564697473000000000000000000)
    0x2e2: v2e2(0x64) = CONST 
    0x2e4: v2e4 = ADD v2e2(0x64), v2a4
    0x2e5: v2e5(0x817) = CONST 
    0x2e8: JUMP v2e5(0x817)

    Begin block 0x817
    prev=[0x2a2], succ=[]
    =================================
    0x818: v818(0x40) = CONST 
    0x81a: v81a = MLOAD v818(0x40)
    0x81d: v81d(0x64) = SUB v2e4, v81a
    0x81f: REVERT v81a, v81d(0x64)

    Begin block 0x2e9
    prev=[0x297], succ=[0x2f4, 0x33b]
    =================================
    0x2ea: v2ea(0x0) = CONST 
    0x2ec: v2ec(0x9f) = CONST 
    0x2ee: v2ee = SLOAD v2ec(0x9f)
    0x2ef: v2ef = GT v2ee, v2ea(0x0)
    0x2f0: v2f0(0x33b) = CONST 
    0x2f3: JUMPI v2f0(0x33b), v2ef

    Begin block 0x2f4
    prev=[0x2e9], succ=[0x83f]
    =================================
    0x2f4: v2f4(0x40) = CONST 
    0x2f6: v2f6 = MLOAD v2f4(0x40)
    0x2f7: v2f7(0x461bcd) = CONST 
    0x2fb: v2fb(0xe5) = CONST 
    0x2fd: v2fd(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2fb(0xe5), v2f7(0x461bcd)
    0x2ff: MSTORE v2f6, v2fd(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x300: v300(0x20) = CONST 
    0x302: v302(0x4) = CONST 
    0x305: v305 = ADD v2f6, v302(0x4)
    0x306: MSTORE v305, v300(0x20)
    0x307: v307(0x1f) = CONST 
    0x309: v309(0x24) = CONST 
    0x30c: v30c = ADD v2f6, v309(0x24)
    0x30d: MSTORE v30c, v307(0x1f)
    0x30e: v30e(0x53616e697479205f7265626173696e6743726564697473506572546f6b656e00) = CONST 
    0x32f: v32f(0x44) = CONST 
    0x332: v332 = ADD v2f6, v32f(0x44)
    0x333: MSTORE v332, v30e(0x53616e697479205f7265626173696e6743726564697473506572546f6b656e00)
    0x334: v334(0x64) = CONST 
    0x336: v336 = ADD v334(0x64), v2f6
    0x337: v337(0x83f) = CONST 
    0x33a: JUMP v337(0x83f)

    Begin block 0x83f
    prev=[0x2f4], succ=[]
    =================================
    0x840: v840(0x40) = CONST 
    0x842: v842 = MLOAD v840(0x40)
    0x845: v845(0x64) = SUB v336, v842
    0x847: REVERT v842, v845(0x64)

    Begin block 0x33b
    prev=[0x2e9], succ=[0x37a]
    =================================
    0x33c: v33c(0x0) = CONST 
    0x33f: MSTORE v33c(0x0), v33c(0x0)
    0x340: v340(0xa3) = CONST 
    0x342: v342(0x20) = CONST 
    0x344: MSTORE v342(0x20), v340(0xa3)
    0x345: v345(0x1) = CONST 
    0x347: v347(0x69b4e8f94ad9e612080e13aad01219472d8c2c7ae7aa6cdf175400ddc8c4ed3d) = CONST 
    0x368: SSTORE v347(0x69b4e8f94ad9e612080e13aad01219472d8c2c7ae7aa6cdf175400ddc8c4ed3d), v345(0x1)
    0x369: v369(0x9e) = CONST 
    0x36b: v36b = SLOAD v369(0x9e)
    0x36c: v36c(0x37a) = CONST 
    0x370: v370(0x3b9aca00) = CONST 
    0x376: v376(0x75c) = CONST 
    0x379: v379_0 = CALLPRIVATE v376(0x75c), v36b, v370(0x3b9aca00), v36c(0x37a)

    Begin block 0x37a
    prev=[0x33b], succ=[0x38f]
    =================================
    0x37b: v37b(0x9e) = CONST 
    0x37d: SSTORE v37b(0x9e), v379_0
    0x37e: v37e(0x9f) = CONST 
    0x380: v380 = SLOAD v37e(0x9f)
    0x381: v381(0x38f) = CONST 
    0x385: v385(0x3b9aca00) = CONST 
    0x38b: v38b(0x75c) = CONST 
    0x38e: v38e_0 = CALLPRIVATE v38b(0x75c), v380, v385(0x3b9aca00), v381(0x38f)

    Begin block 0x38f
    prev=[0x37a], succ=[0x971]
    =================================
    0x390: v390(0x9f) = CONST 
    0x392: SSTORE v390(0x9f), v38e_0
    0x393: JUMP v154(0x971)

    Begin block 0x971
    prev=[0x38f], succ=[]
    =================================
    0x972: STOP 

}

function nonRebasingCreditsPerToken(address)() public {
    Begin block 0x15d
    prev=[], succ=[0x66dB0x15d]
    =================================
    0x15e: v15e(0xdc) = CONST 
    0x161: v161(0x16b) = CONST 
    0x164: v164 = CALLDATASIZE 
    0x165: v165(0x4) = CONST 
    0x167: v167(0x66d) = CONST 
    0x16a: JUMP v167(0x66d)

    Begin block 0x66dB0x15d
    prev=[0x15d], succ=[0x67bB0x15d, 0x67fB0x15d]
    =================================
    0x66eS0x15d: v66eV15d(0x0) = CONST 
    0x670S0x15d: v670V15d(0x20) = CONST 
    0x674S0x15d: v674V15d = SUB v164, v165(0x4)
    0x675S0x15d: v675V15d = SLT v674V15d, v670V15d(0x20)
    0x676S0x15d: v676V15d = ISZERO v675V15d
    0x677S0x15d: v677V15d(0x67f) = CONST 
    0x67aS0x15d: JUMPI v677V15d(0x67f), v676V15d

    Begin block 0x67bB0x15d
    prev=[0x66dB0x15d], succ=[]
    =================================
    0x67bS0x15d: v67bV15d(0x0) = CONST 
    0x67eS0x15d: REVERT v67bV15d(0x0), v67bV15d(0x0)

    Begin block 0x67fB0x15d
    prev=[0x66dB0x15d], succ=[0x692B0x15d, 0x696B0x15d]
    =================================
    0x681S0x15d: v681V15d = CALLDATALOAD v165(0x4)
    0x682S0x15d: v682V15d(0x1) = CONST 
    0x684S0x15d: v684V15d(0x1) = CONST 
    0x686S0x15d: v686V15d(0xa0) = CONST 
    0x688S0x15d: v688V15d(0x10000000000000000000000000000000000000000) = SHL v686V15d(0xa0), v684V15d(0x1)
    0x689S0x15d: v689V15d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v688V15d(0x10000000000000000000000000000000000000000), v682V15d(0x1)
    0x68bS0x15d: v68bV15d = AND v681V15d, v689V15d(0xffffffffffffffffffffffffffffffffffffffff)
    0x68dS0x15d: v68dV15d = EQ v681V15d, v68bV15d
    0x68eS0x15d: v68eV15d(0x696) = CONST 
    0x691S0x15d: JUMPI v68eV15d(0x696), v68dV15d

    Begin block 0x692B0x15d
    prev=[0x67fB0x15d], succ=[]
    =================================
    0x692S0x15d: v692V15d(0x0) = CONST 
    0x695S0x15d: REVERT v692V15d(0x0), v692V15d(0x0)

    Begin block 0x696B0x15d
    prev=[0x67fB0x15d], succ=[0x16b]
    =================================
    0x69cS0x15d: JUMP v161(0x16b)

    Begin block 0x16b
    prev=[0x696B0x15d], succ=[0xdc0x15d]
    =================================
    0x16c: v16c(0xa1) = CONST 
    0x16e: v16e(0x20) = CONST 
    0x170: MSTORE v16e(0x20), v16c(0xa1)
    0x171: v171(0x0) = CONST 
    0x175: MSTORE v171(0x0), v681V15d
    0x176: v176(0x40) = CONST 
    0x179: v179 = SHA3 v171(0x0), v176(0x40)
    0x17a: v17a = SLOAD v179
    0x17c: JUMP v15e(0xdc)

    Begin block 0xdc0x15d
    prev=[0x16b], succ=[0xe60x15d]
    =================================
    0xdd0x15d: v15ddd(0x40) = CONST 
    0xdf0x15d: v15ddf = MLOAD v15ddd(0x40)
    0xe20x15d: MSTORE v15ddf, v17a
    0xe30x15d: v15de3(0x20) = CONST 
    0xe50x15d: v15de5 = ADD v15de3(0x20), v15ddf

    Begin block 0xe60x15d
    prev=[0xdc0x15d], succ=[]
    =================================
    0xe70x15d: v15de7(0x40) = CONST 
    0xe90x15d: v15de9 = MLOAD v15de7(0x40)
    0xec0x15d: v15dec(0x20) = SUB v15de5, v15de9
    0xee0x15d: RETURN v15de9, v15dec(0x20)

}

function rebasingCreditsPerToken()() public {
    Begin block 0x17d
    prev=[], succ=[0x394B0x17d]
    =================================
    0x17e: v17e(0xdc) = CONST 
    0x181: v181(0x394) = CONST 
    0x184: JUMP v181(0x394)

    Begin block 0x394B0x17d
    prev=[0x17d], succ=[0x73aB0x394B0x17d]
    =================================
    0x395S0x17d: v395V17d(0x0) = CONST 
    0x397S0x17d: v397V17d(0x3b9aca00) = CONST 
    0x39cS0x17d: v39cV17d(0x9f) = CONST 
    0x39eS0x17d: v39eV17d = SLOAD v39cV17d(0x9f)
    0x39fS0x17d: v39fV17d(0x9d7) = CONST 
    0x3a4S0x17d: v3a4V17d(0x73a) = CONST 
    0x3a7S0x17d: JUMP v3a4V17d(0x73a)

    Begin block 0x73aB0x394B0x17d
    prev=[0x394B0x17d], succ=[0x742B0x394B0x17d, 0x757B0x394B0x17d]
    =================================
    0x73bS0x394S0x17d: v73bV394V17d(0x0) = CONST 
    0x73eS0x394S0x17d: v73eV394V17d(0x757) = CONST 
    0x741S0x394S0x17d: JUMPI v73eV394V17d(0x757), v397V17d(0x3b9aca00)

    Begin block 0x742B0x394B0x17d
    prev=[0x73aB0x394B0x17d], succ=[]
    =================================
    0x742S0x394S0x17d: v742V394V17d(0x4e487b71) = CONST 
    0x747S0x394S0x17d: v747V394V17d(0xe0) = CONST 
    0x749S0x394S0x17d: v749V394V17d(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v747V394V17d(0xe0), v742V394V17d(0x4e487b71)
    0x74aS0x394S0x17d: v74aV394V17d(0x0) = CONST 
    0x74cS0x394S0x17d: MSTORE v74aV394V17d(0x0), v749V394V17d(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x74dS0x394S0x17d: v74dV394V17d(0x12) = CONST 
    0x74fS0x394S0x17d: v74fV394V17d(0x4) = CONST 
    0x751S0x394S0x17d: MSTORE v74fV394V17d(0x4), v74dV394V17d(0x12)
    0x752S0x394S0x17d: v752V394V17d(0x24) = CONST 
    0x754S0x394S0x17d: v754V394V17d(0x0) = CONST 
    0x756S0x394S0x17d: REVERT v754V394V17d(0x0), v752V394V17d(0x24)

    Begin block 0x757B0x394B0x17d
    prev=[0x73aB0x394B0x17d], succ=[0x9d7B0x17d]
    =================================
    0x759S0x394S0x17d: v759V394V17d = DIV v39eV17d, v397V17d(0x3b9aca00)
    0x75bS0x394S0x17d: JUMP v39fV17d(0x9d7)

    Begin block 0x9d7B0x17d
    prev=[0x757B0x394B0x17d], succ=[0xdc0x17d]
    =================================
    0x9dbS0x17d: JUMP v17e(0xdc)

    Begin block 0xdc0x17d
    prev=[0x9d7B0x17d], succ=[0xe60x17d]
    =================================
    0xdd0x17d: v17ddd(0x40) = CONST 
    0xdf0x17d: v17ddf = MLOAD v17ddd(0x40)
    0xe20x17d: MSTORE v17ddf, v759V394V17d
    0xe30x17d: v17de3(0x20) = CONST 
    0xe50x17d: v17de5 = ADD v17de3(0x20), v17ddf

    Begin block 0xe60x17d
    prev=[0xdc0x17d], succ=[]
    =================================
    0xe70x17d: v17de7(0x40) = CONST 
    0xe90x17d: v17de9 = MLOAD v17de7(0x40)
    0xec0x17d: v17dec(0x20) = SUB v17de5, v17de9
    0xee0x17d: RETURN v17de9, v17dec(0x20)

}

function rebasingCreditsPerTokenHighres()() public {
    Begin block 0x185
    prev=[], succ=[0xdc0x185]
    =================================
    0x186: v186(0x9f) = CONST 
    0x188: v188 = SLOAD v186(0x9f)
    0x189: v189(0xdc) = CONST 
    0x18c: JUMP v189(0xdc)

    Begin block 0xdc0x185
    prev=[0x185], succ=[0xe60x185]
    =================================
    0xdd0x185: v185dd(0x40) = CONST 
    0xdf0x185: v185df = MLOAD v185dd(0x40)
    0xe20x185: MSTORE v185df, v188
    0xe30x185: v185e3(0x20) = CONST 
    0xe50x185: v185e5 = ADD v185e3(0x20), v185df

    Begin block 0xe60x185
    prev=[0xdc0x185], succ=[]
    =================================
    0xe70x185: v185e7(0x40) = CONST 
    0xe90x185: v185e9 = MLOAD v185e7(0x40)
    0xec0x185: v185ec(0x20) = SUB v185e5, v185e9
    0xee0x185: RETURN v185e9, v185ec(0x20)

}

function rebasingCreditsHighres()() public {
    Begin block 0x18d
    prev=[], succ=[0xdc0x18d]
    =================================
    0x18e: v18e(0x9e) = CONST 
    0x190: v190 = SLOAD v18e(0x9e)
    0x191: v191(0xdc) = CONST 
    0x194: JUMP v191(0xdc)

    Begin block 0xdc0x18d
    prev=[0x18d], succ=[0xe60x18d]
    =================================
    0xdd0x18d: v18ddd(0x40) = CONST 
    0xdf0x18d: v18ddf = MLOAD v18ddd(0x40)
    0xe20x18d: MSTORE v18ddf, v190
    0xe30x18d: v18de3(0x20) = CONST 
    0xe50x18d: v18de5 = ADD v18de3(0x20), v18ddf

    Begin block 0xe60x18d
    prev=[0xdc0x18d], succ=[]
    =================================
    0xe70x18d: v18de7(0x40) = CONST 
    0xe90x18d: v18de9 = MLOAD v18de7(0x40)
    0xec0x18d: v18dec(0x20) = SUB v18de5, v18de9
    0xee0x18d: RETURN v18de9, v18dec(0x20)

}

function isUpgraded(address)() public {
    Begin block 0x195
    prev=[], succ=[0x66dB0x195]
    =================================
    0x196: v196(0xdc) = CONST 
    0x199: v199(0x1a3) = CONST 
    0x19c: v19c = CALLDATASIZE 
    0x19d: v19d(0x4) = CONST 
    0x19f: v19f(0x66d) = CONST 
    0x1a2: JUMP v19f(0x66d)

    Begin block 0x66dB0x195
    prev=[0x195], succ=[0x67bB0x195, 0x67fB0x195]
    =================================
    0x66eS0x195: v66eV195(0x0) = CONST 
    0x670S0x195: v670V195(0x20) = CONST 
    0x674S0x195: v674V195 = SUB v19c, v19d(0x4)
    0x675S0x195: v675V195 = SLT v674V195, v670V195(0x20)
    0x676S0x195: v676V195 = ISZERO v675V195
    0x677S0x195: v677V195(0x67f) = CONST 
    0x67aS0x195: JUMPI v677V195(0x67f), v676V195

    Begin block 0x67bB0x195
    prev=[0x66dB0x195], succ=[]
    =================================
    0x67bS0x195: v67bV195(0x0) = CONST 
    0x67eS0x195: REVERT v67bV195(0x0), v67bV195(0x0)

    Begin block 0x67fB0x195
    prev=[0x66dB0x195], succ=[0x692B0x195, 0x696B0x195]
    =================================
    0x681S0x195: v681V195 = CALLDATALOAD v19d(0x4)
    0x682S0x195: v682V195(0x1) = CONST 
    0x684S0x195: v684V195(0x1) = CONST 
    0x686S0x195: v686V195(0xa0) = CONST 
    0x688S0x195: v688V195(0x10000000000000000000000000000000000000000) = SHL v686V195(0xa0), v684V195(0x1)
    0x689S0x195: v689V195(0xffffffffffffffffffffffffffffffffffffffff) = SUB v688V195(0x10000000000000000000000000000000000000000), v682V195(0x1)
    0x68bS0x195: v68bV195 = AND v681V195, v689V195(0xffffffffffffffffffffffffffffffffffffffff)
    0x68dS0x195: v68dV195 = EQ v681V195, v68bV195
    0x68eS0x195: v68eV195(0x696) = CONST 
    0x691S0x195: JUMPI v68eV195(0x696), v68dV195

    Begin block 0x692B0x195
    prev=[0x67fB0x195], succ=[]
    =================================
    0x692S0x195: v692V195(0x0) = CONST 
    0x695S0x195: REVERT v692V195(0x0), v692V195(0x0)

    Begin block 0x696B0x195
    prev=[0x67fB0x195], succ=[0x1a3]
    =================================
    0x69cS0x195: JUMP v199(0x1a3)

    Begin block 0x1a3
    prev=[0x696B0x195], succ=[0xdc0x195]
    =================================
    0x1a4: v1a4(0xa3) = CONST 
    0x1a6: v1a6(0x20) = CONST 
    0x1a8: MSTORE v1a6(0x20), v1a4(0xa3)
    0x1a9: v1a9(0x0) = CONST 
    0x1ad: MSTORE v1a9(0x0), v681V195
    0x1ae: v1ae(0x40) = CONST 
    0x1b1: v1b1 = SHA3 v1a9(0x0), v1ae(0x40)
    0x1b2: v1b2 = SLOAD v1b1
    0x1b4: JUMP v196(0xdc)

    Begin block 0xdc0x195
    prev=[0x1a3], succ=[0xe60x195]
    =================================
    0xdd0x195: v195dd(0x40) = CONST 
    0xdf0x195: v195df = MLOAD v195dd(0x40)
    0xe20x195: MSTORE v195df, v1b2
    0xe30x195: v195e3(0x20) = CONST 
    0xe50x195: v195e5 = ADD v195e3(0x20), v195df

    Begin block 0xe60x195
    prev=[0xdc0x195], succ=[]
    =================================
    0xe70x195: v195e7(0x40) = CONST 
    0xe90x195: v195e9 = MLOAD v195e7(0x40)
    0xec0x195: v195ec(0x20) = SUB v195e5, v195e9
    0xee0x195: RETURN v195e9, v195ec(0x20)

}

function creditsBalanceOfHighres(address)() public {
    Begin block 0x1b5
    prev=[], succ=[0x66dB0x1b5]
    =================================
    0x1b6: v1b6(0x1c8) = CONST 
    0x1b9: v1b9(0x1c3) = CONST 
    0x1bc: v1bc = CALLDATASIZE 
    0x1bd: v1bd(0x4) = CONST 
    0x1bf: v1bf(0x66d) = CONST 
    0x1c2: JUMP v1bf(0x66d)

    Begin block 0x66dB0x1b5
    prev=[0x1b5], succ=[0x67bB0x1b5, 0x67fB0x1b5]
    =================================
    0x66eS0x1b5: v66eV1b5(0x0) = CONST 
    0x670S0x1b5: v670V1b5(0x20) = CONST 
    0x674S0x1b5: v674V1b5 = SUB v1bc, v1bd(0x4)
    0x675S0x1b5: v675V1b5 = SLT v674V1b5, v670V1b5(0x20)
    0x676S0x1b5: v676V1b5 = ISZERO v675V1b5
    0x677S0x1b5: v677V1b5(0x67f) = CONST 
    0x67aS0x1b5: JUMPI v677V1b5(0x67f), v676V1b5

    Begin block 0x67bB0x1b5
    prev=[0x66dB0x1b5], succ=[]
    =================================
    0x67bS0x1b5: v67bV1b5(0x0) = CONST 
    0x67eS0x1b5: REVERT v67bV1b5(0x0), v67bV1b5(0x0)

    Begin block 0x67fB0x1b5
    prev=[0x66dB0x1b5], succ=[0x692B0x1b5, 0x696B0x1b5]
    =================================
    0x681S0x1b5: v681V1b5 = CALLDATALOAD v1bd(0x4)
    0x682S0x1b5: v682V1b5(0x1) = CONST 
    0x684S0x1b5: v684V1b5(0x1) = CONST 
    0x686S0x1b5: v686V1b5(0xa0) = CONST 
    0x688S0x1b5: v688V1b5(0x10000000000000000000000000000000000000000) = SHL v686V1b5(0xa0), v684V1b5(0x1)
    0x689S0x1b5: v689V1b5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v688V1b5(0x10000000000000000000000000000000000000000), v682V1b5(0x1)
    0x68bS0x1b5: v68bV1b5 = AND v681V1b5, v689V1b5(0xffffffffffffffffffffffffffffffffffffffff)
    0x68dS0x1b5: v68dV1b5 = EQ v681V1b5, v68bV1b5
    0x68eS0x1b5: v68eV1b5(0x696) = CONST 
    0x691S0x1b5: JUMPI v68eV1b5(0x696), v68dV1b5

    Begin block 0x692B0x1b5
    prev=[0x67fB0x1b5], succ=[]
    =================================
    0x692S0x1b5: v692V1b5(0x0) = CONST 
    0x695S0x1b5: REVERT v692V1b5(0x0), v692V1b5(0x0)

    Begin block 0x696B0x1b5
    prev=[0x67fB0x1b5], succ=[0x1c3]
    =================================
    0x69cS0x1b5: JUMP v1b9(0x1c3)

    Begin block 0x1c3
    prev=[0x696B0x1b5], succ=[0x3a8]
    =================================
    0x1c4: v1c4(0x3a8) = CONST 
    0x1c7: JUMP v1c4(0x3a8)

    Begin block 0x3a8
    prev=[0x1c3], succ=[0x62b]
    =================================
    0x3a9: v3a9(0x1) = CONST 
    0x3ab: v3ab(0x1) = CONST 
    0x3ad: v3ad(0xa0) = CONST 
    0x3af: v3af(0x10000000000000000000000000000000000000000) = SHL v3ad(0xa0), v3ab(0x1)
    0x3b0: v3b0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3af(0x10000000000000000000000000000000000000000), v3a9(0x1)
    0x3b2: v3b2 = AND v681V1b5, v3b0(0xffffffffffffffffffffffffffffffffffffffff)
    0x3b3: v3b3(0x0) = CONST 
    0x3b7: MSTORE v3b3(0x0), v3b2
    0x3b8: v3b8(0x9d) = CONST 
    0x3ba: v3ba(0x20) = CONST 
    0x3bc: MSTORE v3ba(0x20), v3b8(0x9d)
    0x3bd: v3bd(0x40) = CONST 
    0x3c0: v3c0 = SHA3 v3b3(0x0), v3bd(0x40)
    0x3c1: v3c1 = SLOAD v3c0
    0x3c6: v3c6(0x3ce) = CONST 
    0x3ca: v3ca(0x62b) = CONST 
    0x3cd: JUMP v3ca(0x62b)

    Begin block 0x62b
    prev=[0x3a8], succ=[0x665, 0x64a]
    =================================
    0x62c: v62c(0x1) = CONST 
    0x62e: v62e(0x1) = CONST 
    0x630: v630(0xa0) = CONST 
    0x632: v632(0x10000000000000000000000000000000000000000) = SHL v630(0xa0), v62e(0x1)
    0x633: v633(0xffffffffffffffffffffffffffffffffffffffff) = SUB v632(0x10000000000000000000000000000000000000000), v62c(0x1)
    0x635: v635 = AND v681V1b5, v633(0xffffffffffffffffffffffffffffffffffffffff)
    0x636: v636(0x0) = CONST 
    0x63a: MSTORE v636(0x0), v635
    0x63b: v63b(0xa1) = CONST 
    0x63d: v63d(0x20) = CONST 
    0x63f: MSTORE v63d(0x20), v63b(0xa1)
    0x640: v640(0x40) = CONST 
    0x643: v643 = SHA3 v636(0x0), v640(0x40)
    0x644: v644 = SLOAD v643
    0x645: v645 = ISZERO v644
    0x646: v646(0x665) = CONST 
    0x649: JUMPI v646(0x665), v645

    Begin block 0x665
    prev=[0x62b], succ=[0x3ce]
    =================================
    0x668: v668(0x9f) = CONST 
    0x66a: v66a = SLOAD v668(0x9f)
    0x66c: JUMP v3c6(0x3ce)

    Begin block 0x3ce
    prev=[0x665, 0x64a], succ=[0x1c8]
    =================================
    0x3cf: v3cf(0x1) = CONST 
    0x3d1: v3d1(0x1) = CONST 
    0x3d3: v3d3(0xa0) = CONST 
    0x3d5: v3d5(0x10000000000000000000000000000000000000000) = SHL v3d3(0xa0), v3d1(0x1)
    0x3d6: v3d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3d5(0x10000000000000000000000000000000000000000), v3cf(0x1)
    0x3da: v3da = AND v3d6(0xffffffffffffffffffffffffffffffffffffffff), v681V1b5
    0x3db: v3db(0x0) = CONST 
    0x3df: MSTORE v3db(0x0), v3da
    0x3e0: v3e0(0xa3) = CONST 
    0x3e2: v3e2(0x20) = CONST 
    0x3e4: MSTORE v3e2(0x20), v3e0(0xa3)
    0x3e5: v3e5(0x40) = CONST 
    0x3e8: v3e8 = SHA3 v3db(0x0), v3e5(0x40)
    0x3e9: v3e9 = SLOAD v3e8
    0x3ec: v3ec(0x1) = CONST 
    0x3f0: v3f0 = EQ v3e9, v3ec(0x1)
    0x3f6: JUMP v1b6(0x1c8)

    Begin block 0x1c8
    prev=[0x3ce], succ=[0xe60x1b5]
    =================================
    0x1c8_0x1: v1c8_1 = PHI v662, v66a
    0x1c9: v1c9(0x40) = CONST 
    0x1cc: v1cc = MLOAD v1c9(0x40)
    0x1cf: MSTORE v1cc, v3c1
    0x1d0: v1d0(0x20) = CONST 
    0x1d3: v1d3 = ADD v1cc, v1d0(0x20)
    0x1d7: MSTORE v1d3, v1c8_1
    0x1d8: v1d8 = ISZERO v3f0
    0x1d9: v1d9 = ISZERO v1d8
    0x1dc: v1dc = ADD v1cc, v1c9(0x40)
    0x1dd: MSTORE v1dc, v1d9
    0x1de: v1de(0x60) = CONST 
    0x1e0: v1e0 = ADD v1de(0x60), v1cc
    0x1e1: v1e1(0xe6) = CONST 
    0x1e4: JUMP v1e1(0xe6)

    Begin block 0xe60x1b5
    prev=[0x1c8], succ=[]
    =================================
    0xe70x1b5: v1b5e7(0x40) = CONST 
    0xe90x1b5: v1b5e9 = MLOAD v1b5e7(0x40)
    0xec0x1b5: v1b5ec(0x60) = SUB v1e0, v1b5e9
    0xee0x1b5: RETURN v1b5e9, v1b5ec(0x60)

    Begin block 0x64a
    prev=[0x62b], succ=[0x3ce]
    =================================
    0x64b: v64b(0x1) = CONST 
    0x64d: v64d(0x1) = CONST 
    0x64f: v64f(0xa0) = CONST 
    0x651: v651(0x10000000000000000000000000000000000000000) = SHL v64f(0xa0), v64d(0x1)
    0x652: v652(0xffffffffffffffffffffffffffffffffffffffff) = SUB v651(0x10000000000000000000000000000000000000000), v64b(0x1)
    0x653: v653 = AND v652(0xffffffffffffffffffffffffffffffffffffffff), v681V1b5
    0x654: v654(0x0) = CONST 
    0x658: MSTORE v654(0x0), v653
    0x659: v659(0xa1) = CONST 
    0x65b: v65b(0x20) = CONST 
    0x65d: MSTORE v65b(0x20), v659(0xa1)
    0x65e: v65e(0x40) = CONST 
    0x661: v661 = SHA3 v654(0x0), v65e(0x40)
    0x662: v662 = SLOAD v661
    0x664: JUMP v3c6(0x3ce)

}

function nonRebasingSupply()() public {
    Begin block 0x1e5
    prev=[], succ=[0xdc0x1e5]
    =================================
    0x1e6: v1e6(0xdc) = CONST 
    0x1e9: v1e9(0xa0) = CONST 
    0x1eb: v1eb = SLOAD v1e9(0xa0)
    0x1ed: JUMP v1e6(0xdc)

    Begin block 0xdc0x1e5
    prev=[0x1e5], succ=[0xe60x1e5]
    =================================
    0xdd0x1e5: v1e5dd(0x40) = CONST 
    0xdf0x1e5: v1e5df = MLOAD v1e5dd(0x40)
    0xe20x1e5: MSTORE v1e5df, v1eb
    0xe30x1e5: v1e5e3(0x20) = CONST 
    0xe50x1e5: v1e5e5 = ADD v1e5e3(0x20), v1e5df

    Begin block 0xe60x1e5
    prev=[0xdc0x1e5], succ=[]
    =================================
    0xe70x1e5: v1e5e7(0x40) = CONST 
    0xe90x1e5: v1e5e9 = MLOAD v1e5e7(0x40)
    0xec0x1e5: v1e5ec(0x20) = SUB v1e5e5, v1e5e9
    0xee0x1e5: RETURN v1e5e9, v1e5ec(0x20)

}

function upgradeAccounts(address[])() public {
    Begin block 0x1ee
    prev=[], succ=[0x69d]
    =================================
    0x1ef: v1ef(0x992) = CONST 
    0x1f2: v1f2(0x1fc) = CONST 
    0x1f5: v1f5 = CALLDATASIZE 
    0x1f6: v1f6(0x4) = CONST 
    0x1f8: v1f8(0x69d) = CONST 
    0x1fb: JUMP v1f8(0x69d)

    Begin block 0x69d
    prev=[0x1ee], succ=[0x6ac, 0x6b0]
    =================================
    0x69e: v69e(0x0) = CONST 
    0x6a1: v6a1(0x20) = CONST 
    0x6a5: v6a5 = SUB v1f5, v1f6(0x4)
    0x6a6: v6a6 = SLT v6a5, v6a1(0x20)
    0x6a7: v6a7 = ISZERO v6a6
    0x6a8: v6a8(0x6b0) = CONST 
    0x6ab: JUMPI v6a8(0x6b0), v6a7

    Begin block 0x6ac
    prev=[0x69d], succ=[]
    =================================
    0x6ac: v6ac(0x0) = CONST 
    0x6af: REVERT v6ac(0x0), v6ac(0x0)

    Begin block 0x6b0
    prev=[0x69d], succ=[0x6c4, 0x6c8]
    =================================
    0x6b2: v6b2 = CALLDATALOAD v1f6(0x4)
    0x6b3: v6b3(0xffffffffffffffff) = CONST 
    0x6be: v6be = GT v6b2, v6b3(0xffffffffffffffff)
    0x6bf: v6bf = ISZERO v6be
    0x6c0: v6c0(0x6c8) = CONST 
    0x6c3: JUMPI v6c0(0x6c8), v6bf

    Begin block 0x6c4
    prev=[0x6b0], succ=[]
    =================================
    0x6c4: v6c4(0x0) = CONST 
    0x6c7: REVERT v6c4(0x0), v6c4(0x0)

    Begin block 0x6c8
    prev=[0x6b0], succ=[0x6d8, 0x6dc]
    =================================
    0x6cb: v6cb = ADD v1f6(0x4), v6b2
    0x6cf: v6cf(0x1f) = CONST 
    0x6d2: v6d2 = ADD v6cb, v6cf(0x1f)
    0x6d3: v6d3 = SLT v6d2, v1f5
    0x6d4: v6d4(0x6dc) = CONST 
    0x6d7: JUMPI v6d4(0x6dc), v6d3

    Begin block 0x6d8
    prev=[0x6c8], succ=[]
    =================================
    0x6d8: v6d8(0x0) = CONST 
    0x6db: REVERT v6d8(0x0), v6d8(0x0)

    Begin block 0x6dc
    prev=[0x6c8], succ=[0x6e7, 0x6eb]
    =================================
    0x6de: v6de = CALLDATALOAD v6cb
    0x6e1: v6e1 = GT v6de, v6b3(0xffffffffffffffff)
    0x6e2: v6e2 = ISZERO v6e1
    0x6e3: v6e3(0x6eb) = CONST 
    0x6e6: JUMPI v6e3(0x6eb), v6e2

    Begin block 0x6e7
    prev=[0x6dc], succ=[]
    =================================
    0x6e7: v6e7(0x0) = CONST 
    0x6ea: REVERT v6e7(0x0), v6e7(0x0)

    Begin block 0x6eb
    prev=[0x6dc], succ=[0x6fc, 0x700]
    =================================
    0x6ed: v6ed(0x20) = CONST 
    0x6f0: v6f0(0x5) = CONST 
    0x6f2: v6f2 = SHL v6f0(0x5), v6de
    0x6f4: v6f4 = ADD v6cb, v6f2
    0x6f5: v6f5 = ADD v6f4, v6ed(0x20)
    0x6f6: v6f6 = GT v6f5, v1f5
    0x6f7: v6f7 = ISZERO v6f6
    0x6f8: v6f8(0x700) = CONST 
    0x6fb: JUMPI v6f8(0x700), v6f7

    Begin block 0x6fc
    prev=[0x6eb], succ=[]
    =================================
    0x6fc: v6fc(0x0) = CONST 
    0x6ff: REVERT v6fc(0x0), v6fc(0x0)

    Begin block 0x700
    prev=[0x6eb], succ=[0x1fc]
    =================================
    0x701: v701(0x20) = CONST 
    0x706: v706 = ADD v701(0x20), v6cb
    0x711: JUMP v1f2(0x1fc)

    Begin block 0x1fc
    prev=[0x700], succ=[0x3f7B0x1fc]
    =================================
    0x1fd: v1fd(0x3f7) = CONST 
    0x200: JUMP v1fd(0x3f7), v6de, v706, v1ef(0x992)

    Begin block 0x3f7B0x1fc
    prev=[0x1fc], succ=[0x3faB0x1fc]
    =================================
    0x3f8S0x1fc: v3f8V1fc(0x0) = CONST 

    Begin block 0x3faB0x1fc
    prev=[0x3f7B0x1fc, 0x61eB0x1fc], succ=[0x403B0x1fc, 0x626B0x1fc]
    =================================
    0x3fa_0x0S0x1fc: v3fa_0V1fc = PHI v3f8V1fc(0x0), v793V1fc
    0x3fdS0x1fc: v3fdV1fc = LT v3fa_0V1fc, v6de
    0x3feS0x1fc: v3feV1fc = ISZERO v3fdV1fc
    0x3ffS0x1fc: v3ffV1fc(0x626) = CONST 
    0x402S0x1fc: JUMPI v3ffV1fc(0x626), v3feV1fc

    Begin block 0x403B0x1fc
    prev=[0x3faB0x1fc], succ=[0x40fB0x1fc, 0x416B0x1fc]
    =================================
    0x403S0x1fc: v403V1fc(0x0) = CONST 
    0x403_0x0S0x1fc: v403_0V1fc = PHI v3f8V1fc(0x0), v793V1fc
    0x40aS0x1fc: v40aV1fc = LT v403_0V1fc, v6de
    0x40bS0x1fc: v40bV1fc(0x416) = CONST 
    0x40eS0x1fc: JUMPI v40bV1fc(0x416), v40aV1fc

    Begin block 0x40fB0x1fc
    prev=[0x403B0x1fc], succ=[0x7acB0x1fc]
    =================================
    0x40fS0x1fc: v40fV1fc(0x416) = CONST 
    0x412S0x1fc: v412V1fc(0x7ac) = CONST 
    0x415S0x1fc: JUMP v412V1fc(0x7ac)

    Begin block 0x7acB0x1fc
    prev=[0x40fB0x1fc], succ=[]
    =================================
    0x7adS0x1fc: v7adV1fc(0x4e487b71) = CONST 
    0x7b2S0x1fc: v7b2V1fc(0xe0) = CONST 
    0x7b4S0x1fc: v7b4V1fc(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v7b2V1fc(0xe0), v7adV1fc(0x4e487b71)
    0x7b5S0x1fc: v7b5V1fc(0x0) = CONST 
    0x7b7S0x1fc: MSTORE v7b5V1fc(0x0), v7b4V1fc(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x7b8S0x1fc: v7b8V1fc(0x32) = CONST 
    0x7baS0x1fc: v7baV1fc(0x4) = CONST 
    0x7bcS0x1fc: MSTORE v7baV1fc(0x4), v7b8V1fc(0x32)
    0x7bdS0x1fc: v7bdV1fc(0x24) = CONST 
    0x7bfS0x1fc: v7bfV1fc(0x0) = CONST 
    0x7c1S0x1fc: REVERT v7bfV1fc(0x0), v7bdV1fc(0x24)

    Begin block 0x416B0x1fc
    prev=[0x403B0x1fc], succ=[0x66dB0x416B0x1fc]
    =================================
    0x416_0x0S0x1fc: v416_0V1fc = PHI v3f8V1fc(0x0), v793V1fc
    0x419S0x1fc: v419V1fc(0x20) = CONST 
    0x41bS0x1fc: v41bV1fc = MUL v419V1fc(0x20), v416_0V1fc
    0x41cS0x1fc: v41cV1fc = ADD v41bV1fc, v706
    0x41dS0x1fc: v41dV1fc(0x20) = CONST 
    0x420S0x1fc: v420V1fc = ADD v41cV1fc, v41dV1fc(0x20)
    0x422S0x1fc: v422V1fc(0x42b) = CONST 
    0x427S0x1fc: v427V1fc(0x66d) = CONST 
    0x42aS0x1fc: JUMP v427V1fc(0x66d)

    Begin block 0x66dB0x416B0x1fc
    prev=[0x416B0x1fc], succ=[0x67bB0x416B0x1fc, 0x67fB0x416B0x1fc]
    =================================
    0x66eS0x416S0x1fc: v66eV416V1fc(0x0) = CONST 
    0x670S0x416S0x1fc: v670V416V1fc(0x20) = CONST 
    0x674S0x416S0x1fc: v674V416V1fc = SUB v420V1fc, v41cV1fc
    0x675S0x416S0x1fc: v675V416V1fc = SLT v674V416V1fc, v670V416V1fc(0x20)
    0x676S0x416S0x1fc: v676V416V1fc = ISZERO v675V416V1fc
    0x677S0x416S0x1fc: v677V416V1fc(0x67f) = CONST 
    0x67aS0x416S0x1fc: JUMPI v677V416V1fc(0x67f), v676V416V1fc

    Begin block 0x67bB0x416B0x1fc
    prev=[0x66dB0x416B0x1fc], succ=[]
    =================================
    0x67bS0x416S0x1fc: v67bV416V1fc(0x0) = CONST 
    0x67eS0x416S0x1fc: REVERT v67bV416V1fc(0x0), v67bV416V1fc(0x0)

    Begin block 0x67fB0x416B0x1fc
    prev=[0x66dB0x416B0x1fc], succ=[0x692B0x416B0x1fc, 0x696B0x416B0x1fc]
    =================================
    0x681S0x416S0x1fc: v681V416V1fc = CALLDATALOAD v41cV1fc
    0x682S0x416S0x1fc: v682V416V1fc(0x1) = CONST 
    0x684S0x416S0x1fc: v684V416V1fc(0x1) = CONST 
    0x686S0x416S0x1fc: v686V416V1fc(0xa0) = CONST 
    0x688S0x416S0x1fc: v688V416V1fc(0x10000000000000000000000000000000000000000) = SHL v686V416V1fc(0xa0), v684V416V1fc(0x1)
    0x689S0x416S0x1fc: v689V416V1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v688V416V1fc(0x10000000000000000000000000000000000000000), v682V416V1fc(0x1)
    0x68bS0x416S0x1fc: v68bV416V1fc = AND v681V416V1fc, v689V416V1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x68dS0x416S0x1fc: v68dV416V1fc = EQ v681V416V1fc, v68bV416V1fc
    0x68eS0x416S0x1fc: v68eV416V1fc(0x696) = CONST 
    0x691S0x416S0x1fc: JUMPI v68eV416V1fc(0x696), v68dV416V1fc

    Begin block 0x692B0x416B0x1fc
    prev=[0x67fB0x416B0x1fc], succ=[]
    =================================
    0x692S0x416S0x1fc: v692V416V1fc(0x0) = CONST 
    0x695S0x416S0x1fc: REVERT v692V416V1fc(0x0), v692V416V1fc(0x0)

    Begin block 0x696B0x416B0x1fc
    prev=[0x67fB0x416B0x1fc], succ=[0x42bB0x1fc]
    =================================
    0x69cS0x416S0x1fc: JUMP v422V1fc(0x42b)

    Begin block 0x42bB0x1fc
    prev=[0x696B0x416B0x1fc], succ=[0x43cB0x1fc, 0x46eB0x1fc]
    =================================
    0x42eS0x1fc: v42eV1fc(0x1) = CONST 
    0x430S0x1fc: v430V1fc(0x1) = CONST 
    0x432S0x1fc: v432V1fc(0xa0) = CONST 
    0x434S0x1fc: v434V1fc(0x10000000000000000000000000000000000000000) = SHL v432V1fc(0xa0), v430V1fc(0x1)
    0x435S0x1fc: v435V1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v434V1fc(0x10000000000000000000000000000000000000000), v42eV1fc(0x1)
    0x437S0x1fc: v437V1fc = AND v681V416V1fc, v435V1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x438S0x1fc: v438V1fc(0x46e) = CONST 
    0x43bS0x1fc: JUMPI v438V1fc(0x46e), v437V1fc

    Begin block 0x43cB0x1fc
    prev=[0x42bB0x1fc], succ=[0x867B0x1fc]
    =================================
    0x43cS0x1fc: v43cV1fc(0x40) = CONST 
    0x43eS0x1fc: v43eV1fc = MLOAD v43cV1fc(0x40)
    0x43fS0x1fc: v43fV1fc(0x461bcd) = CONST 
    0x443S0x1fc: v443V1fc(0xe5) = CONST 
    0x445S0x1fc: v445V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v443V1fc(0xe5), v43fV1fc(0x461bcd)
    0x447S0x1fc: MSTORE v43eV1fc, v445V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x448S0x1fc: v448V1fc(0x20) = CONST 
    0x44aS0x1fc: v44aV1fc(0x4) = CONST 
    0x44dS0x1fc: v44dV1fc = ADD v43eV1fc, v44aV1fc(0x4)
    0x44eS0x1fc: MSTORE v44dV1fc, v448V1fc(0x20)
    0x44fS0x1fc: v44fV1fc(0x8) = CONST 
    0x451S0x1fc: v451V1fc(0x24) = CONST 
    0x454S0x1fc: v454V1fc = ADD v43eV1fc, v451V1fc(0x24)
    0x455S0x1fc: MSTORE v454V1fc, v44fV1fc(0x8)
    0x456S0x1fc: v456V1fc(0x14995cd95c9d9959) = CONST 
    0x45fS0x1fc: v45fV1fc(0xc2) = CONST 
    0x461S0x1fc: v461V1fc(0x5265736572766564000000000000000000000000000000000000000000000000) = SHL v45fV1fc(0xc2), v456V1fc(0x14995cd95c9d9959)
    0x462S0x1fc: v462V1fc(0x44) = CONST 
    0x465S0x1fc: v465V1fc = ADD v43eV1fc, v462V1fc(0x44)
    0x466S0x1fc: MSTORE v465V1fc, v461V1fc(0x5265736572766564000000000000000000000000000000000000000000000000)
    0x467S0x1fc: v467V1fc(0x64) = CONST 
    0x469S0x1fc: v469V1fc = ADD v467V1fc(0x64), v43eV1fc
    0x46aS0x1fc: v46aV1fc(0x867) = CONST 
    0x46dS0x1fc: JUMP v46aV1fc(0x867)

    Begin block 0x867B0x1fc
    prev=[0x43cB0x1fc], succ=[]
    =================================
    0x868S0x1fc: v868V1fc(0x40) = CONST 
    0x86aS0x1fc: v86aV1fc = MLOAD v868V1fc(0x40)
    0x86dS0x1fc: v86dV1fc(0x64) = SUB v469V1fc, v86aV1fc
    0x86fS0x1fc: REVERT v86aV1fc, v86dV1fc(0x64)

    Begin block 0x46eB0x1fc
    prev=[0x42bB0x1fc], succ=[0x48dB0x1fc, 0x4d4B0x1fc]
    =================================
    0x46fS0x1fc: v46fV1fc(0x1) = CONST 
    0x471S0x1fc: v471V1fc(0x1) = CONST 
    0x473S0x1fc: v473V1fc(0xa0) = CONST 
    0x475S0x1fc: v475V1fc(0x10000000000000000000000000000000000000000) = SHL v473V1fc(0xa0), v471V1fc(0x1)
    0x476S0x1fc: v476V1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v475V1fc(0x10000000000000000000000000000000000000000), v46fV1fc(0x1)
    0x478S0x1fc: v478V1fc = AND v681V416V1fc, v476V1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x479S0x1fc: v479V1fc(0x0) = CONST 
    0x47dS0x1fc: MSTORE v479V1fc(0x0), v478V1fc
    0x47eS0x1fc: v47eV1fc(0xa3) = CONST 
    0x480S0x1fc: v480V1fc(0x20) = CONST 
    0x482S0x1fc: MSTORE v480V1fc(0x20), v47eV1fc(0xa3)
    0x483S0x1fc: v483V1fc(0x40) = CONST 
    0x486S0x1fc: v486V1fc = SHA3 v479V1fc(0x0), v483V1fc(0x40)
    0x487S0x1fc: v487V1fc = SLOAD v486V1fc
    0x488S0x1fc: v488V1fc = ISZERO v487V1fc
    0x489S0x1fc: v489V1fc(0x4d4) = CONST 
    0x48cS0x1fc: JUMPI v489V1fc(0x4d4), v488V1fc

    Begin block 0x48dB0x1fc
    prev=[0x46eB0x1fc], succ=[0x88fB0x1fc]
    =================================
    0x48dS0x1fc: v48dV1fc(0x40) = CONST 
    0x48fS0x1fc: v48fV1fc = MLOAD v48dV1fc(0x40)
    0x490S0x1fc: v490V1fc(0x461bcd) = CONST 
    0x494S0x1fc: v494V1fc(0xe5) = CONST 
    0x496S0x1fc: v496V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v494V1fc(0xe5), v490V1fc(0x461bcd)
    0x498S0x1fc: MSTORE v48fV1fc, v496V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x499S0x1fc: v499V1fc(0x20) = CONST 
    0x49bS0x1fc: v49bV1fc(0x4) = CONST 
    0x49eS0x1fc: v49eV1fc = ADD v48fV1fc, v49bV1fc(0x4)
    0x49fS0x1fc: MSTORE v49eV1fc, v499V1fc(0x20)
    0x4a0S0x1fc: v4a0V1fc(0x18) = CONST 
    0x4a2S0x1fc: v4a2V1fc(0x24) = CONST 
    0x4a5S0x1fc: v4a5V1fc = ADD v48fV1fc, v4a2V1fc(0x24)
    0x4a6S0x1fc: MSTORE v4a5V1fc, v4a0V1fc(0x18)
    0x4a7S0x1fc: v4a7V1fc(0x4163636f756e7420616c72656164792075706772616465640000000000000000) = CONST 
    0x4c8S0x1fc: v4c8V1fc(0x44) = CONST 
    0x4cbS0x1fc: v4cbV1fc = ADD v48fV1fc, v4c8V1fc(0x44)
    0x4ccS0x1fc: MSTORE v4cbV1fc, v4a7V1fc(0x4163636f756e7420616c72656164792075706772616465640000000000000000)
    0x4cdS0x1fc: v4cdV1fc(0x64) = CONST 
    0x4cfS0x1fc: v4cfV1fc = ADD v4cdV1fc(0x64), v48fV1fc
    0x4d0S0x1fc: v4d0V1fc(0x88f) = CONST 
    0x4d3S0x1fc: JUMP v4d0V1fc(0x88f)

    Begin block 0x88fB0x1fc
    prev=[0x48dB0x1fc], succ=[]
    =================================
    0x890S0x1fc: v890V1fc(0x40) = CONST 
    0x892S0x1fc: v892V1fc = MLOAD v890V1fc(0x40)
    0x895S0x1fc: v895V1fc(0x64) = SUB v4cfV1fc, v892V1fc
    0x897S0x1fc: REVERT v892V1fc, v895V1fc(0x64)

    Begin block 0x4d4B0x1fc
    prev=[0x46eB0x1fc], succ=[0x502B0x1fc, 0x580B0x1fc]
    =================================
    0x4d5S0x1fc: v4d5V1fc(0x1) = CONST 
    0x4d7S0x1fc: v4d7V1fc(0x1) = CONST 
    0x4d9S0x1fc: v4d9V1fc(0xa0) = CONST 
    0x4dbS0x1fc: v4dbV1fc(0x10000000000000000000000000000000000000000) = SHL v4d9V1fc(0xa0), v4d7V1fc(0x1)
    0x4dcS0x1fc: v4dcV1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4dbV1fc(0x10000000000000000000000000000000000000000), v4d5V1fc(0x1)
    0x4deS0x1fc: v4deV1fc = AND v681V416V1fc, v4dcV1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x4dfS0x1fc: v4dfV1fc(0x0) = CONST 
    0x4e3S0x1fc: MSTORE v4dfV1fc(0x0), v4deV1fc
    0x4e4S0x1fc: v4e4V1fc(0xa3) = CONST 
    0x4e6S0x1fc: v4e6V1fc(0x20) = CONST 
    0x4eaS0x1fc: MSTORE v4e6V1fc(0x20), v4e4V1fc(0xa3)
    0x4ebS0x1fc: v4ebV1fc(0x40) = CONST 
    0x4efS0x1fc: v4efV1fc = SHA3 v4dfV1fc(0x0), v4ebV1fc(0x40)
    0x4f0S0x1fc: v4f0V1fc(0x1) = CONST 
    0x4f3S0x1fc: SSTORE v4efV1fc, v4f0V1fc(0x1)
    0x4f4S0x1fc: v4f4V1fc(0xa1) = CONST 
    0x4f8S0x1fc: MSTORE v4e6V1fc(0x20), v4f4V1fc(0xa1)
    0x4faS0x1fc: v4faV1fc = SHA3 v4dfV1fc(0x0), v4ebV1fc(0x40)
    0x4fbS0x1fc: v4fbV1fc = SLOAD v4faV1fc
    0x4fdS0x1fc: v4fdV1fc = ISZERO v4fbV1fc
    0x4feS0x1fc: v4feV1fc(0x580) = CONST 
    0x501S0x1fc: JUMPI v4feV1fc(0x580), v4fdV1fc

    Begin block 0x502B0x1fc
    prev=[0x4d4B0x1fc], succ=[0x511B0x1fc, 0x558B0x1fc]
    =================================
    0x502S0x1fc: v502V1fc(0xde0b6b3a7640000) = CONST 
    0x50cS0x1fc: v50cV1fc = LT v4fbV1fc, v502V1fc(0xde0b6b3a7640000)
    0x50dS0x1fc: v50dV1fc(0x558) = CONST 
    0x510S0x1fc: JUMPI v50dV1fc(0x558), v50cV1fc

    Begin block 0x511B0x1fc
    prev=[0x502B0x1fc], succ=[0x8b7B0x1fc]
    =================================
    0x511S0x1fc: v511V1fc(0x40) = CONST 
    0x513S0x1fc: v513V1fc = MLOAD v511V1fc(0x40)
    0x514S0x1fc: v514V1fc(0x461bcd) = CONST 
    0x518S0x1fc: v518V1fc(0xe5) = CONST 
    0x51aS0x1fc: v51aV1fc(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v518V1fc(0xe5), v514V1fc(0x461bcd)
    0x51cS0x1fc: MSTORE v513V1fc, v51aV1fc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x51dS0x1fc: v51dV1fc(0x20) = CONST 
    0x51fS0x1fc: v51fV1fc(0x4) = CONST 
    0x522S0x1fc: v522V1fc = ADD v513V1fc, v51fV1fc(0x4)
    0x523S0x1fc: MSTORE v522V1fc, v51dV1fc(0x20)
    0x524S0x1fc: v524V1fc(0x17) = CONST 
    0x526S0x1fc: v526V1fc(0x24) = CONST 
    0x529S0x1fc: v529V1fc = ADD v513V1fc, v526V1fc(0x24)
    0x52aS0x1fc: MSTORE v529V1fc, v524V1fc(0x17)
    0x52bS0x1fc: v52bV1fc(0x4163636f756e7420616c72656164792068696768726573000000000000000000) = CONST 
    0x54cS0x1fc: v54cV1fc(0x44) = CONST 
    0x54fS0x1fc: v54fV1fc = ADD v513V1fc, v54cV1fc(0x44)
    0x550S0x1fc: MSTORE v54fV1fc, v52bV1fc(0x4163636f756e7420616c72656164792068696768726573000000000000000000)
    0x551S0x1fc: v551V1fc(0x64) = CONST 
    0x553S0x1fc: v553V1fc = ADD v551V1fc(0x64), v513V1fc
    0x554S0x1fc: v554V1fc(0x8b7) = CONST 
    0x557S0x1fc: JUMP v554V1fc(0x8b7)

    Begin block 0x8b7B0x1fc
    prev=[0x511B0x1fc], succ=[]
    =================================
    0x8b8S0x1fc: v8b8V1fc(0x40) = CONST 
    0x8baS0x1fc: v8baV1fc = MLOAD v8b8V1fc(0x40)
    0x8bdS0x1fc: v8bdV1fc(0x64) = SUB v553V1fc, v8baV1fc
    0x8bfS0x1fc: REVERT v8baV1fc, v8bdV1fc(0x64)

    Begin block 0x558B0x1fc
    prev=[0x502B0x1fc], succ=[0x566B0x1fc]
    =================================
    0x559S0x1fc: v559V1fc(0x566) = CONST 
    0x55cS0x1fc: v55cV1fc(0x3b9aca00) = CONST 
    0x562S0x1fc: v562V1fc(0x75c) = CONST 
    0x565S0x1fc: v565_0V1fc = CALLPRIVATE v562V1fc(0x75c), v4fbV1fc, v55cV1fc(0x3b9aca00), v559V1fc(0x566)

    Begin block 0x566B0x1fc
    prev=[0x558B0x1fc], succ=[0x580B0x1fc]
    =================================
    0x567S0x1fc: v567V1fc(0x1) = CONST 
    0x569S0x1fc: v569V1fc(0x1) = CONST 
    0x56bS0x1fc: v56bV1fc(0xa0) = CONST 
    0x56dS0x1fc: v56dV1fc(0x10000000000000000000000000000000000000000) = SHL v56bV1fc(0xa0), v569V1fc(0x1)
    0x56eS0x1fc: v56eV1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v56dV1fc(0x10000000000000000000000000000000000000000), v567V1fc(0x1)
    0x570S0x1fc: v570V1fc = AND v681V416V1fc, v56eV1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x571S0x1fc: v571V1fc(0x0) = CONST 
    0x575S0x1fc: MSTORE v571V1fc(0x0), v570V1fc
    0x576S0x1fc: v576V1fc(0xa1) = CONST 
    0x578S0x1fc: v578V1fc(0x20) = CONST 
    0x57aS0x1fc: MSTORE v578V1fc(0x20), v576V1fc(0xa1)
    0x57bS0x1fc: v57bV1fc(0x40) = CONST 
    0x57eS0x1fc: v57eV1fc = SHA3 v571V1fc(0x0), v57bV1fc(0x40)
    0x57fS0x1fc: SSTORE v57eV1fc, v565_0V1fc

    Begin block 0x580B0x1fc
    prev=[0x4d4B0x1fc, 0x566B0x1fc], succ=[0x59fB0x1fc, 0x5e6B0x1fc]
    =================================
    0x581S0x1fc: v581V1fc(0x1) = CONST 
    0x583S0x1fc: v583V1fc(0x1) = CONST 
    0x585S0x1fc: v585V1fc(0xa0) = CONST 
    0x587S0x1fc: v587V1fc(0x10000000000000000000000000000000000000000) = SHL v585V1fc(0xa0), v583V1fc(0x1)
    0x588S0x1fc: v588V1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v587V1fc(0x10000000000000000000000000000000000000000), v581V1fc(0x1)
    0x58aS0x1fc: v58aV1fc = AND v681V416V1fc, v588V1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x58bS0x1fc: v58bV1fc(0x0) = CONST 
    0x58fS0x1fc: MSTORE v58bV1fc(0x0), v58aV1fc
    0x590S0x1fc: v590V1fc(0x9d) = CONST 
    0x592S0x1fc: v592V1fc(0x20) = CONST 
    0x594S0x1fc: MSTORE v592V1fc(0x20), v590V1fc(0x9d)
    0x595S0x1fc: v595V1fc(0x40) = CONST 
    0x598S0x1fc: v598V1fc = SHA3 v58bV1fc(0x0), v595V1fc(0x40)
    0x599S0x1fc: v599V1fc = SLOAD v598V1fc
    0x59bS0x1fc: v59bV1fc(0x5e6) = CONST 
    0x59eS0x1fc: JUMPI v59bV1fc(0x5e6), v599V1fc

    Begin block 0x59fB0x1fc
    prev=[0x580B0x1fc], succ=[0x8dfB0x1fc]
    =================================
    0x59fS0x1fc: v59fV1fc(0x40) = CONST 
    0x5a1S0x1fc: v5a1V1fc = MLOAD v59fV1fc(0x40)
    0x5a2S0x1fc: v5a2V1fc(0x461bcd) = CONST 
    0x5a6S0x1fc: v5a6V1fc(0xe5) = CONST 
    0x5a8S0x1fc: v5a8V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5a6V1fc(0xe5), v5a2V1fc(0x461bcd)
    0x5aaS0x1fc: MSTORE v5a1V1fc, v5a8V1fc(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5abS0x1fc: v5abV1fc(0x20) = CONST 
    0x5adS0x1fc: v5adV1fc(0x4) = CONST 
    0x5b0S0x1fc: v5b0V1fc = ADD v5a1V1fc, v5adV1fc(0x4)
    0x5b1S0x1fc: MSTORE v5b0V1fc, v5abV1fc(0x20)
    0x5b2S0x1fc: v5b2V1fc(0x1d) = CONST 
    0x5b4S0x1fc: v5b4V1fc(0x24) = CONST 
    0x5b7S0x1fc: v5b7V1fc = ADD v5a1V1fc, v5b4V1fc(0x24)
    0x5b8S0x1fc: MSTORE v5b7V1fc, v5b2V1fc(0x1d)
    0x5b9S0x1fc: v5b9V1fc(0x57696c6c206e6f742075706772616465207a65726f2062616c616e6365000000) = CONST 
    0x5daS0x1fc: v5daV1fc(0x44) = CONST 
    0x5ddS0x1fc: v5ddV1fc = ADD v5a1V1fc, v5daV1fc(0x44)
    0x5deS0x1fc: MSTORE v5ddV1fc, v5b9V1fc(0x57696c6c206e6f742075706772616465207a65726f2062616c616e6365000000)
    0x5dfS0x1fc: v5dfV1fc(0x64) = CONST 
    0x5e1S0x1fc: v5e1V1fc = ADD v5dfV1fc(0x64), v5a1V1fc
    0x5e2S0x1fc: v5e2V1fc(0x8df) = CONST 
    0x5e5S0x1fc: JUMP v5e2V1fc(0x8df)

    Begin block 0x8dfB0x1fc
    prev=[0x59fB0x1fc], succ=[]
    =================================
    0x8e0S0x1fc: v8e0V1fc(0x40) = CONST 
    0x8e2S0x1fc: v8e2V1fc = MLOAD v8e0V1fc(0x40)
    0x8e5S0x1fc: v8e5V1fc(0x64) = SUB v5e1V1fc, v8e2V1fc
    0x8e7S0x1fc: REVERT v8e2V1fc, v8e5V1fc(0x64)

    Begin block 0x5e6B0x1fc
    prev=[0x580B0x1fc], succ=[0x5f4B0x1fc]
    =================================
    0x5e7S0x1fc: v5e7V1fc(0x5f4) = CONST 
    0x5eaS0x1fc: v5eaV1fc(0x3b9aca00) = CONST 
    0x5f0S0x1fc: v5f0V1fc(0x75c) = CONST 
    0x5f3S0x1fc: v5f3_0V1fc = CALLPRIVATE v5f0V1fc(0x75c), v599V1fc, v5eaV1fc(0x3b9aca00), v5e7V1fc(0x5f4)

    Begin block 0x5f4B0x1fc
    prev=[0x5e6B0x1fc], succ=[0x77bB0x1fc]
    =================================
    0x5f5S0x1fc: v5f5V1fc(0x1) = CONST 
    0x5f7S0x1fc: v5f7V1fc(0x1) = CONST 
    0x5f9S0x1fc: v5f9V1fc(0xa0) = CONST 
    0x5fbS0x1fc: v5fbV1fc(0x10000000000000000000000000000000000000000) = SHL v5f9V1fc(0xa0), v5f7V1fc(0x1)
    0x5fcS0x1fc: v5fcV1fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5fbV1fc(0x10000000000000000000000000000000000000000), v5f5V1fc(0x1)
    0x5ffS0x1fc: v5ffV1fc = AND v681V416V1fc, v5fcV1fc(0xffffffffffffffffffffffffffffffffffffffff)
    0x600S0x1fc: v600V1fc(0x0) = CONST 
    0x604S0x1fc: MSTORE v600V1fc(0x0), v5ffV1fc
    0x605S0x1fc: v605V1fc(0x9d) = CONST 
    0x607S0x1fc: v607V1fc(0x20) = CONST 
    0x609S0x1fc: MSTORE v607V1fc(0x20), v605V1fc(0x9d)
    0x60aS0x1fc: v60aV1fc(0x40) = CONST 
    0x60dS0x1fc: v60dV1fc = SHA3 v600V1fc(0x0), v60aV1fc(0x40)
    0x611S0x1fc: SSTORE v60dV1fc, v5f3_0V1fc
    0x616S0x1fc: v616V1fc(0x61e) = CONST 
    0x61aS0x1fc: v61aV1fc(0x77b) = CONST 
    0x61dS0x1fc: JUMP v61aV1fc(0x77b)

    Begin block 0x77bB0x1fc
    prev=[0x5f4B0x1fc], succ=[0x788B0x1fc, 0x78fB0x1fc]
    =================================
    0x77b_0x0S0x1fc: v77b_0V1fc = PHI v3f8V1fc(0x0), v793V1fc
    0x77cS0x1fc: v77cV1fc(0x0) = CONST 
    0x77eS0x1fc: v77eV1fc(0x0) = CONST 
    0x780S0x1fc: v780V1fc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v77eV1fc(0x0)
    0x782S0x1fc: v782V1fc = EQ v77b_0V1fc, v780V1fc(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
    0x783S0x1fc: v783V1fc = ISZERO v782V1fc
    0x784S0x1fc: v784V1fc(0x78f) = CONST 
    0x787S0x1fc: JUMPI v784V1fc(0x78f), v783V1fc

    Begin block 0x788B0x1fc
    prev=[0x77bB0x1fc], succ=[0x93cB0x1fc]
    =================================
    0x788S0x1fc: v788V1fc(0x78f) = CONST 
    0x78bS0x1fc: v78bV1fc(0x93c) = CONST 
    0x78eS0x1fc: JUMP v78bV1fc(0x93c)

    Begin block 0x93cB0x1fc
    prev=[0x788B0x1fc], succ=[]
    =================================
    0x93dS0x1fc: v93dV1fc(0x4e487b71) = CONST 
    0x942S0x1fc: v942V1fc(0xe0) = CONST 
    0x944S0x1fc: v944V1fc(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v942V1fc(0xe0), v93dV1fc(0x4e487b71)
    0x945S0x1fc: v945V1fc(0x0) = CONST 
    0x947S0x1fc: MSTORE v945V1fc(0x0), v944V1fc(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x948S0x1fc: v948V1fc(0x11) = CONST 
    0x94aS0x1fc: v94aV1fc(0x4) = CONST 
    0x94cS0x1fc: MSTORE v94aV1fc(0x4), v948V1fc(0x11)
    0x94dS0x1fc: v94dV1fc(0x24) = CONST 
    0x94fS0x1fc: v94fV1fc(0x0) = CONST 
    0x951S0x1fc: REVERT v94fV1fc(0x0), v94dV1fc(0x24)

    Begin block 0x78fB0x1fc
    prev=[0x77bB0x1fc], succ=[0x61eB0x1fc]
    =================================
    0x78f_0x1S0x1fc: v78f_1V1fc = PHI v3f8V1fc(0x0), v793V1fc
    0x791S0x1fc: v791V1fc(0x1) = CONST 
    0x793S0x1fc: v793V1fc = ADD v791V1fc(0x1), v78f_1V1fc
    0x795S0x1fc: JUMP v616V1fc(0x61e)

    Begin block 0x61eB0x1fc
    prev=[0x78fB0x1fc], succ=[0x3faB0x1fc]
    =================================
    0x622S0x1fc: v622V1fc(0x3fa) = CONST 
    0x625S0x1fc: JUMP v622V1fc(0x3fa)

    Begin block 0x626B0x1fc
    prev=[0x3faB0x1fc], succ=[0x992]
    =================================
    0x62aS0x1fc: JUMP v1ef(0x992)

    Begin block 0x992
    prev=[0x626B0x1fc], succ=[]
    =================================
    0x993: STOP 

}

function 0x75c(0x75carg0x0, 0x75carg0x1, 0x75carg0x2) private {
    Begin block 0x75c
    prev=[], succ=[0x76f, 0x776]
    =================================
    0x75d: v75d(0x0) = CONST 
    0x760: v760(0x0) = CONST 
    0x762: v762(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v760(0x0)
    0x763: v763 = DIV v762(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v75carg0
    0x765: v765 = GT v75carg1, v763
    0x767: v767 = ISZERO v75carg0
    0x768: v768 = ISZERO v767
    0x769: v769 = AND v768, v765
    0x76a: v76a = ISZERO v769
    0x76b: v76b(0x776) = CONST 
    0x76e: JUMPI v76b(0x776), v76a

    Begin block 0x76f
    prev=[0x75c], succ=[0x907]
    =================================
    0x76f: v76f(0x776) = CONST 
    0x772: v772(0x907) = CONST 
    0x775: JUMP v772(0x907)

    Begin block 0x907
    prev=[0x76f], succ=[]
    =================================
    0x908: v908(0x4e487b71) = CONST 
    0x90d: v90d(0xe0) = CONST 
    0x90f: v90f(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v90d(0xe0), v908(0x4e487b71)
    0x910: v910(0x0) = CONST 
    0x912: MSTORE v910(0x0), v90f(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x913: v913(0x11) = CONST 
    0x915: v915(0x4) = CONST 
    0x917: MSTORE v915(0x4), v913(0x11)
    0x918: v918(0x24) = CONST 
    0x91a: v91a(0x0) = CONST 
    0x91c: REVERT v91a(0x0), v918(0x24)

    Begin block 0x776
    prev=[0x75c], succ=[]
    =================================
    0x778: v778 = MUL v75carg0, v75carg1
    0x77a: RETURNPRIVATE v75carg2, v778

}

function fallback()() public {
    Begin block 0xcf
    prev=[], succ=[]
    =================================
    0xd0: vd0(0x0) = CONST 
    0xd3: REVERT vd0(0x0), vd0(0x0)

}

function rebasingCredits()() public {
    Begin block 0xd4
    prev=[], succ=[0x201B0xd4]
    =================================
    0xd5: vd5(0xdc) = CONST 
    0xd8: vd8(0x201) = CONST 
    0xdb: JUMP vd8(0x201)

    Begin block 0x201B0xd4
    prev=[0xd4], succ=[0x73aB0x201B0xd4]
    =================================
    0x202S0xd4: v202Vd4(0x0) = CONST 
    0x204S0xd4: v204Vd4(0x3b9aca00) = CONST 
    0x209S0xd4: v209Vd4(0x9e) = CONST 
    0x20bS0xd4: v20bVd4 = SLOAD v209Vd4(0x9e)
    0x20cS0xd4: v20cVd4(0x9b3) = CONST 
    0x211S0xd4: v211Vd4(0x73a) = CONST 
    0x214S0xd4: JUMP v211Vd4(0x73a)

    Begin block 0x73aB0x201B0xd4
    prev=[0x201B0xd4], succ=[0x742B0x201B0xd4, 0x757B0x201B0xd4]
    =================================
    0x73bS0x201S0xd4: v73bV201Vd4(0x0) = CONST 
    0x73eS0x201S0xd4: v73eV201Vd4(0x757) = CONST 
    0x741S0x201S0xd4: JUMPI v73eV201Vd4(0x757), v204Vd4(0x3b9aca00)

    Begin block 0x742B0x201B0xd4
    prev=[0x73aB0x201B0xd4], succ=[]
    =================================
    0x742S0x201S0xd4: v742V201Vd4(0x4e487b71) = CONST 
    0x747S0x201S0xd4: v747V201Vd4(0xe0) = CONST 
    0x749S0x201S0xd4: v749V201Vd4(0x4e487b7100000000000000000000000000000000000000000000000000000000) = SHL v747V201Vd4(0xe0), v742V201Vd4(0x4e487b71)
    0x74aS0x201S0xd4: v74aV201Vd4(0x0) = CONST 
    0x74cS0x201S0xd4: MSTORE v74aV201Vd4(0x0), v749V201Vd4(0x4e487b7100000000000000000000000000000000000000000000000000000000)
    0x74dS0x201S0xd4: v74dV201Vd4(0x12) = CONST 
    0x74fS0x201S0xd4: v74fV201Vd4(0x4) = CONST 
    0x751S0x201S0xd4: MSTORE v74fV201Vd4(0x4), v74dV201Vd4(0x12)
    0x752S0x201S0xd4: v752V201Vd4(0x24) = CONST 
    0x754S0x201S0xd4: v754V201Vd4(0x0) = CONST 
    0x756S0x201S0xd4: REVERT v754V201Vd4(0x0), v752V201Vd4(0x24)

    Begin block 0x757B0x201B0xd4
    prev=[0x73aB0x201B0xd4], succ=[0x9b3B0xd4]
    =================================
    0x759S0x201S0xd4: v759V201Vd4 = DIV v20bVd4, v204Vd4(0x3b9aca00)
    0x75bS0x201S0xd4: JUMP v20cVd4(0x9b3)

    Begin block 0x9b3B0xd4
    prev=[0x757B0x201B0xd4], succ=[0xdc0xd4]
    =================================
    0x9b7S0xd4: JUMP vd5(0xdc)

    Begin block 0xdc0xd4
    prev=[0x9b3B0xd4], succ=[0xe60xd4]
    =================================
    0xdd0xd4: vd4dd(0x40) = CONST 
    0xdf0xd4: vd4df = MLOAD vd4dd(0x40)
    0xe20xd4: MSTORE vd4df, v759V201Vd4
    0xe30xd4: vd4e3(0x20) = CONST 
    0xe50xd4: vd4e5 = ADD vd4e3(0x20), vd4df

    Begin block 0xe60xd4
    prev=[0xdc0xd4], succ=[]
    =================================
    0xe70xd4: vd4e7(0x40) = CONST 
    0xe90xd4: vd4e9 = MLOAD vd4e7(0x40)
    0xec0xd4: vd4ec(0x20) = SUB vd4e5, vd4e9
    0xee0xd4: RETURN vd4e9, vd4ec(0x20)

}

function _totalSupply()() public {
    Begin block 0xef
    prev=[], succ=[0xdc0xef]
    =================================
    0xf0: vf0(0xdc) = CONST 
    0xf3: vf3(0x9a) = CONST 
    0xf5: vf5 = SLOAD vf3(0x9a)
    0xf7: JUMP vf0(0xdc)

    Begin block 0xdc0xef
    prev=[0xef], succ=[0xe60xef]
    =================================
    0xdd0xef: vefdd(0x40) = CONST 
    0xdf0xef: vefdf = MLOAD vefdd(0x40)
    0xe20xef: MSTORE vefdf, vf5
    0xe30xef: vefe3(0x20) = CONST 
    0xe50xef: vefe5 = ADD vefe3(0x20), vefdf

    Begin block 0xe60xef
    prev=[0xdc0xef], succ=[]
    =================================
    0xe70xef: vefe7(0x40) = CONST 
    0xe90xef: vefe9 = MLOAD vefe7(0x40)
    0xec0xef: vefec(0x20) = SUB vefe5, vefe9
    0xee0xef: RETURN vefe9, vefec(0x20)

}

function vaultAddress()() public {
    Begin block 0xf8
    prev=[], succ=[0x10b]
    =================================
    0xf9: vf9(0x9c) = CONST 
    0xfb: vfb = SLOAD vf9(0x9c)
    0xfc: vfc(0x10b) = CONST 
    0x100: v100(0x1) = CONST 
    0x102: v102(0x1) = CONST 
    0x104: v104(0xa0) = CONST 
    0x106: v106(0x10000000000000000000000000000000000000000) = SHL v104(0xa0), v102(0x1)
    0x107: v107(0xffffffffffffffffffffffffffffffffffffffff) = SUB v106(0x10000000000000000000000000000000000000000), v100(0x1)
    0x108: v108 = AND v107(0xffffffffffffffffffffffffffffffffffffffff), vfb
    0x10a: JUMP vfc(0x10b)

    Begin block 0x10b
    prev=[0xf8], succ=[0xe60xf8]
    =================================
    0x10c: v10c(0x40) = CONST 
    0x10e: v10e = MLOAD v10c(0x40)
    0x10f: v10f(0x1) = CONST 
    0x111: v111(0x1) = CONST 
    0x113: v113(0xa0) = CONST 
    0x115: v115(0x10000000000000000000000000000000000000000) = SHL v113(0xa0), v111(0x1)
    0x116: v116(0xffffffffffffffffffffffffffffffffffffffff) = SUB v115(0x10000000000000000000000000000000000000000), v10f(0x1)
    0x119: v119 = AND v108, v116(0xffffffffffffffffffffffffffffffffffffffff)
    0x11b: MSTORE v10e, v119
    0x11c: v11c(0x20) = CONST 
    0x11e: v11e = ADD v11c(0x20), v10e
    0x11f: v11f(0xe6) = CONST 
    0x122: JUMP v11f(0xe6)

    Begin block 0xe60xf8
    prev=[0x10b], succ=[]
    =================================
    0xe70xf8: vf8e7(0x40) = CONST 
    0xe90xf8: vf8e9 = MLOAD vf8e7(0x40)
    0xec0xf8: vf8ec(0x20) = SUB v11e, vf8e9
    0xee0xf8: RETURN vf8e9, vf8ec(0x20)

}

