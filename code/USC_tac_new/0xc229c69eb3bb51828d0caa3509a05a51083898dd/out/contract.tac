function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x896]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x88a: v88a(0x896) = CONST 
    0x88b: JUMPI v88a(0x896), v8

    Begin block 0xd
    prev=[0x0], succ=[0x899, 0x41]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
    0x2f: v2f = DIV vf, v10(0x100000000000000000000000000000000000000000000000000000000)
    0x30: v30(0xffffffff) = CONST 
    0x35: v35 = AND v30(0xffffffff), v2f
    0x37: v37(0x3659cfe6) = CONST 
    0x3c: v3c = EQ v37(0x3659cfe6), v35
    0x88c: v88c(0x899) = CONST 
    0x88d: JUMPI v88c(0x899), v3c

    Begin block 0x899
    prev=[0xd], succ=[]
    =================================
    0x89a: v89a(0x77) = CONST 
    0x89b: CALLPRIVATE v89a(0x77)

    Begin block 0x41
    prev=[0xd], succ=[0x89c, 0x4c]
    =================================
    0x42: v42(0x4f1ef286) = CONST 
    0x47: v47 = EQ v42(0x4f1ef286), v35
    0x88e: v88e(0x89c) = CONST 
    0x88f: JUMPI v88e(0x89c), v47

    Begin block 0x89c
    prev=[0x41], succ=[]
    =================================
    0x89d: v89d(0xba) = CONST 
    0x89e: CALLPRIVATE v89d(0xba)

    Begin block 0x4c
    prev=[0x41], succ=[0x89f, 0x57]
    =================================
    0x4d: v4d(0x5c60da1b) = CONST 
    0x52: v52 = EQ v4d(0x5c60da1b), v35
    0x890: v890(0x89f) = CONST 
    0x891: JUMPI v890(0x89f), v52

    Begin block 0x89f
    prev=[0x4c], succ=[]
    =================================
    0x8a0: v8a0(0x108) = CONST 
    0x8a1: CALLPRIVATE v8a0(0x108)

    Begin block 0x57
    prev=[0x4c], succ=[0x8a2, 0x62]
    =================================
    0x58: v58(0x8f283970) = CONST 
    0x5d: v5d = EQ v58(0x8f283970), v35
    0x892: v892(0x8a2) = CONST 
    0x893: JUMPI v892(0x8a2), v5d

    Begin block 0x8a2
    prev=[0x57], succ=[]
    =================================
    0x8a3: v8a3(0x15f) = CONST 
    0x8a4: CALLPRIVATE v8a3(0x15f)

    Begin block 0x62
    prev=[0x57], succ=[0x896, 0x8a5]
    =================================
    0x63: v63(0xf851a440) = CONST 
    0x68: v68 = EQ v63(0xf851a440), v35
    0x894: v894(0x8a5) = CONST 
    0x895: JUMPI v894(0x8a5), v68

    Begin block 0x896
    prev=[0x0, 0x62], succ=[]
    =================================
    0x897: v897(0x6d) = CONST 
    0x898: CALLPRIVATE v897(0x6d)

    Begin block 0x8a5
    prev=[0x62], succ=[]
    =================================
    0x8a6: v8a6(0x1a2) = CONST 
    0x8a7: CALLPRIVATE v8a6(0x1a2)

}

function implementation()() public {
    Begin block 0x108
    prev=[], succ=[0x110, 0x114]
    =================================
    0x109: v109 = CALLVALUE 
    0x10b: v10b = ISZERO v109
    0x10c: v10c(0x114) = CONST 
    0x10f: JUMPI v10c(0x114), v10b

    Begin block 0x110
    prev=[0x108], succ=[]
    =================================
    0x110: v110(0x0) = CONST 
    0x113: REVERT v110(0x0), v110(0x0)

    Begin block 0x114
    prev=[0x108], succ=[0x11d]
    =================================
    0x116: v116(0x11d) = CONST 
    0x119: v119(0x308) = CONST 
    0x11c: v11c_0 = CALLPRIVATE v119(0x308), v116(0x11d)

    Begin block 0x11d
    prev=[0x114], succ=[]
    =================================
    0x11e: v11e(0x40) = CONST 
    0x120: v120 = MLOAD v11e(0x40)
    0x123: v123(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x138: v138 = AND v123(0xffffffffffffffffffffffffffffffffffffffff), v11c_0
    0x139: v139(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x14e: v14e = AND v139(0xffffffffffffffffffffffffffffffffffffffff), v138
    0x150: MSTORE v120, v14e
    0x151: v151(0x20) = CONST 
    0x153: v153 = ADD v151(0x20), v120
    0x157: v157(0x40) = CONST 
    0x159: v159 = MLOAD v157(0x40)
    0x15c: v15c(0x20) = SUB v153, v159
    0x15e: RETURN v159, v15c(0x20)

}

function changeAdmin(address)() public {
    Begin block 0x15f
    prev=[], succ=[0x167, 0x16b]
    =================================
    0x160: v160 = CALLVALUE 
    0x162: v162 = ISZERO v160
    0x163: v163(0x16b) = CONST 
    0x166: JUMPI v163(0x16b), v162

    Begin block 0x167
    prev=[0x15f], succ=[]
    =================================
    0x167: v167(0x0) = CONST 
    0x16a: REVERT v167(0x0), v167(0x0)

    Begin block 0x16b
    prev=[0x15f], succ=[0x360B0x16b]
    =================================
    0x16d: v16d(0x1a0) = CONST 
    0x170: v170(0x4) = CONST 
    0x173: v173 = CALLDATASIZE 
    0x174: v174 = SUB v173, v170(0x4)
    0x176: v176 = ADD v170(0x4), v174
    0x17a: v17a = CALLDATALOAD v170(0x4)
    0x17b: v17b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x190: v190 = AND v17b(0xffffffffffffffffffffffffffffffffffffffff), v17a
    0x192: v192(0x20) = CONST 
    0x194: v194(0x24) = ADD v192(0x20), v170(0x4)
    0x19c: v19c(0x360) = CONST 
    0x19f: JUMP v19c(0x360), v190, v16d(0x1a0)

    Begin block 0x360B0x16b
    prev=[0x16b], succ=[0x6a8B0x360B0x16b]
    =================================
    0x361S0x16b: v361V16b(0x368) = CONST 
    0x364S0x16b: v364V16b(0x6a8) = CONST 
    0x367S0x16b: JUMP v364V16b(0x6a8)

    Begin block 0x6a8B0x360B0x16b
    prev=[0x360B0x16b], succ=[0x368B0x16b]
    =================================
    0x6a9S0x360S0x16b: v6a9V360V16b(0x0) = CONST 
    0x6acS0x360S0x16b: v6acV360V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x360S0x16b: v6cdV360V16b(0x1) = CONST 
    0x6cfS0x360S0x16b: v6cfV360V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV360V16b(0x1), v6acV360V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x360S0x16b: v6d3V360V16b = SLOAD v6cfV360V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x360S0x16b: JUMP v361V16b(0x368)

    Begin block 0x368B0x16b
    prev=[0x6a8B0x360B0x16b], succ=[0x39cB0x16b, 0x512B0x16b]
    =================================
    0x369S0x16b: v369V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x37eS0x16b: v37eV16b = AND v369V16b(0xffffffffffffffffffffffffffffffffffffffff), v6d3V360V16b
    0x37fS0x16b: v37fV16b = CALLER 
    0x380S0x16b: v380V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x395S0x16b: v395V16b = AND v380V16b(0xffffffffffffffffffffffffffffffffffffffff), v37fV16b
    0x396S0x16b: v396V16b = EQ v395V16b, v37eV16b
    0x397S0x16b: v397V16b = ISZERO v396V16b
    0x398S0x16b: v398V16b(0x512) = CONST 
    0x39bS0x16b: JUMPI v398V16b(0x512), v397V16b

    Begin block 0x39cB0x16b
    prev=[0x368B0x16b], succ=[0x3d3B0x16b, 0x466B0x16b]
    =================================
    0x39cS0x16b: v39cV16b(0x0) = CONST 
    0x39eS0x16b: v39eV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x3b3S0x16b: v3b3V16b(0x0) = AND v39eV16b(0xffffffffffffffffffffffffffffffffffffffff), v39cV16b(0x0)
    0x3b5S0x16b: v3b5V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x3caS0x16b: v3caV16b = AND v3b5V16b(0xffffffffffffffffffffffffffffffffffffffff), v190
    0x3cbS0x16b: v3cbV16b = EQ v3caV16b, v3b3V16b(0x0)
    0x3ccS0x16b: v3ccV16b = ISZERO v3cbV16b
    0x3cdS0x16b: v3cdV16b = ISZERO v3ccV16b
    0x3ceS0x16b: v3ceV16b = ISZERO v3cdV16b
    0x3cfS0x16b: v3cfV16b(0x466) = CONST 
    0x3d2S0x16b: JUMPI v3cfV16b(0x466), v3ceV16b

    Begin block 0x3d3B0x16b
    prev=[0x39cB0x16b], succ=[]
    =================================
    0x3d3S0x16b: v3d3V16b(0x40) = CONST 
    0x3d5S0x16b: v3d5V16b = MLOAD v3d3V16b(0x40)
    0x3d6S0x16b: v3d6V16b(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x3f8S0x16b: MSTORE v3d5V16b, v3d6V16b(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x3f9S0x16b: v3f9V16b(0x4) = CONST 
    0x3fbS0x16b: v3fbV16b = ADD v3f9V16b(0x4), v3d5V16b
    0x3feS0x16b: v3feV16b(0x20) = CONST 
    0x400S0x16b: v400V16b = ADD v3feV16b(0x20), v3fbV16b
    0x403S0x16b: v403V16b(0x20) = SUB v400V16b, v3fbV16b
    0x405S0x16b: MSTORE v3fbV16b, v403V16b(0x20)
    0x406S0x16b: v406V16b(0x36) = CONST 
    0x409S0x16b: MSTORE v400V16b, v406V16b(0x36)
    0x40aS0x16b: v40aV16b(0x20) = CONST 
    0x40cS0x16b: v40cV16b = ADD v40aV16b(0x20), v400V16b
    0x40eS0x16b: v40eV16b(0x43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f) = CONST 
    0x430S0x16b: MSTORE v40cV16b, v40eV16b(0x43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f)
    0x431S0x16b: v431V16b(0x20) = CONST 
    0x433S0x16b: v433V16b = ADD v431V16b(0x20), v40cV16b
    0x434S0x16b: v434V16b(0x787920746f20746865207a65726f206164647265737300000000000000000000) = CONST 
    0x456S0x16b: MSTORE v433V16b, v434V16b(0x787920746f20746865207a65726f206164647265737300000000000000000000)
    0x458S0x16b: v458V16b(0x40) = CONST 
    0x45aS0x16b: v45aV16b = ADD v458V16b(0x40), v40cV16b
    0x45eS0x16b: v45eV16b(0x40) = CONST 
    0x460S0x16b: v460V16b = MLOAD v45eV16b(0x40)
    0x463S0x16b: v463V16b(0x84) = SUB v45aV16b, v460V16b
    0x465S0x16b: REVERT v460V16b, v463V16b(0x84)

    Begin block 0x466B0x16b
    prev=[0x39cB0x16b], succ=[0x6a8B0x466B0x16b]
    =================================
    0x467S0x16b: v467V16b(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f) = CONST 
    0x488S0x16b: v488V16b(0x48f) = CONST 
    0x48bS0x16b: v48bV16b(0x6a8) = CONST 
    0x48eS0x16b: JUMP v48bV16b(0x6a8)

    Begin block 0x6a8B0x466B0x16b
    prev=[0x466B0x16b], succ=[0x48fB0x16b]
    =================================
    0x6a9S0x466S0x16b: v6a9V466V16b(0x0) = CONST 
    0x6acS0x466S0x16b: v6acV466V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x466S0x16b: v6cdV466V16b(0x1) = CONST 
    0x6cfS0x466S0x16b: v6cfV466V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV466V16b(0x1), v6acV466V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x466S0x16b: v6d3V466V16b = SLOAD v6cfV466V16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x466S0x16b: JUMP v488V16b(0x48f)

    Begin block 0x48fB0x16b
    prev=[0x6a8B0x466B0x16b], succ=[0x748B0x16b]
    =================================
    0x491S0x16b: v491V16b(0x40) = CONST 
    0x493S0x16b: v493V16b = MLOAD v491V16b(0x40)
    0x496S0x16b: v496V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4abS0x16b: v4abV16b = AND v496V16b(0xffffffffffffffffffffffffffffffffffffffff), v6d3V466V16b
    0x4acS0x16b: v4acV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4c1S0x16b: v4c1V16b = AND v4acV16b(0xffffffffffffffffffffffffffffffffffffffff), v4abV16b
    0x4c3S0x16b: MSTORE v493V16b, v4c1V16b
    0x4c4S0x16b: v4c4V16b(0x20) = CONST 
    0x4c6S0x16b: v4c6V16b = ADD v4c4V16b(0x20), v493V16b
    0x4c8S0x16b: v4c8V16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4ddS0x16b: v4ddV16b = AND v4c8V16b(0xffffffffffffffffffffffffffffffffffffffff), v190
    0x4deS0x16b: v4deV16b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x4f3S0x16b: v4f3V16b = AND v4deV16b(0xffffffffffffffffffffffffffffffffffffffff), v4ddV16b
    0x4f5S0x16b: MSTORE v4c6V16b, v4f3V16b
    0x4f6S0x16b: v4f6V16b(0x20) = CONST 
    0x4f8S0x16b: v4f8V16b = ADD v4f6V16b(0x20), v4c6V16b
    0x4fdS0x16b: v4fdV16b(0x40) = CONST 
    0x4ffS0x16b: v4ffV16b = MLOAD v4fdV16b(0x40)
    0x502S0x16b: v502V16b(0x40) = SUB v4f8V16b, v4ffV16b
    0x504S0x16b: LOG1 v4ffV16b, v502V16b(0x40), v467V16b(0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)
    0x505S0x16b: v505V16b(0x50d) = CONST 
    0x509S0x16b: v509V16b(0x748) = CONST 
    0x50cS0x16b: JUMP v509V16b(0x748)

    Begin block 0x748B0x16b
    prev=[0x48fB0x16b], succ=[0x50dB0x16b]
    =================================
    0x749S0x16b: v749V16b(0x0) = CONST 
    0x74bS0x16b: v74bV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x76cS0x16b: v76cV16b(0x1) = CONST 
    0x76eS0x16b: v76eV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v76cV16b(0x1), v74bV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x773S0x16b: SSTORE v76eV16b(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b), v190
    0x776S0x16b: JUMP v505V16b(0x50d)

    Begin block 0x50dB0x16b
    prev=[0x748B0x16b], succ=[0x51bB0x16b]
    =================================
    0x50eS0x16b: v50eV16b(0x51b) = CONST 
    0x511S0x16b: JUMP v50eV16b(0x51b)

    Begin block 0x51bB0x16b
    prev=[0x50dB0x16b], succ=[0x1a0]
    =================================
    0x51dS0x16b: JUMP v16d(0x1a0)

    Begin block 0x1a0
    prev=[0x69f0x360B0x16b, 0x51bB0x16b], succ=[]
    =================================
    0x1a1: STOP 

    Begin block 0x512B0x16b
    prev=[0x368B0x16b], succ=[0x1f90x360B0x16b]
    =================================
    0x513S0x16b: v513V16b(0x51a) = CONST 
    0x516S0x16b: v516V16b(0x1f9) = CONST 
    0x519S0x16b: JUMP v516V16b(0x1f9)

    Begin block 0x1f90x360B0x16b
    prev=[0x512B0x16b], succ=[0x2010x360B0x16b]
    =================================
    0x1fa0x360S0x16b: v3601faV16b(0x201) = CONST 
    0x1fd0x360S0x16b: v3601fdV16b(0x576) = CONST 
    0x2000x360S0x16b: CALLPRIVATE v3601fdV16b(0x576), v3601faV16b(0x201)

    Begin block 0x2010x360B0x16b
    prev=[0x1f90x360B0x16b], succ=[0x651B0x2010x360B0x16b]
    =================================
    0x2020x360S0x16b: v360202V16b(0x211) = CONST 
    0x2050x360S0x16b: v360205V16b(0x20c) = CONST 
    0x2080x360S0x16b: v360208V16b(0x651) = CONST 
    0x20b0x360S0x16b: JUMP v360208V16b(0x651)

    Begin block 0x651B0x2010x360B0x16b
    prev=[0x2010x360B0x16b], succ=[0x20c0x360B0x16b]
    =================================
    0x652S0x2010x360S0x16b: v652V201360V16b(0x0) = CONST 
    0x655S0x2010x360S0x16b: v655V201360V16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x360S0x16b: v676V201360V16b(0x1) = CONST 
    0x678S0x2010x360S0x16b: v678V201360V16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V201360V16b(0x1), v655V201360V16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x360S0x16b: v67cV201360V16b = SLOAD v678V201360V16b(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x360S0x16b: JUMP v360205V16b(0x20c)

    Begin block 0x20c0x360B0x16b
    prev=[0x651B0x2010x360B0x16b], succ=[0x6820x360B0x16b]
    =================================
    0x20d0x360S0x16b: v36020dV16b(0x682) = CONST 
    0x2100x360S0x16b: JUMP v36020dV16b(0x682)

    Begin block 0x6820x360B0x16b
    prev=[0x20c0x360B0x16b], succ=[0x69f0x360B0x16b, 0x6a30x360B0x16b]
    =================================
    0x6830x360S0x16b: v360683V16b = CALLDATASIZE 
    0x6840x360S0x16b: v360684V16b(0x0) = CONST 
    0x6870x360S0x16b: CALLDATACOPY v360684V16b(0x0), v360684V16b(0x0), v360683V16b
    0x6880x360S0x16b: v360688V16b(0x0) = CONST 
    0x68b0x360S0x16b: v36068bV16b = CALLDATASIZE 
    0x68c0x360S0x16b: v36068cV16b(0x0) = CONST 
    0x68f0x360S0x16b: v36068fV16b = GAS 
    0x6900x360S0x16b: v360690V16b = DELEGATECALL v36068fV16b, v67cV201360V16b, v36068cV16b(0x0), v36068bV16b, v360688V16b(0x0), v360688V16b(0x0)
    0x6910x360S0x16b: v360691V16b = RETURNDATASIZE 
    0x6920x360S0x16b: v360692V16b(0x0) = CONST 
    0x6950x360S0x16b: RETURNDATACOPY v360692V16b(0x0), v360692V16b(0x0), v360691V16b
    0x6970x360S0x16b: v360697V16b(0x0) = CONST 
    0x69a0x360S0x16b: v36069aV16b = EQ v360690V16b, v360697V16b(0x0)
    0x69b0x360S0x16b: v36069bV16b(0x6a3) = CONST 
    0x69e0x360S0x16b: JUMPI v36069bV16b(0x6a3), v36069aV16b

    Begin block 0x69f0x360B0x16b
    prev=[0x6820x360B0x16b], succ=[0x1a0]
    =================================
    0x69f0x360S0x16b: v36069fV16b = RETURNDATASIZE 
    0x6a00x360S0x16b: v3606a0V16b(0x0) = CONST 
    0x6a20x360S0x16b: RETURN v3606a0V16b(0x0), v36069fV16b

    Begin block 0x6a30x360B0x16b
    prev=[0x6820x360B0x16b], succ=[]
    =================================
    0x6a40x360S0x16b: v3606a4V16b = RETURNDATASIZE 
    0x6a50x360S0x16b: v3606a5V16b(0x0) = CONST 
    0x6a70x360S0x16b: REVERT v3606a5V16b(0x0), v3606a4V16b

}

function admin()() public {
    Begin block 0x1a2
    prev=[], succ=[0x1aa, 0x1ae]
    =================================
    0x1a3: v1a3 = CALLVALUE 
    0x1a5: v1a5 = ISZERO v1a3
    0x1a6: v1a6(0x1ae) = CONST 
    0x1a9: JUMPI v1a6(0x1ae), v1a5

    Begin block 0x1aa
    prev=[0x1a2], succ=[]
    =================================
    0x1aa: v1aa(0x0) = CONST 
    0x1ad: REVERT v1aa(0x0), v1aa(0x0)

    Begin block 0x1ae
    prev=[0x1a2], succ=[0x1b7]
    =================================
    0x1b0: v1b0(0x1b7) = CONST 
    0x1b3: v1b3(0x51e) = CONST 
    0x1b6: v1b6_0 = CALLPRIVATE v1b3(0x51e), v1b0(0x1b7)

    Begin block 0x1b7
    prev=[0x1ae], succ=[]
    =================================
    0x1b8: v1b8(0x40) = CONST 
    0x1ba: v1ba = MLOAD v1b8(0x40)
    0x1bd: v1bd(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1d2: v1d2 = AND v1bd(0xffffffffffffffffffffffffffffffffffffffff), v1b6_0
    0x1d3: v1d3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1e8: v1e8 = AND v1d3(0xffffffffffffffffffffffffffffffffffffffff), v1d2
    0x1ea: MSTORE v1ba, v1e8
    0x1eb: v1eb(0x20) = CONST 
    0x1ed: v1ed = ADD v1eb(0x20), v1ba
    0x1f1: v1f1(0x40) = CONST 
    0x1f3: v1f3 = MLOAD v1f1(0x40)
    0x1f6: v1f6(0x20) = SUB v1ed, v1f3
    0x1f8: RETURN v1f3, v1f6(0x20)

}

function 0x308(0x308arg0x0) private {
    Begin block 0x308
    prev=[], succ=[0x6a8B0x308]
    =================================
    0x309: v309(0x0) = CONST 
    0x30b: v30b(0x312) = CONST 
    0x30e: v30e(0x6a8) = CONST 
    0x311: JUMP v30e(0x6a8)

    Begin block 0x6a8B0x308
    prev=[0x308], succ=[0x312]
    =================================
    0x6a9S0x308: v6a9V308(0x0) = CONST 
    0x6acS0x308: v6acV308(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x308: v6cdV308(0x1) = CONST 
    0x6cfS0x308: v6cfV308(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV308(0x1), v6acV308(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x308: v6d3V308 = SLOAD v6cfV308(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x308: JUMP v30b(0x312)

    Begin block 0x312
    prev=[0x6a8B0x308], succ=[0x346, 0x354]
    =================================
    0x313: v313(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x328: v328 = AND v313(0xffffffffffffffffffffffffffffffffffffffff), v6d3V308
    0x329: v329 = CALLER 
    0x32a: v32a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x33f: v33f = AND v32a(0xffffffffffffffffffffffffffffffffffffffff), v329
    0x340: v340 = EQ v33f, v328
    0x341: v341 = ISZERO v340
    0x342: v342(0x354) = CONST 
    0x345: JUMPI v342(0x354), v341

    Begin block 0x346
    prev=[0x312], succ=[0x651B0x346]
    =================================
    0x346: v346(0x34d) = CONST 
    0x349: v349(0x651) = CONST 
    0x34c: JUMP v349(0x651)

    Begin block 0x651B0x346
    prev=[0x346], succ=[0x34d]
    =================================
    0x652S0x346: v652V346(0x0) = CONST 
    0x655S0x346: v655V346(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x346: v676V346(0x1) = CONST 
    0x678S0x346: v678V346(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V346(0x1), v655V346(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x346: v67cV346 = SLOAD v678V346(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x346: JUMP v346(0x34d)

    Begin block 0x34d
    prev=[0x651B0x346], succ=[0x35d]
    =================================
    0x350: v350(0x35d) = CONST 
    0x353: JUMP v350(0x35d)

    Begin block 0x35d
    prev=[0x34d], succ=[]
    =================================
    0x35f: RETURNPRIVATE v308arg0, v67cV346

    Begin block 0x354
    prev=[0x312], succ=[0x1f90x308]
    =================================
    0x355: v355(0x35c) = CONST 
    0x358: v358(0x1f9) = CONST 
    0x35b: JUMP v358(0x1f9)

    Begin block 0x1f90x308
    prev=[0x354], succ=[0x2010x308]
    =================================
    0x1fa0x308: v3081fa(0x201) = CONST 
    0x1fd0x308: v3081fd(0x576) = CONST 
    0x2000x308: CALLPRIVATE v3081fd(0x576), v3081fa(0x201)

    Begin block 0x2010x308
    prev=[0x1f90x308], succ=[0x651B0x2010x308]
    =================================
    0x2020x308: v308202(0x211) = CONST 
    0x2050x308: v308205(0x20c) = CONST 
    0x2080x308: v308208(0x651) = CONST 
    0x20b0x308: JUMP v308208(0x651)

    Begin block 0x651B0x2010x308
    prev=[0x2010x308], succ=[0x20c0x308]
    =================================
    0x652S0x2010x308: v652V201308(0x0) = CONST 
    0x655S0x2010x308: v655V201308(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x308: v676V201308(0x1) = CONST 
    0x678S0x2010x308: v678V201308(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V201308(0x1), v655V201308(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x308: v67cV201308 = SLOAD v678V201308(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x308: JUMP v308205(0x20c)

    Begin block 0x20c0x308
    prev=[0x651B0x2010x308], succ=[0x6820x308]
    =================================
    0x20d0x308: v30820d(0x682) = CONST 
    0x2100x308: JUMP v30820d(0x682)

    Begin block 0x6820x308
    prev=[0x20c0x308], succ=[0x69f0x308, 0x6a30x308]
    =================================
    0x6830x308: v308683 = CALLDATASIZE 
    0x6840x308: v308684(0x0) = CONST 
    0x6870x308: CALLDATACOPY v308684(0x0), v308684(0x0), v308683
    0x6880x308: v308688(0x0) = CONST 
    0x68b0x308: v30868b = CALLDATASIZE 
    0x68c0x308: v30868c(0x0) = CONST 
    0x68f0x308: v30868f = GAS 
    0x6900x308: v308690 = DELEGATECALL v30868f, v67cV201308, v30868c(0x0), v30868b, v308688(0x0), v308688(0x0)
    0x6910x308: v308691 = RETURNDATASIZE 
    0x6920x308: v308692(0x0) = CONST 
    0x6950x308: RETURNDATACOPY v308692(0x0), v308692(0x0), v308691
    0x6970x308: v308697(0x0) = CONST 
    0x69a0x308: v30869a = EQ v308690, v308697(0x0)
    0x69b0x308: v30869b(0x6a3) = CONST 
    0x69e0x308: JUMPI v30869b(0x6a3), v30869a

    Begin block 0x69f0x308
    prev=[0x6820x308], succ=[]
    =================================
    0x69f0x308: v30869f = RETURNDATASIZE 
    0x6a00x308: v3086a0(0x0) = CONST 
    0x6a20x308: RETURN v3086a0(0x0), v30869f

    Begin block 0x6a30x308
    prev=[0x6820x308], succ=[]
    =================================
    0x6a40x308: v3086a4 = RETURNDATASIZE 
    0x6a50x308: v3086a5(0x0) = CONST 
    0x6a70x308: REVERT v3086a5(0x0), v3086a4

}

function 0x51e(0x51earg0x0) private {
    Begin block 0x51e
    prev=[], succ=[0x6a8B0x51e]
    =================================
    0x51f: v51f(0x0) = CONST 
    0x521: v521(0x528) = CONST 
    0x524: v524(0x6a8) = CONST 
    0x527: JUMP v524(0x6a8)

    Begin block 0x6a8B0x51e
    prev=[0x51e], succ=[0x528]
    =================================
    0x6a9S0x51e: v6a9V51e(0x0) = CONST 
    0x6acS0x51e: v6acV51e(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x51e: v6cdV51e(0x1) = CONST 
    0x6cfS0x51e: v6cfV51e(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV51e(0x1), v6acV51e(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x51e: v6d3V51e = SLOAD v6cfV51e(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x51e: JUMP v521(0x528)

    Begin block 0x528
    prev=[0x6a8B0x51e], succ=[0x55c, 0x56a]
    =================================
    0x529: v529(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x53e: v53e = AND v529(0xffffffffffffffffffffffffffffffffffffffff), v6d3V51e
    0x53f: v53f = CALLER 
    0x540: v540(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x555: v555 = AND v540(0xffffffffffffffffffffffffffffffffffffffff), v53f
    0x556: v556 = EQ v555, v53e
    0x557: v557 = ISZERO v556
    0x558: v558(0x56a) = CONST 
    0x55b: JUMPI v558(0x56a), v557

    Begin block 0x55c
    prev=[0x528], succ=[0x6a8B0x55c]
    =================================
    0x55c: v55c(0x563) = CONST 
    0x55f: v55f(0x6a8) = CONST 
    0x562: JUMP v55f(0x6a8)

    Begin block 0x6a8B0x55c
    prev=[0x55c], succ=[0x563]
    =================================
    0x6a9S0x55c: v6a9V55c(0x0) = CONST 
    0x6acS0x55c: v6acV55c(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x55c: v6cdV55c(0x1) = CONST 
    0x6cfS0x55c: v6cfV55c(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV55c(0x1), v6acV55c(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x55c: v6d3V55c = SLOAD v6cfV55c(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x55c: JUMP v55c(0x563)

    Begin block 0x563
    prev=[0x6a8B0x55c], succ=[0x573]
    =================================
    0x566: v566(0x573) = CONST 
    0x569: JUMP v566(0x573)

    Begin block 0x573
    prev=[0x563], succ=[]
    =================================
    0x575: RETURNPRIVATE v51earg0, v6d3V55c

    Begin block 0x56a
    prev=[0x528], succ=[0x1f90x51e]
    =================================
    0x56b: v56b(0x572) = CONST 
    0x56e: v56e(0x1f9) = CONST 
    0x571: JUMP v56e(0x1f9)

    Begin block 0x1f90x51e
    prev=[0x56a], succ=[0x2010x51e]
    =================================
    0x1fa0x51e: v51e1fa(0x201) = CONST 
    0x1fd0x51e: v51e1fd(0x576) = CONST 
    0x2000x51e: CALLPRIVATE v51e1fd(0x576), v51e1fa(0x201)

    Begin block 0x2010x51e
    prev=[0x1f90x51e], succ=[0x651B0x2010x51e]
    =================================
    0x2020x51e: v51e202(0x211) = CONST 
    0x2050x51e: v51e205(0x20c) = CONST 
    0x2080x51e: v51e208(0x651) = CONST 
    0x20b0x51e: JUMP v51e208(0x651)

    Begin block 0x651B0x2010x51e
    prev=[0x2010x51e], succ=[0x20c0x51e]
    =================================
    0x652S0x2010x51e: v652V20151e(0x0) = CONST 
    0x655S0x2010x51e: v655V20151e(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x51e: v676V20151e(0x1) = CONST 
    0x678S0x2010x51e: v678V20151e(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V20151e(0x1), v655V20151e(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x51e: v67cV20151e = SLOAD v678V20151e(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x51e: JUMP v51e205(0x20c)

    Begin block 0x20c0x51e
    prev=[0x651B0x2010x51e], succ=[0x6820x51e]
    =================================
    0x20d0x51e: v51e20d(0x682) = CONST 
    0x2100x51e: JUMP v51e20d(0x682)

    Begin block 0x6820x51e
    prev=[0x20c0x51e], succ=[0x69f0x51e, 0x6a30x51e]
    =================================
    0x6830x51e: v51e683 = CALLDATASIZE 
    0x6840x51e: v51e684(0x0) = CONST 
    0x6870x51e: CALLDATACOPY v51e684(0x0), v51e684(0x0), v51e683
    0x6880x51e: v51e688(0x0) = CONST 
    0x68b0x51e: v51e68b = CALLDATASIZE 
    0x68c0x51e: v51e68c(0x0) = CONST 
    0x68f0x51e: v51e68f = GAS 
    0x6900x51e: v51e690 = DELEGATECALL v51e68f, v67cV20151e, v51e68c(0x0), v51e68b, v51e688(0x0), v51e688(0x0)
    0x6910x51e: v51e691 = RETURNDATASIZE 
    0x6920x51e: v51e692(0x0) = CONST 
    0x6950x51e: RETURNDATACOPY v51e692(0x0), v51e692(0x0), v51e691
    0x6970x51e: v51e697(0x0) = CONST 
    0x69a0x51e: v51e69a = EQ v51e690, v51e697(0x0)
    0x69b0x51e: v51e69b(0x6a3) = CONST 
    0x69e0x51e: JUMPI v51e69b(0x6a3), v51e69a

    Begin block 0x69f0x51e
    prev=[0x6820x51e], succ=[]
    =================================
    0x69f0x51e: v51e69f = RETURNDATASIZE 
    0x6a00x51e: v51e6a0(0x0) = CONST 
    0x6a20x51e: RETURN v51e6a0(0x0), v51e69f

    Begin block 0x6a30x51e
    prev=[0x6820x51e], succ=[]
    =================================
    0x6a40x51e: v51e6a4 = RETURNDATASIZE 
    0x6a50x51e: v51e6a5(0x0) = CONST 
    0x6a70x51e: REVERT v51e6a5(0x0), v51e6a4

}

function 0x576(0x576arg0x0) private {
    Begin block 0x576
    prev=[], succ=[0x6a8B0x576]
    =================================
    0x577: v577(0x57e) = CONST 
    0x57a: v57a(0x6a8) = CONST 
    0x57d: JUMP v57a(0x6a8)

    Begin block 0x6a8B0x576
    prev=[0x576], succ=[0x57e]
    =================================
    0x6a9S0x576: v6a9V576(0x0) = CONST 
    0x6acS0x576: v6acV576(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x576: v6cdV576(0x1) = CONST 
    0x6cfS0x576: v6cfV576(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV576(0x1), v6acV576(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x576: v6d3V576 = SLOAD v6cfV576(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x576: JUMP v577(0x57e)

    Begin block 0x57e
    prev=[0x6a8B0x576], succ=[0x5b4, 0x647]
    =================================
    0x57f: v57f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x594: v594 = AND v57f(0xffffffffffffffffffffffffffffffffffffffff), v6d3V576
    0x595: v595 = CALLER 
    0x596: v596(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x5ab: v5ab = AND v596(0xffffffffffffffffffffffffffffffffffffffff), v595
    0x5ac: v5ac = EQ v5ab, v594
    0x5ad: v5ad = ISZERO v5ac
    0x5ae: v5ae = ISZERO v5ad
    0x5af: v5af = ISZERO v5ae
    0x5b0: v5b0(0x647) = CONST 
    0x5b3: JUMPI v5b0(0x647), v5af

    Begin block 0x5b4
    prev=[0x57e], succ=[]
    =================================
    0x5b4: v5b4(0x40) = CONST 
    0x5b6: v5b6 = MLOAD v5b4(0x40)
    0x5b7: v5b7(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x5d9: MSTORE v5b6, v5b7(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x5da: v5da(0x4) = CONST 
    0x5dc: v5dc = ADD v5da(0x4), v5b6
    0x5df: v5df(0x20) = CONST 
    0x5e1: v5e1 = ADD v5df(0x20), v5dc
    0x5e4: v5e4(0x20) = SUB v5e1, v5dc
    0x5e6: MSTORE v5dc, v5e4(0x20)
    0x5e7: v5e7(0x32) = CONST 
    0x5ea: MSTORE v5e1, v5e7(0x32)
    0x5eb: v5eb(0x20) = CONST 
    0x5ed: v5ed = ADD v5eb(0x20), v5e1
    0x5ef: v5ef(0x43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672) = CONST 
    0x611: MSTORE v5ed, v5ef(0x43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672)
    0x612: v612(0x20) = CONST 
    0x614: v614 = ADD v612(0x20), v5ed
    0x615: v615(0x6f6d207468652070726f78792061646d696e0000000000000000000000000000) = CONST 
    0x637: MSTORE v614, v615(0x6f6d207468652070726f78792061646d696e0000000000000000000000000000)
    0x639: v639(0x40) = CONST 
    0x63b: v63b = ADD v639(0x40), v5ed
    0x63f: v63f(0x40) = CONST 
    0x641: v641 = MLOAD v63f(0x40)
    0x644: v644(0x84) = SUB v63b, v641
    0x646: REVERT v641, v644(0x84)

    Begin block 0x647
    prev=[0x57e], succ=[0x777B0x647]
    =================================
    0x648: v648(0x64f) = CONST 
    0x64b: v64b(0x777) = CONST 
    0x64e: JUMP v64b(0x777), v648(0x64f)

    Begin block 0x777B0x647
    prev=[0x647], succ=[0x64f]
    =================================
    0x778S0x647: JUMP v648(0x64f)

    Begin block 0x64f
    prev=[0x777B0x647], succ=[]
    =================================
    0x650: RETURNPRIVATE v576arg0

}

function fallback()() public {
    Begin block 0x6d
    prev=[], succ=[0x1f90x6d]
    =================================
    0x6e: v6e(0x75) = CONST 
    0x71: v71(0x1f9) = CONST 
    0x74: JUMP v71(0x1f9)

    Begin block 0x1f90x6d
    prev=[0x6d], succ=[0x2010x6d]
    =================================
    0x1fa0x6d: v6d1fa(0x201) = CONST 
    0x1fd0x6d: v6d1fd(0x576) = CONST 
    0x2000x6d: CALLPRIVATE v6d1fd(0x576), v6d1fa(0x201)

    Begin block 0x2010x6d
    prev=[0x1f90x6d], succ=[0x651B0x2010x6d]
    =================================
    0x2020x6d: v6d202(0x211) = CONST 
    0x2050x6d: v6d205(0x20c) = CONST 
    0x2080x6d: v6d208(0x651) = CONST 
    0x20b0x6d: JUMP v6d208(0x651)

    Begin block 0x651B0x2010x6d
    prev=[0x2010x6d], succ=[0x20c0x6d]
    =================================
    0x652S0x2010x6d: v652V2016d(0x0) = CONST 
    0x655S0x2010x6d: v655V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x6d: v676V2016d(0x1) = CONST 
    0x678S0x2010x6d: v678V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V2016d(0x1), v655V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x6d: v67cV2016d = SLOAD v678V2016d(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x6d: JUMP v6d205(0x20c)

    Begin block 0x20c0x6d
    prev=[0x651B0x2010x6d], succ=[0x6820x6d]
    =================================
    0x20d0x6d: v6d20d(0x682) = CONST 
    0x2100x6d: JUMP v6d20d(0x682)

    Begin block 0x6820x6d
    prev=[0x20c0x6d], succ=[0x69f0x6d, 0x6a30x6d]
    =================================
    0x6830x6d: v6d683 = CALLDATASIZE 
    0x6840x6d: v6d684(0x0) = CONST 
    0x6870x6d: CALLDATACOPY v6d684(0x0), v6d684(0x0), v6d683
    0x6880x6d: v6d688(0x0) = CONST 
    0x68b0x6d: v6d68b = CALLDATASIZE 
    0x68c0x6d: v6d68c(0x0) = CONST 
    0x68f0x6d: v6d68f = GAS 
    0x6900x6d: v6d690 = DELEGATECALL v6d68f, v67cV2016d, v6d68c(0x0), v6d68b, v6d688(0x0), v6d688(0x0)
    0x6910x6d: v6d691 = RETURNDATASIZE 
    0x6920x6d: v6d692(0x0) = CONST 
    0x6950x6d: RETURNDATACOPY v6d692(0x0), v6d692(0x0), v6d691
    0x6970x6d: v6d697(0x0) = CONST 
    0x69a0x6d: v6d69a = EQ v6d690, v6d697(0x0)
    0x69b0x6d: v6d69b(0x6a3) = CONST 
    0x69e0x6d: JUMPI v6d69b(0x6a3), v6d69a

    Begin block 0x69f0x6d
    prev=[0x6820x6d], succ=[]
    =================================
    0x69f0x6d: v6d69f = RETURNDATASIZE 
    0x6a00x6d: v6d6a0(0x0) = CONST 
    0x6a20x6d: RETURN v6d6a0(0x0), v6d69f

    Begin block 0x6a30x6d
    prev=[0x6820x6d], succ=[]
    =================================
    0x6a40x6d: v6d6a4 = RETURNDATASIZE 
    0x6a50x6d: v6d6a5(0x0) = CONST 
    0x6a70x6d: REVERT v6d6a5(0x0), v6d6a4

}

function 0x6d9(0x6d9arg0x0, 0x6d9arg0x1) private {
    Begin block 0x6d9
    prev=[], succ=[0x779]
    =================================
    0x6da: v6da(0x6e2) = CONST 
    0x6de: v6de(0x779) = CONST 
    0x6e1: JUMP v6de(0x779)

    Begin block 0x779
    prev=[0x6d9], succ=[0x84b]
    =================================
    0x77a: v77a(0x0) = CONST 
    0x77c: v77c(0x784) = CONST 
    0x780: v780(0x84b) = CONST 
    0x783: JUMP v780(0x84b)

    Begin block 0x84b
    prev=[0x779], succ=[0x784]
    =================================
    0x84c: v84c(0x0) = CONST 
    0x850: v850 = EXTCODESIZE v6d9arg0
    0x853: v853(0x0) = CONST 
    0x856: v856 = GT v850, v853(0x0)
    0x85d: JUMP v77c(0x784)

    Begin block 0x784
    prev=[0x84b], succ=[0x78b, 0x81e]
    =================================
    0x785: v785 = ISZERO v856
    0x786: v786 = ISZERO v785
    0x787: v787(0x81e) = CONST 
    0x78a: JUMPI v787(0x81e), v786

    Begin block 0x78b
    prev=[0x784], succ=[]
    =================================
    0x78b: v78b(0x40) = CONST 
    0x78d: v78d = MLOAD v78b(0x40)
    0x78e: v78e(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x7b0: MSTORE v78d, v78e(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x7b1: v7b1(0x4) = CONST 
    0x7b3: v7b3 = ADD v7b1(0x4), v78d
    0x7b6: v7b6(0x20) = CONST 
    0x7b8: v7b8 = ADD v7b6(0x20), v7b3
    0x7bb: v7bb(0x20) = SUB v7b8, v7b3
    0x7bd: MSTORE v7b3, v7bb(0x20)
    0x7be: v7be(0x3b) = CONST 
    0x7c1: MSTORE v7b8, v7be(0x3b)
    0x7c2: v7c2(0x20) = CONST 
    0x7c4: v7c4 = ADD v7c2(0x20), v7b8
    0x7c6: v7c6(0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f) = CONST 
    0x7e8: MSTORE v7c4, v7c6(0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f)
    0x7e9: v7e9(0x20) = CONST 
    0x7eb: v7eb = ADD v7e9(0x20), v7c4
    0x7ec: v7ec(0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000) = CONST 
    0x80e: MSTORE v7eb, v7ec(0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000)
    0x810: v810(0x40) = CONST 
    0x812: v812 = ADD v810(0x40), v7c4
    0x816: v816(0x40) = CONST 
    0x818: v818 = MLOAD v816(0x40)
    0x81b: v81b(0x84) = SUB v812, v818
    0x81d: REVERT v818, v81b(0x84)

    Begin block 0x81e
    prev=[0x784], succ=[0x6e2]
    =================================
    0x81f: v81f(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x840: v840(0x1) = CONST 
    0x842: v842(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v840(0x1), v81f(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x847: SSTORE v842(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3), v6d9arg0
    0x84a: JUMP v6da(0x6e2)

    Begin block 0x6e2
    prev=[0x81e], succ=[]
    =================================
    0x6e3: v6e3(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b) = CONST 
    0x705: v705(0x40) = CONST 
    0x707: v707 = MLOAD v705(0x40)
    0x70a: v70a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x71f: v71f = AND v70a(0xffffffffffffffffffffffffffffffffffffffff), v6d9arg0
    0x720: v720(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x735: v735 = AND v720(0xffffffffffffffffffffffffffffffffffffffff), v71f
    0x737: MSTORE v707, v735
    0x738: v738(0x20) = CONST 
    0x73a: v73a = ADD v738(0x20), v707
    0x73e: v73e(0x40) = CONST 
    0x740: v740 = MLOAD v73e(0x40)
    0x743: v743(0x20) = SUB v73a, v740
    0x745: LOG1 v740, v743(0x20), v6e3(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b)
    0x747: RETURNPRIVATE v6d9arg1

}

function upgradeTo(address)() public {
    Begin block 0x77
    prev=[], succ=[0x7f, 0x83]
    =================================
    0x78: v78 = CALLVALUE 
    0x7a: v7a = ISZERO v78
    0x7b: v7b(0x83) = CONST 
    0x7e: JUMPI v7b(0x83), v7a

    Begin block 0x7f
    prev=[0x77], succ=[]
    =================================
    0x7f: v7f(0x0) = CONST 
    0x82: REVERT v7f(0x0), v7f(0x0)

    Begin block 0x83
    prev=[0x77], succ=[0x213B0x83]
    =================================
    0x85: v85(0xb8) = CONST 
    0x88: v88(0x4) = CONST 
    0x8b: v8b = CALLDATASIZE 
    0x8c: v8c = SUB v8b, v88(0x4)
    0x8e: v8e = ADD v88(0x4), v8c
    0x92: v92 = CALLDATALOAD v88(0x4)
    0x93: v93(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xa8: va8 = AND v93(0xffffffffffffffffffffffffffffffffffffffff), v92
    0xaa: vaa(0x20) = CONST 
    0xac: vac(0x24) = ADD vaa(0x20), v88(0x4)
    0xb4: vb4(0x213) = CONST 
    0xb7: JUMP vb4(0x213), va8, v85(0xb8)

    Begin block 0x213B0x83
    prev=[0x83], succ=[0x6a8B0x213B0x83]
    =================================
    0x214S0x83: v214V83(0x21b) = CONST 
    0x217S0x83: v217V83(0x6a8) = CONST 
    0x21aS0x83: JUMP v217V83(0x6a8)

    Begin block 0x6a8B0x213B0x83
    prev=[0x213B0x83], succ=[0x21bB0x83]
    =================================
    0x6a9S0x213S0x83: v6a9V213V83(0x0) = CONST 
    0x6acS0x213S0x83: v6acV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x213S0x83: v6cdV213V83(0x1) = CONST 
    0x6cfS0x213S0x83: v6cfV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV213V83(0x1), v6acV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x213S0x83: v6d3V213V83 = SLOAD v6cfV213V83(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x213S0x83: JUMP v214V83(0x21b)

    Begin block 0x21bB0x83
    prev=[0x6a8B0x213B0x83], succ=[0x24fB0x83, 0x25cB0x83]
    =================================
    0x21cS0x83: v21cV83(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x231S0x83: v231V83 = AND v21cV83(0xffffffffffffffffffffffffffffffffffffffff), v6d3V213V83
    0x232S0x83: v232V83 = CALLER 
    0x233S0x83: v233V83(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x248S0x83: v248V83 = AND v233V83(0xffffffffffffffffffffffffffffffffffffffff), v232V83
    0x249S0x83: v249V83 = EQ v248V83, v231V83
    0x24aS0x83: v24aV83 = ISZERO v249V83
    0x24bS0x83: v24bV83(0x25c) = CONST 
    0x24eS0x83: JUMPI v24bV83(0x25c), v24aV83

    Begin block 0x24fB0x83
    prev=[0x21bB0x83], succ=[0x257B0x83]
    =================================
    0x24fS0x83: v24fV83(0x257) = CONST 
    0x253S0x83: v253V83(0x6d9) = CONST 
    0x256S0x83: CALLPRIVATE v253V83(0x6d9), va8, v24fV83(0x257)

    Begin block 0x257B0x83
    prev=[0x24fB0x83], succ=[0x265B0x83]
    =================================
    0x258S0x83: v258V83(0x265) = CONST 
    0x25bS0x83: JUMP v258V83(0x265)

    Begin block 0x265B0x83
    prev=[0x257B0x83], succ=[0xb8]
    =================================
    0x267S0x83: JUMP v85(0xb8)

    Begin block 0xb8
    prev=[0x69f0x213B0x83, 0x265B0x83], succ=[]
    =================================
    0xb9: STOP 

    Begin block 0x25cB0x83
    prev=[0x21bB0x83], succ=[0x1f90x213B0x83]
    =================================
    0x25dS0x83: v25dV83(0x264) = CONST 
    0x260S0x83: v260V83(0x1f9) = CONST 
    0x263S0x83: JUMP v260V83(0x1f9)

    Begin block 0x1f90x213B0x83
    prev=[0x25cB0x83], succ=[0x2010x213B0x83]
    =================================
    0x1fa0x213S0x83: v2131faV83(0x201) = CONST 
    0x1fd0x213S0x83: v2131fdV83(0x576) = CONST 
    0x2000x213S0x83: CALLPRIVATE v2131fdV83(0x576), v2131faV83(0x201)

    Begin block 0x2010x213B0x83
    prev=[0x1f90x213B0x83], succ=[0x651B0x2010x213B0x83]
    =================================
    0x2020x213S0x83: v213202V83(0x211) = CONST 
    0x2050x213S0x83: v213205V83(0x20c) = CONST 
    0x2080x213S0x83: v213208V83(0x651) = CONST 
    0x20b0x213S0x83: JUMP v213208V83(0x651)

    Begin block 0x651B0x2010x213B0x83
    prev=[0x2010x213B0x83], succ=[0x20c0x213B0x83]
    =================================
    0x652S0x2010x213S0x83: v652V201213V83(0x0) = CONST 
    0x655S0x2010x213S0x83: v655V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x213S0x83: v676V201213V83(0x1) = CONST 
    0x678S0x2010x213S0x83: v678V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V201213V83(0x1), v655V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x213S0x83: v67cV201213V83 = SLOAD v678V201213V83(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x213S0x83: JUMP v213205V83(0x20c)

    Begin block 0x20c0x213B0x83
    prev=[0x651B0x2010x213B0x83], succ=[0x6820x213B0x83]
    =================================
    0x20d0x213S0x83: v21320dV83(0x682) = CONST 
    0x2100x213S0x83: JUMP v21320dV83(0x682)

    Begin block 0x6820x213B0x83
    prev=[0x20c0x213B0x83], succ=[0x69f0x213B0x83, 0x6a30x213B0x83]
    =================================
    0x6830x213S0x83: v213683V83 = CALLDATASIZE 
    0x6840x213S0x83: v213684V83(0x0) = CONST 
    0x6870x213S0x83: CALLDATACOPY v213684V83(0x0), v213684V83(0x0), v213683V83
    0x6880x213S0x83: v213688V83(0x0) = CONST 
    0x68b0x213S0x83: v21368bV83 = CALLDATASIZE 
    0x68c0x213S0x83: v21368cV83(0x0) = CONST 
    0x68f0x213S0x83: v21368fV83 = GAS 
    0x6900x213S0x83: v213690V83 = DELEGATECALL v21368fV83, v67cV201213V83, v21368cV83(0x0), v21368bV83, v213688V83(0x0), v213688V83(0x0)
    0x6910x213S0x83: v213691V83 = RETURNDATASIZE 
    0x6920x213S0x83: v213692V83(0x0) = CONST 
    0x6950x213S0x83: RETURNDATACOPY v213692V83(0x0), v213692V83(0x0), v213691V83
    0x6970x213S0x83: v213697V83(0x0) = CONST 
    0x69a0x213S0x83: v21369aV83 = EQ v213690V83, v213697V83(0x0)
    0x69b0x213S0x83: v21369bV83(0x6a3) = CONST 
    0x69e0x213S0x83: JUMPI v21369bV83(0x6a3), v21369aV83

    Begin block 0x69f0x213B0x83
    prev=[0x6820x213B0x83], succ=[0xb8]
    =================================
    0x69f0x213S0x83: v21369fV83 = RETURNDATASIZE 
    0x6a00x213S0x83: v2136a0V83(0x0) = CONST 
    0x6a20x213S0x83: RETURN v2136a0V83(0x0), v21369fV83

    Begin block 0x6a30x213B0x83
    prev=[0x6820x213B0x83], succ=[]
    =================================
    0x6a40x213S0x83: v2136a4V83 = RETURNDATASIZE 
    0x6a50x213S0x83: v2136a5V83(0x0) = CONST 
    0x6a70x213S0x83: REVERT v2136a5V83(0x0), v2136a4V83

}

function upgradeToAndCall(address,bytes)() public {
    Begin block 0xba
    prev=[], succ=[0x268B0xba]
    =================================
    0xbb: vbb(0x106) = CONST 
    0xbe: vbe(0x4) = CONST 
    0xc1: vc1 = CALLDATASIZE 
    0xc2: vc2 = SUB vc1, vbe(0x4)
    0xc4: vc4 = ADD vbe(0x4), vc2
    0xc8: vc8 = CALLDATALOAD vbe(0x4)
    0xc9: vc9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xde: vde = AND vc9(0xffffffffffffffffffffffffffffffffffffffff), vc8
    0xe0: ve0(0x20) = CONST 
    0xe2: ve2(0x24) = ADD ve0(0x20), vbe(0x4)
    0xe8: ve8 = CALLDATALOAD ve2(0x24)
    0xea: vea(0x20) = CONST 
    0xec: vec(0x44) = ADD vea(0x20), ve2(0x24)
    0xef: vef = ADD vbe(0x4), ve8
    0xf1: vf1 = CALLDATALOAD vef
    0xf3: vf3(0x20) = CONST 
    0xf5: vf5 = ADD vf3(0x20), vef
    0x102: v102(0x268) = CONST 
    0x105: JUMP v102(0x268), vf1, vf5, vde, vbb(0x106)

    Begin block 0x268B0xba
    prev=[0xba], succ=[0x6a8B0x268B0xba]
    =================================
    0x269S0xba: v269Vba(0x270) = CONST 
    0x26cS0xba: v26cVba(0x6a8) = CONST 
    0x26fS0xba: JUMP v26cVba(0x6a8)

    Begin block 0x6a8B0x268B0xba
    prev=[0x268B0xba], succ=[0x270B0xba]
    =================================
    0x6a9S0x268S0xba: v6a9V268Vba(0x0) = CONST 
    0x6acS0x268S0xba: v6acV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = CONST 
    0x6cdS0x268S0xba: v6cdV268Vba(0x1) = CONST 
    0x6cfS0x268S0xba: v6cfV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b) = MUL v6cdV268Vba(0x1), v6acV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d3S0x268S0xba: v6d3V268Vba = SLOAD v6cfV268Vba(0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b)
    0x6d8S0x268S0xba: JUMP v269Vba(0x270)

    Begin block 0x270B0xba
    prev=[0x6a8B0x268B0xba], succ=[0x2a4B0xba, 0x2faB0xba]
    =================================
    0x271S0xba: v271Vba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x286S0xba: v286Vba = AND v271Vba(0xffffffffffffffffffffffffffffffffffffffff), v6d3V268Vba
    0x287S0xba: v287Vba = CALLER 
    0x288S0xba: v288Vba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x29dS0xba: v29dVba = AND v288Vba(0xffffffffffffffffffffffffffffffffffffffff), v287Vba
    0x29eS0xba: v29eVba = EQ v29dVba, v286Vba
    0x29fS0xba: v29fVba = ISZERO v29eVba
    0x2a0S0xba: v2a0Vba(0x2fa) = CONST 
    0x2a3S0xba: JUMPI v2a0Vba(0x2fa), v29fVba

    Begin block 0x2a4B0xba
    prev=[0x270B0xba], succ=[0x2acB0xba]
    =================================
    0x2a4S0xba: v2a4Vba(0x2ac) = CONST 
    0x2a8S0xba: v2a8Vba(0x6d9) = CONST 
    0x2abS0xba: CALLPRIVATE v2a8Vba(0x6d9), vde, v2a4Vba(0x2ac)

    Begin block 0x2acB0xba
    prev=[0x2a4B0xba], succ=[0x2f1B0xba, 0x2f5B0xba]
    =================================
    0x2adS0xba: v2adVba = ADDRESS 
    0x2aeS0xba: v2aeVba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x2c3S0xba: v2c3Vba = AND v2aeVba(0xffffffffffffffffffffffffffffffffffffffff), v2adVba
    0x2c4S0xba: v2c4Vba = CALLVALUE 
    0x2c7S0xba: v2c7Vba(0x40) = CONST 
    0x2c9S0xba: v2c9Vba = MLOAD v2c7Vba(0x40)
    0x2d0S0xba: CALLDATACOPY v2c9Vba, vf5, vf1
    0x2d2S0xba: v2d2Vba = ADD v2c9Vba, vf1
    0x2daS0xba: v2daVba(0x0) = CONST 
    0x2dcS0xba: v2dcVba(0x40) = CONST 
    0x2deS0xba: v2deVba = MLOAD v2dcVba(0x40)
    0x2e1S0xba: v2e1Vba = SUB v2d2Vba, v2deVba
    0x2e5S0xba: v2e5Vba = GAS 
    0x2e6S0xba: v2e6Vba = CALL v2e5Vba, v2c3Vba, v2c4Vba, v2deVba, v2e1Vba, v2deVba, v2daVba(0x0)
    0x2ebS0xba: v2ebVba = ISZERO v2e6Vba
    0x2ecS0xba: v2ecVba = ISZERO v2ebVba
    0x2edS0xba: v2edVba(0x2f5) = CONST 
    0x2f0S0xba: JUMPI v2edVba(0x2f5), v2ecVba

    Begin block 0x2f1B0xba
    prev=[0x2acB0xba], succ=[]
    =================================
    0x2f1S0xba: v2f1Vba(0x0) = CONST 
    0x2f4S0xba: REVERT v2f1Vba(0x0), v2f1Vba(0x0)

    Begin block 0x2f5B0xba
    prev=[0x2acB0xba], succ=[0x303B0xba]
    =================================
    0x2f6S0xba: v2f6Vba(0x303) = CONST 
    0x2f9S0xba: JUMP v2f6Vba(0x303)

    Begin block 0x303B0xba
    prev=[0x2f5B0xba], succ=[0x106]
    =================================
    0x307S0xba: JUMP vbb(0x106)

    Begin block 0x106
    prev=[0x69f0x268B0xba, 0x303B0xba], succ=[]
    =================================
    0x107: STOP 

    Begin block 0x2faB0xba
    prev=[0x270B0xba], succ=[0x1f90x268B0xba]
    =================================
    0x2fbS0xba: v2fbVba(0x302) = CONST 
    0x2feS0xba: v2feVba(0x1f9) = CONST 
    0x301S0xba: JUMP v2feVba(0x1f9)

    Begin block 0x1f90x268B0xba
    prev=[0x2faB0xba], succ=[0x2010x268B0xba]
    =================================
    0x1fa0x268S0xba: v2681faVba(0x201) = CONST 
    0x1fd0x268S0xba: v2681fdVba(0x576) = CONST 
    0x2000x268S0xba: CALLPRIVATE v2681fdVba(0x576), v2681faVba(0x201)

    Begin block 0x2010x268B0xba
    prev=[0x1f90x268B0xba], succ=[0x651B0x2010x268B0xba]
    =================================
    0x2020x268S0xba: v268202Vba(0x211) = CONST 
    0x2050x268S0xba: v268205Vba(0x20c) = CONST 
    0x2080x268S0xba: v268208Vba(0x651) = CONST 
    0x20b0x268S0xba: JUMP v268208Vba(0x651)

    Begin block 0x651B0x2010x268B0xba
    prev=[0x2010x268B0xba], succ=[0x20c0x268B0xba]
    =================================
    0x652S0x2010x268S0xba: v652V201268Vba(0x0) = CONST 
    0x655S0x2010x268S0xba: v655V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = CONST 
    0x676S0x2010x268S0xba: v676V201268Vba(0x1) = CONST 
    0x678S0x2010x268S0xba: v678V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3) = MUL v676V201268Vba(0x1), v655V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x67cS0x2010x268S0xba: v67cV201268Vba = SLOAD v678V201268Vba(0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3)
    0x681S0x2010x268S0xba: JUMP v268205Vba(0x20c)

    Begin block 0x20c0x268B0xba
    prev=[0x651B0x2010x268B0xba], succ=[0x6820x268B0xba]
    =================================
    0x20d0x268S0xba: v26820dVba(0x682) = CONST 
    0x2100x268S0xba: JUMP v26820dVba(0x682)

    Begin block 0x6820x268B0xba
    prev=[0x20c0x268B0xba], succ=[0x69f0x268B0xba, 0x6a30x268B0xba]
    =================================
    0x6830x268S0xba: v268683Vba = CALLDATASIZE 
    0x6840x268S0xba: v268684Vba(0x0) = CONST 
    0x6870x268S0xba: CALLDATACOPY v268684Vba(0x0), v268684Vba(0x0), v268683Vba
    0x6880x268S0xba: v268688Vba(0x0) = CONST 
    0x68b0x268S0xba: v26868bVba = CALLDATASIZE 
    0x68c0x268S0xba: v26868cVba(0x0) = CONST 
    0x68f0x268S0xba: v26868fVba = GAS 
    0x6900x268S0xba: v268690Vba = DELEGATECALL v26868fVba, v67cV201268Vba, v26868cVba(0x0), v26868bVba, v268688Vba(0x0), v268688Vba(0x0)
    0x6910x268S0xba: v268691Vba = RETURNDATASIZE 
    0x6920x268S0xba: v268692Vba(0x0) = CONST 
    0x6950x268S0xba: RETURNDATACOPY v268692Vba(0x0), v268692Vba(0x0), v268691Vba
    0x6970x268S0xba: v268697Vba(0x0) = CONST 
    0x69a0x268S0xba: v26869aVba = EQ v268690Vba, v268697Vba(0x0)
    0x69b0x268S0xba: v26869bVba(0x6a3) = CONST 
    0x69e0x268S0xba: JUMPI v26869bVba(0x6a3), v26869aVba

    Begin block 0x69f0x268B0xba
    prev=[0x6820x268B0xba], succ=[0x106]
    =================================
    0x69f0x268S0xba: v26869fVba = RETURNDATASIZE 
    0x6a00x268S0xba: v2686a0Vba(0x0) = CONST 
    0x6a20x268S0xba: RETURN v2686a0Vba(0x0), v26869fVba

    Begin block 0x6a30x268B0xba
    prev=[0x6820x268B0xba], succ=[]
    =================================
    0x6a40x268S0xba: v2686a4Vba = RETURNDATASIZE 
    0x6a50x268S0xba: v2686a5Vba(0x0) = CONST 
    0x6a70x268S0xba: REVERT v2686a5Vba(0x0), v2686a4Vba

}

