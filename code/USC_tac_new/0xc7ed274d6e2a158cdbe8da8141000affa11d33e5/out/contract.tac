function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xc, 0x10]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5 = CALLVALUE 
    0x7: v7 = ISZERO v5
    0x8: v8(0x10) = CONST 
    0xb: JUMPI v8(0x10), v7

    Begin block 0xc
    prev=[0x0], succ=[]
    =================================
    0xc: vc(0x0) = CONST 
    0xf: REVERT vc(0x0), vc(0x0)

    Begin block 0x10
    prev=[0x0], succ=[0x1a, 0xef1]
    =================================
    0x12: v12(0x4) = CONST 
    0x14: v14 = CALLDATASIZE 
    0x15: v15 = LT v14, v12(0x4)
    0xebf: vebf(0xef1) = CONST 
    0xec0: JUMPI vebf(0xef1), v15

    Begin block 0x1a
    prev=[0x10], succ=[0xc3, 0x2b]
    =================================
    0x1a: v1a(0x0) = CONST 
    0x1c: v1c = CALLDATALOAD v1a(0x0)
    0x1d: v1d(0xe0) = CONST 
    0x1f: v1f = SHR v1d(0xe0), v1c
    0x21: v21(0x86b697db) = CONST 
    0x26: v26 = GT v21(0x86b697db), v1f
    0x27: v27(0xc3) = CONST 
    0x2a: JUMPI v27(0xc3), v26

    Begin block 0xc3
    prev=[0x1a], succ=[0x115, 0xcf]
    =================================
    0xc5: vc5(0x3a74a767) = CONST 
    0xca: vca = GT vc5(0x3a74a767), v1f
    0xcb: vcb(0x115) = CONST 
    0xce: JUMPI vcb(0x115), vca

    Begin block 0x115
    prev=[0xc3], succ=[0xef4, 0x121]
    =================================
    0x117: v117(0x11cee36) = CONST 
    0x11c: v11c = EQ v117(0x11cee36), v1f
    0xee5: vee5(0xef4) = CONST 
    0xee6: JUMPI vee5(0xef4), v11c

    Begin block 0xef4
    prev=[0x115], succ=[]
    =================================
    0xef5: vef5(0x206) = CONST 
    0xef6: CALLPRIVATE vef5(0x206)

    Begin block 0x121
    prev=[0x115], succ=[0xef7, 0x12c]
    =================================
    0x122: v122(0x1c51c691) = CONST 
    0x127: v127 = EQ v122(0x1c51c691), v1f
    0xee7: vee7(0xef7) = CONST 
    0xee8: JUMPI vee7(0xef7), v127

    Begin block 0xef7
    prev=[0x121], succ=[]
    =================================
    0xef8: vef8(0x224) = CONST 
    0xef9: CALLPRIVATE vef8(0x224)

    Begin block 0x12c
    prev=[0x121], succ=[0xefa, 0x137]
    =================================
    0x12d: v12d(0x1edb0d77) = CONST 
    0x132: v132 = EQ v12d(0x1edb0d77), v1f
    0xee9: vee9(0xefa) = CONST 
    0xeea: JUMPI vee9(0xefa), v132

    Begin block 0xefa
    prev=[0x12c], succ=[]
    =================================
    0xefb: vefb(0x242) = CONST 
    0xefc: CALLPRIVATE vefb(0x242)

    Begin block 0x137
    prev=[0x12c], succ=[0xefd, 0x142]
    =================================
    0x138: v138(0x1fb6ef1a) = CONST 
    0x13d: v13d = EQ v138(0x1fb6ef1a), v1f
    0xeeb: veeb(0xefd) = CONST 
    0xeec: JUMPI veeb(0xefd), v13d

    Begin block 0xefd
    prev=[0x137], succ=[]
    =================================
    0xefe: vefe(0x260) = CONST 
    0xeff: CALLPRIVATE vefe(0x260)

    Begin block 0x142
    prev=[0x137], succ=[0xf00, 0x14d]
    =================================
    0x143: v143(0x2604e18e) = CONST 
    0x148: v148 = EQ v143(0x2604e18e), v1f
    0xeed: veed(0xf00) = CONST 
    0xeee: JUMPI veed(0xf00), v148

    Begin block 0xf00
    prev=[0x142], succ=[]
    =================================
    0xf01: vf01(0x27e) = CONST 
    0xf02: CALLPRIVATE vf01(0x27e)

    Begin block 0x14d
    prev=[0x142], succ=[0x158, 0xf03]
    =================================
    0x14e: v14e(0x33060d90) = CONST 
    0x153: v153 = EQ v14e(0x33060d90), v1f
    0xeef: veef(0xf03) = CONST 
    0xef0: JUMPI veef(0xf03), v153

    Begin block 0x158
    prev=[0x14d], succ=[0x15d0x0]
    =================================
    0x158: v158(0x15d) = CONST 
    0x15b: JUMP v158(0x15d)

    Begin block 0x15d0x0
    prev=[0x78, 0xbf, 0x111, 0x158], succ=[0xc4cB0x15d0x0]
    =================================
    0x15e0x0: v015e(0x0) = CONST 
    0x1600x0: v0160(0x2) = CONST 
    0x1620x0: v0162(0x0) = CONST 
    0x1650x0: v0165 = SLOAD v0160(0x2)
    0x1670x0: v0167(0x100) = CONST 
    0x16a0x0: v016a(0x1) = EXP v0167(0x100), v0162(0x0)
    0x16c0x0: v016c = DIV v0165, v016a(0x1)
    0x16d0x0: v016d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1820x0: v0182 = AND v016d(0xffffffffffffffffffffffffffffffffffffffff), v016c
    0x1830x0: v0183(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1980x0: v0198 = AND v0183(0xffffffffffffffffffffffffffffffffffffffff), v0182
    0x1990x0: v0199(0x0) = CONST 
    0x19b0x0: v019b = CALLDATASIZE 
    0x19c0x0: v019c(0x40) = CONST 
    0x19e0x0: v019e = MLOAD v019c(0x40)
    0x19f0x0: v019f(0x1a9) = CONST 
    0x1a50x0: v01a5(0xc4c) = CONST 
    0x1a80x0: JUMP v01a5(0xc4c)

    Begin block 0xc4cB0x15d0x0
    prev=[0x15d0x0], succ=[0xb89B0x15d0x0]
    =================================
    0xc4dS0x15d0x0: vc4dV15d0(0x0) = CONST 
    0xc4fS0x15d0x0: vc4fV15d0(0xc59) = CONST 
    0xc55S0x15d0x0: vc55V15d0(0xb89) = CONST 
    0xc58S0x15d0x0: JUMP vc55V15d0(0xb89)

    Begin block 0xb89B0x15d0x0
    prev=[0xc4cB0x15d0x0], succ=[0xd8dB0x15d0x0]
    =================================
    0xb8aS0x15d0x0: vb8aV15d0(0x0) = CONST 
    0xb8cS0x15d0x0: vb8cV15d0(0xb95) = CONST 
    0xb91S0x15d0x0: vb91V15d0(0xd8d) = CONST 
    0xb94S0x15d0x0: JUMP vb91V15d0(0xd8d)

    Begin block 0xd8dB0x15d0x0
    prev=[0xb89B0x15d0x0], succ=[0xb95B0x15d0x0]
    =================================
    0xd8eS0x15d0x0: vd8eV15d0(0x0) = CONST 
    0xd97S0x15d0x0: JUMP vb8cV15d0(0xb95)

    Begin block 0xb95B0x15d0x0
    prev=[0xd8dB0x15d0x0], succ=[0xe27B0x15d0x0]
    =================================
    0xb98S0x15d0x0: vb98V15d0(0xba2) = CONST 
    0xb9eS0x15d0x0: vb9eV15d0(0xe27) = CONST 
    0xba1S0x15d0x0: JUMP vb9eV15d0(0xe27)

    Begin block 0xe27B0x15d0x0
    prev=[0xb95B0x15d0x0], succ=[0xba2B0x15d0x0]
    =================================
    0xe2bS0x15d0x0: CALLDATACOPY v019e, v0199(0x0), v019b
    0xe2cS0x15d0x0: ve2cV15d0(0x0) = CONST 
    0xe30S0x15d0x0: ve30V15d0 = ADD v019e, v019b
    0xe31S0x15d0x0: MSTORE ve30V15d0, ve2cV15d0(0x0)
    0xe35S0x15d0x0: JUMP vb98V15d0(0xba2)

    Begin block 0xba2B0x15d0x0
    prev=[0xe27B0x15d0x0], succ=[0xc59B0x15d0x0]
    =================================
    0xba5S0x15d0x0: vba5V15d0 = ADD v019e, v019b
    0xbadS0x15d0x0: JUMP vc4fV15d0(0xc59)

    Begin block 0xc59B0x15d0x0
    prev=[0xba2B0x15d0x0], succ=[0x1a90x0]
    =================================
    0xc64S0x15d0x0: JUMP v019f(0x1a9)

    Begin block 0x1a90x0
    prev=[0xc59B0x15d0x0], succ=[0x1c30x0, 0x1e40x0]
    =================================
    0x1aa0x0: v01aa(0x0) = CONST 
    0x1ac0x0: v01ac(0x40) = CONST 
    0x1ae0x0: v01ae = MLOAD v01ac(0x40)
    0x1b10x0: v01b1 = SUB vba5V15d0, v01ae
    0x1b40x0: v01b4 = GAS 
    0x1b50x0: v01b5 = DELEGATECALL v01b4, v0198, v01ae, v01b1, v01ae, v01aa(0x0)
    0x1b90x0: v01b9 = RETURNDATASIZE 
    0x1bb0x0: v01bb(0x0) = CONST 
    0x1be0x0: v01be = EQ v01b9, v01bb(0x0)
    0x1bf0x0: v01bf(0x1e4) = CONST 
    0x1c20x0: JUMPI v01bf(0x1e4), v01be

    Begin block 0x1c30x0
    prev=[0x1a90x0], succ=[0x1e90x0]
    =================================
    0x1c30x0: v01c3(0x40) = CONST 
    0x1c50x0: v01c5 = MLOAD v01c3(0x40)
    0x1c80x0: v01c8(0x1f) = CONST 
    0x1ca0x0: v01ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v01c8(0x1f)
    0x1cb0x0: v01cb(0x3f) = CONST 
    0x1cd0x0: v01cd = RETURNDATASIZE 
    0x1ce0x0: v01ce = ADD v01cd, v01cb(0x3f)
    0x1cf0x0: v01cf = AND v01ce, v01ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x1d10x0: v01d1 = ADD v01c5, v01cf
    0x1d20x0: v01d2(0x40) = CONST 
    0x1d40x0: MSTORE v01d2(0x40), v01d1
    0x1d50x0: v01d5 = RETURNDATASIZE 
    0x1d70x0: MSTORE v01c5, v01d5
    0x1d80x0: v01d8 = RETURNDATASIZE 
    0x1d90x0: v01d9(0x0) = CONST 
    0x1db0x0: v01db(0x20) = CONST 
    0x1de0x0: v01de = ADD v01c5, v01db(0x20)
    0x1df0x0: RETURNDATACOPY v01de, v01d9(0x0), v01d8
    0x1e00x0: v01e0(0x1e9) = CONST 
    0x1e30x0: JUMP v01e0(0x1e9)

    Begin block 0x1e90x0
    prev=[0x1c30x0, 0x1e40x0], succ=[0x1ff0x0, 0x2020x0]
    =================================
    0x1ee0x0: v01ee(0x40) = CONST 
    0x1f00x0: v01f0 = MLOAD v01ee(0x40)
    0x1f10x0: v01f1 = RETURNDATASIZE 
    0x1f20x0: v01f2(0x0) = CONST 
    0x1f50x0: RETURNDATACOPY v01f0, v01f2(0x0), v01f1
    0x1f70x0: v01f7(0x0) = CONST 
    0x1fa0x0: v01fa = EQ v01b5, v01f7(0x0)
    0x1fb0x0: v01fb(0x202) = CONST 
    0x1fe0x0: JUMPI v01fb(0x202), v01fa

    Begin block 0x1ff0x0
    prev=[0x1e90x0], succ=[]
    =================================
    0x1ff0x0: v01ff = RETURNDATASIZE 
    0x2010x0: RETURN v01f0, v01ff

    Begin block 0x2020x0
    prev=[0x1e90x0], succ=[]
    =================================
    0x2030x0: v0203 = RETURNDATASIZE 
    0x2050x0: REVERT v01f0, v0203

    Begin block 0x1e40x0
    prev=[0x1a90x0], succ=[0x1e90x0]
    =================================
    0x1e50x0: v01e5(0x60) = CONST 

    Begin block 0xf03
    prev=[0x14d], succ=[]
    =================================
    0xf04: vf04(0x2ae) = CONST 
    0xf05: CALLPRIVATE vf04(0x2ae)

    Begin block 0xcf
    prev=[0xc3], succ=[0xf06, 0xda]
    =================================
    0xd0: vd0(0x3a74a767) = CONST 
    0xd5: vd5 = EQ vd0(0x3a74a767), v1f
    0xed9: ved9(0xf06) = CONST 
    0xeda: JUMPI ved9(0xf06), vd5

    Begin block 0xf06
    prev=[0xcf], succ=[]
    =================================
    0xf07: vf07(0x2de) = CONST 
    0xf08: CALLPRIVATE vf07(0x2de)

    Begin block 0xda
    prev=[0xcf], succ=[0xf09, 0xe5]
    =================================
    0xdb: vdb(0x52d10e8e) = CONST 
    0xe0: ve0 = EQ vdb(0x52d10e8e), v1f
    0xedb: vedb(0xf09) = CONST 
    0xedc: JUMPI vedb(0xf09), ve0

    Begin block 0xf09
    prev=[0xda], succ=[]
    =================================
    0xf0a: vf0a(0x2fa) = CONST 
    0xf0b: CALLPRIVATE vf0a(0x2fa)

    Begin block 0xe5
    prev=[0xda], succ=[0xf0c, 0xf0]
    =================================
    0xe6: ve6(0x584b62a1) = CONST 
    0xeb: veb = EQ ve6(0x584b62a1), v1f
    0xedd: vedd(0xf0c) = CONST 
    0xede: JUMPI vedd(0xf0c), veb

    Begin block 0xf0c
    prev=[0xe5], succ=[]
    =================================
    0xf0d: vf0d(0x318) = CONST 
    0xf0e: CALLPRIVATE vf0d(0x318)

    Begin block 0xf0
    prev=[0xe5], succ=[0xf0f, 0xfb]
    =================================
    0xf1: vf1(0x5c60da1b) = CONST 
    0xf6: vf6 = EQ vf1(0x5c60da1b), v1f
    0xedf: vedf(0xf0f) = CONST 
    0xee0: JUMPI vedf(0xf0f), vf6

    Begin block 0xf0f
    prev=[0xf0], succ=[]
    =================================
    0xf10: vf10(0x34c) = CONST 
    0xf11: CALLPRIVATE vf10(0x34c)

    Begin block 0xfb
    prev=[0xf0], succ=[0xf12, 0x106]
    =================================
    0xfc: vfc(0x6456e66d) = CONST 
    0x101: v101 = EQ vfc(0x6456e66d), v1f
    0xee1: vee1(0xf12) = CONST 
    0xee2: JUMPI vee1(0xf12), v101

    Begin block 0xf12
    prev=[0xfb], succ=[]
    =================================
    0xf13: vf13(0x36a) = CONST 
    0xf14: CALLPRIVATE vf13(0x36a)

    Begin block 0x106
    prev=[0xfb], succ=[0x111, 0xf15]
    =================================
    0x107: v107(0x817b1cd2) = CONST 
    0x10c: v10c = EQ v107(0x817b1cd2), v1f
    0xee3: vee3(0xf15) = CONST 
    0xee4: JUMPI vee3(0xf15), v10c

    Begin block 0x111
    prev=[0x106], succ=[0x15d0x0]
    =================================
    0x111: v111(0x15d) = CONST 
    0x114: JUMP v111(0x15d)

    Begin block 0xf15
    prev=[0x106], succ=[]
    =================================
    0xf16: vf16(0x388) = CONST 
    0xf17: CALLPRIVATE vf16(0x388)

    Begin block 0x2b
    prev=[0x1a], succ=[0x7c, 0x36]
    =================================
    0x2c: v2c(0xd54ad2a1) = CONST 
    0x31: v31 = GT v2c(0xd54ad2a1), v1f
    0x32: v32(0x7c) = CONST 
    0x35: JUMPI v32(0x7c), v31

    Begin block 0x7c
    prev=[0x2b], succ=[0xf18, 0x88]
    =================================
    0x7e: v7e(0x86b697db) = CONST 
    0x83: v83 = EQ v7e(0x86b697db), v1f
    0xecd: vecd(0xf18) = CONST 
    0xece: JUMPI vecd(0xf18), v83

    Begin block 0xf18
    prev=[0x7c], succ=[]
    =================================
    0xf19: vf19(0x3a6) = CONST 
    0xf1a: CALLPRIVATE vf19(0x3a6)

    Begin block 0x88
    prev=[0x7c], succ=[0xf1b, 0x93]
    =================================
    0x89: v89(0x9f118536) = CONST 
    0x8e: v8e = EQ v89(0x9f118536), v1f
    0xecf: vecf(0xf1b) = CONST 
    0xed0: JUMPI vecf(0xf1b), v8e

    Begin block 0xf1b
    prev=[0x88], succ=[]
    =================================
    0xf1c: vf1c(0x3c4) = CONST 
    0xf1d: CALLPRIVATE vf1c(0x3c4)

    Begin block 0x93
    prev=[0x88], succ=[0xf1e, 0x9e]
    =================================
    0x94: v94(0xad2a04e0) = CONST 
    0x99: v99 = EQ v94(0xad2a04e0), v1f
    0xed1: ved1(0xf1e) = CONST 
    0xed2: JUMPI ved1(0xf1e), v99

    Begin block 0xf1e
    prev=[0x93], succ=[]
    =================================
    0xf1f: vf1f(0x3e2) = CONST 
    0xf20: CALLPRIVATE vf1f(0x3e2)

    Begin block 0x9e
    prev=[0x93], succ=[0xf21, 0xa9]
    =================================
    0x9f: v9f(0xadcec9c5) = CONST 
    0xa4: va4 = EQ v9f(0xadcec9c5), v1f
    0xed3: ved3(0xf21) = CONST 
    0xed4: JUMPI ved3(0xf21), va4

    Begin block 0xf21
    prev=[0x9e], succ=[]
    =================================
    0xf22: vf22(0x400) = CONST 
    0xf23: CALLPRIVATE vf22(0x400)

    Begin block 0xa9
    prev=[0x9e], succ=[0xf24, 0xb4]
    =================================
    0xaa: vaa(0xbb913f41) = CONST 
    0xaf: vaf = EQ vaa(0xbb913f41), v1f
    0xed5: ved5(0xf24) = CONST 
    0xed6: JUMPI ved5(0xf24), vaf

    Begin block 0xf24
    prev=[0xa9], succ=[]
    =================================
    0xf25: vf25(0x41e) = CONST 
    0xf26: CALLPRIVATE vf25(0x41e)

    Begin block 0xb4
    prev=[0xa9], succ=[0xbf, 0xf27]
    =================================
    0xb5: vb5(0xc285c820) = CONST 
    0xba: vba = EQ vb5(0xc285c820), v1f
    0xed7: ved7(0xf27) = CONST 
    0xed8: JUMPI ved7(0xf27), vba

    Begin block 0xbf
    prev=[0xb4], succ=[0x15d0x0]
    =================================
    0xbf: vbf(0x15d) = CONST 
    0xc2: JUMP vbf(0x15d)

    Begin block 0xf27
    prev=[0xb4], succ=[]
    =================================
    0xf28: vf28(0x43a) = CONST 
    0xf29: CALLPRIVATE vf28(0x43a)

    Begin block 0x36
    prev=[0x2b], succ=[0xf2a, 0x41]
    =================================
    0x37: v37(0xd54ad2a1) = CONST 
    0x3c: v3c = EQ v37(0xd54ad2a1), v1f
    0xec1: vec1(0xf2a) = CONST 
    0xec2: JUMPI vec1(0xf2a), v3c

    Begin block 0xf2a
    prev=[0x36], succ=[]
    =================================
    0xf2b: vf2b(0x458) = CONST 
    0xf2c: CALLPRIVATE vf2b(0x458)

    Begin block 0x41
    prev=[0x36], succ=[0xf2d, 0x4c]
    =================================
    0x42: v42(0xdd4785f5) = CONST 
    0x47: v47 = EQ v42(0xdd4785f5), v1f
    0xec3: vec3(0xf2d) = CONST 
    0xec4: JUMPI vec3(0xf2d), v47

    Begin block 0xf2d
    prev=[0x41], succ=[]
    =================================
    0xf2e: vf2e(0x476) = CONST 
    0xf2f: CALLPRIVATE vf2e(0x476)

    Begin block 0x4c
    prev=[0x41], succ=[0xf30, 0x57]
    =================================
    0x4d: v4d(0xe26ff10a) = CONST 
    0x52: v52 = EQ v4d(0xe26ff10a), v1f
    0xec5: vec5(0xf30) = CONST 
    0xec6: JUMPI vec5(0xf30), v52

    Begin block 0xf30
    prev=[0x4c], succ=[]
    =================================
    0xf31: vf31(0x4a6) = CONST 
    0xf32: CALLPRIVATE vf31(0x4a6)

    Begin block 0x57
    prev=[0x4c], succ=[0xf33, 0x62]
    =================================
    0x58: v58(0xe32a3b52) = CONST 
    0x5d: v5d = EQ v58(0xe32a3b52), v1f
    0xec7: vec7(0xf33) = CONST 
    0xec8: JUMPI vec7(0xf33), v5d

    Begin block 0xf33
    prev=[0x57], succ=[]
    =================================
    0xf34: vf34(0x4d6) = CONST 
    0xf35: CALLPRIVATE vf34(0x4d6)

    Begin block 0x62
    prev=[0x57], succ=[0xf36, 0x6d]
    =================================
    0x63: v63(0xe8cc1159) = CONST 
    0x68: v68 = EQ v63(0xe8cc1159), v1f
    0xec9: vec9(0xf36) = CONST 
    0xeca: JUMPI vec9(0xf36), v68

    Begin block 0xf36
    prev=[0x62], succ=[]
    =================================
    0xf37: vf37(0x4f4) = CONST 
    0xf38: CALLPRIVATE vf37(0x4f4)

    Begin block 0x6d
    prev=[0x62], succ=[0x78, 0xf39]
    =================================
    0x6e: v6e(0xf851a440) = CONST 
    0x73: v73 = EQ v6e(0xf851a440), v1f
    0xecb: vecb(0xf39) = CONST 
    0xecc: JUMPI vecb(0xf39), v73

    Begin block 0x78
    prev=[0x6d], succ=[0x15d0x0]
    =================================
    0x78: v78(0x15d) = CONST 
    0x7b: JUMP v78(0x15d)

    Begin block 0xf39
    prev=[0x6d], succ=[]
    =================================
    0xf3a: vf3a(0x524) = CONST 
    0xf3b: CALLPRIVATE vf3a(0x524)

    Begin block 0xef1
    prev=[0x10], succ=[]
    =================================
    0xef2: vef2(0x15c) = CONST 
    0xef3: CALLPRIVATE vef2(0x15c)

}

function fallback()() public {
    Begin block 0x15c
    prev=[], succ=[0x15d0x15c]
    =================================

    Begin block 0x15d0x15c
    prev=[0x15c], succ=[0xc4cB0x15d0x15c]
    =================================
    0x15e0x15c: v15c15e(0x0) = CONST 
    0x1600x15c: v15c160(0x2) = CONST 
    0x1620x15c: v15c162(0x0) = CONST 
    0x1650x15c: v15c165 = SLOAD v15c160(0x2)
    0x1670x15c: v15c167(0x100) = CONST 
    0x16a0x15c: v15c16a(0x1) = EXP v15c167(0x100), v15c162(0x0)
    0x16c0x15c: v15c16c = DIV v15c165, v15c16a(0x1)
    0x16d0x15c: v15c16d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1820x15c: v15c182 = AND v15c16d(0xffffffffffffffffffffffffffffffffffffffff), v15c16c
    0x1830x15c: v15c183(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1980x15c: v15c198 = AND v15c183(0xffffffffffffffffffffffffffffffffffffffff), v15c182
    0x1990x15c: v15c199(0x0) = CONST 
    0x19b0x15c: v15c19b = CALLDATASIZE 
    0x19c0x15c: v15c19c(0x40) = CONST 
    0x19e0x15c: v15c19e = MLOAD v15c19c(0x40)
    0x19f0x15c: v15c19f(0x1a9) = CONST 
    0x1a50x15c: v15c1a5(0xc4c) = CONST 
    0x1a80x15c: JUMP v15c1a5(0xc4c)

    Begin block 0xc4cB0x15d0x15c
    prev=[0x15d0x15c], succ=[0xb89B0x15d0x15c]
    =================================
    0xc4dS0x15d0x15c: vc4dV15d15c(0x0) = CONST 
    0xc4fS0x15d0x15c: vc4fV15d15c(0xc59) = CONST 
    0xc55S0x15d0x15c: vc55V15d15c(0xb89) = CONST 
    0xc58S0x15d0x15c: JUMP vc55V15d15c(0xb89)

    Begin block 0xb89B0x15d0x15c
    prev=[0xc4cB0x15d0x15c], succ=[0xd8dB0x15d0x15c]
    =================================
    0xb8aS0x15d0x15c: vb8aV15d15c(0x0) = CONST 
    0xb8cS0x15d0x15c: vb8cV15d15c(0xb95) = CONST 
    0xb91S0x15d0x15c: vb91V15d15c(0xd8d) = CONST 
    0xb94S0x15d0x15c: JUMP vb91V15d15c(0xd8d)

    Begin block 0xd8dB0x15d0x15c
    prev=[0xb89B0x15d0x15c], succ=[0xb95B0x15d0x15c]
    =================================
    0xd8eS0x15d0x15c: vd8eV15d15c(0x0) = CONST 
    0xd97S0x15d0x15c: JUMP vb8cV15d15c(0xb95)

    Begin block 0xb95B0x15d0x15c
    prev=[0xd8dB0x15d0x15c], succ=[0xe27B0x15d0x15c]
    =================================
    0xb98S0x15d0x15c: vb98V15d15c(0xba2) = CONST 
    0xb9eS0x15d0x15c: vb9eV15d15c(0xe27) = CONST 
    0xba1S0x15d0x15c: JUMP vb9eV15d15c(0xe27)

    Begin block 0xe27B0x15d0x15c
    prev=[0xb95B0x15d0x15c], succ=[0xba2B0x15d0x15c]
    =================================
    0xe2bS0x15d0x15c: CALLDATACOPY v15c19e, v15c199(0x0), v15c19b
    0xe2cS0x15d0x15c: ve2cV15d15c(0x0) = CONST 
    0xe30S0x15d0x15c: ve30V15d15c = ADD v15c19e, v15c19b
    0xe31S0x15d0x15c: MSTORE ve30V15d15c, ve2cV15d15c(0x0)
    0xe35S0x15d0x15c: JUMP vb98V15d15c(0xba2)

    Begin block 0xba2B0x15d0x15c
    prev=[0xe27B0x15d0x15c], succ=[0xc59B0x15d0x15c]
    =================================
    0xba5S0x15d0x15c: vba5V15d15c = ADD v15c19e, v15c19b
    0xbadS0x15d0x15c: JUMP vc4fV15d15c(0xc59)

    Begin block 0xc59B0x15d0x15c
    prev=[0xba2B0x15d0x15c], succ=[0x1a90x15c]
    =================================
    0xc64S0x15d0x15c: JUMP v15c19f(0x1a9)

    Begin block 0x1a90x15c
    prev=[0xc59B0x15d0x15c], succ=[0x1c30x15c, 0x1e40x15c]
    =================================
    0x1aa0x15c: v15c1aa(0x0) = CONST 
    0x1ac0x15c: v15c1ac(0x40) = CONST 
    0x1ae0x15c: v15c1ae = MLOAD v15c1ac(0x40)
    0x1b10x15c: v15c1b1 = SUB vba5V15d15c, v15c1ae
    0x1b40x15c: v15c1b4 = GAS 
    0x1b50x15c: v15c1b5 = DELEGATECALL v15c1b4, v15c198, v15c1ae, v15c1b1, v15c1ae, v15c1aa(0x0)
    0x1b90x15c: v15c1b9 = RETURNDATASIZE 
    0x1bb0x15c: v15c1bb(0x0) = CONST 
    0x1be0x15c: v15c1be = EQ v15c1b9, v15c1bb(0x0)
    0x1bf0x15c: v15c1bf(0x1e4) = CONST 
    0x1c20x15c: JUMPI v15c1bf(0x1e4), v15c1be

    Begin block 0x1c30x15c
    prev=[0x1a90x15c], succ=[0x1e90x15c]
    =================================
    0x1c30x15c: v15c1c3(0x40) = CONST 
    0x1c50x15c: v15c1c5 = MLOAD v15c1c3(0x40)
    0x1c80x15c: v15c1c8(0x1f) = CONST 
    0x1ca0x15c: v15c1ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v15c1c8(0x1f)
    0x1cb0x15c: v15c1cb(0x3f) = CONST 
    0x1cd0x15c: v15c1cd = RETURNDATASIZE 
    0x1ce0x15c: v15c1ce = ADD v15c1cd, v15c1cb(0x3f)
    0x1cf0x15c: v15c1cf = AND v15c1ce, v15c1ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x1d10x15c: v15c1d1 = ADD v15c1c5, v15c1cf
    0x1d20x15c: v15c1d2(0x40) = CONST 
    0x1d40x15c: MSTORE v15c1d2(0x40), v15c1d1
    0x1d50x15c: v15c1d5 = RETURNDATASIZE 
    0x1d70x15c: MSTORE v15c1c5, v15c1d5
    0x1d80x15c: v15c1d8 = RETURNDATASIZE 
    0x1d90x15c: v15c1d9(0x0) = CONST 
    0x1db0x15c: v15c1db(0x20) = CONST 
    0x1de0x15c: v15c1de = ADD v15c1c5, v15c1db(0x20)
    0x1df0x15c: RETURNDATACOPY v15c1de, v15c1d9(0x0), v15c1d8
    0x1e00x15c: v15c1e0(0x1e9) = CONST 
    0x1e30x15c: JUMP v15c1e0(0x1e9)

    Begin block 0x1e90x15c
    prev=[0x1c30x15c, 0x1e40x15c], succ=[0x1ff0x15c, 0x2020x15c]
    =================================
    0x1ee0x15c: v15c1ee(0x40) = CONST 
    0x1f00x15c: v15c1f0 = MLOAD v15c1ee(0x40)
    0x1f10x15c: v15c1f1 = RETURNDATASIZE 
    0x1f20x15c: v15c1f2(0x0) = CONST 
    0x1f50x15c: RETURNDATACOPY v15c1f0, v15c1f2(0x0), v15c1f1
    0x1f70x15c: v15c1f7(0x0) = CONST 
    0x1fa0x15c: v15c1fa = EQ v15c1b5, v15c1f7(0x0)
    0x1fb0x15c: v15c1fb(0x202) = CONST 
    0x1fe0x15c: JUMPI v15c1fb(0x202), v15c1fa

    Begin block 0x1ff0x15c
    prev=[0x1e90x15c], succ=[]
    =================================
    0x1ff0x15c: v15c1ff = RETURNDATASIZE 
    0x2010x15c: RETURN v15c1f0, v15c1ff

    Begin block 0x2020x15c
    prev=[0x1e90x15c], succ=[]
    =================================
    0x2030x15c: v15c203 = RETURNDATASIZE 
    0x2050x15c: REVERT v15c1f0, v15c203

    Begin block 0x1e40x15c
    prev=[0x1a90x15c], succ=[0x1e90x15c]
    =================================
    0x1e50x15c: v15c1e5(0x60) = CONST 

}

function LPToken()() public {
    Begin block 0x206
    prev=[], succ=[0x542]
    =================================
    0x207: v207(0x20e) = CONST 
    0x20a: v20a(0x542) = CONST 
    0x20d: JUMP v20a(0x542)

    Begin block 0x542
    prev=[0x206], succ=[0x20e]
    =================================
    0x543: v543(0x3) = CONST 
    0x545: v545(0x0) = CONST 
    0x548: v548 = SLOAD v543(0x3)
    0x54a: v54a(0x100) = CONST 
    0x54d: v54d(0x1) = EXP v54a(0x100), v545(0x0)
    0x54f: v54f = DIV v548, v54d(0x1)
    0x550: v550(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x565: v565 = AND v550(0xffffffffffffffffffffffffffffffffffffffff), v54f
    0x567: JUMP v207(0x20e)

    Begin block 0x20e
    prev=[0x542], succ=[0xcc4B0x20e]
    =================================
    0x20f: v20f(0x40) = CONST 
    0x211: v211 = MLOAD v20f(0x40)
    0x212: v212(0x21b) = CONST 
    0x217: v217(0xcc4) = CONST 
    0x21a: JUMP v217(0xcc4)

    Begin block 0xcc4B0x20e
    prev=[0x20e], succ=[0xbaeB0x20e]
    =================================
    0xcc5S0x20e: vcc5V20e(0x0) = CONST 
    0xcc7S0x20e: vcc7V20e(0x20) = CONST 
    0xccaS0x20e: vccaV20e = ADD v211, vcc7V20e(0x20)
    0xccdS0x20e: vccdV20e(0xcd9) = CONST 
    0xcd0S0x20e: vcd0V20e(0x0) = CONST 
    0xcd3S0x20e: vcd3V20e = ADD v211, vcd0V20e(0x0)
    0xcd5S0x20e: vcd5V20e(0xbae) = CONST 
    0xcd8S0x20e: JUMP vcd5V20e(0xbae)

    Begin block 0xbaeB0x20e
    prev=[0xcc4B0x20e], succ=[0xe03B0xbaeB0x20e]
    =================================
    0xbafS0x20e: vbafV20e(0xbb7) = CONST 
    0xbb3S0x20e: vbb3V20e(0xe03) = CONST 
    0xbb6S0x20e: JUMP vbb3V20e(0xe03)

    Begin block 0xe03B0xbaeB0x20e
    prev=[0xbaeB0x20e], succ=[0xe15B0xe03B0xbaeB0x20e]
    =================================
    0xe04S0xbaeS0x20e: ve04VbaeV20e(0x0) = CONST 
    0xe06S0xbaeS0x20e: ve06VbaeV20e(0xe0e) = CONST 
    0xe0aS0xbaeS0x20e: ve0aVbaeV20e(0xe15) = CONST 
    0xe0dS0xbaeS0x20e: JUMP ve0aVbaeV20e(0xe15)

    Begin block 0xe15B0xe03B0xbaeB0x20e
    prev=[0xe03B0xbaeB0x20e], succ=[0xdd9B0xe15B0xe03B0xbaeB0x20e]
    =================================
    0xe16S0xe03S0xbaeS0x20e: ve16Ve03VbaeV20e(0x0) = CONST 
    0xe18S0xe03S0xbaeS0x20e: ve18Ve03VbaeV20e(0xe20) = CONST 
    0xe1cS0xe03S0xbaeS0x20e: ve1cVe03VbaeV20e(0xdd9) = CONST 
    0xe1fS0xe03S0xbaeS0x20e: JUMP ve1cVe03VbaeV20e(0xdd9)

    Begin block 0xdd9B0xe15B0xe03B0xbaeB0x20e
    prev=[0xe15B0xe03B0xbaeB0x20e], succ=[0xe20B0xe03B0xbaeB0x20e]
    =================================
    0xddaS0xe15S0xe03S0xbaeS0x20e: vddaVe15Ve03VbaeV20e(0x0) = CONST 
    0xddcS0xe15S0xe03S0xbaeS0x20e: vddcVe15Ve03VbaeV20e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xe15S0xe03S0xbaeS0x20e: vdf2Ve15Ve03VbaeV20e = AND v565, vddcVe15Ve03VbaeV20e(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xe15S0xe03S0xbaeS0x20e: JUMP ve18Ve03VbaeV20e(0xe20)

    Begin block 0xe20B0xe03B0xbaeB0x20e
    prev=[0xdd9B0xe15B0xe03B0xbaeB0x20e], succ=[0xe0eB0xbaeB0x20e]
    =================================
    0xe26S0xe03S0xbaeS0x20e: JUMP ve06VbaeV20e(0xe0e)

    Begin block 0xe0eB0xbaeB0x20e
    prev=[0xe20B0xe03B0xbaeB0x20e], succ=[0xbb7B0x20e]
    =================================
    0xe14S0xbaeS0x20e: JUMP vbafV20e(0xbb7)

    Begin block 0xbb7B0x20e
    prev=[0xe0eB0xbaeB0x20e], succ=[0xcd9B0x20e]
    =================================
    0xbb9S0x20e: MSTORE vcd3V20e, vdf2Ve15Ve03VbaeV20e
    0xbbcS0x20e: JUMP vccdV20e(0xcd9)

    Begin block 0xcd9B0x20e
    prev=[0xbb7B0x20e], succ=[0x21b]
    =================================
    0xcdeS0x20e: JUMP v212(0x21b)

    Begin block 0x21b
    prev=[0xcd9B0x20e], succ=[]
    =================================
    0x21c: v21c(0x40) = CONST 
    0x21e: v21e = MLOAD v21c(0x40)
    0x221: v221(0x20) = SUB vccaV20e, v21e
    0x223: RETURN v21e, v221(0x20)

}

function MVTToken()() public {
    Begin block 0x224
    prev=[], succ=[0x568]
    =================================
    0x225: v225(0x22c) = CONST 
    0x228: v228(0x568) = CONST 
    0x22b: JUMP v228(0x568)

    Begin block 0x568
    prev=[0x224], succ=[0x22c]
    =================================
    0x569: v569(0x4) = CONST 
    0x56b: v56b(0x0) = CONST 
    0x56e: v56e = SLOAD v569(0x4)
    0x570: v570(0x100) = CONST 
    0x573: v573(0x1) = EXP v570(0x100), v56b(0x0)
    0x575: v575 = DIV v56e, v573(0x1)
    0x576: v576(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x58b: v58b = AND v576(0xffffffffffffffffffffffffffffffffffffffff), v575
    0x58d: JUMP v225(0x22c)

    Begin block 0x22c
    prev=[0x568], succ=[0xcc4B0x22c]
    =================================
    0x22d: v22d(0x40) = CONST 
    0x22f: v22f = MLOAD v22d(0x40)
    0x230: v230(0x239) = CONST 
    0x235: v235(0xcc4) = CONST 
    0x238: JUMP v235(0xcc4)

    Begin block 0xcc4B0x22c
    prev=[0x22c], succ=[0xbaeB0x22c]
    =================================
    0xcc5S0x22c: vcc5V22c(0x0) = CONST 
    0xcc7S0x22c: vcc7V22c(0x20) = CONST 
    0xccaS0x22c: vccaV22c = ADD v22f, vcc7V22c(0x20)
    0xccdS0x22c: vccdV22c(0xcd9) = CONST 
    0xcd0S0x22c: vcd0V22c(0x0) = CONST 
    0xcd3S0x22c: vcd3V22c = ADD v22f, vcd0V22c(0x0)
    0xcd5S0x22c: vcd5V22c(0xbae) = CONST 
    0xcd8S0x22c: JUMP vcd5V22c(0xbae)

    Begin block 0xbaeB0x22c
    prev=[0xcc4B0x22c], succ=[0xe03B0xbaeB0x22c]
    =================================
    0xbafS0x22c: vbafV22c(0xbb7) = CONST 
    0xbb3S0x22c: vbb3V22c(0xe03) = CONST 
    0xbb6S0x22c: JUMP vbb3V22c(0xe03)

    Begin block 0xe03B0xbaeB0x22c
    prev=[0xbaeB0x22c], succ=[0xe15B0xe03B0xbaeB0x22c]
    =================================
    0xe04S0xbaeS0x22c: ve04VbaeV22c(0x0) = CONST 
    0xe06S0xbaeS0x22c: ve06VbaeV22c(0xe0e) = CONST 
    0xe0aS0xbaeS0x22c: ve0aVbaeV22c(0xe15) = CONST 
    0xe0dS0xbaeS0x22c: JUMP ve0aVbaeV22c(0xe15)

    Begin block 0xe15B0xe03B0xbaeB0x22c
    prev=[0xe03B0xbaeB0x22c], succ=[0xdd9B0xe15B0xe03B0xbaeB0x22c]
    =================================
    0xe16S0xe03S0xbaeS0x22c: ve16Ve03VbaeV22c(0x0) = CONST 
    0xe18S0xe03S0xbaeS0x22c: ve18Ve03VbaeV22c(0xe20) = CONST 
    0xe1cS0xe03S0xbaeS0x22c: ve1cVe03VbaeV22c(0xdd9) = CONST 
    0xe1fS0xe03S0xbaeS0x22c: JUMP ve1cVe03VbaeV22c(0xdd9)

    Begin block 0xdd9B0xe15B0xe03B0xbaeB0x22c
    prev=[0xe15B0xe03B0xbaeB0x22c], succ=[0xe20B0xe03B0xbaeB0x22c]
    =================================
    0xddaS0xe15S0xe03S0xbaeS0x22c: vddaVe15Ve03VbaeV22c(0x0) = CONST 
    0xddcS0xe15S0xe03S0xbaeS0x22c: vddcVe15Ve03VbaeV22c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xe15S0xe03S0xbaeS0x22c: vdf2Ve15Ve03VbaeV22c = AND v58b, vddcVe15Ve03VbaeV22c(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xe15S0xe03S0xbaeS0x22c: JUMP ve18Ve03VbaeV22c(0xe20)

    Begin block 0xe20B0xe03B0xbaeB0x22c
    prev=[0xdd9B0xe15B0xe03B0xbaeB0x22c], succ=[0xe0eB0xbaeB0x22c]
    =================================
    0xe26S0xe03S0xbaeS0x22c: JUMP ve06VbaeV22c(0xe0e)

    Begin block 0xe0eB0xbaeB0x22c
    prev=[0xe20B0xe03B0xbaeB0x22c], succ=[0xbb7B0x22c]
    =================================
    0xe14S0xbaeS0x22c: JUMP vbafV22c(0xbb7)

    Begin block 0xbb7B0x22c
    prev=[0xe0eB0xbaeB0x22c], succ=[0xcd9B0x22c]
    =================================
    0xbb9S0x22c: MSTORE vcd3V22c, vdf2Ve15Ve03VbaeV22c
    0xbbcS0x22c: JUMP vccdV22c(0xcd9)

    Begin block 0xcd9B0x22c
    prev=[0xbb7B0x22c], succ=[0x239]
    =================================
    0xcdeS0x22c: JUMP v230(0x239)

    Begin block 0x239
    prev=[0xcd9B0x22c], succ=[]
    =================================
    0x23a: v23a(0x40) = CONST 
    0x23c: v23c = MLOAD v23a(0x40)
    0x23f: v23f(0x20) = SUB vccaV22c, v23c
    0x241: RETURN v23c, v23f(0x20)

}

function MVTPerBlock()() public {
    Begin block 0x242
    prev=[], succ=[0x58e]
    =================================
    0x243: v243(0x24a) = CONST 
    0x246: v246(0x58e) = CONST 
    0x249: JUMP v246(0x58e)

    Begin block 0x58e
    prev=[0x242], succ=[0x24a]
    =================================
    0x58f: v58f(0x8) = CONST 
    0x591: v591 = SLOAD v58f(0x8)
    0x593: JUMP v243(0x24a)

    Begin block 0x24a
    prev=[0x58e], succ=[0xd1fB0x24a]
    =================================
    0x24b: v24b(0x40) = CONST 
    0x24d: v24d = MLOAD v24b(0x40)
    0x24e: v24e(0x257) = CONST 
    0x253: v253(0xd1f) = CONST 
    0x256: JUMP v253(0xd1f)

    Begin block 0xd1fB0x24a
    prev=[0x24a], succ=[0xc3dB0xd1fB0x24a]
    =================================
    0xd20S0x24a: vd20V24a(0x0) = CONST 
    0xd22S0x24a: vd22V24a(0x20) = CONST 
    0xd25S0x24a: vd25V24a = ADD v24d, vd22V24a(0x20)
    0xd28S0x24a: vd28V24a(0xd34) = CONST 
    0xd2bS0x24a: vd2bV24a(0x0) = CONST 
    0xd2eS0x24a: vd2eV24a = ADD v24d, vd2bV24a(0x0)
    0xd30S0x24a: vd30V24a(0xc3d) = CONST 
    0xd33S0x24a: JUMP vd30V24a(0xc3d), v591, vd2eV24a, vd28V24a(0xd34)

    Begin block 0xc3dB0xd1fB0x24a
    prev=[0xd1fB0x24a], succ=[0xdf9B0xc3dB0xd1fB0x24a]
    =================================
    0xc3eS0xd1fS0x24a: vc3eVd1fV24a(0xc46) = CONST 
    0xc42S0xd1fS0x24a: vc42Vd1fV24a(0xdf9) = CONST 
    0xc45S0xd1fS0x24a: JUMP vc42Vd1fV24a(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x24a
    prev=[0xc3dB0xd1fB0x24a], succ=[0xc46B0xd1fB0x24a]
    =================================
    0xdfaS0xc3dS0xd1fS0x24a: vdfaVc3dVd1fV24a(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x24a: JUMP vc3eVd1fV24a(0xc46)

    Begin block 0xc46B0xd1fB0x24a
    prev=[0xdf9B0xc3dB0xd1fB0x24a], succ=[0xd34B0x24a]
    =================================
    0xc48S0xd1fS0x24a: MSTORE vd2eV24a, v591
    0xc4bS0xd1fS0x24a: JUMP vd28V24a(0xd34)

    Begin block 0xd34B0x24a
    prev=[0xc46B0xd1fB0x24a], succ=[0x257]
    =================================
    0xd39S0x24a: JUMP v24e(0x257)

    Begin block 0x257
    prev=[0xd34B0x24a], succ=[]
    =================================
    0x258: v258(0x40) = CONST 
    0x25a: v25a = MLOAD v258(0x40)
    0x25d: v25d(0x20) = SUB vd25V24a, v25a
    0x25f: RETURN v25a, v25d(0x20)

}

function totalMiningBlockNum()() public {
    Begin block 0x260
    prev=[], succ=[0x594]
    =================================
    0x261: v261(0x268) = CONST 
    0x264: v264(0x594) = CONST 
    0x267: JUMP v264(0x594)

    Begin block 0x594
    prev=[0x260], succ=[0x268]
    =================================
    0x595: v595(0x6) = CONST 
    0x597: v597 = SLOAD v595(0x6)
    0x599: JUMP v261(0x268)

    Begin block 0x268
    prev=[0x594], succ=[0xd1fB0x268]
    =================================
    0x269: v269(0x40) = CONST 
    0x26b: v26b = MLOAD v269(0x40)
    0x26c: v26c(0x275) = CONST 
    0x271: v271(0xd1f) = CONST 
    0x274: JUMP v271(0xd1f)

    Begin block 0xd1fB0x268
    prev=[0x268], succ=[0xc3dB0xd1fB0x268]
    =================================
    0xd20S0x268: vd20V268(0x0) = CONST 
    0xd22S0x268: vd22V268(0x20) = CONST 
    0xd25S0x268: vd25V268 = ADD v26b, vd22V268(0x20)
    0xd28S0x268: vd28V268(0xd34) = CONST 
    0xd2bS0x268: vd2bV268(0x0) = CONST 
    0xd2eS0x268: vd2eV268 = ADD v26b, vd2bV268(0x0)
    0xd30S0x268: vd30V268(0xc3d) = CONST 
    0xd33S0x268: JUMP vd30V268(0xc3d), v597, vd2eV268, vd28V268(0xd34)

    Begin block 0xc3dB0xd1fB0x268
    prev=[0xd1fB0x268], succ=[0xdf9B0xc3dB0xd1fB0x268]
    =================================
    0xc3eS0xd1fS0x268: vc3eVd1fV268(0xc46) = CONST 
    0xc42S0xd1fS0x268: vc42Vd1fV268(0xdf9) = CONST 
    0xc45S0xd1fS0x268: JUMP vc42Vd1fV268(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x268
    prev=[0xc3dB0xd1fB0x268], succ=[0xc46B0xd1fB0x268]
    =================================
    0xdfaS0xc3dS0xd1fS0x268: vdfaVc3dVd1fV268(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x268: JUMP vc3eVd1fV268(0xc46)

    Begin block 0xc46B0xd1fB0x268
    prev=[0xdf9B0xc3dB0xd1fB0x268], succ=[0xd34B0x268]
    =================================
    0xc48S0xd1fS0x268: MSTORE vd2eV268, v597
    0xc4bS0xd1fS0x268: JUMP vd28V268(0xd34)

    Begin block 0xd34B0x268
    prev=[0xc46B0xd1fB0x268], succ=[0x275]
    =================================
    0xd39S0x268: JUMP v26c(0x275)

    Begin block 0x275
    prev=[0xd34B0x268], succ=[]
    =================================
    0x276: v276(0x40) = CONST 
    0x278: v278 = MLOAD v276(0x40)
    0x27b: v27b(0x20) = SUB vd25V268, v278
    0x27d: RETURN v278, v27b(0x20)

}

function stakerClaimed(address)() public {
    Begin block 0x27e
    prev=[], succ=[0xab4B0x27e]
    =================================
    0x27f: v27f(0x298) = CONST 
    0x282: v282(0x4) = CONST 
    0x285: v285 = CALLDATASIZE 
    0x286: v286 = SUB v285, v282(0x4)
    0x287: v287(0x293) = CONST 
    0x28d: v28d = ADD v282(0x4), v286
    0x28f: v28f(0xab4) = CONST 
    0x292: JUMP v28f(0xab4)

    Begin block 0xab4B0x27e
    prev=[0x27e], succ=[0xac2B0x27e, 0xac6B0x27e]
    =================================
    0xab5S0x27e: vab5V27e(0x0) = CONST 
    0xab7S0x27e: vab7V27e(0x20) = CONST 
    0xabbS0x27e: vabbV27e = SUB v28d, v282(0x4)
    0xabcS0x27e: vabcV27e = SLT vabbV27e, vab7V27e(0x20)
    0xabdS0x27e: vabdV27e = ISZERO vabcV27e
    0xabeS0x27e: vabeV27e(0xac6) = CONST 
    0xac1S0x27e: JUMPI vabeV27e(0xac6), vabdV27e

    Begin block 0xac2B0x27e
    prev=[0xab4B0x27e], succ=[]
    =================================
    0xac2S0x27e: vac2V27e(0x0) = CONST 
    0xac5S0x27e: REVERT vac2V27e(0x0), vac2V27e(0x0)

    Begin block 0xac6B0x27e
    prev=[0xab4B0x27e], succ=[0xa60B0xac6B0x27e]
    =================================
    0xac7S0x27e: vac7V27e(0x0) = CONST 
    0xac9S0x27e: vac9V27e(0xad4) = CONST 
    0xacfS0x27e: vacfV27e(0x4) = ADD v282(0x4), vac7V27e(0x0)
    0xad0S0x27e: vad0V27e(0xa60) = CONST 
    0xad3S0x27e: JUMP vad0V27e(0xa60)

    Begin block 0xa60B0xac6B0x27e
    prev=[0xac6B0x27e], succ=[0xe36B0xa60B0xac6B0x27e]
    =================================
    0xa61S0xac6S0x27e: va61Vac6V27e(0x0) = CONST 
    0xa64S0xac6S0x27e: va64Vac6V27e = CALLDATALOAD vacfV27e(0x4)
    0xa67S0xac6S0x27e: va67Vac6V27e(0xa6f) = CONST 
    0xa6bS0xac6S0x27e: va6bVac6V27e(0xe36) = CONST 
    0xa6eS0xac6S0x27e: JUMP va6bVac6V27e(0xe36), va64Vac6V27e, va67Vac6V27e(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x27e
    prev=[0xa60B0xac6B0x27e], succ=[0xda9B0xe36B0xa60B0xac6B0x27e]
    =================================
    0xe37S0xa60S0xac6S0x27e: ve37Va60Vac6V27e(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x27e: ve3bVa60Vac6V27e(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x27e: JUMP ve3bVa60Vac6V27e(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x27e
    prev=[0xe36B0xa60B0xac6B0x27e], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x27e]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x27e: vdaaVe36Va60Vac6V27e(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x27e: vdacVe36Va60Vac6V27e(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x27e: vdb0Ve36Va60Vac6V27e(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x27e: JUMP vdb0Ve36Va60Vac6V27e(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x27e
    prev=[0xda9B0xe36B0xa60B0xac6B0x27e], succ=[0xdb4B0xe36B0xa60B0xac6B0x27e]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x27e: vddaVda9Ve36Va60Vac6V27e(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x27e: vddcVda9Ve36Va60Vac6V27e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x27e: vdf2Vda9Ve36Va60Vac6V27e = AND va64Vac6V27e, vddcVda9Ve36Va60Vac6V27e(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x27e: JUMP vdacVe36Va60Vac6V27e(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x27e
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x27e], succ=[0xe3fB0xa60B0xac6B0x27e]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x27e: JUMP ve37Va60Vac6V27e(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x27e
    prev=[0xdb4B0xe36B0xa60B0xac6B0x27e], succ=[0xe46B0xa60B0xac6B0x27e, 0xe4aB0xa60B0xac6B0x27e]
    =================================
    0xe41S0xa60S0xac6S0x27e: ve41Va60Vac6V27e = EQ va64Vac6V27e, vdf2Vda9Ve36Va60Vac6V27e
    0xe42S0xa60S0xac6S0x27e: ve42Va60Vac6V27e(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x27e: JUMPI ve42Va60Vac6V27e(0xe4a), ve41Va60Vac6V27e

    Begin block 0xe46B0xa60B0xac6B0x27e
    prev=[0xe3fB0xa60B0xac6B0x27e], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x27e: ve46Va60Vac6V27e(0x0) = CONST 
    0xe49S0xa60S0xac6S0x27e: REVERT ve46Va60Vac6V27e(0x0), ve46Va60Vac6V27e(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x27e
    prev=[0xe3fB0xa60B0xac6B0x27e], succ=[0xa6fB0xac6B0x27e]
    =================================
    0xe4cS0xa60S0xac6S0x27e: JUMP va67Vac6V27e(0xa6f)

    Begin block 0xa6fB0xac6B0x27e
    prev=[0xe4aB0xa60B0xac6B0x27e], succ=[0xad4B0x27e]
    =================================
    0xa74S0xac6S0x27e: JUMP vac9V27e(0xad4)

    Begin block 0xad4B0x27e
    prev=[0xa6fB0xac6B0x27e], succ=[0x293]
    =================================
    0xadcS0x27e: JUMP v287(0x293)

    Begin block 0x293
    prev=[0xad4B0x27e], succ=[0x59a]
    =================================
    0x294: v294(0x59a) = CONST 
    0x297: JUMP v294(0x59a)

    Begin block 0x59a
    prev=[0x293], succ=[0x298]
    =================================
    0x59b: v59b(0x12) = CONST 
    0x59d: v59d(0x20) = CONST 
    0x59f: MSTORE v59d(0x20), v59b(0x12)
    0x5a1: v5a1(0x0) = CONST 
    0x5a3: MSTORE v5a1(0x0), va64Vac6V27e
    0x5a4: v5a4(0x40) = CONST 
    0x5a6: v5a6(0x0) = CONST 
    0x5a8: v5a8 = SHA3 v5a6(0x0), v5a4(0x40)
    0x5a9: v5a9(0x0) = CONST 
    0x5af: v5af = SLOAD v5a8
    0x5b1: JUMP v27f(0x298)

    Begin block 0x298
    prev=[0x59a], succ=[0xd1fB0x298]
    =================================
    0x299: v299(0x40) = CONST 
    0x29b: v29b = MLOAD v299(0x40)
    0x29c: v29c(0x2a5) = CONST 
    0x2a1: v2a1(0xd1f) = CONST 
    0x2a4: JUMP v2a1(0xd1f)

    Begin block 0xd1fB0x298
    prev=[0x298], succ=[0xc3dB0xd1fB0x298]
    =================================
    0xd20S0x298: vd20V298(0x0) = CONST 
    0xd22S0x298: vd22V298(0x20) = CONST 
    0xd25S0x298: vd25V298 = ADD v29b, vd22V298(0x20)
    0xd28S0x298: vd28V298(0xd34) = CONST 
    0xd2bS0x298: vd2bV298(0x0) = CONST 
    0xd2eS0x298: vd2eV298 = ADD v29b, vd2bV298(0x0)
    0xd30S0x298: vd30V298(0xc3d) = CONST 
    0xd33S0x298: JUMP vd30V298(0xc3d), v5af, vd2eV298, vd28V298(0xd34)

    Begin block 0xc3dB0xd1fB0x298
    prev=[0xd1fB0x298], succ=[0xdf9B0xc3dB0xd1fB0x298]
    =================================
    0xc3eS0xd1fS0x298: vc3eVd1fV298(0xc46) = CONST 
    0xc42S0xd1fS0x298: vc42Vd1fV298(0xdf9) = CONST 
    0xc45S0xd1fS0x298: JUMP vc42Vd1fV298(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x298
    prev=[0xc3dB0xd1fB0x298], succ=[0xc46B0xd1fB0x298]
    =================================
    0xdfaS0xc3dS0xd1fS0x298: vdfaVc3dVd1fV298(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x298: JUMP vc3eVd1fV298(0xc46)

    Begin block 0xc46B0xd1fB0x298
    prev=[0xdf9B0xc3dB0xd1fB0x298], succ=[0xd34B0x298]
    =================================
    0xc48S0xd1fS0x298: MSTORE vd2eV298, v5af
    0xc4bS0xd1fS0x298: JUMP vd28V298(0xd34)

    Begin block 0xd34B0x298
    prev=[0xc46B0xd1fB0x298], succ=[0x2a5]
    =================================
    0xd39S0x298: JUMP v29c(0x2a5)

    Begin block 0x2a5
    prev=[0xd34B0x298], succ=[]
    =================================
    0x2a6: v2a6(0x40) = CONST 
    0x2a8: v2a8 = MLOAD v2a6(0x40)
    0x2ab: v2ab(0x20) = SUB vd25V298, v2a8
    0x2ad: RETURN v2a8, v2ab(0x20)

}

function stakeCount(address)() public {
    Begin block 0x2ae
    prev=[], succ=[0xab4B0x2ae]
    =================================
    0x2af: v2af(0x2c8) = CONST 
    0x2b2: v2b2(0x4) = CONST 
    0x2b5: v2b5 = CALLDATASIZE 
    0x2b6: v2b6 = SUB v2b5, v2b2(0x4)
    0x2b7: v2b7(0x2c3) = CONST 
    0x2bd: v2bd = ADD v2b2(0x4), v2b6
    0x2bf: v2bf(0xab4) = CONST 
    0x2c2: JUMP v2bf(0xab4)

    Begin block 0xab4B0x2ae
    prev=[0x2ae], succ=[0xac2B0x2ae, 0xac6B0x2ae]
    =================================
    0xab5S0x2ae: vab5V2ae(0x0) = CONST 
    0xab7S0x2ae: vab7V2ae(0x20) = CONST 
    0xabbS0x2ae: vabbV2ae = SUB v2bd, v2b2(0x4)
    0xabcS0x2ae: vabcV2ae = SLT vabbV2ae, vab7V2ae(0x20)
    0xabdS0x2ae: vabdV2ae = ISZERO vabcV2ae
    0xabeS0x2ae: vabeV2ae(0xac6) = CONST 
    0xac1S0x2ae: JUMPI vabeV2ae(0xac6), vabdV2ae

    Begin block 0xac2B0x2ae
    prev=[0xab4B0x2ae], succ=[]
    =================================
    0xac2S0x2ae: vac2V2ae(0x0) = CONST 
    0xac5S0x2ae: REVERT vac2V2ae(0x0), vac2V2ae(0x0)

    Begin block 0xac6B0x2ae
    prev=[0xab4B0x2ae], succ=[0xa60B0xac6B0x2ae]
    =================================
    0xac7S0x2ae: vac7V2ae(0x0) = CONST 
    0xac9S0x2ae: vac9V2ae(0xad4) = CONST 
    0xacfS0x2ae: vacfV2ae(0x4) = ADD v2b2(0x4), vac7V2ae(0x0)
    0xad0S0x2ae: vad0V2ae(0xa60) = CONST 
    0xad3S0x2ae: JUMP vad0V2ae(0xa60)

    Begin block 0xa60B0xac6B0x2ae
    prev=[0xac6B0x2ae], succ=[0xe36B0xa60B0xac6B0x2ae]
    =================================
    0xa61S0xac6S0x2ae: va61Vac6V2ae(0x0) = CONST 
    0xa64S0xac6S0x2ae: va64Vac6V2ae = CALLDATALOAD vacfV2ae(0x4)
    0xa67S0xac6S0x2ae: va67Vac6V2ae(0xa6f) = CONST 
    0xa6bS0xac6S0x2ae: va6bVac6V2ae(0xe36) = CONST 
    0xa6eS0xac6S0x2ae: JUMP va6bVac6V2ae(0xe36), va64Vac6V2ae, va67Vac6V2ae(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x2ae
    prev=[0xa60B0xac6B0x2ae], succ=[0xda9B0xe36B0xa60B0xac6B0x2ae]
    =================================
    0xe37S0xa60S0xac6S0x2ae: ve37Va60Vac6V2ae(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x2ae: ve3bVa60Vac6V2ae(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x2ae: JUMP ve3bVa60Vac6V2ae(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x2ae
    prev=[0xe36B0xa60B0xac6B0x2ae], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x2ae]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x2ae: vdaaVe36Va60Vac6V2ae(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x2ae: vdacVe36Va60Vac6V2ae(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x2ae: vdb0Ve36Va60Vac6V2ae(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x2ae: JUMP vdb0Ve36Va60Vac6V2ae(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x2ae
    prev=[0xda9B0xe36B0xa60B0xac6B0x2ae], succ=[0xdb4B0xe36B0xa60B0xac6B0x2ae]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x2ae: vddaVda9Ve36Va60Vac6V2ae(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x2ae: vddcVda9Ve36Va60Vac6V2ae(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x2ae: vdf2Vda9Ve36Va60Vac6V2ae = AND va64Vac6V2ae, vddcVda9Ve36Va60Vac6V2ae(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x2ae: JUMP vdacVe36Va60Vac6V2ae(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x2ae
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x2ae], succ=[0xe3fB0xa60B0xac6B0x2ae]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x2ae: JUMP ve37Va60Vac6V2ae(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x2ae
    prev=[0xdb4B0xe36B0xa60B0xac6B0x2ae], succ=[0xe46B0xa60B0xac6B0x2ae, 0xe4aB0xa60B0xac6B0x2ae]
    =================================
    0xe41S0xa60S0xac6S0x2ae: ve41Va60Vac6V2ae = EQ va64Vac6V2ae, vdf2Vda9Ve36Va60Vac6V2ae
    0xe42S0xa60S0xac6S0x2ae: ve42Va60Vac6V2ae(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x2ae: JUMPI ve42Va60Vac6V2ae(0xe4a), ve41Va60Vac6V2ae

    Begin block 0xe46B0xa60B0xac6B0x2ae
    prev=[0xe3fB0xa60B0xac6B0x2ae], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x2ae: ve46Va60Vac6V2ae(0x0) = CONST 
    0xe49S0xa60S0xac6S0x2ae: REVERT ve46Va60Vac6V2ae(0x0), ve46Va60Vac6V2ae(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x2ae
    prev=[0xe3fB0xa60B0xac6B0x2ae], succ=[0xa6fB0xac6B0x2ae]
    =================================
    0xe4cS0xa60S0xac6S0x2ae: JUMP va67Vac6V2ae(0xa6f)

    Begin block 0xa6fB0xac6B0x2ae
    prev=[0xe4aB0xa60B0xac6B0x2ae], succ=[0xad4B0x2ae]
    =================================
    0xa74S0xac6S0x2ae: JUMP vac9V2ae(0xad4)

    Begin block 0xad4B0x2ae
    prev=[0xa6fB0xac6B0x2ae], succ=[0x2c3]
    =================================
    0xadcS0x2ae: JUMP v2b7(0x2c3)

    Begin block 0x2c3
    prev=[0xad4B0x2ae], succ=[0x5b2]
    =================================
    0x2c4: v2c4(0x5b2) = CONST 
    0x2c7: JUMP v2c4(0x5b2)

    Begin block 0x5b2
    prev=[0x2c3], succ=[0x2c8]
    =================================
    0x5b3: v5b3(0xc) = CONST 
    0x5b5: v5b5(0x20) = CONST 
    0x5b7: MSTORE v5b5(0x20), v5b3(0xc)
    0x5b9: v5b9(0x0) = CONST 
    0x5bb: MSTORE v5b9(0x0), va64Vac6V2ae
    0x5bc: v5bc(0x40) = CONST 
    0x5be: v5be(0x0) = CONST 
    0x5c0: v5c0 = SHA3 v5be(0x0), v5bc(0x40)
    0x5c1: v5c1(0x0) = CONST 
    0x5c7: v5c7 = SLOAD v5c0
    0x5c9: JUMP v2af(0x2c8)

    Begin block 0x2c8
    prev=[0x5b2], succ=[0xd1fB0x2c8]
    =================================
    0x2c9: v2c9(0x40) = CONST 
    0x2cb: v2cb = MLOAD v2c9(0x40)
    0x2cc: v2cc(0x2d5) = CONST 
    0x2d1: v2d1(0xd1f) = CONST 
    0x2d4: JUMP v2d1(0xd1f)

    Begin block 0xd1fB0x2c8
    prev=[0x2c8], succ=[0xc3dB0xd1fB0x2c8]
    =================================
    0xd20S0x2c8: vd20V2c8(0x0) = CONST 
    0xd22S0x2c8: vd22V2c8(0x20) = CONST 
    0xd25S0x2c8: vd25V2c8 = ADD v2cb, vd22V2c8(0x20)
    0xd28S0x2c8: vd28V2c8(0xd34) = CONST 
    0xd2bS0x2c8: vd2bV2c8(0x0) = CONST 
    0xd2eS0x2c8: vd2eV2c8 = ADD v2cb, vd2bV2c8(0x0)
    0xd30S0x2c8: vd30V2c8(0xc3d) = CONST 
    0xd33S0x2c8: JUMP vd30V2c8(0xc3d), v5c7, vd2eV2c8, vd28V2c8(0xd34)

    Begin block 0xc3dB0xd1fB0x2c8
    prev=[0xd1fB0x2c8], succ=[0xdf9B0xc3dB0xd1fB0x2c8]
    =================================
    0xc3eS0xd1fS0x2c8: vc3eVd1fV2c8(0xc46) = CONST 
    0xc42S0xd1fS0x2c8: vc42Vd1fV2c8(0xdf9) = CONST 
    0xc45S0xd1fS0x2c8: JUMP vc42Vd1fV2c8(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x2c8
    prev=[0xc3dB0xd1fB0x2c8], succ=[0xc46B0xd1fB0x2c8]
    =================================
    0xdfaS0xc3dS0xd1fS0x2c8: vdfaVc3dVd1fV2c8(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x2c8: JUMP vc3eVd1fV2c8(0xc46)

    Begin block 0xc46B0xd1fB0x2c8
    prev=[0xdf9B0xc3dB0xd1fB0x2c8], succ=[0xd34B0x2c8]
    =================================
    0xc48S0xd1fS0x2c8: MSTORE vd2eV2c8, v5c7
    0xc4bS0xd1fS0x2c8: JUMP vd28V2c8(0xd34)

    Begin block 0xd34B0x2c8
    prev=[0xc46B0xd1fB0x2c8], succ=[0x2d5]
    =================================
    0xd39S0x2c8: JUMP v2cc(0x2d5)

    Begin block 0x2d5
    prev=[0xd34B0x2c8], succ=[]
    =================================
    0x2d6: v2d6(0x40) = CONST 
    0x2d8: v2d8 = MLOAD v2d6(0x40)
    0x2db: v2db(0x20) = SUB vd25V2c8, v2d8
    0x2dd: RETURN v2d8, v2db(0x20)

}

function _setAdmin(address)() public {
    Begin block 0x2de
    prev=[], succ=[0xab4B0x2de]
    =================================
    0x2df: v2df(0x2f8) = CONST 
    0x2e2: v2e2(0x4) = CONST 
    0x2e5: v2e5 = CALLDATASIZE 
    0x2e6: v2e6 = SUB v2e5, v2e2(0x4)
    0x2e7: v2e7(0x2f3) = CONST 
    0x2ed: v2ed = ADD v2e2(0x4), v2e6
    0x2ef: v2ef(0xab4) = CONST 
    0x2f2: JUMP v2ef(0xab4)

    Begin block 0xab4B0x2de
    prev=[0x2de], succ=[0xac2B0x2de, 0xac6B0x2de]
    =================================
    0xab5S0x2de: vab5V2de(0x0) = CONST 
    0xab7S0x2de: vab7V2de(0x20) = CONST 
    0xabbS0x2de: vabbV2de = SUB v2ed, v2e2(0x4)
    0xabcS0x2de: vabcV2de = SLT vabbV2de, vab7V2de(0x20)
    0xabdS0x2de: vabdV2de = ISZERO vabcV2de
    0xabeS0x2de: vabeV2de(0xac6) = CONST 
    0xac1S0x2de: JUMPI vabeV2de(0xac6), vabdV2de

    Begin block 0xac2B0x2de
    prev=[0xab4B0x2de], succ=[]
    =================================
    0xac2S0x2de: vac2V2de(0x0) = CONST 
    0xac5S0x2de: REVERT vac2V2de(0x0), vac2V2de(0x0)

    Begin block 0xac6B0x2de
    prev=[0xab4B0x2de], succ=[0xa60B0xac6B0x2de]
    =================================
    0xac7S0x2de: vac7V2de(0x0) = CONST 
    0xac9S0x2de: vac9V2de(0xad4) = CONST 
    0xacfS0x2de: vacfV2de(0x4) = ADD v2e2(0x4), vac7V2de(0x0)
    0xad0S0x2de: vad0V2de(0xa60) = CONST 
    0xad3S0x2de: JUMP vad0V2de(0xa60)

    Begin block 0xa60B0xac6B0x2de
    prev=[0xac6B0x2de], succ=[0xe36B0xa60B0xac6B0x2de]
    =================================
    0xa61S0xac6S0x2de: va61Vac6V2de(0x0) = CONST 
    0xa64S0xac6S0x2de: va64Vac6V2de = CALLDATALOAD vacfV2de(0x4)
    0xa67S0xac6S0x2de: va67Vac6V2de(0xa6f) = CONST 
    0xa6bS0xac6S0x2de: va6bVac6V2de(0xe36) = CONST 
    0xa6eS0xac6S0x2de: JUMP va6bVac6V2de(0xe36), va64Vac6V2de, va67Vac6V2de(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x2de
    prev=[0xa60B0xac6B0x2de], succ=[0xda9B0xe36B0xa60B0xac6B0x2de]
    =================================
    0xe37S0xa60S0xac6S0x2de: ve37Va60Vac6V2de(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x2de: ve3bVa60Vac6V2de(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x2de: JUMP ve3bVa60Vac6V2de(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x2de
    prev=[0xe36B0xa60B0xac6B0x2de], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x2de]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x2de: vdaaVe36Va60Vac6V2de(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x2de: vdacVe36Va60Vac6V2de(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x2de: vdb0Ve36Va60Vac6V2de(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x2de: JUMP vdb0Ve36Va60Vac6V2de(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x2de
    prev=[0xda9B0xe36B0xa60B0xac6B0x2de], succ=[0xdb4B0xe36B0xa60B0xac6B0x2de]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x2de: vddaVda9Ve36Va60Vac6V2de(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x2de: vddcVda9Ve36Va60Vac6V2de(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x2de: vdf2Vda9Ve36Va60Vac6V2de = AND va64Vac6V2de, vddcVda9Ve36Va60Vac6V2de(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x2de: JUMP vdacVe36Va60Vac6V2de(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x2de
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x2de], succ=[0xe3fB0xa60B0xac6B0x2de]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x2de: JUMP ve37Va60Vac6V2de(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x2de
    prev=[0xdb4B0xe36B0xa60B0xac6B0x2de], succ=[0xe46B0xa60B0xac6B0x2de, 0xe4aB0xa60B0xac6B0x2de]
    =================================
    0xe41S0xa60S0xac6S0x2de: ve41Va60Vac6V2de = EQ va64Vac6V2de, vdf2Vda9Ve36Va60Vac6V2de
    0xe42S0xa60S0xac6S0x2de: ve42Va60Vac6V2de(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x2de: JUMPI ve42Va60Vac6V2de(0xe4a), ve41Va60Vac6V2de

    Begin block 0xe46B0xa60B0xac6B0x2de
    prev=[0xe3fB0xa60B0xac6B0x2de], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x2de: ve46Va60Vac6V2de(0x0) = CONST 
    0xe49S0xa60S0xac6S0x2de: REVERT ve46Va60Vac6V2de(0x0), ve46Va60Vac6V2de(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x2de
    prev=[0xe3fB0xa60B0xac6B0x2de], succ=[0xa6fB0xac6B0x2de]
    =================================
    0xe4cS0xa60S0xac6S0x2de: JUMP va67Vac6V2de(0xa6f)

    Begin block 0xa6fB0xac6B0x2de
    prev=[0xe4aB0xa60B0xac6B0x2de], succ=[0xad4B0x2de]
    =================================
    0xa74S0xac6S0x2de: JUMP vac9V2de(0xad4)

    Begin block 0xad4B0x2de
    prev=[0xa6fB0xac6B0x2de], succ=[0x2f3]
    =================================
    0xadcS0x2de: JUMP v2e7(0x2f3)

    Begin block 0x2f3
    prev=[0xad4B0x2de], succ=[0x5ca]
    =================================
    0x2f4: v2f4(0x5ca) = CONST 
    0x2f7: JUMP v2f4(0x5ca)

    Begin block 0x5ca
    prev=[0x2f3], succ=[0x620, 0x65a]
    =================================
    0x5cb: v5cb(0x1) = CONST 
    0x5cd: v5cd(0x0) = CONST 
    0x5d0: v5d0 = SLOAD v5cb(0x1)
    0x5d2: v5d2(0x100) = CONST 
    0x5d5: v5d5(0x1) = EXP v5d2(0x100), v5cd(0x0)
    0x5d7: v5d7 = DIV v5d0, v5d5(0x1)
    0x5d8: v5d8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x5ed: v5ed = AND v5d8(0xffffffffffffffffffffffffffffffffffffffff), v5d7
    0x5ee: v5ee(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x603: v603 = AND v5ee(0xffffffffffffffffffffffffffffffffffffffff), v5ed
    0x604: v604 = CALLER 
    0x605: v605(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x61a: v61a = AND v605(0xffffffffffffffffffffffffffffffffffffffff), v604
    0x61b: v61b = EQ v61a, v603
    0x61c: v61c(0x65a) = CONST 
    0x61f: JUMPI v61c(0x65a), v61b

    Begin block 0x620
    prev=[0x5ca], succ=[0xcdfB0x620]
    =================================
    0x620: v620(0x40) = CONST 
    0x622: v622 = MLOAD v620(0x40)
    0x623: v623(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x645: MSTORE v622, v623(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x646: v646(0x4) = CONST 
    0x648: v648 = ADD v646(0x4), v622
    0x649: v649(0x651) = CONST 
    0x64d: v64d(0xcdf) = CONST 
    0x650: JUMP v64d(0xcdf)

    Begin block 0xcdfB0x620
    prev=[0x620], succ=[0xbbdB0x620]
    =================================
    0xce0S0x620: vce0V620(0x0) = CONST 
    0xce2S0x620: vce2V620(0x20) = CONST 
    0xce5S0x620: vce5V620 = ADD v648, vce2V620(0x20)
    0xceaS0x620: vceaV620(0x20) = SUB vce5V620, v648
    0xcebS0x620: vcebV620(0x0) = CONST 
    0xceeS0x620: vceeV620 = ADD v648, vcebV620(0x0)
    0xcefS0x620: MSTORE vceeV620, vceaV620(0x20)
    0xcf0S0x620: vcf0V620(0xcf8) = CONST 
    0xcf4S0x620: vcf4V620(0xbbd) = CONST 
    0xcf7S0x620: JUMP vcf4V620(0xbbd)

    Begin block 0xbbdB0x620
    prev=[0xcdfB0x620], succ=[0xd98B0xbbdB0x620]
    =================================
    0xbbeS0x620: vbbeV620(0x0) = CONST 
    0xbc0S0x620: vbc0V620(0xbca) = CONST 
    0xbc3S0x620: vbc3V620(0xc) = CONST 
    0xbc6S0x620: vbc6V620(0xd98) = CONST 
    0xbc9S0x620: JUMP vbc6V620(0xd98)

    Begin block 0xd98B0xbbdB0x620
    prev=[0xbbdB0x620], succ=[0xbcaB0x620]
    =================================
    0xd99S0xbbdS0x620: vd99VbbdV620(0x0) = CONST 
    0xd9dS0xbbdS0x620: MSTORE vce5V620, vbc3V620(0xc)
    0xd9eS0xbbdS0x620: vd9eVbbdV620(0x20) = CONST 
    0xda1S0xbbdS0x620: vda1VbbdV620 = ADD vce5V620, vd9eVbbdV620(0x20)
    0xda8S0xbbdS0x620: JUMP vbc0V620(0xbca)

    Begin block 0xbcaB0x620
    prev=[0xd98B0xbbdB0x620], succ=[0xcf8B0x620]
    =================================
    0xbcdS0x620: vbcdV620(0x554e415554484f52495a45440000000000000000000000000000000000000000) = CONST 
    0xbeeS0x620: vbeeV620(0x0) = CONST 
    0xbf1S0x620: vbf1V620 = ADD vda1VbbdV620, vbeeV620(0x0)
    0xbf2S0x620: MSTORE vbf1V620, vbcdV620(0x554e415554484f52495a45440000000000000000000000000000000000000000)
    0xbf3S0x620: vbf3V620(0x20) = CONST 
    0xbf6S0x620: vbf6V620 = ADD vda1VbbdV620, vbf3V620(0x20)
    0xbfcS0x620: JUMP vcf0V620(0xcf8)

    Begin block 0xcf8B0x620
    prev=[0xbcaB0x620], succ=[0x651]
    =================================
    0xcfeS0x620: JUMP v649(0x651)

    Begin block 0x651
    prev=[0xcf8B0x620], succ=[]
    =================================
    0x652: v652(0x40) = CONST 
    0x654: v654 = MLOAD v652(0x40)
    0x657: v657(0x64) = SUB vbf6V620, v654
    0x659: REVERT v654, v657(0x64)

    Begin block 0x65a
    prev=[0x5ca], succ=[0xc80B0x65a]
    =================================
    0x65b: v65b(0x0) = CONST 
    0x65d: v65d(0x1) = CONST 
    0x65f: v65f(0x0) = CONST 
    0x662: v662 = SLOAD v65d(0x1)
    0x664: v664(0x100) = CONST 
    0x667: v667(0x1) = EXP v664(0x100), v65f(0x0)
    0x669: v669 = DIV v662, v667(0x1)
    0x66a: v66a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x67f: v67f = AND v66a(0xffffffffffffffffffffffffffffffffffffffff), v669
    0x683: v683(0x1) = CONST 
    0x685: v685(0x0) = CONST 
    0x687: v687(0x100) = CONST 
    0x68a: v68a(0x1) = EXP v687(0x100), v685(0x0)
    0x68c: v68c = SLOAD v683(0x1)
    0x68e: v68e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x6a3: v6a3(0xffffffffffffffffffffffffffffffffffffffff) = MUL v68e(0xffffffffffffffffffffffffffffffffffffffff), v68a(0x1)
    0x6a4: v6a4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v6a3(0xffffffffffffffffffffffffffffffffffffffff)
    0x6a5: v6a5 = AND v6a4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v68c
    0x6a8: v6a8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x6bd: v6bd = AND v6a8(0xffffffffffffffffffffffffffffffffffffffff), va64Vac6V2de
    0x6be: v6be = MUL v6bd, v68a(0x1)
    0x6bf: v6bf = OR v6be, v6a5
    0x6c1: SSTORE v683(0x1), v6bf
    0x6c3: v6c3(0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc) = CONST 
    0x6e6: v6e6(0x40) = CONST 
    0x6e8: v6e8 = MLOAD v6e6(0x40)
    0x6e9: v6e9(0x6f3) = CONST 
    0x6ef: v6ef(0xc80) = CONST 
    0x6f2: JUMP v6ef(0xc80)

    Begin block 0xc80B0x65a
    prev=[0x65a], succ=[0xb6bB0xc80B0x65a]
    =================================
    0xc81S0x65a: vc81V65a(0x0) = CONST 
    0xc83S0x65a: vc83V65a(0x40) = CONST 
    0xc86S0x65a: vc86V65a = ADD v6e8, vc83V65a(0x40)
    0xc89S0x65a: vc89V65a(0xc95) = CONST 
    0xc8cS0x65a: vc8cV65a(0x0) = CONST 
    0xc8fS0x65a: vc8fV65a = ADD v6e8, vc8cV65a(0x0)
    0xc91S0x65a: vc91V65a(0xb6b) = CONST 
    0xc94S0x65a: JUMP vc91V65a(0xb6b), v67f, vc8fV65a, vc89V65a(0xc95)

    Begin block 0xb6bB0xc80B0x65a
    prev=[0xc80B0x65a], succ=[0xda9B0xb6bB0xc80B0x65a]
    =================================
    0xb6cS0xc80S0x65a: vb6cVc80V65a(0xb74) = CONST 
    0xb70S0xc80S0x65a: vb70Vc80V65a(0xda9) = CONST 
    0xb73S0xc80S0x65a: JUMP vb70Vc80V65a(0xda9)

    Begin block 0xda9B0xb6bB0xc80B0x65a
    prev=[0xb6bB0xc80B0x65a], succ=[0xdd9B0xda9B0xb6bB0xc80B0x65a]
    =================================
    0xdaaS0xb6bS0xc80S0x65a: vdaaVb6bVc80V65a(0x0) = CONST 
    0xdacS0xb6bS0xc80S0x65a: vdacVb6bVc80V65a(0xdb4) = CONST 
    0xdb0S0xb6bS0xc80S0x65a: vdb0Vb6bVc80V65a(0xdd9) = CONST 
    0xdb3S0xb6bS0xc80S0x65a: JUMP vdb0Vb6bVc80V65a(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc80B0x65a
    prev=[0xda9B0xb6bB0xc80B0x65a], succ=[0xdb4B0xb6bB0xc80B0x65a]
    =================================
    0xddaS0xda9S0xb6bS0xc80S0x65a: vddaVda9Vb6bVc80V65a(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc80S0x65a: vddcVda9Vb6bVc80V65a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc80S0x65a: vdf2Vda9Vb6bVc80V65a = AND v67f, vddcVda9Vb6bVc80V65a(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc80S0x65a: JUMP vdacVb6bVc80V65a(0xdb4)

    Begin block 0xdb4B0xb6bB0xc80B0x65a
    prev=[0xdd9B0xda9B0xb6bB0xc80B0x65a], succ=[0xb74B0xc80B0x65a]
    =================================
    0xdbaS0xb6bS0xc80S0x65a: JUMP vb6cVc80V65a(0xb74)

    Begin block 0xb74B0xc80B0x65a
    prev=[0xdb4B0xb6bB0xc80B0x65a], succ=[0xc95B0x65a]
    =================================
    0xb76S0xc80S0x65a: MSTORE vc8fV65a, vdf2Vda9Vb6bVc80V65a
    0xb79S0xc80S0x65a: JUMP vc89V65a(0xc95)

    Begin block 0xc95B0x65a
    prev=[0xb74B0xc80B0x65a], succ=[0xb6bB0xc95B0x65a]
    =================================
    0xc96S0x65a: vc96V65a(0xca2) = CONST 
    0xc99S0x65a: vc99V65a(0x20) = CONST 
    0xc9cS0x65a: vc9cV65a = ADD v6e8, vc99V65a(0x20)
    0xc9eS0x65a: vc9eV65a(0xb6b) = CONST 
    0xca1S0x65a: JUMP vc9eV65a(0xb6b), va64Vac6V2de, vc9cV65a, vc96V65a(0xca2)

    Begin block 0xb6bB0xc95B0x65a
    prev=[0xc95B0x65a], succ=[0xda9B0xb6bB0xc95B0x65a]
    =================================
    0xb6cS0xc95S0x65a: vb6cVc95V65a(0xb74) = CONST 
    0xb70S0xc95S0x65a: vb70Vc95V65a(0xda9) = CONST 
    0xb73S0xc95S0x65a: JUMP vb70Vc95V65a(0xda9)

    Begin block 0xda9B0xb6bB0xc95B0x65a
    prev=[0xb6bB0xc95B0x65a], succ=[0xdd9B0xda9B0xb6bB0xc95B0x65a]
    =================================
    0xdaaS0xb6bS0xc95S0x65a: vdaaVb6bVc95V65a(0x0) = CONST 
    0xdacS0xb6bS0xc95S0x65a: vdacVb6bVc95V65a(0xdb4) = CONST 
    0xdb0S0xb6bS0xc95S0x65a: vdb0Vb6bVc95V65a(0xdd9) = CONST 
    0xdb3S0xb6bS0xc95S0x65a: JUMP vdb0Vb6bVc95V65a(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc95B0x65a
    prev=[0xda9B0xb6bB0xc95B0x65a], succ=[0xdb4B0xb6bB0xc95B0x65a]
    =================================
    0xddaS0xda9S0xb6bS0xc95S0x65a: vddaVda9Vb6bVc95V65a(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc95S0x65a: vddcVda9Vb6bVc95V65a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc95S0x65a: vdf2Vda9Vb6bVc95V65a = AND va64Vac6V2de, vddcVda9Vb6bVc95V65a(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc95S0x65a: JUMP vdacVb6bVc95V65a(0xdb4)

    Begin block 0xdb4B0xb6bB0xc95B0x65a
    prev=[0xdd9B0xda9B0xb6bB0xc95B0x65a], succ=[0xb74B0xc95B0x65a]
    =================================
    0xdbaS0xb6bS0xc95S0x65a: JUMP vb6cVc95V65a(0xb74)

    Begin block 0xb74B0xc95B0x65a
    prev=[0xdb4B0xb6bB0xc95B0x65a], succ=[0xca2B0x65a]
    =================================
    0xb76S0xc95S0x65a: MSTORE vc9cV65a, vdf2Vda9Vb6bVc95V65a
    0xb79S0xc95S0x65a: JUMP vc96V65a(0xca2)

    Begin block 0xca2B0x65a
    prev=[0xb74B0xc95B0x65a], succ=[0x6f3]
    =================================
    0xca8S0x65a: JUMP v6e9(0x6f3)

    Begin block 0x6f3
    prev=[0xca2B0x65a], succ=[0x2f8]
    =================================
    0x6f4: v6f4(0x40) = CONST 
    0x6f6: v6f6 = MLOAD v6f4(0x40)
    0x6f9: v6f9(0x40) = SUB vc86V65a, v6f6
    0x6fb: LOG1 v6f6, v6f9(0x40), v6c3(0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc)
    0x6fe: JUMP v2df(0x2f8)

    Begin block 0x2f8
    prev=[0x6f3], succ=[]
    =================================
    0x2f9: STOP 

}

function endMiningBlockNum()() public {
    Begin block 0x2fa
    prev=[], succ=[0x6ff]
    =================================
    0x2fb: v2fb(0x302) = CONST 
    0x2fe: v2fe(0x6ff) = CONST 
    0x301: JUMP v2fe(0x6ff)

    Begin block 0x6ff
    prev=[0x2fa], succ=[0x302]
    =================================
    0x700: v700(0x7) = CONST 
    0x702: v702 = SLOAD v700(0x7)
    0x704: JUMP v2fb(0x302)

    Begin block 0x302
    prev=[0x6ff], succ=[0xd1fB0x302]
    =================================
    0x303: v303(0x40) = CONST 
    0x305: v305 = MLOAD v303(0x40)
    0x306: v306(0x30f) = CONST 
    0x30b: v30b(0xd1f) = CONST 
    0x30e: JUMP v30b(0xd1f)

    Begin block 0xd1fB0x302
    prev=[0x302], succ=[0xc3dB0xd1fB0x302]
    =================================
    0xd20S0x302: vd20V302(0x0) = CONST 
    0xd22S0x302: vd22V302(0x20) = CONST 
    0xd25S0x302: vd25V302 = ADD v305, vd22V302(0x20)
    0xd28S0x302: vd28V302(0xd34) = CONST 
    0xd2bS0x302: vd2bV302(0x0) = CONST 
    0xd2eS0x302: vd2eV302 = ADD v305, vd2bV302(0x0)
    0xd30S0x302: vd30V302(0xc3d) = CONST 
    0xd33S0x302: JUMP vd30V302(0xc3d), v702, vd2eV302, vd28V302(0xd34)

    Begin block 0xc3dB0xd1fB0x302
    prev=[0xd1fB0x302], succ=[0xdf9B0xc3dB0xd1fB0x302]
    =================================
    0xc3eS0xd1fS0x302: vc3eVd1fV302(0xc46) = CONST 
    0xc42S0xd1fS0x302: vc42Vd1fV302(0xdf9) = CONST 
    0xc45S0xd1fS0x302: JUMP vc42Vd1fV302(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x302
    prev=[0xc3dB0xd1fB0x302], succ=[0xc46B0xd1fB0x302]
    =================================
    0xdfaS0xc3dS0xd1fS0x302: vdfaVc3dVd1fV302(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x302: JUMP vc3eVd1fV302(0xc46)

    Begin block 0xc46B0xd1fB0x302
    prev=[0xdf9B0xc3dB0xd1fB0x302], succ=[0xd34B0x302]
    =================================
    0xc48S0xd1fS0x302: MSTORE vd2eV302, v702
    0xc4bS0xd1fS0x302: JUMP vd28V302(0xd34)

    Begin block 0xd34B0x302
    prev=[0xc46B0xd1fB0x302], succ=[0x30f]
    =================================
    0xd39S0x302: JUMP v306(0x30f)

    Begin block 0x30f
    prev=[0xd34B0x302], succ=[]
    =================================
    0x310: v310(0x40) = CONST 
    0x312: v312 = MLOAD v310(0x40)
    0x315: v315(0x20) = SUB vd25V302, v312
    0x317: RETURN v312, v315(0x20)

}

function stakes(address,uint256)() public {
    Begin block 0x318
    prev=[], succ=[0xaddB0x318]
    =================================
    0x319: v319(0x332) = CONST 
    0x31c: v31c(0x4) = CONST 
    0x31f: v31f = CALLDATASIZE 
    0x320: v320 = SUB v31f, v31c(0x4)
    0x321: v321(0x32d) = CONST 
    0x327: v327 = ADD v31c(0x4), v320
    0x329: v329(0xadd) = CONST 
    0x32c: JUMP v329(0xadd)

    Begin block 0xaddB0x318
    prev=[0x318], succ=[0xaecB0x318, 0xaf0B0x318]
    =================================
    0xadeS0x318: vadeV318(0x0) = CONST 
    0xae1S0x318: vae1V318(0x40) = CONST 
    0xae5S0x318: vae5V318 = SUB v327, v31c(0x4)
    0xae6S0x318: vae6V318 = SLT vae5V318, vae1V318(0x40)
    0xae7S0x318: vae7V318 = ISZERO vae6V318
    0xae8S0x318: vae8V318(0xaf0) = CONST 
    0xaebS0x318: JUMPI vae8V318(0xaf0), vae7V318

    Begin block 0xaecB0x318
    prev=[0xaddB0x318], succ=[]
    =================================
    0xaecS0x318: vaecV318(0x0) = CONST 
    0xaefS0x318: REVERT vaecV318(0x0), vaecV318(0x0)

    Begin block 0xaf0B0x318
    prev=[0xaddB0x318], succ=[0xa60B0xaf0B0x318]
    =================================
    0xaf1S0x318: vaf1V318(0x0) = CONST 
    0xaf3S0x318: vaf3V318(0xafe) = CONST 
    0xaf9S0x318: vaf9V318(0x4) = ADD v31c(0x4), vaf1V318(0x0)
    0xafaS0x318: vafaV318(0xa60) = CONST 
    0xafdS0x318: JUMP vafaV318(0xa60)

    Begin block 0xa60B0xaf0B0x318
    prev=[0xaf0B0x318], succ=[0xe36B0xa60B0xaf0B0x318]
    =================================
    0xa61S0xaf0S0x318: va61Vaf0V318(0x0) = CONST 
    0xa64S0xaf0S0x318: va64Vaf0V318 = CALLDATALOAD vaf9V318(0x4)
    0xa67S0xaf0S0x318: va67Vaf0V318(0xa6f) = CONST 
    0xa6bS0xaf0S0x318: va6bVaf0V318(0xe36) = CONST 
    0xa6eS0xaf0S0x318: JUMP va6bVaf0V318(0xe36), va64Vaf0V318, va67Vaf0V318(0xa6f)

    Begin block 0xe36B0xa60B0xaf0B0x318
    prev=[0xa60B0xaf0B0x318], succ=[0xda9B0xe36B0xa60B0xaf0B0x318]
    =================================
    0xe37S0xa60S0xaf0S0x318: ve37Va60Vaf0V318(0xe3f) = CONST 
    0xe3bS0xa60S0xaf0S0x318: ve3bVa60Vaf0V318(0xda9) = CONST 
    0xe3eS0xa60S0xaf0S0x318: JUMP ve3bVa60Vaf0V318(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xaf0B0x318
    prev=[0xe36B0xa60B0xaf0B0x318], succ=[0xdd9B0xda9B0xe36B0xa60B0xaf0B0x318]
    =================================
    0xdaaS0xe36S0xa60S0xaf0S0x318: vdaaVe36Va60Vaf0V318(0x0) = CONST 
    0xdacS0xe36S0xa60S0xaf0S0x318: vdacVe36Va60Vaf0V318(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xaf0S0x318: vdb0Ve36Va60Vaf0V318(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xaf0S0x318: JUMP vdb0Ve36Va60Vaf0V318(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xaf0B0x318
    prev=[0xda9B0xe36B0xa60B0xaf0B0x318], succ=[0xdb4B0xe36B0xa60B0xaf0B0x318]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xaf0S0x318: vddaVda9Ve36Va60Vaf0V318(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xaf0S0x318: vddcVda9Ve36Va60Vaf0V318(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xaf0S0x318: vdf2Vda9Ve36Va60Vaf0V318 = AND va64Vaf0V318, vddcVda9Ve36Va60Vaf0V318(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xaf0S0x318: JUMP vdacVe36Va60Vaf0V318(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xaf0B0x318
    prev=[0xdd9B0xda9B0xe36B0xa60B0xaf0B0x318], succ=[0xe3fB0xa60B0xaf0B0x318]
    =================================
    0xdbaS0xe36S0xa60S0xaf0S0x318: JUMP ve37Va60Vaf0V318(0xe3f)

    Begin block 0xe3fB0xa60B0xaf0B0x318
    prev=[0xdb4B0xe36B0xa60B0xaf0B0x318], succ=[0xe46B0xa60B0xaf0B0x318, 0xe4aB0xa60B0xaf0B0x318]
    =================================
    0xe41S0xa60S0xaf0S0x318: ve41Va60Vaf0V318 = EQ va64Vaf0V318, vdf2Vda9Ve36Va60Vaf0V318
    0xe42S0xa60S0xaf0S0x318: ve42Va60Vaf0V318(0xe4a) = CONST 
    0xe45S0xa60S0xaf0S0x318: JUMPI ve42Va60Vaf0V318(0xe4a), ve41Va60Vaf0V318

    Begin block 0xe46B0xa60B0xaf0B0x318
    prev=[0xe3fB0xa60B0xaf0B0x318], succ=[]
    =================================
    0xe46S0xa60S0xaf0S0x318: ve46Va60Vaf0V318(0x0) = CONST 
    0xe49S0xa60S0xaf0S0x318: REVERT ve46Va60Vaf0V318(0x0), ve46Va60Vaf0V318(0x0)

    Begin block 0xe4aB0xa60B0xaf0B0x318
    prev=[0xe3fB0xa60B0xaf0B0x318], succ=[0xa6fB0xaf0B0x318]
    =================================
    0xe4cS0xa60S0xaf0S0x318: JUMP va67Vaf0V318(0xa6f)

    Begin block 0xa6fB0xaf0B0x318
    prev=[0xe4aB0xa60B0xaf0B0x318], succ=[0xafeB0x318]
    =================================
    0xa74S0xaf0S0x318: JUMP vaf3V318(0xafe)

    Begin block 0xafeB0x318
    prev=[0xa6fB0xaf0B0x318], succ=[0xa9fB0xafeB0x318]
    =================================
    0xb02S0x318: vb02V318(0x20) = CONST 
    0xb04S0x318: vb04V318(0xb0f) = CONST 
    0xb0aS0x318: vb0aV318(0x24) = ADD v31c(0x4), vb02V318(0x20)
    0xb0bS0x318: vb0bV318(0xa9f) = CONST 
    0xb0eS0x318: JUMP vb0bV318(0xa9f)

    Begin block 0xa9fB0xafeB0x318
    prev=[0xafeB0x318], succ=[0xe7bB0xa9fB0xafeB0x318]
    =================================
    0xaa0S0xafeS0x318: vaa0VafeV318(0x0) = CONST 
    0xaa3S0xafeS0x318: vaa3VafeV318 = CALLDATALOAD vb0aV318(0x24)
    0xaa6S0xafeS0x318: vaa6VafeV318(0xaae) = CONST 
    0xaaaS0xafeS0x318: vaaaVafeV318(0xe7b) = CONST 
    0xaadS0xafeS0x318: JUMP vaaaVafeV318(0xe7b), vaa3VafeV318, vaa6VafeV318(0xaae)

    Begin block 0xe7bB0xa9fB0xafeB0x318
    prev=[0xa9fB0xafeB0x318], succ=[0xdf9B0xe7bB0xa9fB0xafeB0x318]
    =================================
    0xe7cS0xa9fS0xafeS0x318: ve7cVa9fVafeV318(0xe84) = CONST 
    0xe80S0xa9fS0xafeS0x318: ve80Va9fVafeV318(0xdf9) = CONST 
    0xe83S0xa9fS0xafeS0x318: JUMP ve80Va9fVafeV318(0xdf9)

    Begin block 0xdf9B0xe7bB0xa9fB0xafeB0x318
    prev=[0xe7bB0xa9fB0xafeB0x318], succ=[0xe84B0xa9fB0xafeB0x318]
    =================================
    0xdfaS0xe7bS0xa9fS0xafeS0x318: vdfaVe7bVa9fVafeV318(0x0) = CONST 
    0xe02S0xe7bS0xa9fS0xafeS0x318: JUMP ve7cVa9fVafeV318(0xe84)

    Begin block 0xe84B0xa9fB0xafeB0x318
    prev=[0xdf9B0xe7bB0xa9fB0xafeB0x318], succ=[0xe8bB0xa9fB0xafeB0x318, 0xe8fB0xa9fB0xafeB0x318]
    =================================
    0xe86S0xa9fS0xafeS0x318: ve86Va9fVafeV318 = EQ vaa3VafeV318, vaa3VafeV318
    0xe87S0xa9fS0xafeS0x318: ve87Va9fVafeV318(0xe8f) = CONST 
    0xe8aS0xa9fS0xafeS0x318: JUMPI ve87Va9fVafeV318(0xe8f), ve86Va9fVafeV318

    Begin block 0xe8bB0xa9fB0xafeB0x318
    prev=[0xe84B0xa9fB0xafeB0x318], succ=[]
    =================================
    0xe8bS0xa9fS0xafeS0x318: ve8bVa9fVafeV318(0x0) = CONST 
    0xe8eS0xa9fS0xafeS0x318: REVERT ve8bVa9fVafeV318(0x0), ve8bVa9fVafeV318(0x0)

    Begin block 0xe8fB0xa9fB0xafeB0x318
    prev=[0xe84B0xa9fB0xafeB0x318], succ=[0xaaeB0xafeB0x318]
    =================================
    0xe91S0xa9fS0xafeS0x318: JUMP vaa6VafeV318(0xaae)

    Begin block 0xaaeB0xafeB0x318
    prev=[0xe8fB0xa9fB0xafeB0x318], succ=[0xb0fB0x318]
    =================================
    0xab3S0xafeS0x318: JUMP vb04V318(0xb0f)

    Begin block 0xb0fB0x318
    prev=[0xaaeB0xafeB0x318], succ=[0x32d]
    =================================
    0xb18S0x318: JUMP v321(0x32d)

    Begin block 0x32d
    prev=[0xb0fB0x318], succ=[0x705]
    =================================
    0x32e: v32e(0x705) = CONST 
    0x331: JUMP v32e(0x705)

    Begin block 0x705
    prev=[0x32d], succ=[0x71d, 0x71e]
    =================================
    0x706: v706(0xb) = CONST 
    0x708: v708(0x20) = CONST 
    0x70a: MSTORE v708(0x20), v706(0xb)
    0x70c: v70c(0x0) = CONST 
    0x70e: MSTORE v70c(0x0), va64Vaf0V318
    0x70f: v70f(0x40) = CONST 
    0x711: v711(0x0) = CONST 
    0x713: v713 = SHA3 v711(0x0), v70f(0x40)
    0x716: v716 = SLOAD v713
    0x718: v718 = LT vaa3VafeV318, v716
    0x719: v719(0x71e) = CONST 
    0x71c: JUMPI v719(0x71e), v718

    Begin block 0x71d
    prev=[0x705], succ=[]
    =================================
    0x71d: THROW 

    Begin block 0x71e
    prev=[0x705], succ=[0x332]
    =================================
    0x720: v720(0x0) = CONST 
    0x722: MSTORE v720(0x0), v713
    0x723: v723(0x20) = CONST 
    0x725: v725(0x0) = CONST 
    0x727: v727 = SHA3 v725(0x0), v723(0x20)
    0x729: v729(0x5) = CONST 
    0x72b: v72b = MUL v729(0x5), vaa3VafeV318
    0x72c: v72c = ADD v72b, v727
    0x72d: v72d(0x0) = CONST 
    0x735: v735(0x0) = CONST 
    0x737: v737 = ADD v735(0x0), v72c
    0x738: v738 = SLOAD v737
    0x73b: v73b(0x1) = CONST 
    0x73d: v73d = ADD v73b(0x1), v72c
    0x73e: v73e = SLOAD v73d
    0x741: v741(0x2) = CONST 
    0x743: v743 = ADD v741(0x2), v72c
    0x744: v744 = SLOAD v743
    0x747: v747(0x3) = CONST 
    0x749: v749 = ADD v747(0x3), v72c
    0x74a: v74a = SLOAD v749
    0x74d: v74d(0x4) = CONST 
    0x74f: v74f = ADD v74d(0x4), v72c
    0x750: v750(0x0) = CONST 
    0x753: v753 = SLOAD v74f
    0x755: v755(0x100) = CONST 
    0x758: v758(0x1) = EXP v755(0x100), v750(0x0)
    0x75a: v75a = DIV v753, v758(0x1)
    0x75b: v75b(0xff) = CONST 
    0x75d: v75d = AND v75b(0xff), v75a
    0x761: JUMP v319(0x332)

    Begin block 0x332
    prev=[0x71e], succ=[0xd3aB0x332]
    =================================
    0x333: v333(0x40) = CONST 
    0x335: v335 = MLOAD v333(0x40)
    0x336: v336(0x343) = CONST 
    0x33f: v33f(0xd3a) = CONST 
    0x342: JUMP v33f(0xd3a)

    Begin block 0xd3aB0x332
    prev=[0x332], succ=[0xc3dB0xd3aB0x332]
    =================================
    0xd3bS0x332: vd3bV332(0x0) = CONST 
    0xd3dS0x332: vd3dV332(0xa0) = CONST 
    0xd40S0x332: vd40V332 = ADD v335, vd3dV332(0xa0)
    0xd43S0x332: vd43V332(0xd4f) = CONST 
    0xd46S0x332: vd46V332(0x0) = CONST 
    0xd49S0x332: vd49V332 = ADD v335, vd46V332(0x0)
    0xd4bS0x332: vd4bV332(0xc3d) = CONST 
    0xd4eS0x332: JUMP vd4bV332(0xc3d), v738, vd49V332, vd43V332(0xd4f)

    Begin block 0xc3dB0xd3aB0x332
    prev=[0xd3aB0x332], succ=[0xdf9B0xc3dB0xd3aB0x332]
    =================================
    0xc3eS0xd3aS0x332: vc3eVd3aV332(0xc46) = CONST 
    0xc42S0xd3aS0x332: vc42Vd3aV332(0xdf9) = CONST 
    0xc45S0xd3aS0x332: JUMP vc42Vd3aV332(0xdf9)

    Begin block 0xdf9B0xc3dB0xd3aB0x332
    prev=[0xc3dB0xd3aB0x332], succ=[0xc46B0xd3aB0x332]
    =================================
    0xdfaS0xc3dS0xd3aS0x332: vdfaVc3dVd3aV332(0x0) = CONST 
    0xe02S0xc3dS0xd3aS0x332: JUMP vc3eVd3aV332(0xc46)

    Begin block 0xc46B0xd3aB0x332
    prev=[0xdf9B0xc3dB0xd3aB0x332], succ=[0xd4fB0x332]
    =================================
    0xc48S0xd3aS0x332: MSTORE vd49V332, v738
    0xc4bS0xd3aS0x332: JUMP vd43V332(0xd4f)

    Begin block 0xd4fB0x332
    prev=[0xc46B0xd3aB0x332], succ=[0xc3dB0xd4fB0x332]
    =================================
    0xd50S0x332: vd50V332(0xd5c) = CONST 
    0xd53S0x332: vd53V332(0x20) = CONST 
    0xd56S0x332: vd56V332 = ADD v335, vd53V332(0x20)
    0xd58S0x332: vd58V332(0xc3d) = CONST 
    0xd5bS0x332: JUMP vd58V332(0xc3d), v73e, vd56V332, vd50V332(0xd5c)

    Begin block 0xc3dB0xd4fB0x332
    prev=[0xd4fB0x332], succ=[0xdf9B0xc3dB0xd4fB0x332]
    =================================
    0xc3eS0xd4fS0x332: vc3eVd4fV332(0xc46) = CONST 
    0xc42S0xd4fS0x332: vc42Vd4fV332(0xdf9) = CONST 
    0xc45S0xd4fS0x332: JUMP vc42Vd4fV332(0xdf9)

    Begin block 0xdf9B0xc3dB0xd4fB0x332
    prev=[0xc3dB0xd4fB0x332], succ=[0xc46B0xd4fB0x332]
    =================================
    0xdfaS0xc3dS0xd4fS0x332: vdfaVc3dVd4fV332(0x0) = CONST 
    0xe02S0xc3dS0xd4fS0x332: JUMP vc3eVd4fV332(0xc46)

    Begin block 0xc46B0xd4fB0x332
    prev=[0xdf9B0xc3dB0xd4fB0x332], succ=[0xd5cB0x332]
    =================================
    0xc48S0xd4fS0x332: MSTORE vd56V332, v73e
    0xc4bS0xd4fS0x332: JUMP vd50V332(0xd5c)

    Begin block 0xd5cB0x332
    prev=[0xc46B0xd4fB0x332], succ=[0xc3dB0xd5cB0x332]
    =================================
    0xd5dS0x332: vd5dV332(0xd69) = CONST 
    0xd60S0x332: vd60V332(0x40) = CONST 
    0xd63S0x332: vd63V332 = ADD v335, vd60V332(0x40)
    0xd65S0x332: vd65V332(0xc3d) = CONST 
    0xd68S0x332: JUMP vd65V332(0xc3d), v744, vd63V332, vd5dV332(0xd69)

    Begin block 0xc3dB0xd5cB0x332
    prev=[0xd5cB0x332], succ=[0xdf9B0xc3dB0xd5cB0x332]
    =================================
    0xc3eS0xd5cS0x332: vc3eVd5cV332(0xc46) = CONST 
    0xc42S0xd5cS0x332: vc42Vd5cV332(0xdf9) = CONST 
    0xc45S0xd5cS0x332: JUMP vc42Vd5cV332(0xdf9)

    Begin block 0xdf9B0xc3dB0xd5cB0x332
    prev=[0xc3dB0xd5cB0x332], succ=[0xc46B0xd5cB0x332]
    =================================
    0xdfaS0xc3dS0xd5cS0x332: vdfaVc3dVd5cV332(0x0) = CONST 
    0xe02S0xc3dS0xd5cS0x332: JUMP vc3eVd5cV332(0xc46)

    Begin block 0xc46B0xd5cB0x332
    prev=[0xdf9B0xc3dB0xd5cB0x332], succ=[0xd69B0x332]
    =================================
    0xc48S0xd5cS0x332: MSTORE vd63V332, v744
    0xc4bS0xd5cS0x332: JUMP vd5dV332(0xd69)

    Begin block 0xd69B0x332
    prev=[0xc46B0xd5cB0x332], succ=[0xc3dB0xd69B0x332]
    =================================
    0xd6aS0x332: vd6aV332(0xd76) = CONST 
    0xd6dS0x332: vd6dV332(0x60) = CONST 
    0xd70S0x332: vd70V332 = ADD v335, vd6dV332(0x60)
    0xd72S0x332: vd72V332(0xc3d) = CONST 
    0xd75S0x332: JUMP vd72V332(0xc3d), v74a, vd70V332, vd6aV332(0xd76)

    Begin block 0xc3dB0xd69B0x332
    prev=[0xd69B0x332], succ=[0xdf9B0xc3dB0xd69B0x332]
    =================================
    0xc3eS0xd69S0x332: vc3eVd69V332(0xc46) = CONST 
    0xc42S0xd69S0x332: vc42Vd69V332(0xdf9) = CONST 
    0xc45S0xd69S0x332: JUMP vc42Vd69V332(0xdf9)

    Begin block 0xdf9B0xc3dB0xd69B0x332
    prev=[0xc3dB0xd69B0x332], succ=[0xc46B0xd69B0x332]
    =================================
    0xdfaS0xc3dS0xd69S0x332: vdfaVc3dVd69V332(0x0) = CONST 
    0xe02S0xc3dS0xd69S0x332: JUMP vc3eVd69V332(0xc46)

    Begin block 0xc46B0xd69B0x332
    prev=[0xdf9B0xc3dB0xd69B0x332], succ=[0xd76B0x332]
    =================================
    0xc48S0xd69S0x332: MSTORE vd70V332, v74a
    0xc4bS0xd69S0x332: JUMP vd6aV332(0xd76)

    Begin block 0xd76B0x332
    prev=[0xc46B0xd69B0x332], succ=[0xb7aB0xd76B0x332]
    =================================
    0xd77S0x332: vd77V332(0xd83) = CONST 
    0xd7aS0x332: vd7aV332(0x80) = CONST 
    0xd7dS0x332: vd7dV332 = ADD v335, vd7aV332(0x80)
    0xd7fS0x332: vd7fV332(0xb7a) = CONST 
    0xd82S0x332: JUMP vd7fV332(0xb7a), v75d, vd7dV332, vd77V332(0xd83)

    Begin block 0xb7aB0xd76B0x332
    prev=[0xd76B0x332], succ=[0xdbbB0xb7aB0xd76B0x332]
    =================================
    0xb7bS0xd76S0x332: vb7bVd76V332(0xb83) = CONST 
    0xb7fS0xd76S0x332: vb7fVd76V332(0xdbb) = CONST 
    0xb82S0xd76S0x332: JUMP vb7fVd76V332(0xdbb)

    Begin block 0xdbbB0xb7aB0xd76B0x332
    prev=[0xb7aB0xd76B0x332], succ=[0xb83B0xd76B0x332]
    =================================
    0xdbcS0xb7aS0xd76S0x332: vdbcVb7aVd76V332(0x0) = CONST 
    0xdbfS0xb7aS0xd76S0x332: vdbfVb7aVd76V332 = ISZERO v75d
    0xdc0S0xb7aS0xd76S0x332: vdc0Vb7aVd76V332 = ISZERO vdbfVb7aVd76V332
    0xdc6S0xb7aS0xd76S0x332: JUMP vb7bVd76V332(0xb83)

    Begin block 0xb83B0xd76B0x332
    prev=[0xdbbB0xb7aB0xd76B0x332], succ=[0xd83B0x332]
    =================================
    0xb85S0xd76S0x332: MSTORE vd7dV332, vdc0Vb7aVd76V332
    0xb88S0xd76S0x332: JUMP vd77V332(0xd83)

    Begin block 0xd83B0x332
    prev=[0xb83B0xd76B0x332], succ=[0x343]
    =================================
    0xd8cS0x332: JUMP v336(0x343)

    Begin block 0x343
    prev=[0xd83B0x332], succ=[]
    =================================
    0x344: v344(0x40) = CONST 
    0x346: v346 = MLOAD v344(0x40)
    0x349: v349(0xa0) = SUB vd40V332, v346
    0x34b: RETURN v346, v349(0xa0)

}

function implementation()() public {
    Begin block 0x34c
    prev=[], succ=[0x762]
    =================================
    0x34d: v34d(0x354) = CONST 
    0x350: v350(0x762) = CONST 
    0x353: JUMP v350(0x762)

    Begin block 0x762
    prev=[0x34c], succ=[0x354]
    =================================
    0x763: v763(0x2) = CONST 
    0x765: v765(0x0) = CONST 
    0x768: v768 = SLOAD v763(0x2)
    0x76a: v76a(0x100) = CONST 
    0x76d: v76d(0x1) = EXP v76a(0x100), v765(0x0)
    0x76f: v76f = DIV v768, v76d(0x1)
    0x770: v770(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x785: v785 = AND v770(0xffffffffffffffffffffffffffffffffffffffff), v76f
    0x787: JUMP v34d(0x354)

    Begin block 0x354
    prev=[0x762], succ=[0xc65B0x354]
    =================================
    0x355: v355(0x40) = CONST 
    0x357: v357 = MLOAD v355(0x40)
    0x358: v358(0x361) = CONST 
    0x35d: v35d(0xc65) = CONST 
    0x360: JUMP v35d(0xc65)

    Begin block 0xc65B0x354
    prev=[0x354], succ=[0xb6bB0xc65B0x354]
    =================================
    0xc66S0x354: vc66V354(0x0) = CONST 
    0xc68S0x354: vc68V354(0x20) = CONST 
    0xc6bS0x354: vc6bV354 = ADD v357, vc68V354(0x20)
    0xc6eS0x354: vc6eV354(0xc7a) = CONST 
    0xc71S0x354: vc71V354(0x0) = CONST 
    0xc74S0x354: vc74V354 = ADD v357, vc71V354(0x0)
    0xc76S0x354: vc76V354(0xb6b) = CONST 
    0xc79S0x354: JUMP vc76V354(0xb6b), v785, vc74V354, vc6eV354(0xc7a)

    Begin block 0xb6bB0xc65B0x354
    prev=[0xc65B0x354], succ=[0xda9B0xb6bB0xc65B0x354]
    =================================
    0xb6cS0xc65S0x354: vb6cVc65V354(0xb74) = CONST 
    0xb70S0xc65S0x354: vb70Vc65V354(0xda9) = CONST 
    0xb73S0xc65S0x354: JUMP vb70Vc65V354(0xda9)

    Begin block 0xda9B0xb6bB0xc65B0x354
    prev=[0xb6bB0xc65B0x354], succ=[0xdd9B0xda9B0xb6bB0xc65B0x354]
    =================================
    0xdaaS0xb6bS0xc65S0x354: vdaaVb6bVc65V354(0x0) = CONST 
    0xdacS0xb6bS0xc65S0x354: vdacVb6bVc65V354(0xdb4) = CONST 
    0xdb0S0xb6bS0xc65S0x354: vdb0Vb6bVc65V354(0xdd9) = CONST 
    0xdb3S0xb6bS0xc65S0x354: JUMP vdb0Vb6bVc65V354(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc65B0x354
    prev=[0xda9B0xb6bB0xc65B0x354], succ=[0xdb4B0xb6bB0xc65B0x354]
    =================================
    0xddaS0xda9S0xb6bS0xc65S0x354: vddaVda9Vb6bVc65V354(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc65S0x354: vddcVda9Vb6bVc65V354(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc65S0x354: vdf2Vda9Vb6bVc65V354 = AND v785, vddcVda9Vb6bVc65V354(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc65S0x354: JUMP vdacVb6bVc65V354(0xdb4)

    Begin block 0xdb4B0xb6bB0xc65B0x354
    prev=[0xdd9B0xda9B0xb6bB0xc65B0x354], succ=[0xb74B0xc65B0x354]
    =================================
    0xdbaS0xb6bS0xc65S0x354: JUMP vb6cVc65V354(0xb74)

    Begin block 0xb74B0xc65B0x354
    prev=[0xdb4B0xb6bB0xc65B0x354], succ=[0xc7aB0x354]
    =================================
    0xb76S0xc65S0x354: MSTORE vc74V354, vdf2Vda9Vb6bVc65V354
    0xb79S0xc65S0x354: JUMP vc6eV354(0xc7a)

    Begin block 0xc7aB0x354
    prev=[0xb74B0xc65B0x354], succ=[0x361]
    =================================
    0xc7fS0x354: JUMP v358(0x361)

    Begin block 0x361
    prev=[0xc7aB0x354], succ=[]
    =================================
    0x362: v362(0x40) = CONST 
    0x364: v364 = MLOAD v362(0x40)
    0x367: v367(0x20) = SUB vc6bV354, v364
    0x369: RETURN v364, v367(0x20)

}

function miningStateBlock()() public {
    Begin block 0x36a
    prev=[], succ=[0x788]
    =================================
    0x36b: v36b(0x372) = CONST 
    0x36e: v36e(0x788) = CONST 
    0x371: JUMP v36e(0x788)

    Begin block 0x788
    prev=[0x36a], succ=[0x372]
    =================================
    0x789: v789(0x9) = CONST 
    0x78b: v78b = SLOAD v789(0x9)
    0x78d: JUMP v36b(0x372)

    Begin block 0x372
    prev=[0x788], succ=[0xd1fB0x372]
    =================================
    0x373: v373(0x40) = CONST 
    0x375: v375 = MLOAD v373(0x40)
    0x376: v376(0x37f) = CONST 
    0x37b: v37b(0xd1f) = CONST 
    0x37e: JUMP v37b(0xd1f)

    Begin block 0xd1fB0x372
    prev=[0x372], succ=[0xc3dB0xd1fB0x372]
    =================================
    0xd20S0x372: vd20V372(0x0) = CONST 
    0xd22S0x372: vd22V372(0x20) = CONST 
    0xd25S0x372: vd25V372 = ADD v375, vd22V372(0x20)
    0xd28S0x372: vd28V372(0xd34) = CONST 
    0xd2bS0x372: vd2bV372(0x0) = CONST 
    0xd2eS0x372: vd2eV372 = ADD v375, vd2bV372(0x0)
    0xd30S0x372: vd30V372(0xc3d) = CONST 
    0xd33S0x372: JUMP vd30V372(0xc3d), v78b, vd2eV372, vd28V372(0xd34)

    Begin block 0xc3dB0xd1fB0x372
    prev=[0xd1fB0x372], succ=[0xdf9B0xc3dB0xd1fB0x372]
    =================================
    0xc3eS0xd1fS0x372: vc3eVd1fV372(0xc46) = CONST 
    0xc42S0xd1fS0x372: vc42Vd1fV372(0xdf9) = CONST 
    0xc45S0xd1fS0x372: JUMP vc42Vd1fV372(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x372
    prev=[0xc3dB0xd1fB0x372], succ=[0xc46B0xd1fB0x372]
    =================================
    0xdfaS0xc3dS0xd1fS0x372: vdfaVc3dVd1fV372(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x372: JUMP vc3eVd1fV372(0xc46)

    Begin block 0xc46B0xd1fB0x372
    prev=[0xdf9B0xc3dB0xd1fB0x372], succ=[0xd34B0x372]
    =================================
    0xc48S0xd1fS0x372: MSTORE vd2eV372, v78b
    0xc4bS0xd1fS0x372: JUMP vd28V372(0xd34)

    Begin block 0xd34B0x372
    prev=[0xc46B0xd1fB0x372], succ=[0x37f]
    =================================
    0xd39S0x372: JUMP v376(0x37f)

    Begin block 0x37f
    prev=[0xd34B0x372], succ=[]
    =================================
    0x380: v380(0x40) = CONST 
    0x382: v382 = MLOAD v380(0x40)
    0x385: v385(0x20) = SUB vd25V372, v382
    0x387: RETURN v382, v385(0x20)

}

function totalStaked()() public {
    Begin block 0x388
    prev=[], succ=[0x78e]
    =================================
    0x389: v389(0x390) = CONST 
    0x38c: v38c(0x78e) = CONST 
    0x38f: JUMP v38c(0x78e)

    Begin block 0x78e
    prev=[0x388], succ=[0x390]
    =================================
    0x78f: v78f(0xd) = CONST 
    0x791: v791 = SLOAD v78f(0xd)
    0x793: JUMP v389(0x390)

    Begin block 0x390
    prev=[0x78e], succ=[0xd1fB0x390]
    =================================
    0x391: v391(0x40) = CONST 
    0x393: v393 = MLOAD v391(0x40)
    0x394: v394(0x39d) = CONST 
    0x399: v399(0xd1f) = CONST 
    0x39c: JUMP v399(0xd1f)

    Begin block 0xd1fB0x390
    prev=[0x390], succ=[0xc3dB0xd1fB0x390]
    =================================
    0xd20S0x390: vd20V390(0x0) = CONST 
    0xd22S0x390: vd22V390(0x20) = CONST 
    0xd25S0x390: vd25V390 = ADD v393, vd22V390(0x20)
    0xd28S0x390: vd28V390(0xd34) = CONST 
    0xd2bS0x390: vd2bV390(0x0) = CONST 
    0xd2eS0x390: vd2eV390 = ADD v393, vd2bV390(0x0)
    0xd30S0x390: vd30V390(0xc3d) = CONST 
    0xd33S0x390: JUMP vd30V390(0xc3d), v791, vd2eV390, vd28V390(0xd34)

    Begin block 0xc3dB0xd1fB0x390
    prev=[0xd1fB0x390], succ=[0xdf9B0xc3dB0xd1fB0x390]
    =================================
    0xc3eS0xd1fS0x390: vc3eVd1fV390(0xc46) = CONST 
    0xc42S0xd1fS0x390: vc42Vd1fV390(0xdf9) = CONST 
    0xc45S0xd1fS0x390: JUMP vc42Vd1fV390(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x390
    prev=[0xc3dB0xd1fB0x390], succ=[0xc46B0xd1fB0x390]
    =================================
    0xdfaS0xc3dS0xd1fS0x390: vdfaVc3dVd1fV390(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x390: JUMP vc3eVd1fV390(0xc46)

    Begin block 0xc46B0xd1fB0x390
    prev=[0xdf9B0xc3dB0xd1fB0x390], succ=[0xd34B0x390]
    =================================
    0xc48S0xd1fS0x390: MSTORE vd2eV390, v791
    0xc4bS0xd1fS0x390: JUMP vd28V390(0xd34)

    Begin block 0xd34B0x390
    prev=[0xc46B0xd1fB0x390], succ=[0x39d]
    =================================
    0xd39S0x390: JUMP v394(0x39d)

    Begin block 0x39d
    prev=[0xd34B0x390], succ=[]
    =================================
    0x39e: v39e(0x40) = CONST 
    0x3a0: v3a0 = MLOAD v39e(0x40)
    0x3a3: v3a3(0x20) = SUB vd25V390, v3a0
    0x3a5: RETURN v3a0, v3a3(0x20)

}

function miningStateIndex()() public {
    Begin block 0x3a6
    prev=[], succ=[0x794]
    =================================
    0x3a7: v3a7(0x3ae) = CONST 
    0x3aa: v3aa(0x794) = CONST 
    0x3ad: JUMP v3aa(0x794)

    Begin block 0x794
    prev=[0x3a6], succ=[0x3ae]
    =================================
    0x795: v795(0xa) = CONST 
    0x797: v797 = SLOAD v795(0xa)
    0x799: JUMP v3a7(0x3ae)

    Begin block 0x3ae
    prev=[0x794], succ=[0xd1fB0x3ae]
    =================================
    0x3af: v3af(0x40) = CONST 
    0x3b1: v3b1 = MLOAD v3af(0x40)
    0x3b2: v3b2(0x3bb) = CONST 
    0x3b7: v3b7(0xd1f) = CONST 
    0x3ba: JUMP v3b7(0xd1f)

    Begin block 0xd1fB0x3ae
    prev=[0x3ae], succ=[0xc3dB0xd1fB0x3ae]
    =================================
    0xd20S0x3ae: vd20V3ae(0x0) = CONST 
    0xd22S0x3ae: vd22V3ae(0x20) = CONST 
    0xd25S0x3ae: vd25V3ae = ADD v3b1, vd22V3ae(0x20)
    0xd28S0x3ae: vd28V3ae(0xd34) = CONST 
    0xd2bS0x3ae: vd2bV3ae(0x0) = CONST 
    0xd2eS0x3ae: vd2eV3ae = ADD v3b1, vd2bV3ae(0x0)
    0xd30S0x3ae: vd30V3ae(0xc3d) = CONST 
    0xd33S0x3ae: JUMP vd30V3ae(0xc3d), v797, vd2eV3ae, vd28V3ae(0xd34)

    Begin block 0xc3dB0xd1fB0x3ae
    prev=[0xd1fB0x3ae], succ=[0xdf9B0xc3dB0xd1fB0x3ae]
    =================================
    0xc3eS0xd1fS0x3ae: vc3eVd1fV3ae(0xc46) = CONST 
    0xc42S0xd1fS0x3ae: vc42Vd1fV3ae(0xdf9) = CONST 
    0xc45S0xd1fS0x3ae: JUMP vc42Vd1fV3ae(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x3ae
    prev=[0xc3dB0xd1fB0x3ae], succ=[0xc46B0xd1fB0x3ae]
    =================================
    0xdfaS0xc3dS0xd1fS0x3ae: vdfaVc3dVd1fV3ae(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x3ae: JUMP vc3eVd1fV3ae(0xc46)

    Begin block 0xc46B0xd1fB0x3ae
    prev=[0xdf9B0xc3dB0xd1fB0x3ae], succ=[0xd34B0x3ae]
    =================================
    0xc48S0xd1fS0x3ae: MSTORE vd2eV3ae, v797
    0xc4bS0xd1fS0x3ae: JUMP vd28V3ae(0xd34)

    Begin block 0xd34B0x3ae
    prev=[0xc46B0xd1fB0x3ae], succ=[0x3bb]
    =================================
    0xd39S0x3ae: JUMP v3b2(0x3bb)

    Begin block 0x3bb
    prev=[0xd34B0x3ae], succ=[]
    =================================
    0x3bc: v3bc(0x40) = CONST 
    0x3be: v3be = MLOAD v3bc(0x40)
    0x3c1: v3c1(0x20) = SUB vd25V3ae, v3be
    0x3c3: RETURN v3be, v3c1(0x20)

}

function initiated()() public {
    Begin block 0x3c4
    prev=[], succ=[0x79a]
    =================================
    0x3c5: v3c5(0x3cc) = CONST 
    0x3c8: v3c8(0x79a) = CONST 
    0x3cb: JUMP v3c8(0x79a)

    Begin block 0x79a
    prev=[0x3c4], succ=[0x3cc]
    =================================
    0x79b: v79b(0x0) = CONST 
    0x79d: v79d(0x15) = CONST 
    0x7a0: v7a0 = SLOAD v79b(0x0)
    0x7a2: v7a2(0x100) = CONST 
    0x7a5: v7a5(0x1000000000000000000000000000000000000000000) = EXP v7a2(0x100), v79d(0x15)
    0x7a7: v7a7 = DIV v7a0, v7a5(0x1000000000000000000000000000000000000000000)
    0x7a8: v7a8(0xff) = CONST 
    0x7aa: v7aa = AND v7a8(0xff), v7a7
    0x7ac: JUMP v3c5(0x3cc)

    Begin block 0x3cc
    prev=[0x79a], succ=[0xca9B0x3cc]
    =================================
    0x3cd: v3cd(0x40) = CONST 
    0x3cf: v3cf = MLOAD v3cd(0x40)
    0x3d0: v3d0(0x3d9) = CONST 
    0x3d5: v3d5(0xca9) = CONST 
    0x3d8: JUMP v3d5(0xca9)

    Begin block 0xca9B0x3cc
    prev=[0x3cc], succ=[0xb7aB0xca9B0x3cc]
    =================================
    0xcaaS0x3cc: vcaaV3cc(0x0) = CONST 
    0xcacS0x3cc: vcacV3cc(0x20) = CONST 
    0xcafS0x3cc: vcafV3cc = ADD v3cf, vcacV3cc(0x20)
    0xcb2S0x3cc: vcb2V3cc(0xcbe) = CONST 
    0xcb5S0x3cc: vcb5V3cc(0x0) = CONST 
    0xcb8S0x3cc: vcb8V3cc = ADD v3cf, vcb5V3cc(0x0)
    0xcbaS0x3cc: vcbaV3cc(0xb7a) = CONST 
    0xcbdS0x3cc: JUMP vcbaV3cc(0xb7a), v7aa, vcb8V3cc, vcb2V3cc(0xcbe)

    Begin block 0xb7aB0xca9B0x3cc
    prev=[0xca9B0x3cc], succ=[0xdbbB0xb7aB0xca9B0x3cc]
    =================================
    0xb7bS0xca9S0x3cc: vb7bVca9V3cc(0xb83) = CONST 
    0xb7fS0xca9S0x3cc: vb7fVca9V3cc(0xdbb) = CONST 
    0xb82S0xca9S0x3cc: JUMP vb7fVca9V3cc(0xdbb)

    Begin block 0xdbbB0xb7aB0xca9B0x3cc
    prev=[0xb7aB0xca9B0x3cc], succ=[0xb83B0xca9B0x3cc]
    =================================
    0xdbcS0xb7aS0xca9S0x3cc: vdbcVb7aVca9V3cc(0x0) = CONST 
    0xdbfS0xb7aS0xca9S0x3cc: vdbfVb7aVca9V3cc = ISZERO v7aa
    0xdc0S0xb7aS0xca9S0x3cc: vdc0Vb7aVca9V3cc = ISZERO vdbfVb7aVca9V3cc
    0xdc6S0xb7aS0xca9S0x3cc: JUMP vb7bVca9V3cc(0xb83)

    Begin block 0xb83B0xca9B0x3cc
    prev=[0xdbbB0xb7aB0xca9B0x3cc], succ=[0xcbeB0x3cc]
    =================================
    0xb85S0xca9S0x3cc: MSTORE vcb8V3cc, vdc0Vb7aVca9V3cc
    0xb88S0xca9S0x3cc: JUMP vcb2V3cc(0xcbe)

    Begin block 0xcbeB0x3cc
    prev=[0xb83B0xca9B0x3cc], succ=[0x3d9]
    =================================
    0xcc3S0x3cc: JUMP v3d0(0x3d9)

    Begin block 0x3d9
    prev=[0xcbeB0x3cc], succ=[]
    =================================
    0x3da: v3da(0x40) = CONST 
    0x3dc: v3dc = MLOAD v3da(0x40)
    0x3df: v3df(0x20) = SUB vcafV3cc, v3dc
    0x3e1: RETURN v3dc, v3df(0x20)

}

function startMiningBlockNum()() public {
    Begin block 0x3e2
    prev=[], succ=[0x7ad]
    =================================
    0x3e3: v3e3(0x3ea) = CONST 
    0x3e6: v3e6(0x7ad) = CONST 
    0x3e9: JUMP v3e6(0x7ad)

    Begin block 0x7ad
    prev=[0x3e2], succ=[0x3ea]
    =================================
    0x7ae: v7ae(0x5) = CONST 
    0x7b0: v7b0 = SLOAD v7ae(0x5)
    0x7b2: JUMP v3e3(0x3ea)

    Begin block 0x3ea
    prev=[0x7ad], succ=[0xd1fB0x3ea]
    =================================
    0x3eb: v3eb(0x40) = CONST 
    0x3ed: v3ed = MLOAD v3eb(0x40)
    0x3ee: v3ee(0x3f7) = CONST 
    0x3f3: v3f3(0xd1f) = CONST 
    0x3f6: JUMP v3f3(0xd1f)

    Begin block 0xd1fB0x3ea
    prev=[0x3ea], succ=[0xc3dB0xd1fB0x3ea]
    =================================
    0xd20S0x3ea: vd20V3ea(0x0) = CONST 
    0xd22S0x3ea: vd22V3ea(0x20) = CONST 
    0xd25S0x3ea: vd25V3ea = ADD v3ed, vd22V3ea(0x20)
    0xd28S0x3ea: vd28V3ea(0xd34) = CONST 
    0xd2bS0x3ea: vd2bV3ea(0x0) = CONST 
    0xd2eS0x3ea: vd2eV3ea = ADD v3ed, vd2bV3ea(0x0)
    0xd30S0x3ea: vd30V3ea(0xc3d) = CONST 
    0xd33S0x3ea: JUMP vd30V3ea(0xc3d), v7b0, vd2eV3ea, vd28V3ea(0xd34)

    Begin block 0xc3dB0xd1fB0x3ea
    prev=[0xd1fB0x3ea], succ=[0xdf9B0xc3dB0xd1fB0x3ea]
    =================================
    0xc3eS0xd1fS0x3ea: vc3eVd1fV3ea(0xc46) = CONST 
    0xc42S0xd1fS0x3ea: vc42Vd1fV3ea(0xdf9) = CONST 
    0xc45S0xd1fS0x3ea: JUMP vc42Vd1fV3ea(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x3ea
    prev=[0xc3dB0xd1fB0x3ea], succ=[0xc46B0xd1fB0x3ea]
    =================================
    0xdfaS0xc3dS0xd1fS0x3ea: vdfaVc3dVd1fV3ea(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x3ea: JUMP vc3eVd1fV3ea(0xc46)

    Begin block 0xc46B0xd1fB0x3ea
    prev=[0xdf9B0xc3dB0xd1fB0x3ea], succ=[0xd34B0x3ea]
    =================================
    0xc48S0xd1fS0x3ea: MSTORE vd2eV3ea, v7b0
    0xc4bS0xd1fS0x3ea: JUMP vd28V3ea(0xd34)

    Begin block 0xd34B0x3ea
    prev=[0xc46B0xd1fB0x3ea], succ=[0x3f7]
    =================================
    0xd39S0x3ea: JUMP v3ee(0x3f7)

    Begin block 0x3f7
    prev=[0xd34B0x3ea], succ=[]
    =================================
    0x3f8: v3f8(0x40) = CONST 
    0x3fa: v3fa = MLOAD v3f8(0x40)
    0x3fd: v3fd(0x20) = SUB vd25V3ea, v3fa
    0x3ff: RETURN v3fa, v3fd(0x20)

}

function isMVTUniswapMining()() public {
    Begin block 0x400
    prev=[], succ=[0x7b3]
    =================================
    0x401: v401(0x408) = CONST 
    0x404: v404(0x7b3) = CONST 
    0x407: JUMP v404(0x7b3)

    Begin block 0x7b3
    prev=[0x400], succ=[0x408]
    =================================
    0x7b4: v7b4(0x1) = CONST 
    0x7b7: JUMP v401(0x408)

    Begin block 0x408
    prev=[0x7b3], succ=[0xca9B0x408]
    =================================
    0x409: v409(0x40) = CONST 
    0x40b: v40b = MLOAD v409(0x40)
    0x40c: v40c(0x415) = CONST 
    0x411: v411(0xca9) = CONST 
    0x414: JUMP v411(0xca9)

    Begin block 0xca9B0x408
    prev=[0x408], succ=[0xb7aB0xca9B0x408]
    =================================
    0xcaaS0x408: vcaaV408(0x0) = CONST 
    0xcacS0x408: vcacV408(0x20) = CONST 
    0xcafS0x408: vcafV408 = ADD v40b, vcacV408(0x20)
    0xcb2S0x408: vcb2V408(0xcbe) = CONST 
    0xcb5S0x408: vcb5V408(0x0) = CONST 
    0xcb8S0x408: vcb8V408 = ADD v40b, vcb5V408(0x0)
    0xcbaS0x408: vcbaV408(0xb7a) = CONST 
    0xcbdS0x408: JUMP vcbaV408(0xb7a), v7b4(0x1), vcb8V408, vcb2V408(0xcbe)

    Begin block 0xb7aB0xca9B0x408
    prev=[0xca9B0x408], succ=[0xdbbB0xb7aB0xca9B0x408]
    =================================
    0xb7bS0xca9S0x408: vb7bVca9V408(0xb83) = CONST 
    0xb7fS0xca9S0x408: vb7fVca9V408(0xdbb) = CONST 
    0xb82S0xca9S0x408: JUMP vb7fVca9V408(0xdbb)

    Begin block 0xdbbB0xb7aB0xca9B0x408
    prev=[0xb7aB0xca9B0x408], succ=[0xb83B0xca9B0x408]
    =================================
    0xdbcS0xb7aS0xca9S0x408: vdbcVb7aVca9V408(0x0) = CONST 
    0xdbfS0xb7aS0xca9S0x408: vdbfVb7aVca9V408 = ISZERO v7b4(0x1)
    0xdc0S0xb7aS0xca9S0x408: vdc0Vb7aVca9V408 = ISZERO vdbfVb7aVca9V408
    0xdc6S0xb7aS0xca9S0x408: JUMP vb7bVca9V408(0xb83)

    Begin block 0xb83B0xca9B0x408
    prev=[0xdbbB0xb7aB0xca9B0x408], succ=[0xcbeB0x408]
    =================================
    0xb85S0xca9S0x408: MSTORE vcb8V408, vdc0Vb7aVca9V408
    0xb88S0xca9S0x408: JUMP vcb2V408(0xcbe)

    Begin block 0xcbeB0x408
    prev=[0xb83B0xca9B0x408], succ=[0x415]
    =================================
    0xcc3S0x408: JUMP v40c(0x415)

    Begin block 0x415
    prev=[0xcbeB0x408], succ=[]
    =================================
    0x416: v416(0x40) = CONST 
    0x418: v418 = MLOAD v416(0x40)
    0x41b: v41b(0x20) = SUB vcafV408, v418
    0x41d: RETURN v418, v41b(0x20)

}

function _setImplementation(address)() public {
    Begin block 0x41e
    prev=[], succ=[0xb42B0x41e]
    =================================
    0x41f: v41f(0x438) = CONST 
    0x422: v422(0x4) = CONST 
    0x425: v425 = CALLDATASIZE 
    0x426: v426 = SUB v425, v422(0x4)
    0x427: v427(0x433) = CONST 
    0x42d: v42d = ADD v422(0x4), v426
    0x42f: v42f(0xb42) = CONST 
    0x432: JUMP v42f(0xb42)

    Begin block 0xb42B0x41e
    prev=[0x41e], succ=[0xb50B0x41e, 0xb54B0x41e]
    =================================
    0xb43S0x41e: vb43V41e(0x0) = CONST 
    0xb45S0x41e: vb45V41e(0x20) = CONST 
    0xb49S0x41e: vb49V41e = SUB v42d, v422(0x4)
    0xb4aS0x41e: vb4aV41e = SLT vb49V41e, vb45V41e(0x20)
    0xb4bS0x41e: vb4bV41e = ISZERO vb4aV41e
    0xb4cS0x41e: vb4cV41e(0xb54) = CONST 
    0xb4fS0x41e: JUMPI vb4cV41e(0xb54), vb4bV41e

    Begin block 0xb50B0x41e
    prev=[0xb42B0x41e], succ=[]
    =================================
    0xb50S0x41e: vb50V41e(0x0) = CONST 
    0xb53S0x41e: REVERT vb50V41e(0x0), vb50V41e(0x0)

    Begin block 0xb54B0x41e
    prev=[0xb42B0x41e], succ=[0xa8aB0xb54B0x41e]
    =================================
    0xb55S0x41e: vb55V41e(0x0) = CONST 
    0xb57S0x41e: vb57V41e(0xb62) = CONST 
    0xb5dS0x41e: vb5dV41e = ADD v422(0x4), vb55V41e(0x0)
    0xb5eS0x41e: vb5eV41e(0xa8a) = CONST 
    0xb61S0x41e: JUMP vb5eV41e(0xa8a)

    Begin block 0xa8aB0xb54B0x41e
    prev=[0xb54B0x41e], succ=[0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xa8bS0xb54S0x41e: va8bVb54V41e(0x0) = CONST 
    0xa8eS0xb54S0x41e: va8eVb54V41e = CALLDATALOAD vb5dV41e
    0xa91S0xb54S0x41e: va91Vb54V41e(0xa99) = CONST 
    0xa95S0xb54S0x41e: va95Vb54V41e(0xe64) = CONST 
    0xa98S0xb54S0x41e: JUMP va95Vb54V41e(0xe64), va8eVb54V41e, va91Vb54V41e(0xa99)

    Begin block 0xe64B0xa8aB0xb54B0x41e
    prev=[0xa8aB0xb54B0x41e], succ=[0xdc7B0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xe65S0xa8aS0xb54S0x41e: ve65Va8aVb54V41e(0xe6d) = CONST 
    0xe69S0xa8aS0xb54S0x41e: ve69Va8aVb54V41e(0xdc7) = CONST 
    0xe6cS0xa8aS0xb54S0x41e: JUMP ve69Va8aVb54V41e(0xdc7)

    Begin block 0xdc7B0xe64B0xa8aB0xb54B0x41e
    prev=[0xe64B0xa8aB0xb54B0x41e], succ=[0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xdc8S0xe64S0xa8aS0xb54S0x41e: vdc8Ve64Va8aVb54V41e(0x0) = CONST 
    0xdcaS0xe64S0xa8aS0xb54S0x41e: vdcaVe64Va8aVb54V41e(0xdd2) = CONST 
    0xdceS0xe64S0xa8aS0xb54S0x41e: vdceVe64Va8aVb54V41e(0xda9) = CONST 
    0xdd1S0xe64S0xa8aS0xb54S0x41e: JUMP vdceVe64Va8aVb54V41e(0xda9)

    Begin block 0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e
    prev=[0xdc7B0xe64B0xa8aB0xb54B0x41e], succ=[0xdd9B0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xdaaS0xdc7S0xe64S0xa8aS0xb54S0x41e: vdaaVdc7Ve64Va8aVb54V41e(0x0) = CONST 
    0xdacS0xdc7S0xe64S0xa8aS0xb54S0x41e: vdacVdc7Ve64Va8aVb54V41e(0xdb4) = CONST 
    0xdb0S0xdc7S0xe64S0xa8aS0xb54S0x41e: vdb0Vdc7Ve64Va8aVb54V41e(0xdd9) = CONST 
    0xdb3S0xdc7S0xe64S0xa8aS0xb54S0x41e: JUMP vdb0Vdc7Ve64Va8aVb54V41e(0xdd9)

    Begin block 0xdd9B0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e
    prev=[0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e], succ=[0xdb4B0xdc7B0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xddaS0xda9S0xdc7S0xe64S0xa8aS0xb54S0x41e: vddaVda9Vdc7Ve64Va8aVb54V41e(0x0) = CONST 
    0xddcS0xda9S0xdc7S0xe64S0xa8aS0xb54S0x41e: vddcVda9Vdc7Ve64Va8aVb54V41e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xdc7S0xe64S0xa8aS0xb54S0x41e: vdf2Vda9Vdc7Ve64Va8aVb54V41e = AND va8eVb54V41e, vddcVda9Vdc7Ve64Va8aVb54V41e(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xdc7S0xe64S0xa8aS0xb54S0x41e: JUMP vdacVdc7Ve64Va8aVb54V41e(0xdb4)

    Begin block 0xdb4B0xdc7B0xe64B0xa8aB0xb54B0x41e
    prev=[0xdd9B0xda9B0xdc7B0xe64B0xa8aB0xb54B0x41e], succ=[0xdd2B0xe64B0xa8aB0xb54B0x41e]
    =================================
    0xdbaS0xdc7S0xe64S0xa8aS0xb54S0x41e: JUMP vdcaVe64Va8aVb54V41e(0xdd2)

    Begin block 0xdd2B0xe64B0xa8aB0xb54B0x41e
    prev=[0xdb4B0xdc7B0xe64B0xa8aB0xb54B0x41e], succ=[0xe6dB0xa8aB0xb54B0x41e]
    =================================
    0xdd8S0xe64S0xa8aS0xb54S0x41e: JUMP ve65Va8aVb54V41e(0xe6d)

    Begin block 0xe6dB0xa8aB0xb54B0x41e
    prev=[0xdd2B0xe64B0xa8aB0xb54B0x41e], succ=[0xe74B0xa8aB0xb54B0x41e, 0xe78B0xa8aB0xb54B0x41e]
    =================================
    0xe6fS0xa8aS0xb54S0x41e: ve6fVa8aVb54V41e = EQ va8eVb54V41e, vdf2Vda9Vdc7Ve64Va8aVb54V41e
    0xe70S0xa8aS0xb54S0x41e: ve70Va8aVb54V41e(0xe78) = CONST 
    0xe73S0xa8aS0xb54S0x41e: JUMPI ve70Va8aVb54V41e(0xe78), ve6fVa8aVb54V41e

    Begin block 0xe74B0xa8aB0xb54B0x41e
    prev=[0xe6dB0xa8aB0xb54B0x41e], succ=[]
    =================================
    0xe74S0xa8aS0xb54S0x41e: ve74Va8aVb54V41e(0x0) = CONST 
    0xe77S0xa8aS0xb54S0x41e: REVERT ve74Va8aVb54V41e(0x0), ve74Va8aVb54V41e(0x0)

    Begin block 0xe78B0xa8aB0xb54B0x41e
    prev=[0xe6dB0xa8aB0xb54B0x41e], succ=[0xa99B0xb54B0x41e]
    =================================
    0xe7aS0xa8aS0xb54S0x41e: JUMP va91Vb54V41e(0xa99)

    Begin block 0xa99B0xb54B0x41e
    prev=[0xe78B0xa8aB0xb54B0x41e], succ=[0xb62B0x41e]
    =================================
    0xa9eS0xb54S0x41e: JUMP vb57V41e(0xb62)

    Begin block 0xb62B0x41e
    prev=[0xa99B0xb54B0x41e], succ=[0x433]
    =================================
    0xb6aS0x41e: JUMP v427(0x433)

    Begin block 0x433
    prev=[0xb62B0x41e], succ=[0x7b8]
    =================================
    0x434: v434(0x7b8) = CONST 
    0x437: JUMP v434(0x7b8)

    Begin block 0x7b8
    prev=[0x433], succ=[0x80e, 0x848]
    =================================
    0x7b9: v7b9(0x1) = CONST 
    0x7bb: v7bb(0x0) = CONST 
    0x7be: v7be = SLOAD v7b9(0x1)
    0x7c0: v7c0(0x100) = CONST 
    0x7c3: v7c3(0x1) = EXP v7c0(0x100), v7bb(0x0)
    0x7c5: v7c5 = DIV v7be, v7c3(0x1)
    0x7c6: v7c6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x7db: v7db = AND v7c6(0xffffffffffffffffffffffffffffffffffffffff), v7c5
    0x7dc: v7dc(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x7f1: v7f1 = AND v7dc(0xffffffffffffffffffffffffffffffffffffffff), v7db
    0x7f2: v7f2 = CALLER 
    0x7f3: v7f3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x808: v808 = AND v7f3(0xffffffffffffffffffffffffffffffffffffffff), v7f2
    0x809: v809 = EQ v808, v7f1
    0x80a: v80a(0x848) = CONST 
    0x80d: JUMPI v80a(0x848), v809

    Begin block 0x80e
    prev=[0x7b8], succ=[0xcdfB0x80e]
    =================================
    0x80e: v80e(0x40) = CONST 
    0x810: v810 = MLOAD v80e(0x40)
    0x811: v811(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x833: MSTORE v810, v811(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x834: v834(0x4) = CONST 
    0x836: v836 = ADD v834(0x4), v810
    0x837: v837(0x83f) = CONST 
    0x83b: v83b(0xcdf) = CONST 
    0x83e: JUMP v83b(0xcdf)

    Begin block 0xcdfB0x80e
    prev=[0x80e], succ=[0xbbdB0x80e]
    =================================
    0xce0S0x80e: vce0V80e(0x0) = CONST 
    0xce2S0x80e: vce2V80e(0x20) = CONST 
    0xce5S0x80e: vce5V80e = ADD v836, vce2V80e(0x20)
    0xceaS0x80e: vceaV80e(0x20) = SUB vce5V80e, v836
    0xcebS0x80e: vcebV80e(0x0) = CONST 
    0xceeS0x80e: vceeV80e = ADD v836, vcebV80e(0x0)
    0xcefS0x80e: MSTORE vceeV80e, vceaV80e(0x20)
    0xcf0S0x80e: vcf0V80e(0xcf8) = CONST 
    0xcf4S0x80e: vcf4V80e(0xbbd) = CONST 
    0xcf7S0x80e: JUMP vcf4V80e(0xbbd)

    Begin block 0xbbdB0x80e
    prev=[0xcdfB0x80e], succ=[0xd98B0xbbdB0x80e]
    =================================
    0xbbeS0x80e: vbbeV80e(0x0) = CONST 
    0xbc0S0x80e: vbc0V80e(0xbca) = CONST 
    0xbc3S0x80e: vbc3V80e(0xc) = CONST 
    0xbc6S0x80e: vbc6V80e(0xd98) = CONST 
    0xbc9S0x80e: JUMP vbc6V80e(0xd98)

    Begin block 0xd98B0xbbdB0x80e
    prev=[0xbbdB0x80e], succ=[0xbcaB0x80e]
    =================================
    0xd99S0xbbdS0x80e: vd99VbbdV80e(0x0) = CONST 
    0xd9dS0xbbdS0x80e: MSTORE vce5V80e, vbc3V80e(0xc)
    0xd9eS0xbbdS0x80e: vd9eVbbdV80e(0x20) = CONST 
    0xda1S0xbbdS0x80e: vda1VbbdV80e = ADD vce5V80e, vd9eVbbdV80e(0x20)
    0xda8S0xbbdS0x80e: JUMP vbc0V80e(0xbca)

    Begin block 0xbcaB0x80e
    prev=[0xd98B0xbbdB0x80e], succ=[0xcf8B0x80e]
    =================================
    0xbcdS0x80e: vbcdV80e(0x554e415554484f52495a45440000000000000000000000000000000000000000) = CONST 
    0xbeeS0x80e: vbeeV80e(0x0) = CONST 
    0xbf1S0x80e: vbf1V80e = ADD vda1VbbdV80e, vbeeV80e(0x0)
    0xbf2S0x80e: MSTORE vbf1V80e, vbcdV80e(0x554e415554484f52495a45440000000000000000000000000000000000000000)
    0xbf3S0x80e: vbf3V80e(0x20) = CONST 
    0xbf6S0x80e: vbf6V80e = ADD vda1VbbdV80e, vbf3V80e(0x20)
    0xbfcS0x80e: JUMP vcf0V80e(0xcf8)

    Begin block 0xcf8B0x80e
    prev=[0xbcaB0x80e], succ=[0x83f]
    =================================
    0xcfeS0x80e: JUMP v837(0x83f)

    Begin block 0x83f
    prev=[0xcf8B0x80e], succ=[]
    =================================
    0x840: v840(0x40) = CONST 
    0x842: v842 = MLOAD v840(0x40)
    0x845: v845(0x64) = SUB vbf6V80e, v842
    0x847: REVERT v842, v845(0x64)

    Begin block 0x848
    prev=[0x7b8], succ=[0x88e, 0x892]
    =================================
    0x849: v849(0x1) = CONST 
    0x84b: v84b(0x0) = ISZERO v849(0x1)
    0x84c: v84c(0x1) = ISZERO v84b(0x0)
    0x84e: v84e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x863: v863 = AND v84e(0xffffffffffffffffffffffffffffffffffffffff), va8eVb54V41e
    0x864: v864(0xadcec9c5) = CONST 
    0x869: v869(0x40) = CONST 
    0x86b: v86b = MLOAD v869(0x40)
    0x86d: v86d(0xffffffff) = CONST 
    0x872: v872(0xadcec9c5) = AND v86d(0xffffffff), v864(0xadcec9c5)
    0x873: v873(0xe0) = CONST 
    0x875: v875(0xadcec9c500000000000000000000000000000000000000000000000000000000) = SHL v873(0xe0), v872(0xadcec9c5)
    0x877: MSTORE v86b, v875(0xadcec9c500000000000000000000000000000000000000000000000000000000)
    0x878: v878(0x4) = CONST 
    0x87a: v87a = ADD v878(0x4), v86b
    0x87b: v87b(0x20) = CONST 
    0x87d: v87d(0x40) = CONST 
    0x87f: v87f = MLOAD v87d(0x40)
    0x882: v882(0x4) = SUB v87a, v87f
    0x886: v886 = EXTCODESIZE v863
    0x887: v887 = ISZERO v886
    0x889: v889 = ISZERO v887
    0x88a: v88a(0x892) = CONST 
    0x88d: JUMPI v88a(0x892), v889

    Begin block 0x88e
    prev=[0x848], succ=[]
    =================================
    0x88e: v88e(0x0) = CONST 
    0x891: REVERT v88e(0x0), v88e(0x0)

    Begin block 0x892
    prev=[0x848], succ=[0x89d, 0x8a6]
    =================================
    0x894: v894 = GAS 
    0x895: v895 = STATICCALL v894, v863, v87f, v882(0x4), v87f, v87b(0x20)
    0x896: v896 = ISZERO v895
    0x898: v898 = ISZERO v896
    0x899: v899(0x8a6) = CONST 
    0x89c: JUMPI v899(0x8a6), v898

    Begin block 0x89d
    prev=[0x892], succ=[]
    =================================
    0x89d: v89d = RETURNDATASIZE 
    0x89e: v89e(0x0) = CONST 
    0x8a1: RETURNDATACOPY v89e(0x0), v89e(0x0), v89d
    0x8a2: v8a2 = RETURNDATASIZE 
    0x8a3: v8a3(0x0) = CONST 
    0x8a5: REVERT v8a3(0x0), v8a2

    Begin block 0x8a6
    prev=[0x892], succ=[0xb19B0x8a6]
    =================================
    0x8ab: v8ab(0x40) = CONST 
    0x8ad: v8ad = MLOAD v8ab(0x40)
    0x8ae: v8ae = RETURNDATASIZE 
    0x8af: v8af(0x1f) = CONST 
    0x8b1: v8b1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v8af(0x1f)
    0x8b2: v8b2(0x1f) = CONST 
    0x8b5: v8b5 = ADD v8ae, v8b2(0x1f)
    0x8b6: v8b6 = AND v8b5, v8b1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x8b8: v8b8 = ADD v8ad, v8b6
    0x8ba: v8ba(0x40) = CONST 
    0x8bc: MSTORE v8ba(0x40), v8b8
    0x8be: v8be(0x8ca) = CONST 
    0x8c4: v8c4 = ADD v8ad, v8ae
    0x8c6: v8c6(0xb19) = CONST 
    0x8c9: JUMP v8c6(0xb19)

    Begin block 0xb19B0x8a6
    prev=[0x8a6], succ=[0xb27B0x8a6, 0xb2bB0x8a6]
    =================================
    0xb1aS0x8a6: vb1aV8a6(0x0) = CONST 
    0xb1cS0x8a6: vb1cV8a6(0x20) = CONST 
    0xb20S0x8a6: vb20V8a6 = SUB v8c4, v8ad
    0xb21S0x8a6: vb21V8a6 = SLT vb20V8a6, vb1cV8a6(0x20)
    0xb22S0x8a6: vb22V8a6 = ISZERO vb21V8a6
    0xb23S0x8a6: vb23V8a6(0xb2b) = CONST 
    0xb26S0x8a6: JUMPI vb23V8a6(0xb2b), vb22V8a6

    Begin block 0xb27B0x8a6
    prev=[0xb19B0x8a6], succ=[]
    =================================
    0xb27S0x8a6: vb27V8a6(0x0) = CONST 
    0xb2aS0x8a6: REVERT vb27V8a6(0x0), vb27V8a6(0x0)

    Begin block 0xb2bB0x8a6
    prev=[0xb19B0x8a6], succ=[0xa75B0xb2bB0x8a6]
    =================================
    0xb2cS0x8a6: vb2cV8a6(0x0) = CONST 
    0xb2eS0x8a6: vb2eV8a6(0xb39) = CONST 
    0xb34S0x8a6: vb34V8a6 = ADD v8ad, vb2cV8a6(0x0)
    0xb35S0x8a6: vb35V8a6(0xa75) = CONST 
    0xb38S0x8a6: JUMP vb35V8a6(0xa75)

    Begin block 0xa75B0xb2bB0x8a6
    prev=[0xb2bB0x8a6], succ=[0xe4dB0xa75B0xb2bB0x8a6]
    =================================
    0xa76S0xb2bS0x8a6: va76Vb2bV8a6(0x0) = CONST 
    0xa79S0xb2bS0x8a6: va79Vb2bV8a6 = MLOAD vb34V8a6
    0xa7cS0xb2bS0x8a6: va7cVb2bV8a6(0xa84) = CONST 
    0xa80S0xb2bS0x8a6: va80Vb2bV8a6(0xe4d) = CONST 
    0xa83S0xb2bS0x8a6: JUMP va80Vb2bV8a6(0xe4d), va79Vb2bV8a6, va7cVb2bV8a6(0xa84)

    Begin block 0xe4dB0xa75B0xb2bB0x8a6
    prev=[0xa75B0xb2bB0x8a6], succ=[0xdbbB0xe4dB0xa75B0xb2bB0x8a6]
    =================================
    0xe4eS0xa75S0xb2bS0x8a6: ve4eVa75Vb2bV8a6(0xe56) = CONST 
    0xe52S0xa75S0xb2bS0x8a6: ve52Va75Vb2bV8a6(0xdbb) = CONST 
    0xe55S0xa75S0xb2bS0x8a6: JUMP ve52Va75Vb2bV8a6(0xdbb)

    Begin block 0xdbbB0xe4dB0xa75B0xb2bB0x8a6
    prev=[0xe4dB0xa75B0xb2bB0x8a6], succ=[0xe56B0xa75B0xb2bB0x8a6]
    =================================
    0xdbcS0xe4dS0xa75S0xb2bS0x8a6: vdbcVe4dVa75Vb2bV8a6(0x0) = CONST 
    0xdbfS0xe4dS0xa75S0xb2bS0x8a6: vdbfVe4dVa75Vb2bV8a6 = ISZERO va79Vb2bV8a6
    0xdc0S0xe4dS0xa75S0xb2bS0x8a6: vdc0Ve4dVa75Vb2bV8a6 = ISZERO vdbfVe4dVa75Vb2bV8a6
    0xdc6S0xe4dS0xa75S0xb2bS0x8a6: JUMP ve4eVa75Vb2bV8a6(0xe56)

    Begin block 0xe56B0xa75B0xb2bB0x8a6
    prev=[0xdbbB0xe4dB0xa75B0xb2bB0x8a6], succ=[0xe5dB0xa75B0xb2bB0x8a6, 0xe61B0xa75B0xb2bB0x8a6]
    =================================
    0xe58S0xa75S0xb2bS0x8a6: ve58Va75Vb2bV8a6 = EQ va79Vb2bV8a6, vdc0Ve4dVa75Vb2bV8a6
    0xe59S0xa75S0xb2bS0x8a6: ve59Va75Vb2bV8a6(0xe61) = CONST 
    0xe5cS0xa75S0xb2bS0x8a6: JUMPI ve59Va75Vb2bV8a6(0xe61), ve58Va75Vb2bV8a6

    Begin block 0xe5dB0xa75B0xb2bB0x8a6
    prev=[0xe56B0xa75B0xb2bB0x8a6], succ=[]
    =================================
    0xe5dS0xa75S0xb2bS0x8a6: ve5dVa75Vb2bV8a6(0x0) = CONST 
    0xe60S0xa75S0xb2bS0x8a6: REVERT ve5dVa75Vb2bV8a6(0x0), ve5dVa75Vb2bV8a6(0x0)

    Begin block 0xe61B0xa75B0xb2bB0x8a6
    prev=[0xe56B0xa75B0xb2bB0x8a6], succ=[0xa84B0xb2bB0x8a6]
    =================================
    0xe63S0xa75S0xb2bS0x8a6: JUMP va7cVb2bV8a6(0xa84)

    Begin block 0xa84B0xb2bB0x8a6
    prev=[0xe61B0xa75B0xb2bB0x8a6], succ=[0xb39B0x8a6]
    =================================
    0xa89S0xb2bS0x8a6: JUMP vb2eV8a6(0xb39)

    Begin block 0xb39B0x8a6
    prev=[0xa84B0xb2bB0x8a6], succ=[0x8ca]
    =================================
    0xb41S0x8a6: JUMP v8be(0x8ca)

    Begin block 0x8ca
    prev=[0xb39B0x8a6], succ=[0x8d2, 0x90c]
    =================================
    0x8cb: v8cb = ISZERO va79Vb2bV8a6
    0x8cc: v8cc = ISZERO v8cb
    0x8cd: v8cd = EQ v8cc, v84c(0x1)
    0x8ce: v8ce(0x90c) = CONST 
    0x8d1: JUMPI v8ce(0x90c), v8cd

    Begin block 0x8d2
    prev=[0x8ca], succ=[0xcffB0x8d2]
    =================================
    0x8d2: v8d2(0x40) = CONST 
    0x8d4: v8d4 = MLOAD v8d2(0x40)
    0x8d5: v8d5(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
    0x8f7: MSTORE v8d4, v8d5(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x8f8: v8f8(0x4) = CONST 
    0x8fa: v8fa = ADD v8f8(0x4), v8d4
    0x8fb: v8fb(0x903) = CONST 
    0x8ff: v8ff(0xcff) = CONST 
    0x902: JUMP v8ff(0xcff)

    Begin block 0xcffB0x8d2
    prev=[0x8d2], succ=[0xbfdB0x8d2]
    =================================
    0xd00S0x8d2: vd00V8d2(0x0) = CONST 
    0xd02S0x8d2: vd02V8d2(0x20) = CONST 
    0xd05S0x8d2: vd05V8d2 = ADD v8fa, vd02V8d2(0x20)
    0xd0aS0x8d2: vd0aV8d2(0x20) = SUB vd05V8d2, v8fa
    0xd0bS0x8d2: vd0bV8d2(0x0) = CONST 
    0xd0eS0x8d2: vd0eV8d2 = ADD v8fa, vd0bV8d2(0x0)
    0xd0fS0x8d2: MSTORE vd0eV8d2, vd0aV8d2(0x20)
    0xd10S0x8d2: vd10V8d2(0xd18) = CONST 
    0xd14S0x8d2: vd14V8d2(0xbfd) = CONST 
    0xd17S0x8d2: JUMP vd14V8d2(0xbfd)

    Begin block 0xbfdB0x8d2
    prev=[0xcffB0x8d2], succ=[0xd98B0xbfdB0x8d2]
    =================================
    0xbfeS0x8d2: vbfeV8d2(0x0) = CONST 
    0xc00S0x8d2: vc00V8d2(0xc0a) = CONST 
    0xc03S0x8d2: vc03V8d2(0x16) = CONST 
    0xc06S0x8d2: vc06V8d2(0xd98) = CONST 
    0xc09S0x8d2: JUMP vc06V8d2(0xd98)

    Begin block 0xd98B0xbfdB0x8d2
    prev=[0xbfdB0x8d2], succ=[0xc0aB0x8d2]
    =================================
    0xd99S0xbfdS0x8d2: vd99VbfdV8d2(0x0) = CONST 
    0xd9dS0xbfdS0x8d2: MSTORE vd05V8d2, vc03V8d2(0x16)
    0xd9eS0xbfdS0x8d2: vd9eVbfdV8d2(0x20) = CONST 
    0xda1S0xbfdS0x8d2: vda1VbfdV8d2 = ADD vd05V8d2, vd9eVbfdV8d2(0x20)
    0xda8S0xbfdS0x8d2: JUMP vc00V8d2(0xc0a)

    Begin block 0xc0aB0x8d2
    prev=[0xd98B0xbfdB0x8d2], succ=[0xd18B0x8d2]
    =================================
    0xc0dS0x8d2: vc0dV8d2(0x696e76616c696420696d706c656d656e746174696f6e00000000000000000000) = CONST 
    0xc2eS0x8d2: vc2eV8d2(0x0) = CONST 
    0xc31S0x8d2: vc31V8d2 = ADD vda1VbfdV8d2, vc2eV8d2(0x0)
    0xc32S0x8d2: MSTORE vc31V8d2, vc0dV8d2(0x696e76616c696420696d706c656d656e746174696f6e00000000000000000000)
    0xc33S0x8d2: vc33V8d2(0x20) = CONST 
    0xc36S0x8d2: vc36V8d2 = ADD vda1VbfdV8d2, vc33V8d2(0x20)
    0xc3cS0x8d2: JUMP vd10V8d2(0xd18)

    Begin block 0xd18B0x8d2
    prev=[0xc0aB0x8d2], succ=[0x903]
    =================================
    0xd1eS0x8d2: JUMP v8fb(0x903)

    Begin block 0x903
    prev=[0xd18B0x8d2], succ=[]
    =================================
    0x904: v904(0x40) = CONST 
    0x906: v906 = MLOAD v904(0x40)
    0x909: v909(0x64) = SUB vc36V8d2, v906
    0x90b: REVERT v906, v909(0x64)

    Begin block 0x90c
    prev=[0x8ca], succ=[0xc80B0x90c]
    =================================
    0x90d: v90d(0x0) = CONST 
    0x90f: v90f(0x2) = CONST 
    0x911: v911(0x0) = CONST 
    0x914: v914 = SLOAD v90f(0x2)
    0x916: v916(0x100) = CONST 
    0x919: v919(0x1) = EXP v916(0x100), v911(0x0)
    0x91b: v91b = DIV v914, v919(0x1)
    0x91c: v91c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x931: v931 = AND v91c(0xffffffffffffffffffffffffffffffffffffffff), v91b
    0x935: v935(0x2) = CONST 
    0x937: v937(0x0) = CONST 
    0x939: v939(0x100) = CONST 
    0x93c: v93c(0x1) = EXP v939(0x100), v937(0x0)
    0x93e: v93e = SLOAD v935(0x2)
    0x940: v940(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x955: v955(0xffffffffffffffffffffffffffffffffffffffff) = MUL v940(0xffffffffffffffffffffffffffffffffffffffff), v93c(0x1)
    0x956: v956(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v955(0xffffffffffffffffffffffffffffffffffffffff)
    0x957: v957 = AND v956(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v93e
    0x95a: v95a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x96f: v96f = AND v95a(0xffffffffffffffffffffffffffffffffffffffff), va8eVb54V41e
    0x970: v970 = MUL v96f, v93c(0x1)
    0x971: v971 = OR v970, v957
    0x973: SSTORE v935(0x2), v971
    0x975: v975(0xd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a) = CONST 
    0x997: v997(0x2) = CONST 
    0x999: v999(0x0) = CONST 
    0x99c: v99c = SLOAD v997(0x2)
    0x99e: v99e(0x100) = CONST 
    0x9a1: v9a1(0x1) = EXP v99e(0x100), v999(0x0)
    0x9a3: v9a3 = DIV v99c, v9a1(0x1)
    0x9a4: v9a4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x9b9: v9b9 = AND v9a4(0xffffffffffffffffffffffffffffffffffffffff), v9a3
    0x9ba: v9ba(0x40) = CONST 
    0x9bc: v9bc = MLOAD v9ba(0x40)
    0x9bd: v9bd(0x9c7) = CONST 
    0x9c3: v9c3(0xc80) = CONST 
    0x9c6: JUMP v9c3(0xc80)

    Begin block 0xc80B0x90c
    prev=[0x90c], succ=[0xb6bB0xc80B0x90c]
    =================================
    0xc81S0x90c: vc81V90c(0x0) = CONST 
    0xc83S0x90c: vc83V90c(0x40) = CONST 
    0xc86S0x90c: vc86V90c = ADD v9bc, vc83V90c(0x40)
    0xc89S0x90c: vc89V90c(0xc95) = CONST 
    0xc8cS0x90c: vc8cV90c(0x0) = CONST 
    0xc8fS0x90c: vc8fV90c = ADD v9bc, vc8cV90c(0x0)
    0xc91S0x90c: vc91V90c(0xb6b) = CONST 
    0xc94S0x90c: JUMP vc91V90c(0xb6b), v931, vc8fV90c, vc89V90c(0xc95)

    Begin block 0xb6bB0xc80B0x90c
    prev=[0xc80B0x90c], succ=[0xda9B0xb6bB0xc80B0x90c]
    =================================
    0xb6cS0xc80S0x90c: vb6cVc80V90c(0xb74) = CONST 
    0xb70S0xc80S0x90c: vb70Vc80V90c(0xda9) = CONST 
    0xb73S0xc80S0x90c: JUMP vb70Vc80V90c(0xda9)

    Begin block 0xda9B0xb6bB0xc80B0x90c
    prev=[0xb6bB0xc80B0x90c], succ=[0xdd9B0xda9B0xb6bB0xc80B0x90c]
    =================================
    0xdaaS0xb6bS0xc80S0x90c: vdaaVb6bVc80V90c(0x0) = CONST 
    0xdacS0xb6bS0xc80S0x90c: vdacVb6bVc80V90c(0xdb4) = CONST 
    0xdb0S0xb6bS0xc80S0x90c: vdb0Vb6bVc80V90c(0xdd9) = CONST 
    0xdb3S0xb6bS0xc80S0x90c: JUMP vdb0Vb6bVc80V90c(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc80B0x90c
    prev=[0xda9B0xb6bB0xc80B0x90c], succ=[0xdb4B0xb6bB0xc80B0x90c]
    =================================
    0xddaS0xda9S0xb6bS0xc80S0x90c: vddaVda9Vb6bVc80V90c(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc80S0x90c: vddcVda9Vb6bVc80V90c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc80S0x90c: vdf2Vda9Vb6bVc80V90c = AND v931, vddcVda9Vb6bVc80V90c(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc80S0x90c: JUMP vdacVb6bVc80V90c(0xdb4)

    Begin block 0xdb4B0xb6bB0xc80B0x90c
    prev=[0xdd9B0xda9B0xb6bB0xc80B0x90c], succ=[0xb74B0xc80B0x90c]
    =================================
    0xdbaS0xb6bS0xc80S0x90c: JUMP vb6cVc80V90c(0xb74)

    Begin block 0xb74B0xc80B0x90c
    prev=[0xdb4B0xb6bB0xc80B0x90c], succ=[0xc95B0x90c]
    =================================
    0xb76S0xc80S0x90c: MSTORE vc8fV90c, vdf2Vda9Vb6bVc80V90c
    0xb79S0xc80S0x90c: JUMP vc89V90c(0xc95)

    Begin block 0xc95B0x90c
    prev=[0xb74B0xc80B0x90c], succ=[0xb6bB0xc95B0x90c]
    =================================
    0xc96S0x90c: vc96V90c(0xca2) = CONST 
    0xc99S0x90c: vc99V90c(0x20) = CONST 
    0xc9cS0x90c: vc9cV90c = ADD v9bc, vc99V90c(0x20)
    0xc9eS0x90c: vc9eV90c(0xb6b) = CONST 
    0xca1S0x90c: JUMP vc9eV90c(0xb6b), v9b9, vc9cV90c, vc96V90c(0xca2)

    Begin block 0xb6bB0xc95B0x90c
    prev=[0xc95B0x90c], succ=[0xda9B0xb6bB0xc95B0x90c]
    =================================
    0xb6cS0xc95S0x90c: vb6cVc95V90c(0xb74) = CONST 
    0xb70S0xc95S0x90c: vb70Vc95V90c(0xda9) = CONST 
    0xb73S0xc95S0x90c: JUMP vb70Vc95V90c(0xda9)

    Begin block 0xda9B0xb6bB0xc95B0x90c
    prev=[0xb6bB0xc95B0x90c], succ=[0xdd9B0xda9B0xb6bB0xc95B0x90c]
    =================================
    0xdaaS0xb6bS0xc95S0x90c: vdaaVb6bVc95V90c(0x0) = CONST 
    0xdacS0xb6bS0xc95S0x90c: vdacVb6bVc95V90c(0xdb4) = CONST 
    0xdb0S0xb6bS0xc95S0x90c: vdb0Vb6bVc95V90c(0xdd9) = CONST 
    0xdb3S0xb6bS0xc95S0x90c: JUMP vdb0Vb6bVc95V90c(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc95B0x90c
    prev=[0xda9B0xb6bB0xc95B0x90c], succ=[0xdb4B0xb6bB0xc95B0x90c]
    =================================
    0xddaS0xda9S0xb6bS0xc95S0x90c: vddaVda9Vb6bVc95V90c(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc95S0x90c: vddcVda9Vb6bVc95V90c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc95S0x90c: vdf2Vda9Vb6bVc95V90c = AND v9b9, vddcVda9Vb6bVc95V90c(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc95S0x90c: JUMP vdacVb6bVc95V90c(0xdb4)

    Begin block 0xdb4B0xb6bB0xc95B0x90c
    prev=[0xdd9B0xda9B0xb6bB0xc95B0x90c], succ=[0xb74B0xc95B0x90c]
    =================================
    0xdbaS0xb6bS0xc95S0x90c: JUMP vb6cVc95V90c(0xb74)

    Begin block 0xb74B0xc95B0x90c
    prev=[0xdb4B0xb6bB0xc95B0x90c], succ=[0xca2B0x90c]
    =================================
    0xb76S0xc95S0x90c: MSTORE vc9cV90c, vdf2Vda9Vb6bVc95V90c
    0xb79S0xc95S0x90c: JUMP vc96V90c(0xca2)

    Begin block 0xca2B0x90c
    prev=[0xb74B0xc95B0x90c], succ=[0x9c7]
    =================================
    0xca8S0x90c: JUMP v9bd(0x9c7)

    Begin block 0x9c7
    prev=[0xca2B0x90c], succ=[0x438]
    =================================
    0x9c8: v9c8(0x40) = CONST 
    0x9ca: v9ca = MLOAD v9c8(0x40)
    0x9cd: v9cd(0x40) = SUB vc86V90c, v9ca
    0x9cf: LOG1 v9ca, v9cd(0x40), v975(0xd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a)
    0x9d2: JUMP v41f(0x438)

    Begin block 0x438
    prev=[0x9c7], succ=[]
    =================================
    0x439: STOP 

}

function stakeInitialIndex()() public {
    Begin block 0x43a
    prev=[], succ=[0x9d3]
    =================================
    0x43b: v43b(0x442) = CONST 
    0x43e: v43e(0x9d3) = CONST 
    0x441: JUMP v43e(0x9d3)

    Begin block 0x9d3
    prev=[0x43a], succ=[0x442]
    =================================
    0x9d4: v9d4(0xc097ce7bc90715b34b9f1000000000) = CONST 
    0x9e5: JUMP v43b(0x442)

    Begin block 0x442
    prev=[0x9d3], succ=[0xd1fB0x442]
    =================================
    0x443: v443(0x40) = CONST 
    0x445: v445 = MLOAD v443(0x40)
    0x446: v446(0x44f) = CONST 
    0x44b: v44b(0xd1f) = CONST 
    0x44e: JUMP v44b(0xd1f)

    Begin block 0xd1fB0x442
    prev=[0x442], succ=[0xc3dB0xd1fB0x442]
    =================================
    0xd20S0x442: vd20V442(0x0) = CONST 
    0xd22S0x442: vd22V442(0x20) = CONST 
    0xd25S0x442: vd25V442 = ADD v445, vd22V442(0x20)
    0xd28S0x442: vd28V442(0xd34) = CONST 
    0xd2bS0x442: vd2bV442(0x0) = CONST 
    0xd2eS0x442: vd2eV442 = ADD v445, vd2bV442(0x0)
    0xd30S0x442: vd30V442(0xc3d) = CONST 
    0xd33S0x442: JUMP vd30V442(0xc3d), v9d4(0xc097ce7bc90715b34b9f1000000000), vd2eV442, vd28V442(0xd34)

    Begin block 0xc3dB0xd1fB0x442
    prev=[0xd1fB0x442], succ=[0xdf9B0xc3dB0xd1fB0x442]
    =================================
    0xc3eS0xd1fS0x442: vc3eVd1fV442(0xc46) = CONST 
    0xc42S0xd1fS0x442: vc42Vd1fV442(0xdf9) = CONST 
    0xc45S0xd1fS0x442: JUMP vc42Vd1fV442(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x442
    prev=[0xc3dB0xd1fB0x442], succ=[0xc46B0xd1fB0x442]
    =================================
    0xdfaS0xc3dS0xd1fS0x442: vdfaVc3dVd1fV442(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x442: JUMP vc3eVd1fV442(0xc46)

    Begin block 0xc46B0xd1fB0x442
    prev=[0xdf9B0xc3dB0xd1fB0x442], succ=[0xd34B0x442]
    =================================
    0xc48S0xd1fS0x442: MSTORE vd2eV442, v9d4(0xc097ce7bc90715b34b9f1000000000)
    0xc4bS0xd1fS0x442: JUMP vd28V442(0xd34)

    Begin block 0xd34B0x442
    prev=[0xc46B0xd1fB0x442], succ=[0x44f]
    =================================
    0xd39S0x442: JUMP v446(0x44f)

    Begin block 0x44f
    prev=[0xd34B0x442], succ=[]
    =================================
    0x450: v450(0x40) = CONST 
    0x452: v452 = MLOAD v450(0x40)
    0x455: v455(0x20) = SUB vd25V442, v452
    0x457: RETURN v452, v455(0x20)

}

function totalClaimed()() public {
    Begin block 0x458
    prev=[], succ=[0x9e6]
    =================================
    0x459: v459(0x460) = CONST 
    0x45c: v45c(0x9e6) = CONST 
    0x45f: JUMP v45c(0x9e6)

    Begin block 0x9e6
    prev=[0x458], succ=[0x460]
    =================================
    0x9e7: v9e7(0x13) = CONST 
    0x9e9: v9e9 = SLOAD v9e7(0x13)
    0x9eb: JUMP v459(0x460)

    Begin block 0x460
    prev=[0x9e6], succ=[0xd1fB0x460]
    =================================
    0x461: v461(0x40) = CONST 
    0x463: v463 = MLOAD v461(0x40)
    0x464: v464(0x46d) = CONST 
    0x469: v469(0xd1f) = CONST 
    0x46c: JUMP v469(0xd1f)

    Begin block 0xd1fB0x460
    prev=[0x460], succ=[0xc3dB0xd1fB0x460]
    =================================
    0xd20S0x460: vd20V460(0x0) = CONST 
    0xd22S0x460: vd22V460(0x20) = CONST 
    0xd25S0x460: vd25V460 = ADD v463, vd22V460(0x20)
    0xd28S0x460: vd28V460(0xd34) = CONST 
    0xd2bS0x460: vd2bV460(0x0) = CONST 
    0xd2eS0x460: vd2eV460 = ADD v463, vd2bV460(0x0)
    0xd30S0x460: vd30V460(0xc3d) = CONST 
    0xd33S0x460: JUMP vd30V460(0xc3d), v9e9, vd2eV460, vd28V460(0xd34)

    Begin block 0xc3dB0xd1fB0x460
    prev=[0xd1fB0x460], succ=[0xdf9B0xc3dB0xd1fB0x460]
    =================================
    0xc3eS0xd1fS0x460: vc3eVd1fV460(0xc46) = CONST 
    0xc42S0xd1fS0x460: vc42Vd1fV460(0xdf9) = CONST 
    0xc45S0xd1fS0x460: JUMP vc42Vd1fV460(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x460
    prev=[0xc3dB0xd1fB0x460], succ=[0xc46B0xd1fB0x460]
    =================================
    0xdfaS0xc3dS0xd1fS0x460: vdfaVc3dVd1fV460(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x460: JUMP vc3eVd1fV460(0xc46)

    Begin block 0xc46B0xd1fB0x460
    prev=[0xdf9B0xc3dB0xd1fB0x460], succ=[0xd34B0x460]
    =================================
    0xc48S0xd1fS0x460: MSTORE vd2eV460, v9e9
    0xc4bS0xd1fS0x460: JUMP vd28V460(0xd34)

    Begin block 0xd34B0x460
    prev=[0xc46B0xd1fB0x460], succ=[0x46d]
    =================================
    0xd39S0x460: JUMP v464(0x46d)

    Begin block 0x46d
    prev=[0xd34B0x460], succ=[]
    =================================
    0x46e: v46e(0x40) = CONST 
    0x470: v470 = MLOAD v46e(0x40)
    0x473: v473(0x20) = SUB vd25V460, v470
    0x475: RETURN v470, v473(0x20)

}

function stakerIndexes(address)() public {
    Begin block 0x476
    prev=[], succ=[0xab4B0x476]
    =================================
    0x477: v477(0x490) = CONST 
    0x47a: v47a(0x4) = CONST 
    0x47d: v47d = CALLDATASIZE 
    0x47e: v47e = SUB v47d, v47a(0x4)
    0x47f: v47f(0x48b) = CONST 
    0x485: v485 = ADD v47a(0x4), v47e
    0x487: v487(0xab4) = CONST 
    0x48a: JUMP v487(0xab4)

    Begin block 0xab4B0x476
    prev=[0x476], succ=[0xac2B0x476, 0xac6B0x476]
    =================================
    0xab5S0x476: vab5V476(0x0) = CONST 
    0xab7S0x476: vab7V476(0x20) = CONST 
    0xabbS0x476: vabbV476 = SUB v485, v47a(0x4)
    0xabcS0x476: vabcV476 = SLT vabbV476, vab7V476(0x20)
    0xabdS0x476: vabdV476 = ISZERO vabcV476
    0xabeS0x476: vabeV476(0xac6) = CONST 
    0xac1S0x476: JUMPI vabeV476(0xac6), vabdV476

    Begin block 0xac2B0x476
    prev=[0xab4B0x476], succ=[]
    =================================
    0xac2S0x476: vac2V476(0x0) = CONST 
    0xac5S0x476: REVERT vac2V476(0x0), vac2V476(0x0)

    Begin block 0xac6B0x476
    prev=[0xab4B0x476], succ=[0xa60B0xac6B0x476]
    =================================
    0xac7S0x476: vac7V476(0x0) = CONST 
    0xac9S0x476: vac9V476(0xad4) = CONST 
    0xacfS0x476: vacfV476(0x4) = ADD v47a(0x4), vac7V476(0x0)
    0xad0S0x476: vad0V476(0xa60) = CONST 
    0xad3S0x476: JUMP vad0V476(0xa60)

    Begin block 0xa60B0xac6B0x476
    prev=[0xac6B0x476], succ=[0xe36B0xa60B0xac6B0x476]
    =================================
    0xa61S0xac6S0x476: va61Vac6V476(0x0) = CONST 
    0xa64S0xac6S0x476: va64Vac6V476 = CALLDATALOAD vacfV476(0x4)
    0xa67S0xac6S0x476: va67Vac6V476(0xa6f) = CONST 
    0xa6bS0xac6S0x476: va6bVac6V476(0xe36) = CONST 
    0xa6eS0xac6S0x476: JUMP va6bVac6V476(0xe36), va64Vac6V476, va67Vac6V476(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x476
    prev=[0xa60B0xac6B0x476], succ=[0xda9B0xe36B0xa60B0xac6B0x476]
    =================================
    0xe37S0xa60S0xac6S0x476: ve37Va60Vac6V476(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x476: ve3bVa60Vac6V476(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x476: JUMP ve3bVa60Vac6V476(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x476
    prev=[0xe36B0xa60B0xac6B0x476], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x476]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x476: vdaaVe36Va60Vac6V476(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x476: vdacVe36Va60Vac6V476(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x476: vdb0Ve36Va60Vac6V476(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x476: JUMP vdb0Ve36Va60Vac6V476(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x476
    prev=[0xda9B0xe36B0xa60B0xac6B0x476], succ=[0xdb4B0xe36B0xa60B0xac6B0x476]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x476: vddaVda9Ve36Va60Vac6V476(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x476: vddcVda9Ve36Va60Vac6V476(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x476: vdf2Vda9Ve36Va60Vac6V476 = AND va64Vac6V476, vddcVda9Ve36Va60Vac6V476(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x476: JUMP vdacVe36Va60Vac6V476(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x476
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x476], succ=[0xe3fB0xa60B0xac6B0x476]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x476: JUMP ve37Va60Vac6V476(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x476
    prev=[0xdb4B0xe36B0xa60B0xac6B0x476], succ=[0xe46B0xa60B0xac6B0x476, 0xe4aB0xa60B0xac6B0x476]
    =================================
    0xe41S0xa60S0xac6S0x476: ve41Va60Vac6V476 = EQ va64Vac6V476, vdf2Vda9Ve36Va60Vac6V476
    0xe42S0xa60S0xac6S0x476: ve42Va60Vac6V476(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x476: JUMPI ve42Va60Vac6V476(0xe4a), ve41Va60Vac6V476

    Begin block 0xe46B0xa60B0xac6B0x476
    prev=[0xe3fB0xa60B0xac6B0x476], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x476: ve46Va60Vac6V476(0x0) = CONST 
    0xe49S0xa60S0xac6S0x476: REVERT ve46Va60Vac6V476(0x0), ve46Va60Vac6V476(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x476
    prev=[0xe3fB0xa60B0xac6B0x476], succ=[0xa6fB0xac6B0x476]
    =================================
    0xe4cS0xa60S0xac6S0x476: JUMP va67Vac6V476(0xa6f)

    Begin block 0xa6fB0xac6B0x476
    prev=[0xe4aB0xa60B0xac6B0x476], succ=[0xad4B0x476]
    =================================
    0xa74S0xac6S0x476: JUMP vac9V476(0xad4)

    Begin block 0xad4B0x476
    prev=[0xa6fB0xac6B0x476], succ=[0x48b]
    =================================
    0xadcS0x476: JUMP v47f(0x48b)

    Begin block 0x48b
    prev=[0xad4B0x476], succ=[0x9ec]
    =================================
    0x48c: v48c(0x9ec) = CONST 
    0x48f: JUMP v48c(0x9ec)

    Begin block 0x9ec
    prev=[0x48b], succ=[0x490]
    =================================
    0x9ed: v9ed(0x11) = CONST 
    0x9ef: v9ef(0x20) = CONST 
    0x9f1: MSTORE v9ef(0x20), v9ed(0x11)
    0x9f3: v9f3(0x0) = CONST 
    0x9f5: MSTORE v9f3(0x0), va64Vac6V476
    0x9f6: v9f6(0x40) = CONST 
    0x9f8: v9f8(0x0) = CONST 
    0x9fa: v9fa = SHA3 v9f8(0x0), v9f6(0x40)
    0x9fb: v9fb(0x0) = CONST 
    0xa01: va01 = SLOAD v9fa
    0xa03: JUMP v477(0x490)

    Begin block 0x490
    prev=[0x9ec], succ=[0xd1fB0x490]
    =================================
    0x491: v491(0x40) = CONST 
    0x493: v493 = MLOAD v491(0x40)
    0x494: v494(0x49d) = CONST 
    0x499: v499(0xd1f) = CONST 
    0x49c: JUMP v499(0xd1f)

    Begin block 0xd1fB0x490
    prev=[0x490], succ=[0xc3dB0xd1fB0x490]
    =================================
    0xd20S0x490: vd20V490(0x0) = CONST 
    0xd22S0x490: vd22V490(0x20) = CONST 
    0xd25S0x490: vd25V490 = ADD v493, vd22V490(0x20)
    0xd28S0x490: vd28V490(0xd34) = CONST 
    0xd2bS0x490: vd2bV490(0x0) = CONST 
    0xd2eS0x490: vd2eV490 = ADD v493, vd2bV490(0x0)
    0xd30S0x490: vd30V490(0xc3d) = CONST 
    0xd33S0x490: JUMP vd30V490(0xc3d), va01, vd2eV490, vd28V490(0xd34)

    Begin block 0xc3dB0xd1fB0x490
    prev=[0xd1fB0x490], succ=[0xdf9B0xc3dB0xd1fB0x490]
    =================================
    0xc3eS0xd1fS0x490: vc3eVd1fV490(0xc46) = CONST 
    0xc42S0xd1fS0x490: vc42Vd1fV490(0xdf9) = CONST 
    0xc45S0xd1fS0x490: JUMP vc42Vd1fV490(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x490
    prev=[0xc3dB0xd1fB0x490], succ=[0xc46B0xd1fB0x490]
    =================================
    0xdfaS0xc3dS0xd1fS0x490: vdfaVc3dVd1fV490(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x490: JUMP vc3eVd1fV490(0xc46)

    Begin block 0xc46B0xd1fB0x490
    prev=[0xdf9B0xc3dB0xd1fB0x490], succ=[0xd34B0x490]
    =================================
    0xc48S0xd1fS0x490: MSTORE vd2eV490, va01
    0xc4bS0xd1fS0x490: JUMP vd28V490(0xd34)

    Begin block 0xd34B0x490
    prev=[0xc46B0xd1fB0x490], succ=[0x49d]
    =================================
    0xd39S0x490: JUMP v494(0x49d)

    Begin block 0x49d
    prev=[0xd34B0x490], succ=[]
    =================================
    0x49e: v49e(0x40) = CONST 
    0x4a0: v4a0 = MLOAD v49e(0x40)
    0x4a3: v4a3(0x20) = SUB vd25V490, v4a0
    0x4a5: RETURN v4a0, v4a3(0x20)

}

function stakeHolders(address)() public {
    Begin block 0x4a6
    prev=[], succ=[0xab4B0x4a6]
    =================================
    0x4a7: v4a7(0x4c0) = CONST 
    0x4aa: v4aa(0x4) = CONST 
    0x4ad: v4ad = CALLDATASIZE 
    0x4ae: v4ae = SUB v4ad, v4aa(0x4)
    0x4af: v4af(0x4bb) = CONST 
    0x4b5: v4b5 = ADD v4aa(0x4), v4ae
    0x4b7: v4b7(0xab4) = CONST 
    0x4ba: JUMP v4b7(0xab4)

    Begin block 0xab4B0x4a6
    prev=[0x4a6], succ=[0xac2B0x4a6, 0xac6B0x4a6]
    =================================
    0xab5S0x4a6: vab5V4a6(0x0) = CONST 
    0xab7S0x4a6: vab7V4a6(0x20) = CONST 
    0xabbS0x4a6: vabbV4a6 = SUB v4b5, v4aa(0x4)
    0xabcS0x4a6: vabcV4a6 = SLT vabbV4a6, vab7V4a6(0x20)
    0xabdS0x4a6: vabdV4a6 = ISZERO vabcV4a6
    0xabeS0x4a6: vabeV4a6(0xac6) = CONST 
    0xac1S0x4a6: JUMPI vabeV4a6(0xac6), vabdV4a6

    Begin block 0xac2B0x4a6
    prev=[0xab4B0x4a6], succ=[]
    =================================
    0xac2S0x4a6: vac2V4a6(0x0) = CONST 
    0xac5S0x4a6: REVERT vac2V4a6(0x0), vac2V4a6(0x0)

    Begin block 0xac6B0x4a6
    prev=[0xab4B0x4a6], succ=[0xa60B0xac6B0x4a6]
    =================================
    0xac7S0x4a6: vac7V4a6(0x0) = CONST 
    0xac9S0x4a6: vac9V4a6(0xad4) = CONST 
    0xacfS0x4a6: vacfV4a6(0x4) = ADD v4aa(0x4), vac7V4a6(0x0)
    0xad0S0x4a6: vad0V4a6(0xa60) = CONST 
    0xad3S0x4a6: JUMP vad0V4a6(0xa60)

    Begin block 0xa60B0xac6B0x4a6
    prev=[0xac6B0x4a6], succ=[0xe36B0xa60B0xac6B0x4a6]
    =================================
    0xa61S0xac6S0x4a6: va61Vac6V4a6(0x0) = CONST 
    0xa64S0xac6S0x4a6: va64Vac6V4a6 = CALLDATALOAD vacfV4a6(0x4)
    0xa67S0xac6S0x4a6: va67Vac6V4a6(0xa6f) = CONST 
    0xa6bS0xac6S0x4a6: va6bVac6V4a6(0xe36) = CONST 
    0xa6eS0xac6S0x4a6: JUMP va6bVac6V4a6(0xe36), va64Vac6V4a6, va67Vac6V4a6(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x4a6
    prev=[0xa60B0xac6B0x4a6], succ=[0xda9B0xe36B0xa60B0xac6B0x4a6]
    =================================
    0xe37S0xa60S0xac6S0x4a6: ve37Va60Vac6V4a6(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x4a6: ve3bVa60Vac6V4a6(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x4a6: JUMP ve3bVa60Vac6V4a6(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x4a6
    prev=[0xe36B0xa60B0xac6B0x4a6], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x4a6]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x4a6: vdaaVe36Va60Vac6V4a6(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x4a6: vdacVe36Va60Vac6V4a6(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x4a6: vdb0Ve36Va60Vac6V4a6(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x4a6: JUMP vdb0Ve36Va60Vac6V4a6(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x4a6
    prev=[0xda9B0xe36B0xa60B0xac6B0x4a6], succ=[0xdb4B0xe36B0xa60B0xac6B0x4a6]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x4a6: vddaVda9Ve36Va60Vac6V4a6(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x4a6: vddcVda9Ve36Va60Vac6V4a6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x4a6: vdf2Vda9Ve36Va60Vac6V4a6 = AND va64Vac6V4a6, vddcVda9Ve36Va60Vac6V4a6(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x4a6: JUMP vdacVe36Va60Vac6V4a6(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x4a6
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x4a6], succ=[0xe3fB0xa60B0xac6B0x4a6]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x4a6: JUMP ve37Va60Vac6V4a6(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x4a6
    prev=[0xdb4B0xe36B0xa60B0xac6B0x4a6], succ=[0xe46B0xa60B0xac6B0x4a6, 0xe4aB0xa60B0xac6B0x4a6]
    =================================
    0xe41S0xa60S0xac6S0x4a6: ve41Va60Vac6V4a6 = EQ va64Vac6V4a6, vdf2Vda9Ve36Va60Vac6V4a6
    0xe42S0xa60S0xac6S0x4a6: ve42Va60Vac6V4a6(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x4a6: JUMPI ve42Va60Vac6V4a6(0xe4a), ve41Va60Vac6V4a6

    Begin block 0xe46B0xa60B0xac6B0x4a6
    prev=[0xe3fB0xa60B0xac6B0x4a6], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x4a6: ve46Va60Vac6V4a6(0x0) = CONST 
    0xe49S0xa60S0xac6S0x4a6: REVERT ve46Va60Vac6V4a6(0x0), ve46Va60Vac6V4a6(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x4a6
    prev=[0xe3fB0xa60B0xac6B0x4a6], succ=[0xa6fB0xac6B0x4a6]
    =================================
    0xe4cS0xa60S0xac6S0x4a6: JUMP va67Vac6V4a6(0xa6f)

    Begin block 0xa6fB0xac6B0x4a6
    prev=[0xe4aB0xa60B0xac6B0x4a6], succ=[0xad4B0x4a6]
    =================================
    0xa74S0xac6S0x4a6: JUMP vac9V4a6(0xad4)

    Begin block 0xad4B0x4a6
    prev=[0xa6fB0xac6B0x4a6], succ=[0x4bb]
    =================================
    0xadcS0x4a6: JUMP v4af(0x4bb)

    Begin block 0x4bb
    prev=[0xad4B0x4a6], succ=[0xa04]
    =================================
    0x4bc: v4bc(0xa04) = CONST 
    0x4bf: JUMP v4bc(0xa04)

    Begin block 0xa04
    prev=[0x4bb], succ=[0x4c0]
    =================================
    0xa05: va05(0xf) = CONST 
    0xa07: va07(0x20) = CONST 
    0xa09: MSTORE va07(0x20), va05(0xf)
    0xa0b: va0b(0x0) = CONST 
    0xa0d: MSTORE va0b(0x0), va64Vac6V4a6
    0xa0e: va0e(0x40) = CONST 
    0xa10: va10(0x0) = CONST 
    0xa12: va12 = SHA3 va10(0x0), va0e(0x40)
    0xa13: va13(0x0) = CONST 
    0xa19: va19 = SLOAD va12
    0xa1b: JUMP v4a7(0x4c0)

    Begin block 0x4c0
    prev=[0xa04], succ=[0xd1fB0x4c0]
    =================================
    0x4c1: v4c1(0x40) = CONST 
    0x4c3: v4c3 = MLOAD v4c1(0x40)
    0x4c4: v4c4(0x4cd) = CONST 
    0x4c9: v4c9(0xd1f) = CONST 
    0x4cc: JUMP v4c9(0xd1f)

    Begin block 0xd1fB0x4c0
    prev=[0x4c0], succ=[0xc3dB0xd1fB0x4c0]
    =================================
    0xd20S0x4c0: vd20V4c0(0x0) = CONST 
    0xd22S0x4c0: vd22V4c0(0x20) = CONST 
    0xd25S0x4c0: vd25V4c0 = ADD v4c3, vd22V4c0(0x20)
    0xd28S0x4c0: vd28V4c0(0xd34) = CONST 
    0xd2bS0x4c0: vd2bV4c0(0x0) = CONST 
    0xd2eS0x4c0: vd2eV4c0 = ADD v4c3, vd2bV4c0(0x0)
    0xd30S0x4c0: vd30V4c0(0xc3d) = CONST 
    0xd33S0x4c0: JUMP vd30V4c0(0xc3d), va19, vd2eV4c0, vd28V4c0(0xd34)

    Begin block 0xc3dB0xd1fB0x4c0
    prev=[0xd1fB0x4c0], succ=[0xdf9B0xc3dB0xd1fB0x4c0]
    =================================
    0xc3eS0xd1fS0x4c0: vc3eVd1fV4c0(0xc46) = CONST 
    0xc42S0xd1fS0x4c0: vc42Vd1fV4c0(0xdf9) = CONST 
    0xc45S0xd1fS0x4c0: JUMP vc42Vd1fV4c0(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x4c0
    prev=[0xc3dB0xd1fB0x4c0], succ=[0xc46B0xd1fB0x4c0]
    =================================
    0xdfaS0xc3dS0xd1fS0x4c0: vdfaVc3dVd1fV4c0(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x4c0: JUMP vc3eVd1fV4c0(0xc46)

    Begin block 0xc46B0xd1fB0x4c0
    prev=[0xdf9B0xc3dB0xd1fB0x4c0], succ=[0xd34B0x4c0]
    =================================
    0xc48S0xd1fS0x4c0: MSTORE vd2eV4c0, va19
    0xc4bS0xd1fS0x4c0: JUMP vd28V4c0(0xd34)

    Begin block 0xd34B0x4c0
    prev=[0xc46B0xd1fB0x4c0], succ=[0x4cd]
    =================================
    0xd39S0x4c0: JUMP v4c4(0x4cd)

    Begin block 0x4cd
    prev=[0xd34B0x4c0], succ=[]
    =================================
    0x4ce: v4ce(0x40) = CONST 
    0x4d0: v4d0 = MLOAD v4ce(0x40)
    0x4d3: v4d3(0x20) = SUB vd25V4c0, v4d0
    0x4d5: RETURN v4d0, v4d3(0x20)

}

function totalStakedPower()() public {
    Begin block 0x4d6
    prev=[], succ=[0xa1c]
    =================================
    0x4d7: v4d7(0x4de) = CONST 
    0x4da: v4da(0xa1c) = CONST 
    0x4dd: JUMP v4da(0xa1c)

    Begin block 0xa1c
    prev=[0x4d6], succ=[0x4de]
    =================================
    0xa1d: va1d(0xe) = CONST 
    0xa1f: va1f = SLOAD va1d(0xe)
    0xa21: JUMP v4d7(0x4de)

    Begin block 0x4de
    prev=[0xa1c], succ=[0xd1fB0x4de]
    =================================
    0x4df: v4df(0x40) = CONST 
    0x4e1: v4e1 = MLOAD v4df(0x40)
    0x4e2: v4e2(0x4eb) = CONST 
    0x4e7: v4e7(0xd1f) = CONST 
    0x4ea: JUMP v4e7(0xd1f)

    Begin block 0xd1fB0x4de
    prev=[0x4de], succ=[0xc3dB0xd1fB0x4de]
    =================================
    0xd20S0x4de: vd20V4de(0x0) = CONST 
    0xd22S0x4de: vd22V4de(0x20) = CONST 
    0xd25S0x4de: vd25V4de = ADD v4e1, vd22V4de(0x20)
    0xd28S0x4de: vd28V4de(0xd34) = CONST 
    0xd2bS0x4de: vd2bV4de(0x0) = CONST 
    0xd2eS0x4de: vd2eV4de = ADD v4e1, vd2bV4de(0x0)
    0xd30S0x4de: vd30V4de(0xc3d) = CONST 
    0xd33S0x4de: JUMP vd30V4de(0xc3d), va1f, vd2eV4de, vd28V4de(0xd34)

    Begin block 0xc3dB0xd1fB0x4de
    prev=[0xd1fB0x4de], succ=[0xdf9B0xc3dB0xd1fB0x4de]
    =================================
    0xc3eS0xd1fS0x4de: vc3eVd1fV4de(0xc46) = CONST 
    0xc42S0xd1fS0x4de: vc42Vd1fV4de(0xdf9) = CONST 
    0xc45S0xd1fS0x4de: JUMP vc42Vd1fV4de(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x4de
    prev=[0xc3dB0xd1fB0x4de], succ=[0xc46B0xd1fB0x4de]
    =================================
    0xdfaS0xc3dS0xd1fS0x4de: vdfaVc3dVd1fV4de(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x4de: JUMP vc3eVd1fV4de(0xc46)

    Begin block 0xc46B0xd1fB0x4de
    prev=[0xdf9B0xc3dB0xd1fB0x4de], succ=[0xd34B0x4de]
    =================================
    0xc48S0xd1fS0x4de: MSTORE vd2eV4de, va1f
    0xc4bS0xd1fS0x4de: JUMP vd28V4de(0xd34)

    Begin block 0xd34B0x4de
    prev=[0xc46B0xd1fB0x4de], succ=[0x4eb]
    =================================
    0xd39S0x4de: JUMP v4e2(0x4eb)

    Begin block 0x4eb
    prev=[0xd34B0x4de], succ=[]
    =================================
    0x4ec: v4ec(0x40) = CONST 
    0x4ee: v4ee = MLOAD v4ec(0x40)
    0x4f1: v4f1(0x20) = SUB vd25V4de, v4ee
    0x4f3: RETURN v4ee, v4f1(0x20)

}

function stakerPower(address)() public {
    Begin block 0x4f4
    prev=[], succ=[0xab4B0x4f4]
    =================================
    0x4f5: v4f5(0x50e) = CONST 
    0x4f8: v4f8(0x4) = CONST 
    0x4fb: v4fb = CALLDATASIZE 
    0x4fc: v4fc = SUB v4fb, v4f8(0x4)
    0x4fd: v4fd(0x509) = CONST 
    0x503: v503 = ADD v4f8(0x4), v4fc
    0x505: v505(0xab4) = CONST 
    0x508: JUMP v505(0xab4)

    Begin block 0xab4B0x4f4
    prev=[0x4f4], succ=[0xac2B0x4f4, 0xac6B0x4f4]
    =================================
    0xab5S0x4f4: vab5V4f4(0x0) = CONST 
    0xab7S0x4f4: vab7V4f4(0x20) = CONST 
    0xabbS0x4f4: vabbV4f4 = SUB v503, v4f8(0x4)
    0xabcS0x4f4: vabcV4f4 = SLT vabbV4f4, vab7V4f4(0x20)
    0xabdS0x4f4: vabdV4f4 = ISZERO vabcV4f4
    0xabeS0x4f4: vabeV4f4(0xac6) = CONST 
    0xac1S0x4f4: JUMPI vabeV4f4(0xac6), vabdV4f4

    Begin block 0xac2B0x4f4
    prev=[0xab4B0x4f4], succ=[]
    =================================
    0xac2S0x4f4: vac2V4f4(0x0) = CONST 
    0xac5S0x4f4: REVERT vac2V4f4(0x0), vac2V4f4(0x0)

    Begin block 0xac6B0x4f4
    prev=[0xab4B0x4f4], succ=[0xa60B0xac6B0x4f4]
    =================================
    0xac7S0x4f4: vac7V4f4(0x0) = CONST 
    0xac9S0x4f4: vac9V4f4(0xad4) = CONST 
    0xacfS0x4f4: vacfV4f4(0x4) = ADD v4f8(0x4), vac7V4f4(0x0)
    0xad0S0x4f4: vad0V4f4(0xa60) = CONST 
    0xad3S0x4f4: JUMP vad0V4f4(0xa60)

    Begin block 0xa60B0xac6B0x4f4
    prev=[0xac6B0x4f4], succ=[0xe36B0xa60B0xac6B0x4f4]
    =================================
    0xa61S0xac6S0x4f4: va61Vac6V4f4(0x0) = CONST 
    0xa64S0xac6S0x4f4: va64Vac6V4f4 = CALLDATALOAD vacfV4f4(0x4)
    0xa67S0xac6S0x4f4: va67Vac6V4f4(0xa6f) = CONST 
    0xa6bS0xac6S0x4f4: va6bVac6V4f4(0xe36) = CONST 
    0xa6eS0xac6S0x4f4: JUMP va6bVac6V4f4(0xe36), va64Vac6V4f4, va67Vac6V4f4(0xa6f)

    Begin block 0xe36B0xa60B0xac6B0x4f4
    prev=[0xa60B0xac6B0x4f4], succ=[0xda9B0xe36B0xa60B0xac6B0x4f4]
    =================================
    0xe37S0xa60S0xac6S0x4f4: ve37Va60Vac6V4f4(0xe3f) = CONST 
    0xe3bS0xa60S0xac6S0x4f4: ve3bVa60Vac6V4f4(0xda9) = CONST 
    0xe3eS0xa60S0xac6S0x4f4: JUMP ve3bVa60Vac6V4f4(0xda9)

    Begin block 0xda9B0xe36B0xa60B0xac6B0x4f4
    prev=[0xe36B0xa60B0xac6B0x4f4], succ=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x4f4]
    =================================
    0xdaaS0xe36S0xa60S0xac6S0x4f4: vdaaVe36Va60Vac6V4f4(0x0) = CONST 
    0xdacS0xe36S0xa60S0xac6S0x4f4: vdacVe36Va60Vac6V4f4(0xdb4) = CONST 
    0xdb0S0xe36S0xa60S0xac6S0x4f4: vdb0Ve36Va60Vac6V4f4(0xdd9) = CONST 
    0xdb3S0xe36S0xa60S0xac6S0x4f4: JUMP vdb0Ve36Va60Vac6V4f4(0xdd9)

    Begin block 0xdd9B0xda9B0xe36B0xa60B0xac6B0x4f4
    prev=[0xda9B0xe36B0xa60B0xac6B0x4f4], succ=[0xdb4B0xe36B0xa60B0xac6B0x4f4]
    =================================
    0xddaS0xda9S0xe36S0xa60S0xac6S0x4f4: vddaVda9Ve36Va60Vac6V4f4(0x0) = CONST 
    0xddcS0xda9S0xe36S0xa60S0xac6S0x4f4: vddcVda9Ve36Va60Vac6V4f4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xe36S0xa60S0xac6S0x4f4: vdf2Vda9Ve36Va60Vac6V4f4 = AND va64Vac6V4f4, vddcVda9Ve36Va60Vac6V4f4(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xe36S0xa60S0xac6S0x4f4: JUMP vdacVe36Va60Vac6V4f4(0xdb4)

    Begin block 0xdb4B0xe36B0xa60B0xac6B0x4f4
    prev=[0xdd9B0xda9B0xe36B0xa60B0xac6B0x4f4], succ=[0xe3fB0xa60B0xac6B0x4f4]
    =================================
    0xdbaS0xe36S0xa60S0xac6S0x4f4: JUMP ve37Va60Vac6V4f4(0xe3f)

    Begin block 0xe3fB0xa60B0xac6B0x4f4
    prev=[0xdb4B0xe36B0xa60B0xac6B0x4f4], succ=[0xe46B0xa60B0xac6B0x4f4, 0xe4aB0xa60B0xac6B0x4f4]
    =================================
    0xe41S0xa60S0xac6S0x4f4: ve41Va60Vac6V4f4 = EQ va64Vac6V4f4, vdf2Vda9Ve36Va60Vac6V4f4
    0xe42S0xa60S0xac6S0x4f4: ve42Va60Vac6V4f4(0xe4a) = CONST 
    0xe45S0xa60S0xac6S0x4f4: JUMPI ve42Va60Vac6V4f4(0xe4a), ve41Va60Vac6V4f4

    Begin block 0xe46B0xa60B0xac6B0x4f4
    prev=[0xe3fB0xa60B0xac6B0x4f4], succ=[]
    =================================
    0xe46S0xa60S0xac6S0x4f4: ve46Va60Vac6V4f4(0x0) = CONST 
    0xe49S0xa60S0xac6S0x4f4: REVERT ve46Va60Vac6V4f4(0x0), ve46Va60Vac6V4f4(0x0)

    Begin block 0xe4aB0xa60B0xac6B0x4f4
    prev=[0xe3fB0xa60B0xac6B0x4f4], succ=[0xa6fB0xac6B0x4f4]
    =================================
    0xe4cS0xa60S0xac6S0x4f4: JUMP va67Vac6V4f4(0xa6f)

    Begin block 0xa6fB0xac6B0x4f4
    prev=[0xe4aB0xa60B0xac6B0x4f4], succ=[0xad4B0x4f4]
    =================================
    0xa74S0xac6S0x4f4: JUMP vac9V4f4(0xad4)

    Begin block 0xad4B0x4f4
    prev=[0xa6fB0xac6B0x4f4], succ=[0x509]
    =================================
    0xadcS0x4f4: JUMP v4fd(0x509)

    Begin block 0x509
    prev=[0xad4B0x4f4], succ=[0xa22]
    =================================
    0x50a: v50a(0xa22) = CONST 
    0x50d: JUMP v50a(0xa22)

    Begin block 0xa22
    prev=[0x509], succ=[0x50e]
    =================================
    0xa23: va23(0x10) = CONST 
    0xa25: va25(0x20) = CONST 
    0xa27: MSTORE va25(0x20), va23(0x10)
    0xa29: va29(0x0) = CONST 
    0xa2b: MSTORE va29(0x0), va64Vac6V4f4
    0xa2c: va2c(0x40) = CONST 
    0xa2e: va2e(0x0) = CONST 
    0xa30: va30 = SHA3 va2e(0x0), va2c(0x40)
    0xa31: va31(0x0) = CONST 
    0xa37: va37 = SLOAD va30
    0xa39: JUMP v4f5(0x50e)

    Begin block 0x50e
    prev=[0xa22], succ=[0xd1fB0x50e]
    =================================
    0x50f: v50f(0x40) = CONST 
    0x511: v511 = MLOAD v50f(0x40)
    0x512: v512(0x51b) = CONST 
    0x517: v517(0xd1f) = CONST 
    0x51a: JUMP v517(0xd1f)

    Begin block 0xd1fB0x50e
    prev=[0x50e], succ=[0xc3dB0xd1fB0x50e]
    =================================
    0xd20S0x50e: vd20V50e(0x0) = CONST 
    0xd22S0x50e: vd22V50e(0x20) = CONST 
    0xd25S0x50e: vd25V50e = ADD v511, vd22V50e(0x20)
    0xd28S0x50e: vd28V50e(0xd34) = CONST 
    0xd2bS0x50e: vd2bV50e(0x0) = CONST 
    0xd2eS0x50e: vd2eV50e = ADD v511, vd2bV50e(0x0)
    0xd30S0x50e: vd30V50e(0xc3d) = CONST 
    0xd33S0x50e: JUMP vd30V50e(0xc3d), va37, vd2eV50e, vd28V50e(0xd34)

    Begin block 0xc3dB0xd1fB0x50e
    prev=[0xd1fB0x50e], succ=[0xdf9B0xc3dB0xd1fB0x50e]
    =================================
    0xc3eS0xd1fS0x50e: vc3eVd1fV50e(0xc46) = CONST 
    0xc42S0xd1fS0x50e: vc42Vd1fV50e(0xdf9) = CONST 
    0xc45S0xd1fS0x50e: JUMP vc42Vd1fV50e(0xdf9)

    Begin block 0xdf9B0xc3dB0xd1fB0x50e
    prev=[0xc3dB0xd1fB0x50e], succ=[0xc46B0xd1fB0x50e]
    =================================
    0xdfaS0xc3dS0xd1fS0x50e: vdfaVc3dVd1fV50e(0x0) = CONST 
    0xe02S0xc3dS0xd1fS0x50e: JUMP vc3eVd1fV50e(0xc46)

    Begin block 0xc46B0xd1fB0x50e
    prev=[0xdf9B0xc3dB0xd1fB0x50e], succ=[0xd34B0x50e]
    =================================
    0xc48S0xd1fS0x50e: MSTORE vd2eV50e, va37
    0xc4bS0xd1fS0x50e: JUMP vd28V50e(0xd34)

    Begin block 0xd34B0x50e
    prev=[0xc46B0xd1fB0x50e], succ=[0x51b]
    =================================
    0xd39S0x50e: JUMP v512(0x51b)

    Begin block 0x51b
    prev=[0xd34B0x50e], succ=[]
    =================================
    0x51c: v51c(0x40) = CONST 
    0x51e: v51e = MLOAD v51c(0x40)
    0x521: v521(0x20) = SUB vd25V50e, v51e
    0x523: RETURN v51e, v521(0x20)

}

function admin()() public {
    Begin block 0x524
    prev=[], succ=[0xa3a]
    =================================
    0x525: v525(0x52c) = CONST 
    0x528: v528(0xa3a) = CONST 
    0x52b: JUMP v528(0xa3a)

    Begin block 0xa3a
    prev=[0x524], succ=[0x52c]
    =================================
    0xa3b: va3b(0x1) = CONST 
    0xa3d: va3d(0x0) = CONST 
    0xa40: va40 = SLOAD va3b(0x1)
    0xa42: va42(0x100) = CONST 
    0xa45: va45(0x1) = EXP va42(0x100), va3d(0x0)
    0xa47: va47 = DIV va40, va45(0x1)
    0xa48: va48(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xa5d: va5d = AND va48(0xffffffffffffffffffffffffffffffffffffffff), va47
    0xa5f: JUMP v525(0x52c)

    Begin block 0x52c
    prev=[0xa3a], succ=[0xc65B0x52c]
    =================================
    0x52d: v52d(0x40) = CONST 
    0x52f: v52f = MLOAD v52d(0x40)
    0x530: v530(0x539) = CONST 
    0x535: v535(0xc65) = CONST 
    0x538: JUMP v535(0xc65)

    Begin block 0xc65B0x52c
    prev=[0x52c], succ=[0xb6bB0xc65B0x52c]
    =================================
    0xc66S0x52c: vc66V52c(0x0) = CONST 
    0xc68S0x52c: vc68V52c(0x20) = CONST 
    0xc6bS0x52c: vc6bV52c = ADD v52f, vc68V52c(0x20)
    0xc6eS0x52c: vc6eV52c(0xc7a) = CONST 
    0xc71S0x52c: vc71V52c(0x0) = CONST 
    0xc74S0x52c: vc74V52c = ADD v52f, vc71V52c(0x0)
    0xc76S0x52c: vc76V52c(0xb6b) = CONST 
    0xc79S0x52c: JUMP vc76V52c(0xb6b), va5d, vc74V52c, vc6eV52c(0xc7a)

    Begin block 0xb6bB0xc65B0x52c
    prev=[0xc65B0x52c], succ=[0xda9B0xb6bB0xc65B0x52c]
    =================================
    0xb6cS0xc65S0x52c: vb6cVc65V52c(0xb74) = CONST 
    0xb70S0xc65S0x52c: vb70Vc65V52c(0xda9) = CONST 
    0xb73S0xc65S0x52c: JUMP vb70Vc65V52c(0xda9)

    Begin block 0xda9B0xb6bB0xc65B0x52c
    prev=[0xb6bB0xc65B0x52c], succ=[0xdd9B0xda9B0xb6bB0xc65B0x52c]
    =================================
    0xdaaS0xb6bS0xc65S0x52c: vdaaVb6bVc65V52c(0x0) = CONST 
    0xdacS0xb6bS0xc65S0x52c: vdacVb6bVc65V52c(0xdb4) = CONST 
    0xdb0S0xb6bS0xc65S0x52c: vdb0Vb6bVc65V52c(0xdd9) = CONST 
    0xdb3S0xb6bS0xc65S0x52c: JUMP vdb0Vb6bVc65V52c(0xdd9)

    Begin block 0xdd9B0xda9B0xb6bB0xc65B0x52c
    prev=[0xda9B0xb6bB0xc65B0x52c], succ=[0xdb4B0xb6bB0xc65B0x52c]
    =================================
    0xddaS0xda9S0xb6bS0xc65S0x52c: vddaVda9Vb6bVc65V52c(0x0) = CONST 
    0xddcS0xda9S0xb6bS0xc65S0x52c: vddcVda9Vb6bVc65V52c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xdf2S0xda9S0xb6bS0xc65S0x52c: vdf2Vda9Vb6bVc65V52c = AND va5d, vddcVda9Vb6bVc65V52c(0xffffffffffffffffffffffffffffffffffffffff)
    0xdf8S0xda9S0xb6bS0xc65S0x52c: JUMP vdacVb6bVc65V52c(0xdb4)

    Begin block 0xdb4B0xb6bB0xc65B0x52c
    prev=[0xdd9B0xda9B0xb6bB0xc65B0x52c], succ=[0xb74B0xc65B0x52c]
    =================================
    0xdbaS0xb6bS0xc65S0x52c: JUMP vb6cVc65V52c(0xb74)

    Begin block 0xb74B0xc65B0x52c
    prev=[0xdb4B0xb6bB0xc65B0x52c], succ=[0xc7aB0x52c]
    =================================
    0xb76S0xc65S0x52c: MSTORE vc74V52c, vdf2Vda9Vb6bVc65V52c
    0xb79S0xc65S0x52c: JUMP vc6eV52c(0xc7a)

    Begin block 0xc7aB0x52c
    prev=[0xb74B0xc65B0x52c], succ=[0x539]
    =================================
    0xc7fS0x52c: JUMP v530(0x539)

    Begin block 0x539
    prev=[0xc7aB0x52c], succ=[]
    =================================
    0x53a: v53a(0x40) = CONST 
    0x53c: v53c = MLOAD v53a(0x40)
    0x53f: v53f(0x20) = SUB vc6bV52c, v53c
    0x541: RETURN v53c, v53f(0x20)

}

