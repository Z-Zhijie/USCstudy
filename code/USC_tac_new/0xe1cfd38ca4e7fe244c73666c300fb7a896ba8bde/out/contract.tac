function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0x9, 0xd]
    =================================
    0x0: v0(0x4) = CONST 
    0x2: v2 = CALLDATASIZE 
    0x3: v3 = LT v2, v0(0x4)
    0x4: v4 = ISZERO v3
    0x5: v5(0xd) = CONST 
    0x8: JUMPI v5(0xd), v4

    Begin block 0x9
    prev=[0x0], succ=[0x51ea]
    =================================
    0x9: v9(0x51ea) = CONST 
    0xc: JUMP v9(0x51ea)

    Begin block 0x51ea
    prev=[0x9, 0x51e9], succ=[]
    =================================
    0x51eb: v51eb(0x0) = CONST 
    0x51ed: v51ed(0x0) = CONST 
    0x51ef: REVERT v51ed(0x0), v51eb(0x0)

    Begin block 0xd
    prev=[0x0], succ=[0x51f0, 0x27a]
    =================================
    0xe: ve(0x0) = CONST 
    0x10: v10 = CALLDATALOAD ve(0x0)
    0x11: v11(0x1c) = CONST 
    0x13: MSTORE v11(0x1c), v10
    0x14: v14(0x10000000000000000000000000000000000000000) = CONST 
    0x2a: v2a(0x20) = CONST 
    0x2c: MSTORE v2a(0x20), v14(0x10000000000000000000000000000000000000000)
    0x2d: v2d(0x7fffffffffffffffffffffffffffffff) = CONST 
    0x3e: v3e(0x40) = CONST 
    0x40: MSTORE v3e(0x40), v2d(0x7fffffffffffffffffffffffffffffff)
    0x41: v41(0xffffffffffffffffffffffffffffffff80000000000000000000000000000000) = CONST 
    0x62: v62(0x60) = CONST 
    0x64: MSTORE v62(0x60), v41(0xffffffffffffffffffffffffffffffff80000000000000000000000000000000)
    0x65: v65(0x12a05f1fffffffffffffffffffffffffdabf41c00) = CONST 
    0x7b: v7b(0x80) = CONST 
    0x7d: MSTORE v7b(0x80), v65(0x12a05f1fffffffffffffffffffffffffdabf41c00)
    0x7e: v7e(0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000) = CONST 
    0x9f: v9f(0xa0) = CONST 
    0xa1: MSTORE v9f(0xa0), v7e(0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000)
    0xa2: va2(0x6a954dc7) = CONST 
    0xa7: va7(0x0) = CONST 
    0xa9: va9 = MLOAD va7(0x0)
    0xaa: vaa = EQ va9, va2(0x6a954dc7)
    0xab: vab = ISZERO vaa
    0xac: vac(0x27a) = CONST 
    0xaf: JUMPI vac(0x27a), vab

    Begin block 0x51f0
    prev=[0xd], succ=[]
    =================================
    0x51f0: v51f0(0x51f2) = CONST 
    0x51f1: CALLPRIVATE v51f0(0x51f2)

    Begin block 0x27a
    prev=[0xd], succ=[0x3c8, 0x2820x0]
    =================================
    0x27b: v27b(0x0) = CONST 
    0x27d: v27d(0x1) = ISZERO v27b(0x0)
    0x27e: v27e(0x3c8) = CONST 
    0x281: JUMPI v27e(0x3c8), v27d(0x1)

    Begin block 0x3c8
    prev=[0x27a], succ=[0x4df, 0x3d0]
    =================================
    0x3c9: v3c9(0x0) = CONST 
    0x3cb: v3cb(0x1) = ISZERO v3c9(0x0)
    0x3cc: v3cc(0x4df) = CONST 
    0x3cf: JUMPI v3cc(0x4df), v3cb(0x1)

    Begin block 0x4df
    prev=[0x3c8], succ=[0x5fe, 0x4e7]
    =================================
    0x4e0: v4e0(0x0) = CONST 
    0x4e2: v4e2(0x1) = ISZERO v4e0(0x0)
    0x4e3: v4e3(0x5fe) = CONST 
    0x4e6: JUMPI v4e3(0x5fe), v4e2(0x1)

    Begin block 0x5fe
    prev=[0x4df], succ=[0x8ff, 0x606]
    =================================
    0x5ff: v5ff(0x0) = CONST 
    0x601: v601(0x1) = ISZERO v5ff(0x0)
    0x602: v602(0x8ff) = CONST 
    0x605: JUMPI v602(0x8ff), v601(0x1)

    Begin block 0x8ff
    prev=[0x5fe], succ=[0xa97, 0x907]
    =================================
    0x900: v900(0x0) = CONST 
    0x902: v902(0x1) = ISZERO v900(0x0)
    0x903: v903(0xa97) = CONST 
    0x906: JUMPI v903(0xa97), v902(0x1)

    Begin block 0xa97
    prev=[0x8ff], succ=[0x51f3, 0xce7]
    =================================
    0xa98: va98(0xbb7b8b80) = CONST 
    0xa9d: va9d(0x0) = CONST 
    0xa9f: va9f = MLOAD va9d(0x0)
    0xaa0: vaa0 = EQ va9f, va98(0xbb7b8b80)
    0xaa1: vaa1 = ISZERO vaa0
    0xaa2: vaa2(0xce7) = CONST 
    0xaa5: JUMPI vaa2(0xce7), vaa1

    Begin block 0x51f3
    prev=[0xa97], succ=[]
    =================================
    0x51f3: v51f3(0x51f5) = CONST 
    0x51f4: CALLPRIVATE v51f3(0x51f5)

    Begin block 0xce7
    prev=[0xa97], succ=[0x51f6, 0x10e2]
    =================================
    0xce8: vce8(0x3883e119) = CONST 
    0xced: vced(0x0) = CONST 
    0xcef: vcef = MLOAD vced(0x0)
    0xcf0: vcf0 = EQ vcef, vce8(0x3883e119)
    0xcf1: vcf1 = ISZERO vcf0
    0xcf2: vcf2(0x10e2) = CONST 
    0xcf5: JUMPI vcf2(0x10e2), vcf1

    Begin block 0x51f6
    prev=[0xce7], succ=[]
    =================================
    0x51f6: v51f6(0x51f8) = CONST 
    0x51f7: CALLPRIVATE v51f6(0x51f8)

    Begin block 0x10e2
    prev=[0xce7], succ=[0x51f9, 0x1ac6]
    =================================
    0x10e3: v10e3(0x4515cef3) = CONST 
    0x10e8: v10e8(0x0) = CONST 
    0x10ea: v10ea = MLOAD v10e8(0x0)
    0x10eb: v10eb = EQ v10ea, v10e3(0x4515cef3)
    0x10ec: v10ec = ISZERO v10eb
    0x10ed: v10ed(0x1ac6) = CONST 
    0x10f0: JUMPI v10ed(0x1ac6), v10ec

    Begin block 0x51f9
    prev=[0x10e2], succ=[]
    =================================
    0x51f9: v51f9(0x51fb) = CONST 
    0x51fa: CALLPRIVATE v51f9(0x51fb)

    Begin block 0x1ac6
    prev=[0x10e2], succ=[0x1eb0, 0x1ace]
    =================================
    0x1ac7: v1ac7(0x0) = CONST 
    0x1ac9: v1ac9(0x1) = ISZERO v1ac7(0x0)
    0x1aca: v1aca(0x1eb0) = CONST 
    0x1acd: JUMPI v1aca(0x1eb0), v1ac9(0x1)

    Begin block 0x1eb0
    prev=[0x1ac6], succ=[0x51fc, 0x2242]
    =================================
    0x1eb1: v1eb1(0x5e0d443f) = CONST 
    0x1eb6: v1eb6(0x0) = CONST 
    0x1eb8: v1eb8 = MLOAD v1eb6(0x0)
    0x1eb9: v1eb9 = EQ v1eb8, v1eb1(0x5e0d443f)
    0x1eba: v1eba = ISZERO v1eb9
    0x1ebb: v1ebb(0x2242) = CONST 
    0x1ebe: JUMPI v1ebb(0x2242), v1eba

    Begin block 0x51fc
    prev=[0x1eb0], succ=[]
    =================================
    0x51fc: v51fc(0x51fe) = CONST 
    0x51fd: CALLPRIVATE v51fc(0x51fe)

    Begin block 0x2242
    prev=[0x1eb0], succ=[0x51ff, 0x25cc]
    =================================
    0x2243: v2243(0x67df02ca) = CONST 
    0x2248: v2248(0x0) = CONST 
    0x224a: v224a = MLOAD v2248(0x0)
    0x224b: v224b = EQ v224a, v2243(0x67df02ca)
    0x224c: v224c = ISZERO v224b
    0x224d: v224d(0x25cc) = CONST 
    0x2250: JUMPI v224d(0x25cc), v224c

    Begin block 0x51ff
    prev=[0x2242], succ=[]
    =================================
    0x51ff: v51ff(0x5201) = CONST 
    0x5200: CALLPRIVATE v51ff(0x5201)

    Begin block 0x25cc
    prev=[0x2242], succ=[0x5202, 0x293e]
    =================================
    0x25cd: v25cd(0x7211ef7) = CONST 
    0x25d2: v25d2(0x0) = CONST 
    0x25d4: v25d4 = MLOAD v25d2(0x0)
    0x25d5: v25d5 = EQ v25d4, v25cd(0x7211ef7)
    0x25d6: v25d6 = ISZERO v25d5
    0x25d7: v25d7(0x293e) = CONST 
    0x25da: JUMPI v25d7(0x293e), v25d6

    Begin block 0x5202
    prev=[0x25cc], succ=[]
    =================================
    0x5202: v5202(0x5204) = CONST 
    0x5203: CALLPRIVATE v5202(0x5204)

    Begin block 0x293e
    prev=[0x25cc], succ=[0x5205, 0x2ca8]
    =================================
    0x293f: v293f(0xe71d1b9) = CONST 
    0x2944: v2944(0x0) = CONST 
    0x2946: v2946 = MLOAD v2944(0x0)
    0x2947: v2947 = EQ v2946, v293f(0xe71d1b9)
    0x2948: v2948 = ISZERO v2947
    0x2949: v2949(0x2ca8) = CONST 
    0x294c: JUMPI v2949(0x2ca8), v2948

    Begin block 0x5205
    prev=[0x293e], succ=[]
    =================================
    0x5205: v5205(0x5207) = CONST 
    0x5206: CALLPRIVATE v5205(0x5207)

    Begin block 0x2ca8
    prev=[0x293e], succ=[0x311a, 0x2cb0]
    =================================
    0x2ca9: v2ca9(0x0) = CONST 
    0x2cab: v2cab(0x1) = ISZERO v2ca9(0x0)
    0x2cac: v2cac(0x311a) = CONST 
    0x2caf: JUMPI v2cac(0x311a), v2cab(0x1)

    Begin block 0x311a
    prev=[0x2ca8], succ=[0x5208, 0x34a0]
    =================================
    0x311b: v311b(0x3df02124) = CONST 
    0x3120: v3120(0x0) = CONST 
    0x3122: v3122 = MLOAD v3120(0x0)
    0x3123: v3123 = EQ v3122, v311b(0x3df02124)
    0x3124: v3124 = ISZERO v3123
    0x3125: v3125(0x34a0) = CONST 
    0x3128: JUMPI v3125(0x34a0), v3124

    Begin block 0x5208
    prev=[0x311a], succ=[]
    =================================
    0x5208: v5208(0x520a) = CONST 
    0x5209: CALLPRIVATE v5208(0x520a)

    Begin block 0x34a0
    prev=[0x311a], succ=[0x520b, 0x3dd9]
    =================================
    0x34a1: v34a1(0xa6417ed6) = CONST 
    0x34a6: v34a6(0x0) = CONST 
    0x34a8: v34a8 = MLOAD v34a6(0x0)
    0x34a9: v34a9 = EQ v34a8, v34a1(0xa6417ed6)
    0x34aa: v34aa = ISZERO v34a9
    0x34ab: v34ab(0x3dd9) = CONST 
    0x34ae: JUMPI v34ab(0x3dd9), v34aa

    Begin block 0x520b
    prev=[0x34a0], succ=[]
    =================================
    0x520b: v520b(0x520d) = CONST 
    0x520c: CALLPRIVATE v520b(0x520d)

    Begin block 0x3dd9
    prev=[0x34a0], succ=[0x520e, 0x4142]
    =================================
    0x3dda: v3dda(0xecb586a5) = CONST 
    0x3ddf: v3ddf(0x0) = CONST 
    0x3de1: v3de1 = MLOAD v3ddf(0x0)
    0x3de2: v3de2 = EQ v3de1, v3dda(0xecb586a5)
    0x3de3: v3de3 = ISZERO v3de2
    0x3de4: v3de4(0x4142) = CONST 
    0x3de7: JUMPI v3de4(0x4142), v3de3

    Begin block 0x520e
    prev=[0x3dd9], succ=[]
    =================================
    0x520e: v520e(0x5210) = CONST 
    0x520f: CALLPRIVATE v520e(0x5210)

    Begin block 0x4142
    prev=[0x3dd9], succ=[0x5211, 0x4a70]
    =================================
    0x4143: v4143(0x9fdaea0c) = CONST 
    0x4148: v4148(0x0) = CONST 
    0x414a: v414a = MLOAD v4148(0x0)
    0x414b: v414b = EQ v414a, v4143(0x9fdaea0c)
    0x414c: v414c = ISZERO v414b
    0x414d: v414d(0x4a70) = CONST 
    0x4150: JUMPI v414d(0x4a70), v414c

    Begin block 0x5211
    prev=[0x4142], succ=[]
    =================================
    0x5211: v5211(0x5213) = CONST 
    0x5212: CALLPRIVATE v5211(0x5213)

    Begin block 0x4a70
    prev=[0x4142], succ=[0x5214, 0x4b32]
    =================================
    0x4a71: v4a71(0xee11f5b6) = CONST 
    0x4a76: v4a76(0x0) = CONST 
    0x4a78: v4a78 = MLOAD v4a76(0x0)
    0x4a79: v4a79 = EQ v4a78, v4a71(0xee11f5b6)
    0x4a7a: v4a7a = ISZERO v4a79
    0x4a7b: v4a7b(0x4b32) = CONST 
    0x4a7e: JUMPI v4a7b(0x4b32), v4a7a

    Begin block 0x5214
    prev=[0x4a70], succ=[]
    =================================
    0x5214: v5214(0x5216) = CONST 
    0x5215: CALLPRIVATE v5214(0x5216)

    Begin block 0x4b32
    prev=[0x4a70], succ=[0x5217, 0x4bdf]
    =================================
    0x4b33: v4b33(0x2a7dd7cd) = CONST 
    0x4b38: v4b38(0x0) = CONST 
    0x4b3a: v4b3a = MLOAD v4b38(0x0)
    0x4b3b: v4b3b = EQ v4b3a, v4b33(0x2a7dd7cd)
    0x4b3c: v4b3c = ISZERO v4b3b
    0x4b3d: v4b3d(0x4bdf) = CONST 
    0x4b40: JUMPI v4b3d(0x4bdf), v4b3c

    Begin block 0x5217
    prev=[0x4b32], succ=[]
    =================================
    0x5217: v5217(0x5219) = CONST 
    0x5218: CALLPRIVATE v5217(0x5219)

    Begin block 0x4bdf
    prev=[0x4b32], succ=[0x521a, 0x4c0d]
    =================================
    0x4be0: v4be0(0x226840fb) = CONST 
    0x4be5: v4be5(0x0) = CONST 
    0x4be7: v4be7 = MLOAD v4be5(0x0)
    0x4be8: v4be8 = EQ v4be7, v4be0(0x226840fb)
    0x4be9: v4be9 = ISZERO v4be8
    0x4bea: v4bea(0x4c0d) = CONST 
    0x4bed: JUMPI v4bea(0x4c0d), v4be9

    Begin block 0x521a
    prev=[0x4bdf], succ=[]
    =================================
    0x521a: v521a(0x521c) = CONST 
    0x521b: CALLPRIVATE v521a(0x521c)

    Begin block 0x4c0d
    prev=[0x4bdf], succ=[0x521d, 0x4cae]
    =================================
    0x4c0e: v4c0e(0x6b441a40) = CONST 
    0x4c13: v4c13(0x0) = CONST 
    0x4c15: v4c15 = MLOAD v4c13(0x0)
    0x4c16: v4c16 = EQ v4c15, v4c0e(0x6b441a40)
    0x4c17: v4c17 = ISZERO v4c16
    0x4c18: v4c18(0x4cae) = CONST 
    0x4c1b: JUMPI v4c18(0x4cae), v4c17

    Begin block 0x521d
    prev=[0x4c0d], succ=[]
    =================================
    0x521d: v521d(0x521f) = CONST 
    0x521e: CALLPRIVATE v521d(0x521f)

    Begin block 0x4cae
    prev=[0x4c0d], succ=[0x5220, 0x4d2a]
    =================================
    0x4caf: v4caf(0x6a1c05ae) = CONST 
    0x4cb4: v4cb4(0x0) = CONST 
    0x4cb6: v4cb6 = MLOAD v4cb4(0x0)
    0x4cb7: v4cb7 = EQ v4cb6, v4caf(0x6a1c05ae)
    0x4cb8: v4cb8 = ISZERO v4cb7
    0x4cb9: v4cb9(0x4d2a) = CONST 
    0x4cbc: JUMPI v4cb9(0x4d2a), v4cb8

    Begin block 0x5220
    prev=[0x4cae], succ=[]
    =================================
    0x5220: v5220(0x5222) = CONST 
    0x5221: CALLPRIVATE v5220(0x5222)

    Begin block 0x4d2a
    prev=[0x4cae], succ=[0x5223, 0x4d58]
    =================================
    0x4d2b: v4d2b(0x86fbf193) = CONST 
    0x4d30: v4d30(0x0) = CONST 
    0x4d32: v4d32 = MLOAD v4d30(0x0)
    0x4d33: v4d33 = EQ v4d32, v4d2b(0x86fbf193)
    0x4d34: v4d34 = ISZERO v4d33
    0x4d35: v4d35(0x4d58) = CONST 
    0x4d38: JUMPI v4d35(0x4d58), v4d34

    Begin block 0x5223
    prev=[0x4d2a], succ=[]
    =================================
    0x5223: v5223(0x5225) = CONST 
    0x5224: CALLPRIVATE v5223(0x5225)

    Begin block 0x4d58
    prev=[0x4d2a], succ=[0x5226, 0x4eca]
    =================================
    0x4d59: v4d59(0x30c54085) = CONST 
    0x4d5e: v4d5e(0x0) = CONST 
    0x4d60: v4d60 = MLOAD v4d5e(0x0)
    0x4d61: v4d61 = EQ v4d60, v4d59(0x30c54085)
    0x4d62: v4d62 = ISZERO v4d61
    0x4d63: v4d63(0x4eca) = CONST 
    0x4d66: JUMPI v4d63(0x4eca), v4d62

    Begin block 0x5226
    prev=[0x4d58], succ=[]
    =================================
    0x5226: v5226(0x5228) = CONST 
    0x5227: CALLPRIVATE v5226(0x5228)

    Begin block 0x4eca
    prev=[0x4d58], succ=[0x5229, 0x4f06]
    =================================
    0x4ecb: v4ecb(0xe3698853) = CONST 
    0x4ed0: v4ed0(0x0) = CONST 
    0x4ed2: v4ed2 = MLOAD v4ed0(0x0)
    0x4ed3: v4ed3 = EQ v4ed2, v4ecb(0xe3698853)
    0x4ed4: v4ed4 = ISZERO v4ed3
    0x4ed5: v4ed5(0x4f06) = CONST 
    0x4ed8: JUMPI v4ed5(0x4f06), v4ed4

    Begin block 0x5229
    prev=[0x4eca], succ=[]
    =================================
    0x5229: v5229(0x522b) = CONST 
    0x522a: CALLPRIVATE v5229(0x522b)

    Begin block 0x4f06
    prev=[0x4eca], succ=[0x522c, 0x4f34]
    =================================
    0x4f07: v4f07(0x3046f972) = CONST 
    0x4f0c: v4f0c(0x0) = CONST 
    0x4f0e: v4f0e = MLOAD v4f0c(0x0)
    0x4f0f: v4f0f = EQ v4f0e, v4f07(0x3046f972)
    0x4f10: v4f10 = ISZERO v4f0f
    0x4f11: v4f11(0x4f34) = CONST 
    0x4f14: JUMPI v4f11(0x4f34), v4f10

    Begin block 0x522c
    prev=[0x4f06], succ=[]
    =================================
    0x522c: v522c(0x522e) = CONST 
    0x522d: CALLPRIVATE v522c(0x522e)

    Begin block 0x4f34
    prev=[0x4f06], succ=[0x522f, 0x4f99]
    =================================
    0x4f35: v4f35(0x23746eb8) = CONST 
    0x4f3a: v4f3a(0x0) = CONST 
    0x4f3c: v4f3c = MLOAD v4f3a(0x0)
    0x4f3d: v4f3d = EQ v4f3c, v4f35(0x23746eb8)
    0x4f3e: v4f3e = ISZERO v4f3d
    0x4f3f: v4f3f(0x4f99) = CONST 
    0x4f42: JUMPI v4f3f(0x4f99), v4f3e

    Begin block 0x522f
    prev=[0x4f34], succ=[]
    =================================
    0x522f: v522f(0x5231) = CONST 
    0x5230: CALLPRIVATE v522f(0x5231)

    Begin block 0x4f99
    prev=[0x4f34], succ=[0x5232, 0x4ffe]
    =================================
    0x4f9a: v4f9a(0xb739953e) = CONST 
    0x4f9f: v4f9f(0x0) = CONST 
    0x4fa1: v4fa1 = MLOAD v4f9f(0x0)
    0x4fa2: v4fa2 = EQ v4fa1, v4f9a(0xb739953e)
    0x4fa3: v4fa3 = ISZERO v4fa2
    0x4fa4: v4fa4(0x4ffe) = CONST 
    0x4fa7: JUMPI v4fa4(0x4ffe), v4fa3

    Begin block 0x5232
    prev=[0x4f99], succ=[]
    =================================
    0x5232: v5232(0x5234) = CONST 
    0x5233: CALLPRIVATE v5232(0x5234)

    Begin block 0x4ffe
    prev=[0x4f99], succ=[0x5235, 0x5063]
    =================================
    0x4fff: v4fff(0x65a80d8) = CONST 
    0x5004: v5004(0x0) = CONST 
    0x5006: v5006 = MLOAD v5004(0x0)
    0x5007: v5007 = EQ v5006, v4fff(0x65a80d8)
    0x5008: v5008 = ISZERO v5007
    0x5009: v5009(0x5063) = CONST 
    0x500c: JUMPI v5009(0x5063), v5008

    Begin block 0x5235
    prev=[0x4ffe], succ=[]
    =================================
    0x5235: v5235(0x5237) = CONST 
    0x5236: CALLPRIVATE v5235(0x5237)

    Begin block 0x5063
    prev=[0x4ffe], succ=[0x5238, 0x508a]
    =================================
    0x5064: v5064(0xf446c1d0) = CONST 
    0x5069: v5069(0x0) = CONST 
    0x506b: v506b = MLOAD v5069(0x0)
    0x506c: v506c = EQ v506b, v5064(0xf446c1d0)
    0x506d: v506d = ISZERO v506c
    0x506e: v506e(0x508a) = CONST 
    0x5071: JUMPI v506e(0x508a), v506d

    Begin block 0x5238
    prev=[0x5063], succ=[]
    =================================
    0x5238: v5238(0x523a) = CONST 
    0x5239: CALLPRIVATE v5238(0x523a)

    Begin block 0x508a
    prev=[0x5063], succ=[0x523b, 0x50b1]
    =================================
    0x508b: v508b(0xddca3f43) = CONST 
    0x5090: v5090(0x0) = CONST 
    0x5092: v5092 = MLOAD v5090(0x0)
    0x5093: v5093 = EQ v5092, v508b(0xddca3f43)
    0x5094: v5094 = ISZERO v5093
    0x5095: v5095(0x50b1) = CONST 
    0x5098: JUMPI v5095(0x50b1), v5094

    Begin block 0x523b
    prev=[0x508a], succ=[]
    =================================
    0x523b: v523b(0x523d) = CONST 
    0x523c: CALLPRIVATE v523b(0x523d)

    Begin block 0x50b1
    prev=[0x508a], succ=[0x523e, 0x50d8]
    =================================
    0x50b2: v50b2(0xfee3f7f9) = CONST 
    0x50b7: v50b7(0x0) = CONST 
    0x50b9: v50b9 = MLOAD v50b7(0x0)
    0x50ba: v50ba = EQ v50b9, v50b2(0xfee3f7f9)
    0x50bb: v50bb = ISZERO v50ba
    0x50bc: v50bc(0x50d8) = CONST 
    0x50bf: JUMPI v50bc(0x50d8), v50bb

    Begin block 0x523e
    prev=[0x50b1], succ=[]
    =================================
    0x523e: v523e(0x5240) = CONST 
    0x523f: CALLPRIVATE v523e(0x5240)

    Begin block 0x50d8
    prev=[0x50b1], succ=[0x5241, 0x50ff]
    =================================
    0x50d9: v50d9(0x8da5cb5b) = CONST 
    0x50de: v50de(0x0) = CONST 
    0x50e0: v50e0 = MLOAD v50de(0x0)
    0x50e1: v50e1 = EQ v50e0, v50d9(0x8da5cb5b)
    0x50e2: v50e2 = ISZERO v50e1
    0x50e3: v50e3(0x50ff) = CONST 
    0x50e6: JUMPI v50e3(0x50ff), v50e2

    Begin block 0x5241
    prev=[0x50d8], succ=[]
    =================================
    0x5241: v5241(0x5243) = CONST 
    0x5242: CALLPRIVATE v5241(0x5243)

    Begin block 0x50ff
    prev=[0x50d8], succ=[0x5244, 0x5126]
    =================================
    0x5100: v5100(0x405e28f8) = CONST 
    0x5105: v5105(0x0) = CONST 
    0x5107: v5107 = MLOAD v5105(0x0)
    0x5108: v5108 = EQ v5107, v5100(0x405e28f8)
    0x5109: v5109 = ISZERO v5108
    0x510a: v510a(0x5126) = CONST 
    0x510d: JUMPI v510a(0x5126), v5109

    Begin block 0x5244
    prev=[0x50ff], succ=[]
    =================================
    0x5244: v5244(0x5246) = CONST 
    0x5245: CALLPRIVATE v5244(0x5246)

    Begin block 0x5126
    prev=[0x50ff], succ=[0x5247, 0x514d]
    =================================
    0x5127: v5127(0xe0a0b586) = CONST 
    0x512c: v512c(0x0) = CONST 
    0x512e: v512e = MLOAD v512c(0x0)
    0x512f: v512f = EQ v512e, v5127(0xe0a0b586)
    0x5130: v5130 = ISZERO v512f
    0x5131: v5131(0x514d) = CONST 
    0x5134: JUMPI v5131(0x514d), v5130

    Begin block 0x5247
    prev=[0x5126], succ=[]
    =================================
    0x5247: v5247(0x5249) = CONST 
    0x5248: CALLPRIVATE v5247(0x5249)

    Begin block 0x514d
    prev=[0x5126], succ=[0x524a, 0x5174]
    =================================
    0x514e: v514e(0xb4b577ad) = CONST 
    0x5153: v5153(0x0) = CONST 
    0x5155: v5155 = MLOAD v5153(0x0)
    0x5156: v5156 = EQ v5155, v514e(0xb4b577ad)
    0x5157: v5157 = ISZERO v5156
    0x5158: v5158(0x5174) = CONST 
    0x515b: JUMPI v5158(0x5174), v5157

    Begin block 0x524a
    prev=[0x514d], succ=[]
    =================================
    0x524a: v524a(0x524c) = CONST 
    0x524b: CALLPRIVATE v524a(0x524c)

    Begin block 0x5174
    prev=[0x514d], succ=[0x524d, 0x519b]
    =================================
    0x5175: v5175(0x58680d0b) = CONST 
    0x517a: v517a(0x0) = CONST 
    0x517c: v517c = MLOAD v517a(0x0)
    0x517d: v517d = EQ v517c, v5175(0x58680d0b)
    0x517e: v517e = ISZERO v517d
    0x517f: v517f(0x519b) = CONST 
    0x5182: JUMPI v517f(0x519b), v517e

    Begin block 0x524d
    prev=[0x5174], succ=[]
    =================================
    0x524d: v524d(0x524f) = CONST 
    0x524e: CALLPRIVATE v524d(0x524f)

    Begin block 0x519b
    prev=[0x5174], succ=[0x5250, 0x51c2]
    =================================
    0x519c: v519c(0xe3824462) = CONST 
    0x51a1: v51a1(0x0) = CONST 
    0x51a3: v51a3 = MLOAD v51a1(0x0)
    0x51a4: v51a4 = EQ v51a3, v519c(0xe3824462)
    0x51a5: v51a5 = ISZERO v51a4
    0x51a6: v51a6(0x51c2) = CONST 
    0x51a9: JUMPI v51a6(0x51c2), v51a5

    Begin block 0x5250
    prev=[0x519b], succ=[]
    =================================
    0x5250: v5250(0x5252) = CONST 
    0x5251: CALLPRIVATE v5250(0x5252)

    Begin block 0x51c2
    prev=[0x519b], succ=[0x5253, 0x51e9]
    =================================
    0x51c3: v51c3(0x1ec0cdc1) = CONST 
    0x51c8: v51c8(0x0) = CONST 
    0x51ca: v51ca = MLOAD v51c8(0x0)
    0x51cb: v51cb = EQ v51ca, v51c3(0x1ec0cdc1)
    0x51cc: v51cc = ISZERO v51cb
    0x51cd: v51cd(0x51e9) = CONST 
    0x51d0: JUMPI v51cd(0x51e9), v51cc

    Begin block 0x5253
    prev=[0x51c2], succ=[]
    =================================
    0x5253: v5253(0x5255) = CONST 
    0x5254: CALLPRIVATE v5253(0x5255)

    Begin block 0x51e9
    prev=[0x51c2], succ=[0x51ea]
    =================================

    Begin block 0x2cb0
    prev=[0x2ca8], succ=[0x2cd5, 0x2cd9]
    =================================
    0x2cb1: v2cb1(0x200) = CONST 
    0x2cb4: MSTORE v2cb1(0x200)
    0x2cb5: v2cb5(0x140) = CONST 
    0x2cb8: MSTORE v2cb5(0x140)
    0x2cb9: v2cb9(0x160) = CONST 
    0x2cbc: MSTORE v2cb9(0x160)
    0x2cbd: v2cbd(0x180) = CONST 
    0x2cc0: MSTORE v2cbd(0x180)
    0x2cc1: v2cc1(0x1a0) = CONST 
    0x2cc4: MSTORE v2cc1(0x1a0)
    0x2cc5: v2cc5(0x1c0) = CONST 
    0x2cc8: MSTORE v2cc5(0x1c0)
    0x2cc9: v2cc9(0x1e0) = CONST 
    0x2ccc: MSTORE v2cc9(0x1e0)
    0x2ccd: v2ccd(0xf) = CONST 
    0x2ccf: v2ccf = SLOAD v2ccd(0xf)
    0x2cd0: v2cd0 = ISZERO v2ccf
    0x2cd1: v2cd1(0x2cd9) = CONST 
    0x2cd4: JUMPI v2cd1(0x2cd9), v2cd0

    Begin block 0x2cd5
    prev=[0x2cb0], succ=[]
    =================================
    0x2cd5: v2cd5(0x0) = CONST 
    0x2cd8: REVERT v2cd5(0x0), v2cd5(0x0)

    Begin block 0x2cd9
    prev=[0x2cb0], succ=[0x3d0]
    =================================
    0x2cda: v2cda(0x220) = CONST 
    0x2cdd: v2cdd(0x140) = CONST 
    0x2ce0: v2ce0 = MLOAD v2cdd(0x140)
    0x2ce1: v2ce1(0x160) = CONST 
    0x2ce4: v2ce4 = MLOAD v2ce1(0x160)
    0x2ce5: v2ce5(0x180) = CONST 
    0x2ce8: v2ce8 = MLOAD v2ce5(0x180)
    0x2ce9: v2ce9(0x1a0) = CONST 
    0x2cec: v2cec = MLOAD v2ce9(0x1a0)
    0x2ced: v2ced(0x1c0) = CONST 
    0x2cf0: v2cf0 = MLOAD v2ced(0x1c0)
    0x2cf1: v2cf1(0x1e0) = CONST 
    0x2cf4: v2cf4 = MLOAD v2cf1(0x1e0)
    0x2cf5: v2cf5(0x200) = CONST 
    0x2cf8: v2cf8 = MLOAD v2cf5(0x200)
    0x2cf9: v2cf9(0x220) = CONST 
    0x2cfc: v2cfc = MLOAD v2cf9(0x220)
    0x2cfd: v2cfd(0x240) = CONST 
    0x2d00: v2d00 = MLOAD v2cfd(0x240)
    0x2d01: v2d01(0x260) = CONST 
    0x2d04: v2d04 = MLOAD v2d01(0x260)
    0x2d05: v2d05(0x7aca288a) = CONST 
    0x2d0a: v2d0a(0x2a0) = CONST 
    0x2d0d: MSTORE v2d0a(0x2a0), v2d05(0x7aca288a)
    0x2d0e: v2d0e(0x2c0) = CONST 
    0x2d11: v2d11(0x1a0) = CONST 
    0x2d15: v2d15 = MLOAD v2d11(0x1a0)
    0x2d17: MSTORE v2d0e(0x2c0), v2d15
    0x2d19: v2d19(0x20) = CONST 
    0x2d1b: v2d1b(0x1c0) = ADD v2d19(0x20), v2d11(0x1a0)
    0x2d1c: v2d1c = MLOAD v2d1b(0x1c0)
    0x2d1e: v2d1e(0x20) = CONST 
    0x2d20: v2d20(0x2e0) = ADD v2d1e(0x20), v2d0e(0x2c0)
    0x2d21: MSTORE v2d20(0x2e0), v2d1c
    0x2d23: v2d23(0x40) = CONST 
    0x2d25: v2d25(0x1e0) = ADD v2d23(0x40), v2d11(0x1a0)
    0x2d26: v2d26 = MLOAD v2d25(0x1e0)
    0x2d28: v2d28(0x40) = CONST 
    0x2d2a: v2d2a(0x300) = ADD v2d28(0x40), v2d0e(0x2c0)
    0x2d2b: MSTORE v2d2a(0x300), v2d26
    0x2d2e: v2d2e(0x300) = CONST 
    0x2d31: v2d31 = MLOAD v2d2e(0x300)
    0x2d32: v2d32(0x2e0) = CONST 
    0x2d35: v2d35 = MLOAD v2d32(0x2e0)
    0x2d36: v2d36(0x2c0) = CONST 
    0x2d39: v2d39 = MLOAD v2d36(0x2c0)
    0x2d3a: v2d3a(0x6) = CONST 
    0x2d3c: v2d3c(0x2d3c) = CONST 
    0x2d3d: v2d3d(0x2d42) = ADD v2d3c(0x2d3c), v2d3a(0x6)
    0x2d3e: v2d3e(0x3d0) = CONST 
    0x2d41: JUMP v2d3e(0x3d0)

    Begin block 0x3d0
    prev=[0x3c8, 0x2cd9], succ=[0x40c]
    =================================
    0x3d1: v3d1(0x1a0) = CONST 
    0x3d4: MSTORE v3d1(0x1a0), v2d3d(0x2d42)
    0x3d5: v3d5(0x140) = CONST 
    0x3d8: MSTORE v3d5(0x140), v2d39
    0x3d9: v3d9(0x160) = CONST 
    0x3dc: MSTORE v3d9(0x160), v2d35
    0x3dd: v3dd(0x180) = CONST 
    0x3e0: MSTORE v3dd(0x180), v2d31
    0x3e1: v3e1(0x1c0) = CONST 
    0x3e4: v3e4(0x140) = CONST 
    0x3e8: v3e8 = MLOAD v3e4(0x140)
    0x3ea: MSTORE v3e1(0x1c0), v3e8
    0x3ec: v3ec(0x20) = CONST 
    0x3ee: v3ee(0x160) = ADD v3ec(0x20), v3e4(0x140)
    0x3ef: v3ef = MLOAD v3ee(0x160)
    0x3f1: v3f1(0x20) = CONST 
    0x3f3: v3f3(0x1e0) = ADD v3f1(0x20), v3e1(0x1c0)
    0x3f4: MSTORE v3f3(0x1e0), v3ef
    0x3f6: v3f6(0x40) = CONST 
    0x3f8: v3f8(0x180) = ADD v3f6(0x40), v3e4(0x140)
    0x3f9: v3f9 = MLOAD v3f8(0x180)
    0x3fb: v3fb(0x40) = CONST 
    0x3fd: v3fd(0x200) = ADD v3fb(0x40), v3e1(0x1c0)
    0x3fe: MSTORE v3fd(0x200), v3f9
    0x401: v401(0x220) = CONST 
    0x404: v404(0x0) = CONST 
    0x406: v406(0x3) = CONST 
    0x40a: MSTORE v401(0x220), v404(0x0)
    0x40b: v40b(0x3) = ADD v406(0x3), v404(0x0)

    Begin block 0x40c
    prev=[0x3d0, 0x491], succ=[0x41c, 0x420]
    =================================
    0x40d: v40d(0x1c0) = CONST 
    0x410: v410(0x220) = CONST 
    0x413: v413 = MLOAD v410(0x220)
    0x414: v414(0x3) = CONST 
    0x417: v417 = LT v413, v414(0x3)
    0x418: v418(0x420) = CONST 
    0x41b: JUMPI v418(0x420), v417

    Begin block 0x41c
    prev=[0x40c], succ=[]
    =================================
    0x41c: v41c(0x0) = CONST 
    0x41f: REVERT v41c(0x0), v41c(0x0)

    Begin block 0x420
    prev=[0x40c], succ=[0x432, 0x436]
    =================================
    0x421: v421(0x20) = CONST 
    0x423: v423 = MUL v421(0x20), v413
    0x424: v424 = ADD v423, v40d(0x1c0)
    0x425: v425 = MLOAD v424
    0x426: v426(0x220) = CONST 
    0x429: v429 = MLOAD v426(0x220)
    0x42a: v42a(0x3) = CONST 
    0x42d: v42d = LT v429, v42a(0x3)
    0x42e: v42e(0x436) = CONST 
    0x431: JUMPI v42e(0x436), v42d

    Begin block 0x432
    prev=[0x420], succ=[]
    =================================
    0x432: v432(0x0) = CONST 
    0x435: REVERT v432(0x0), v432(0x0)

    Begin block 0x436
    prev=[0x420], succ=[0x452, 0x456]
    =================================
    0x437: v437(0x2) = CONST 
    0x439: v439(0xc0) = CONST 
    0x43b: MSTORE v439(0xc0), v437(0x2)
    0x43c: v43c(0x20) = CONST 
    0x43e: v43e(0xc0) = CONST 
    0x440: v440 = SHA3 v43e(0xc0), v43c(0x20)
    0x441: v441 = ADD v440, v429
    0x442: v442 = SLOAD v441
    0x445: v445 = MUL v425, v442
    0x447: v447 = ISZERO v425
    0x44b: v44b = DIV v445, v425
    0x44c: v44c = EQ v44b, v442
    0x44d: v44d = OR v44c, v447
    0x44e: v44e(0x456) = CONST 
    0x451: JUMPI v44e(0x456), v44d

    Begin block 0x452
    prev=[0x436], succ=[]
    =================================
    0x452: v452(0x0) = CONST 
    0x455: REVERT v452(0x0), v452(0x0)

    Begin block 0x456
    prev=[0x436], succ=[0x46d, 0x471]
    =================================
    0x45e: v45e(0xde0b6b3a7640000) = CONST 
    0x469: v469(0x471) = CONST 
    0x46c: JUMPI v469(0x471), v45e(0xde0b6b3a7640000)

    Begin block 0x46d
    prev=[0x456], succ=[]
    =================================
    0x46d: v46d(0x0) = CONST 
    0x470: REVERT v46d(0x0), v46d(0x0)

    Begin block 0x471
    prev=[0x456], succ=[0x487, 0x48b]
    =================================
    0x473: v473 = DIV v445, v45e(0xde0b6b3a7640000)
    0x478: v478(0x1c0) = CONST 
    0x47b: v47b(0x220) = CONST 
    0x47e: v47e = MLOAD v47b(0x220)
    0x47f: v47f(0x3) = CONST 
    0x482: v482 = LT v47e, v47f(0x3)
    0x483: v483(0x48b) = CONST 
    0x486: JUMPI v483(0x48b), v482

    Begin block 0x487
    prev=[0x471], succ=[]
    =================================
    0x487: v487(0x0) = CONST 
    0x48a: REVERT v487(0x0), v487(0x0)

    Begin block 0x48b
    prev=[0x471], succ=[0x491]
    =================================
    0x48c: v48c(0x20) = CONST 
    0x48e: v48e = MUL v48c(0x20), v47e
    0x48f: v48f = ADD v48e, v478(0x1c0)
    0x490: MSTORE v48f, v473

    Begin block 0x491
    prev=[0x48b], succ=[0x40c, 0x4a1]
    =================================
    0x493: v493 = MLOAD v401(0x220)
    0x494: v494(0x1) = CONST 
    0x496: v496 = ADD v494(0x1), v493
    0x499: MSTORE v401(0x220), v496
    0x49b: v49b = EQ v40b(0x3), v496
    0x49c: v49c = ISZERO v49b
    0x49d: v49d(0x40c) = CONST 
    0x4a0: JUMPI v49d(0x40c), v49c

    Begin block 0x4a1
    prev=[0x491], succ=[0x4aa]
    =================================
    0x4a4: v4a4(0x60) = CONST 
    0x4a6: v4a6(0x240) = CONST 
    0x4a9: MSTORE v4a6(0x240), v4a4(0x60)

    Begin block 0x4aa
    prev=[0x4bc, 0x4a1], succ=[0x4b8, 0x4bc]
    =================================
    0x4ab: v4ab(0x0) = CONST 
    0x4ad: v4ad(0x240) = CONST 
    0x4b0: v4b0 = MLOAD v4ad(0x240)
    0x4b1: v4b1 = GT v4b0, v4ab(0x0)
    0x4b2: v4b2 = ISZERO v4b1
    0x4b3: v4b3 = ISZERO v4b2
    0x4b4: v4b4(0x4bc) = CONST 
    0x4b7: JUMPI v4b4(0x4bc), v4b3

    Begin block 0x4b8
    prev=[0x4aa], succ=[0x4d8]
    =================================
    0x4b8: v4b8(0x4d8) = CONST 
    0x4bb: JUMP v4b8(0x4d8)

    Begin block 0x4d8
    prev=[0x4b8], succ=[]
    =================================
    0x4d9: v4d9(0x1a0) = CONST 
    0x4dc: v4dc = MLOAD v4d9(0x1a0)
    0x4dd: JUMP v4dc

    Begin block 0x4bc
    prev=[0x4aa], succ=[0x4aa]
    =================================
    0x4bd: v4bd(0x20) = CONST 
    0x4bf: v4bf(0x240) = CONST 
    0x4c2: v4c2 = MLOAD v4bf(0x240)
    0x4c3: v4c3 = SUB v4c2, v4bd(0x20)
    0x4c4: v4c4(0x1c0) = CONST 
    0x4c7: v4c7 = ADD v4c4(0x1c0), v4c3
    0x4c8: v4c8 = MLOAD v4c7
    0x4c9: v4c9(0x20) = CONST 
    0x4cb: v4cb(0x240) = CONST 
    0x4ce: v4ce = MLOAD v4cb(0x240)
    0x4cf: v4cf = SUB v4ce, v4c9(0x20)
    0x4d0: v4d0(0x240) = CONST 
    0x4d3: MSTORE v4d0(0x240), v4cf
    0x4d4: v4d4(0x4aa) = CONST 
    0x4d7: JUMP v4d4(0x4aa)

    Begin block 0x1ace
    prev=[0x1ac6], succ=[0x1b1b, 0x1b1f]
    =================================
    0x1acf: v1acf(0x200) = CONST 
    0x1ad2: MSTORE v1acf(0x200)
    0x1ad3: v1ad3(0x140) = CONST 
    0x1ad6: MSTORE v1ad3(0x140)
    0x1ad7: v1ad7(0x160) = CONST 
    0x1ada: MSTORE v1ad7(0x160)
    0x1adb: v1adb(0x180) = CONST 
    0x1ade: MSTORE v1adb(0x180)
    0x1adf: v1adf(0x1a0) = CONST 
    0x1ae2: MSTORE v1adf(0x1a0)
    0x1ae3: v1ae3(0x1c0) = CONST 
    0x1ae6: MSTORE v1ae3(0x1c0)
    0x1ae7: v1ae7(0x1e0) = CONST 
    0x1aea: MSTORE v1ae7(0x1e0)
    0x1aeb: v1aeb(0x0) = CONST 
    0x1aed: v1aed(0x140) = CONST 
    0x1af0: v1af0 = MLOAD v1aed(0x140)
    0x1af1: v1af1 = SLT v1af0, v1aeb(0x0)
    0x1af2: v1af2 = ISZERO v1af1
    0x1af3: v1af3(0x160) = CONST 
    0x1af6: v1af6 = MLOAD v1af3(0x160)
    0x1af7: v1af7(0x140) = CONST 
    0x1afa: v1afa = MLOAD v1af7(0x140)
    0x1afb: v1afb = EQ v1afa, v1af6
    0x1afc: v1afc = ISZERO v1afb
    0x1afd: v1afd = AND v1afc, v1af2
    0x1afe: v1afe(0x0) = CONST 
    0x1b00: v1b00(0x160) = CONST 
    0x1b03: v1b03 = MLOAD v1b00(0x160)
    0x1b04: v1b04 = SLT v1b03, v1afe(0x0)
    0x1b05: v1b05 = ISZERO v1b04
    0x1b06: v1b06 = AND v1b05, v1afd
    0x1b07: v1b07(0x3) = CONST 
    0x1b09: v1b09(0x140) = CONST 
    0x1b0c: v1b0c = MLOAD v1b09(0x140)
    0x1b0d: v1b0d = SLT v1b0c, v1b07(0x3)
    0x1b0e: v1b0e = AND v1b0d, v1b06
    0x1b0f: v1b0f(0x3) = CONST 
    0x1b11: v1b11(0x160) = CONST 
    0x1b14: v1b14 = MLOAD v1b11(0x160)
    0x1b15: v1b15 = SLT v1b14, v1b0f(0x3)
    0x1b16: v1b16 = AND v1b15, v1b0e
    0x1b17: v1b17(0x1b1f) = CONST 
    0x1b1a: JUMPI v1b17(0x1b1f), v1b16

    Begin block 0x1b1b
    prev=[0x1ace], succ=[]
    =================================
    0x1b1b: v1b1b(0x0) = CONST 
    0x1b1e: REVERT v1b1b(0x0), v1b1b(0x0)

    Begin block 0x1b1f
    prev=[0x1ace], succ=[0x606]
    =================================
    0x1b20: v1b20(0x140) = CONST 
    0x1b23: v1b23 = MLOAD v1b20(0x140)
    0x1b24: v1b24(0x160) = CONST 
    0x1b27: v1b27 = MLOAD v1b24(0x160)
    0x1b28: v1b28(0x180) = CONST 
    0x1b2b: v1b2b = MLOAD v1b28(0x180)
    0x1b2c: v1b2c(0x1a0) = CONST 
    0x1b2f: v1b2f = MLOAD v1b2c(0x1a0)
    0x1b30: v1b30(0x1c0) = CONST 
    0x1b33: v1b33 = MLOAD v1b30(0x1c0)
    0x1b34: v1b34(0x1e0) = CONST 
    0x1b37: v1b37 = MLOAD v1b34(0x1e0)
    0x1b38: v1b38(0x200) = CONST 
    0x1b3b: v1b3b = MLOAD v1b38(0x200)
    0x1b3c: v1b3c(0x220) = CONST 
    0x1b3f: v1b3f = MLOAD v1b3c(0x220)
    0x1b40: v1b40(0x9123128a) = CONST 
    0x1b45: v1b45(0x260) = CONST 
    0x1b48: MSTORE v1b45(0x260), v1b40(0x9123128a)
    0x1b49: v1b49(0x280) = CONST 
    0x1b4c: v1b4c(0x1a0) = CONST 
    0x1b50: v1b50 = MLOAD v1b4c(0x1a0)
    0x1b52: MSTORE v1b49(0x280), v1b50
    0x1b54: v1b54(0x20) = CONST 
    0x1b56: v1b56(0x1c0) = ADD v1b54(0x20), v1b4c(0x1a0)
    0x1b57: v1b57 = MLOAD v1b56(0x1c0)
    0x1b59: v1b59(0x20) = CONST 
    0x1b5b: v1b5b(0x2a0) = ADD v1b59(0x20), v1b49(0x280)
    0x1b5c: MSTORE v1b5b(0x2a0), v1b57
    0x1b5e: v1b5e(0x40) = CONST 
    0x1b60: v1b60(0x1e0) = ADD v1b5e(0x40), v1b4c(0x1a0)
    0x1b61: v1b61 = MLOAD v1b60(0x1e0)
    0x1b63: v1b63(0x40) = CONST 
    0x1b65: v1b65(0x2c0) = ADD v1b63(0x40), v1b49(0x280)
    0x1b66: MSTORE v1b65(0x2c0), v1b61
    0x1b69: v1b69(0x2c0) = CONST 
    0x1b6c: v1b6c = MLOAD v1b69(0x2c0)
    0x1b6d: v1b6d(0x2a0) = CONST 
    0x1b70: v1b70 = MLOAD v1b6d(0x2a0)
    0x1b71: v1b71(0x280) = CONST 
    0x1b74: v1b74 = MLOAD v1b71(0x280)
    0x1b75: v1b75(0x6) = CONST 
    0x1b77: v1b77(0x1b77) = CONST 
    0x1b78: v1b78(0x1b7d) = ADD v1b77(0x1b77), v1b75(0x6)
    0x1b79: v1b79(0x606) = CONST 
    0x1b7c: JUMP v1b79(0x606)

    Begin block 0x606
    prev=[0x5fe, 0x1b1f], succ=[0x628]
    =================================
    0x607: v607(0x1a0) = CONST 
    0x60a: MSTORE v607(0x1a0), v1b78(0x1b7d)
    0x60b: v60b(0x140) = CONST 
    0x60e: MSTORE v60b(0x140), v1b74
    0x60f: v60f(0x160) = CONST 
    0x612: MSTORE v60f(0x160), v1b70
    0x613: v613(0x180) = CONST 
    0x616: MSTORE v613(0x180), v1b6c
    0x617: v617(0x0) = CONST 
    0x619: v619(0x1c0) = CONST 
    0x61c: MSTORE v619(0x1c0), v617(0x0)
    0x61d: v61d(0x200) = CONST 
    0x620: v620(0x0) = CONST 
    0x622: v622(0x3) = CONST 
    0x626: MSTORE v61d(0x200), v620(0x0)
    0x627: v627(0x3) = ADD v622(0x3), v620(0x0)

    Begin block 0x628
    prev=[0x606, 0x65b], succ=[0x64c, 0x650]
    =================================
    0x629: v629(0x20) = CONST 
    0x62b: v62b(0x200) = CONST 
    0x62e: v62e = MLOAD v62b(0x200)
    0x62f: v62f = MUL v62e, v629(0x20)
    0x630: v630(0x140) = CONST 
    0x633: v633 = ADD v630(0x140), v62f
    0x634: v634 = MLOAD v633
    0x635: v635(0x1e0) = CONST 
    0x638: MSTORE v635(0x1e0), v634
    0x639: v639(0x1c0) = CONST 
    0x63d: v63d = MLOAD v639(0x1c0)
    0x63e: v63e(0x1e0) = CONST 
    0x641: v641 = MLOAD v63e(0x1e0)
    0x645: v645 = ADD v63d, v641
    0x646: v646 = LT v645, v63d
    0x647: v647 = ISZERO v646
    0x648: v648(0x650) = CONST 
    0x64b: JUMPI v648(0x650), v647

    Begin block 0x64c
    prev=[0x628], succ=[]
    =================================
    0x64c: v64c(0x0) = CONST 
    0x64f: REVERT v64c(0x0), v64c(0x0)

    Begin block 0x650
    prev=[0x628], succ=[0x65b]
    =================================
    0x653: v653 = ADD v63d, v641
    0x659: MSTORE v639(0x1c0), v653

    Begin block 0x65b
    prev=[0x650], succ=[0x628, 0x66b]
    =================================
    0x65d: v65d = MLOAD v61d(0x200)
    0x65e: v65e(0x1) = CONST 
    0x660: v660 = ADD v65e(0x1), v65d
    0x663: MSTORE v61d(0x200), v660
    0x665: v665 = EQ v627(0x3), v660
    0x666: v666 = ISZERO v665
    0x667: v667(0x628) = CONST 
    0x66a: JUMPI v667(0x628), v666

    Begin block 0x66b
    prev=[0x65b], succ=[0x678, 0x686]
    =================================
    0x66e: v66e(0x1c0) = CONST 
    0x671: v671 = MLOAD v66e(0x1c0)
    0x672: v672 = ISZERO v671
    0x673: v673 = ISZERO v672
    0x674: v674(0x686) = CONST 
    0x677: JUMPI v674(0x686), v673

    Begin block 0x678
    prev=[0x66b], succ=[]
    =================================
    0x678: v678(0x0) = CONST 
    0x67a: v67a(0x0) = CONST 
    0x67c: MSTORE v67a(0x0), v678(0x0)
    0x67d: v67d(0x0) = CONST 
    0x67f: v67f = MLOAD v67d(0x0)
    0x680: v680(0x1a0) = CONST 
    0x683: v683 = MLOAD v680(0x1a0)
    0x684: JUMP v683

    Begin block 0x686
    prev=[0x66b], succ=[0x6a9, 0x6ad]
    =================================
    0x687: v687(0x0) = CONST 
    0x689: v689(0x240) = CONST 
    0x68c: MSTORE v689(0x240), v687(0x0)
    0x68d: v68d(0x1c0) = CONST 
    0x690: v690 = MLOAD v68d(0x1c0)
    0x691: v691(0x260) = CONST 
    0x694: MSTORE v691(0x260), v690
    0x695: v695(0x3) = CONST 
    0x697: v697 = SLOAD v695(0x3)
    0x698: v698(0x3) = CONST 
    0x69c: v69c = MUL v697, v698(0x3)
    0x69e: v69e = ISZERO v697
    0x6a2: v6a2 = DIV v69c, v697
    0x6a3: v6a3 = EQ v6a2, v698(0x3)
    0x6a4: v6a4 = OR v6a3, v69e
    0x6a5: v6a5(0x6ad) = CONST 
    0x6a8: JUMPI v6a5(0x6ad), v6a4

    Begin block 0x6a9
    prev=[0x686], succ=[]
    =================================
    0x6a9: v6a9(0x0) = CONST 
    0x6ac: REVERT v6a9(0x0), v6a9(0x0)

    Begin block 0x6ad
    prev=[0x686], succ=[0x6c4]
    =================================
    0x6b5: v6b5(0x280) = CONST 
    0x6b8: MSTORE v6b5(0x280), v69c
    0x6b9: v6b9(0x2a0) = CONST 
    0x6bc: v6bc(0x0) = CONST 
    0x6be: v6be(0xff) = CONST 
    0x6c2: MSTORE v6b9(0x2a0), v6bc(0x0)
    0x6c3: v6c3(0xff) = ADD v6be(0xff), v6bc(0x0)

    Begin block 0x6c4
    prev=[0x6ad, 0x8db], succ=[0x6d8]
    =================================
    0x6c5: v6c5(0x260) = CONST 
    0x6c8: v6c8 = MLOAD v6c5(0x260)
    0x6c9: v6c9(0x2c0) = CONST 
    0x6cc: MSTORE v6c9(0x2c0), v6c8
    0x6cd: v6cd(0x300) = CONST 
    0x6d0: v6d0(0x0) = CONST 
    0x6d2: v6d2(0x3) = CONST 
    0x6d6: MSTORE v6cd(0x300), v6d0(0x0)
    0x6d7: v6d7(0x3) = ADD v6d2(0x3), v6d0(0x0)

    Begin block 0x6d8
    prev=[0x6c4, 0x75a], succ=[0x700, 0x704]
    =================================
    0x6d9: v6d9(0x20) = CONST 
    0x6db: v6db(0x300) = CONST 
    0x6de: v6de = MLOAD v6db(0x300)
    0x6df: v6df = MUL v6de, v6d9(0x20)
    0x6e0: v6e0(0x140) = CONST 
    0x6e3: v6e3 = ADD v6e0(0x140), v6df
    0x6e4: v6e4 = MLOAD v6e3
    0x6e5: v6e5(0x2e0) = CONST 
    0x6e8: MSTORE v6e5(0x2e0), v6e4
    0x6e9: v6e9(0x2c0) = CONST 
    0x6ec: v6ec = MLOAD v6e9(0x2c0)
    0x6ed: v6ed(0x260) = CONST 
    0x6f0: v6f0 = MLOAD v6ed(0x260)
    0x6f3: v6f3 = MUL v6ec, v6f0
    0x6f5: v6f5 = ISZERO v6ec
    0x6f9: v6f9 = DIV v6f3, v6ec
    0x6fa: v6fa = EQ v6f9, v6f0
    0x6fb: v6fb = OR v6fa, v6f5
    0x6fc: v6fc(0x704) = CONST 
    0x6ff: JUMPI v6fc(0x704), v6fb

    Begin block 0x700
    prev=[0x6d8], succ=[]
    =================================
    0x700: v700(0x0) = CONST 
    0x703: REVERT v700(0x0), v700(0x0)

    Begin block 0x704
    prev=[0x6d8], succ=[0x721, 0x725]
    =================================
    0x70c: v70c(0x2e0) = CONST 
    0x70f: v70f = MLOAD v70c(0x2e0)
    0x710: v710(0x3) = CONST 
    0x714: v714 = MUL v70f, v710(0x3)
    0x716: v716 = ISZERO v70f
    0x71a: v71a = DIV v714, v70f
    0x71b: v71b = EQ v71a, v710(0x3)
    0x71c: v71c = OR v71b, v716
    0x71d: v71d(0x725) = CONST 
    0x720: JUMPI v71d(0x725), v71c

    Begin block 0x721
    prev=[0x704], succ=[]
    =================================
    0x721: v721(0x0) = CONST 
    0x724: REVERT v721(0x0), v721(0x0)

    Begin block 0x725
    prev=[0x704], succ=[0x739, 0x73d]
    =================================
    0x72d: v72d(0x1) = CONST 
    0x732: v732 = ADD v714, v72d(0x1)
    0x733: v733 = LT v732, v714
    0x734: v734 = ISZERO v733
    0x735: v735(0x73d) = CONST 
    0x738: JUMPI v735(0x73d), v734

    Begin block 0x739
    prev=[0x725], succ=[]
    =================================
    0x739: v739(0x0) = CONST 
    0x73c: REVERT v739(0x0), v739(0x0)

    Begin block 0x73d
    prev=[0x725], succ=[0x74b, 0x74f]
    =================================
    0x740: v740 = ADD v714, v72d(0x1)
    0x747: v747(0x74f) = CONST 
    0x74a: JUMPI v747(0x74f), v740

    Begin block 0x74b
    prev=[0x73d], succ=[]
    =================================
    0x74b: v74b(0x0) = CONST 
    0x74e: REVERT v74b(0x0), v74b(0x0)

    Begin block 0x74f
    prev=[0x73d], succ=[0x75a]
    =================================
    0x751: v751 = DIV v6f3, v740
    0x756: v756(0x2c0) = CONST 
    0x759: MSTORE v756(0x2c0), v751

    Begin block 0x75a
    prev=[0x74f], succ=[0x6d8, 0x76a]
    =================================
    0x75c: v75c = MLOAD v6cd(0x300)
    0x75d: v75d(0x1) = CONST 
    0x75f: v75f = ADD v75d(0x1), v75c
    0x762: MSTORE v6cd(0x300), v75f
    0x764: v764 = EQ v6d7(0x3), v75f
    0x765: v765 = ISZERO v764
    0x766: v766(0x6d8) = CONST 
    0x769: JUMPI v766(0x6d8), v765

    Begin block 0x76a
    prev=[0x75a], succ=[0x78c, 0x790]
    =================================
    0x76d: v76d(0x260) = CONST 
    0x770: v770 = MLOAD v76d(0x260)
    0x771: v771(0x240) = CONST 
    0x774: MSTORE v771(0x240), v770
    0x775: v775(0x280) = CONST 
    0x778: v778 = MLOAD v775(0x280)
    0x779: v779(0x1c0) = CONST 
    0x77c: v77c = MLOAD v779(0x1c0)
    0x77f: v77f = MUL v778, v77c
    0x781: v781 = ISZERO v778
    0x785: v785 = DIV v77f, v778
    0x786: v786 = EQ v785, v77c
    0x787: v787 = OR v786, v781
    0x788: v788(0x790) = CONST 
    0x78b: JUMPI v788(0x790), v787

    Begin block 0x78c
    prev=[0x76a], succ=[]
    =================================
    0x78c: v78c(0x0) = CONST 
    0x78f: REVERT v78c(0x0), v78c(0x0)

    Begin block 0x790
    prev=[0x76a], succ=[0x7ad, 0x7b1]
    =================================
    0x798: v798(0x2c0) = CONST 
    0x79b: v79b = MLOAD v798(0x2c0)
    0x79c: v79c(0x3) = CONST 
    0x7a0: v7a0 = MUL v79b, v79c(0x3)
    0x7a2: v7a2 = ISZERO v79b
    0x7a6: v7a6 = DIV v7a0, v79b
    0x7a7: v7a7 = EQ v7a6, v79c(0x3)
    0x7a8: v7a8 = OR v7a7, v7a2
    0x7a9: v7a9(0x7b1) = CONST 
    0x7ac: JUMPI v7a9(0x7b1), v7a8

    Begin block 0x7ad
    prev=[0x790], succ=[]
    =================================
    0x7ad: v7ad(0x0) = CONST 
    0x7b0: REVERT v7ad(0x0), v7ad(0x0)

    Begin block 0x7b1
    prev=[0x790], succ=[0x7c3, 0x7c7]
    =================================
    0x7bc: v7bc = ADD v77f, v7a0
    0x7bd: v7bd = LT v7bc, v77f
    0x7be: v7be = ISZERO v7bd
    0x7bf: v7bf(0x7c7) = CONST 
    0x7c2: JUMPI v7bf(0x7c7), v7be

    Begin block 0x7c3
    prev=[0x7b1], succ=[]
    =================================
    0x7c3: v7c3(0x0) = CONST 
    0x7c6: REVERT v7c3(0x0), v7c3(0x0)

    Begin block 0x7c7
    prev=[0x7b1], succ=[0x7e2, 0x7e6]
    =================================
    0x7ca: v7ca = ADD v77f, v7a0
    0x7cf: v7cf(0x260) = CONST 
    0x7d2: v7d2 = MLOAD v7cf(0x260)
    0x7d5: v7d5 = MUL v7ca, v7d2
    0x7d7: v7d7 = ISZERO v7ca
    0x7db: v7db = DIV v7d5, v7ca
    0x7dc: v7dc = EQ v7db, v7d2
    0x7dd: v7dd = OR v7dc, v7d7
    0x7de: v7de(0x7e6) = CONST 
    0x7e1: JUMPI v7de(0x7e6), v7dd

    Begin block 0x7e2
    prev=[0x7c7], succ=[]
    =================================
    0x7e2: v7e2(0x0) = CONST 
    0x7e5: REVERT v7e2(0x0), v7e2(0x0)

    Begin block 0x7e6
    prev=[0x7c7], succ=[0x7fc, 0x800]
    =================================
    0x7ee: v7ee(0x280) = CONST 
    0x7f1: v7f1 = MLOAD v7ee(0x280)
    0x7f2: v7f2(0x1) = CONST 
    0x7f6: v7f6 = LT v7f1, v7f2(0x1)
    0x7f7: v7f7 = ISZERO v7f6
    0x7f8: v7f8(0x800) = CONST 
    0x7fb: JUMPI v7f8(0x800), v7f7

    Begin block 0x7fc
    prev=[0x7e6], succ=[]
    =================================
    0x7fc: v7fc(0x0) = CONST 
    0x7ff: REVERT v7fc(0x0), v7fc(0x0)

    Begin block 0x800
    prev=[0x7e6], succ=[0x81b, 0x81f]
    =================================
    0x803: v803 = SUB v7f1, v7f2(0x1)
    0x808: v808(0x260) = CONST 
    0x80b: v80b = MLOAD v808(0x260)
    0x80e: v80e = MUL v803, v80b
    0x810: v810 = ISZERO v803
    0x814: v814 = DIV v80e, v803
    0x815: v815 = EQ v814, v80b
    0x816: v816 = OR v815, v810
    0x817: v817(0x81f) = CONST 
    0x81a: JUMPI v817(0x81f), v816

    Begin block 0x81b
    prev=[0x800], succ=[]
    =================================
    0x81b: v81b(0x0) = CONST 
    0x81e: REVERT v81b(0x0), v81b(0x0)

    Begin block 0x81f
    prev=[0x800], succ=[0x83c, 0x840]
    =================================
    0x827: v827(0x4) = CONST 
    0x829: v829(0x2c0) = CONST 
    0x82c: v82c = MLOAD v829(0x2c0)
    0x82f: v82f = MUL v827(0x4), v82c
    0x831: v831(0x0) = ISZERO v827(0x4)
    0x835: v835 = DIV v82f, v827(0x4)
    0x836: v836 = EQ v835, v82c
    0x837: v837 = OR v836, v831(0x0)
    0x838: v838(0x840) = CONST 
    0x83b: JUMPI v838(0x840), v837

    Begin block 0x83c
    prev=[0x81f], succ=[]
    =================================
    0x83c: v83c(0x0) = CONST 
    0x83f: REVERT v83c(0x0), v83c(0x0)

    Begin block 0x840
    prev=[0x81f], succ=[0x852, 0x856]
    =================================
    0x84b: v84b = ADD v80e, v82f
    0x84c: v84c = LT v84b, v80e
    0x84d: v84d = ISZERO v84c
    0x84e: v84e(0x856) = CONST 
    0x851: JUMPI v84e(0x856), v84d

    Begin block 0x852
    prev=[0x840], succ=[]
    =================================
    0x852: v852(0x0) = CONST 
    0x855: REVERT v852(0x0), v852(0x0)

    Begin block 0x856
    prev=[0x840], succ=[0x864, 0x868]
    =================================
    0x859: v859 = ADD v80e, v82f
    0x860: v860(0x868) = CONST 
    0x863: JUMPI v860(0x868), v859

    Begin block 0x864
    prev=[0x856], succ=[]
    =================================
    0x864: v864(0x0) = CONST 
    0x867: REVERT v864(0x0), v864(0x0)

    Begin block 0x868
    prev=[0x856], succ=[0x881, 0x8af]
    =================================
    0x86a: v86a = DIV v7d5, v859
    0x86f: v86f(0x260) = CONST 
    0x872: MSTORE v86f(0x260), v86a
    0x873: v873(0x240) = CONST 
    0x876: v876 = MLOAD v873(0x240)
    0x877: v877(0x260) = CONST 
    0x87a: v87a = MLOAD v877(0x260)
    0x87b: v87b = GT v87a, v876
    0x87c: v87c = ISZERO v87b
    0x87d: v87d(0x8af) = CONST 
    0x880: JUMPI v87d(0x8af), v87c

    Begin block 0x881
    prev=[0x868], succ=[0x893, 0x897]
    =================================
    0x881: v881(0x1) = CONST 
    0x883: v883(0x260) = CONST 
    0x886: v886 = MLOAD v883(0x260)
    0x887: v887(0x240) = CONST 
    0x88a: v88a = MLOAD v887(0x240)
    0x88d: v88d = LT v886, v88a
    0x88e: v88e = ISZERO v88d
    0x88f: v88f(0x897) = CONST 
    0x892: JUMPI v88f(0x897), v88e

    Begin block 0x893
    prev=[0x881], succ=[]
    =================================
    0x893: v893(0x0) = CONST 
    0x896: REVERT v893(0x0), v893(0x0)

    Begin block 0x897
    prev=[0x881], succ=[0x8a6, 0x8aa]
    =================================
    0x89a: v89a = SUB v886, v88a
    0x89f: v89f = GT v89a, v881(0x1)
    0x8a0: v8a0 = ISZERO v89f
    0x8a1: v8a1 = ISZERO v8a0
    0x8a2: v8a2(0x8aa) = CONST 
    0x8a5: JUMPI v8a2(0x8aa), v8a1

    Begin block 0x8a6
    prev=[0x897], succ=[0x8eb]
    =================================
    0x8a6: v8a6(0x8eb) = CONST 
    0x8a9: JUMP v8a6(0x8eb)

    Begin block 0x8eb
    prev=[0x8a6, 0x8d5, 0x8db], succ=[]
    =================================
    0x8ee: v8ee(0x260) = CONST 
    0x8f1: v8f1 = MLOAD v8ee(0x260)
    0x8f2: v8f2(0x0) = CONST 
    0x8f4: MSTORE v8f2(0x0), v8f1
    0x8f5: v8f5(0x0) = CONST 
    0x8f7: v8f7 = MLOAD v8f5(0x0)
    0x8f8: v8f8(0x1a0) = CONST 
    0x8fb: v8fb = MLOAD v8f8(0x1a0)
    0x8fc: JUMP v8fb

    Begin block 0x8aa
    prev=[0x897], succ=[0x8da]
    =================================
    0x8ab: v8ab(0x8da) = CONST 
    0x8ae: JUMP v8ab(0x8da)

    Begin block 0x8da
    prev=[0x8aa, 0x8d9], succ=[0x8db]
    =================================

    Begin block 0x8db
    prev=[0x8da], succ=[0x8eb, 0x6c4]
    =================================
    0x8dd: v8dd = MLOAD v6b9(0x2a0)
    0x8de: v8de(0x1) = CONST 
    0x8e0: v8e0 = ADD v8de(0x1), v8dd
    0x8e3: MSTORE v6b9(0x2a0), v8e0
    0x8e5: v8e5 = EQ v6c3(0xff), v8e0
    0x8e6: v8e6 = ISZERO v8e5
    0x8e7: v8e7(0x6c4) = CONST 
    0x8ea: JUMPI v8e7(0x6c4), v8e6

    Begin block 0x8af
    prev=[0x868], succ=[0x8c2, 0x8c6]
    =================================
    0x8b0: v8b0(0x1) = CONST 
    0x8b2: v8b2(0x240) = CONST 
    0x8b5: v8b5 = MLOAD v8b2(0x240)
    0x8b6: v8b6(0x260) = CONST 
    0x8b9: v8b9 = MLOAD v8b6(0x260)
    0x8bc: v8bc = LT v8b5, v8b9
    0x8bd: v8bd = ISZERO v8bc
    0x8be: v8be(0x8c6) = CONST 
    0x8c1: JUMPI v8be(0x8c6), v8bd

    Begin block 0x8c2
    prev=[0x8af], succ=[]
    =================================
    0x8c2: v8c2(0x0) = CONST 
    0x8c5: REVERT v8c2(0x0), v8c2(0x0)

    Begin block 0x8c6
    prev=[0x8af], succ=[0x8d5, 0x8d9]
    =================================
    0x8c9: v8c9 = SUB v8b5, v8b9
    0x8ce: v8ce = GT v8c9, v8b0(0x1)
    0x8cf: v8cf = ISZERO v8ce
    0x8d0: v8d0 = ISZERO v8cf
    0x8d1: v8d1(0x8d9) = CONST 
    0x8d4: JUMPI v8d1(0x8d9), v8d0

    Begin block 0x8d5
    prev=[0x8c6], succ=[0x8eb]
    =================================
    0x8d5: v8d5(0x8eb) = CONST 
    0x8d8: JUMP v8d5(0x8eb)

    Begin block 0x8d9
    prev=[0x8c6], succ=[0x8da]
    =================================

    Begin block 0x907
    prev=[0x8ff], succ=[0x92b]
    =================================
    0x908: v908(0x200) = CONST 
    0x90b: MSTORE v908(0x200)
    0x90c: v90c(0x140) = CONST 
    0x90f: MSTORE v90c(0x140)
    0x910: v910(0x160) = CONST 
    0x913: MSTORE v910(0x160)
    0x914: v914(0x180) = CONST 
    0x917: MSTORE v914(0x180)
    0x918: v918(0x1a0) = CONST 
    0x91b: MSTORE v918(0x1a0)
    0x91c: v91c(0x1c0) = CONST 
    0x91f: MSTORE v91c(0x1c0)
    0x920: v920(0x1e0) = CONST 
    0x923: MSTORE v920(0x1e0)
    0x924: v924(0x140) = CONST 
    0x927: v927(0x560) = CONST 
    0x92a: MSTORE v927(0x560), v924(0x140)

    Begin block 0x92b
    prev=[0x949, 0x907], succ=[0x949, 0x94d]
    =================================
    0x92c: v92c(0x560) = CONST 
    0x92f: v92f = MLOAD v92c(0x560)
    0x930: v930 = MLOAD v92f
    0x931: v931(0x20) = CONST 
    0x933: v933(0x560) = CONST 
    0x936: v936 = MLOAD v933(0x560)
    0x937: v937 = ADD v936, v931(0x20)
    0x938: v938(0x560) = CONST 
    0x93b: MSTORE v938(0x560), v937
    0x93c: v93c(0x560) = CONST 
    0x93f: v93f(0x560) = CONST 
    0x942: v942 = MLOAD v93f(0x560)
    0x943: v943 = LT v942, v93c(0x560)
    0x944: v944 = ISZERO v943
    0x945: v945(0x94d) = CONST 
    0x948: JUMPI v945(0x94d), v944

    Begin block 0x949
    prev=[0x92b], succ=[0x92b]
    =================================
    0x949: v949(0x92b) = CONST 
    0x94c: JUMP v949(0x92b)

    Begin block 0x94d
    prev=[0x92b], succ=[0x961]
    =================================
    0x94e: v94e(0x9123128a) = CONST 
    0x953: v953(0x580) = CONST 
    0x956: MSTORE v953(0x580), v94e(0x9123128a)
    0x957: v957(0x5a0) = CONST 
    0x95a: v95a(0x140) = CONST 
    0x95d: v95d(0x3c0) = CONST 
    0x960: MSTORE v95d(0x3c0), v95a(0x140)

    Begin block 0x961
    prev=[0x97f, 0x94d], succ=[0x97f, 0x983]
    =================================
    0x962: v962(0x3c0) = CONST 
    0x965: v965 = MLOAD v962(0x3c0)
    0x966: v966 = MLOAD v965
    0x967: v967(0x20) = CONST 
    0x969: v969(0x3c0) = CONST 
    0x96c: v96c = MLOAD v969(0x3c0)
    0x96d: v96d = ADD v96c, v967(0x20)
    0x96e: v96e(0x3c0) = CONST 
    0x971: MSTORE v96e(0x3c0), v96d
    0x972: v972(0x3c0) = CONST 
    0x975: v975(0x3c0) = CONST 
    0x978: v978 = MLOAD v975(0x3c0)
    0x979: v979 = LT v978, v972(0x3c0)
    0x97a: v97a = ISZERO v979
    0x97b: v97b(0x983) = CONST 
    0x97e: JUMPI v97b(0x983), v97a

    Begin block 0x97f
    prev=[0x961], succ=[0x961]
    =================================
    0x97f: v97f(0x961) = CONST 
    0x982: JUMP v97f(0x961)

    Begin block 0x983
    prev=[0x961], succ=[0x4e7]
    =================================
    0x984: v984(0x68a4db61) = CONST 
    0x989: v989(0x3e0) = CONST 
    0x98c: MSTORE v989(0x3e0), v984(0x68a4db61)
    0x98d: v98d(0x400) = CONST 
    0x990: v990(0x140) = CONST 
    0x994: v994 = MLOAD v990(0x140)
    0x996: MSTORE v98d(0x400), v994
    0x998: v998(0x20) = CONST 
    0x99a: v99a(0x160) = ADD v998(0x20), v990(0x140)
    0x99b: v99b = MLOAD v99a(0x160)
    0x99d: v99d(0x20) = CONST 
    0x99f: v99f(0x420) = ADD v99d(0x20), v98d(0x400)
    0x9a0: MSTORE v99f(0x420), v99b
    0x9a2: v9a2(0x40) = CONST 
    0x9a4: v9a4(0x180) = ADD v9a2(0x40), v990(0x140)
    0x9a5: v9a5 = MLOAD v9a4(0x180)
    0x9a7: v9a7(0x40) = CONST 
    0x9a9: v9a9(0x440) = ADD v9a7(0x40), v98d(0x400)
    0x9aa: MSTORE v9a9(0x440), v9a5
    0x9ad: v9ad(0x460) = CONST 
    0x9b0: v9b0(0x1a0) = CONST 
    0x9b4: v9b4 = MLOAD v9b0(0x1a0)
    0x9b6: MSTORE v9ad(0x460), v9b4
    0x9b8: v9b8(0x20) = CONST 
    0x9ba: v9ba(0x1c0) = ADD v9b8(0x20), v9b0(0x1a0)
    0x9bb: v9bb = MLOAD v9ba(0x1c0)
    0x9bd: v9bd(0x20) = CONST 
    0x9bf: v9bf(0x480) = ADD v9bd(0x20), v9ad(0x460)
    0x9c0: MSTORE v9bf(0x480), v9bb
    0x9c2: v9c2(0x40) = CONST 
    0x9c4: v9c4(0x1e0) = ADD v9c2(0x40), v9b0(0x1a0)
    0x9c5: v9c5 = MLOAD v9c4(0x1e0)
    0x9c7: v9c7(0x40) = CONST 
    0x9c9: v9c9(0x4a0) = ADD v9c7(0x40), v9ad(0x460)
    0x9ca: MSTORE v9c9(0x4a0), v9c5
    0x9cd: v9cd(0x4a0) = CONST 
    0x9d0: v9d0 = MLOAD v9cd(0x4a0)
    0x9d1: v9d1(0x480) = CONST 
    0x9d4: v9d4 = MLOAD v9d1(0x480)
    0x9d5: v9d5(0x460) = CONST 
    0x9d8: v9d8 = MLOAD v9d5(0x460)
    0x9d9: v9d9(0x440) = CONST 
    0x9dc: v9dc = MLOAD v9d9(0x440)
    0x9dd: v9dd(0x420) = CONST 
    0x9e0: v9e0 = MLOAD v9dd(0x420)
    0x9e1: v9e1(0x400) = CONST 
    0x9e4: v9e4 = MLOAD v9e1(0x400)
    0x9e5: v9e5(0x6) = CONST 
    0x9e7: v9e7(0x9e7) = CONST 
    0x9e8: v9e8(0x9ed) = ADD v9e7(0x9e7), v9e5(0x6)
    0x9e9: v9e9(0x4e7) = CONST 
    0x9ec: JUMP v9e9(0x4e7)

    Begin block 0x4e7
    prev=[0x4df, 0x983], succ=[0x52f]
    =================================
    0x4e8: v4e8(0x200) = CONST 
    0x4eb: MSTORE v4e8(0x200), v9e8(0x9ed)
    0x4ec: v4ec(0x140) = CONST 
    0x4ef: MSTORE v4ec(0x140), v9e4
    0x4f0: v4f0(0x160) = CONST 
    0x4f3: MSTORE v4f0(0x160), v9e0
    0x4f4: v4f4(0x180) = CONST 
    0x4f7: MSTORE v4f4(0x180), v9dc
    0x4f8: v4f8(0x1a0) = CONST 
    0x4fb: MSTORE v4f8(0x1a0), v9d8
    0x4fc: v4fc(0x1c0) = CONST 
    0x4ff: MSTORE v4fc(0x1c0), v9d4
    0x500: v500(0x1e0) = CONST 
    0x503: MSTORE v500(0x1e0), v9d0
    0x504: v504(0x220) = CONST 
    0x507: v507(0x140) = CONST 
    0x50b: v50b = MLOAD v507(0x140)
    0x50d: MSTORE v504(0x220), v50b
    0x50f: v50f(0x20) = CONST 
    0x511: v511(0x160) = ADD v50f(0x20), v507(0x140)
    0x512: v512 = MLOAD v511(0x160)
    0x514: v514(0x20) = CONST 
    0x516: v516(0x240) = ADD v514(0x20), v504(0x220)
    0x517: MSTORE v516(0x240), v512
    0x519: v519(0x40) = CONST 
    0x51b: v51b(0x180) = ADD v519(0x40), v507(0x140)
    0x51c: v51c = MLOAD v51b(0x180)
    0x51e: v51e(0x40) = CONST 
    0x520: v520(0x260) = ADD v51e(0x40), v504(0x220)
    0x521: MSTORE v520(0x260), v51c
    0x524: v524(0x280) = CONST 
    0x527: v527(0x0) = CONST 
    0x529: v529(0x3) = CONST 
    0x52d: MSTORE v524(0x280), v527(0x0)
    0x52e: v52e(0x3) = ADD v529(0x3), v527(0x0)

    Begin block 0x52f
    prev=[0x4e7, 0x5b0], succ=[0x53f, 0x543]
    =================================
    0x530: v530(0x220) = CONST 
    0x533: v533(0x280) = CONST 
    0x536: v536 = MLOAD v533(0x280)
    0x537: v537(0x3) = CONST 
    0x53a: v53a = LT v536, v537(0x3)
    0x53b: v53b(0x543) = CONST 
    0x53e: JUMPI v53b(0x543), v53a

    Begin block 0x53f
    prev=[0x52f], succ=[]
    =================================
    0x53f: v53f(0x0) = CONST 
    0x542: REVERT v53f(0x0), v53f(0x0)

    Begin block 0x543
    prev=[0x52f], succ=[0x558, 0x55c]
    =================================
    0x544: v544(0x20) = CONST 
    0x546: v546 = MUL v544(0x20), v536
    0x547: v547 = ADD v546, v530(0x220)
    0x548: v548 = MLOAD v547
    0x549: v549(0x1a0) = CONST 
    0x54c: v54c(0x280) = CONST 
    0x54f: v54f = MLOAD v54c(0x280)
    0x550: v550(0x3) = CONST 
    0x553: v553 = LT v54f, v550(0x3)
    0x554: v554(0x55c) = CONST 
    0x557: JUMPI v554(0x55c), v553

    Begin block 0x558
    prev=[0x543], succ=[]
    =================================
    0x558: v558(0x0) = CONST 
    0x55b: REVERT v558(0x0), v558(0x0)

    Begin block 0x55c
    prev=[0x543], succ=[0x571, 0x575]
    =================================
    0x55d: v55d(0x20) = CONST 
    0x55f: v55f = MUL v55d(0x20), v54f
    0x560: v560 = ADD v55f, v549(0x1a0)
    0x561: v561 = MLOAD v560
    0x564: v564 = MUL v548, v561
    0x566: v566 = ISZERO v548
    0x56a: v56a = DIV v564, v548
    0x56b: v56b = EQ v56a, v561
    0x56c: v56c = OR v56b, v566
    0x56d: v56d(0x575) = CONST 
    0x570: JUMPI v56d(0x575), v56c

    Begin block 0x571
    prev=[0x55c], succ=[]
    =================================
    0x571: v571(0x0) = CONST 
    0x574: REVERT v571(0x0), v571(0x0)

    Begin block 0x575
    prev=[0x55c], succ=[0x58c, 0x590]
    =================================
    0x57d: v57d(0xde0b6b3a7640000) = CONST 
    0x588: v588(0x590) = CONST 
    0x58b: JUMPI v588(0x590), v57d(0xde0b6b3a7640000)

    Begin block 0x58c
    prev=[0x575], succ=[]
    =================================
    0x58c: v58c(0x0) = CONST 
    0x58f: REVERT v58c(0x0), v58c(0x0)

    Begin block 0x590
    prev=[0x575], succ=[0x5a6, 0x5aa]
    =================================
    0x592: v592 = DIV v564, v57d(0xde0b6b3a7640000)
    0x597: v597(0x220) = CONST 
    0x59a: v59a(0x280) = CONST 
    0x59d: v59d = MLOAD v59a(0x280)
    0x59e: v59e(0x3) = CONST 
    0x5a1: v5a1 = LT v59d, v59e(0x3)
    0x5a2: v5a2(0x5aa) = CONST 
    0x5a5: JUMPI v5a2(0x5aa), v5a1

    Begin block 0x5a6
    prev=[0x590], succ=[]
    =================================
    0x5a6: v5a6(0x0) = CONST 
    0x5a9: REVERT v5a6(0x0), v5a6(0x0)

    Begin block 0x5aa
    prev=[0x590], succ=[0x5b0]
    =================================
    0x5ab: v5ab(0x20) = CONST 
    0x5ad: v5ad = MUL v5ab(0x20), v59d
    0x5ae: v5ae = ADD v5ad, v597(0x220)
    0x5af: MSTORE v5ae, v592

    Begin block 0x5b0
    prev=[0x5aa], succ=[0x52f, 0x5c0]
    =================================
    0x5b2: v5b2 = MLOAD v524(0x280)
    0x5b3: v5b3(0x1) = CONST 
    0x5b5: v5b5 = ADD v5b3(0x1), v5b2
    0x5b8: MSTORE v524(0x280), v5b5
    0x5ba: v5ba = EQ v52e(0x3), v5b5
    0x5bb: v5bb = ISZERO v5ba
    0x5bc: v5bc(0x52f) = CONST 
    0x5bf: JUMPI v5bc(0x52f), v5bb

    Begin block 0x5c0
    prev=[0x5b0], succ=[0x5c9]
    =================================
    0x5c3: v5c3(0x60) = CONST 
    0x5c5: v5c5(0x2a0) = CONST 
    0x5c8: MSTORE v5c5(0x2a0), v5c3(0x60)

    Begin block 0x5c9
    prev=[0x5db, 0x5c0], succ=[0x5d7, 0x5db]
    =================================
    0x5ca: v5ca(0x0) = CONST 
    0x5cc: v5cc(0x2a0) = CONST 
    0x5cf: v5cf = MLOAD v5cc(0x2a0)
    0x5d0: v5d0 = GT v5cf, v5ca(0x0)
    0x5d1: v5d1 = ISZERO v5d0
    0x5d2: v5d2 = ISZERO v5d1
    0x5d3: v5d3(0x5db) = CONST 
    0x5d6: JUMPI v5d3(0x5db), v5d2

    Begin block 0x5d7
    prev=[0x5c9], succ=[0x5f7]
    =================================
    0x5d7: v5d7(0x5f7) = CONST 
    0x5da: JUMP v5d7(0x5f7)

    Begin block 0x5f7
    prev=[0x5d7], succ=[]
    =================================
    0x5f8: v5f8(0x200) = CONST 
    0x5fb: v5fb = MLOAD v5f8(0x200)
    0x5fc: JUMP v5fb

    Begin block 0x5db
    prev=[0x5c9], succ=[0x5c9]
    =================================
    0x5dc: v5dc(0x20) = CONST 
    0x5de: v5de(0x2a0) = CONST 
    0x5e1: v5e1 = MLOAD v5de(0x2a0)
    0x5e2: v5e2 = SUB v5e1, v5dc(0x20)
    0x5e3: v5e3(0x220) = CONST 
    0x5e6: v5e6 = ADD v5e3(0x220), v5e2
    0x5e7: v5e7 = MLOAD v5e6
    0x5e8: v5e8(0x20) = CONST 
    0x5ea: v5ea(0x2a0) = CONST 
    0x5ed: v5ed = MLOAD v5ea(0x2a0)
    0x5ee: v5ee = SUB v5ed, v5e8(0x20)
    0x5ef: v5ef(0x2a0) = CONST 
    0x5f2: MSTORE v5ef(0x2a0), v5ee
    0x5f3: v5f3(0x5c9) = CONST 
    0x5f6: JUMP v5f3(0x5c9)

    Begin block 0x2820x0
    prev=[0x27a], succ=[0x2b00x0]
    =================================
    0x2830x0: v0283(0x140) = CONST 
    0x2860x0: MSTORE v0283(0x140)
    0x2870x0: v0287(0x160) = CONST 
    0x28a0x0: v028a(0xe8d4a51000) = CONST 
    0x2910x0: MSTORE v0287(0x160), v028a(0xe8d4a51000)
    0x2920x0: v0292(0x1) = CONST 
    0x2950x0: v0295(0x20) = CONST 
    0x2970x0: v0297(0x180) = ADD v0295(0x20), v0287(0x160)
    0x2980x0: MSTORE v0297(0x180), v0292(0x1)
    0x2990x0: v0299(0xe8d4a51000) = CONST 
    0x2a00x0: v02a0(0x40) = CONST 
    0x2a20x0: v02a2(0x1a0) = ADD v02a0(0x40), v0287(0x160)
    0x2a30x0: MSTORE v02a2(0x1a0), v0299(0xe8d4a51000)
    0x2a50x0: v02a5(0x1c0) = CONST 
    0x2a80x0: v02a8(0x0) = CONST 
    0x2aa0x0: v02aa(0x3) = CONST 
    0x2ae0x0: MSTORE v02a5(0x1c0), v02a8(0x0)
    0x2af0x0: v02af(0x3) = ADD v02aa(0x3), v02a8(0x0)

    Begin block 0x2b00x0
    prev=[0x37a0x0, 0x2820x0], succ=[0x2c00x0, 0x2c40x0]
    =================================
    0x2b10x0: v02b1(0x160) = CONST 
    0x2b40x0: v02b4(0x1c0) = CONST 
    0x2b70x0: v02b7 = MLOAD v02b4(0x1c0)
    0x2b80x0: v02b8(0x3) = CONST 
    0x2bb0x0: v02bb = LT v02b7, v02b8(0x3)
    0x2bc0x0: v02bc(0x2c4) = CONST 
    0x2bf0x0: JUMPI v02bc(0x2c4), v02bb

    Begin block 0x2c00x0
    prev=[0x2b00x0], succ=[]
    =================================
    0x2c00x0: v02c0(0x0) = CONST 
    0x2c30x0: REVERT v02c0(0x0), v02c0(0x0)

    Begin block 0x2c40x0
    prev=[0x2b00x0], succ=[0x2d70x0, 0x2db0x0]
    =================================
    0x2c50x0: v02c5(0x20) = CONST 
    0x2c70x0: v02c7 = MUL v02c5(0x20), v02b7
    0x2c80x0: v02c8 = ADD v02c7, v02b1(0x160)
    0x2ca0x0: v02ca = MLOAD v02c8
    0x2cb0x0: v02cb(0x1c0) = CONST 
    0x2ce0x0: v02ce = MLOAD v02cb(0x1c0)
    0x2cf0x0: v02cf(0x3) = CONST 
    0x2d20x0: v02d2 = LT v02ce, v02cf(0x3)
    0x2d30x0: v02d3(0x2db) = CONST 
    0x2d60x0: JUMPI v02d3(0x2db), v02d2

    Begin block 0x2d70x0
    prev=[0x2c40x0], succ=[]
    =================================
    0x2d70x0: v02d7(0x0) = CONST 
    0x2da0x0: REVERT v02d7(0x0), v02d7(0x0)

    Begin block 0x2db0x0
    prev=[0x2c40x0], succ=[0x2ed0x0, 0x2f10x0]
    =================================
    0x2dc0x0: v02dc(0x0) = CONST 
    0x2de0x0: v02de(0xc0) = CONST 
    0x2e00x0: MSTORE v02de(0xc0), v02dc(0x0)
    0x2e10x0: v02e1(0x20) = CONST 
    0x2e30x0: v02e3(0xc0) = CONST 
    0x2e50x0: v02e5 = SHA3 v02e3(0xc0), v02e1(0x20)
    0x2e60x0: v02e6 = ADD v02e5, v02ce
    0x2e70x0: v02e7 = SLOAD v02e6
    0x2e80x0: v02e8 = EXTCODESIZE v02e7
    0x2e90x0: v02e9(0x2f1) = CONST 
    0x2ec0x0: JUMPI v02e9(0x2f1), v02e8

    Begin block 0x2ed0x0
    prev=[0x2db0x0], succ=[]
    =================================
    0x2ed0x0: v02ed(0x0) = CONST 
    0x2f00x0: REVERT v02ed(0x0), v02ed(0x0)

    Begin block 0x2f10x0
    prev=[0x2db0x0], succ=[0x2fe0x0, 0x3020x0]
    =================================
    0x2f20x0: v02f2(0x1c0) = CONST 
    0x2f50x0: v02f5 = MLOAD v02f2(0x1c0)
    0x2f60x0: v02f6(0x3) = CONST 
    0x2f90x0: v02f9 = LT v02f5, v02f6(0x3)
    0x2fa0x0: v02fa(0x302) = CONST 
    0x2fd0x0: JUMPI v02fa(0x302), v02f9

    Begin block 0x2fe0x0
    prev=[0x2f10x0], succ=[]
    =================================
    0x2fe0x0: v02fe(0x0) = CONST 
    0x3010x0: REVERT v02fe(0x0), v02fe(0x0)

    Begin block 0x3020x0
    prev=[0x2f10x0], succ=[0x3150x0, 0x3190x0]
    =================================
    0x3030x0: v0303(0x0) = CONST 
    0x3050x0: v0305(0xc0) = CONST 
    0x3070x0: MSTORE v0305(0xc0), v0303(0x0)
    0x3080x0: v0308(0x20) = CONST 
    0x30a0x0: v030a(0xc0) = CONST 
    0x30c0x0: v030c = SHA3 v030a(0xc0), v0308(0x20)
    0x30d0x0: v030d = ADD v030c, v02f5
    0x30e0x0: v030e = SLOAD v030d
    0x30f0x0: v030f = ADDRESS 
    0x3100x0: v0310 = XOR v030f, v030e
    0x3110x0: v0311(0x319) = CONST 
    0x3140x0: JUMPI v0311(0x319), v0310

    Begin block 0x3150x0
    prev=[0x3020x0], succ=[]
    =================================
    0x3150x0: v0315(0x0) = CONST 
    0x3180x0: REVERT v0315(0x0), v0315(0x0)

    Begin block 0x3190x0
    prev=[0x3020x0], succ=[0x3390x0, 0x33d0x0]
    =================================
    0x31a0x0: v031a(0x20) = CONST 
    0x31c0x0: v031c(0x240) = CONST 
    0x31f0x0: v031f(0x4) = CONST 
    0x3210x0: v0321(0x77c7b8fc) = CONST 
    0x3260x0: v0326(0x1e0) = CONST 
    0x3290x0: MSTORE v0326(0x1e0), v0321(0x77c7b8fc)
    0x32a0x0: v032a(0x1fc) = CONST 
    0x32d0x0: v032d(0x1c0) = CONST 
    0x3300x0: v0330 = MLOAD v032d(0x1c0)
    0x3310x0: v0331(0x3) = CONST 
    0x3340x0: v0334 = LT v0330, v0331(0x3)
    0x3350x0: v0335(0x33d) = CONST 
    0x3380x0: JUMPI v0335(0x33d), v0334

    Begin block 0x3390x0
    prev=[0x3190x0], succ=[]
    =================================
    0x3390x0: v0339(0x0) = CONST 
    0x33c0x0: REVERT v0339(0x0), v0339(0x0)

    Begin block 0x33d0x0
    prev=[0x3190x0], succ=[0x3500x0, 0x3540x0]
    =================================
    0x33e0x0: v033e(0x0) = CONST 
    0x3400x0: v0340(0xc0) = CONST 
    0x3420x0: MSTORE v0340(0xc0), v033e(0x0)
    0x3430x0: v0343(0x20) = CONST 
    0x3450x0: v0345(0xc0) = CONST 
    0x3470x0: v0347 = SHA3 v0345(0xc0), v0343(0x20)
    0x3480x0: v0348 = ADD v0347, v0330
    0x3490x0: v0349 = SLOAD v0348
    0x34a0x0: v034a = GAS 
    0x34b0x0: v034b = STATICCALL v034a, v0349, v032a(0x1fc), v031f(0x4), v031c(0x240), v031a(0x20)
    0x34c0x0: v034c(0x354) = CONST 
    0x34f0x0: JUMPI v034c(0x354), v034b

    Begin block 0x3500x0
    prev=[0x33d0x0], succ=[]
    =================================
    0x3500x0: v0350(0x0) = CONST 
    0x3530x0: REVERT v0350(0x0), v0350(0x0)

    Begin block 0x3540x0
    prev=[0x33d0x0], succ=[0x36b0x0, 0x36f0x0]
    =================================
    0x3550x0: v0355(0x0) = CONST 
    0x3580x0: v0358(0x240) = CONST 
    0x35b0x0: v035b = MLOAD v0358(0x240)
    0x35e0x0: v035e = MUL v02ca, v035b
    0x3600x0: v0360 = ISZERO v02ca
    0x3640x0: v0364 = DIV v035e, v02ca
    0x3650x0: v0365 = EQ v0364, v035b
    0x3660x0: v0366 = OR v0365, v0360
    0x3670x0: v0367(0x36f) = CONST 
    0x36a0x0: JUMPI v0367(0x36f), v0366

    Begin block 0x36b0x0
    prev=[0x3540x0], succ=[]
    =================================
    0x36b0x0: v036b(0x0) = CONST 
    0x36e0x0: REVERT v036b(0x0), v036b(0x0)

    Begin block 0x36f0x0
    prev=[0x3540x0], succ=[0x37a0x0]
    =================================
    0x3780x0: MSTORE v02c8, v035e

    Begin block 0x37a0x0
    prev=[0x36f0x0], succ=[0x2b00x0, 0x38a0x0]
    =================================
    0x37c0x0: v037c = MLOAD v02a5(0x1c0)
    0x37d0x0: v037d(0x1) = CONST 
    0x37f0x0: v037f = ADD v037d(0x1), v037c
    0x3820x0: MSTORE v02a5(0x1c0), v037f
    0x3840x0: v0384 = EQ v02af(0x3), v037f
    0x3850x0: v0385 = ISZERO v0384
    0x3860x0: v0386(0x2b0) = CONST 
    0x3890x0: JUMPI v0386(0x2b0), v0385

    Begin block 0x38a0x0
    prev=[0x37a0x0], succ=[0x3930x0]
    =================================
    0x38d0x0: v038d(0x60) = CONST 
    0x38f0x0: v038f(0x260) = CONST 
    0x3920x0: MSTORE v038f(0x260), v038d(0x60)

    Begin block 0x3930x0
    prev=[0x3a50x0, 0x38a0x0], succ=[0x3a10x0, 0x3a50x0]
    =================================
    0x3940x0: v0394(0x0) = CONST 
    0x3960x0: v0396(0x260) = CONST 
    0x3990x0: v0399 = MLOAD v0396(0x260)
    0x39a0x0: v039a = GT v0399, v0394(0x0)
    0x39b0x0: v039b = ISZERO v039a
    0x39c0x0: v039c = ISZERO v039b
    0x39d0x0: v039d(0x3a5) = CONST 
    0x3a00x0: JUMPI v039d(0x3a5), v039c

    Begin block 0x3a10x0
    prev=[0x3930x0], succ=[0x3c10x0]
    =================================
    0x3a10x0: v03a1(0x3c1) = CONST 
    0x3a40x0: JUMP v03a1(0x3c1)

    Begin block 0x3c10x0
    prev=[0x3a10x0], succ=[]
    =================================
    0x3c20x0: v03c2(0x140) = CONST 
    0x3c50x0: v03c5 = MLOAD v03c2(0x140)
    0x3c60x0: JUMP v03c5

    Begin block 0x3a50x0
    prev=[0x3930x0], succ=[0x3930x0]
    =================================
    0x3a60x0: v03a6(0x20) = CONST 
    0x3a80x0: v03a8(0x260) = CONST 
    0x3ab0x0: v03ab = MLOAD v03a8(0x260)
    0x3ac0x0: v03ac = SUB v03ab, v03a6(0x20)
    0x3ad0x0: v03ad(0x160) = CONST 
    0x3b00x0: v03b0 = ADD v03ad(0x160), v03ac
    0x3b10x0: v03b1 = MLOAD v03b0
    0x3b20x0: v03b2(0x20) = CONST 
    0x3b40x0: v03b4(0x260) = CONST 
    0x3b70x0: v03b7 = MLOAD v03b4(0x260)
    0x3b80x0: v03b8 = SUB v03b7, v03b2(0x20)
    0x3b90x0: v03b9(0x260) = CONST 
    0x3bc0x0: MSTORE v03b9(0x260), v03b8
    0x3bd0x0: v03bd(0x393) = CONST 
    0x3c00x0: JUMP v03bd(0x393)

}

function initialize(address[3],address[3],address,uint256,uint256)() public {
    Begin block 0x51f2
    prev=[], succ=[0xba, 0xbe]
    =================================
    0xb0: vb0(0xffffff) = CONST 
    0xb4: vb4 = SLOAD vb0(0xffffff)
    0xb5: vb5 = ISZERO vb4
    0xb6: vb6(0xbe) = CONST 
    0xb9: JUMPI vb6(0xbe), vb5

    Begin block 0xba
    prev=[0x51f2], succ=[]
    =================================
    0xba: vba(0x0) = CONST 
    0xbd: REVERT vba(0x0), vba(0x0)

    Begin block 0xbe
    prev=[0x51f2], succ=[0xcc, 0xd0]
    =================================
    0xbf: vbf(0x1) = CONST 
    0xc1: vc1(0xffffff) = CONST 
    0xc5: SSTORE vc1(0xffffff), vbf(0x1)
    0xc6: vc6 = CALLVALUE 
    0xc7: vc7 = ISZERO vc6
    0xc8: vc8(0xd0) = CONST 
    0xcb: JUMPI vc8(0xd0), vc7

    Begin block 0xcc
    prev=[0xbe], succ=[]
    =================================
    0xcc: vcc(0x0) = CONST 
    0xcf: REVERT vcc(0x0), vcc(0x0)

    Begin block 0xd0
    prev=[0xbe], succ=[0xdd, 0xe1]
    =================================
    0xd1: vd1(0x4) = CONST 
    0xd3: vd3 = CALLDATALOAD vd1(0x4)
    0xd4: vd4(0x20) = CONST 
    0xd6: vd6 = MLOAD vd4(0x20)
    0xd8: vd8 = LT vd3, vd6
    0xd9: vd9(0xe1) = CONST 
    0xdc: JUMPI vd9(0xe1), vd8

    Begin block 0xdd
    prev=[0xd0], succ=[]
    =================================
    0xdd: vdd(0x0) = CONST 
    0xe0: REVERT vdd(0x0), vdd(0x0)

    Begin block 0xe1
    prev=[0xd0], succ=[0xef, 0xf3]
    =================================
    0xe3: ve3(0x24) = CONST 
    0xe5: ve5 = CALLDATALOAD ve3(0x24)
    0xe6: ve6(0x20) = CONST 
    0xe8: ve8 = MLOAD ve6(0x20)
    0xea: vea = LT ve5, ve8
    0xeb: veb(0xf3) = CONST 
    0xee: JUMPI veb(0xf3), vea

    Begin block 0xef
    prev=[0xe1], succ=[]
    =================================
    0xef: vef(0x0) = CONST 
    0xf2: REVERT vef(0x0), vef(0x0)

    Begin block 0xf3
    prev=[0xe1], succ=[0x101, 0x105]
    =================================
    0xf5: vf5(0x44) = CONST 
    0xf7: vf7 = CALLDATALOAD vf5(0x44)
    0xf8: vf8(0x20) = CONST 
    0xfa: vfa = MLOAD vf8(0x20)
    0xfc: vfc = LT vf7, vfa
    0xfd: vfd(0x105) = CONST 
    0x100: JUMPI vfd(0x105), vfc

    Begin block 0x101
    prev=[0xf3], succ=[]
    =================================
    0x101: v101(0x0) = CONST 
    0x104: REVERT v101(0x0), v101(0x0)

    Begin block 0x105
    prev=[0xf3], succ=[0x113, 0x117]
    =================================
    0x107: v107(0x64) = CONST 
    0x109: v109 = CALLDATALOAD v107(0x64)
    0x10a: v10a(0x20) = CONST 
    0x10c: v10c = MLOAD v10a(0x20)
    0x10e: v10e = LT v109, v10c
    0x10f: v10f(0x117) = CONST 
    0x112: JUMPI v10f(0x117), v10e

    Begin block 0x113
    prev=[0x105], succ=[]
    =================================
    0x113: v113(0x0) = CONST 
    0x116: REVERT v113(0x0), v113(0x0)

    Begin block 0x117
    prev=[0x105], succ=[0x125, 0x129]
    =================================
    0x119: v119(0x84) = CONST 
    0x11b: v11b = CALLDATALOAD v119(0x84)
    0x11c: v11c(0x20) = CONST 
    0x11e: v11e = MLOAD v11c(0x20)
    0x120: v120 = LT v11b, v11e
    0x121: v121(0x129) = CONST 
    0x124: JUMPI v121(0x129), v120

    Begin block 0x125
    prev=[0x117], succ=[]
    =================================
    0x125: v125(0x0) = CONST 
    0x128: REVERT v125(0x0), v125(0x0)

    Begin block 0x129
    prev=[0x117], succ=[0x137, 0x13b]
    =================================
    0x12b: v12b(0xa4) = CONST 
    0x12d: v12d = CALLDATALOAD v12b(0xa4)
    0x12e: v12e(0x20) = CONST 
    0x130: v130 = MLOAD v12e(0x20)
    0x132: v132 = LT v12d, v130
    0x133: v133(0x13b) = CONST 
    0x136: JUMPI v133(0x13b), v132

    Begin block 0x137
    prev=[0x129], succ=[]
    =================================
    0x137: v137(0x0) = CONST 
    0x13a: REVERT v137(0x0), v137(0x0)

    Begin block 0x13b
    prev=[0x129], succ=[0x149, 0x14d]
    =================================
    0x13d: v13d(0xc4) = CONST 
    0x13f: v13f = CALLDATALOAD v13d(0xc4)
    0x140: v140(0x20) = CONST 
    0x142: v142 = MLOAD v140(0x20)
    0x144: v144 = LT v13f, v142
    0x145: v145(0x14d) = CONST 
    0x148: JUMPI v145(0x14d), v144

    Begin block 0x149
    prev=[0x13b], succ=[]
    =================================
    0x149: v149(0x0) = CONST 
    0x14c: REVERT v149(0x0), v149(0x0)

    Begin block 0x14d
    prev=[0x13b], succ=[0x157, 0x15b]
    =================================
    0x14f: v14f(0x10) = CONST 
    0x151: v151 = SLOAD v14f(0x10)
    0x152: v152 = ISZERO v151
    0x153: v153(0x15b) = CONST 
    0x156: JUMPI v153(0x15b), v152

    Begin block 0x157
    prev=[0x14d], succ=[]
    =================================
    0x157: v157(0x0) = CONST 
    0x15a: REVERT v157(0x0), v157(0x0)

    Begin block 0x15b
    prev=[0x14d], succ=[0x16c]
    =================================
    0x15c: v15c(0x1) = CONST 
    0x15e: v15e(0x10) = CONST 
    0x160: SSTORE v15e(0x10), v15c(0x1)
    0x161: v161(0x140) = CONST 
    0x164: v164(0x0) = CONST 
    0x166: v166(0x3) = CONST 
    0x16a: MSTORE v161(0x140), v164(0x0)
    0x16b: v16b(0x3) = ADD v166(0x3), v164(0x0)

    Begin block 0x16c
    prev=[0x15b, 0x1d4], succ=[0x17d, 0x181]
    =================================
    0x16d: v16d(0x0) = CONST 
    0x16f: v16f(0x4) = CONST 
    0x171: v171(0x140) = CONST 
    0x174: v174 = MLOAD v171(0x140)
    0x175: v175(0x3) = CONST 
    0x178: v178 = LT v174, v175(0x3)
    0x179: v179(0x181) = CONST 
    0x17c: JUMPI v179(0x181), v178

    Begin block 0x17d
    prev=[0x16c], succ=[]
    =================================
    0x17d: v17d(0x0) = CONST 
    0x180: REVERT v17d(0x0), v17d(0x0)

    Begin block 0x181
    prev=[0x16c], succ=[0x18c, 0x190]
    =================================
    0x182: v182(0x20) = CONST 
    0x184: v184 = MUL v182(0x20), v174
    0x185: v185 = ADD v184, v16f(0x4)
    0x186: v186 = CALLDATALOAD v185
    0x187: v187 = XOR v186, v16d(0x0)
    0x188: v188(0x190) = CONST 
    0x18b: JUMPI v188(0x190), v187

    Begin block 0x18c
    prev=[0x181], succ=[]
    =================================
    0x18c: v18c(0x0) = CONST 
    0x18f: REVERT v18c(0x0), v18c(0x0)

    Begin block 0x190
    prev=[0x181], succ=[0x1a1, 0x1a5]
    =================================
    0x191: v191(0x0) = CONST 
    0x193: v193(0x64) = CONST 
    0x195: v195(0x140) = CONST 
    0x198: v198 = MLOAD v195(0x140)
    0x199: v199(0x3) = CONST 
    0x19c: v19c = LT v198, v199(0x3)
    0x19d: v19d(0x1a5) = CONST 
    0x1a0: JUMPI v19d(0x1a5), v19c

    Begin block 0x1a1
    prev=[0x190], succ=[]
    =================================
    0x1a1: v1a1(0x0) = CONST 
    0x1a4: REVERT v1a1(0x0), v1a1(0x0)

    Begin block 0x1a5
    prev=[0x190], succ=[0x1b0, 0x1b4]
    =================================
    0x1a6: v1a6(0x20) = CONST 
    0x1a8: v1a8 = MUL v1a6(0x20), v198
    0x1a9: v1a9 = ADD v1a8, v193(0x64)
    0x1aa: v1aa = CALLDATALOAD v1a9
    0x1ab: v1ab = XOR v1aa, v191(0x0)
    0x1ac: v1ac(0x1b4) = CONST 
    0x1af: JUMPI v1ac(0x1b4), v1ab

    Begin block 0x1b0
    prev=[0x1a5], succ=[]
    =================================
    0x1b0: v1b0(0x0) = CONST 
    0x1b3: REVERT v1b0(0x0), v1b0(0x0)

    Begin block 0x1b4
    prev=[0x1a5], succ=[0x1c3, 0x1c7]
    =================================
    0x1b5: v1b5(0x0) = CONST 
    0x1b7: v1b7(0x140) = CONST 
    0x1ba: v1ba = MLOAD v1b7(0x140)
    0x1bb: v1bb(0x3) = CONST 
    0x1be: v1be = LT v1ba, v1bb(0x3)
    0x1bf: v1bf(0x1c7) = CONST 
    0x1c2: JUMPI v1bf(0x1c7), v1be

    Begin block 0x1c3
    prev=[0x1b4], succ=[]
    =================================
    0x1c3: v1c3(0x0) = CONST 
    0x1c6: REVERT v1c3(0x0), v1c3(0x0)

    Begin block 0x1c7
    prev=[0x1b4], succ=[0x1d4]
    =================================
    0x1c8: v1c8(0x2) = CONST 
    0x1ca: v1ca(0xc0) = CONST 
    0x1cc: MSTORE v1ca(0xc0), v1c8(0x2)
    0x1cd: v1cd(0x20) = CONST 
    0x1cf: v1cf(0xc0) = CONST 
    0x1d1: v1d1 = SHA3 v1cf(0xc0), v1cd(0x20)
    0x1d2: v1d2 = ADD v1d1, v1ba
    0x1d3: SSTORE v1d2, v1b5(0x0)

    Begin block 0x1d4
    prev=[0x1c7], succ=[0x16c, 0x1e4]
    =================================
    0x1d6: v1d6 = MLOAD v161(0x140)
    0x1d7: v1d7(0x1) = CONST 
    0x1d9: v1d9 = ADD v1d7(0x1), v1d6
    0x1dc: MSTORE v161(0x140), v1d9
    0x1de: v1de = EQ v16b(0x3), v1d9
    0x1df: v1df = ISZERO v1de
    0x1e0: v1e0(0x16c) = CONST 
    0x1e3: JUMPI v1e0(0x16c), v1df

    Begin block 0x1e4
    prev=[0x1d4], succ=[0x258, 0x25c]
    =================================
    0x1e7: v1e7(0x0) = CONST 
    0x1e9: v1e9(0xc0) = CONST 
    0x1eb: MSTORE v1e9(0xc0), v1e7(0x0)
    0x1ec: v1ec(0x20) = CONST 
    0x1ee: v1ee(0xc0) = CONST 
    0x1f0: v1f0 = SHA3 v1ee(0xc0), v1ec(0x20)
    0x1f1: v1f1(0x4) = CONST 
    0x1f4: v1f4 = CALLDATALOAD v1f1(0x4)
    0x1f6: SSTORE v1f0, v1f4
    0x1f8: v1f8(0x20) = CONST 
    0x1fa: v1fa(0x24) = ADD v1f8(0x20), v1f1(0x4)
    0x1fb: v1fb = CALLDATALOAD v1fa(0x24)
    0x1fc: v1fc(0x1) = CONST 
    0x1ff: v1ff = ADD v1f0, v1fc(0x1)
    0x200: SSTORE v1ff, v1fb
    0x202: v202(0x40) = CONST 
    0x204: v204(0x44) = ADD v202(0x40), v1f1(0x4)
    0x205: v205 = CALLDATALOAD v204(0x44)
    0x206: v206(0x2) = CONST 
    0x209: v209 = ADD v1f0, v206(0x2)
    0x20a: SSTORE v209, v205
    0x20d: v20d(0x1) = CONST 
    0x20f: v20f(0xc0) = CONST 
    0x211: MSTORE v20f(0xc0), v20d(0x1)
    0x212: v212(0x20) = CONST 
    0x214: v214(0xc0) = CONST 
    0x216: v216 = SHA3 v214(0xc0), v212(0x20)
    0x217: v217(0x64) = CONST 
    0x21a: v21a = CALLDATALOAD v217(0x64)
    0x21c: SSTORE v216, v21a
    0x21e: v21e(0x20) = CONST 
    0x220: v220(0x84) = ADD v21e(0x20), v217(0x64)
    0x221: v221 = CALLDATALOAD v220(0x84)
    0x222: v222(0x1) = CONST 
    0x225: v225 = ADD v216, v222(0x1)
    0x226: SSTORE v225, v221
    0x228: v228(0x40) = CONST 
    0x22a: v22a(0xa4) = ADD v228(0x40), v217(0x64)
    0x22b: v22b = CALLDATALOAD v22a(0xa4)
    0x22c: v22c(0x2) = CONST 
    0x22f: v22f = ADD v216, v22c(0x2)
    0x230: SSTORE v22f, v22b
    0x233: v233(0xe4) = CONST 
    0x235: v235 = CALLDATALOAD v233(0xe4)
    0x236: v236(0x3) = CONST 
    0x238: SSTORE v236(0x3), v235
    0x239: v239(0x104) = CONST 
    0x23c: v23c = CALLDATALOAD v239(0x104)
    0x23d: v23d(0x4) = CONST 
    0x23f: SSTORE v23d(0x4), v23c
    0x240: v240 = CALLER 
    0x241: v241(0x6) = CONST 
    0x243: SSTORE v241(0x6), v240
    0x244: v244(0x0) = CONST 
    0x246: v246(0x5) = CONST 
    0x248: SSTORE v246(0x5), v244(0x0)
    0x249: v249 = TIMESTAMP 
    0x24a: v24a(0x4f1a00) = CONST 
    0x251: v251 = ADD v249, v24a(0x4f1a00)
    0x252: v252 = LT v251, v249
    0x253: v253 = ISZERO v252
    0x254: v254(0x25c) = CONST 
    0x257: JUMPI v254(0x25c), v253

    Begin block 0x258
    prev=[0x1e4], succ=[]
    =================================
    0x258: v258(0x0) = CONST 
    0x25b: REVERT v258(0x0), v258(0x0)

    Begin block 0x25c
    prev=[0x1e4], succ=[]
    =================================
    0x25f: v25f = ADD v249, v24a(0x4f1a00)
    0x264: v264(0xe) = CONST 
    0x266: SSTORE v264(0xe), v25f
    0x267: v267(0x0) = CONST 
    0x269: v269(0xf) = CONST 
    0x26b: SSTORE v269(0xf), v267(0x0)
    0x26c: v26c(0xc4) = CONST 
    0x26e: v26e = CALLDATALOAD v26c(0xc4)
    0x26f: v26f(0x7) = CONST 
    0x271: SSTORE v26f(0x7), v26e
    0x272: v272(0x0) = CONST 
    0x274: v274(0xffffff) = CONST 
    0x278: SSTORE v274(0xffffff), v272(0x0)
    0x279: STOP 

}

function get_virtual_price()() public {
    Begin block 0x51f5
    prev=[], succ=[0xaac, 0xab0]
    =================================
    0xaa6: vaa6 = CALLVALUE 
    0xaa7: vaa7 = ISZERO vaa6
    0xaa8: vaa8(0xab0) = CONST 
    0xaab: JUMPI vaa8(0xab0), vaa7

    Begin block 0xaac
    prev=[0x51f5], succ=[]
    =================================
    0xaac: vaac(0x0) = CONST 
    0xaaf: REVERT vaac(0x0), vaac(0x0)

    Begin block 0xab0
    prev=[0x51f5], succ=[0xab8]
    =================================
    0xab1: vab1(0x140) = CONST 
    0xab4: vab4(0x5e0) = CONST 
    0xab7: MSTORE vab4(0x5e0), vab1(0x140)

    Begin block 0xab8
    prev=[0xad6, 0xab0], succ=[0xad6, 0xada]
    =================================
    0xab9: vab9(0x5e0) = CONST 
    0xabc: vabc = MLOAD vab9(0x5e0)
    0xabd: vabd = MLOAD vabc
    0xabe: vabe(0x20) = CONST 
    0xac0: vac0(0x5e0) = CONST 
    0xac3: vac3 = MLOAD vac0(0x5e0)
    0xac4: vac4 = ADD vac3, vabe(0x20)
    0xac5: vac5(0x5e0) = CONST 
    0xac8: MSTORE vac5(0x5e0), vac4
    0xac9: vac9(0x5e0) = CONST 
    0xacc: vacc(0x5e0) = CONST 
    0xacf: vacf = MLOAD vacc(0x5e0)
    0xad0: vad0 = LT vacf, vac9(0x5e0)
    0xad1: vad1 = ISZERO vad0
    0xad2: vad2(0xada) = CONST 
    0xad5: JUMPI vad2(0xada), vad1

    Begin block 0xad6
    prev=[0xab8], succ=[0xab8]
    =================================
    0xad6: vad6(0xab8) = CONST 
    0xad9: JUMP vad6(0xab8)

    Begin block 0xada
    prev=[0xab8], succ=[0xaee]
    =================================
    0xadb: vadb(0x9123128a) = CONST 
    0xae0: vae0(0x600) = CONST 
    0xae3: MSTORE vae0(0x600), vadb(0x9123128a)
    0xae4: vae4(0x620) = CONST 
    0xae7: vae7(0x140) = CONST 
    0xaea: vaea(0x4a0) = CONST 
    0xaed: MSTORE vaea(0x4a0), vae7(0x140)

    Begin block 0xaee
    prev=[0xb0c, 0xada], succ=[0xb0c, 0xb10]
    =================================
    0xaef: vaef(0x4a0) = CONST 
    0xaf2: vaf2 = MLOAD vaef(0x4a0)
    0xaf3: vaf3 = MLOAD vaf2
    0xaf4: vaf4(0x20) = CONST 
    0xaf6: vaf6(0x4a0) = CONST 
    0xaf9: vaf9 = MLOAD vaf6(0x4a0)
    0xafa: vafa = ADD vaf9, vaf4(0x20)
    0xafb: vafb(0x4a0) = CONST 
    0xafe: MSTORE vafb(0x4a0), vafa
    0xaff: vaff(0x4a0) = CONST 
    0xb02: vb02(0x4a0) = CONST 
    0xb05: vb05 = MLOAD vb02(0x4a0)
    0xb06: vb06 = LT vb05, vaff(0x4a0)
    0xb07: vb07 = ISZERO vb06
    0xb08: vb08(0xb10) = CONST 
    0xb0b: JUMPI vb08(0xb10), vb07

    Begin block 0xb0c
    prev=[0xaee], succ=[0xaee]
    =================================
    0xb0c: vb0c(0xaee) = CONST 
    0xb0f: JUMP vb0c(0xaee)

    Begin block 0xb10
    prev=[0xaee], succ=[0xb24]
    =================================
    0xb11: vb11(0x7aca288a) = CONST 
    0xb16: vb16(0x4c0) = CONST 
    0xb19: MSTORE vb16(0x4c0), vb11(0x7aca288a)
    0xb1a: vb1a(0x4e0) = CONST 
    0xb1d: vb1d(0x140) = CONST 
    0xb20: vb20(0x420) = CONST 
    0xb23: MSTORE vb20(0x420), vb1d(0x140)

    Begin block 0xb24
    prev=[0xb42, 0xb10], succ=[0xb42, 0xb46]
    =================================
    0xb25: vb25(0x420) = CONST 
    0xb28: vb28 = MLOAD vb25(0x420)
    0xb29: vb29 = MLOAD vb28
    0xb2a: vb2a(0x20) = CONST 
    0xb2c: vb2c(0x420) = CONST 
    0xb2f: vb2f = MLOAD vb2c(0x420)
    0xb30: vb30 = ADD vb2f, vb2a(0x20)
    0xb31: vb31(0x420) = CONST 
    0xb34: MSTORE vb31(0x420), vb30
    0xb35: vb35(0x420) = CONST 
    0xb38: vb38(0x420) = CONST 
    0xb3b: vb3b = MLOAD vb38(0x420)
    0xb3c: vb3c = LT vb3b, vb35(0x420)
    0xb3d: vb3d = ISZERO vb3c
    0xb3e: vb3e(0xb46) = CONST 
    0xb41: JUMPI vb3e(0xb46), vb3d

    Begin block 0xb42
    prev=[0xb24], succ=[0xb24]
    =================================
    0xb42: vb42(0xb24) = CONST 
    0xb45: JUMP vb42(0xb24)

    Begin block 0xb46
    prev=[0xb24], succ=[0x2820x51f5]
    =================================
    0xb47: vb47(0x6) = CONST 
    0xb49: vb49(0xb49) = CONST 
    0xb4a: vb4a(0xb4f) = ADD vb49(0xb49), vb47(0x6)
    0xb4b: vb4b(0x282) = CONST 
    0xb4e: JUMP vb4b(0x282)

    Begin block 0x2820x51f5
    prev=[0xb46], succ=[0x2b00x51f5]
    =================================
    0x2830x51f5: v51f5283(0x140) = CONST 
    0x2860x51f5: MSTORE v51f5283(0x140), vb4a(0xb4f)
    0x2870x51f5: v51f5287(0x160) = CONST 
    0x28a0x51f5: v51f528a(0xe8d4a51000) = CONST 
    0x2910x51f5: MSTORE v51f5287(0x160), v51f528a(0xe8d4a51000)
    0x2920x51f5: v51f5292(0x1) = CONST 
    0x2950x51f5: v51f5295(0x20) = CONST 
    0x2970x51f5: v51f5297(0x180) = ADD v51f5295(0x20), v51f5287(0x160)
    0x2980x51f5: MSTORE v51f5297(0x180), v51f5292(0x1)
    0x2990x51f5: v51f5299(0xe8d4a51000) = CONST 
    0x2a00x51f5: v51f52a0(0x40) = CONST 
    0x2a20x51f5: v51f52a2(0x1a0) = ADD v51f52a0(0x40), v51f5287(0x160)
    0x2a30x51f5: MSTORE v51f52a2(0x1a0), v51f5299(0xe8d4a51000)
    0x2a50x51f5: v51f52a5(0x1c0) = CONST 
    0x2a80x51f5: v51f52a8(0x0) = CONST 
    0x2aa0x51f5: v51f52aa(0x3) = CONST 
    0x2ae0x51f5: MSTORE v51f52a5(0x1c0), v51f52a8(0x0)
    0x2af0x51f5: v51f52af(0x3) = ADD v51f52aa(0x3), v51f52a8(0x0)

    Begin block 0x2b00x51f5
    prev=[0x37a0x51f5, 0x2820x51f5], succ=[0x2c00x51f5, 0x2c40x51f5]
    =================================
    0x2b10x51f5: v51f52b1(0x160) = CONST 
    0x2b40x51f5: v51f52b4(0x1c0) = CONST 
    0x2b70x51f5: v51f52b7 = MLOAD v51f52b4(0x1c0)
    0x2b80x51f5: v51f52b8(0x3) = CONST 
    0x2bb0x51f5: v51f52bb = LT v51f52b7, v51f52b8(0x3)
    0x2bc0x51f5: v51f52bc(0x2c4) = CONST 
    0x2bf0x51f5: JUMPI v51f52bc(0x2c4), v51f52bb

    Begin block 0x2c00x51f5
    prev=[0x2b00x51f5], succ=[]
    =================================
    0x2c00x51f5: v51f52c0(0x0) = CONST 
    0x2c30x51f5: REVERT v51f52c0(0x0), v51f52c0(0x0)

    Begin block 0x2c40x51f5
    prev=[0x2b00x51f5], succ=[0x2d70x51f5, 0x2db0x51f5]
    =================================
    0x2c50x51f5: v51f52c5(0x20) = CONST 
    0x2c70x51f5: v51f52c7 = MUL v51f52c5(0x20), v51f52b7
    0x2c80x51f5: v51f52c8 = ADD v51f52c7, v51f52b1(0x160)
    0x2ca0x51f5: v51f52ca = MLOAD v51f52c8
    0x2cb0x51f5: v51f52cb(0x1c0) = CONST 
    0x2ce0x51f5: v51f52ce = MLOAD v51f52cb(0x1c0)
    0x2cf0x51f5: v51f52cf(0x3) = CONST 
    0x2d20x51f5: v51f52d2 = LT v51f52ce, v51f52cf(0x3)
    0x2d30x51f5: v51f52d3(0x2db) = CONST 
    0x2d60x51f5: JUMPI v51f52d3(0x2db), v51f52d2

    Begin block 0x2d70x51f5
    prev=[0x2c40x51f5], succ=[]
    =================================
    0x2d70x51f5: v51f52d7(0x0) = CONST 
    0x2da0x51f5: REVERT v51f52d7(0x0), v51f52d7(0x0)

    Begin block 0x2db0x51f5
    prev=[0x2c40x51f5], succ=[0x2ed0x51f5, 0x2f10x51f5]
    =================================
    0x2dc0x51f5: v51f52dc(0x0) = CONST 
    0x2de0x51f5: v51f52de(0xc0) = CONST 
    0x2e00x51f5: MSTORE v51f52de(0xc0), v51f52dc(0x0)
    0x2e10x51f5: v51f52e1(0x20) = CONST 
    0x2e30x51f5: v51f52e3(0xc0) = CONST 
    0x2e50x51f5: v51f52e5 = SHA3 v51f52e3(0xc0), v51f52e1(0x20)
    0x2e60x51f5: v51f52e6 = ADD v51f52e5, v51f52ce
    0x2e70x51f5: v51f52e7 = SLOAD v51f52e6
    0x2e80x51f5: v51f52e8 = EXTCODESIZE v51f52e7
    0x2e90x51f5: v51f52e9(0x2f1) = CONST 
    0x2ec0x51f5: JUMPI v51f52e9(0x2f1), v51f52e8

    Begin block 0x2ed0x51f5
    prev=[0x2db0x51f5], succ=[]
    =================================
    0x2ed0x51f5: v51f52ed(0x0) = CONST 
    0x2f00x51f5: REVERT v51f52ed(0x0), v51f52ed(0x0)

    Begin block 0x2f10x51f5
    prev=[0x2db0x51f5], succ=[0x2fe0x51f5, 0x3020x51f5]
    =================================
    0x2f20x51f5: v51f52f2(0x1c0) = CONST 
    0x2f50x51f5: v51f52f5 = MLOAD v51f52f2(0x1c0)
    0x2f60x51f5: v51f52f6(0x3) = CONST 
    0x2f90x51f5: v51f52f9 = LT v51f52f5, v51f52f6(0x3)
    0x2fa0x51f5: v51f52fa(0x302) = CONST 
    0x2fd0x51f5: JUMPI v51f52fa(0x302), v51f52f9

    Begin block 0x2fe0x51f5
    prev=[0x2f10x51f5], succ=[]
    =================================
    0x2fe0x51f5: v51f52fe(0x0) = CONST 
    0x3010x51f5: REVERT v51f52fe(0x0), v51f52fe(0x0)

    Begin block 0x3020x51f5
    prev=[0x2f10x51f5], succ=[0x3150x51f5, 0x3190x51f5]
    =================================
    0x3030x51f5: v51f5303(0x0) = CONST 
    0x3050x51f5: v51f5305(0xc0) = CONST 
    0x3070x51f5: MSTORE v51f5305(0xc0), v51f5303(0x0)
    0x3080x51f5: v51f5308(0x20) = CONST 
    0x30a0x51f5: v51f530a(0xc0) = CONST 
    0x30c0x51f5: v51f530c = SHA3 v51f530a(0xc0), v51f5308(0x20)
    0x30d0x51f5: v51f530d = ADD v51f530c, v51f52f5
    0x30e0x51f5: v51f530e = SLOAD v51f530d
    0x30f0x51f5: v51f530f = ADDRESS 
    0x3100x51f5: v51f5310 = XOR v51f530f, v51f530e
    0x3110x51f5: v51f5311(0x319) = CONST 
    0x3140x51f5: JUMPI v51f5311(0x319), v51f5310

    Begin block 0x3150x51f5
    prev=[0x3020x51f5], succ=[]
    =================================
    0x3150x51f5: v51f5315(0x0) = CONST 
    0x3180x51f5: REVERT v51f5315(0x0), v51f5315(0x0)

    Begin block 0x3190x51f5
    prev=[0x3020x51f5], succ=[0x3390x51f5, 0x33d0x51f5]
    =================================
    0x31a0x51f5: v51f531a(0x20) = CONST 
    0x31c0x51f5: v51f531c(0x240) = CONST 
    0x31f0x51f5: v51f531f(0x4) = CONST 
    0x3210x51f5: v51f5321(0x77c7b8fc) = CONST 
    0x3260x51f5: v51f5326(0x1e0) = CONST 
    0x3290x51f5: MSTORE v51f5326(0x1e0), v51f5321(0x77c7b8fc)
    0x32a0x51f5: v51f532a(0x1fc) = CONST 
    0x32d0x51f5: v51f532d(0x1c0) = CONST 
    0x3300x51f5: v51f5330 = MLOAD v51f532d(0x1c0)
    0x3310x51f5: v51f5331(0x3) = CONST 
    0x3340x51f5: v51f5334 = LT v51f5330, v51f5331(0x3)
    0x3350x51f5: v51f5335(0x33d) = CONST 
    0x3380x51f5: JUMPI v51f5335(0x33d), v51f5334

    Begin block 0x3390x51f5
    prev=[0x3190x51f5], succ=[]
    =================================
    0x3390x51f5: v51f5339(0x0) = CONST 
    0x33c0x51f5: REVERT v51f5339(0x0), v51f5339(0x0)

    Begin block 0x33d0x51f5
    prev=[0x3190x51f5], succ=[0x3500x51f5, 0x3540x51f5]
    =================================
    0x33e0x51f5: v51f533e(0x0) = CONST 
    0x3400x51f5: v51f5340(0xc0) = CONST 
    0x3420x51f5: MSTORE v51f5340(0xc0), v51f533e(0x0)
    0x3430x51f5: v51f5343(0x20) = CONST 
    0x3450x51f5: v51f5345(0xc0) = CONST 
    0x3470x51f5: v51f5347 = SHA3 v51f5345(0xc0), v51f5343(0x20)
    0x3480x51f5: v51f5348 = ADD v51f5347, v51f5330
    0x3490x51f5: v51f5349 = SLOAD v51f5348
    0x34a0x51f5: v51f534a = GAS 
    0x34b0x51f5: v51f534b = STATICCALL v51f534a, v51f5349, v51f532a(0x1fc), v51f531f(0x4), v51f531c(0x240), v51f531a(0x20)
    0x34c0x51f5: v51f534c(0x354) = CONST 
    0x34f0x51f5: JUMPI v51f534c(0x354), v51f534b

    Begin block 0x3500x51f5
    prev=[0x33d0x51f5], succ=[]
    =================================
    0x3500x51f5: v51f5350(0x0) = CONST 
    0x3530x51f5: REVERT v51f5350(0x0), v51f5350(0x0)

    Begin block 0x3540x51f5
    prev=[0x33d0x51f5], succ=[0x36b0x51f5, 0x36f0x51f5]
    =================================
    0x3550x51f5: v51f5355(0x0) = CONST 
    0x3580x51f5: v51f5358(0x240) = CONST 
    0x35b0x51f5: v51f535b = MLOAD v51f5358(0x240)
    0x35e0x51f5: v51f535e = MUL v51f52ca, v51f535b
    0x3600x51f5: v51f5360 = ISZERO v51f52ca
    0x3640x51f5: v51f5364 = DIV v51f535e, v51f52ca
    0x3650x51f5: v51f5365 = EQ v51f5364, v51f535b
    0x3660x51f5: v51f5366 = OR v51f5365, v51f5360
    0x3670x51f5: v51f5367(0x36f) = CONST 
    0x36a0x51f5: JUMPI v51f5367(0x36f), v51f5366

    Begin block 0x36b0x51f5
    prev=[0x3540x51f5], succ=[]
    =================================
    0x36b0x51f5: v51f536b(0x0) = CONST 
    0x36e0x51f5: REVERT v51f536b(0x0), v51f536b(0x0)

    Begin block 0x36f0x51f5
    prev=[0x3540x51f5], succ=[0x37a0x51f5]
    =================================
    0x3780x51f5: MSTORE v51f52c8, v51f535e

    Begin block 0x37a0x51f5
    prev=[0x36f0x51f5], succ=[0x2b00x51f5, 0x38a0x51f5]
    =================================
    0x37c0x51f5: v51f537c = MLOAD v51f52a5(0x1c0)
    0x37d0x51f5: v51f537d(0x1) = CONST 
    0x37f0x51f5: v51f537f = ADD v51f537d(0x1), v51f537c
    0x3820x51f5: MSTORE v51f52a5(0x1c0), v51f537f
    0x3840x51f5: v51f5384 = EQ v51f52af(0x3), v51f537f
    0x3850x51f5: v51f5385 = ISZERO v51f5384
    0x3860x51f5: v51f5386(0x2b0) = CONST 
    0x3890x51f5: JUMPI v51f5386(0x2b0), v51f5385

    Begin block 0x38a0x51f5
    prev=[0x37a0x51f5], succ=[0x3930x51f5]
    =================================
    0x38d0x51f5: v51f538d(0x60) = CONST 
    0x38f0x51f5: v51f538f(0x260) = CONST 
    0x3920x51f5: MSTORE v51f538f(0x260), v51f538d(0x60)

    Begin block 0x3930x51f5
    prev=[0x3a50x51f5, 0x38a0x51f5], succ=[0x3a10x51f5, 0x3a50x51f5]
    =================================
    0x3940x51f5: v51f5394(0x0) = CONST 
    0x3960x51f5: v51f5396(0x260) = CONST 
    0x3990x51f5: v51f5399 = MLOAD v51f5396(0x260)
    0x39a0x51f5: v51f539a = GT v51f5399, v51f5394(0x0)
    0x39b0x51f5: v51f539b = ISZERO v51f539a
    0x39c0x51f5: v51f539c = ISZERO v51f539b
    0x39d0x51f5: v51f539d(0x3a5) = CONST 
    0x3a00x51f5: JUMPI v51f539d(0x3a5), v51f539c

    Begin block 0x3a10x51f5
    prev=[0x3930x51f5], succ=[0x3c10x51f5]
    =================================
    0x3a10x51f5: v51f53a1(0x3c1) = CONST 
    0x3a40x51f5: JUMP v51f53a1(0x3c1)

    Begin block 0x3c10x51f5
    prev=[0x3a10x51f5], succ=[]
    =================================
    0x3c20x51f5: v51f53c2(0x140) = CONST 
    0x3c50x51f5: v51f53c5 = MLOAD v51f53c2(0x140)
    0x3c60x51f5: JUMP v51f53c5

    Begin block 0x3a50x51f5
    prev=[0x3930x51f5], succ=[0x3930x51f5]
    =================================
    0x3a60x51f5: v51f53a6(0x20) = CONST 
    0x3a80x51f5: v51f53a8(0x260) = CONST 
    0x3ab0x51f5: v51f53ab = MLOAD v51f53a8(0x260)
    0x3ac0x51f5: v51f53ac = SUB v51f53ab, v51f53a6(0x20)
    0x3ad0x51f5: v51f53ad(0x160) = CONST 
    0x3b00x51f5: v51f53b0 = ADD v51f53ad(0x160), v51f53ac
    0x3b10x51f5: v51f53b1 = MLOAD v51f53b0
    0x3b20x51f5: v51f53b2(0x20) = CONST 
    0x3b40x51f5: v51f53b4(0x260) = CONST 
    0x3b70x51f5: v51f53b7 = MLOAD v51f53b4(0x260)
    0x3b80x51f5: v51f53b8 = SUB v51f53b7, v51f53b2(0x20)
    0x3b90x51f5: v51f53b9(0x260) = CONST 
    0x3bc0x51f5: MSTORE v51f53b9(0x260), v51f53b8
    0x3bd0x51f5: v51f53bd(0x393) = CONST 
    0x3c00x51f5: JUMP v51f53bd(0x393)

}

function calc_token_amount(uint256[3],bool)() public {
    Begin block 0x51f8
    prev=[], succ=[0xcfc, 0xd00]
    =================================
    0xcf6: vcf6 = CALLVALUE 
    0xcf7: vcf7 = ISZERO vcf6
    0xcf8: vcf8(0xd00) = CONST 
    0xcfb: JUMPI vcf8(0xd00), vcf7

    Begin block 0xcfc
    prev=[0x51f8], succ=[]
    =================================
    0xcfc: vcfc(0x0) = CONST 
    0xcff: REVERT vcfc(0x0), vcfc(0x0)

    Begin block 0xd00
    prev=[0x51f8], succ=[0xd0c, 0xd10]
    =================================
    0xd01: vd01(0x64) = CONST 
    0xd03: vd03 = CALLDATALOAD vd01(0x64)
    0xd04: vd04(0x2) = CONST 
    0xd07: vd07 = LT vd03, vd04(0x2)
    0xd08: vd08(0xd10) = CONST 
    0xd0b: JUMPI vd08(0xd10), vd07

    Begin block 0xd0c
    prev=[0xd00], succ=[]
    =================================
    0xd0c: vd0c(0x0) = CONST 
    0xd0f: REVERT vd0c(0x0), vd0c(0x0)

    Begin block 0xd10
    prev=[0xd00], succ=[0x2820x51f8]
    =================================
    0xd12: vd12(0x140) = CONST 
    0xd15: vd15(0x2) = CONST 
    0xd18: vd18(0xc0) = CONST 
    0xd1a: MSTORE vd18(0xc0), vd15(0x2)
    0xd1b: vd1b(0x20) = CONST 
    0xd1d: vd1d(0xc0) = CONST 
    0xd1f: vd1f = SHA3 vd1d(0xc0), vd1b(0x20)
    0xd20: vd20 = SLOAD vd1f
    0xd22: MSTORE vd12(0x140), vd20
    0xd23: vd23(0x1) = CONST 
    0xd26: vd26(0xc0) = CONST 
    0xd28: MSTORE vd26(0xc0), vd15(0x2)
    0xd29: vd29(0x20) = CONST 
    0xd2b: vd2b(0xc0) = CONST 
    0xd2d: vd2d = SHA3 vd2b(0xc0), vd29(0x20)
    0xd2e: vd2e = ADD vd2d, vd23(0x1)
    0xd2f: vd2f = SLOAD vd2e
    0xd31: vd31(0x20) = CONST 
    0xd33: vd33(0x160) = ADD vd31(0x20), vd12(0x140)
    0xd34: MSTORE vd33(0x160), vd2f
    0xd35: vd35(0x2) = CONST 
    0xd38: vd38(0xc0) = CONST 
    0xd3a: MSTORE vd38(0xc0), vd15(0x2)
    0xd3b: vd3b(0x20) = CONST 
    0xd3d: vd3d(0xc0) = CONST 
    0xd3f: vd3f = SHA3 vd3d(0xc0), vd3b(0x20)
    0xd40: vd40 = ADD vd3f, vd35(0x2)
    0xd41: vd41 = SLOAD vd40
    0xd43: vd43(0x40) = CONST 
    0xd45: vd45(0x180) = ADD vd43(0x40), vd12(0x140)
    0xd46: MSTORE vd45(0x180), vd41
    0xd49: vd49(0x1a0) = CONST 
    0xd4c: vd4c(0x140) = CONST 
    0xd4f: vd4f = MLOAD vd4c(0x140)
    0xd50: vd50(0x160) = CONST 
    0xd53: vd53 = MLOAD vd50(0x160)
    0xd54: vd54(0x180) = CONST 
    0xd57: vd57 = MLOAD vd54(0x180)
    0xd58: vd58(0x1a0) = CONST 
    0xd5b: vd5b = MLOAD vd58(0x1a0)
    0xd5c: vd5c(0x1c0) = CONST 
    0xd5f: vd5f = MLOAD vd5c(0x1c0)
    0xd60: vd60(0x1e0) = CONST 
    0xd63: vd63 = MLOAD vd60(0x1e0)
    0xd64: vd64(0x6) = CONST 
    0xd66: vd66(0xd66) = CONST 
    0xd67: vd67(0xd6c) = ADD vd66(0xd66), vd64(0x6)
    0xd68: vd68(0x282) = CONST 
    0xd6b: JUMP vd68(0x282)

    Begin block 0x2820x51f8
    prev=[0xd10], succ=[0x2b00x51f8]
    =================================
    0x2830x51f8: v51f8283(0x140) = CONST 
    0x2860x51f8: MSTORE v51f8283(0x140), vd67(0xd6c)
    0x2870x51f8: v51f8287(0x160) = CONST 
    0x28a0x51f8: v51f828a(0xe8d4a51000) = CONST 
    0x2910x51f8: MSTORE v51f8287(0x160), v51f828a(0xe8d4a51000)
    0x2920x51f8: v51f8292(0x1) = CONST 
    0x2950x51f8: v51f8295(0x20) = CONST 
    0x2970x51f8: v51f8297(0x180) = ADD v51f8295(0x20), v51f8287(0x160)
    0x2980x51f8: MSTORE v51f8297(0x180), v51f8292(0x1)
    0x2990x51f8: v51f8299(0xe8d4a51000) = CONST 
    0x2a00x51f8: v51f82a0(0x40) = CONST 
    0x2a20x51f8: v51f82a2(0x1a0) = ADD v51f82a0(0x40), v51f8287(0x160)
    0x2a30x51f8: MSTORE v51f82a2(0x1a0), v51f8299(0xe8d4a51000)
    0x2a50x51f8: v51f82a5(0x1c0) = CONST 
    0x2a80x51f8: v51f82a8(0x0) = CONST 
    0x2aa0x51f8: v51f82aa(0x3) = CONST 
    0x2ae0x51f8: MSTORE v51f82a5(0x1c0), v51f82a8(0x0)
    0x2af0x51f8: v51f82af(0x3) = ADD v51f82aa(0x3), v51f82a8(0x0)

    Begin block 0x2b00x51f8
    prev=[0x37a0x51f8, 0x2820x51f8], succ=[0x2c00x51f8, 0x2c40x51f8]
    =================================
    0x2b10x51f8: v51f82b1(0x160) = CONST 
    0x2b40x51f8: v51f82b4(0x1c0) = CONST 
    0x2b70x51f8: v51f82b7 = MLOAD v51f82b4(0x1c0)
    0x2b80x51f8: v51f82b8(0x3) = CONST 
    0x2bb0x51f8: v51f82bb = LT v51f82b7, v51f82b8(0x3)
    0x2bc0x51f8: v51f82bc(0x2c4) = CONST 
    0x2bf0x51f8: JUMPI v51f82bc(0x2c4), v51f82bb

    Begin block 0x2c00x51f8
    prev=[0x2b00x51f8], succ=[]
    =================================
    0x2c00x51f8: v51f82c0(0x0) = CONST 
    0x2c30x51f8: REVERT v51f82c0(0x0), v51f82c0(0x0)

    Begin block 0x2c40x51f8
    prev=[0x2b00x51f8], succ=[0x2d70x51f8, 0x2db0x51f8]
    =================================
    0x2c50x51f8: v51f82c5(0x20) = CONST 
    0x2c70x51f8: v51f82c7 = MUL v51f82c5(0x20), v51f82b7
    0x2c80x51f8: v51f82c8 = ADD v51f82c7, v51f82b1(0x160)
    0x2ca0x51f8: v51f82ca = MLOAD v51f82c8
    0x2cb0x51f8: v51f82cb(0x1c0) = CONST 
    0x2ce0x51f8: v51f82ce = MLOAD v51f82cb(0x1c0)
    0x2cf0x51f8: v51f82cf(0x3) = CONST 
    0x2d20x51f8: v51f82d2 = LT v51f82ce, v51f82cf(0x3)
    0x2d30x51f8: v51f82d3(0x2db) = CONST 
    0x2d60x51f8: JUMPI v51f82d3(0x2db), v51f82d2

    Begin block 0x2d70x51f8
    prev=[0x2c40x51f8], succ=[]
    =================================
    0x2d70x51f8: v51f82d7(0x0) = CONST 
    0x2da0x51f8: REVERT v51f82d7(0x0), v51f82d7(0x0)

    Begin block 0x2db0x51f8
    prev=[0x2c40x51f8], succ=[0x2ed0x51f8, 0x2f10x51f8]
    =================================
    0x2dc0x51f8: v51f82dc(0x0) = CONST 
    0x2de0x51f8: v51f82de(0xc0) = CONST 
    0x2e00x51f8: MSTORE v51f82de(0xc0), v51f82dc(0x0)
    0x2e10x51f8: v51f82e1(0x20) = CONST 
    0x2e30x51f8: v51f82e3(0xc0) = CONST 
    0x2e50x51f8: v51f82e5 = SHA3 v51f82e3(0xc0), v51f82e1(0x20)
    0x2e60x51f8: v51f82e6 = ADD v51f82e5, v51f82ce
    0x2e70x51f8: v51f82e7 = SLOAD v51f82e6
    0x2e80x51f8: v51f82e8 = EXTCODESIZE v51f82e7
    0x2e90x51f8: v51f82e9(0x2f1) = CONST 
    0x2ec0x51f8: JUMPI v51f82e9(0x2f1), v51f82e8

    Begin block 0x2ed0x51f8
    prev=[0x2db0x51f8], succ=[]
    =================================
    0x2ed0x51f8: v51f82ed(0x0) = CONST 
    0x2f00x51f8: REVERT v51f82ed(0x0), v51f82ed(0x0)

    Begin block 0x2f10x51f8
    prev=[0x2db0x51f8], succ=[0x2fe0x51f8, 0x3020x51f8]
    =================================
    0x2f20x51f8: v51f82f2(0x1c0) = CONST 
    0x2f50x51f8: v51f82f5 = MLOAD v51f82f2(0x1c0)
    0x2f60x51f8: v51f82f6(0x3) = CONST 
    0x2f90x51f8: v51f82f9 = LT v51f82f5, v51f82f6(0x3)
    0x2fa0x51f8: v51f82fa(0x302) = CONST 
    0x2fd0x51f8: JUMPI v51f82fa(0x302), v51f82f9

    Begin block 0x2fe0x51f8
    prev=[0x2f10x51f8], succ=[]
    =================================
    0x2fe0x51f8: v51f82fe(0x0) = CONST 
    0x3010x51f8: REVERT v51f82fe(0x0), v51f82fe(0x0)

    Begin block 0x3020x51f8
    prev=[0x2f10x51f8], succ=[0x3150x51f8, 0x3190x51f8]
    =================================
    0x3030x51f8: v51f8303(0x0) = CONST 
    0x3050x51f8: v51f8305(0xc0) = CONST 
    0x3070x51f8: MSTORE v51f8305(0xc0), v51f8303(0x0)
    0x3080x51f8: v51f8308(0x20) = CONST 
    0x30a0x51f8: v51f830a(0xc0) = CONST 
    0x30c0x51f8: v51f830c = SHA3 v51f830a(0xc0), v51f8308(0x20)
    0x30d0x51f8: v51f830d = ADD v51f830c, v51f82f5
    0x30e0x51f8: v51f830e = SLOAD v51f830d
    0x30f0x51f8: v51f830f = ADDRESS 
    0x3100x51f8: v51f8310 = XOR v51f830f, v51f830e
    0x3110x51f8: v51f8311(0x319) = CONST 
    0x3140x51f8: JUMPI v51f8311(0x319), v51f8310

    Begin block 0x3150x51f8
    prev=[0x3020x51f8], succ=[]
    =================================
    0x3150x51f8: v51f8315(0x0) = CONST 
    0x3180x51f8: REVERT v51f8315(0x0), v51f8315(0x0)

    Begin block 0x3190x51f8
    prev=[0x3020x51f8], succ=[0x3390x51f8, 0x33d0x51f8]
    =================================
    0x31a0x51f8: v51f831a(0x20) = CONST 
    0x31c0x51f8: v51f831c(0x240) = CONST 
    0x31f0x51f8: v51f831f(0x4) = CONST 
    0x3210x51f8: v51f8321(0x77c7b8fc) = CONST 
    0x3260x51f8: v51f8326(0x1e0) = CONST 
    0x3290x51f8: MSTORE v51f8326(0x1e0), v51f8321(0x77c7b8fc)
    0x32a0x51f8: v51f832a(0x1fc) = CONST 
    0x32d0x51f8: v51f832d(0x1c0) = CONST 
    0x3300x51f8: v51f8330 = MLOAD v51f832d(0x1c0)
    0x3310x51f8: v51f8331(0x3) = CONST 
    0x3340x51f8: v51f8334 = LT v51f8330, v51f8331(0x3)
    0x3350x51f8: v51f8335(0x33d) = CONST 
    0x3380x51f8: JUMPI v51f8335(0x33d), v51f8334

    Begin block 0x3390x51f8
    prev=[0x3190x51f8], succ=[]
    =================================
    0x3390x51f8: v51f8339(0x0) = CONST 
    0x33c0x51f8: REVERT v51f8339(0x0), v51f8339(0x0)

    Begin block 0x33d0x51f8
    prev=[0x3190x51f8], succ=[0x3500x51f8, 0x3540x51f8]
    =================================
    0x33e0x51f8: v51f833e(0x0) = CONST 
    0x3400x51f8: v51f8340(0xc0) = CONST 
    0x3420x51f8: MSTORE v51f8340(0xc0), v51f833e(0x0)
    0x3430x51f8: v51f8343(0x20) = CONST 
    0x3450x51f8: v51f8345(0xc0) = CONST 
    0x3470x51f8: v51f8347 = SHA3 v51f8345(0xc0), v51f8343(0x20)
    0x3480x51f8: v51f8348 = ADD v51f8347, v51f8330
    0x3490x51f8: v51f8349 = SLOAD v51f8348
    0x34a0x51f8: v51f834a = GAS 
    0x34b0x51f8: v51f834b = STATICCALL v51f834a, v51f8349, v51f832a(0x1fc), v51f831f(0x4), v51f831c(0x240), v51f831a(0x20)
    0x34c0x51f8: v51f834c(0x354) = CONST 
    0x34f0x51f8: JUMPI v51f834c(0x354), v51f834b

    Begin block 0x3500x51f8
    prev=[0x33d0x51f8], succ=[]
    =================================
    0x3500x51f8: v51f8350(0x0) = CONST 
    0x3530x51f8: REVERT v51f8350(0x0), v51f8350(0x0)

    Begin block 0x3540x51f8
    prev=[0x33d0x51f8], succ=[0x36b0x51f8, 0x36f0x51f8]
    =================================
    0x3550x51f8: v51f8355(0x0) = CONST 
    0x3580x51f8: v51f8358(0x240) = CONST 
    0x35b0x51f8: v51f835b = MLOAD v51f8358(0x240)
    0x35e0x51f8: v51f835e = MUL v51f82ca, v51f835b
    0x3600x51f8: v51f8360 = ISZERO v51f82ca
    0x3640x51f8: v51f8364 = DIV v51f835e, v51f82ca
    0x3650x51f8: v51f8365 = EQ v51f8364, v51f835b
    0x3660x51f8: v51f8366 = OR v51f8365, v51f8360
    0x3670x51f8: v51f8367(0x36f) = CONST 
    0x36a0x51f8: JUMPI v51f8367(0x36f), v51f8366

    Begin block 0x36b0x51f8
    prev=[0x3540x51f8], succ=[]
    =================================
    0x36b0x51f8: v51f836b(0x0) = CONST 
    0x36e0x51f8: REVERT v51f836b(0x0), v51f836b(0x0)

    Begin block 0x36f0x51f8
    prev=[0x3540x51f8], succ=[0x37a0x51f8]
    =================================
    0x3780x51f8: MSTORE v51f82c8, v51f835e

    Begin block 0x37a0x51f8
    prev=[0x36f0x51f8], succ=[0x2b00x51f8, 0x38a0x51f8]
    =================================
    0x37c0x51f8: v51f837c = MLOAD v51f82a5(0x1c0)
    0x37d0x51f8: v51f837d(0x1) = CONST 
    0x37f0x51f8: v51f837f = ADD v51f837d(0x1), v51f837c
    0x3820x51f8: MSTORE v51f82a5(0x1c0), v51f837f
    0x3840x51f8: v51f8384 = EQ v51f82af(0x3), v51f837f
    0x3850x51f8: v51f8385 = ISZERO v51f8384
    0x3860x51f8: v51f8386(0x2b0) = CONST 
    0x3890x51f8: JUMPI v51f8386(0x2b0), v51f8385

    Begin block 0x38a0x51f8
    prev=[0x37a0x51f8], succ=[0x3930x51f8]
    =================================
    0x38d0x51f8: v51f838d(0x60) = CONST 
    0x38f0x51f8: v51f838f(0x260) = CONST 
    0x3920x51f8: MSTORE v51f838f(0x260), v51f838d(0x60)

    Begin block 0x3930x51f8
    prev=[0x3a50x51f8, 0x38a0x51f8], succ=[0x3a10x51f8, 0x3a50x51f8]
    =================================
    0x3940x51f8: v51f8394(0x0) = CONST 
    0x3960x51f8: v51f8396(0x260) = CONST 
    0x3990x51f8: v51f8399 = MLOAD v51f8396(0x260)
    0x39a0x51f8: v51f839a = GT v51f8399, v51f8394(0x0)
    0x39b0x51f8: v51f839b = ISZERO v51f839a
    0x39c0x51f8: v51f839c = ISZERO v51f839b
    0x39d0x51f8: v51f839d(0x3a5) = CONST 
    0x3a00x51f8: JUMPI v51f839d(0x3a5), v51f839c

    Begin block 0x3a10x51f8
    prev=[0x3930x51f8], succ=[0x3c10x51f8]
    =================================
    0x3a10x51f8: v51f83a1(0x3c1) = CONST 
    0x3a40x51f8: JUMP v51f83a1(0x3c1)

    Begin block 0x3c10x51f8
    prev=[0x3a10x51f8], succ=[]
    =================================
    0x3c20x51f8: v51f83c2(0x140) = CONST 
    0x3c50x51f8: v51f83c5 = MLOAD v51f83c2(0x140)
    0x3c60x51f8: JUMP v51f83c5

    Begin block 0x3a50x51f8
    prev=[0x3930x51f8], succ=[0x3930x51f8]
    =================================
    0x3a60x51f8: v51f83a6(0x20) = CONST 
    0x3a80x51f8: v51f83a8(0x260) = CONST 
    0x3ab0x51f8: v51f83ab = MLOAD v51f83a8(0x260)
    0x3ac0x51f8: v51f83ac = SUB v51f83ab, v51f83a6(0x20)
    0x3ad0x51f8: v51f83ad(0x160) = CONST 
    0x3b00x51f8: v51f83b0 = ADD v51f83ad(0x160), v51f83ac
    0x3b10x51f8: v51f83b1 = MLOAD v51f83b0
    0x3b20x51f8: v51f83b2(0x20) = CONST 
    0x3b40x51f8: v51f83b4(0x260) = CONST 
    0x3b70x51f8: v51f83b7 = MLOAD v51f83b4(0x260)
    0x3b80x51f8: v51f83b8 = SUB v51f83b7, v51f83b2(0x20)
    0x3b90x51f8: v51f83b9(0x260) = CONST 
    0x3bc0x51f8: MSTORE v51f83b9(0x260), v51f83b8
    0x3bd0x51f8: v51f83bd(0x393) = CONST 
    0x3c00x51f8: JUMP v51f83bd(0x393)

}

function add_liquidity(uint256[3],uint256)() public {
    Begin block 0x51fb
    prev=[], succ=[0x10fb, 0x10ff]
    =================================
    0x10f1: v10f1(0xffffff) = CONST 
    0x10f5: v10f5 = SLOAD v10f1(0xffffff)
    0x10f6: v10f6 = ISZERO v10f5
    0x10f7: v10f7(0x10ff) = CONST 
    0x10fa: JUMPI v10f7(0x10ff), v10f6

    Begin block 0x10fb
    prev=[0x51fb], succ=[]
    =================================
    0x10fb: v10fb(0x0) = CONST 
    0x10fe: REVERT v10fb(0x0), v10fb(0x0)

    Begin block 0x10ff
    prev=[0x51fb], succ=[0x110d, 0x1111]
    =================================
    0x1100: v1100(0x1) = CONST 
    0x1102: v1102(0xffffff) = CONST 
    0x1106: SSTORE v1102(0xffffff), v1100(0x1)
    0x1107: v1107 = CALLVALUE 
    0x1108: v1108 = ISZERO v1107
    0x1109: v1109(0x1111) = CONST 
    0x110c: JUMPI v1109(0x1111), v1108

    Begin block 0x110d
    prev=[0x10ff], succ=[]
    =================================
    0x110d: v110d(0x0) = CONST 
    0x1110: REVERT v110d(0x0), v110d(0x0)

    Begin block 0x1111
    prev=[0x10ff], succ=[0x111a, 0x111e]
    =================================
    0x1112: v1112(0xf) = CONST 
    0x1114: v1114 = SLOAD v1112(0xf)
    0x1115: v1115 = ISZERO v1114
    0x1116: v1116(0x111e) = CONST 
    0x1119: JUMPI v1116(0x111e), v1115

    Begin block 0x111a
    prev=[0x1111], succ=[]
    =================================
    0x111a: v111a(0x0) = CONST 
    0x111d: REVERT v111a(0x0), v111a(0x0)

    Begin block 0x111e
    prev=[0x1111], succ=[0x1149, 0x114d]
    =================================
    0x111f: v111f(0x140) = CONST 
    0x1122: v1122(0x0) = CONST 
    0x1125: MSTORE v111f(0x140), v1122(0x0)
    0x1126: v1126(0x0) = CONST 
    0x1129: v1129(0x20) = CONST 
    0x112b: v112b(0x160) = ADD v1129(0x20), v111f(0x140)
    0x112c: MSTORE v112b(0x160), v1126(0x0)
    0x112d: v112d(0x0) = CONST 
    0x1130: v1130(0x40) = CONST 
    0x1132: v1132(0x180) = ADD v1130(0x40), v111f(0x140)
    0x1133: MSTORE v1132(0x180), v112d(0x0)
    0x1135: v1135(0x4) = CONST 
    0x1137: v1137 = SLOAD v1135(0x4)
    0x1138: v1138(0x3) = CONST 
    0x113c: v113c = MUL v1137, v1138(0x3)
    0x113e: v113e = ISZERO v1137
    0x1142: v1142 = DIV v113c, v1137
    0x1143: v1143 = EQ v1142, v1138(0x3)
    0x1144: v1144 = OR v1143, v113e
    0x1145: v1145(0x114d) = CONST 
    0x1148: JUMPI v1145(0x114d), v1144

    Begin block 0x1149
    prev=[0x111e], succ=[]
    =================================
    0x1149: v1149(0x0) = CONST 
    0x114c: REVERT v1149(0x0), v1149(0x0)

    Begin block 0x114d
    prev=[0x111e], succ=[0x115d, 0x1161]
    =================================
    0x1155: v1155(0x8) = CONST 
    0x1159: v1159(0x1161) = CONST 
    0x115c: JUMPI v1159(0x1161), v1155(0x8)

    Begin block 0x115d
    prev=[0x114d], succ=[]
    =================================
    0x115d: v115d(0x0) = CONST 
    0x1160: REVERT v115d(0x0), v115d(0x0)

    Begin block 0x1161
    prev=[0x114d], succ=[0x117b, 0x117f]
    =================================
    0x1163: v1163 = DIV v113c, v1155(0x8)
    0x1168: v1168(0x1a0) = CONST 
    0x116b: MSTORE v1168(0x1a0), v1163
    0x116c: v116c(0x5) = CONST 
    0x116e: v116e = SLOAD v116c(0x5)
    0x116f: v116f(0x1c0) = CONST 
    0x1172: MSTORE v116f(0x1c0), v116e
    0x1173: v1173(0x7) = CONST 
    0x1175: v1175 = SLOAD v1173(0x7)
    0x1176: v1176 = EXTCODESIZE v1175
    0x1177: v1177(0x117f) = CONST 
    0x117a: JUMPI v1177(0x117f), v1176

    Begin block 0x117b
    prev=[0x1161], succ=[]
    =================================
    0x117b: v117b(0x0) = CONST 
    0x117e: REVERT v117b(0x0), v117b(0x0)

    Begin block 0x117f
    prev=[0x1161], succ=[0x1189, 0x118d]
    =================================
    0x1180: v1180(0x7) = CONST 
    0x1182: v1182 = SLOAD v1180(0x7)
    0x1183: v1183 = ADDRESS 
    0x1184: v1184 = XOR v1183, v1182
    0x1185: v1185(0x118d) = CONST 
    0x1188: JUMPI v1185(0x118d), v1184

    Begin block 0x1189
    prev=[0x117f], succ=[]
    =================================
    0x1189: v1189(0x0) = CONST 
    0x118c: REVERT v1189(0x0), v1189(0x0)

    Begin block 0x118d
    prev=[0x117f], succ=[0x11aa, 0x11ae]
    =================================
    0x118e: v118e(0x20) = CONST 
    0x1190: v1190(0x260) = CONST 
    0x1193: v1193(0x4) = CONST 
    0x1195: v1195(0x18160ddd) = CONST 
    0x119a: v119a(0x200) = CONST 
    0x119d: MSTORE v119a(0x200), v1195(0x18160ddd)
    0x119e: v119e(0x21c) = CONST 
    0x11a1: v11a1(0x7) = CONST 
    0x11a3: v11a3 = SLOAD v11a1(0x7)
    0x11a4: v11a4 = GAS 
    0x11a5: v11a5 = STATICCALL v11a4, v11a3, v119e(0x21c), v1193(0x4), v1190(0x260), v118e(0x20)
    0x11a6: v11a6(0x11ae) = CONST 
    0x11a9: JUMPI v11a6(0x11ae), v11a5

    Begin block 0x11aa
    prev=[0x118d], succ=[]
    =================================
    0x11aa: v11aa(0x0) = CONST 
    0x11ad: REVERT v11aa(0x0), v11aa(0x0)

    Begin block 0x11ae
    prev=[0x118d], succ=[0x11c4]
    =================================
    0x11af: v11af(0x0) = CONST 
    0x11b2: v11b2(0x260) = CONST 
    0x11b5: v11b5 = MLOAD v11b2(0x260)
    0x11b6: v11b6(0x1e0) = CONST 
    0x11b9: MSTORE v11b6(0x1e0), v11b5
    0x11ba: v11ba(0x280) = CONST 
    0x11bd: v11bd(0x140) = CONST 
    0x11c0: v11c0(0x2e0) = CONST 
    0x11c3: MSTORE v11c0(0x2e0), v11bd(0x140)

    Begin block 0x11c4
    prev=[0x11e2, 0x11ae], succ=[0x11e2, 0x11e6]
    =================================
    0x11c5: v11c5(0x2e0) = CONST 
    0x11c8: v11c8 = MLOAD v11c5(0x2e0)
    0x11c9: v11c9 = MLOAD v11c8
    0x11ca: v11ca(0x20) = CONST 
    0x11cc: v11cc(0x2e0) = CONST 
    0x11cf: v11cf = MLOAD v11cc(0x2e0)
    0x11d0: v11d0 = ADD v11cf, v11ca(0x20)
    0x11d1: v11d1(0x2e0) = CONST 
    0x11d4: MSTORE v11d1(0x2e0), v11d0
    0x11d5: v11d5(0x2e0) = CONST 
    0x11d8: v11d8(0x2e0) = CONST 
    0x11db: v11db = MLOAD v11d8(0x2e0)
    0x11dc: v11dc = LT v11db, v11d5(0x2e0)
    0x11dd: v11dd = ISZERO v11dc
    0x11de: v11de(0x11e6) = CONST 
    0x11e1: JUMPI v11de(0x11e6), v11dd

    Begin block 0x11e2
    prev=[0x11c4], succ=[0x11c4]
    =================================
    0x11e2: v11e2(0x11c4) = CONST 
    0x11e5: JUMP v11e2(0x11c4)

    Begin block 0x11e6
    prev=[0x11c4], succ=[0x2820x51fb]
    =================================
    0x11e7: v11e7(0x6) = CONST 
    0x11e9: v11e9(0x11e9) = CONST 
    0x11ea: v11ea(0x11ef) = ADD v11e9(0x11e9), v11e7(0x6)
    0x11eb: v11eb(0x282) = CONST 
    0x11ee: JUMP v11eb(0x282)

    Begin block 0x2820x51fb
    prev=[0x11e6], succ=[0x2b00x51fb]
    =================================
    0x2830x51fb: v51fb283(0x140) = CONST 
    0x2860x51fb: MSTORE v51fb283(0x140), v11ea(0x11ef)
    0x2870x51fb: v51fb287(0x160) = CONST 
    0x28a0x51fb: v51fb28a(0xe8d4a51000) = CONST 
    0x2910x51fb: MSTORE v51fb287(0x160), v51fb28a(0xe8d4a51000)
    0x2920x51fb: v51fb292(0x1) = CONST 
    0x2950x51fb: v51fb295(0x20) = CONST 
    0x2970x51fb: v51fb297(0x180) = ADD v51fb295(0x20), v51fb287(0x160)
    0x2980x51fb: MSTORE v51fb297(0x180), v51fb292(0x1)
    0x2990x51fb: v51fb299(0xe8d4a51000) = CONST 
    0x2a00x51fb: v51fb2a0(0x40) = CONST 
    0x2a20x51fb: v51fb2a2(0x1a0) = ADD v51fb2a0(0x40), v51fb287(0x160)
    0x2a30x51fb: MSTORE v51fb2a2(0x1a0), v51fb299(0xe8d4a51000)
    0x2a50x51fb: v51fb2a5(0x1c0) = CONST 
    0x2a80x51fb: v51fb2a8(0x0) = CONST 
    0x2aa0x51fb: v51fb2aa(0x3) = CONST 
    0x2ae0x51fb: MSTORE v51fb2a5(0x1c0), v51fb2a8(0x0)
    0x2af0x51fb: v51fb2af(0x3) = ADD v51fb2aa(0x3), v51fb2a8(0x0)

    Begin block 0x2b00x51fb
    prev=[0x37a0x51fb, 0x2820x51fb], succ=[0x2c00x51fb, 0x2c40x51fb]
    =================================
    0x2b10x51fb: v51fb2b1(0x160) = CONST 
    0x2b40x51fb: v51fb2b4(0x1c0) = CONST 
    0x2b70x51fb: v51fb2b7 = MLOAD v51fb2b4(0x1c0)
    0x2b80x51fb: v51fb2b8(0x3) = CONST 
    0x2bb0x51fb: v51fb2bb = LT v51fb2b7, v51fb2b8(0x3)
    0x2bc0x51fb: v51fb2bc(0x2c4) = CONST 
    0x2bf0x51fb: JUMPI v51fb2bc(0x2c4), v51fb2bb

    Begin block 0x2c00x51fb
    prev=[0x2b00x51fb], succ=[]
    =================================
    0x2c00x51fb: v51fb2c0(0x0) = CONST 
    0x2c30x51fb: REVERT v51fb2c0(0x0), v51fb2c0(0x0)

    Begin block 0x2c40x51fb
    prev=[0x2b00x51fb], succ=[0x2d70x51fb, 0x2db0x51fb]
    =================================
    0x2c50x51fb: v51fb2c5(0x20) = CONST 
    0x2c70x51fb: v51fb2c7 = MUL v51fb2c5(0x20), v51fb2b7
    0x2c80x51fb: v51fb2c8 = ADD v51fb2c7, v51fb2b1(0x160)
    0x2ca0x51fb: v51fb2ca = MLOAD v51fb2c8
    0x2cb0x51fb: v51fb2cb(0x1c0) = CONST 
    0x2ce0x51fb: v51fb2ce = MLOAD v51fb2cb(0x1c0)
    0x2cf0x51fb: v51fb2cf(0x3) = CONST 
    0x2d20x51fb: v51fb2d2 = LT v51fb2ce, v51fb2cf(0x3)
    0x2d30x51fb: v51fb2d3(0x2db) = CONST 
    0x2d60x51fb: JUMPI v51fb2d3(0x2db), v51fb2d2

    Begin block 0x2d70x51fb
    prev=[0x2c40x51fb], succ=[]
    =================================
    0x2d70x51fb: v51fb2d7(0x0) = CONST 
    0x2da0x51fb: REVERT v51fb2d7(0x0), v51fb2d7(0x0)

    Begin block 0x2db0x51fb
    prev=[0x2c40x51fb], succ=[0x2ed0x51fb, 0x2f10x51fb]
    =================================
    0x2dc0x51fb: v51fb2dc(0x0) = CONST 
    0x2de0x51fb: v51fb2de(0xc0) = CONST 
    0x2e00x51fb: MSTORE v51fb2de(0xc0), v51fb2dc(0x0)
    0x2e10x51fb: v51fb2e1(0x20) = CONST 
    0x2e30x51fb: v51fb2e3(0xc0) = CONST 
    0x2e50x51fb: v51fb2e5 = SHA3 v51fb2e3(0xc0), v51fb2e1(0x20)
    0x2e60x51fb: v51fb2e6 = ADD v51fb2e5, v51fb2ce
    0x2e70x51fb: v51fb2e7 = SLOAD v51fb2e6
    0x2e80x51fb: v51fb2e8 = EXTCODESIZE v51fb2e7
    0x2e90x51fb: v51fb2e9(0x2f1) = CONST 
    0x2ec0x51fb: JUMPI v51fb2e9(0x2f1), v51fb2e8

    Begin block 0x2ed0x51fb
    prev=[0x2db0x51fb], succ=[]
    =================================
    0x2ed0x51fb: v51fb2ed(0x0) = CONST 
    0x2f00x51fb: REVERT v51fb2ed(0x0), v51fb2ed(0x0)

    Begin block 0x2f10x51fb
    prev=[0x2db0x51fb], succ=[0x2fe0x51fb, 0x3020x51fb]
    =================================
    0x2f20x51fb: v51fb2f2(0x1c0) = CONST 
    0x2f50x51fb: v51fb2f5 = MLOAD v51fb2f2(0x1c0)
    0x2f60x51fb: v51fb2f6(0x3) = CONST 
    0x2f90x51fb: v51fb2f9 = LT v51fb2f5, v51fb2f6(0x3)
    0x2fa0x51fb: v51fb2fa(0x302) = CONST 
    0x2fd0x51fb: JUMPI v51fb2fa(0x302), v51fb2f9

    Begin block 0x2fe0x51fb
    prev=[0x2f10x51fb], succ=[]
    =================================
    0x2fe0x51fb: v51fb2fe(0x0) = CONST 
    0x3010x51fb: REVERT v51fb2fe(0x0), v51fb2fe(0x0)

    Begin block 0x3020x51fb
    prev=[0x2f10x51fb], succ=[0x3150x51fb, 0x3190x51fb]
    =================================
    0x3030x51fb: v51fb303(0x0) = CONST 
    0x3050x51fb: v51fb305(0xc0) = CONST 
    0x3070x51fb: MSTORE v51fb305(0xc0), v51fb303(0x0)
    0x3080x51fb: v51fb308(0x20) = CONST 
    0x30a0x51fb: v51fb30a(0xc0) = CONST 
    0x30c0x51fb: v51fb30c = SHA3 v51fb30a(0xc0), v51fb308(0x20)
    0x30d0x51fb: v51fb30d = ADD v51fb30c, v51fb2f5
    0x30e0x51fb: v51fb30e = SLOAD v51fb30d
    0x30f0x51fb: v51fb30f = ADDRESS 
    0x3100x51fb: v51fb310 = XOR v51fb30f, v51fb30e
    0x3110x51fb: v51fb311(0x319) = CONST 
    0x3140x51fb: JUMPI v51fb311(0x319), v51fb310

    Begin block 0x3150x51fb
    prev=[0x3020x51fb], succ=[]
    =================================
    0x3150x51fb: v51fb315(0x0) = CONST 
    0x3180x51fb: REVERT v51fb315(0x0), v51fb315(0x0)

    Begin block 0x3190x51fb
    prev=[0x3020x51fb], succ=[0x3390x51fb, 0x33d0x51fb]
    =================================
    0x31a0x51fb: v51fb31a(0x20) = CONST 
    0x31c0x51fb: v51fb31c(0x240) = CONST 
    0x31f0x51fb: v51fb31f(0x4) = CONST 
    0x3210x51fb: v51fb321(0x77c7b8fc) = CONST 
    0x3260x51fb: v51fb326(0x1e0) = CONST 
    0x3290x51fb: MSTORE v51fb326(0x1e0), v51fb321(0x77c7b8fc)
    0x32a0x51fb: v51fb32a(0x1fc) = CONST 
    0x32d0x51fb: v51fb32d(0x1c0) = CONST 
    0x3300x51fb: v51fb330 = MLOAD v51fb32d(0x1c0)
    0x3310x51fb: v51fb331(0x3) = CONST 
    0x3340x51fb: v51fb334 = LT v51fb330, v51fb331(0x3)
    0x3350x51fb: v51fb335(0x33d) = CONST 
    0x3380x51fb: JUMPI v51fb335(0x33d), v51fb334

    Begin block 0x3390x51fb
    prev=[0x3190x51fb], succ=[]
    =================================
    0x3390x51fb: v51fb339(0x0) = CONST 
    0x33c0x51fb: REVERT v51fb339(0x0), v51fb339(0x0)

    Begin block 0x33d0x51fb
    prev=[0x3190x51fb], succ=[0x3500x51fb, 0x3540x51fb]
    =================================
    0x33e0x51fb: v51fb33e(0x0) = CONST 
    0x3400x51fb: v51fb340(0xc0) = CONST 
    0x3420x51fb: MSTORE v51fb340(0xc0), v51fb33e(0x0)
    0x3430x51fb: v51fb343(0x20) = CONST 
    0x3450x51fb: v51fb345(0xc0) = CONST 
    0x3470x51fb: v51fb347 = SHA3 v51fb345(0xc0), v51fb343(0x20)
    0x3480x51fb: v51fb348 = ADD v51fb347, v51fb330
    0x3490x51fb: v51fb349 = SLOAD v51fb348
    0x34a0x51fb: v51fb34a = GAS 
    0x34b0x51fb: v51fb34b = STATICCALL v51fb34a, v51fb349, v51fb32a(0x1fc), v51fb31f(0x4), v51fb31c(0x240), v51fb31a(0x20)
    0x34c0x51fb: v51fb34c(0x354) = CONST 
    0x34f0x51fb: JUMPI v51fb34c(0x354), v51fb34b

    Begin block 0x3500x51fb
    prev=[0x33d0x51fb], succ=[]
    =================================
    0x3500x51fb: v51fb350(0x0) = CONST 
    0x3530x51fb: REVERT v51fb350(0x0), v51fb350(0x0)

    Begin block 0x3540x51fb
    prev=[0x33d0x51fb], succ=[0x36b0x51fb, 0x36f0x51fb]
    =================================
    0x3550x51fb: v51fb355(0x0) = CONST 
    0x3580x51fb: v51fb358(0x240) = CONST 
    0x35b0x51fb: v51fb35b = MLOAD v51fb358(0x240)
    0x35e0x51fb: v51fb35e = MUL v51fb2ca, v51fb35b
    0x3600x51fb: v51fb360 = ISZERO v51fb2ca
    0x3640x51fb: v51fb364 = DIV v51fb35e, v51fb2ca
    0x3650x51fb: v51fb365 = EQ v51fb364, v51fb35b
    0x3660x51fb: v51fb366 = OR v51fb365, v51fb360
    0x3670x51fb: v51fb367(0x36f) = CONST 
    0x36a0x51fb: JUMPI v51fb367(0x36f), v51fb366

    Begin block 0x36b0x51fb
    prev=[0x3540x51fb], succ=[]
    =================================
    0x36b0x51fb: v51fb36b(0x0) = CONST 
    0x36e0x51fb: REVERT v51fb36b(0x0), v51fb36b(0x0)

    Begin block 0x36f0x51fb
    prev=[0x3540x51fb], succ=[0x37a0x51fb]
    =================================
    0x3780x51fb: MSTORE v51fb2c8, v51fb35e

    Begin block 0x37a0x51fb
    prev=[0x36f0x51fb], succ=[0x2b00x51fb, 0x38a0x51fb]
    =================================
    0x37c0x51fb: v51fb37c = MLOAD v51fb2a5(0x1c0)
    0x37d0x51fb: v51fb37d(0x1) = CONST 
    0x37f0x51fb: v51fb37f = ADD v51fb37d(0x1), v51fb37c
    0x3820x51fb: MSTORE v51fb2a5(0x1c0), v51fb37f
    0x3840x51fb: v51fb384 = EQ v51fb2af(0x3), v51fb37f
    0x3850x51fb: v51fb385 = ISZERO v51fb384
    0x3860x51fb: v51fb386(0x2b0) = CONST 
    0x3890x51fb: JUMPI v51fb386(0x2b0), v51fb385

    Begin block 0x38a0x51fb
    prev=[0x37a0x51fb], succ=[0x3930x51fb]
    =================================
    0x38d0x51fb: v51fb38d(0x60) = CONST 
    0x38f0x51fb: v51fb38f(0x260) = CONST 
    0x3920x51fb: MSTORE v51fb38f(0x260), v51fb38d(0x60)

    Begin block 0x3930x51fb
    prev=[0x3a50x51fb, 0x38a0x51fb], succ=[0x3a10x51fb, 0x3a50x51fb]
    =================================
    0x3940x51fb: v51fb394(0x0) = CONST 
    0x3960x51fb: v51fb396(0x260) = CONST 
    0x3990x51fb: v51fb399 = MLOAD v51fb396(0x260)
    0x39a0x51fb: v51fb39a = GT v51fb399, v51fb394(0x0)
    0x39b0x51fb: v51fb39b = ISZERO v51fb39a
    0x39c0x51fb: v51fb39c = ISZERO v51fb39b
    0x39d0x51fb: v51fb39d(0x3a5) = CONST 
    0x3a00x51fb: JUMPI v51fb39d(0x3a5), v51fb39c

    Begin block 0x3a10x51fb
    prev=[0x3930x51fb], succ=[0x3c10x51fb]
    =================================
    0x3a10x51fb: v51fb3a1(0x3c1) = CONST 
    0x3a40x51fb: JUMP v51fb3a1(0x3c1)

    Begin block 0x3c10x51fb
    prev=[0x3a10x51fb], succ=[]
    =================================
    0x3c20x51fb: v51fb3c2(0x140) = CONST 
    0x3c50x51fb: v51fb3c5 = MLOAD v51fb3c2(0x140)
    0x3c60x51fb: JUMP v51fb3c5

    Begin block 0x3a50x51fb
    prev=[0x3930x51fb], succ=[0x3930x51fb]
    =================================
    0x3a60x51fb: v51fb3a6(0x20) = CONST 
    0x3a80x51fb: v51fb3a8(0x260) = CONST 
    0x3ab0x51fb: v51fb3ab = MLOAD v51fb3a8(0x260)
    0x3ac0x51fb: v51fb3ac = SUB v51fb3ab, v51fb3a6(0x20)
    0x3ad0x51fb: v51fb3ad(0x160) = CONST 
    0x3b00x51fb: v51fb3b0 = ADD v51fb3ad(0x160), v51fb3ac
    0x3b10x51fb: v51fb3b1 = MLOAD v51fb3b0
    0x3b20x51fb: v51fb3b2(0x20) = CONST 
    0x3b40x51fb: v51fb3b4(0x260) = CONST 
    0x3b70x51fb: v51fb3b7 = MLOAD v51fb3b4(0x260)
    0x3b80x51fb: v51fb3b8 = SUB v51fb3b7, v51fb3b2(0x20)
    0x3b90x51fb: v51fb3b9(0x260) = CONST 
    0x3bc0x51fb: MSTORE v51fb3b9(0x260), v51fb3b8
    0x3bd0x51fb: v51fb3bd(0x393) = CONST 
    0x3c00x51fb: JUMP v51fb3bd(0x393)

}

function get_dy(int128,int128,uint256)() public {
    Begin block 0x51fe
    prev=[], succ=[0x1ec5, 0x1ec9]
    =================================
    0x1ebf: v1ebf = CALLVALUE 
    0x1ec0: v1ec0 = ISZERO v1ebf
    0x1ec1: v1ec1(0x1ec9) = CONST 
    0x1ec4: JUMPI v1ec1(0x1ec9), v1ec0

    Begin block 0x1ec5
    prev=[0x51fe], succ=[]
    =================================
    0x1ec5: v1ec5(0x0) = CONST 
    0x1ec8: REVERT v1ec5(0x0), v1ec5(0x0)

    Begin block 0x1ec9
    prev=[0x51fe], succ=[0x1edb, 0x1edf]
    =================================
    0x1eca: v1eca(0x60) = CONST 
    0x1ecc: v1ecc = MLOAD v1eca(0x60)
    0x1ecd: v1ecd(0x4) = CONST 
    0x1ecf: v1ecf = CALLDATALOAD v1ecd(0x4)
    0x1ed1: v1ed1(0x40) = CONST 
    0x1ed3: v1ed3 = MLOAD v1ed1(0x40)
    0x1ed5: v1ed5 = SGT v1ecf, v1ed3
    0x1ed6: v1ed6 = ISZERO v1ed5
    0x1ed7: v1ed7(0x1edf) = CONST 
    0x1eda: JUMPI v1ed7(0x1edf), v1ed6

    Begin block 0x1edb
    prev=[0x1ec9], succ=[]
    =================================
    0x1edb: v1edb(0x0) = CONST 
    0x1ede: REVERT v1edb(0x0), v1edb(0x0)

    Begin block 0x1edf
    prev=[0x1ec9], succ=[0x1ee9, 0x1eed]
    =================================
    0x1ee3: v1ee3 = SLT v1ecf, v1ecc
    0x1ee4: v1ee4 = ISZERO v1ee3
    0x1ee5: v1ee5(0x1eed) = CONST 
    0x1ee8: JUMPI v1ee5(0x1eed), v1ee4

    Begin block 0x1ee9
    prev=[0x1edf], succ=[]
    =================================
    0x1ee9: v1ee9(0x0) = CONST 
    0x1eec: REVERT v1ee9(0x0), v1ee9(0x0)

    Begin block 0x1eed
    prev=[0x1edf], succ=[0x1f00, 0x1f04]
    =================================
    0x1eef: v1eef(0x60) = CONST 
    0x1ef1: v1ef1 = MLOAD v1eef(0x60)
    0x1ef2: v1ef2(0x24) = CONST 
    0x1ef4: v1ef4 = CALLDATALOAD v1ef2(0x24)
    0x1ef6: v1ef6(0x40) = CONST 
    0x1ef8: v1ef8 = MLOAD v1ef6(0x40)
    0x1efa: v1efa = SGT v1ef4, v1ef8
    0x1efb: v1efb = ISZERO v1efa
    0x1efc: v1efc(0x1f04) = CONST 
    0x1eff: JUMPI v1efc(0x1f04), v1efb

    Begin block 0x1f00
    prev=[0x1eed], succ=[]
    =================================
    0x1f00: v1f00(0x0) = CONST 
    0x1f03: REVERT v1f00(0x0), v1f00(0x0)

    Begin block 0x1f04
    prev=[0x1eed], succ=[0x1f0e, 0x1f12]
    =================================
    0x1f08: v1f08 = SLT v1ef4, v1ef1
    0x1f09: v1f09 = ISZERO v1f08
    0x1f0a: v1f0a(0x1f12) = CONST 
    0x1f0d: JUMPI v1f0a(0x1f12), v1f09

    Begin block 0x1f0e
    prev=[0x1f04], succ=[]
    =================================
    0x1f0e: v1f0e(0x0) = CONST 
    0x1f11: REVERT v1f0e(0x0), v1f0e(0x0)

    Begin block 0x1f12
    prev=[0x1f04], succ=[0x2820x51fe]
    =================================
    0x1f14: v1f14(0x140) = CONST 
    0x1f17: v1f17(0x140) = CONST 
    0x1f1a: v1f1a = MLOAD v1f17(0x140)
    0x1f1b: v1f1b(0x160) = CONST 
    0x1f1e: v1f1e = MLOAD v1f1b(0x160)
    0x1f1f: v1f1f(0x180) = CONST 
    0x1f22: v1f22 = MLOAD v1f1f(0x180)
    0x1f23: v1f23(0x6) = CONST 
    0x1f25: v1f25(0x1f25) = CONST 
    0x1f26: v1f26(0x1f2b) = ADD v1f25(0x1f25), v1f23(0x6)
    0x1f27: v1f27(0x282) = CONST 
    0x1f2a: JUMP v1f27(0x282)

    Begin block 0x2820x51fe
    prev=[0x1f12], succ=[0x2b00x51fe]
    =================================
    0x2830x51fe: v51fe283(0x140) = CONST 
    0x2860x51fe: MSTORE v51fe283(0x140), v1f26(0x1f2b)
    0x2870x51fe: v51fe287(0x160) = CONST 
    0x28a0x51fe: v51fe28a(0xe8d4a51000) = CONST 
    0x2910x51fe: MSTORE v51fe287(0x160), v51fe28a(0xe8d4a51000)
    0x2920x51fe: v51fe292(0x1) = CONST 
    0x2950x51fe: v51fe295(0x20) = CONST 
    0x2970x51fe: v51fe297(0x180) = ADD v51fe295(0x20), v51fe287(0x160)
    0x2980x51fe: MSTORE v51fe297(0x180), v51fe292(0x1)
    0x2990x51fe: v51fe299(0xe8d4a51000) = CONST 
    0x2a00x51fe: v51fe2a0(0x40) = CONST 
    0x2a20x51fe: v51fe2a2(0x1a0) = ADD v51fe2a0(0x40), v51fe287(0x160)
    0x2a30x51fe: MSTORE v51fe2a2(0x1a0), v51fe299(0xe8d4a51000)
    0x2a50x51fe: v51fe2a5(0x1c0) = CONST 
    0x2a80x51fe: v51fe2a8(0x0) = CONST 
    0x2aa0x51fe: v51fe2aa(0x3) = CONST 
    0x2ae0x51fe: MSTORE v51fe2a5(0x1c0), v51fe2a8(0x0)
    0x2af0x51fe: v51fe2af(0x3) = ADD v51fe2aa(0x3), v51fe2a8(0x0)

    Begin block 0x2b00x51fe
    prev=[0x37a0x51fe, 0x2820x51fe], succ=[0x2c00x51fe, 0x2c40x51fe]
    =================================
    0x2b10x51fe: v51fe2b1(0x160) = CONST 
    0x2b40x51fe: v51fe2b4(0x1c0) = CONST 
    0x2b70x51fe: v51fe2b7 = MLOAD v51fe2b4(0x1c0)
    0x2b80x51fe: v51fe2b8(0x3) = CONST 
    0x2bb0x51fe: v51fe2bb = LT v51fe2b7, v51fe2b8(0x3)
    0x2bc0x51fe: v51fe2bc(0x2c4) = CONST 
    0x2bf0x51fe: JUMPI v51fe2bc(0x2c4), v51fe2bb

    Begin block 0x2c00x51fe
    prev=[0x2b00x51fe], succ=[]
    =================================
    0x2c00x51fe: v51fe2c0(0x0) = CONST 
    0x2c30x51fe: REVERT v51fe2c0(0x0), v51fe2c0(0x0)

    Begin block 0x2c40x51fe
    prev=[0x2b00x51fe], succ=[0x2d70x51fe, 0x2db0x51fe]
    =================================
    0x2c50x51fe: v51fe2c5(0x20) = CONST 
    0x2c70x51fe: v51fe2c7 = MUL v51fe2c5(0x20), v51fe2b7
    0x2c80x51fe: v51fe2c8 = ADD v51fe2c7, v51fe2b1(0x160)
    0x2ca0x51fe: v51fe2ca = MLOAD v51fe2c8
    0x2cb0x51fe: v51fe2cb(0x1c0) = CONST 
    0x2ce0x51fe: v51fe2ce = MLOAD v51fe2cb(0x1c0)
    0x2cf0x51fe: v51fe2cf(0x3) = CONST 
    0x2d20x51fe: v51fe2d2 = LT v51fe2ce, v51fe2cf(0x3)
    0x2d30x51fe: v51fe2d3(0x2db) = CONST 
    0x2d60x51fe: JUMPI v51fe2d3(0x2db), v51fe2d2

    Begin block 0x2d70x51fe
    prev=[0x2c40x51fe], succ=[]
    =================================
    0x2d70x51fe: v51fe2d7(0x0) = CONST 
    0x2da0x51fe: REVERT v51fe2d7(0x0), v51fe2d7(0x0)

    Begin block 0x2db0x51fe
    prev=[0x2c40x51fe], succ=[0x2ed0x51fe, 0x2f10x51fe]
    =================================
    0x2dc0x51fe: v51fe2dc(0x0) = CONST 
    0x2de0x51fe: v51fe2de(0xc0) = CONST 
    0x2e00x51fe: MSTORE v51fe2de(0xc0), v51fe2dc(0x0)
    0x2e10x51fe: v51fe2e1(0x20) = CONST 
    0x2e30x51fe: v51fe2e3(0xc0) = CONST 
    0x2e50x51fe: v51fe2e5 = SHA3 v51fe2e3(0xc0), v51fe2e1(0x20)
    0x2e60x51fe: v51fe2e6 = ADD v51fe2e5, v51fe2ce
    0x2e70x51fe: v51fe2e7 = SLOAD v51fe2e6
    0x2e80x51fe: v51fe2e8 = EXTCODESIZE v51fe2e7
    0x2e90x51fe: v51fe2e9(0x2f1) = CONST 
    0x2ec0x51fe: JUMPI v51fe2e9(0x2f1), v51fe2e8

    Begin block 0x2ed0x51fe
    prev=[0x2db0x51fe], succ=[]
    =================================
    0x2ed0x51fe: v51fe2ed(0x0) = CONST 
    0x2f00x51fe: REVERT v51fe2ed(0x0), v51fe2ed(0x0)

    Begin block 0x2f10x51fe
    prev=[0x2db0x51fe], succ=[0x2fe0x51fe, 0x3020x51fe]
    =================================
    0x2f20x51fe: v51fe2f2(0x1c0) = CONST 
    0x2f50x51fe: v51fe2f5 = MLOAD v51fe2f2(0x1c0)
    0x2f60x51fe: v51fe2f6(0x3) = CONST 
    0x2f90x51fe: v51fe2f9 = LT v51fe2f5, v51fe2f6(0x3)
    0x2fa0x51fe: v51fe2fa(0x302) = CONST 
    0x2fd0x51fe: JUMPI v51fe2fa(0x302), v51fe2f9

    Begin block 0x2fe0x51fe
    prev=[0x2f10x51fe], succ=[]
    =================================
    0x2fe0x51fe: v51fe2fe(0x0) = CONST 
    0x3010x51fe: REVERT v51fe2fe(0x0), v51fe2fe(0x0)

    Begin block 0x3020x51fe
    prev=[0x2f10x51fe], succ=[0x3150x51fe, 0x3190x51fe]
    =================================
    0x3030x51fe: v51fe303(0x0) = CONST 
    0x3050x51fe: v51fe305(0xc0) = CONST 
    0x3070x51fe: MSTORE v51fe305(0xc0), v51fe303(0x0)
    0x3080x51fe: v51fe308(0x20) = CONST 
    0x30a0x51fe: v51fe30a(0xc0) = CONST 
    0x30c0x51fe: v51fe30c = SHA3 v51fe30a(0xc0), v51fe308(0x20)
    0x30d0x51fe: v51fe30d = ADD v51fe30c, v51fe2f5
    0x30e0x51fe: v51fe30e = SLOAD v51fe30d
    0x30f0x51fe: v51fe30f = ADDRESS 
    0x3100x51fe: v51fe310 = XOR v51fe30f, v51fe30e
    0x3110x51fe: v51fe311(0x319) = CONST 
    0x3140x51fe: JUMPI v51fe311(0x319), v51fe310

    Begin block 0x3150x51fe
    prev=[0x3020x51fe], succ=[]
    =================================
    0x3150x51fe: v51fe315(0x0) = CONST 
    0x3180x51fe: REVERT v51fe315(0x0), v51fe315(0x0)

    Begin block 0x3190x51fe
    prev=[0x3020x51fe], succ=[0x3390x51fe, 0x33d0x51fe]
    =================================
    0x31a0x51fe: v51fe31a(0x20) = CONST 
    0x31c0x51fe: v51fe31c(0x240) = CONST 
    0x31f0x51fe: v51fe31f(0x4) = CONST 
    0x3210x51fe: v51fe321(0x77c7b8fc) = CONST 
    0x3260x51fe: v51fe326(0x1e0) = CONST 
    0x3290x51fe: MSTORE v51fe326(0x1e0), v51fe321(0x77c7b8fc)
    0x32a0x51fe: v51fe32a(0x1fc) = CONST 
    0x32d0x51fe: v51fe32d(0x1c0) = CONST 
    0x3300x51fe: v51fe330 = MLOAD v51fe32d(0x1c0)
    0x3310x51fe: v51fe331(0x3) = CONST 
    0x3340x51fe: v51fe334 = LT v51fe330, v51fe331(0x3)
    0x3350x51fe: v51fe335(0x33d) = CONST 
    0x3380x51fe: JUMPI v51fe335(0x33d), v51fe334

    Begin block 0x3390x51fe
    prev=[0x3190x51fe], succ=[]
    =================================
    0x3390x51fe: v51fe339(0x0) = CONST 
    0x33c0x51fe: REVERT v51fe339(0x0), v51fe339(0x0)

    Begin block 0x33d0x51fe
    prev=[0x3190x51fe], succ=[0x3500x51fe, 0x3540x51fe]
    =================================
    0x33e0x51fe: v51fe33e(0x0) = CONST 
    0x3400x51fe: v51fe340(0xc0) = CONST 
    0x3420x51fe: MSTORE v51fe340(0xc0), v51fe33e(0x0)
    0x3430x51fe: v51fe343(0x20) = CONST 
    0x3450x51fe: v51fe345(0xc0) = CONST 
    0x3470x51fe: v51fe347 = SHA3 v51fe345(0xc0), v51fe343(0x20)
    0x3480x51fe: v51fe348 = ADD v51fe347, v51fe330
    0x3490x51fe: v51fe349 = SLOAD v51fe348
    0x34a0x51fe: v51fe34a = GAS 
    0x34b0x51fe: v51fe34b = STATICCALL v51fe34a, v51fe349, v51fe32a(0x1fc), v51fe31f(0x4), v51fe31c(0x240), v51fe31a(0x20)
    0x34c0x51fe: v51fe34c(0x354) = CONST 
    0x34f0x51fe: JUMPI v51fe34c(0x354), v51fe34b

    Begin block 0x3500x51fe
    prev=[0x33d0x51fe], succ=[]
    =================================
    0x3500x51fe: v51fe350(0x0) = CONST 
    0x3530x51fe: REVERT v51fe350(0x0), v51fe350(0x0)

    Begin block 0x3540x51fe
    prev=[0x33d0x51fe], succ=[0x36b0x51fe, 0x36f0x51fe]
    =================================
    0x3550x51fe: v51fe355(0x0) = CONST 
    0x3580x51fe: v51fe358(0x240) = CONST 
    0x35b0x51fe: v51fe35b = MLOAD v51fe358(0x240)
    0x35e0x51fe: v51fe35e = MUL v51fe2ca, v51fe35b
    0x3600x51fe: v51fe360 = ISZERO v51fe2ca
    0x3640x51fe: v51fe364 = DIV v51fe35e, v51fe2ca
    0x3650x51fe: v51fe365 = EQ v51fe364, v51fe35b
    0x3660x51fe: v51fe366 = OR v51fe365, v51fe360
    0x3670x51fe: v51fe367(0x36f) = CONST 
    0x36a0x51fe: JUMPI v51fe367(0x36f), v51fe366

    Begin block 0x36b0x51fe
    prev=[0x3540x51fe], succ=[]
    =================================
    0x36b0x51fe: v51fe36b(0x0) = CONST 
    0x36e0x51fe: REVERT v51fe36b(0x0), v51fe36b(0x0)

    Begin block 0x36f0x51fe
    prev=[0x3540x51fe], succ=[0x37a0x51fe]
    =================================
    0x3780x51fe: MSTORE v51fe2c8, v51fe35e

    Begin block 0x37a0x51fe
    prev=[0x36f0x51fe], succ=[0x2b00x51fe, 0x38a0x51fe]
    =================================
    0x37c0x51fe: v51fe37c = MLOAD v51fe2a5(0x1c0)
    0x37d0x51fe: v51fe37d(0x1) = CONST 
    0x37f0x51fe: v51fe37f = ADD v51fe37d(0x1), v51fe37c
    0x3820x51fe: MSTORE v51fe2a5(0x1c0), v51fe37f
    0x3840x51fe: v51fe384 = EQ v51fe2af(0x3), v51fe37f
    0x3850x51fe: v51fe385 = ISZERO v51fe384
    0x3860x51fe: v51fe386(0x2b0) = CONST 
    0x3890x51fe: JUMPI v51fe386(0x2b0), v51fe385

    Begin block 0x38a0x51fe
    prev=[0x37a0x51fe], succ=[0x3930x51fe]
    =================================
    0x38d0x51fe: v51fe38d(0x60) = CONST 
    0x38f0x51fe: v51fe38f(0x260) = CONST 
    0x3920x51fe: MSTORE v51fe38f(0x260), v51fe38d(0x60)

    Begin block 0x3930x51fe
    prev=[0x3a50x51fe, 0x38a0x51fe], succ=[0x3a10x51fe, 0x3a50x51fe]
    =================================
    0x3940x51fe: v51fe394(0x0) = CONST 
    0x3960x51fe: v51fe396(0x260) = CONST 
    0x3990x51fe: v51fe399 = MLOAD v51fe396(0x260)
    0x39a0x51fe: v51fe39a = GT v51fe399, v51fe394(0x0)
    0x39b0x51fe: v51fe39b = ISZERO v51fe39a
    0x39c0x51fe: v51fe39c = ISZERO v51fe39b
    0x39d0x51fe: v51fe39d(0x3a5) = CONST 
    0x3a00x51fe: JUMPI v51fe39d(0x3a5), v51fe39c

    Begin block 0x3a10x51fe
    prev=[0x3930x51fe], succ=[0x3c10x51fe]
    =================================
    0x3a10x51fe: v51fe3a1(0x3c1) = CONST 
    0x3a40x51fe: JUMP v51fe3a1(0x3c1)

    Begin block 0x3c10x51fe
    prev=[0x3a10x51fe], succ=[]
    =================================
    0x3c20x51fe: v51fe3c2(0x140) = CONST 
    0x3c50x51fe: v51fe3c5 = MLOAD v51fe3c2(0x140)
    0x3c60x51fe: JUMP v51fe3c5

    Begin block 0x3a50x51fe
    prev=[0x3930x51fe], succ=[0x3930x51fe]
    =================================
    0x3a60x51fe: v51fe3a6(0x20) = CONST 
    0x3a80x51fe: v51fe3a8(0x260) = CONST 
    0x3ab0x51fe: v51fe3ab = MLOAD v51fe3a8(0x260)
    0x3ac0x51fe: v51fe3ac = SUB v51fe3ab, v51fe3a6(0x20)
    0x3ad0x51fe: v51fe3ad(0x160) = CONST 
    0x3b00x51fe: v51fe3b0 = ADD v51fe3ad(0x160), v51fe3ac
    0x3b10x51fe: v51fe3b1 = MLOAD v51fe3b0
    0x3b20x51fe: v51fe3b2(0x20) = CONST 
    0x3b40x51fe: v51fe3b4(0x260) = CONST 
    0x3b70x51fe: v51fe3b7 = MLOAD v51fe3b4(0x260)
    0x3b80x51fe: v51fe3b8 = SUB v51fe3b7, v51fe3b2(0x20)
    0x3b90x51fe: v51fe3b9(0x260) = CONST 
    0x3bc0x51fe: MSTORE v51fe3b9(0x260), v51fe3b8
    0x3bd0x51fe: v51fe3bd(0x393) = CONST 
    0x3c00x51fe: JUMP v51fe3bd(0x393)

}

function get_dx(int128,int128,uint256)() public {
    Begin block 0x5201
    prev=[], succ=[0x2257, 0x225b]
    =================================
    0x2251: v2251 = CALLVALUE 
    0x2252: v2252 = ISZERO v2251
    0x2253: v2253(0x225b) = CONST 
    0x2256: JUMPI v2253(0x225b), v2252

    Begin block 0x2257
    prev=[0x5201], succ=[]
    =================================
    0x2257: v2257(0x0) = CONST 
    0x225a: REVERT v2257(0x0), v2257(0x0)

    Begin block 0x225b
    prev=[0x5201], succ=[0x226d, 0x2271]
    =================================
    0x225c: v225c(0x60) = CONST 
    0x225e: v225e = MLOAD v225c(0x60)
    0x225f: v225f(0x4) = CONST 
    0x2261: v2261 = CALLDATALOAD v225f(0x4)
    0x2263: v2263(0x40) = CONST 
    0x2265: v2265 = MLOAD v2263(0x40)
    0x2267: v2267 = SGT v2261, v2265
    0x2268: v2268 = ISZERO v2267
    0x2269: v2269(0x2271) = CONST 
    0x226c: JUMPI v2269(0x2271), v2268

    Begin block 0x226d
    prev=[0x225b], succ=[]
    =================================
    0x226d: v226d(0x0) = CONST 
    0x2270: REVERT v226d(0x0), v226d(0x0)

    Begin block 0x2271
    prev=[0x225b], succ=[0x227b, 0x227f]
    =================================
    0x2275: v2275 = SLT v2261, v225e
    0x2276: v2276 = ISZERO v2275
    0x2277: v2277(0x227f) = CONST 
    0x227a: JUMPI v2277(0x227f), v2276

    Begin block 0x227b
    prev=[0x2271], succ=[]
    =================================
    0x227b: v227b(0x0) = CONST 
    0x227e: REVERT v227b(0x0), v227b(0x0)

    Begin block 0x227f
    prev=[0x2271], succ=[0x2292, 0x2296]
    =================================
    0x2281: v2281(0x60) = CONST 
    0x2283: v2283 = MLOAD v2281(0x60)
    0x2284: v2284(0x24) = CONST 
    0x2286: v2286 = CALLDATALOAD v2284(0x24)
    0x2288: v2288(0x40) = CONST 
    0x228a: v228a = MLOAD v2288(0x40)
    0x228c: v228c = SGT v2286, v228a
    0x228d: v228d = ISZERO v228c
    0x228e: v228e(0x2296) = CONST 
    0x2291: JUMPI v228e(0x2296), v228d

    Begin block 0x2292
    prev=[0x227f], succ=[]
    =================================
    0x2292: v2292(0x0) = CONST 
    0x2295: REVERT v2292(0x0), v2292(0x0)

    Begin block 0x2296
    prev=[0x227f], succ=[0x22a0, 0x22a4]
    =================================
    0x229a: v229a = SLT v2286, v2283
    0x229b: v229b = ISZERO v229a
    0x229c: v229c(0x22a4) = CONST 
    0x229f: JUMPI v229c(0x22a4), v229b

    Begin block 0x22a0
    prev=[0x2296], succ=[]
    =================================
    0x22a0: v22a0(0x0) = CONST 
    0x22a3: REVERT v22a0(0x0), v22a0(0x0)

    Begin block 0x22a4
    prev=[0x2296], succ=[0x2820x5201]
    =================================
    0x22a6: v22a6(0x140) = CONST 
    0x22a9: v22a9(0x140) = CONST 
    0x22ac: v22ac = MLOAD v22a9(0x140)
    0x22ad: v22ad(0x160) = CONST 
    0x22b0: v22b0 = MLOAD v22ad(0x160)
    0x22b1: v22b1(0x180) = CONST 
    0x22b4: v22b4 = MLOAD v22b1(0x180)
    0x22b5: v22b5(0x6) = CONST 
    0x22b7: v22b7(0x22b7) = CONST 
    0x22b8: v22b8(0x22bd) = ADD v22b7(0x22b7), v22b5(0x6)
    0x22b9: v22b9(0x282) = CONST 
    0x22bc: JUMP v22b9(0x282)

    Begin block 0x2820x5201
    prev=[0x22a4], succ=[0x2b00x5201]
    =================================
    0x2830x5201: v5201283(0x140) = CONST 
    0x2860x5201: MSTORE v5201283(0x140), v22b8(0x22bd)
    0x2870x5201: v5201287(0x160) = CONST 
    0x28a0x5201: v520128a(0xe8d4a51000) = CONST 
    0x2910x5201: MSTORE v5201287(0x160), v520128a(0xe8d4a51000)
    0x2920x5201: v5201292(0x1) = CONST 
    0x2950x5201: v5201295(0x20) = CONST 
    0x2970x5201: v5201297(0x180) = ADD v5201295(0x20), v5201287(0x160)
    0x2980x5201: MSTORE v5201297(0x180), v5201292(0x1)
    0x2990x5201: v5201299(0xe8d4a51000) = CONST 
    0x2a00x5201: v52012a0(0x40) = CONST 
    0x2a20x5201: v52012a2(0x1a0) = ADD v52012a0(0x40), v5201287(0x160)
    0x2a30x5201: MSTORE v52012a2(0x1a0), v5201299(0xe8d4a51000)
    0x2a50x5201: v52012a5(0x1c0) = CONST 
    0x2a80x5201: v52012a8(0x0) = CONST 
    0x2aa0x5201: v52012aa(0x3) = CONST 
    0x2ae0x5201: MSTORE v52012a5(0x1c0), v52012a8(0x0)
    0x2af0x5201: v52012af(0x3) = ADD v52012aa(0x3), v52012a8(0x0)

    Begin block 0x2b00x5201
    prev=[0x37a0x5201, 0x2820x5201], succ=[0x2c00x5201, 0x2c40x5201]
    =================================
    0x2b10x5201: v52012b1(0x160) = CONST 
    0x2b40x5201: v52012b4(0x1c0) = CONST 
    0x2b70x5201: v52012b7 = MLOAD v52012b4(0x1c0)
    0x2b80x5201: v52012b8(0x3) = CONST 
    0x2bb0x5201: v52012bb = LT v52012b7, v52012b8(0x3)
    0x2bc0x5201: v52012bc(0x2c4) = CONST 
    0x2bf0x5201: JUMPI v52012bc(0x2c4), v52012bb

    Begin block 0x2c00x5201
    prev=[0x2b00x5201], succ=[]
    =================================
    0x2c00x5201: v52012c0(0x0) = CONST 
    0x2c30x5201: REVERT v52012c0(0x0), v52012c0(0x0)

    Begin block 0x2c40x5201
    prev=[0x2b00x5201], succ=[0x2d70x5201, 0x2db0x5201]
    =================================
    0x2c50x5201: v52012c5(0x20) = CONST 
    0x2c70x5201: v52012c7 = MUL v52012c5(0x20), v52012b7
    0x2c80x5201: v52012c8 = ADD v52012c7, v52012b1(0x160)
    0x2ca0x5201: v52012ca = MLOAD v52012c8
    0x2cb0x5201: v52012cb(0x1c0) = CONST 
    0x2ce0x5201: v52012ce = MLOAD v52012cb(0x1c0)
    0x2cf0x5201: v52012cf(0x3) = CONST 
    0x2d20x5201: v52012d2 = LT v52012ce, v52012cf(0x3)
    0x2d30x5201: v52012d3(0x2db) = CONST 
    0x2d60x5201: JUMPI v52012d3(0x2db), v52012d2

    Begin block 0x2d70x5201
    prev=[0x2c40x5201], succ=[]
    =================================
    0x2d70x5201: v52012d7(0x0) = CONST 
    0x2da0x5201: REVERT v52012d7(0x0), v52012d7(0x0)

    Begin block 0x2db0x5201
    prev=[0x2c40x5201], succ=[0x2ed0x5201, 0x2f10x5201]
    =================================
    0x2dc0x5201: v52012dc(0x0) = CONST 
    0x2de0x5201: v52012de(0xc0) = CONST 
    0x2e00x5201: MSTORE v52012de(0xc0), v52012dc(0x0)
    0x2e10x5201: v52012e1(0x20) = CONST 
    0x2e30x5201: v52012e3(0xc0) = CONST 
    0x2e50x5201: v52012e5 = SHA3 v52012e3(0xc0), v52012e1(0x20)
    0x2e60x5201: v52012e6 = ADD v52012e5, v52012ce
    0x2e70x5201: v52012e7 = SLOAD v52012e6
    0x2e80x5201: v52012e8 = EXTCODESIZE v52012e7
    0x2e90x5201: v52012e9(0x2f1) = CONST 
    0x2ec0x5201: JUMPI v52012e9(0x2f1), v52012e8

    Begin block 0x2ed0x5201
    prev=[0x2db0x5201], succ=[]
    =================================
    0x2ed0x5201: v52012ed(0x0) = CONST 
    0x2f00x5201: REVERT v52012ed(0x0), v52012ed(0x0)

    Begin block 0x2f10x5201
    prev=[0x2db0x5201], succ=[0x2fe0x5201, 0x3020x5201]
    =================================
    0x2f20x5201: v52012f2(0x1c0) = CONST 
    0x2f50x5201: v52012f5 = MLOAD v52012f2(0x1c0)
    0x2f60x5201: v52012f6(0x3) = CONST 
    0x2f90x5201: v52012f9 = LT v52012f5, v52012f6(0x3)
    0x2fa0x5201: v52012fa(0x302) = CONST 
    0x2fd0x5201: JUMPI v52012fa(0x302), v52012f9

    Begin block 0x2fe0x5201
    prev=[0x2f10x5201], succ=[]
    =================================
    0x2fe0x5201: v52012fe(0x0) = CONST 
    0x3010x5201: REVERT v52012fe(0x0), v52012fe(0x0)

    Begin block 0x3020x5201
    prev=[0x2f10x5201], succ=[0x3150x5201, 0x3190x5201]
    =================================
    0x3030x5201: v5201303(0x0) = CONST 
    0x3050x5201: v5201305(0xc0) = CONST 
    0x3070x5201: MSTORE v5201305(0xc0), v5201303(0x0)
    0x3080x5201: v5201308(0x20) = CONST 
    0x30a0x5201: v520130a(0xc0) = CONST 
    0x30c0x5201: v520130c = SHA3 v520130a(0xc0), v5201308(0x20)
    0x30d0x5201: v520130d = ADD v520130c, v52012f5
    0x30e0x5201: v520130e = SLOAD v520130d
    0x30f0x5201: v520130f = ADDRESS 
    0x3100x5201: v5201310 = XOR v520130f, v520130e
    0x3110x5201: v5201311(0x319) = CONST 
    0x3140x5201: JUMPI v5201311(0x319), v5201310

    Begin block 0x3150x5201
    prev=[0x3020x5201], succ=[]
    =================================
    0x3150x5201: v5201315(0x0) = CONST 
    0x3180x5201: REVERT v5201315(0x0), v5201315(0x0)

    Begin block 0x3190x5201
    prev=[0x3020x5201], succ=[0x3390x5201, 0x33d0x5201]
    =================================
    0x31a0x5201: v520131a(0x20) = CONST 
    0x31c0x5201: v520131c(0x240) = CONST 
    0x31f0x5201: v520131f(0x4) = CONST 
    0x3210x5201: v5201321(0x77c7b8fc) = CONST 
    0x3260x5201: v5201326(0x1e0) = CONST 
    0x3290x5201: MSTORE v5201326(0x1e0), v5201321(0x77c7b8fc)
    0x32a0x5201: v520132a(0x1fc) = CONST 
    0x32d0x5201: v520132d(0x1c0) = CONST 
    0x3300x5201: v5201330 = MLOAD v520132d(0x1c0)
    0x3310x5201: v5201331(0x3) = CONST 
    0x3340x5201: v5201334 = LT v5201330, v5201331(0x3)
    0x3350x5201: v5201335(0x33d) = CONST 
    0x3380x5201: JUMPI v5201335(0x33d), v5201334

    Begin block 0x3390x5201
    prev=[0x3190x5201], succ=[]
    =================================
    0x3390x5201: v5201339(0x0) = CONST 
    0x33c0x5201: REVERT v5201339(0x0), v5201339(0x0)

    Begin block 0x33d0x5201
    prev=[0x3190x5201], succ=[0x3500x5201, 0x3540x5201]
    =================================
    0x33e0x5201: v520133e(0x0) = CONST 
    0x3400x5201: v5201340(0xc0) = CONST 
    0x3420x5201: MSTORE v5201340(0xc0), v520133e(0x0)
    0x3430x5201: v5201343(0x20) = CONST 
    0x3450x5201: v5201345(0xc0) = CONST 
    0x3470x5201: v5201347 = SHA3 v5201345(0xc0), v5201343(0x20)
    0x3480x5201: v5201348 = ADD v5201347, v5201330
    0x3490x5201: v5201349 = SLOAD v5201348
    0x34a0x5201: v520134a = GAS 
    0x34b0x5201: v520134b = STATICCALL v520134a, v5201349, v520132a(0x1fc), v520131f(0x4), v520131c(0x240), v520131a(0x20)
    0x34c0x5201: v520134c(0x354) = CONST 
    0x34f0x5201: JUMPI v520134c(0x354), v520134b

    Begin block 0x3500x5201
    prev=[0x33d0x5201], succ=[]
    =================================
    0x3500x5201: v5201350(0x0) = CONST 
    0x3530x5201: REVERT v5201350(0x0), v5201350(0x0)

    Begin block 0x3540x5201
    prev=[0x33d0x5201], succ=[0x36b0x5201, 0x36f0x5201]
    =================================
    0x3550x5201: v5201355(0x0) = CONST 
    0x3580x5201: v5201358(0x240) = CONST 
    0x35b0x5201: v520135b = MLOAD v5201358(0x240)
    0x35e0x5201: v520135e = MUL v52012ca, v520135b
    0x3600x5201: v5201360 = ISZERO v52012ca
    0x3640x5201: v5201364 = DIV v520135e, v52012ca
    0x3650x5201: v5201365 = EQ v5201364, v520135b
    0x3660x5201: v5201366 = OR v5201365, v5201360
    0x3670x5201: v5201367(0x36f) = CONST 
    0x36a0x5201: JUMPI v5201367(0x36f), v5201366

    Begin block 0x36b0x5201
    prev=[0x3540x5201], succ=[]
    =================================
    0x36b0x5201: v520136b(0x0) = CONST 
    0x36e0x5201: REVERT v520136b(0x0), v520136b(0x0)

    Begin block 0x36f0x5201
    prev=[0x3540x5201], succ=[0x37a0x5201]
    =================================
    0x3780x5201: MSTORE v52012c8, v520135e

    Begin block 0x37a0x5201
    prev=[0x36f0x5201], succ=[0x2b00x5201, 0x38a0x5201]
    =================================
    0x37c0x5201: v520137c = MLOAD v52012a5(0x1c0)
    0x37d0x5201: v520137d(0x1) = CONST 
    0x37f0x5201: v520137f = ADD v520137d(0x1), v520137c
    0x3820x5201: MSTORE v52012a5(0x1c0), v520137f
    0x3840x5201: v5201384 = EQ v52012af(0x3), v520137f
    0x3850x5201: v5201385 = ISZERO v5201384
    0x3860x5201: v5201386(0x2b0) = CONST 
    0x3890x5201: JUMPI v5201386(0x2b0), v5201385

    Begin block 0x38a0x5201
    prev=[0x37a0x5201], succ=[0x3930x5201]
    =================================
    0x38d0x5201: v520138d(0x60) = CONST 
    0x38f0x5201: v520138f(0x260) = CONST 
    0x3920x5201: MSTORE v520138f(0x260), v520138d(0x60)

    Begin block 0x3930x5201
    prev=[0x3a50x5201, 0x38a0x5201], succ=[0x3a10x5201, 0x3a50x5201]
    =================================
    0x3940x5201: v5201394(0x0) = CONST 
    0x3960x5201: v5201396(0x260) = CONST 
    0x3990x5201: v5201399 = MLOAD v5201396(0x260)
    0x39a0x5201: v520139a = GT v5201399, v5201394(0x0)
    0x39b0x5201: v520139b = ISZERO v520139a
    0x39c0x5201: v520139c = ISZERO v520139b
    0x39d0x5201: v520139d(0x3a5) = CONST 
    0x3a00x5201: JUMPI v520139d(0x3a5), v520139c

    Begin block 0x3a10x5201
    prev=[0x3930x5201], succ=[0x3c10x5201]
    =================================
    0x3a10x5201: v52013a1(0x3c1) = CONST 
    0x3a40x5201: JUMP v52013a1(0x3c1)

    Begin block 0x3c10x5201
    prev=[0x3a10x5201], succ=[]
    =================================
    0x3c20x5201: v52013c2(0x140) = CONST 
    0x3c50x5201: v52013c5 = MLOAD v52013c2(0x140)
    0x3c60x5201: JUMP v52013c5

    Begin block 0x3a50x5201
    prev=[0x3930x5201], succ=[0x3930x5201]
    =================================
    0x3a60x5201: v52013a6(0x20) = CONST 
    0x3a80x5201: v52013a8(0x260) = CONST 
    0x3ab0x5201: v52013ab = MLOAD v52013a8(0x260)
    0x3ac0x5201: v52013ac = SUB v52013ab, v52013a6(0x20)
    0x3ad0x5201: v52013ad(0x160) = CONST 
    0x3b00x5201: v52013b0 = ADD v52013ad(0x160), v52013ac
    0x3b10x5201: v52013b1 = MLOAD v52013b0
    0x3b20x5201: v52013b2(0x20) = CONST 
    0x3b40x5201: v52013b4(0x260) = CONST 
    0x3b70x5201: v52013b7 = MLOAD v52013b4(0x260)
    0x3b80x5201: v52013b8 = SUB v52013b7, v52013b2(0x20)
    0x3b90x5201: v52013b9(0x260) = CONST 
    0x3bc0x5201: MSTORE v52013b9(0x260), v52013b8
    0x3bd0x5201: v52013bd(0x393) = CONST 
    0x3c00x5201: JUMP v52013bd(0x393)

}

function get_dy_underlying(int128,int128,uint256)() public {
    Begin block 0x5204
    prev=[], succ=[0x25e1, 0x25e5]
    =================================
    0x25db: v25db = CALLVALUE 
    0x25dc: v25dc = ISZERO v25db
    0x25dd: v25dd(0x25e5) = CONST 
    0x25e0: JUMPI v25dd(0x25e5), v25dc

    Begin block 0x25e1
    prev=[0x5204], succ=[]
    =================================
    0x25e1: v25e1(0x0) = CONST 
    0x25e4: REVERT v25e1(0x0), v25e1(0x0)

    Begin block 0x25e5
    prev=[0x5204], succ=[0x25f7, 0x25fb]
    =================================
    0x25e6: v25e6(0x60) = CONST 
    0x25e8: v25e8 = MLOAD v25e6(0x60)
    0x25e9: v25e9(0x4) = CONST 
    0x25eb: v25eb = CALLDATALOAD v25e9(0x4)
    0x25ed: v25ed(0x40) = CONST 
    0x25ef: v25ef = MLOAD v25ed(0x40)
    0x25f1: v25f1 = SGT v25eb, v25ef
    0x25f2: v25f2 = ISZERO v25f1
    0x25f3: v25f3(0x25fb) = CONST 
    0x25f6: JUMPI v25f3(0x25fb), v25f2

    Begin block 0x25f7
    prev=[0x25e5], succ=[]
    =================================
    0x25f7: v25f7(0x0) = CONST 
    0x25fa: REVERT v25f7(0x0), v25f7(0x0)

    Begin block 0x25fb
    prev=[0x25e5], succ=[0x2605, 0x2609]
    =================================
    0x25ff: v25ff = SLT v25eb, v25e8
    0x2600: v2600 = ISZERO v25ff
    0x2601: v2601(0x2609) = CONST 
    0x2604: JUMPI v2601(0x2609), v2600

    Begin block 0x2605
    prev=[0x25fb], succ=[]
    =================================
    0x2605: v2605(0x0) = CONST 
    0x2608: REVERT v2605(0x0), v2605(0x0)

    Begin block 0x2609
    prev=[0x25fb], succ=[0x261c, 0x2620]
    =================================
    0x260b: v260b(0x60) = CONST 
    0x260d: v260d = MLOAD v260b(0x60)
    0x260e: v260e(0x24) = CONST 
    0x2610: v2610 = CALLDATALOAD v260e(0x24)
    0x2612: v2612(0x40) = CONST 
    0x2614: v2614 = MLOAD v2612(0x40)
    0x2616: v2616 = SGT v2610, v2614
    0x2617: v2617 = ISZERO v2616
    0x2618: v2618(0x2620) = CONST 
    0x261b: JUMPI v2618(0x2620), v2617

    Begin block 0x261c
    prev=[0x2609], succ=[]
    =================================
    0x261c: v261c(0x0) = CONST 
    0x261f: REVERT v261c(0x0), v261c(0x0)

    Begin block 0x2620
    prev=[0x2609], succ=[0x262a, 0x262e]
    =================================
    0x2624: v2624 = SLT v2610, v260d
    0x2625: v2625 = ISZERO v2624
    0x2626: v2626(0x262e) = CONST 
    0x2629: JUMPI v2626(0x262e), v2625

    Begin block 0x262a
    prev=[0x2620], succ=[]
    =================================
    0x262a: v262a(0x0) = CONST 
    0x262d: REVERT v262a(0x0), v262a(0x0)

    Begin block 0x262e
    prev=[0x2620], succ=[0x2820x5204]
    =================================
    0x2630: v2630(0x140) = CONST 
    0x2633: v2633(0x140) = CONST 
    0x2636: v2636 = MLOAD v2633(0x140)
    0x2637: v2637(0x160) = CONST 
    0x263a: v263a = MLOAD v2637(0x160)
    0x263b: v263b(0x180) = CONST 
    0x263e: v263e = MLOAD v263b(0x180)
    0x263f: v263f(0x6) = CONST 
    0x2641: v2641(0x2641) = CONST 
    0x2642: v2642(0x2647) = ADD v2641(0x2641), v263f(0x6)
    0x2643: v2643(0x282) = CONST 
    0x2646: JUMP v2643(0x282)

    Begin block 0x2820x5204
    prev=[0x262e], succ=[0x2b00x5204]
    =================================
    0x2830x5204: v5204283(0x140) = CONST 
    0x2860x5204: MSTORE v5204283(0x140), v2642(0x2647)
    0x2870x5204: v5204287(0x160) = CONST 
    0x28a0x5204: v520428a(0xe8d4a51000) = CONST 
    0x2910x5204: MSTORE v5204287(0x160), v520428a(0xe8d4a51000)
    0x2920x5204: v5204292(0x1) = CONST 
    0x2950x5204: v5204295(0x20) = CONST 
    0x2970x5204: v5204297(0x180) = ADD v5204295(0x20), v5204287(0x160)
    0x2980x5204: MSTORE v5204297(0x180), v5204292(0x1)
    0x2990x5204: v5204299(0xe8d4a51000) = CONST 
    0x2a00x5204: v52042a0(0x40) = CONST 
    0x2a20x5204: v52042a2(0x1a0) = ADD v52042a0(0x40), v5204287(0x160)
    0x2a30x5204: MSTORE v52042a2(0x1a0), v5204299(0xe8d4a51000)
    0x2a50x5204: v52042a5(0x1c0) = CONST 
    0x2a80x5204: v52042a8(0x0) = CONST 
    0x2aa0x5204: v52042aa(0x3) = CONST 
    0x2ae0x5204: MSTORE v52042a5(0x1c0), v52042a8(0x0)
    0x2af0x5204: v52042af(0x3) = ADD v52042aa(0x3), v52042a8(0x0)

    Begin block 0x2b00x5204
    prev=[0x37a0x5204, 0x2820x5204], succ=[0x2c00x5204, 0x2c40x5204]
    =================================
    0x2b10x5204: v52042b1(0x160) = CONST 
    0x2b40x5204: v52042b4(0x1c0) = CONST 
    0x2b70x5204: v52042b7 = MLOAD v52042b4(0x1c0)
    0x2b80x5204: v52042b8(0x3) = CONST 
    0x2bb0x5204: v52042bb = LT v52042b7, v52042b8(0x3)
    0x2bc0x5204: v52042bc(0x2c4) = CONST 
    0x2bf0x5204: JUMPI v52042bc(0x2c4), v52042bb

    Begin block 0x2c00x5204
    prev=[0x2b00x5204], succ=[]
    =================================
    0x2c00x5204: v52042c0(0x0) = CONST 
    0x2c30x5204: REVERT v52042c0(0x0), v52042c0(0x0)

    Begin block 0x2c40x5204
    prev=[0x2b00x5204], succ=[0x2d70x5204, 0x2db0x5204]
    =================================
    0x2c50x5204: v52042c5(0x20) = CONST 
    0x2c70x5204: v52042c7 = MUL v52042c5(0x20), v52042b7
    0x2c80x5204: v52042c8 = ADD v52042c7, v52042b1(0x160)
    0x2ca0x5204: v52042ca = MLOAD v52042c8
    0x2cb0x5204: v52042cb(0x1c0) = CONST 
    0x2ce0x5204: v52042ce = MLOAD v52042cb(0x1c0)
    0x2cf0x5204: v52042cf(0x3) = CONST 
    0x2d20x5204: v52042d2 = LT v52042ce, v52042cf(0x3)
    0x2d30x5204: v52042d3(0x2db) = CONST 
    0x2d60x5204: JUMPI v52042d3(0x2db), v52042d2

    Begin block 0x2d70x5204
    prev=[0x2c40x5204], succ=[]
    =================================
    0x2d70x5204: v52042d7(0x0) = CONST 
    0x2da0x5204: REVERT v52042d7(0x0), v52042d7(0x0)

    Begin block 0x2db0x5204
    prev=[0x2c40x5204], succ=[0x2ed0x5204, 0x2f10x5204]
    =================================
    0x2dc0x5204: v52042dc(0x0) = CONST 
    0x2de0x5204: v52042de(0xc0) = CONST 
    0x2e00x5204: MSTORE v52042de(0xc0), v52042dc(0x0)
    0x2e10x5204: v52042e1(0x20) = CONST 
    0x2e30x5204: v52042e3(0xc0) = CONST 
    0x2e50x5204: v52042e5 = SHA3 v52042e3(0xc0), v52042e1(0x20)
    0x2e60x5204: v52042e6 = ADD v52042e5, v52042ce
    0x2e70x5204: v52042e7 = SLOAD v52042e6
    0x2e80x5204: v52042e8 = EXTCODESIZE v52042e7
    0x2e90x5204: v52042e9(0x2f1) = CONST 
    0x2ec0x5204: JUMPI v52042e9(0x2f1), v52042e8

    Begin block 0x2ed0x5204
    prev=[0x2db0x5204], succ=[]
    =================================
    0x2ed0x5204: v52042ed(0x0) = CONST 
    0x2f00x5204: REVERT v52042ed(0x0), v52042ed(0x0)

    Begin block 0x2f10x5204
    prev=[0x2db0x5204], succ=[0x2fe0x5204, 0x3020x5204]
    =================================
    0x2f20x5204: v52042f2(0x1c0) = CONST 
    0x2f50x5204: v52042f5 = MLOAD v52042f2(0x1c0)
    0x2f60x5204: v52042f6(0x3) = CONST 
    0x2f90x5204: v52042f9 = LT v52042f5, v52042f6(0x3)
    0x2fa0x5204: v52042fa(0x302) = CONST 
    0x2fd0x5204: JUMPI v52042fa(0x302), v52042f9

    Begin block 0x2fe0x5204
    prev=[0x2f10x5204], succ=[]
    =================================
    0x2fe0x5204: v52042fe(0x0) = CONST 
    0x3010x5204: REVERT v52042fe(0x0), v52042fe(0x0)

    Begin block 0x3020x5204
    prev=[0x2f10x5204], succ=[0x3150x5204, 0x3190x5204]
    =================================
    0x3030x5204: v5204303(0x0) = CONST 
    0x3050x5204: v5204305(0xc0) = CONST 
    0x3070x5204: MSTORE v5204305(0xc0), v5204303(0x0)
    0x3080x5204: v5204308(0x20) = CONST 
    0x30a0x5204: v520430a(0xc0) = CONST 
    0x30c0x5204: v520430c = SHA3 v520430a(0xc0), v5204308(0x20)
    0x30d0x5204: v520430d = ADD v520430c, v52042f5
    0x30e0x5204: v520430e = SLOAD v520430d
    0x30f0x5204: v520430f = ADDRESS 
    0x3100x5204: v5204310 = XOR v520430f, v520430e
    0x3110x5204: v5204311(0x319) = CONST 
    0x3140x5204: JUMPI v5204311(0x319), v5204310

    Begin block 0x3150x5204
    prev=[0x3020x5204], succ=[]
    =================================
    0x3150x5204: v5204315(0x0) = CONST 
    0x3180x5204: REVERT v5204315(0x0), v5204315(0x0)

    Begin block 0x3190x5204
    prev=[0x3020x5204], succ=[0x3390x5204, 0x33d0x5204]
    =================================
    0x31a0x5204: v520431a(0x20) = CONST 
    0x31c0x5204: v520431c(0x240) = CONST 
    0x31f0x5204: v520431f(0x4) = CONST 
    0x3210x5204: v5204321(0x77c7b8fc) = CONST 
    0x3260x5204: v5204326(0x1e0) = CONST 
    0x3290x5204: MSTORE v5204326(0x1e0), v5204321(0x77c7b8fc)
    0x32a0x5204: v520432a(0x1fc) = CONST 
    0x32d0x5204: v520432d(0x1c0) = CONST 
    0x3300x5204: v5204330 = MLOAD v520432d(0x1c0)
    0x3310x5204: v5204331(0x3) = CONST 
    0x3340x5204: v5204334 = LT v5204330, v5204331(0x3)
    0x3350x5204: v5204335(0x33d) = CONST 
    0x3380x5204: JUMPI v5204335(0x33d), v5204334

    Begin block 0x3390x5204
    prev=[0x3190x5204], succ=[]
    =================================
    0x3390x5204: v5204339(0x0) = CONST 
    0x33c0x5204: REVERT v5204339(0x0), v5204339(0x0)

    Begin block 0x33d0x5204
    prev=[0x3190x5204], succ=[0x3500x5204, 0x3540x5204]
    =================================
    0x33e0x5204: v520433e(0x0) = CONST 
    0x3400x5204: v5204340(0xc0) = CONST 
    0x3420x5204: MSTORE v5204340(0xc0), v520433e(0x0)
    0x3430x5204: v5204343(0x20) = CONST 
    0x3450x5204: v5204345(0xc0) = CONST 
    0x3470x5204: v5204347 = SHA3 v5204345(0xc0), v5204343(0x20)
    0x3480x5204: v5204348 = ADD v5204347, v5204330
    0x3490x5204: v5204349 = SLOAD v5204348
    0x34a0x5204: v520434a = GAS 
    0x34b0x5204: v520434b = STATICCALL v520434a, v5204349, v520432a(0x1fc), v520431f(0x4), v520431c(0x240), v520431a(0x20)
    0x34c0x5204: v520434c(0x354) = CONST 
    0x34f0x5204: JUMPI v520434c(0x354), v520434b

    Begin block 0x3500x5204
    prev=[0x33d0x5204], succ=[]
    =================================
    0x3500x5204: v5204350(0x0) = CONST 
    0x3530x5204: REVERT v5204350(0x0), v5204350(0x0)

    Begin block 0x3540x5204
    prev=[0x33d0x5204], succ=[0x36b0x5204, 0x36f0x5204]
    =================================
    0x3550x5204: v5204355(0x0) = CONST 
    0x3580x5204: v5204358(0x240) = CONST 
    0x35b0x5204: v520435b = MLOAD v5204358(0x240)
    0x35e0x5204: v520435e = MUL v52042ca, v520435b
    0x3600x5204: v5204360 = ISZERO v52042ca
    0x3640x5204: v5204364 = DIV v520435e, v52042ca
    0x3650x5204: v5204365 = EQ v5204364, v520435b
    0x3660x5204: v5204366 = OR v5204365, v5204360
    0x3670x5204: v5204367(0x36f) = CONST 
    0x36a0x5204: JUMPI v5204367(0x36f), v5204366

    Begin block 0x36b0x5204
    prev=[0x3540x5204], succ=[]
    =================================
    0x36b0x5204: v520436b(0x0) = CONST 
    0x36e0x5204: REVERT v520436b(0x0), v520436b(0x0)

    Begin block 0x36f0x5204
    prev=[0x3540x5204], succ=[0x37a0x5204]
    =================================
    0x3780x5204: MSTORE v52042c8, v520435e

    Begin block 0x37a0x5204
    prev=[0x36f0x5204], succ=[0x2b00x5204, 0x38a0x5204]
    =================================
    0x37c0x5204: v520437c = MLOAD v52042a5(0x1c0)
    0x37d0x5204: v520437d(0x1) = CONST 
    0x37f0x5204: v520437f = ADD v520437d(0x1), v520437c
    0x3820x5204: MSTORE v52042a5(0x1c0), v520437f
    0x3840x5204: v5204384 = EQ v52042af(0x3), v520437f
    0x3850x5204: v5204385 = ISZERO v5204384
    0x3860x5204: v5204386(0x2b0) = CONST 
    0x3890x5204: JUMPI v5204386(0x2b0), v5204385

    Begin block 0x38a0x5204
    prev=[0x37a0x5204], succ=[0x3930x5204]
    =================================
    0x38d0x5204: v520438d(0x60) = CONST 
    0x38f0x5204: v520438f(0x260) = CONST 
    0x3920x5204: MSTORE v520438f(0x260), v520438d(0x60)

    Begin block 0x3930x5204
    prev=[0x3a50x5204, 0x38a0x5204], succ=[0x3a10x5204, 0x3a50x5204]
    =================================
    0x3940x5204: v5204394(0x0) = CONST 
    0x3960x5204: v5204396(0x260) = CONST 
    0x3990x5204: v5204399 = MLOAD v5204396(0x260)
    0x39a0x5204: v520439a = GT v5204399, v5204394(0x0)
    0x39b0x5204: v520439b = ISZERO v520439a
    0x39c0x5204: v520439c = ISZERO v520439b
    0x39d0x5204: v520439d(0x3a5) = CONST 
    0x3a00x5204: JUMPI v520439d(0x3a5), v520439c

    Begin block 0x3a10x5204
    prev=[0x3930x5204], succ=[0x3c10x5204]
    =================================
    0x3a10x5204: v52043a1(0x3c1) = CONST 
    0x3a40x5204: JUMP v52043a1(0x3c1)

    Begin block 0x3c10x5204
    prev=[0x3a10x5204], succ=[]
    =================================
    0x3c20x5204: v52043c2(0x140) = CONST 
    0x3c50x5204: v52043c5 = MLOAD v52043c2(0x140)
    0x3c60x5204: JUMP v52043c5

    Begin block 0x3a50x5204
    prev=[0x3930x5204], succ=[0x3930x5204]
    =================================
    0x3a60x5204: v52043a6(0x20) = CONST 
    0x3a80x5204: v52043a8(0x260) = CONST 
    0x3ab0x5204: v52043ab = MLOAD v52043a8(0x260)
    0x3ac0x5204: v52043ac = SUB v52043ab, v52043a6(0x20)
    0x3ad0x5204: v52043ad(0x160) = CONST 
    0x3b00x5204: v52043b0 = ADD v52043ad(0x160), v52043ac
    0x3b10x5204: v52043b1 = MLOAD v52043b0
    0x3b20x5204: v52043b2(0x20) = CONST 
    0x3b40x5204: v52043b4(0x260) = CONST 
    0x3b70x5204: v52043b7 = MLOAD v52043b4(0x260)
    0x3b80x5204: v52043b8 = SUB v52043b7, v52043b2(0x20)
    0x3b90x5204: v52043b9(0x260) = CONST 
    0x3bc0x5204: MSTORE v52043b9(0x260), v52043b8
    0x3bd0x5204: v52043bd(0x393) = CONST 
    0x3c00x5204: JUMP v52043bd(0x393)

}

function get_dx_underlying(int128,int128,uint256)() public {
    Begin block 0x5207
    prev=[], succ=[0x2953, 0x2957]
    =================================
    0x294d: v294d = CALLVALUE 
    0x294e: v294e = ISZERO v294d
    0x294f: v294f(0x2957) = CONST 
    0x2952: JUMPI v294f(0x2957), v294e

    Begin block 0x2953
    prev=[0x5207], succ=[]
    =================================
    0x2953: v2953(0x0) = CONST 
    0x2956: REVERT v2953(0x0), v2953(0x0)

    Begin block 0x2957
    prev=[0x5207], succ=[0x2969, 0x296d]
    =================================
    0x2958: v2958(0x60) = CONST 
    0x295a: v295a = MLOAD v2958(0x60)
    0x295b: v295b(0x4) = CONST 
    0x295d: v295d = CALLDATALOAD v295b(0x4)
    0x295f: v295f(0x40) = CONST 
    0x2961: v2961 = MLOAD v295f(0x40)
    0x2963: v2963 = SGT v295d, v2961
    0x2964: v2964 = ISZERO v2963
    0x2965: v2965(0x296d) = CONST 
    0x2968: JUMPI v2965(0x296d), v2964

    Begin block 0x2969
    prev=[0x2957], succ=[]
    =================================
    0x2969: v2969(0x0) = CONST 
    0x296c: REVERT v2969(0x0), v2969(0x0)

    Begin block 0x296d
    prev=[0x2957], succ=[0x2977, 0x297b]
    =================================
    0x2971: v2971 = SLT v295d, v295a
    0x2972: v2972 = ISZERO v2971
    0x2973: v2973(0x297b) = CONST 
    0x2976: JUMPI v2973(0x297b), v2972

    Begin block 0x2977
    prev=[0x296d], succ=[]
    =================================
    0x2977: v2977(0x0) = CONST 
    0x297a: REVERT v2977(0x0), v2977(0x0)

    Begin block 0x297b
    prev=[0x296d], succ=[0x298e, 0x2992]
    =================================
    0x297d: v297d(0x60) = CONST 
    0x297f: v297f = MLOAD v297d(0x60)
    0x2980: v2980(0x24) = CONST 
    0x2982: v2982 = CALLDATALOAD v2980(0x24)
    0x2984: v2984(0x40) = CONST 
    0x2986: v2986 = MLOAD v2984(0x40)
    0x2988: v2988 = SGT v2982, v2986
    0x2989: v2989 = ISZERO v2988
    0x298a: v298a(0x2992) = CONST 
    0x298d: JUMPI v298a(0x2992), v2989

    Begin block 0x298e
    prev=[0x297b], succ=[]
    =================================
    0x298e: v298e(0x0) = CONST 
    0x2991: REVERT v298e(0x0), v298e(0x0)

    Begin block 0x2992
    prev=[0x297b], succ=[0x299c, 0x29a0]
    =================================
    0x2996: v2996 = SLT v2982, v297f
    0x2997: v2997 = ISZERO v2996
    0x2998: v2998(0x29a0) = CONST 
    0x299b: JUMPI v2998(0x29a0), v2997

    Begin block 0x299c
    prev=[0x2992], succ=[]
    =================================
    0x299c: v299c(0x0) = CONST 
    0x299f: REVERT v299c(0x0), v299c(0x0)

    Begin block 0x29a0
    prev=[0x2992], succ=[0x2820x5207]
    =================================
    0x29a2: v29a2(0x140) = CONST 
    0x29a5: v29a5(0x140) = CONST 
    0x29a8: v29a8 = MLOAD v29a5(0x140)
    0x29a9: v29a9(0x160) = CONST 
    0x29ac: v29ac = MLOAD v29a9(0x160)
    0x29ad: v29ad(0x180) = CONST 
    0x29b0: v29b0 = MLOAD v29ad(0x180)
    0x29b1: v29b1(0x6) = CONST 
    0x29b3: v29b3(0x29b3) = CONST 
    0x29b4: v29b4(0x29b9) = ADD v29b3(0x29b3), v29b1(0x6)
    0x29b5: v29b5(0x282) = CONST 
    0x29b8: JUMP v29b5(0x282)

    Begin block 0x2820x5207
    prev=[0x29a0], succ=[0x2b00x5207]
    =================================
    0x2830x5207: v5207283(0x140) = CONST 
    0x2860x5207: MSTORE v5207283(0x140), v29b4(0x29b9)
    0x2870x5207: v5207287(0x160) = CONST 
    0x28a0x5207: v520728a(0xe8d4a51000) = CONST 
    0x2910x5207: MSTORE v5207287(0x160), v520728a(0xe8d4a51000)
    0x2920x5207: v5207292(0x1) = CONST 
    0x2950x5207: v5207295(0x20) = CONST 
    0x2970x5207: v5207297(0x180) = ADD v5207295(0x20), v5207287(0x160)
    0x2980x5207: MSTORE v5207297(0x180), v5207292(0x1)
    0x2990x5207: v5207299(0xe8d4a51000) = CONST 
    0x2a00x5207: v52072a0(0x40) = CONST 
    0x2a20x5207: v52072a2(0x1a0) = ADD v52072a0(0x40), v5207287(0x160)
    0x2a30x5207: MSTORE v52072a2(0x1a0), v5207299(0xe8d4a51000)
    0x2a50x5207: v52072a5(0x1c0) = CONST 
    0x2a80x5207: v52072a8(0x0) = CONST 
    0x2aa0x5207: v52072aa(0x3) = CONST 
    0x2ae0x5207: MSTORE v52072a5(0x1c0), v52072a8(0x0)
    0x2af0x5207: v52072af(0x3) = ADD v52072aa(0x3), v52072a8(0x0)

    Begin block 0x2b00x5207
    prev=[0x37a0x5207, 0x2820x5207], succ=[0x2c00x5207, 0x2c40x5207]
    =================================
    0x2b10x5207: v52072b1(0x160) = CONST 
    0x2b40x5207: v52072b4(0x1c0) = CONST 
    0x2b70x5207: v52072b7 = MLOAD v52072b4(0x1c0)
    0x2b80x5207: v52072b8(0x3) = CONST 
    0x2bb0x5207: v52072bb = LT v52072b7, v52072b8(0x3)
    0x2bc0x5207: v52072bc(0x2c4) = CONST 
    0x2bf0x5207: JUMPI v52072bc(0x2c4), v52072bb

    Begin block 0x2c00x5207
    prev=[0x2b00x5207], succ=[]
    =================================
    0x2c00x5207: v52072c0(0x0) = CONST 
    0x2c30x5207: REVERT v52072c0(0x0), v52072c0(0x0)

    Begin block 0x2c40x5207
    prev=[0x2b00x5207], succ=[0x2d70x5207, 0x2db0x5207]
    =================================
    0x2c50x5207: v52072c5(0x20) = CONST 
    0x2c70x5207: v52072c7 = MUL v52072c5(0x20), v52072b7
    0x2c80x5207: v52072c8 = ADD v52072c7, v52072b1(0x160)
    0x2ca0x5207: v52072ca = MLOAD v52072c8
    0x2cb0x5207: v52072cb(0x1c0) = CONST 
    0x2ce0x5207: v52072ce = MLOAD v52072cb(0x1c0)
    0x2cf0x5207: v52072cf(0x3) = CONST 
    0x2d20x5207: v52072d2 = LT v52072ce, v52072cf(0x3)
    0x2d30x5207: v52072d3(0x2db) = CONST 
    0x2d60x5207: JUMPI v52072d3(0x2db), v52072d2

    Begin block 0x2d70x5207
    prev=[0x2c40x5207], succ=[]
    =================================
    0x2d70x5207: v52072d7(0x0) = CONST 
    0x2da0x5207: REVERT v52072d7(0x0), v52072d7(0x0)

    Begin block 0x2db0x5207
    prev=[0x2c40x5207], succ=[0x2ed0x5207, 0x2f10x5207]
    =================================
    0x2dc0x5207: v52072dc(0x0) = CONST 
    0x2de0x5207: v52072de(0xc0) = CONST 
    0x2e00x5207: MSTORE v52072de(0xc0), v52072dc(0x0)
    0x2e10x5207: v52072e1(0x20) = CONST 
    0x2e30x5207: v52072e3(0xc0) = CONST 
    0x2e50x5207: v52072e5 = SHA3 v52072e3(0xc0), v52072e1(0x20)
    0x2e60x5207: v52072e6 = ADD v52072e5, v52072ce
    0x2e70x5207: v52072e7 = SLOAD v52072e6
    0x2e80x5207: v52072e8 = EXTCODESIZE v52072e7
    0x2e90x5207: v52072e9(0x2f1) = CONST 
    0x2ec0x5207: JUMPI v52072e9(0x2f1), v52072e8

    Begin block 0x2ed0x5207
    prev=[0x2db0x5207], succ=[]
    =================================
    0x2ed0x5207: v52072ed(0x0) = CONST 
    0x2f00x5207: REVERT v52072ed(0x0), v52072ed(0x0)

    Begin block 0x2f10x5207
    prev=[0x2db0x5207], succ=[0x2fe0x5207, 0x3020x5207]
    =================================
    0x2f20x5207: v52072f2(0x1c0) = CONST 
    0x2f50x5207: v52072f5 = MLOAD v52072f2(0x1c0)
    0x2f60x5207: v52072f6(0x3) = CONST 
    0x2f90x5207: v52072f9 = LT v52072f5, v52072f6(0x3)
    0x2fa0x5207: v52072fa(0x302) = CONST 
    0x2fd0x5207: JUMPI v52072fa(0x302), v52072f9

    Begin block 0x2fe0x5207
    prev=[0x2f10x5207], succ=[]
    =================================
    0x2fe0x5207: v52072fe(0x0) = CONST 
    0x3010x5207: REVERT v52072fe(0x0), v52072fe(0x0)

    Begin block 0x3020x5207
    prev=[0x2f10x5207], succ=[0x3150x5207, 0x3190x5207]
    =================================
    0x3030x5207: v5207303(0x0) = CONST 
    0x3050x5207: v5207305(0xc0) = CONST 
    0x3070x5207: MSTORE v5207305(0xc0), v5207303(0x0)
    0x3080x5207: v5207308(0x20) = CONST 
    0x30a0x5207: v520730a(0xc0) = CONST 
    0x30c0x5207: v520730c = SHA3 v520730a(0xc0), v5207308(0x20)
    0x30d0x5207: v520730d = ADD v520730c, v52072f5
    0x30e0x5207: v520730e = SLOAD v520730d
    0x30f0x5207: v520730f = ADDRESS 
    0x3100x5207: v5207310 = XOR v520730f, v520730e
    0x3110x5207: v5207311(0x319) = CONST 
    0x3140x5207: JUMPI v5207311(0x319), v5207310

    Begin block 0x3150x5207
    prev=[0x3020x5207], succ=[]
    =================================
    0x3150x5207: v5207315(0x0) = CONST 
    0x3180x5207: REVERT v5207315(0x0), v5207315(0x0)

    Begin block 0x3190x5207
    prev=[0x3020x5207], succ=[0x3390x5207, 0x33d0x5207]
    =================================
    0x31a0x5207: v520731a(0x20) = CONST 
    0x31c0x5207: v520731c(0x240) = CONST 
    0x31f0x5207: v520731f(0x4) = CONST 
    0x3210x5207: v5207321(0x77c7b8fc) = CONST 
    0x3260x5207: v5207326(0x1e0) = CONST 
    0x3290x5207: MSTORE v5207326(0x1e0), v5207321(0x77c7b8fc)
    0x32a0x5207: v520732a(0x1fc) = CONST 
    0x32d0x5207: v520732d(0x1c0) = CONST 
    0x3300x5207: v5207330 = MLOAD v520732d(0x1c0)
    0x3310x5207: v5207331(0x3) = CONST 
    0x3340x5207: v5207334 = LT v5207330, v5207331(0x3)
    0x3350x5207: v5207335(0x33d) = CONST 
    0x3380x5207: JUMPI v5207335(0x33d), v5207334

    Begin block 0x3390x5207
    prev=[0x3190x5207], succ=[]
    =================================
    0x3390x5207: v5207339(0x0) = CONST 
    0x33c0x5207: REVERT v5207339(0x0), v5207339(0x0)

    Begin block 0x33d0x5207
    prev=[0x3190x5207], succ=[0x3500x5207, 0x3540x5207]
    =================================
    0x33e0x5207: v520733e(0x0) = CONST 
    0x3400x5207: v5207340(0xc0) = CONST 
    0x3420x5207: MSTORE v5207340(0xc0), v520733e(0x0)
    0x3430x5207: v5207343(0x20) = CONST 
    0x3450x5207: v5207345(0xc0) = CONST 
    0x3470x5207: v5207347 = SHA3 v5207345(0xc0), v5207343(0x20)
    0x3480x5207: v5207348 = ADD v5207347, v5207330
    0x3490x5207: v5207349 = SLOAD v5207348
    0x34a0x5207: v520734a = GAS 
    0x34b0x5207: v520734b = STATICCALL v520734a, v5207349, v520732a(0x1fc), v520731f(0x4), v520731c(0x240), v520731a(0x20)
    0x34c0x5207: v520734c(0x354) = CONST 
    0x34f0x5207: JUMPI v520734c(0x354), v520734b

    Begin block 0x3500x5207
    prev=[0x33d0x5207], succ=[]
    =================================
    0x3500x5207: v5207350(0x0) = CONST 
    0x3530x5207: REVERT v5207350(0x0), v5207350(0x0)

    Begin block 0x3540x5207
    prev=[0x33d0x5207], succ=[0x36b0x5207, 0x36f0x5207]
    =================================
    0x3550x5207: v5207355(0x0) = CONST 
    0x3580x5207: v5207358(0x240) = CONST 
    0x35b0x5207: v520735b = MLOAD v5207358(0x240)
    0x35e0x5207: v520735e = MUL v52072ca, v520735b
    0x3600x5207: v5207360 = ISZERO v52072ca
    0x3640x5207: v5207364 = DIV v520735e, v52072ca
    0x3650x5207: v5207365 = EQ v5207364, v520735b
    0x3660x5207: v5207366 = OR v5207365, v5207360
    0x3670x5207: v5207367(0x36f) = CONST 
    0x36a0x5207: JUMPI v5207367(0x36f), v5207366

    Begin block 0x36b0x5207
    prev=[0x3540x5207], succ=[]
    =================================
    0x36b0x5207: v520736b(0x0) = CONST 
    0x36e0x5207: REVERT v520736b(0x0), v520736b(0x0)

    Begin block 0x36f0x5207
    prev=[0x3540x5207], succ=[0x37a0x5207]
    =================================
    0x3780x5207: MSTORE v52072c8, v520735e

    Begin block 0x37a0x5207
    prev=[0x36f0x5207], succ=[0x2b00x5207, 0x38a0x5207]
    =================================
    0x37c0x5207: v520737c = MLOAD v52072a5(0x1c0)
    0x37d0x5207: v520737d(0x1) = CONST 
    0x37f0x5207: v520737f = ADD v520737d(0x1), v520737c
    0x3820x5207: MSTORE v52072a5(0x1c0), v520737f
    0x3840x5207: v5207384 = EQ v52072af(0x3), v520737f
    0x3850x5207: v5207385 = ISZERO v5207384
    0x3860x5207: v5207386(0x2b0) = CONST 
    0x3890x5207: JUMPI v5207386(0x2b0), v5207385

    Begin block 0x38a0x5207
    prev=[0x37a0x5207], succ=[0x3930x5207]
    =================================
    0x38d0x5207: v520738d(0x60) = CONST 
    0x38f0x5207: v520738f(0x260) = CONST 
    0x3920x5207: MSTORE v520738f(0x260), v520738d(0x60)

    Begin block 0x3930x5207
    prev=[0x3a50x5207, 0x38a0x5207], succ=[0x3a10x5207, 0x3a50x5207]
    =================================
    0x3940x5207: v5207394(0x0) = CONST 
    0x3960x5207: v5207396(0x260) = CONST 
    0x3990x5207: v5207399 = MLOAD v5207396(0x260)
    0x39a0x5207: v520739a = GT v5207399, v5207394(0x0)
    0x39b0x5207: v520739b = ISZERO v520739a
    0x39c0x5207: v520739c = ISZERO v520739b
    0x39d0x5207: v520739d(0x3a5) = CONST 
    0x3a00x5207: JUMPI v520739d(0x3a5), v520739c

    Begin block 0x3a10x5207
    prev=[0x3930x5207], succ=[0x3c10x5207]
    =================================
    0x3a10x5207: v52073a1(0x3c1) = CONST 
    0x3a40x5207: JUMP v52073a1(0x3c1)

    Begin block 0x3c10x5207
    prev=[0x3a10x5207], succ=[]
    =================================
    0x3c20x5207: v52073c2(0x140) = CONST 
    0x3c50x5207: v52073c5 = MLOAD v52073c2(0x140)
    0x3c60x5207: JUMP v52073c5

    Begin block 0x3a50x5207
    prev=[0x3930x5207], succ=[0x3930x5207]
    =================================
    0x3a60x5207: v52073a6(0x20) = CONST 
    0x3a80x5207: v52073a8(0x260) = CONST 
    0x3ab0x5207: v52073ab = MLOAD v52073a8(0x260)
    0x3ac0x5207: v52073ac = SUB v52073ab, v52073a6(0x20)
    0x3ad0x5207: v52073ad(0x160) = CONST 
    0x3b00x5207: v52073b0 = ADD v52073ad(0x160), v52073ac
    0x3b10x5207: v52073b1 = MLOAD v52073b0
    0x3b20x5207: v52073b2(0x20) = CONST 
    0x3b40x5207: v52073b4(0x260) = CONST 
    0x3b70x5207: v52073b7 = MLOAD v52073b4(0x260)
    0x3b80x5207: v52073b8 = SUB v52073b7, v52073b2(0x20)
    0x3b90x5207: v52073b9(0x260) = CONST 
    0x3bc0x5207: MSTORE v52073b9(0x260), v52073b8
    0x3bd0x5207: v52073bd(0x393) = CONST 
    0x3c00x5207: JUMP v52073bd(0x393)

}

function exchange(int128,int128,uint256,uint256)() public {
    Begin block 0x520a
    prev=[], succ=[0x3133, 0x3137]
    =================================
    0x3129: v3129(0xffffff) = CONST 
    0x312d: v312d = SLOAD v3129(0xffffff)
    0x312e: v312e = ISZERO v312d
    0x312f: v312f(0x3137) = CONST 
    0x3132: JUMPI v312f(0x3137), v312e

    Begin block 0x3133
    prev=[0x520a], succ=[]
    =================================
    0x3133: v3133(0x0) = CONST 
    0x3136: REVERT v3133(0x0), v3133(0x0)

    Begin block 0x3137
    prev=[0x520a], succ=[0x3145, 0x3149]
    =================================
    0x3138: v3138(0x1) = CONST 
    0x313a: v313a(0xffffff) = CONST 
    0x313e: SSTORE v313a(0xffffff), v3138(0x1)
    0x313f: v313f = CALLVALUE 
    0x3140: v3140 = ISZERO v313f
    0x3141: v3141(0x3149) = CONST 
    0x3144: JUMPI v3141(0x3149), v3140

    Begin block 0x3145
    prev=[0x3137], succ=[]
    =================================
    0x3145: v3145(0x0) = CONST 
    0x3148: REVERT v3145(0x0), v3145(0x0)

    Begin block 0x3149
    prev=[0x3137], succ=[0x315b, 0x315f]
    =================================
    0x314a: v314a(0x60) = CONST 
    0x314c: v314c = MLOAD v314a(0x60)
    0x314d: v314d(0x4) = CONST 
    0x314f: v314f = CALLDATALOAD v314d(0x4)
    0x3151: v3151(0x40) = CONST 
    0x3153: v3153 = MLOAD v3151(0x40)
    0x3155: v3155 = SGT v314f, v3153
    0x3156: v3156 = ISZERO v3155
    0x3157: v3157(0x315f) = CONST 
    0x315a: JUMPI v3157(0x315f), v3156

    Begin block 0x315b
    prev=[0x3149], succ=[]
    =================================
    0x315b: v315b(0x0) = CONST 
    0x315e: REVERT v315b(0x0), v315b(0x0)

    Begin block 0x315f
    prev=[0x3149], succ=[0x3169, 0x316d]
    =================================
    0x3163: v3163 = SLT v314f, v314c
    0x3164: v3164 = ISZERO v3163
    0x3165: v3165(0x316d) = CONST 
    0x3168: JUMPI v3165(0x316d), v3164

    Begin block 0x3169
    prev=[0x315f], succ=[]
    =================================
    0x3169: v3169(0x0) = CONST 
    0x316c: REVERT v3169(0x0), v3169(0x0)

    Begin block 0x316d
    prev=[0x315f], succ=[0x3180, 0x3184]
    =================================
    0x316f: v316f(0x60) = CONST 
    0x3171: v3171 = MLOAD v316f(0x60)
    0x3172: v3172(0x24) = CONST 
    0x3174: v3174 = CALLDATALOAD v3172(0x24)
    0x3176: v3176(0x40) = CONST 
    0x3178: v3178 = MLOAD v3176(0x40)
    0x317a: v317a = SGT v3174, v3178
    0x317b: v317b = ISZERO v317a
    0x317c: v317c(0x3184) = CONST 
    0x317f: JUMPI v317c(0x3184), v317b

    Begin block 0x3180
    prev=[0x316d], succ=[]
    =================================
    0x3180: v3180(0x0) = CONST 
    0x3183: REVERT v3180(0x0), v3180(0x0)

    Begin block 0x3184
    prev=[0x316d], succ=[0x318e, 0x3192]
    =================================
    0x3188: v3188 = SLT v3174, v3171
    0x3189: v3189 = ISZERO v3188
    0x318a: v318a(0x3192) = CONST 
    0x318d: JUMPI v318a(0x3192), v3189

    Begin block 0x318e
    prev=[0x3184], succ=[]
    =================================
    0x318e: v318e(0x0) = CONST 
    0x3191: REVERT v318e(0x0), v318e(0x0)

    Begin block 0x3192
    prev=[0x3184], succ=[0x2820x520a]
    =================================
    0x3194: v3194(0x140) = CONST 
    0x3197: v3197(0x140) = CONST 
    0x319a: v319a = MLOAD v3197(0x140)
    0x319b: v319b(0x160) = CONST 
    0x319e: v319e = MLOAD v319b(0x160)
    0x319f: v319f(0x180) = CONST 
    0x31a2: v31a2 = MLOAD v319f(0x180)
    0x31a3: v31a3(0x6) = CONST 
    0x31a5: v31a5(0x31a5) = CONST 
    0x31a6: v31a6(0x31ab) = ADD v31a5(0x31a5), v31a3(0x6)
    0x31a7: v31a7(0x282) = CONST 
    0x31aa: JUMP v31a7(0x282)

    Begin block 0x2820x520a
    prev=[0x3192], succ=[0x2b00x520a]
    =================================
    0x2830x520a: v520a283(0x140) = CONST 
    0x2860x520a: MSTORE v520a283(0x140), v31a6(0x31ab)
    0x2870x520a: v520a287(0x160) = CONST 
    0x28a0x520a: v520a28a(0xe8d4a51000) = CONST 
    0x2910x520a: MSTORE v520a287(0x160), v520a28a(0xe8d4a51000)
    0x2920x520a: v520a292(0x1) = CONST 
    0x2950x520a: v520a295(0x20) = CONST 
    0x2970x520a: v520a297(0x180) = ADD v520a295(0x20), v520a287(0x160)
    0x2980x520a: MSTORE v520a297(0x180), v520a292(0x1)
    0x2990x520a: v520a299(0xe8d4a51000) = CONST 
    0x2a00x520a: v520a2a0(0x40) = CONST 
    0x2a20x520a: v520a2a2(0x1a0) = ADD v520a2a0(0x40), v520a287(0x160)
    0x2a30x520a: MSTORE v520a2a2(0x1a0), v520a299(0xe8d4a51000)
    0x2a50x520a: v520a2a5(0x1c0) = CONST 
    0x2a80x520a: v520a2a8(0x0) = CONST 
    0x2aa0x520a: v520a2aa(0x3) = CONST 
    0x2ae0x520a: MSTORE v520a2a5(0x1c0), v520a2a8(0x0)
    0x2af0x520a: v520a2af(0x3) = ADD v520a2aa(0x3), v520a2a8(0x0)

    Begin block 0x2b00x520a
    prev=[0x37a0x520a, 0x2820x520a], succ=[0x2c00x520a, 0x2c40x520a]
    =================================
    0x2b10x520a: v520a2b1(0x160) = CONST 
    0x2b40x520a: v520a2b4(0x1c0) = CONST 
    0x2b70x520a: v520a2b7 = MLOAD v520a2b4(0x1c0)
    0x2b80x520a: v520a2b8(0x3) = CONST 
    0x2bb0x520a: v520a2bb = LT v520a2b7, v520a2b8(0x3)
    0x2bc0x520a: v520a2bc(0x2c4) = CONST 
    0x2bf0x520a: JUMPI v520a2bc(0x2c4), v520a2bb

    Begin block 0x2c00x520a
    prev=[0x2b00x520a], succ=[]
    =================================
    0x2c00x520a: v520a2c0(0x0) = CONST 
    0x2c30x520a: REVERT v520a2c0(0x0), v520a2c0(0x0)

    Begin block 0x2c40x520a
    prev=[0x2b00x520a], succ=[0x2d70x520a, 0x2db0x520a]
    =================================
    0x2c50x520a: v520a2c5(0x20) = CONST 
    0x2c70x520a: v520a2c7 = MUL v520a2c5(0x20), v520a2b7
    0x2c80x520a: v520a2c8 = ADD v520a2c7, v520a2b1(0x160)
    0x2ca0x520a: v520a2ca = MLOAD v520a2c8
    0x2cb0x520a: v520a2cb(0x1c0) = CONST 
    0x2ce0x520a: v520a2ce = MLOAD v520a2cb(0x1c0)
    0x2cf0x520a: v520a2cf(0x3) = CONST 
    0x2d20x520a: v520a2d2 = LT v520a2ce, v520a2cf(0x3)
    0x2d30x520a: v520a2d3(0x2db) = CONST 
    0x2d60x520a: JUMPI v520a2d3(0x2db), v520a2d2

    Begin block 0x2d70x520a
    prev=[0x2c40x520a], succ=[]
    =================================
    0x2d70x520a: v520a2d7(0x0) = CONST 
    0x2da0x520a: REVERT v520a2d7(0x0), v520a2d7(0x0)

    Begin block 0x2db0x520a
    prev=[0x2c40x520a], succ=[0x2ed0x520a, 0x2f10x520a]
    =================================
    0x2dc0x520a: v520a2dc(0x0) = CONST 
    0x2de0x520a: v520a2de(0xc0) = CONST 
    0x2e00x520a: MSTORE v520a2de(0xc0), v520a2dc(0x0)
    0x2e10x520a: v520a2e1(0x20) = CONST 
    0x2e30x520a: v520a2e3(0xc0) = CONST 
    0x2e50x520a: v520a2e5 = SHA3 v520a2e3(0xc0), v520a2e1(0x20)
    0x2e60x520a: v520a2e6 = ADD v520a2e5, v520a2ce
    0x2e70x520a: v520a2e7 = SLOAD v520a2e6
    0x2e80x520a: v520a2e8 = EXTCODESIZE v520a2e7
    0x2e90x520a: v520a2e9(0x2f1) = CONST 
    0x2ec0x520a: JUMPI v520a2e9(0x2f1), v520a2e8

    Begin block 0x2ed0x520a
    prev=[0x2db0x520a], succ=[]
    =================================
    0x2ed0x520a: v520a2ed(0x0) = CONST 
    0x2f00x520a: REVERT v520a2ed(0x0), v520a2ed(0x0)

    Begin block 0x2f10x520a
    prev=[0x2db0x520a], succ=[0x2fe0x520a, 0x3020x520a]
    =================================
    0x2f20x520a: v520a2f2(0x1c0) = CONST 
    0x2f50x520a: v520a2f5 = MLOAD v520a2f2(0x1c0)
    0x2f60x520a: v520a2f6(0x3) = CONST 
    0x2f90x520a: v520a2f9 = LT v520a2f5, v520a2f6(0x3)
    0x2fa0x520a: v520a2fa(0x302) = CONST 
    0x2fd0x520a: JUMPI v520a2fa(0x302), v520a2f9

    Begin block 0x2fe0x520a
    prev=[0x2f10x520a], succ=[]
    =================================
    0x2fe0x520a: v520a2fe(0x0) = CONST 
    0x3010x520a: REVERT v520a2fe(0x0), v520a2fe(0x0)

    Begin block 0x3020x520a
    prev=[0x2f10x520a], succ=[0x3150x520a, 0x3190x520a]
    =================================
    0x3030x520a: v520a303(0x0) = CONST 
    0x3050x520a: v520a305(0xc0) = CONST 
    0x3070x520a: MSTORE v520a305(0xc0), v520a303(0x0)
    0x3080x520a: v520a308(0x20) = CONST 
    0x30a0x520a: v520a30a(0xc0) = CONST 
    0x30c0x520a: v520a30c = SHA3 v520a30a(0xc0), v520a308(0x20)
    0x30d0x520a: v520a30d = ADD v520a30c, v520a2f5
    0x30e0x520a: v520a30e = SLOAD v520a30d
    0x30f0x520a: v520a30f = ADDRESS 
    0x3100x520a: v520a310 = XOR v520a30f, v520a30e
    0x3110x520a: v520a311(0x319) = CONST 
    0x3140x520a: JUMPI v520a311(0x319), v520a310

    Begin block 0x3150x520a
    prev=[0x3020x520a], succ=[]
    =================================
    0x3150x520a: v520a315(0x0) = CONST 
    0x3180x520a: REVERT v520a315(0x0), v520a315(0x0)

    Begin block 0x3190x520a
    prev=[0x3020x520a], succ=[0x3390x520a, 0x33d0x520a]
    =================================
    0x31a0x520a: v520a31a(0x20) = CONST 
    0x31c0x520a: v520a31c(0x240) = CONST 
    0x31f0x520a: v520a31f(0x4) = CONST 
    0x3210x520a: v520a321(0x77c7b8fc) = CONST 
    0x3260x520a: v520a326(0x1e0) = CONST 
    0x3290x520a: MSTORE v520a326(0x1e0), v520a321(0x77c7b8fc)
    0x32a0x520a: v520a32a(0x1fc) = CONST 
    0x32d0x520a: v520a32d(0x1c0) = CONST 
    0x3300x520a: v520a330 = MLOAD v520a32d(0x1c0)
    0x3310x520a: v520a331(0x3) = CONST 
    0x3340x520a: v520a334 = LT v520a330, v520a331(0x3)
    0x3350x520a: v520a335(0x33d) = CONST 
    0x3380x520a: JUMPI v520a335(0x33d), v520a334

    Begin block 0x3390x520a
    prev=[0x3190x520a], succ=[]
    =================================
    0x3390x520a: v520a339(0x0) = CONST 
    0x33c0x520a: REVERT v520a339(0x0), v520a339(0x0)

    Begin block 0x33d0x520a
    prev=[0x3190x520a], succ=[0x3500x520a, 0x3540x520a]
    =================================
    0x33e0x520a: v520a33e(0x0) = CONST 
    0x3400x520a: v520a340(0xc0) = CONST 
    0x3420x520a: MSTORE v520a340(0xc0), v520a33e(0x0)
    0x3430x520a: v520a343(0x20) = CONST 
    0x3450x520a: v520a345(0xc0) = CONST 
    0x3470x520a: v520a347 = SHA3 v520a345(0xc0), v520a343(0x20)
    0x3480x520a: v520a348 = ADD v520a347, v520a330
    0x3490x520a: v520a349 = SLOAD v520a348
    0x34a0x520a: v520a34a = GAS 
    0x34b0x520a: v520a34b = STATICCALL v520a34a, v520a349, v520a32a(0x1fc), v520a31f(0x4), v520a31c(0x240), v520a31a(0x20)
    0x34c0x520a: v520a34c(0x354) = CONST 
    0x34f0x520a: JUMPI v520a34c(0x354), v520a34b

    Begin block 0x3500x520a
    prev=[0x33d0x520a], succ=[]
    =================================
    0x3500x520a: v520a350(0x0) = CONST 
    0x3530x520a: REVERT v520a350(0x0), v520a350(0x0)

    Begin block 0x3540x520a
    prev=[0x33d0x520a], succ=[0x36b0x520a, 0x36f0x520a]
    =================================
    0x3550x520a: v520a355(0x0) = CONST 
    0x3580x520a: v520a358(0x240) = CONST 
    0x35b0x520a: v520a35b = MLOAD v520a358(0x240)
    0x35e0x520a: v520a35e = MUL v520a2ca, v520a35b
    0x3600x520a: v520a360 = ISZERO v520a2ca
    0x3640x520a: v520a364 = DIV v520a35e, v520a2ca
    0x3650x520a: v520a365 = EQ v520a364, v520a35b
    0x3660x520a: v520a366 = OR v520a365, v520a360
    0x3670x520a: v520a367(0x36f) = CONST 
    0x36a0x520a: JUMPI v520a367(0x36f), v520a366

    Begin block 0x36b0x520a
    prev=[0x3540x520a], succ=[]
    =================================
    0x36b0x520a: v520a36b(0x0) = CONST 
    0x36e0x520a: REVERT v520a36b(0x0), v520a36b(0x0)

    Begin block 0x36f0x520a
    prev=[0x3540x520a], succ=[0x37a0x520a]
    =================================
    0x3780x520a: MSTORE v520a2c8, v520a35e

    Begin block 0x37a0x520a
    prev=[0x36f0x520a], succ=[0x2b00x520a, 0x38a0x520a]
    =================================
    0x37c0x520a: v520a37c = MLOAD v520a2a5(0x1c0)
    0x37d0x520a: v520a37d(0x1) = CONST 
    0x37f0x520a: v520a37f = ADD v520a37d(0x1), v520a37c
    0x3820x520a: MSTORE v520a2a5(0x1c0), v520a37f
    0x3840x520a: v520a384 = EQ v520a2af(0x3), v520a37f
    0x3850x520a: v520a385 = ISZERO v520a384
    0x3860x520a: v520a386(0x2b0) = CONST 
    0x3890x520a: JUMPI v520a386(0x2b0), v520a385

    Begin block 0x38a0x520a
    prev=[0x37a0x520a], succ=[0x3930x520a]
    =================================
    0x38d0x520a: v520a38d(0x60) = CONST 
    0x38f0x520a: v520a38f(0x260) = CONST 
    0x3920x520a: MSTORE v520a38f(0x260), v520a38d(0x60)

    Begin block 0x3930x520a
    prev=[0x3a50x520a, 0x38a0x520a], succ=[0x3a10x520a, 0x3a50x520a]
    =================================
    0x3940x520a: v520a394(0x0) = CONST 
    0x3960x520a: v520a396(0x260) = CONST 
    0x3990x520a: v520a399 = MLOAD v520a396(0x260)
    0x39a0x520a: v520a39a = GT v520a399, v520a394(0x0)
    0x39b0x520a: v520a39b = ISZERO v520a39a
    0x39c0x520a: v520a39c = ISZERO v520a39b
    0x39d0x520a: v520a39d(0x3a5) = CONST 
    0x3a00x520a: JUMPI v520a39d(0x3a5), v520a39c

    Begin block 0x3a10x520a
    prev=[0x3930x520a], succ=[0x3c10x520a]
    =================================
    0x3a10x520a: v520a3a1(0x3c1) = CONST 
    0x3a40x520a: JUMP v520a3a1(0x3c1)

    Begin block 0x3c10x520a
    prev=[0x3a10x520a], succ=[]
    =================================
    0x3c20x520a: v520a3c2(0x140) = CONST 
    0x3c50x520a: v520a3c5 = MLOAD v520a3c2(0x140)
    0x3c60x520a: JUMP v520a3c5

    Begin block 0x3a50x520a
    prev=[0x3930x520a], succ=[0x3930x520a]
    =================================
    0x3a60x520a: v520a3a6(0x20) = CONST 
    0x3a80x520a: v520a3a8(0x260) = CONST 
    0x3ab0x520a: v520a3ab = MLOAD v520a3a8(0x260)
    0x3ac0x520a: v520a3ac = SUB v520a3ab, v520a3a6(0x20)
    0x3ad0x520a: v520a3ad(0x160) = CONST 
    0x3b00x520a: v520a3b0 = ADD v520a3ad(0x160), v520a3ac
    0x3b10x520a: v520a3b1 = MLOAD v520a3b0
    0x3b20x520a: v520a3b2(0x20) = CONST 
    0x3b40x520a: v520a3b4(0x260) = CONST 
    0x3b70x520a: v520a3b7 = MLOAD v520a3b4(0x260)
    0x3b80x520a: v520a3b8 = SUB v520a3b7, v520a3b2(0x20)
    0x3b90x520a: v520a3b9(0x260) = CONST 
    0x3bc0x520a: MSTORE v520a3b9(0x260), v520a3b8
    0x3bd0x520a: v520a3bd(0x393) = CONST 
    0x3c00x520a: JUMP v520a3bd(0x393)

}

function exchange_underlying(int128,int128,uint256,uint256)() public {
    Begin block 0x520d
    prev=[], succ=[0x34b9, 0x34bd]
    =================================
    0x34af: v34af(0xffffff) = CONST 
    0x34b3: v34b3 = SLOAD v34af(0xffffff)
    0x34b4: v34b4 = ISZERO v34b3
    0x34b5: v34b5(0x34bd) = CONST 
    0x34b8: JUMPI v34b5(0x34bd), v34b4

    Begin block 0x34b9
    prev=[0x520d], succ=[]
    =================================
    0x34b9: v34b9(0x0) = CONST 
    0x34bc: REVERT v34b9(0x0), v34b9(0x0)

    Begin block 0x34bd
    prev=[0x520d], succ=[0x34cb, 0x34cf]
    =================================
    0x34be: v34be(0x1) = CONST 
    0x34c0: v34c0(0xffffff) = CONST 
    0x34c4: SSTORE v34c0(0xffffff), v34be(0x1)
    0x34c5: v34c5 = CALLVALUE 
    0x34c6: v34c6 = ISZERO v34c5
    0x34c7: v34c7(0x34cf) = CONST 
    0x34ca: JUMPI v34c7(0x34cf), v34c6

    Begin block 0x34cb
    prev=[0x34bd], succ=[]
    =================================
    0x34cb: v34cb(0x0) = CONST 
    0x34ce: REVERT v34cb(0x0), v34cb(0x0)

    Begin block 0x34cf
    prev=[0x34bd], succ=[0x34e1, 0x34e5]
    =================================
    0x34d0: v34d0(0x60) = CONST 
    0x34d2: v34d2 = MLOAD v34d0(0x60)
    0x34d3: v34d3(0x4) = CONST 
    0x34d5: v34d5 = CALLDATALOAD v34d3(0x4)
    0x34d7: v34d7(0x40) = CONST 
    0x34d9: v34d9 = MLOAD v34d7(0x40)
    0x34db: v34db = SGT v34d5, v34d9
    0x34dc: v34dc = ISZERO v34db
    0x34dd: v34dd(0x34e5) = CONST 
    0x34e0: JUMPI v34dd(0x34e5), v34dc

    Begin block 0x34e1
    prev=[0x34cf], succ=[]
    =================================
    0x34e1: v34e1(0x0) = CONST 
    0x34e4: REVERT v34e1(0x0), v34e1(0x0)

    Begin block 0x34e5
    prev=[0x34cf], succ=[0x34ef, 0x34f3]
    =================================
    0x34e9: v34e9 = SLT v34d5, v34d2
    0x34ea: v34ea = ISZERO v34e9
    0x34eb: v34eb(0x34f3) = CONST 
    0x34ee: JUMPI v34eb(0x34f3), v34ea

    Begin block 0x34ef
    prev=[0x34e5], succ=[]
    =================================
    0x34ef: v34ef(0x0) = CONST 
    0x34f2: REVERT v34ef(0x0), v34ef(0x0)

    Begin block 0x34f3
    prev=[0x34e5], succ=[0x3506, 0x350a]
    =================================
    0x34f5: v34f5(0x60) = CONST 
    0x34f7: v34f7 = MLOAD v34f5(0x60)
    0x34f8: v34f8(0x24) = CONST 
    0x34fa: v34fa = CALLDATALOAD v34f8(0x24)
    0x34fc: v34fc(0x40) = CONST 
    0x34fe: v34fe = MLOAD v34fc(0x40)
    0x3500: v3500 = SGT v34fa, v34fe
    0x3501: v3501 = ISZERO v3500
    0x3502: v3502(0x350a) = CONST 
    0x3505: JUMPI v3502(0x350a), v3501

    Begin block 0x3506
    prev=[0x34f3], succ=[]
    =================================
    0x3506: v3506(0x0) = CONST 
    0x3509: REVERT v3506(0x0), v3506(0x0)

    Begin block 0x350a
    prev=[0x34f3], succ=[0x3514, 0x3518]
    =================================
    0x350e: v350e = SLT v34fa, v34f7
    0x350f: v350f = ISZERO v350e
    0x3510: v3510(0x3518) = CONST 
    0x3513: JUMPI v3510(0x3518), v350f

    Begin block 0x3514
    prev=[0x350a], succ=[]
    =================================
    0x3514: v3514(0x0) = CONST 
    0x3517: REVERT v3514(0x0), v3514(0x0)

    Begin block 0x3518
    prev=[0x350a], succ=[0x2820x520d]
    =================================
    0x351a: v351a(0x140) = CONST 
    0x351d: v351d(0x140) = CONST 
    0x3520: v3520 = MLOAD v351d(0x140)
    0x3521: v3521(0x160) = CONST 
    0x3524: v3524 = MLOAD v3521(0x160)
    0x3525: v3525(0x180) = CONST 
    0x3528: v3528 = MLOAD v3525(0x180)
    0x3529: v3529(0x6) = CONST 
    0x352b: v352b(0x352b) = CONST 
    0x352c: v352c(0x3531) = ADD v352b(0x352b), v3529(0x6)
    0x352d: v352d(0x282) = CONST 
    0x3530: JUMP v352d(0x282)

    Begin block 0x2820x520d
    prev=[0x3518], succ=[0x2b00x520d]
    =================================
    0x2830x520d: v520d283(0x140) = CONST 
    0x2860x520d: MSTORE v520d283(0x140), v352c(0x3531)
    0x2870x520d: v520d287(0x160) = CONST 
    0x28a0x520d: v520d28a(0xe8d4a51000) = CONST 
    0x2910x520d: MSTORE v520d287(0x160), v520d28a(0xe8d4a51000)
    0x2920x520d: v520d292(0x1) = CONST 
    0x2950x520d: v520d295(0x20) = CONST 
    0x2970x520d: v520d297(0x180) = ADD v520d295(0x20), v520d287(0x160)
    0x2980x520d: MSTORE v520d297(0x180), v520d292(0x1)
    0x2990x520d: v520d299(0xe8d4a51000) = CONST 
    0x2a00x520d: v520d2a0(0x40) = CONST 
    0x2a20x520d: v520d2a2(0x1a0) = ADD v520d2a0(0x40), v520d287(0x160)
    0x2a30x520d: MSTORE v520d2a2(0x1a0), v520d299(0xe8d4a51000)
    0x2a50x520d: v520d2a5(0x1c0) = CONST 
    0x2a80x520d: v520d2a8(0x0) = CONST 
    0x2aa0x520d: v520d2aa(0x3) = CONST 
    0x2ae0x520d: MSTORE v520d2a5(0x1c0), v520d2a8(0x0)
    0x2af0x520d: v520d2af(0x3) = ADD v520d2aa(0x3), v520d2a8(0x0)

    Begin block 0x2b00x520d
    prev=[0x37a0x520d, 0x2820x520d], succ=[0x2c00x520d, 0x2c40x520d]
    =================================
    0x2b10x520d: v520d2b1(0x160) = CONST 
    0x2b40x520d: v520d2b4(0x1c0) = CONST 
    0x2b70x520d: v520d2b7 = MLOAD v520d2b4(0x1c0)
    0x2b80x520d: v520d2b8(0x3) = CONST 
    0x2bb0x520d: v520d2bb = LT v520d2b7, v520d2b8(0x3)
    0x2bc0x520d: v520d2bc(0x2c4) = CONST 
    0x2bf0x520d: JUMPI v520d2bc(0x2c4), v520d2bb

    Begin block 0x2c00x520d
    prev=[0x2b00x520d], succ=[]
    =================================
    0x2c00x520d: v520d2c0(0x0) = CONST 
    0x2c30x520d: REVERT v520d2c0(0x0), v520d2c0(0x0)

    Begin block 0x2c40x520d
    prev=[0x2b00x520d], succ=[0x2d70x520d, 0x2db0x520d]
    =================================
    0x2c50x520d: v520d2c5(0x20) = CONST 
    0x2c70x520d: v520d2c7 = MUL v520d2c5(0x20), v520d2b7
    0x2c80x520d: v520d2c8 = ADD v520d2c7, v520d2b1(0x160)
    0x2ca0x520d: v520d2ca = MLOAD v520d2c8
    0x2cb0x520d: v520d2cb(0x1c0) = CONST 
    0x2ce0x520d: v520d2ce = MLOAD v520d2cb(0x1c0)
    0x2cf0x520d: v520d2cf(0x3) = CONST 
    0x2d20x520d: v520d2d2 = LT v520d2ce, v520d2cf(0x3)
    0x2d30x520d: v520d2d3(0x2db) = CONST 
    0x2d60x520d: JUMPI v520d2d3(0x2db), v520d2d2

    Begin block 0x2d70x520d
    prev=[0x2c40x520d], succ=[]
    =================================
    0x2d70x520d: v520d2d7(0x0) = CONST 
    0x2da0x520d: REVERT v520d2d7(0x0), v520d2d7(0x0)

    Begin block 0x2db0x520d
    prev=[0x2c40x520d], succ=[0x2ed0x520d, 0x2f10x520d]
    =================================
    0x2dc0x520d: v520d2dc(0x0) = CONST 
    0x2de0x520d: v520d2de(0xc0) = CONST 
    0x2e00x520d: MSTORE v520d2de(0xc0), v520d2dc(0x0)
    0x2e10x520d: v520d2e1(0x20) = CONST 
    0x2e30x520d: v520d2e3(0xc0) = CONST 
    0x2e50x520d: v520d2e5 = SHA3 v520d2e3(0xc0), v520d2e1(0x20)
    0x2e60x520d: v520d2e6 = ADD v520d2e5, v520d2ce
    0x2e70x520d: v520d2e7 = SLOAD v520d2e6
    0x2e80x520d: v520d2e8 = EXTCODESIZE v520d2e7
    0x2e90x520d: v520d2e9(0x2f1) = CONST 
    0x2ec0x520d: JUMPI v520d2e9(0x2f1), v520d2e8

    Begin block 0x2ed0x520d
    prev=[0x2db0x520d], succ=[]
    =================================
    0x2ed0x520d: v520d2ed(0x0) = CONST 
    0x2f00x520d: REVERT v520d2ed(0x0), v520d2ed(0x0)

    Begin block 0x2f10x520d
    prev=[0x2db0x520d], succ=[0x2fe0x520d, 0x3020x520d]
    =================================
    0x2f20x520d: v520d2f2(0x1c0) = CONST 
    0x2f50x520d: v520d2f5 = MLOAD v520d2f2(0x1c0)
    0x2f60x520d: v520d2f6(0x3) = CONST 
    0x2f90x520d: v520d2f9 = LT v520d2f5, v520d2f6(0x3)
    0x2fa0x520d: v520d2fa(0x302) = CONST 
    0x2fd0x520d: JUMPI v520d2fa(0x302), v520d2f9

    Begin block 0x2fe0x520d
    prev=[0x2f10x520d], succ=[]
    =================================
    0x2fe0x520d: v520d2fe(0x0) = CONST 
    0x3010x520d: REVERT v520d2fe(0x0), v520d2fe(0x0)

    Begin block 0x3020x520d
    prev=[0x2f10x520d], succ=[0x3150x520d, 0x3190x520d]
    =================================
    0x3030x520d: v520d303(0x0) = CONST 
    0x3050x520d: v520d305(0xc0) = CONST 
    0x3070x520d: MSTORE v520d305(0xc0), v520d303(0x0)
    0x3080x520d: v520d308(0x20) = CONST 
    0x30a0x520d: v520d30a(0xc0) = CONST 
    0x30c0x520d: v520d30c = SHA3 v520d30a(0xc0), v520d308(0x20)
    0x30d0x520d: v520d30d = ADD v520d30c, v520d2f5
    0x30e0x520d: v520d30e = SLOAD v520d30d
    0x30f0x520d: v520d30f = ADDRESS 
    0x3100x520d: v520d310 = XOR v520d30f, v520d30e
    0x3110x520d: v520d311(0x319) = CONST 
    0x3140x520d: JUMPI v520d311(0x319), v520d310

    Begin block 0x3150x520d
    prev=[0x3020x520d], succ=[]
    =================================
    0x3150x520d: v520d315(0x0) = CONST 
    0x3180x520d: REVERT v520d315(0x0), v520d315(0x0)

    Begin block 0x3190x520d
    prev=[0x3020x520d], succ=[0x3390x520d, 0x33d0x520d]
    =================================
    0x31a0x520d: v520d31a(0x20) = CONST 
    0x31c0x520d: v520d31c(0x240) = CONST 
    0x31f0x520d: v520d31f(0x4) = CONST 
    0x3210x520d: v520d321(0x77c7b8fc) = CONST 
    0x3260x520d: v520d326(0x1e0) = CONST 
    0x3290x520d: MSTORE v520d326(0x1e0), v520d321(0x77c7b8fc)
    0x32a0x520d: v520d32a(0x1fc) = CONST 
    0x32d0x520d: v520d32d(0x1c0) = CONST 
    0x3300x520d: v520d330 = MLOAD v520d32d(0x1c0)
    0x3310x520d: v520d331(0x3) = CONST 
    0x3340x520d: v520d334 = LT v520d330, v520d331(0x3)
    0x3350x520d: v520d335(0x33d) = CONST 
    0x3380x520d: JUMPI v520d335(0x33d), v520d334

    Begin block 0x3390x520d
    prev=[0x3190x520d], succ=[]
    =================================
    0x3390x520d: v520d339(0x0) = CONST 
    0x33c0x520d: REVERT v520d339(0x0), v520d339(0x0)

    Begin block 0x33d0x520d
    prev=[0x3190x520d], succ=[0x3500x520d, 0x3540x520d]
    =================================
    0x33e0x520d: v520d33e(0x0) = CONST 
    0x3400x520d: v520d340(0xc0) = CONST 
    0x3420x520d: MSTORE v520d340(0xc0), v520d33e(0x0)
    0x3430x520d: v520d343(0x20) = CONST 
    0x3450x520d: v520d345(0xc0) = CONST 
    0x3470x520d: v520d347 = SHA3 v520d345(0xc0), v520d343(0x20)
    0x3480x520d: v520d348 = ADD v520d347, v520d330
    0x3490x520d: v520d349 = SLOAD v520d348
    0x34a0x520d: v520d34a = GAS 
    0x34b0x520d: v520d34b = STATICCALL v520d34a, v520d349, v520d32a(0x1fc), v520d31f(0x4), v520d31c(0x240), v520d31a(0x20)
    0x34c0x520d: v520d34c(0x354) = CONST 
    0x34f0x520d: JUMPI v520d34c(0x354), v520d34b

    Begin block 0x3500x520d
    prev=[0x33d0x520d], succ=[]
    =================================
    0x3500x520d: v520d350(0x0) = CONST 
    0x3530x520d: REVERT v520d350(0x0), v520d350(0x0)

    Begin block 0x3540x520d
    prev=[0x33d0x520d], succ=[0x36b0x520d, 0x36f0x520d]
    =================================
    0x3550x520d: v520d355(0x0) = CONST 
    0x3580x520d: v520d358(0x240) = CONST 
    0x35b0x520d: v520d35b = MLOAD v520d358(0x240)
    0x35e0x520d: v520d35e = MUL v520d2ca, v520d35b
    0x3600x520d: v520d360 = ISZERO v520d2ca
    0x3640x520d: v520d364 = DIV v520d35e, v520d2ca
    0x3650x520d: v520d365 = EQ v520d364, v520d35b
    0x3660x520d: v520d366 = OR v520d365, v520d360
    0x3670x520d: v520d367(0x36f) = CONST 
    0x36a0x520d: JUMPI v520d367(0x36f), v520d366

    Begin block 0x36b0x520d
    prev=[0x3540x520d], succ=[]
    =================================
    0x36b0x520d: v520d36b(0x0) = CONST 
    0x36e0x520d: REVERT v520d36b(0x0), v520d36b(0x0)

    Begin block 0x36f0x520d
    prev=[0x3540x520d], succ=[0x37a0x520d]
    =================================
    0x3780x520d: MSTORE v520d2c8, v520d35e

    Begin block 0x37a0x520d
    prev=[0x36f0x520d], succ=[0x2b00x520d, 0x38a0x520d]
    =================================
    0x37c0x520d: v520d37c = MLOAD v520d2a5(0x1c0)
    0x37d0x520d: v520d37d(0x1) = CONST 
    0x37f0x520d: v520d37f = ADD v520d37d(0x1), v520d37c
    0x3820x520d: MSTORE v520d2a5(0x1c0), v520d37f
    0x3840x520d: v520d384 = EQ v520d2af(0x3), v520d37f
    0x3850x520d: v520d385 = ISZERO v520d384
    0x3860x520d: v520d386(0x2b0) = CONST 
    0x3890x520d: JUMPI v520d386(0x2b0), v520d385

    Begin block 0x38a0x520d
    prev=[0x37a0x520d], succ=[0x3930x520d]
    =================================
    0x38d0x520d: v520d38d(0x60) = CONST 
    0x38f0x520d: v520d38f(0x260) = CONST 
    0x3920x520d: MSTORE v520d38f(0x260), v520d38d(0x60)

    Begin block 0x3930x520d
    prev=[0x3a50x520d, 0x38a0x520d], succ=[0x3a10x520d, 0x3a50x520d]
    =================================
    0x3940x520d: v520d394(0x0) = CONST 
    0x3960x520d: v520d396(0x260) = CONST 
    0x3990x520d: v520d399 = MLOAD v520d396(0x260)
    0x39a0x520d: v520d39a = GT v520d399, v520d394(0x0)
    0x39b0x520d: v520d39b = ISZERO v520d39a
    0x39c0x520d: v520d39c = ISZERO v520d39b
    0x39d0x520d: v520d39d(0x3a5) = CONST 
    0x3a00x520d: JUMPI v520d39d(0x3a5), v520d39c

    Begin block 0x3a10x520d
    prev=[0x3930x520d], succ=[0x3c10x520d]
    =================================
    0x3a10x520d: v520d3a1(0x3c1) = CONST 
    0x3a40x520d: JUMP v520d3a1(0x3c1)

    Begin block 0x3c10x520d
    prev=[0x3a10x520d], succ=[]
    =================================
    0x3c20x520d: v520d3c2(0x140) = CONST 
    0x3c50x520d: v520d3c5 = MLOAD v520d3c2(0x140)
    0x3c60x520d: JUMP v520d3c5

    Begin block 0x3a50x520d
    prev=[0x3930x520d], succ=[0x3930x520d]
    =================================
    0x3a60x520d: v520d3a6(0x20) = CONST 
    0x3a80x520d: v520d3a8(0x260) = CONST 
    0x3ab0x520d: v520d3ab = MLOAD v520d3a8(0x260)
    0x3ac0x520d: v520d3ac = SUB v520d3ab, v520d3a6(0x20)
    0x3ad0x520d: v520d3ad(0x160) = CONST 
    0x3b00x520d: v520d3b0 = ADD v520d3ad(0x160), v520d3ac
    0x3b10x520d: v520d3b1 = MLOAD v520d3b0
    0x3b20x520d: v520d3b2(0x20) = CONST 
    0x3b40x520d: v520d3b4(0x260) = CONST 
    0x3b70x520d: v520d3b7 = MLOAD v520d3b4(0x260)
    0x3b80x520d: v520d3b8 = SUB v520d3b7, v520d3b2(0x20)
    0x3b90x520d: v520d3b9(0x260) = CONST 
    0x3bc0x520d: MSTORE v520d3b9(0x260), v520d3b8
    0x3bd0x520d: v520d3bd(0x393) = CONST 
    0x3c00x520d: JUMP v520d3bd(0x393)

}

function remove_liquidity(uint256,uint256[3])() public {
    Begin block 0x5210
    prev=[], succ=[0x3df2, 0x3df6]
    =================================
    0x3de8: v3de8(0xffffff) = CONST 
    0x3dec: v3dec = SLOAD v3de8(0xffffff)
    0x3ded: v3ded = ISZERO v3dec
    0x3dee: v3dee(0x3df6) = CONST 
    0x3df1: JUMPI v3dee(0x3df6), v3ded

    Begin block 0x3df2
    prev=[0x5210], succ=[]
    =================================
    0x3df2: v3df2(0x0) = CONST 
    0x3df5: REVERT v3df2(0x0), v3df2(0x0)

    Begin block 0x3df6
    prev=[0x5210], succ=[0x3e04, 0x3e08]
    =================================
    0x3df7: v3df7(0x1) = CONST 
    0x3df9: v3df9(0xffffff) = CONST 
    0x3dfd: SSTORE v3df9(0xffffff), v3df7(0x1)
    0x3dfe: v3dfe = CALLVALUE 
    0x3dff: v3dff = ISZERO v3dfe
    0x3e00: v3e00(0x3e08) = CONST 
    0x3e03: JUMPI v3e00(0x3e08), v3dff

    Begin block 0x3e04
    prev=[0x3df6], succ=[]
    =================================
    0x3e04: v3e04(0x0) = CONST 
    0x3e07: REVERT v3e04(0x0), v3e04(0x0)

    Begin block 0x3e08
    prev=[0x3df6], succ=[0x3e11, 0x3e15]
    =================================
    0x3e09: v3e09(0x7) = CONST 
    0x3e0b: v3e0b = SLOAD v3e09(0x7)
    0x3e0c: v3e0c = EXTCODESIZE v3e0b
    0x3e0d: v3e0d(0x3e15) = CONST 
    0x3e10: JUMPI v3e0d(0x3e15), v3e0c

    Begin block 0x3e11
    prev=[0x3e08], succ=[]
    =================================
    0x3e11: v3e11(0x0) = CONST 
    0x3e14: REVERT v3e11(0x0), v3e11(0x0)

    Begin block 0x3e15
    prev=[0x3e08], succ=[0x3e1f, 0x3e23]
    =================================
    0x3e16: v3e16(0x7) = CONST 
    0x3e18: v3e18 = SLOAD v3e16(0x7)
    0x3e19: v3e19 = ADDRESS 
    0x3e1a: v3e1a = XOR v3e19, v3e18
    0x3e1b: v3e1b(0x3e23) = CONST 
    0x3e1e: JUMPI v3e1b(0x3e23), v3e1a

    Begin block 0x3e1f
    prev=[0x3e15], succ=[]
    =================================
    0x3e1f: v3e1f(0x0) = CONST 
    0x3e22: REVERT v3e1f(0x0), v3e1f(0x0)

    Begin block 0x3e23
    prev=[0x3e15], succ=[0x3e40, 0x3e44]
    =================================
    0x3e24: v3e24(0x20) = CONST 
    0x3e26: v3e26(0x1c0) = CONST 
    0x3e29: v3e29(0x4) = CONST 
    0x3e2b: v3e2b(0x18160ddd) = CONST 
    0x3e30: v3e30(0x160) = CONST 
    0x3e33: MSTORE v3e30(0x160), v3e2b(0x18160ddd)
    0x3e34: v3e34(0x17c) = CONST 
    0x3e37: v3e37(0x7) = CONST 
    0x3e39: v3e39 = SLOAD v3e37(0x7)
    0x3e3a: v3e3a = GAS 
    0x3e3b: v3e3b = STATICCALL v3e3a, v3e39, v3e34(0x17c), v3e29(0x4), v3e26(0x1c0), v3e24(0x20)
    0x3e3c: v3e3c(0x3e44) = CONST 
    0x3e3f: JUMPI v3e3c(0x3e44), v3e3b

    Begin block 0x3e40
    prev=[0x3e23], succ=[]
    =================================
    0x3e40: v3e40(0x0) = CONST 
    0x3e43: REVERT v3e40(0x0), v3e40(0x0)

    Begin block 0x3e44
    prev=[0x3e23], succ=[0x3e87]
    =================================
    0x3e45: v3e45(0x0) = CONST 
    0x3e48: v3e48(0x1c0) = CONST 
    0x3e4b: v3e4b = MLOAD v3e48(0x1c0)
    0x3e4c: v3e4c(0x140) = CONST 
    0x3e4f: MSTORE v3e4c(0x140), v3e4b
    0x3e50: v3e50(0x1e0) = CONST 
    0x3e53: v3e53(0x0) = CONST 
    0x3e56: MSTORE v3e50(0x1e0), v3e53(0x0)
    0x3e57: v3e57(0x0) = CONST 
    0x3e5a: v3e5a(0x20) = CONST 
    0x3e5c: v3e5c(0x200) = ADD v3e5a(0x20), v3e50(0x1e0)
    0x3e5d: MSTORE v3e5c(0x200), v3e57(0x0)
    0x3e5e: v3e5e(0x0) = CONST 
    0x3e61: v3e61(0x40) = CONST 
    0x3e63: v3e63(0x220) = ADD v3e61(0x40), v3e50(0x1e0)
    0x3e64: MSTORE v3e63(0x220), v3e5e(0x0)
    0x3e66: v3e66(0x240) = CONST 
    0x3e69: v3e69(0x0) = CONST 
    0x3e6c: MSTORE v3e66(0x240), v3e69(0x0)
    0x3e6d: v3e6d(0x0) = CONST 
    0x3e70: v3e70(0x20) = CONST 
    0x3e72: v3e72(0x260) = ADD v3e70(0x20), v3e66(0x240)
    0x3e73: MSTORE v3e72(0x260), v3e6d(0x0)
    0x3e74: v3e74(0x0) = CONST 
    0x3e77: v3e77(0x40) = CONST 
    0x3e79: v3e79(0x280) = ADD v3e77(0x40), v3e66(0x240)
    0x3e7a: MSTORE v3e79(0x280), v3e74(0x0)
    0x3e7c: v3e7c(0x2a0) = CONST 
    0x3e7f: v3e7f(0x0) = CONST 
    0x3e81: v3e81(0x3) = CONST 
    0x3e85: MSTORE v3e7c(0x2a0), v3e7f(0x0)
    0x3e86: v3e86(0x3) = ADD v3e81(0x3), v3e7f(0x0)

    Begin block 0x3e87
    prev=[0x3e44, 0x4067], succ=[0x3e94, 0x3e98]
    =================================
    0x3e88: v3e88(0x2a0) = CONST 
    0x3e8b: v3e8b = MLOAD v3e88(0x2a0)
    0x3e8c: v3e8c(0x3) = CONST 
    0x3e8f: v3e8f = LT v3e8b, v3e8c(0x3)
    0x3e90: v3e90(0x3e98) = CONST 
    0x3e93: JUMPI v3e90(0x3e98), v3e8f

    Begin block 0x3e94
    prev=[0x3e87], succ=[]
    =================================
    0x3e94: v3e94(0x0) = CONST 
    0x3e97: REVERT v3e94(0x0), v3e94(0x0)

    Begin block 0x3e98
    prev=[0x3e87], succ=[0x3eb7, 0x3ebb]
    =================================
    0x3e99: v3e99(0x2) = CONST 
    0x3e9b: v3e9b(0xc0) = CONST 
    0x3e9d: MSTORE v3e9b(0xc0), v3e99(0x2)
    0x3e9e: v3e9e(0x20) = CONST 
    0x3ea0: v3ea0(0xc0) = CONST 
    0x3ea2: v3ea2 = SHA3 v3ea0(0xc0), v3e9e(0x20)
    0x3ea3: v3ea3 = ADD v3ea2, v3e8b
    0x3ea4: v3ea4 = SLOAD v3ea3
    0x3ea5: v3ea5(0x4) = CONST 
    0x3ea7: v3ea7 = CALLDATALOAD v3ea5(0x4)
    0x3eaa: v3eaa = MUL v3ea4, v3ea7
    0x3eac: v3eac = ISZERO v3ea4
    0x3eb0: v3eb0 = DIV v3eaa, v3ea4
    0x3eb1: v3eb1 = EQ v3eb0, v3ea7
    0x3eb2: v3eb2 = OR v3eb1, v3eac
    0x3eb3: v3eb3(0x3ebb) = CONST 
    0x3eb6: JUMPI v3eb3(0x3ebb), v3eb2

    Begin block 0x3eb7
    prev=[0x3e98], succ=[]
    =================================
    0x3eb7: v3eb7(0x0) = CONST 
    0x3eba: REVERT v3eb7(0x0), v3eb7(0x0)

    Begin block 0x3ebb
    prev=[0x3e98], succ=[0x3ecd, 0x3ed1]
    =================================
    0x3ec3: v3ec3(0x140) = CONST 
    0x3ec6: v3ec6 = MLOAD v3ec3(0x140)
    0x3ec9: v3ec9(0x3ed1) = CONST 
    0x3ecc: JUMPI v3ec9(0x3ed1), v3ec6

    Begin block 0x3ecd
    prev=[0x3ebb], succ=[]
    =================================
    0x3ecd: v3ecd(0x0) = CONST 
    0x3ed0: REVERT v3ecd(0x0), v3ecd(0x0)

    Begin block 0x3ed1
    prev=[0x3ebb], succ=[0x3f4d, 0x3f51]
    =================================
    0x3ed3: v3ed3 = DIV v3eaa, v3ec6
    0x3ed8: v3ed8(0x2c0) = CONST 
    0x3edb: MSTORE v3ed8(0x2c0), v3ed3
    0x3edc: v3edc(0x8c379a0) = CONST 
    0x3ee1: v3ee1(0x2e0) = CONST 
    0x3ee4: MSTORE v3ee1(0x2e0), v3edc(0x8c379a0)
    0x3ee5: v3ee5(0x20) = CONST 
    0x3ee7: v3ee7(0x300) = CONST 
    0x3eea: MSTORE v3ee7(0x300), v3ee5(0x20)
    0x3eeb: v3eeb(0x30) = CONST 
    0x3eed: v3eed(0x320) = CONST 
    0x3ef0: MSTORE v3eed(0x320), v3eeb(0x30)
    0x3ef1: v3ef1(0x5769746864726177616c20726573756c74656420696e20666577657220636f69) = CONST 
    0x3f12: v3f12(0x340) = CONST 
    0x3f15: MSTORE v3f12(0x340), v3ef1(0x5769746864726177616c20726573756c74656420696e20666577657220636f69)
    0x3f16: v3f16(0x6e73207468616e20657870656374656400000000000000000000000000000000) = CONST 
    0x3f37: v3f37(0x360) = CONST 
    0x3f3a: MSTORE v3f37(0x360), v3f16(0x6e73207468616e20657870656374656400000000000000000000000000000000)
    0x3f3b: v3f3b(0x320) = CONST 
    0x3f3f: v3f3f(0x24) = CONST 
    0x3f41: v3f41(0x2a0) = CONST 
    0x3f44: v3f44 = MLOAD v3f41(0x2a0)
    0x3f45: v3f45(0x3) = CONST 
    0x3f48: v3f48 = LT v3f44, v3f45(0x3)
    0x3f49: v3f49(0x3f51) = CONST 
    0x3f4c: JUMPI v3f49(0x3f51), v3f48

    Begin block 0x3f4d
    prev=[0x3ed1], succ=[]
    =================================
    0x3f4d: v3f4d(0x0) = CONST 
    0x3f50: REVERT v3f4d(0x0), v3f4d(0x0)

    Begin block 0x3f51
    prev=[0x3ed1], succ=[0x3f61, 0x3f67]
    =================================
    0x3f52: v3f52(0x20) = CONST 
    0x3f54: v3f54 = MUL v3f52(0x20), v3f44
    0x3f55: v3f55 = ADD v3f54, v3f3f(0x24)
    0x3f56: v3f56 = CALLDATALOAD v3f55
    0x3f57: v3f57(0x2c0) = CONST 
    0x3f5a: v3f5a = MLOAD v3f57(0x2c0)
    0x3f5b: v3f5b = LT v3f5a, v3f56
    0x3f5c: v3f5c = ISZERO v3f5b
    0x3f5d: v3f5d(0x3f67) = CONST 
    0x3f60: JUMPI v3f5d(0x3f67), v3f5c

    Begin block 0x3f61
    prev=[0x3f51], succ=[]
    =================================
    0x3f61: v3f61(0xa4) = CONST 
    0x3f63: v3f63(0x2fc) = CONST 
    0x3f66: REVERT v3f63(0x2fc), v3f61(0xa4)

    Begin block 0x3f67
    prev=[0x3f51], succ=[0x3f74, 0x3f78]
    =================================
    0x3f68: v3f68(0x2a0) = CONST 
    0x3f6b: v3f6b = MLOAD v3f68(0x2a0)
    0x3f6c: v3f6c(0x3) = CONST 
    0x3f6f: v3f6f = LT v3f6b, v3f6c(0x3)
    0x3f70: v3f70(0x3f78) = CONST 
    0x3f73: JUMPI v3f70(0x3f78), v3f6f

    Begin block 0x3f74
    prev=[0x3f67], succ=[]
    =================================
    0x3f74: v3f74(0x0) = CONST 
    0x3f77: REVERT v3f74(0x0), v3f74(0x0)

    Begin block 0x3f78
    prev=[0x3f67], succ=[0x3f92, 0x3f96]
    =================================
    0x3f79: v3f79(0x2) = CONST 
    0x3f7b: v3f7b(0xc0) = CONST 
    0x3f7d: MSTORE v3f7b(0xc0), v3f79(0x2)
    0x3f7e: v3f7e(0x20) = CONST 
    0x3f80: v3f80(0xc0) = CONST 
    0x3f82: v3f82 = SHA3 v3f80(0xc0), v3f7e(0x20)
    0x3f83: v3f83 = ADD v3f82, v3f6b
    0x3f85: v3f85 = SLOAD v3f83
    0x3f86: v3f86(0x2c0) = CONST 
    0x3f89: v3f89 = MLOAD v3f86(0x2c0)
    0x3f8c: v3f8c = LT v3f85, v3f89
    0x3f8d: v3f8d = ISZERO v3f8c
    0x3f8e: v3f8e(0x3f96) = CONST 
    0x3f91: JUMPI v3f8e(0x3f96), v3f8d

    Begin block 0x3f92
    prev=[0x3f78], succ=[]
    =================================
    0x3f92: v3f92(0x0) = CONST 
    0x3f95: REVERT v3f92(0x0), v3f92(0x0)

    Begin block 0x3f96
    prev=[0x3f78], succ=[0x3fb4, 0x3fb8]
    =================================
    0x3f99: v3f99 = SUB v3f85, v3f89
    0x3f9f: SSTORE v3f83, v3f99
    0x3fa1: v3fa1(0x2c0) = CONST 
    0x3fa4: v3fa4 = MLOAD v3fa1(0x2c0)
    0x3fa5: v3fa5(0x1e0) = CONST 
    0x3fa8: v3fa8(0x2a0) = CONST 
    0x3fab: v3fab = MLOAD v3fa8(0x2a0)
    0x3fac: v3fac(0x3) = CONST 
    0x3faf: v3faf = LT v3fab, v3fac(0x3)
    0x3fb0: v3fb0(0x3fb8) = CONST 
    0x3fb3: JUMPI v3fb0(0x3fb8), v3faf

    Begin block 0x3fb4
    prev=[0x3f96], succ=[]
    =================================
    0x3fb4: v3fb4(0x0) = CONST 
    0x3fb7: REVERT v3fb4(0x0), v3fb4(0x0)

    Begin block 0x3fb8
    prev=[0x3f96], succ=[0x3fca, 0x3fce]
    =================================
    0x3fb9: v3fb9(0x20) = CONST 
    0x3fbb: v3fbb = MUL v3fb9(0x20), v3fab
    0x3fbc: v3fbc = ADD v3fbb, v3fa5(0x1e0)
    0x3fbd: MSTORE v3fbc, v3fa4
    0x3fbe: v3fbe(0x2a0) = CONST 
    0x3fc1: v3fc1 = MLOAD v3fbe(0x2a0)
    0x3fc2: v3fc2(0x3) = CONST 
    0x3fc5: v3fc5 = LT v3fc1, v3fc2(0x3)
    0x3fc6: v3fc6(0x3fce) = CONST 
    0x3fc9: JUMPI v3fc6(0x3fce), v3fc5

    Begin block 0x3fca
    prev=[0x3fb8], succ=[]
    =================================
    0x3fca: v3fca(0x0) = CONST 
    0x3fcd: REVERT v3fca(0x0), v3fca(0x0)

    Begin block 0x3fce
    prev=[0x3fb8], succ=[0x3fe0, 0x3fe4]
    =================================
    0x3fcf: v3fcf(0x0) = CONST 
    0x3fd1: v3fd1(0xc0) = CONST 
    0x3fd3: MSTORE v3fd1(0xc0), v3fcf(0x0)
    0x3fd4: v3fd4(0x20) = CONST 
    0x3fd6: v3fd6(0xc0) = CONST 
    0x3fd8: v3fd8 = SHA3 v3fd6(0xc0), v3fd4(0x20)
    0x3fd9: v3fd9 = ADD v3fd8, v3fc1
    0x3fda: v3fda = SLOAD v3fd9
    0x3fdb: v3fdb = EXTCODESIZE v3fda
    0x3fdc: v3fdc(0x3fe4) = CONST 
    0x3fdf: JUMPI v3fdc(0x3fe4), v3fdb

    Begin block 0x3fe0
    prev=[0x3fce], succ=[]
    =================================
    0x3fe0: v3fe0(0x0) = CONST 
    0x3fe3: REVERT v3fe0(0x0), v3fe0(0x0)

    Begin block 0x3fe4
    prev=[0x3fce], succ=[0x3ff1, 0x3ff5]
    =================================
    0x3fe5: v3fe5(0x2a0) = CONST 
    0x3fe8: v3fe8 = MLOAD v3fe5(0x2a0)
    0x3fe9: v3fe9(0x3) = CONST 
    0x3fec: v3fec = LT v3fe8, v3fe9(0x3)
    0x3fed: v3fed(0x3ff5) = CONST 
    0x3ff0: JUMPI v3fed(0x3ff5), v3fec

    Begin block 0x3ff1
    prev=[0x3fe4], succ=[]
    =================================
    0x3ff1: v3ff1(0x0) = CONST 
    0x3ff4: REVERT v3ff1(0x0), v3ff1(0x0)

    Begin block 0x3ff5
    prev=[0x3fe4], succ=[0x4008, 0x400c]
    =================================
    0x3ff6: v3ff6(0x0) = CONST 
    0x3ff8: v3ff8(0xc0) = CONST 
    0x3ffa: MSTORE v3ff8(0xc0), v3ff6(0x0)
    0x3ffb: v3ffb(0x20) = CONST 
    0x3ffd: v3ffd(0xc0) = CONST 
    0x3fff: v3fff = SHA3 v3ffd(0xc0), v3ffb(0x20)
    0x4000: v4000 = ADD v3fff, v3fe8
    0x4001: v4001 = SLOAD v4000
    0x4002: v4002 = ADDRESS 
    0x4003: v4003 = XOR v4002, v4001
    0x4004: v4004(0x400c) = CONST 
    0x4007: JUMPI v4004(0x400c), v4003

    Begin block 0x4008
    prev=[0x3ff5], succ=[]
    =================================
    0x4008: v4008(0x0) = CONST 
    0x400b: REVERT v4008(0x0), v4008(0x0)

    Begin block 0x400c
    prev=[0x3ff5], succ=[0x403b, 0x403f]
    =================================
    0x400d: v400d(0x20) = CONST 
    0x400f: v400f(0x440) = CONST 
    0x4012: v4012(0x44) = CONST 
    0x4014: v4014(0xa9059cbb) = CONST 
    0x4019: v4019(0x3a0) = CONST 
    0x401c: MSTORE v4019(0x3a0), v4014(0xa9059cbb)
    0x401d: v401d = CALLER 
    0x401e: v401e(0x3c0) = CONST 
    0x4021: MSTORE v401e(0x3c0), v401d
    0x4022: v4022(0x2c0) = CONST 
    0x4025: v4025 = MLOAD v4022(0x2c0)
    0x4026: v4026(0x3e0) = CONST 
    0x4029: MSTORE v4026(0x3e0), v4025
    0x402a: v402a(0x3bc) = CONST 
    0x402d: v402d(0x0) = CONST 
    0x402f: v402f(0x2a0) = CONST 
    0x4032: v4032 = MLOAD v402f(0x2a0)
    0x4033: v4033(0x3) = CONST 
    0x4036: v4036 = LT v4032, v4033(0x3)
    0x4037: v4037(0x403f) = CONST 
    0x403a: JUMPI v4037(0x403f), v4036

    Begin block 0x403b
    prev=[0x400c], succ=[]
    =================================
    0x403b: v403b(0x0) = CONST 
    0x403e: REVERT v403b(0x0), v403b(0x0)

    Begin block 0x403f
    prev=[0x400c], succ=[0x4052, 0x4056]
    =================================
    0x4040: v4040(0x0) = CONST 
    0x4042: v4042(0xc0) = CONST 
    0x4044: MSTORE v4042(0xc0), v4040(0x0)
    0x4045: v4045(0x20) = CONST 
    0x4047: v4047(0xc0) = CONST 
    0x4049: v4049 = SHA3 v4047(0xc0), v4045(0x20)
    0x404a: v404a = ADD v4049, v4032
    0x404b: v404b = SLOAD v404a
    0x404c: v404c = GAS 
    0x404d: v404d = CALL v404c, v404b, v402d(0x0), v402a(0x3bc), v4012(0x44), v400f(0x440), v400d(0x20)
    0x404e: v404e(0x4056) = CONST 
    0x4051: JUMPI v404e(0x4056), v404d

    Begin block 0x4052
    prev=[0x403f], succ=[]
    =================================
    0x4052: v4052(0x0) = CONST 
    0x4055: REVERT v4052(0x0), v4052(0x0)

    Begin block 0x4056
    prev=[0x403f], succ=[0x4062, 0x4066]
    =================================
    0x4057: v4057(0x0) = CONST 
    0x405a: v405a(0x440) = CONST 
    0x405d: v405d = MLOAD v405a(0x440)
    0x405e: v405e(0x4066) = CONST 
    0x4061: JUMPI v405e(0x4066), v405d

    Begin block 0x4062
    prev=[0x4056], succ=[]
    =================================
    0x4062: v4062(0x0) = CONST 
    0x4065: REVERT v4062(0x0), v4062(0x0)

    Begin block 0x4066
    prev=[0x4056], succ=[0x4067]
    =================================

    Begin block 0x4067
    prev=[0x4066], succ=[0x3e87, 0x4077]
    =================================
    0x4069: v4069 = MLOAD v3e7c(0x2a0)
    0x406a: v406a(0x1) = CONST 
    0x406c: v406c = ADD v406a(0x1), v4069
    0x406f: MSTORE v3e7c(0x2a0), v406c
    0x4071: v4071 = EQ v3e86(0x3), v406c
    0x4072: v4072 = ISZERO v4071
    0x4073: v4073(0x3e87) = CONST 
    0x4076: JUMPI v4073(0x3e87), v4072

    Begin block 0x4077
    prev=[0x4067], succ=[0x4082, 0x4086]
    =================================
    0x407a: v407a(0x7) = CONST 
    0x407c: v407c = SLOAD v407a(0x7)
    0x407d: v407d = EXTCODESIZE v407c
    0x407e: v407e(0x4086) = CONST 
    0x4081: JUMPI v407e(0x4086), v407d

    Begin block 0x4082
    prev=[0x4077], succ=[]
    =================================
    0x4082: v4082(0x0) = CONST 
    0x4085: REVERT v4082(0x0), v4082(0x0)

    Begin block 0x4086
    prev=[0x4077], succ=[0x4090, 0x4094]
    =================================
    0x4087: v4087(0x7) = CONST 
    0x4089: v4089 = SLOAD v4087(0x7)
    0x408a: v408a = ADDRESS 
    0x408b: v408b = XOR v408a, v4089
    0x408c: v408c(0x4094) = CONST 
    0x408f: JUMPI v408c(0x4094), v408b

    Begin block 0x4090
    prev=[0x4086], succ=[]
    =================================
    0x4090: v4090(0x0) = CONST 
    0x4093: REVERT v4090(0x0), v4090(0x0)

    Begin block 0x4094
    prev=[0x4086], succ=[0x40be, 0x40c2]
    =================================
    0x4095: v4095(0x0) = CONST 
    0x4097: v4097(0x0) = CONST 
    0x4099: v4099(0x44) = CONST 
    0x409b: v409b(0x79cc6790) = CONST 
    0x40a0: v40a0(0x460) = CONST 
    0x40a3: MSTORE v40a0(0x460), v409b(0x79cc6790)
    0x40a4: v40a4 = CALLER 
    0x40a5: v40a5(0x480) = CONST 
    0x40a8: MSTORE v40a5(0x480), v40a4
    0x40a9: v40a9(0x4) = CONST 
    0x40ab: v40ab = CALLDATALOAD v40a9(0x4)
    0x40ac: v40ac(0x4a0) = CONST 
    0x40af: MSTORE v40ac(0x4a0), v40ab
    0x40b0: v40b0(0x47c) = CONST 
    0x40b3: v40b3(0x0) = CONST 
    0x40b5: v40b5(0x7) = CONST 
    0x40b7: v40b7 = SLOAD v40b5(0x7)
    0x40b8: v40b8 = GAS 
    0x40b9: v40b9 = CALL v40b8, v40b7, v40b3(0x0), v40b0(0x47c), v4099(0x44), v4097(0x0), v4095(0x0)
    0x40ba: v40ba(0x40c2) = CONST 
    0x40bd: JUMPI v40ba(0x40c2), v40b9

    Begin block 0x40be
    prev=[0x4094], succ=[]
    =================================
    0x40be: v40be(0x0) = CONST 
    0x40c1: REVERT v40be(0x0), v40be(0x0)

    Begin block 0x40c2
    prev=[0x4094], succ=[0x4102, 0x4106]
    =================================
    0x40c3: v40c3(0x1e0) = CONST 
    0x40c6: v40c6 = MLOAD v40c3(0x1e0)
    0x40c7: v40c7(0x500) = CONST 
    0x40ca: MSTORE v40c7(0x500), v40c6
    0x40cb: v40cb(0x200) = CONST 
    0x40ce: v40ce = MLOAD v40cb(0x200)
    0x40cf: v40cf(0x520) = CONST 
    0x40d2: MSTORE v40cf(0x520), v40ce
    0x40d3: v40d3(0x220) = CONST 
    0x40d6: v40d6 = MLOAD v40d3(0x220)
    0x40d7: v40d7(0x540) = CONST 
    0x40da: MSTORE v40d7(0x540), v40d6
    0x40db: v40db(0x240) = CONST 
    0x40de: v40de = MLOAD v40db(0x240)
    0x40df: v40df(0x560) = CONST 
    0x40e2: MSTORE v40df(0x560), v40de
    0x40e3: v40e3(0x260) = CONST 
    0x40e6: v40e6 = MLOAD v40e3(0x260)
    0x40e7: v40e7(0x580) = CONST 
    0x40ea: MSTORE v40e7(0x580), v40e6
    0x40eb: v40eb(0x280) = CONST 
    0x40ee: v40ee = MLOAD v40eb(0x280)
    0x40ef: v40ef(0x5a0) = CONST 
    0x40f2: MSTORE v40ef(0x5a0), v40ee
    0x40f3: v40f3(0x140) = CONST 
    0x40f6: v40f6 = MLOAD v40f3(0x140)
    0x40f7: v40f7(0x4) = CONST 
    0x40f9: v40f9 = CALLDATALOAD v40f7(0x4)
    0x40fc: v40fc = LT v40f6, v40f9
    0x40fd: v40fd = ISZERO v40fc
    0x40fe: v40fe(0x4106) = CONST 
    0x4101: JUMPI v40fe(0x4106), v40fd

    Begin block 0x4102
    prev=[0x40c2], succ=[]
    =================================
    0x4102: v4102(0x0) = CONST 
    0x4105: REVERT v4102(0x0), v4102(0x0)

    Begin block 0x4106
    prev=[0x40c2], succ=[]
    =================================
    0x4109: v4109 = SUB v40f6, v40f9
    0x410e: v410e(0x5c0) = CONST 
    0x4111: MSTORE v410e(0x5c0), v4109
    0x4112: v4112 = CALLER 
    0x4113: v4113(0xa49d4cf02656aebf8c771f5a8585638a2a15ee6c97cf7205d4208ed7c1df252d) = CONST 
    0x4134: v4134(0xe0) = CONST 
    0x4136: v4136(0x500) = CONST 
    0x4139: LOG2 v4136(0x500), v4134(0xe0), v4113(0xa49d4cf02656aebf8c771f5a8585638a2a15ee6c97cf7205d4208ed7c1df252d), v4112
    0x413a: v413a(0x0) = CONST 
    0x413c: v413c(0xffffff) = CONST 
    0x4140: SSTORE v413c(0xffffff), v413a(0x0)
    0x4141: STOP 

}

function remove_liquidity_imbalance(uint256[3],uint256)() public {
    Begin block 0x5213
    prev=[], succ=[0x415b, 0x415f]
    =================================
    0x4151: v4151(0xffffff) = CONST 
    0x4155: v4155 = SLOAD v4151(0xffffff)
    0x4156: v4156 = ISZERO v4155
    0x4157: v4157(0x415f) = CONST 
    0x415a: JUMPI v4157(0x415f), v4156

    Begin block 0x415b
    prev=[0x5213], succ=[]
    =================================
    0x415b: v415b(0x0) = CONST 
    0x415e: REVERT v415b(0x0), v415b(0x0)

    Begin block 0x415f
    prev=[0x5213], succ=[0x416d, 0x4171]
    =================================
    0x4160: v4160(0x1) = CONST 
    0x4162: v4162(0xffffff) = CONST 
    0x4166: SSTORE v4162(0xffffff), v4160(0x1)
    0x4167: v4167 = CALLVALUE 
    0x4168: v4168 = ISZERO v4167
    0x4169: v4169(0x4171) = CONST 
    0x416c: JUMPI v4169(0x4171), v4168

    Begin block 0x416d
    prev=[0x415f], succ=[]
    =================================
    0x416d: v416d(0x0) = CONST 
    0x4170: REVERT v416d(0x0), v416d(0x0)

    Begin block 0x4171
    prev=[0x415f], succ=[0x417a, 0x417e]
    =================================
    0x4172: v4172(0xf) = CONST 
    0x4174: v4174 = SLOAD v4172(0xf)
    0x4175: v4175 = ISZERO v4174
    0x4176: v4176(0x417e) = CONST 
    0x4179: JUMPI v4176(0x417e), v4175

    Begin block 0x417a
    prev=[0x4171], succ=[]
    =================================
    0x417a: v417a(0x0) = CONST 
    0x417d: REVERT v417a(0x0), v417a(0x0)

    Begin block 0x417e
    prev=[0x4171], succ=[0x4187, 0x418b]
    =================================
    0x417f: v417f(0x7) = CONST 
    0x4181: v4181 = SLOAD v417f(0x7)
    0x4182: v4182 = EXTCODESIZE v4181
    0x4183: v4183(0x418b) = CONST 
    0x4186: JUMPI v4183(0x418b), v4182

    Begin block 0x4187
    prev=[0x417e], succ=[]
    =================================
    0x4187: v4187(0x0) = CONST 
    0x418a: REVERT v4187(0x0), v4187(0x0)

    Begin block 0x418b
    prev=[0x417e], succ=[0x4195, 0x4199]
    =================================
    0x418c: v418c(0x7) = CONST 
    0x418e: v418e = SLOAD v418c(0x7)
    0x418f: v418f = ADDRESS 
    0x4190: v4190 = XOR v418f, v418e
    0x4191: v4191(0x4199) = CONST 
    0x4194: JUMPI v4191(0x4199), v4190

    Begin block 0x4195
    prev=[0x418b], succ=[]
    =================================
    0x4195: v4195(0x0) = CONST 
    0x4198: REVERT v4195(0x0), v4195(0x0)

    Begin block 0x4199
    prev=[0x418b], succ=[0x41b6, 0x41ba]
    =================================
    0x419a: v419a(0x20) = CONST 
    0x419c: v419c(0x1c0) = CONST 
    0x419f: v419f(0x4) = CONST 
    0x41a1: v41a1(0x18160ddd) = CONST 
    0x41a6: v41a6(0x160) = CONST 
    0x41a9: MSTORE v41a6(0x160), v41a1(0x18160ddd)
    0x41aa: v41aa(0x17c) = CONST 
    0x41ad: v41ad(0x7) = CONST 
    0x41af: v41af = SLOAD v41ad(0x7)
    0x41b0: v41b0 = GAS 
    0x41b1: v41b1 = STATICCALL v41b0, v41af, v41aa(0x17c), v419f(0x4), v419c(0x1c0), v419a(0x20)
    0x41b2: v41b2(0x41ba) = CONST 
    0x41b5: JUMPI v41b2(0x41ba), v41b1

    Begin block 0x41b6
    prev=[0x4199], succ=[]
    =================================
    0x41b6: v41b6(0x0) = CONST 
    0x41b9: REVERT v41b6(0x0), v41b6(0x0)

    Begin block 0x41ba
    prev=[0x4199], succ=[0x41d1, 0x41d5]
    =================================
    0x41bb: v41bb(0x0) = CONST 
    0x41be: v41be(0x1c0) = CONST 
    0x41c1: v41c1 = MLOAD v41be(0x1c0)
    0x41c2: v41c2(0x140) = CONST 
    0x41c5: MSTORE v41c2(0x140), v41c1
    0x41c6: v41c6(0x0) = CONST 
    0x41c8: v41c8(0x140) = CONST 
    0x41cb: v41cb = MLOAD v41c8(0x140)
    0x41cc: v41cc = GT v41cb, v41c6(0x0)
    0x41cd: v41cd(0x41d5) = CONST 
    0x41d0: JUMPI v41cd(0x41d5), v41cc

    Begin block 0x41d1
    prev=[0x41ba], succ=[]
    =================================
    0x41d1: v41d1(0x0) = CONST 
    0x41d4: REVERT v41d1(0x0), v41d1(0x0)

    Begin block 0x41d5
    prev=[0x41ba], succ=[0x41ea, 0x41ee]
    =================================
    0x41d6: v41d6(0x4) = CONST 
    0x41d8: v41d8 = SLOAD v41d6(0x4)
    0x41d9: v41d9(0x3) = CONST 
    0x41dd: v41dd = MUL v41d8, v41d9(0x3)
    0x41df: v41df = ISZERO v41d8
    0x41e3: v41e3 = DIV v41dd, v41d8
    0x41e4: v41e4 = EQ v41e3, v41d9(0x3)
    0x41e5: v41e5 = OR v41e4, v41df
    0x41e6: v41e6(0x41ee) = CONST 
    0x41e9: JUMPI v41e6(0x41ee), v41e5

    Begin block 0x41ea
    prev=[0x41d5], succ=[]
    =================================
    0x41ea: v41ea(0x0) = CONST 
    0x41ed: REVERT v41ea(0x0), v41ea(0x0)

    Begin block 0x41ee
    prev=[0x41d5], succ=[0x41fe, 0x4202]
    =================================
    0x41f6: v41f6(0x8) = CONST 
    0x41fa: v41fa(0x4202) = CONST 
    0x41fd: JUMPI v41fa(0x4202), v41f6(0x8)

    Begin block 0x41fe
    prev=[0x41ee], succ=[]
    =================================
    0x41fe: v41fe(0x0) = CONST 
    0x4201: REVERT v41fe(0x0), v41fe(0x0)

    Begin block 0x4202
    prev=[0x41ee], succ=[0x2820x5213]
    =================================
    0x4204: v4204 = DIV v41dd, v41f6(0x8)
    0x4209: v4209(0x1e0) = CONST 
    0x420c: MSTORE v4209(0x1e0), v4204
    0x420d: v420d(0x5) = CONST 
    0x420f: v420f = SLOAD v420d(0x5)
    0x4210: v4210(0x200) = CONST 
    0x4213: MSTORE v4210(0x200), v420f
    0x4214: v4214(0x220) = CONST 
    0x4217: v4217(0x140) = CONST 
    0x421a: v421a = MLOAD v4217(0x140)
    0x421b: v421b(0x160) = CONST 
    0x421e: v421e = MLOAD v421b(0x160)
    0x421f: v421f(0x180) = CONST 
    0x4222: v4222 = MLOAD v421f(0x180)
    0x4223: v4223(0x1a0) = CONST 
    0x4226: v4226 = MLOAD v4223(0x1a0)
    0x4227: v4227(0x1c0) = CONST 
    0x422a: v422a = MLOAD v4227(0x1c0)
    0x422b: v422b(0x1e0) = CONST 
    0x422e: v422e = MLOAD v422b(0x1e0)
    0x422f: v422f(0x200) = CONST 
    0x4232: v4232 = MLOAD v422f(0x200)
    0x4233: v4233(0x220) = CONST 
    0x4236: v4236 = MLOAD v4233(0x220)
    0x4237: v4237(0x240) = CONST 
    0x423a: v423a = MLOAD v4237(0x240)
    0x423b: v423b(0x260) = CONST 
    0x423e: v423e = MLOAD v423b(0x260)
    0x423f: v423f(0x6) = CONST 
    0x4241: v4241(0x4241) = CONST 
    0x4242: v4242(0x4247) = ADD v4241(0x4241), v423f(0x6)
    0x4243: v4243(0x282) = CONST 
    0x4246: JUMP v4243(0x282)

    Begin block 0x2820x5213
    prev=[0x4202], succ=[0x2b00x5213]
    =================================
    0x2830x5213: v5213283(0x140) = CONST 
    0x2860x5213: MSTORE v5213283(0x140), v4242(0x4247)
    0x2870x5213: v5213287(0x160) = CONST 
    0x28a0x5213: v521328a(0xe8d4a51000) = CONST 
    0x2910x5213: MSTORE v5213287(0x160), v521328a(0xe8d4a51000)
    0x2920x5213: v5213292(0x1) = CONST 
    0x2950x5213: v5213295(0x20) = CONST 
    0x2970x5213: v5213297(0x180) = ADD v5213295(0x20), v5213287(0x160)
    0x2980x5213: MSTORE v5213297(0x180), v5213292(0x1)
    0x2990x5213: v5213299(0xe8d4a51000) = CONST 
    0x2a00x5213: v52132a0(0x40) = CONST 
    0x2a20x5213: v52132a2(0x1a0) = ADD v52132a0(0x40), v5213287(0x160)
    0x2a30x5213: MSTORE v52132a2(0x1a0), v5213299(0xe8d4a51000)
    0x2a50x5213: v52132a5(0x1c0) = CONST 
    0x2a80x5213: v52132a8(0x0) = CONST 
    0x2aa0x5213: v52132aa(0x3) = CONST 
    0x2ae0x5213: MSTORE v52132a5(0x1c0), v52132a8(0x0)
    0x2af0x5213: v52132af(0x3) = ADD v52132aa(0x3), v52132a8(0x0)

    Begin block 0x2b00x5213
    prev=[0x37a0x5213, 0x2820x5213], succ=[0x2c00x5213, 0x2c40x5213]
    =================================
    0x2b10x5213: v52132b1(0x160) = CONST 
    0x2b40x5213: v52132b4(0x1c0) = CONST 
    0x2b70x5213: v52132b7 = MLOAD v52132b4(0x1c0)
    0x2b80x5213: v52132b8(0x3) = CONST 
    0x2bb0x5213: v52132bb = LT v52132b7, v52132b8(0x3)
    0x2bc0x5213: v52132bc(0x2c4) = CONST 
    0x2bf0x5213: JUMPI v52132bc(0x2c4), v52132bb

    Begin block 0x2c00x5213
    prev=[0x2b00x5213], succ=[]
    =================================
    0x2c00x5213: v52132c0(0x0) = CONST 
    0x2c30x5213: REVERT v52132c0(0x0), v52132c0(0x0)

    Begin block 0x2c40x5213
    prev=[0x2b00x5213], succ=[0x2d70x5213, 0x2db0x5213]
    =================================
    0x2c50x5213: v52132c5(0x20) = CONST 
    0x2c70x5213: v52132c7 = MUL v52132c5(0x20), v52132b7
    0x2c80x5213: v52132c8 = ADD v52132c7, v52132b1(0x160)
    0x2ca0x5213: v52132ca = MLOAD v52132c8
    0x2cb0x5213: v52132cb(0x1c0) = CONST 
    0x2ce0x5213: v52132ce = MLOAD v52132cb(0x1c0)
    0x2cf0x5213: v52132cf(0x3) = CONST 
    0x2d20x5213: v52132d2 = LT v52132ce, v52132cf(0x3)
    0x2d30x5213: v52132d3(0x2db) = CONST 
    0x2d60x5213: JUMPI v52132d3(0x2db), v52132d2

    Begin block 0x2d70x5213
    prev=[0x2c40x5213], succ=[]
    =================================
    0x2d70x5213: v52132d7(0x0) = CONST 
    0x2da0x5213: REVERT v52132d7(0x0), v52132d7(0x0)

    Begin block 0x2db0x5213
    prev=[0x2c40x5213], succ=[0x2ed0x5213, 0x2f10x5213]
    =================================
    0x2dc0x5213: v52132dc(0x0) = CONST 
    0x2de0x5213: v52132de(0xc0) = CONST 
    0x2e00x5213: MSTORE v52132de(0xc0), v52132dc(0x0)
    0x2e10x5213: v52132e1(0x20) = CONST 
    0x2e30x5213: v52132e3(0xc0) = CONST 
    0x2e50x5213: v52132e5 = SHA3 v52132e3(0xc0), v52132e1(0x20)
    0x2e60x5213: v52132e6 = ADD v52132e5, v52132ce
    0x2e70x5213: v52132e7 = SLOAD v52132e6
    0x2e80x5213: v52132e8 = EXTCODESIZE v52132e7
    0x2e90x5213: v52132e9(0x2f1) = CONST 
    0x2ec0x5213: JUMPI v52132e9(0x2f1), v52132e8

    Begin block 0x2ed0x5213
    prev=[0x2db0x5213], succ=[]
    =================================
    0x2ed0x5213: v52132ed(0x0) = CONST 
    0x2f00x5213: REVERT v52132ed(0x0), v52132ed(0x0)

    Begin block 0x2f10x5213
    prev=[0x2db0x5213], succ=[0x2fe0x5213, 0x3020x5213]
    =================================
    0x2f20x5213: v52132f2(0x1c0) = CONST 
    0x2f50x5213: v52132f5 = MLOAD v52132f2(0x1c0)
    0x2f60x5213: v52132f6(0x3) = CONST 
    0x2f90x5213: v52132f9 = LT v52132f5, v52132f6(0x3)
    0x2fa0x5213: v52132fa(0x302) = CONST 
    0x2fd0x5213: JUMPI v52132fa(0x302), v52132f9

    Begin block 0x2fe0x5213
    prev=[0x2f10x5213], succ=[]
    =================================
    0x2fe0x5213: v52132fe(0x0) = CONST 
    0x3010x5213: REVERT v52132fe(0x0), v52132fe(0x0)

    Begin block 0x3020x5213
    prev=[0x2f10x5213], succ=[0x3150x5213, 0x3190x5213]
    =================================
    0x3030x5213: v5213303(0x0) = CONST 
    0x3050x5213: v5213305(0xc0) = CONST 
    0x3070x5213: MSTORE v5213305(0xc0), v5213303(0x0)
    0x3080x5213: v5213308(0x20) = CONST 
    0x30a0x5213: v521330a(0xc0) = CONST 
    0x30c0x5213: v521330c = SHA3 v521330a(0xc0), v5213308(0x20)
    0x30d0x5213: v521330d = ADD v521330c, v52132f5
    0x30e0x5213: v521330e = SLOAD v521330d
    0x30f0x5213: v521330f = ADDRESS 
    0x3100x5213: v5213310 = XOR v521330f, v521330e
    0x3110x5213: v5213311(0x319) = CONST 
    0x3140x5213: JUMPI v5213311(0x319), v5213310

    Begin block 0x3150x5213
    prev=[0x3020x5213], succ=[]
    =================================
    0x3150x5213: v5213315(0x0) = CONST 
    0x3180x5213: REVERT v5213315(0x0), v5213315(0x0)

    Begin block 0x3190x5213
    prev=[0x3020x5213], succ=[0x3390x5213, 0x33d0x5213]
    =================================
    0x31a0x5213: v521331a(0x20) = CONST 
    0x31c0x5213: v521331c(0x240) = CONST 
    0x31f0x5213: v521331f(0x4) = CONST 
    0x3210x5213: v5213321(0x77c7b8fc) = CONST 
    0x3260x5213: v5213326(0x1e0) = CONST 
    0x3290x5213: MSTORE v5213326(0x1e0), v5213321(0x77c7b8fc)
    0x32a0x5213: v521332a(0x1fc) = CONST 
    0x32d0x5213: v521332d(0x1c0) = CONST 
    0x3300x5213: v5213330 = MLOAD v521332d(0x1c0)
    0x3310x5213: v5213331(0x3) = CONST 
    0x3340x5213: v5213334 = LT v5213330, v5213331(0x3)
    0x3350x5213: v5213335(0x33d) = CONST 
    0x3380x5213: JUMPI v5213335(0x33d), v5213334

    Begin block 0x3390x5213
    prev=[0x3190x5213], succ=[]
    =================================
    0x3390x5213: v5213339(0x0) = CONST 
    0x33c0x5213: REVERT v5213339(0x0), v5213339(0x0)

    Begin block 0x33d0x5213
    prev=[0x3190x5213], succ=[0x3500x5213, 0x3540x5213]
    =================================
    0x33e0x5213: v521333e(0x0) = CONST 
    0x3400x5213: v5213340(0xc0) = CONST 
    0x3420x5213: MSTORE v5213340(0xc0), v521333e(0x0)
    0x3430x5213: v5213343(0x20) = CONST 
    0x3450x5213: v5213345(0xc0) = CONST 
    0x3470x5213: v5213347 = SHA3 v5213345(0xc0), v5213343(0x20)
    0x3480x5213: v5213348 = ADD v5213347, v5213330
    0x3490x5213: v5213349 = SLOAD v5213348
    0x34a0x5213: v521334a = GAS 
    0x34b0x5213: v521334b = STATICCALL v521334a, v5213349, v521332a(0x1fc), v521331f(0x4), v521331c(0x240), v521331a(0x20)
    0x34c0x5213: v521334c(0x354) = CONST 
    0x34f0x5213: JUMPI v521334c(0x354), v521334b

    Begin block 0x3500x5213
    prev=[0x33d0x5213], succ=[]
    =================================
    0x3500x5213: v5213350(0x0) = CONST 
    0x3530x5213: REVERT v5213350(0x0), v5213350(0x0)

    Begin block 0x3540x5213
    prev=[0x33d0x5213], succ=[0x36b0x5213, 0x36f0x5213]
    =================================
    0x3550x5213: v5213355(0x0) = CONST 
    0x3580x5213: v5213358(0x240) = CONST 
    0x35b0x5213: v521335b = MLOAD v5213358(0x240)
    0x35e0x5213: v521335e = MUL v52132ca, v521335b
    0x3600x5213: v5213360 = ISZERO v52132ca
    0x3640x5213: v5213364 = DIV v521335e, v52132ca
    0x3650x5213: v5213365 = EQ v5213364, v521335b
    0x3660x5213: v5213366 = OR v5213365, v5213360
    0x3670x5213: v5213367(0x36f) = CONST 
    0x36a0x5213: JUMPI v5213367(0x36f), v5213366

    Begin block 0x36b0x5213
    prev=[0x3540x5213], succ=[]
    =================================
    0x36b0x5213: v521336b(0x0) = CONST 
    0x36e0x5213: REVERT v521336b(0x0), v521336b(0x0)

    Begin block 0x36f0x5213
    prev=[0x3540x5213], succ=[0x37a0x5213]
    =================================
    0x3780x5213: MSTORE v52132c8, v521335e

    Begin block 0x37a0x5213
    prev=[0x36f0x5213], succ=[0x2b00x5213, 0x38a0x5213]
    =================================
    0x37c0x5213: v521337c = MLOAD v52132a5(0x1c0)
    0x37d0x5213: v521337d(0x1) = CONST 
    0x37f0x5213: v521337f = ADD v521337d(0x1), v521337c
    0x3820x5213: MSTORE v52132a5(0x1c0), v521337f
    0x3840x5213: v5213384 = EQ v52132af(0x3), v521337f
    0x3850x5213: v5213385 = ISZERO v5213384
    0x3860x5213: v5213386(0x2b0) = CONST 
    0x3890x5213: JUMPI v5213386(0x2b0), v5213385

    Begin block 0x38a0x5213
    prev=[0x37a0x5213], succ=[0x3930x5213]
    =================================
    0x38d0x5213: v521338d(0x60) = CONST 
    0x38f0x5213: v521338f(0x260) = CONST 
    0x3920x5213: MSTORE v521338f(0x260), v521338d(0x60)

    Begin block 0x3930x5213
    prev=[0x3a50x5213, 0x38a0x5213], succ=[0x3a10x5213, 0x3a50x5213]
    =================================
    0x3940x5213: v5213394(0x0) = CONST 
    0x3960x5213: v5213396(0x260) = CONST 
    0x3990x5213: v5213399 = MLOAD v5213396(0x260)
    0x39a0x5213: v521339a = GT v5213399, v5213394(0x0)
    0x39b0x5213: v521339b = ISZERO v521339a
    0x39c0x5213: v521339c = ISZERO v521339b
    0x39d0x5213: v521339d(0x3a5) = CONST 
    0x3a00x5213: JUMPI v521339d(0x3a5), v521339c

    Begin block 0x3a10x5213
    prev=[0x3930x5213], succ=[0x3c10x5213]
    =================================
    0x3a10x5213: v52133a1(0x3c1) = CONST 
    0x3a40x5213: JUMP v52133a1(0x3c1)

    Begin block 0x3c10x5213
    prev=[0x3a10x5213], succ=[]
    =================================
    0x3c20x5213: v52133c2(0x140) = CONST 
    0x3c50x5213: v52133c5 = MLOAD v52133c2(0x140)
    0x3c60x5213: JUMP v52133c5

    Begin block 0x3a50x5213
    prev=[0x3930x5213], succ=[0x3930x5213]
    =================================
    0x3a60x5213: v52133a6(0x20) = CONST 
    0x3a80x5213: v52133a8(0x260) = CONST 
    0x3ab0x5213: v52133ab = MLOAD v52133a8(0x260)
    0x3ac0x5213: v52133ac = SUB v52133ab, v52133a6(0x20)
    0x3ad0x5213: v52133ad(0x160) = CONST 
    0x3b00x5213: v52133b0 = ADD v52133ad(0x160), v52133ac
    0x3b10x5213: v52133b1 = MLOAD v52133b0
    0x3b20x5213: v52133b2(0x20) = CONST 
    0x3b40x5213: v52133b4(0x260) = CONST 
    0x3b70x5213: v52133b7 = MLOAD v52133b4(0x260)
    0x3b80x5213: v52133b8 = SUB v52133b7, v52133b2(0x20)
    0x3b90x5213: v52133b9(0x260) = CONST 
    0x3bc0x5213: MSTORE v52133b9(0x260), v52133b8
    0x3bd0x5213: v52133bd(0x393) = CONST 
    0x3c00x5213: JUMP v52133bd(0x393)

}

function commit_new_parameters(uint256,uint256,uint256)() public {
    Begin block 0x5216
    prev=[], succ=[0x4a85, 0x4a89]
    =================================
    0x4a7f: v4a7f = CALLVALUE 
    0x4a80: v4a80 = ISZERO v4a7f
    0x4a81: v4a81(0x4a89) = CONST 
    0x4a84: JUMPI v4a81(0x4a89), v4a80

    Begin block 0x4a85
    prev=[0x5216], succ=[]
    =================================
    0x4a85: v4a85(0x0) = CONST 
    0x4a88: REVERT v4a85(0x0), v4a85(0x0)

    Begin block 0x4a89
    prev=[0x5216], succ=[0x4a93, 0x4a97]
    =================================
    0x4a8a: v4a8a(0x6) = CONST 
    0x4a8c: v4a8c = SLOAD v4a8a(0x6)
    0x4a8d: v4a8d = CALLER 
    0x4a8e: v4a8e = EQ v4a8d, v4a8c
    0x4a8f: v4a8f(0x4a97) = CONST 
    0x4a92: JUMPI v4a8f(0x4a97), v4a8e

    Begin block 0x4a93
    prev=[0x4a89], succ=[]
    =================================
    0x4a93: v4a93(0x0) = CONST 
    0x4a96: REVERT v4a93(0x0), v4a93(0x0)

    Begin block 0x4a97
    prev=[0x4a89], succ=[0x4aa0, 0x4aa4]
    =================================
    0x4a98: v4a98(0x8) = CONST 
    0x4a9a: v4a9a = SLOAD v4a98(0x8)
    0x4a9b: v4a9b = ISZERO v4a9a
    0x4a9c: v4a9c(0x4aa4) = CONST 
    0x4a9f: JUMPI v4a9c(0x4aa4), v4a9b

    Begin block 0x4aa0
    prev=[0x4a97], succ=[]
    =================================
    0x4aa0: v4aa0(0x0) = CONST 
    0x4aa3: REVERT v4aa0(0x0), v4aa0(0x0)

    Begin block 0x4aa4
    prev=[0x4a97], succ=[0x4ab4, 0x4ab8]
    =================================
    0x4aa5: v4aa5(0x12a05f200) = CONST 
    0x4aab: v4aab(0x44) = CONST 
    0x4aad: v4aad = CALLDATALOAD v4aab(0x44)
    0x4aae: v4aae = GT v4aad, v4aa5(0x12a05f200)
    0x4aaf: v4aaf = ISZERO v4aae
    0x4ab0: v4ab0(0x4ab8) = CONST 
    0x4ab3: JUMPI v4ab0(0x4ab8), v4aaf

    Begin block 0x4ab4
    prev=[0x4aa4], succ=[]
    =================================
    0x4ab4: v4ab4(0x0) = CONST 
    0x4ab7: REVERT v4ab4(0x0), v4ab4(0x0)

    Begin block 0x4ab8
    prev=[0x4aa4], succ=[0x4ac8, 0x4acc]
    =================================
    0x4ab9: v4ab9 = TIMESTAMP 
    0x4aba: v4aba(0x15180) = CONST 
    0x4ac1: v4ac1 = ADD v4ab9, v4aba(0x15180)
    0x4ac2: v4ac2 = LT v4ac1, v4ab9
    0x4ac3: v4ac3 = ISZERO v4ac2
    0x4ac4: v4ac4(0x4acc) = CONST 
    0x4ac7: JUMPI v4ac4(0x4acc), v4ac3

    Begin block 0x4ac8
    prev=[0x4ab8], succ=[]
    =================================
    0x4ac8: v4ac8(0x0) = CONST 
    0x4acb: REVERT v4ac8(0x0), v4ac8(0x0)

    Begin block 0x4acc
    prev=[0x4ab8], succ=[]
    =================================
    0x4acf: v4acf = ADD v4ab9, v4aba(0x15180)
    0x4ad4: v4ad4(0x140) = CONST 
    0x4ad7: MSTORE v4ad4(0x140), v4acf
    0x4ad8: v4ad8(0x140) = CONST 
    0x4adb: v4adb = MLOAD v4ad8(0x140)
    0x4adc: v4adc(0x8) = CONST 
    0x4ade: SSTORE v4adc(0x8), v4adb
    0x4adf: v4adf(0x4) = CONST 
    0x4ae1: v4ae1 = CALLDATALOAD v4adf(0x4)
    0x4ae2: v4ae2(0xa) = CONST 
    0x4ae4: SSTORE v4ae2(0xa), v4ae1
    0x4ae5: v4ae5(0x24) = CONST 
    0x4ae7: v4ae7 = CALLDATALOAD v4ae5(0x24)
    0x4ae8: v4ae8(0xb) = CONST 
    0x4aea: SSTORE v4ae8(0xb), v4ae7
    0x4aeb: v4aeb(0x44) = CONST 
    0x4aed: v4aed = CALLDATALOAD v4aeb(0x44)
    0x4aee: v4aee(0xc) = CONST 
    0x4af0: SSTORE v4aee(0xc), v4aed
    0x4af1: v4af1(0x4) = CONST 
    0x4af3: v4af3 = CALLDATALOAD v4af1(0x4)
    0x4af4: v4af4(0x160) = CONST 
    0x4af7: MSTORE v4af4(0x160), v4af3
    0x4af8: v4af8(0x24) = CONST 
    0x4afa: v4afa = CALLDATALOAD v4af8(0x24)
    0x4afb: v4afb(0x180) = CONST 
    0x4afe: MSTORE v4afb(0x180), v4afa
    0x4aff: v4aff(0x44) = CONST 
    0x4b01: v4b01 = CALLDATALOAD v4aff(0x44)
    0x4b02: v4b02(0x1a0) = CONST 
    0x4b05: MSTORE v4b02(0x1a0), v4b01
    0x4b06: v4b06(0x140) = CONST 
    0x4b09: v4b09 = MLOAD v4b06(0x140)
    0x4b0a: v4b0a(0x6081daa3b61098baf24d9c69bcd53af932e0635c89c6fd0617534b9ba76a7f73) = CONST 
    0x4b2b: v4b2b(0x60) = CONST 
    0x4b2d: v4b2d(0x160) = CONST 
    0x4b30: LOG2 v4b2d(0x160), v4b2b(0x60), v4b0a(0x6081daa3b61098baf24d9c69bcd53af932e0635c89c6fd0617534b9ba76a7f73), v4b09
    0x4b31: STOP 

}

function apply_new_parameters()() public {
    Begin block 0x5219
    prev=[], succ=[0x4b47, 0x4b4b]
    =================================
    0x4b41: v4b41 = CALLVALUE 
    0x4b42: v4b42 = ISZERO v4b41
    0x4b43: v4b43(0x4b4b) = CONST 
    0x4b46: JUMPI v4b43(0x4b4b), v4b42

    Begin block 0x4b47
    prev=[0x5219], succ=[]
    =================================
    0x4b47: v4b47(0x0) = CONST 
    0x4b4a: REVERT v4b47(0x0), v4b47(0x0)

    Begin block 0x4b4b
    prev=[0x5219], succ=[0x4b55, 0x4b59]
    =================================
    0x4b4c: v4b4c(0x6) = CONST 
    0x4b4e: v4b4e = SLOAD v4b4c(0x6)
    0x4b4f: v4b4f = CALLER 
    0x4b50: v4b50 = EQ v4b4f, v4b4e
    0x4b51: v4b51(0x4b59) = CONST 
    0x4b54: JUMPI v4b51(0x4b59), v4b50

    Begin block 0x4b55
    prev=[0x4b4b], succ=[]
    =================================
    0x4b55: v4b55(0x0) = CONST 
    0x4b58: REVERT v4b55(0x0), v4b55(0x0)

    Begin block 0x4b59
    prev=[0x4b4b], succ=[0x4b6b, 0x4b6f]
    =================================
    0x4b5a: v4b5a(0x0) = CONST 
    0x4b5c: v4b5c(0x8) = CONST 
    0x4b5e: v4b5e = SLOAD v4b5c(0x8)
    0x4b5f: v4b5f = GT v4b5e, v4b5a(0x0)
    0x4b60: v4b60 = TIMESTAMP 
    0x4b61: v4b61(0x8) = CONST 
    0x4b63: v4b63 = SLOAD v4b61(0x8)
    0x4b64: v4b64 = GT v4b63, v4b60
    0x4b65: v4b65 = ISZERO v4b64
    0x4b66: v4b66 = AND v4b65, v4b5f
    0x4b67: v4b67(0x4b6f) = CONST 
    0x4b6a: JUMPI v4b67(0x4b6f), v4b66

    Begin block 0x4b6b
    prev=[0x4b59], succ=[]
    =================================
    0x4b6b: v4b6b(0x0) = CONST 
    0x4b6e: REVERT v4b6b(0x0), v4b6b(0x0)

    Begin block 0x4b6f
    prev=[0x4b59], succ=[]
    =================================
    0x4b70: v4b70(0x0) = CONST 
    0x4b72: v4b72(0x8) = CONST 
    0x4b74: SSTORE v4b72(0x8), v4b70(0x0)
    0x4b75: v4b75(0xa) = CONST 
    0x4b77: v4b77 = SLOAD v4b75(0xa)
    0x4b78: v4b78(0x140) = CONST 
    0x4b7b: MSTORE v4b78(0x140), v4b77
    0x4b7c: v4b7c(0xb) = CONST 
    0x4b7e: v4b7e = SLOAD v4b7c(0xb)
    0x4b7f: v4b7f(0x160) = CONST 
    0x4b82: MSTORE v4b7f(0x160), v4b7e
    0x4b83: v4b83(0xc) = CONST 
    0x4b85: v4b85 = SLOAD v4b83(0xc)
    0x4b86: v4b86(0x180) = CONST 
    0x4b89: MSTORE v4b86(0x180), v4b85
    0x4b8a: v4b8a(0x140) = CONST 
    0x4b8d: v4b8d = MLOAD v4b8a(0x140)
    0x4b8e: v4b8e(0x3) = CONST 
    0x4b90: SSTORE v4b8e(0x3), v4b8d
    0x4b91: v4b91(0x160) = CONST 
    0x4b94: v4b94 = MLOAD v4b91(0x160)
    0x4b95: v4b95(0x4) = CONST 
    0x4b97: SSTORE v4b95(0x4), v4b94
    0x4b98: v4b98(0x180) = CONST 
    0x4b9b: v4b9b = MLOAD v4b98(0x180)
    0x4b9c: v4b9c(0x5) = CONST 
    0x4b9e: SSTORE v4b9c(0x5), v4b9b
    0x4b9f: v4b9f(0x140) = CONST 
    0x4ba2: v4ba2 = MLOAD v4b9f(0x140)
    0x4ba3: v4ba3(0x1a0) = CONST 
    0x4ba6: MSTORE v4ba3(0x1a0), v4ba2
    0x4ba7: v4ba7(0x160) = CONST 
    0x4baa: v4baa = MLOAD v4ba7(0x160)
    0x4bab: v4bab(0x1c0) = CONST 
    0x4bae: MSTORE v4bab(0x1c0), v4baa
    0x4baf: v4baf(0x180) = CONST 
    0x4bb2: v4bb2 = MLOAD v4baf(0x180)
    0x4bb3: v4bb3(0x1e0) = CONST 
    0x4bb6: MSTORE v4bb3(0x1e0), v4bb2
    0x4bb7: v4bb7(0x752a27d1853eb7af3ee4ff764f2c4a51619386af721573dd3809e929c39db99e) = CONST 
    0x4bd8: v4bd8(0x60) = CONST 
    0x4bda: v4bda(0x1a0) = CONST 
    0x4bdd: LOG1 v4bda(0x1a0), v4bd8(0x60), v4bb7(0x752a27d1853eb7af3ee4ff764f2c4a51619386af721573dd3809e929c39db99e)
    0x4bde: STOP 

}

function revert_new_parameters()() public {
    Begin block 0x521c
    prev=[], succ=[0x4bf4, 0x4bf8]
    =================================
    0x4bee: v4bee = CALLVALUE 
    0x4bef: v4bef = ISZERO v4bee
    0x4bf0: v4bf0(0x4bf8) = CONST 
    0x4bf3: JUMPI v4bf0(0x4bf8), v4bef

    Begin block 0x4bf4
    prev=[0x521c], succ=[]
    =================================
    0x4bf4: v4bf4(0x0) = CONST 
    0x4bf7: REVERT v4bf4(0x0), v4bf4(0x0)

    Begin block 0x4bf8
    prev=[0x521c], succ=[0x4c02, 0x4c06]
    =================================
    0x4bf9: v4bf9(0x6) = CONST 
    0x4bfb: v4bfb = SLOAD v4bf9(0x6)
    0x4bfc: v4bfc = CALLER 
    0x4bfd: v4bfd = EQ v4bfc, v4bfb
    0x4bfe: v4bfe(0x4c06) = CONST 
    0x4c01: JUMPI v4bfe(0x4c06), v4bfd

    Begin block 0x4c02
    prev=[0x4bf8], succ=[]
    =================================
    0x4c02: v4c02(0x0) = CONST 
    0x4c05: REVERT v4c02(0x0), v4c02(0x0)

    Begin block 0x4c06
    prev=[0x4bf8], succ=[]
    =================================
    0x4c07: v4c07(0x0) = CONST 
    0x4c09: v4c09(0x8) = CONST 
    0x4c0b: SSTORE v4c09(0x8), v4c07(0x0)
    0x4c0c: STOP 

}

function commit_transfer_ownership(address)() public {
    Begin block 0x521f
    prev=[], succ=[0x4c22, 0x4c26]
    =================================
    0x4c1c: v4c1c = CALLVALUE 
    0x4c1d: v4c1d = ISZERO v4c1c
    0x4c1e: v4c1e(0x4c26) = CONST 
    0x4c21: JUMPI v4c1e(0x4c26), v4c1d

    Begin block 0x4c22
    prev=[0x521f], succ=[]
    =================================
    0x4c22: v4c22(0x0) = CONST 
    0x4c25: REVERT v4c22(0x0), v4c22(0x0)

    Begin block 0x4c26
    prev=[0x521f], succ=[0x4c33, 0x4c37]
    =================================
    0x4c27: v4c27(0x4) = CONST 
    0x4c29: v4c29 = CALLDATALOAD v4c27(0x4)
    0x4c2a: v4c2a(0x20) = CONST 
    0x4c2c: v4c2c = MLOAD v4c2a(0x20)
    0x4c2e: v4c2e = LT v4c29, v4c2c
    0x4c2f: v4c2f(0x4c37) = CONST 
    0x4c32: JUMPI v4c2f(0x4c37), v4c2e

    Begin block 0x4c33
    prev=[0x4c26], succ=[]
    =================================
    0x4c33: v4c33(0x0) = CONST 
    0x4c36: REVERT v4c33(0x0), v4c33(0x0)

    Begin block 0x4c37
    prev=[0x4c26], succ=[0x4c42, 0x4c46]
    =================================
    0x4c39: v4c39(0x6) = CONST 
    0x4c3b: v4c3b = SLOAD v4c39(0x6)
    0x4c3c: v4c3c = CALLER 
    0x4c3d: v4c3d = EQ v4c3c, v4c3b
    0x4c3e: v4c3e(0x4c46) = CONST 
    0x4c41: JUMPI v4c3e(0x4c46), v4c3d

    Begin block 0x4c42
    prev=[0x4c37], succ=[]
    =================================
    0x4c42: v4c42(0x0) = CONST 
    0x4c45: REVERT v4c42(0x0), v4c42(0x0)

    Begin block 0x4c46
    prev=[0x4c37], succ=[0x4c4f, 0x4c53]
    =================================
    0x4c47: v4c47(0x9) = CONST 
    0x4c49: v4c49 = SLOAD v4c47(0x9)
    0x4c4a: v4c4a = ISZERO v4c49
    0x4c4b: v4c4b(0x4c53) = CONST 
    0x4c4e: JUMPI v4c4b(0x4c53), v4c4a

    Begin block 0x4c4f
    prev=[0x4c46], succ=[]
    =================================
    0x4c4f: v4c4f(0x0) = CONST 
    0x4c52: REVERT v4c4f(0x0), v4c4f(0x0)

    Begin block 0x4c53
    prev=[0x4c46], succ=[0x4c63, 0x4c67]
    =================================
    0x4c54: v4c54 = TIMESTAMP 
    0x4c55: v4c55(0x15180) = CONST 
    0x4c5c: v4c5c = ADD v4c54, v4c55(0x15180)
    0x4c5d: v4c5d = LT v4c5c, v4c54
    0x4c5e: v4c5e = ISZERO v4c5d
    0x4c5f: v4c5f(0x4c67) = CONST 
    0x4c62: JUMPI v4c5f(0x4c67), v4c5e

    Begin block 0x4c63
    prev=[0x4c53], succ=[]
    =================================
    0x4c63: v4c63(0x0) = CONST 
    0x4c66: REVERT v4c63(0x0), v4c63(0x0)

    Begin block 0x4c67
    prev=[0x4c53], succ=[]
    =================================
    0x4c6a: v4c6a = ADD v4c54, v4c55(0x15180)
    0x4c6f: v4c6f(0x140) = CONST 
    0x4c72: MSTORE v4c6f(0x140), v4c6a
    0x4c73: v4c73(0x140) = CONST 
    0x4c76: v4c76 = MLOAD v4c73(0x140)
    0x4c77: v4c77(0x9) = CONST 
    0x4c79: SSTORE v4c77(0x9), v4c76
    0x4c7a: v4c7a(0x4) = CONST 
    0x4c7c: v4c7c = CALLDATALOAD v4c7a(0x4)
    0x4c7d: v4c7d(0xd) = CONST 
    0x4c7f: SSTORE v4c7d(0xd), v4c7c
    0x4c80: v4c80(0x4) = CONST 
    0x4c82: v4c82 = CALLDATALOAD v4c80(0x4)
    0x4c83: v4c83(0x140) = CONST 
    0x4c86: v4c86 = MLOAD v4c83(0x140)
    0x4c87: v4c87(0x181aa3aa17d4cbf99265dd4443eba009433d3cde79d60164fde1d1a192beb935) = CONST 
    0x4ca8: v4ca8(0x0) = CONST 
    0x4caa: v4caa(0x0) = CONST 
    0x4cac: LOG3 v4caa(0x0), v4ca8(0x0), v4c87(0x181aa3aa17d4cbf99265dd4443eba009433d3cde79d60164fde1d1a192beb935), v4c86, v4c82
    0x4cad: STOP 

}

function apply_transfer_ownership()() public {
    Begin block 0x5222
    prev=[], succ=[0x4cc3, 0x4cc7]
    =================================
    0x4cbd: v4cbd = CALLVALUE 
    0x4cbe: v4cbe = ISZERO v4cbd
    0x4cbf: v4cbf(0x4cc7) = CONST 
    0x4cc2: JUMPI v4cbf(0x4cc7), v4cbe

    Begin block 0x4cc3
    prev=[0x5222], succ=[]
    =================================
    0x4cc3: v4cc3(0x0) = CONST 
    0x4cc6: REVERT v4cc3(0x0), v4cc3(0x0)

    Begin block 0x4cc7
    prev=[0x5222], succ=[0x4cd1, 0x4cd5]
    =================================
    0x4cc8: v4cc8(0x6) = CONST 
    0x4cca: v4cca = SLOAD v4cc8(0x6)
    0x4ccb: v4ccb = CALLER 
    0x4ccc: v4ccc = EQ v4ccb, v4cca
    0x4ccd: v4ccd(0x4cd5) = CONST 
    0x4cd0: JUMPI v4ccd(0x4cd5), v4ccc

    Begin block 0x4cd1
    prev=[0x4cc7], succ=[]
    =================================
    0x4cd1: v4cd1(0x0) = CONST 
    0x4cd4: REVERT v4cd1(0x0), v4cd1(0x0)

    Begin block 0x4cd5
    prev=[0x4cc7], succ=[0x4ce7, 0x4ceb]
    =================================
    0x4cd6: v4cd6(0x0) = CONST 
    0x4cd8: v4cd8(0x9) = CONST 
    0x4cda: v4cda = SLOAD v4cd8(0x9)
    0x4cdb: v4cdb = GT v4cda, v4cd6(0x0)
    0x4cdc: v4cdc(0x9) = CONST 
    0x4cde: v4cde = SLOAD v4cdc(0x9)
    0x4cdf: v4cdf = TIMESTAMP 
    0x4ce0: v4ce0 = LT v4cdf, v4cde
    0x4ce1: v4ce1 = ISZERO v4ce0
    0x4ce2: v4ce2 = AND v4ce1, v4cdb
    0x4ce3: v4ce3(0x4ceb) = CONST 
    0x4ce6: JUMPI v4ce3(0x4ceb), v4ce2

    Begin block 0x4ce7
    prev=[0x4cd5], succ=[]
    =================================
    0x4ce7: v4ce7(0x0) = CONST 
    0x4cea: REVERT v4ce7(0x0), v4ce7(0x0)

    Begin block 0x4ceb
    prev=[0x4cd5], succ=[]
    =================================
    0x4cec: v4cec(0x0) = CONST 
    0x4cee: v4cee(0x9) = CONST 
    0x4cf0: SSTORE v4cee(0x9), v4cec(0x0)
    0x4cf1: v4cf1(0xd) = CONST 
    0x4cf3: v4cf3 = SLOAD v4cf1(0xd)
    0x4cf4: v4cf4(0x140) = CONST 
    0x4cf7: MSTORE v4cf4(0x140), v4cf3
    0x4cf8: v4cf8(0x140) = CONST 
    0x4cfb: v4cfb = MLOAD v4cf8(0x140)
    0x4cfc: v4cfc(0x6) = CONST 
    0x4cfe: SSTORE v4cfc(0x6), v4cfb
    0x4cff: v4cff(0x140) = CONST 
    0x4d02: v4d02 = MLOAD v4cff(0x140)
    0x4d03: v4d03(0x71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c) = CONST 
    0x4d24: v4d24(0x0) = CONST 
    0x4d26: v4d26(0x0) = CONST 
    0x4d28: LOG2 v4d26(0x0), v4d24(0x0), v4d03(0x71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c), v4d02
    0x4d29: STOP 

}

function revert_transfer_ownership()() public {
    Begin block 0x5225
    prev=[], succ=[0x4d3f, 0x4d43]
    =================================
    0x4d39: v4d39 = CALLVALUE 
    0x4d3a: v4d3a = ISZERO v4d39
    0x4d3b: v4d3b(0x4d43) = CONST 
    0x4d3e: JUMPI v4d3b(0x4d43), v4d3a

    Begin block 0x4d3f
    prev=[0x5225], succ=[]
    =================================
    0x4d3f: v4d3f(0x0) = CONST 
    0x4d42: REVERT v4d3f(0x0), v4d3f(0x0)

    Begin block 0x4d43
    prev=[0x5225], succ=[0x4d4d, 0x4d51]
    =================================
    0x4d44: v4d44(0x6) = CONST 
    0x4d46: v4d46 = SLOAD v4d44(0x6)
    0x4d47: v4d47 = CALLER 
    0x4d48: v4d48 = EQ v4d47, v4d46
    0x4d49: v4d49(0x4d51) = CONST 
    0x4d4c: JUMPI v4d49(0x4d51), v4d48

    Begin block 0x4d4d
    prev=[0x4d43], succ=[]
    =================================
    0x4d4d: v4d4d(0x0) = CONST 
    0x4d50: REVERT v4d4d(0x0), v4d4d(0x0)

    Begin block 0x4d51
    prev=[0x4d43], succ=[]
    =================================
    0x4d52: v4d52(0x0) = CONST 
    0x4d54: v4d54(0x9) = CONST 
    0x4d56: SSTORE v4d54(0x9), v4d52(0x0)
    0x4d57: STOP 

}

function withdraw_admin_fees()() public {
    Begin block 0x5228
    prev=[], succ=[0x4d6d, 0x4d71]
    =================================
    0x4d67: v4d67 = CALLVALUE 
    0x4d68: v4d68 = ISZERO v4d67
    0x4d69: v4d69(0x4d71) = CONST 
    0x4d6c: JUMPI v4d69(0x4d71), v4d68

    Begin block 0x4d6d
    prev=[0x5228], succ=[]
    =================================
    0x4d6d: v4d6d(0x0) = CONST 
    0x4d70: REVERT v4d6d(0x0), v4d6d(0x0)

    Begin block 0x4d71
    prev=[0x5228], succ=[0x4d7b, 0x4d7f]
    =================================
    0x4d72: v4d72(0x6) = CONST 
    0x4d74: v4d74 = SLOAD v4d72(0x6)
    0x4d75: v4d75 = CALLER 
    0x4d76: v4d76 = EQ v4d75, v4d74
    0x4d77: v4d77(0x4d7f) = CONST 
    0x4d7a: JUMPI v4d77(0x4d7f), v4d76

    Begin block 0x4d7b
    prev=[0x4d71], succ=[]
    =================================
    0x4d7b: v4d7b(0x0) = CONST 
    0x4d7e: REVERT v4d7b(0x0), v4d7b(0x0)

    Begin block 0x4d7f
    prev=[0x4d71], succ=[0x4da9]
    =================================
    0x4d80: v4d80(0x140) = CONST 
    0x4d83: v4d83(0xe8d4a51000) = CONST 
    0x4d8a: MSTORE v4d80(0x140), v4d83(0xe8d4a51000)
    0x4d8b: v4d8b(0x1) = CONST 
    0x4d8e: v4d8e(0x20) = CONST 
    0x4d90: v4d90(0x160) = ADD v4d8e(0x20), v4d80(0x140)
    0x4d91: MSTORE v4d90(0x160), v4d8b(0x1)
    0x4d92: v4d92(0xe8d4a51000) = CONST 
    0x4d99: v4d99(0x40) = CONST 
    0x4d9b: v4d9b(0x180) = ADD v4d99(0x40), v4d80(0x140)
    0x4d9c: MSTORE v4d9b(0x180), v4d92(0xe8d4a51000)
    0x4d9e: v4d9e(0x1a0) = CONST 
    0x4da1: v4da1(0x0) = CONST 
    0x4da3: v4da3(0x3) = CONST 
    0x4da7: MSTORE v4d9e(0x1a0), v4da1(0x0)
    0x4da8: v4da8(0x3) = ADD v4da3(0x3), v4da1(0x0)

    Begin block 0x4da9
    prev=[0x4d7f, 0x4eb6], succ=[0x4db6, 0x4dba]
    =================================
    0x4daa: v4daa(0x1a0) = CONST 
    0x4dad: v4dad = MLOAD v4daa(0x1a0)
    0x4dae: v4dae(0x3) = CONST 
    0x4db1: v4db1 = LT v4dad, v4dae(0x3)
    0x4db2: v4db2(0x4dba) = CONST 
    0x4db5: JUMPI v4db2(0x4dba), v4db1

    Begin block 0x4db6
    prev=[0x4da9], succ=[]
    =================================
    0x4db6: v4db6(0x0) = CONST 
    0x4db9: REVERT v4db6(0x0), v4db6(0x0)

    Begin block 0x4dba
    prev=[0x4da9], succ=[0x4dd4, 0x4dd8]
    =================================
    0x4dbb: v4dbb(0x0) = CONST 
    0x4dbd: v4dbd(0xc0) = CONST 
    0x4dbf: MSTORE v4dbd(0xc0), v4dbb(0x0)
    0x4dc0: v4dc0(0x20) = CONST 
    0x4dc2: v4dc2(0xc0) = CONST 
    0x4dc4: v4dc4 = SHA3 v4dc2(0xc0), v4dc0(0x20)
    0x4dc5: v4dc5 = ADD v4dc4, v4dad
    0x4dc6: v4dc6 = SLOAD v4dc5
    0x4dc7: v4dc7(0x1c0) = CONST 
    0x4dca: MSTORE v4dc7(0x1c0), v4dc6
    0x4dcb: v4dcb(0x1c0) = CONST 
    0x4dce: v4dce = MLOAD v4dcb(0x1c0)
    0x4dcf: v4dcf = EXTCODESIZE v4dce
    0x4dd0: v4dd0(0x4dd8) = CONST 
    0x4dd3: JUMPI v4dd0(0x4dd8), v4dcf

    Begin block 0x4dd4
    prev=[0x4dba], succ=[]
    =================================
    0x4dd4: v4dd4(0x0) = CONST 
    0x4dd7: REVERT v4dd4(0x0), v4dd4(0x0)

    Begin block 0x4dd8
    prev=[0x4dba], succ=[0x4de3, 0x4de7]
    =================================
    0x4dd9: v4dd9(0x1c0) = CONST 
    0x4ddc: v4ddc = MLOAD v4dd9(0x1c0)
    0x4ddd: v4ddd = ADDRESS 
    0x4dde: v4dde = XOR v4ddd, v4ddc
    0x4ddf: v4ddf(0x4de7) = CONST 
    0x4de2: JUMPI v4ddf(0x4de7), v4dde

    Begin block 0x4de3
    prev=[0x4dd8], succ=[]
    =================================
    0x4de3: v4de3(0x0) = CONST 
    0x4de6: REVERT v4de3(0x0), v4de3(0x0)

    Begin block 0x4de7
    prev=[0x4dd8], succ=[0x4e0a, 0x4e0e]
    =================================
    0x4de8: v4de8(0x20) = CONST 
    0x4dea: v4dea(0x280) = CONST 
    0x4ded: v4ded(0x24) = CONST 
    0x4def: v4def(0x70a08231) = CONST 
    0x4df4: v4df4(0x200) = CONST 
    0x4df7: MSTORE v4df4(0x200), v4def(0x70a08231)
    0x4df8: v4df8 = ADDRESS 
    0x4df9: v4df9(0x220) = CONST 
    0x4dfc: MSTORE v4df9(0x220), v4df8
    0x4dfd: v4dfd(0x21c) = CONST 
    0x4e00: v4e00(0x1c0) = CONST 
    0x4e03: v4e03 = MLOAD v4e00(0x1c0)
    0x4e04: v4e04 = GAS 
    0x4e05: v4e05 = STATICCALL v4e04, v4e03, v4dfd(0x21c), v4ded(0x24), v4dea(0x280), v4de8(0x20)
    0x4e06: v4e06(0x4e0e) = CONST 
    0x4e09: JUMPI v4e06(0x4e0e), v4e05

    Begin block 0x4e0a
    prev=[0x4de7], succ=[]
    =================================
    0x4e0a: v4e0a(0x0) = CONST 
    0x4e0d: REVERT v4e0a(0x0), v4e0a(0x0)

    Begin block 0x4e0e
    prev=[0x4de7], succ=[0x4e22, 0x4e26]
    =================================
    0x4e0f: v4e0f(0x0) = CONST 
    0x4e12: v4e12(0x280) = CONST 
    0x4e15: v4e15 = MLOAD v4e12(0x280)
    0x4e16: v4e16(0x1a0) = CONST 
    0x4e19: v4e19 = MLOAD v4e16(0x1a0)
    0x4e1a: v4e1a(0x3) = CONST 
    0x4e1d: v4e1d = LT v4e19, v4e1a(0x3)
    0x4e1e: v4e1e(0x4e26) = CONST 
    0x4e21: JUMPI v4e1e(0x4e26), v4e1d

    Begin block 0x4e22
    prev=[0x4e0e], succ=[]
    =================================
    0x4e22: v4e22(0x0) = CONST 
    0x4e25: REVERT v4e22(0x0), v4e22(0x0)

    Begin block 0x4e26
    prev=[0x4e0e], succ=[0x4e3b, 0x4e3f]
    =================================
    0x4e27: v4e27(0x2) = CONST 
    0x4e29: v4e29(0xc0) = CONST 
    0x4e2b: MSTORE v4e29(0xc0), v4e27(0x2)
    0x4e2c: v4e2c(0x20) = CONST 
    0x4e2e: v4e2e(0xc0) = CONST 
    0x4e30: v4e30 = SHA3 v4e2e(0xc0), v4e2c(0x20)
    0x4e31: v4e31 = ADD v4e30, v4e19
    0x4e32: v4e32 = SLOAD v4e31
    0x4e35: v4e35 = LT v4e15, v4e32
    0x4e36: v4e36 = ISZERO v4e35
    0x4e37: v4e37(0x4e3f) = CONST 
    0x4e3a: JUMPI v4e37(0x4e3f), v4e36

    Begin block 0x4e3b
    prev=[0x4e26], succ=[]
    =================================
    0x4e3b: v4e3b(0x0) = CONST 
    0x4e3e: REVERT v4e3b(0x0), v4e3b(0x0)

    Begin block 0x4e3f
    prev=[0x4e26], succ=[0x4e57, 0x4eb5]
    =================================
    0x4e42: v4e42 = SUB v4e15, v4e32
    0x4e47: v4e47(0x1e0) = CONST 
    0x4e4a: MSTORE v4e47(0x1e0), v4e42
    0x4e4b: v4e4b(0x0) = CONST 
    0x4e4d: v4e4d(0x1e0) = CONST 
    0x4e50: v4e50 = MLOAD v4e4d(0x1e0)
    0x4e51: v4e51 = GT v4e50, v4e4b(0x0)
    0x4e52: v4e52 = ISZERO v4e51
    0x4e53: v4e53(0x4eb5) = CONST 
    0x4e56: JUMPI v4e53(0x4eb5), v4e52

    Begin block 0x4e57
    prev=[0x4e3f], succ=[0x4e60, 0x4e64]
    =================================
    0x4e57: v4e57(0x1c0) = CONST 
    0x4e5a: v4e5a = MLOAD v4e57(0x1c0)
    0x4e5b: v4e5b = EXTCODESIZE v4e5a
    0x4e5c: v4e5c(0x4e64) = CONST 
    0x4e5f: JUMPI v4e5c(0x4e64), v4e5b

    Begin block 0x4e60
    prev=[0x4e57], succ=[]
    =================================
    0x4e60: v4e60(0x0) = CONST 
    0x4e63: REVERT v4e60(0x0), v4e60(0x0)

    Begin block 0x4e64
    prev=[0x4e57], succ=[0x4e6f, 0x4e73]
    =================================
    0x4e65: v4e65(0x1c0) = CONST 
    0x4e68: v4e68 = MLOAD v4e65(0x1c0)
    0x4e69: v4e69 = ADDRESS 
    0x4e6a: v4e6a = XOR v4e69, v4e68
    0x4e6b: v4e6b(0x4e73) = CONST 
    0x4e6e: JUMPI v4e6b(0x4e73), v4e6a

    Begin block 0x4e6f
    prev=[0x4e64], succ=[]
    =================================
    0x4e6f: v4e6f(0x0) = CONST 
    0x4e72: REVERT v4e6f(0x0), v4e6f(0x0)

    Begin block 0x4e73
    prev=[0x4e64], succ=[0x4ea0, 0x4ea4]
    =================================
    0x4e74: v4e74(0x20) = CONST 
    0x4e76: v4e76(0x340) = CONST 
    0x4e79: v4e79(0x44) = CONST 
    0x4e7b: v4e7b(0xa9059cbb) = CONST 
    0x4e80: v4e80(0x2a0) = CONST 
    0x4e83: MSTORE v4e80(0x2a0), v4e7b(0xa9059cbb)
    0x4e84: v4e84 = CALLER 
    0x4e85: v4e85(0x2c0) = CONST 
    0x4e88: MSTORE v4e85(0x2c0), v4e84
    0x4e89: v4e89(0x1e0) = CONST 
    0x4e8c: v4e8c = MLOAD v4e89(0x1e0)
    0x4e8d: v4e8d(0x2e0) = CONST 
    0x4e90: MSTORE v4e8d(0x2e0), v4e8c
    0x4e91: v4e91(0x2bc) = CONST 
    0x4e94: v4e94(0x0) = CONST 
    0x4e96: v4e96(0x1c0) = CONST 
    0x4e99: v4e99 = MLOAD v4e96(0x1c0)
    0x4e9a: v4e9a = GAS 
    0x4e9b: v4e9b = CALL v4e9a, v4e99, v4e94(0x0), v4e91(0x2bc), v4e79(0x44), v4e76(0x340), v4e74(0x20)
    0x4e9c: v4e9c(0x4ea4) = CONST 
    0x4e9f: JUMPI v4e9c(0x4ea4), v4e9b

    Begin block 0x4ea0
    prev=[0x4e73], succ=[]
    =================================
    0x4ea0: v4ea0(0x0) = CONST 
    0x4ea3: REVERT v4ea0(0x0), v4ea0(0x0)

    Begin block 0x4ea4
    prev=[0x4e73], succ=[0x4eb0, 0x4eb4]
    =================================
    0x4ea5: v4ea5(0x0) = CONST 
    0x4ea8: v4ea8(0x340) = CONST 
    0x4eab: v4eab = MLOAD v4ea8(0x340)
    0x4eac: v4eac(0x4eb4) = CONST 
    0x4eaf: JUMPI v4eac(0x4eb4), v4eab

    Begin block 0x4eb0
    prev=[0x4ea4], succ=[]
    =================================
    0x4eb0: v4eb0(0x0) = CONST 
    0x4eb3: REVERT v4eb0(0x0), v4eb0(0x0)

    Begin block 0x4eb4
    prev=[0x4ea4], succ=[0x4eb5]
    =================================

    Begin block 0x4eb5
    prev=[0x4e3f, 0x4eb4], succ=[0x4eb6]
    =================================

    Begin block 0x4eb6
    prev=[0x4eb5], succ=[0x4da9, 0x4ec6]
    =================================
    0x4eb8: v4eb8 = MLOAD v4d9e(0x1a0)
    0x4eb9: v4eb9(0x1) = CONST 
    0x4ebb: v4ebb = ADD v4eb9(0x1), v4eb8
    0x4ebe: MSTORE v4d9e(0x1a0), v4ebb
    0x4ec0: v4ec0 = EQ v4da8(0x3), v4ebb
    0x4ec1: v4ec1 = ISZERO v4ec0
    0x4ec2: v4ec2(0x4da9) = CONST 
    0x4ec5: JUMPI v4ec2(0x4da9), v4ec1

    Begin block 0x4ec6
    prev=[0x4eb6], succ=[]
    =================================
    0x4ec9: STOP 

}

function kill_me()() public {
    Begin block 0x522b
    prev=[], succ=[0x4edf, 0x4ee3]
    =================================
    0x4ed9: v4ed9 = CALLVALUE 
    0x4eda: v4eda = ISZERO v4ed9
    0x4edb: v4edb(0x4ee3) = CONST 
    0x4ede: JUMPI v4edb(0x4ee3), v4eda

    Begin block 0x4edf
    prev=[0x522b], succ=[]
    =================================
    0x4edf: v4edf(0x0) = CONST 
    0x4ee2: REVERT v4edf(0x0), v4edf(0x0)

    Begin block 0x4ee3
    prev=[0x522b], succ=[0x4eed, 0x4ef1]
    =================================
    0x4ee4: v4ee4(0x6) = CONST 
    0x4ee6: v4ee6 = SLOAD v4ee4(0x6)
    0x4ee7: v4ee7 = CALLER 
    0x4ee8: v4ee8 = EQ v4ee7, v4ee6
    0x4ee9: v4ee9(0x4ef1) = CONST 
    0x4eec: JUMPI v4ee9(0x4ef1), v4ee8

    Begin block 0x4eed
    prev=[0x4ee3], succ=[]
    =================================
    0x4eed: v4eed(0x0) = CONST 
    0x4ef0: REVERT v4eed(0x0), v4eed(0x0)

    Begin block 0x4ef1
    prev=[0x4ee3], succ=[0x4efb, 0x4eff]
    =================================
    0x4ef2: v4ef2 = TIMESTAMP 
    0x4ef3: v4ef3(0xe) = CONST 
    0x4ef5: v4ef5 = SLOAD v4ef3(0xe)
    0x4ef6: v4ef6 = GT v4ef5, v4ef2
    0x4ef7: v4ef7(0x4eff) = CONST 
    0x4efa: JUMPI v4ef7(0x4eff), v4ef6

    Begin block 0x4efb
    prev=[0x4ef1], succ=[]
    =================================
    0x4efb: v4efb(0x0) = CONST 
    0x4efe: REVERT v4efb(0x0), v4efb(0x0)

    Begin block 0x4eff
    prev=[0x4ef1], succ=[]
    =================================
    0x4f00: v4f00(0x1) = CONST 
    0x4f02: v4f02(0xf) = CONST 
    0x4f04: SSTORE v4f02(0xf), v4f00(0x1)
    0x4f05: STOP 

}

function unkill_me()() public {
    Begin block 0x522e
    prev=[], succ=[0x4f1b, 0x4f1f]
    =================================
    0x4f15: v4f15 = CALLVALUE 
    0x4f16: v4f16 = ISZERO v4f15
    0x4f17: v4f17(0x4f1f) = CONST 
    0x4f1a: JUMPI v4f17(0x4f1f), v4f16

    Begin block 0x4f1b
    prev=[0x522e], succ=[]
    =================================
    0x4f1b: v4f1b(0x0) = CONST 
    0x4f1e: REVERT v4f1b(0x0), v4f1b(0x0)

    Begin block 0x4f1f
    prev=[0x522e], succ=[0x4f29, 0x4f2d]
    =================================
    0x4f20: v4f20(0x6) = CONST 
    0x4f22: v4f22 = SLOAD v4f20(0x6)
    0x4f23: v4f23 = CALLER 
    0x4f24: v4f24 = EQ v4f23, v4f22
    0x4f25: v4f25(0x4f2d) = CONST 
    0x4f28: JUMPI v4f25(0x4f2d), v4f24

    Begin block 0x4f29
    prev=[0x4f1f], succ=[]
    =================================
    0x4f29: v4f29(0x0) = CONST 
    0x4f2c: REVERT v4f29(0x0), v4f29(0x0)

    Begin block 0x4f2d
    prev=[0x4f1f], succ=[]
    =================================
    0x4f2e: v4f2e(0x0) = CONST 
    0x4f30: v4f30(0xf) = CONST 
    0x4f32: SSTORE v4f30(0xf), v4f2e(0x0)
    0x4f33: STOP 

}

function coins(int128)() public {
    Begin block 0x5231
    prev=[], succ=[0x4f49, 0x4f4d]
    =================================
    0x4f43: v4f43 = CALLVALUE 
    0x4f44: v4f44 = ISZERO v4f43
    0x4f45: v4f45(0x4f4d) = CONST 
    0x4f48: JUMPI v4f45(0x4f4d), v4f44

    Begin block 0x4f49
    prev=[0x5231], succ=[]
    =================================
    0x4f49: v4f49(0x0) = CONST 
    0x4f4c: REVERT v4f49(0x0), v4f49(0x0)

    Begin block 0x4f4d
    prev=[0x5231], succ=[0x4f5f, 0x4f63]
    =================================
    0x4f4e: v4f4e(0x60) = CONST 
    0x4f50: v4f50 = MLOAD v4f4e(0x60)
    0x4f51: v4f51(0x4) = CONST 
    0x4f53: v4f53 = CALLDATALOAD v4f51(0x4)
    0x4f55: v4f55(0x40) = CONST 
    0x4f57: v4f57 = MLOAD v4f55(0x40)
    0x4f59: v4f59 = SGT v4f53, v4f57
    0x4f5a: v4f5a = ISZERO v4f59
    0x4f5b: v4f5b(0x4f63) = CONST 
    0x4f5e: JUMPI v4f5b(0x4f63), v4f5a

    Begin block 0x4f5f
    prev=[0x4f4d], succ=[]
    =================================
    0x4f5f: v4f5f(0x0) = CONST 
    0x4f62: REVERT v4f5f(0x0), v4f5f(0x0)

    Begin block 0x4f63
    prev=[0x4f4d], succ=[0x4f6d, 0x4f71]
    =================================
    0x4f67: v4f67 = SLT v4f53, v4f50
    0x4f68: v4f68 = ISZERO v4f67
    0x4f69: v4f69(0x4f71) = CONST 
    0x4f6c: JUMPI v4f69(0x4f71), v4f68

    Begin block 0x4f6d
    prev=[0x4f63], succ=[]
    =================================
    0x4f6d: v4f6d(0x0) = CONST 
    0x4f70: REVERT v4f6d(0x0), v4f6d(0x0)

    Begin block 0x4f71
    prev=[0x4f63], succ=[0x4f7e, 0x4f82]
    =================================
    0x4f73: v4f73(0x4) = CONST 
    0x4f75: v4f75 = CALLDATALOAD v4f73(0x4)
    0x4f76: v4f76(0x3) = CONST 
    0x4f79: v4f79 = LT v4f75, v4f76(0x3)
    0x4f7a: v4f7a(0x4f82) = CONST 
    0x4f7d: JUMPI v4f7a(0x4f82), v4f79

    Begin block 0x4f7e
    prev=[0x4f71], succ=[]
    =================================
    0x4f7e: v4f7e(0x0) = CONST 
    0x4f81: REVERT v4f7e(0x0), v4f7e(0x0)

    Begin block 0x4f82
    prev=[0x4f71], succ=[]
    =================================
    0x4f83: v4f83(0x0) = CONST 
    0x4f85: v4f85(0xc0) = CONST 
    0x4f87: MSTORE v4f85(0xc0), v4f83(0x0)
    0x4f88: v4f88(0x20) = CONST 
    0x4f8a: v4f8a(0xc0) = CONST 
    0x4f8c: v4f8c = SHA3 v4f8a(0xc0), v4f88(0x20)
    0x4f8d: v4f8d = ADD v4f8c, v4f75
    0x4f8e: v4f8e = SLOAD v4f8d
    0x4f8f: v4f8f(0x0) = CONST 
    0x4f91: MSTORE v4f8f(0x0), v4f8e
    0x4f92: v4f92(0x20) = CONST 
    0x4f94: v4f94(0x0) = CONST 
    0x4f96: RETURN v4f94(0x0), v4f92(0x20)

}

function underlying_coins(int128)() public {
    Begin block 0x5234
    prev=[], succ=[0x4fae, 0x4fb2]
    =================================
    0x4fa8: v4fa8 = CALLVALUE 
    0x4fa9: v4fa9 = ISZERO v4fa8
    0x4faa: v4faa(0x4fb2) = CONST 
    0x4fad: JUMPI v4faa(0x4fb2), v4fa9

    Begin block 0x4fae
    prev=[0x5234], succ=[]
    =================================
    0x4fae: v4fae(0x0) = CONST 
    0x4fb1: REVERT v4fae(0x0), v4fae(0x0)

    Begin block 0x4fb2
    prev=[0x5234], succ=[0x4fc4, 0x4fc8]
    =================================
    0x4fb3: v4fb3(0x60) = CONST 
    0x4fb5: v4fb5 = MLOAD v4fb3(0x60)
    0x4fb6: v4fb6(0x4) = CONST 
    0x4fb8: v4fb8 = CALLDATALOAD v4fb6(0x4)
    0x4fba: v4fba(0x40) = CONST 
    0x4fbc: v4fbc = MLOAD v4fba(0x40)
    0x4fbe: v4fbe = SGT v4fb8, v4fbc
    0x4fbf: v4fbf = ISZERO v4fbe
    0x4fc0: v4fc0(0x4fc8) = CONST 
    0x4fc3: JUMPI v4fc0(0x4fc8), v4fbf

    Begin block 0x4fc4
    prev=[0x4fb2], succ=[]
    =================================
    0x4fc4: v4fc4(0x0) = CONST 
    0x4fc7: REVERT v4fc4(0x0), v4fc4(0x0)

    Begin block 0x4fc8
    prev=[0x4fb2], succ=[0x4fd2, 0x4fd6]
    =================================
    0x4fcc: v4fcc = SLT v4fb8, v4fb5
    0x4fcd: v4fcd = ISZERO v4fcc
    0x4fce: v4fce(0x4fd6) = CONST 
    0x4fd1: JUMPI v4fce(0x4fd6), v4fcd

    Begin block 0x4fd2
    prev=[0x4fc8], succ=[]
    =================================
    0x4fd2: v4fd2(0x0) = CONST 
    0x4fd5: REVERT v4fd2(0x0), v4fd2(0x0)

    Begin block 0x4fd6
    prev=[0x4fc8], succ=[0x4fe3, 0x4fe7]
    =================================
    0x4fd8: v4fd8(0x4) = CONST 
    0x4fda: v4fda = CALLDATALOAD v4fd8(0x4)
    0x4fdb: v4fdb(0x3) = CONST 
    0x4fde: v4fde = LT v4fda, v4fdb(0x3)
    0x4fdf: v4fdf(0x4fe7) = CONST 
    0x4fe2: JUMPI v4fdf(0x4fe7), v4fde

    Begin block 0x4fe3
    prev=[0x4fd6], succ=[]
    =================================
    0x4fe3: v4fe3(0x0) = CONST 
    0x4fe6: REVERT v4fe3(0x0), v4fe3(0x0)

    Begin block 0x4fe7
    prev=[0x4fd6], succ=[]
    =================================
    0x4fe8: v4fe8(0x1) = CONST 
    0x4fea: v4fea(0xc0) = CONST 
    0x4fec: MSTORE v4fea(0xc0), v4fe8(0x1)
    0x4fed: v4fed(0x20) = CONST 
    0x4fef: v4fef(0xc0) = CONST 
    0x4ff1: v4ff1 = SHA3 v4fef(0xc0), v4fed(0x20)
    0x4ff2: v4ff2 = ADD v4ff1, v4fda
    0x4ff3: v4ff3 = SLOAD v4ff2
    0x4ff4: v4ff4(0x0) = CONST 
    0x4ff6: MSTORE v4ff4(0x0), v4ff3
    0x4ff7: v4ff7(0x20) = CONST 
    0x4ff9: v4ff9(0x0) = CONST 
    0x4ffb: RETURN v4ff9(0x0), v4ff7(0x20)

}

function balances(int128)() public {
    Begin block 0x5237
    prev=[], succ=[0x5013, 0x5017]
    =================================
    0x500d: v500d = CALLVALUE 
    0x500e: v500e = ISZERO v500d
    0x500f: v500f(0x5017) = CONST 
    0x5012: JUMPI v500f(0x5017), v500e

    Begin block 0x5013
    prev=[0x5237], succ=[]
    =================================
    0x5013: v5013(0x0) = CONST 
    0x5016: REVERT v5013(0x0), v5013(0x0)

    Begin block 0x5017
    prev=[0x5237], succ=[0x5029, 0x502d]
    =================================
    0x5018: v5018(0x60) = CONST 
    0x501a: v501a = MLOAD v5018(0x60)
    0x501b: v501b(0x4) = CONST 
    0x501d: v501d = CALLDATALOAD v501b(0x4)
    0x501f: v501f(0x40) = CONST 
    0x5021: v5021 = MLOAD v501f(0x40)
    0x5023: v5023 = SGT v501d, v5021
    0x5024: v5024 = ISZERO v5023
    0x5025: v5025(0x502d) = CONST 
    0x5028: JUMPI v5025(0x502d), v5024

    Begin block 0x5029
    prev=[0x5017], succ=[]
    =================================
    0x5029: v5029(0x0) = CONST 
    0x502c: REVERT v5029(0x0), v5029(0x0)

    Begin block 0x502d
    prev=[0x5017], succ=[0x5037, 0x503b]
    =================================
    0x5031: v5031 = SLT v501d, v501a
    0x5032: v5032 = ISZERO v5031
    0x5033: v5033(0x503b) = CONST 
    0x5036: JUMPI v5033(0x503b), v5032

    Begin block 0x5037
    prev=[0x502d], succ=[]
    =================================
    0x5037: v5037(0x0) = CONST 
    0x503a: REVERT v5037(0x0), v5037(0x0)

    Begin block 0x503b
    prev=[0x502d], succ=[0x5048, 0x504c]
    =================================
    0x503d: v503d(0x4) = CONST 
    0x503f: v503f = CALLDATALOAD v503d(0x4)
    0x5040: v5040(0x3) = CONST 
    0x5043: v5043 = LT v503f, v5040(0x3)
    0x5044: v5044(0x504c) = CONST 
    0x5047: JUMPI v5044(0x504c), v5043

    Begin block 0x5048
    prev=[0x503b], succ=[]
    =================================
    0x5048: v5048(0x0) = CONST 
    0x504b: REVERT v5048(0x0), v5048(0x0)

    Begin block 0x504c
    prev=[0x503b], succ=[]
    =================================
    0x504d: v504d(0x2) = CONST 
    0x504f: v504f(0xc0) = CONST 
    0x5051: MSTORE v504f(0xc0), v504d(0x2)
    0x5052: v5052(0x20) = CONST 
    0x5054: v5054(0xc0) = CONST 
    0x5056: v5056 = SHA3 v5054(0xc0), v5052(0x20)
    0x5057: v5057 = ADD v5056, v503f
    0x5058: v5058 = SLOAD v5057
    0x5059: v5059(0x0) = CONST 
    0x505b: MSTORE v5059(0x0), v5058
    0x505c: v505c(0x20) = CONST 
    0x505e: v505e(0x0) = CONST 
    0x5060: RETURN v505e(0x0), v505c(0x20)

}

function A()() public {
    Begin block 0x523a
    prev=[], succ=[0x5078, 0x507c]
    =================================
    0x5072: v5072 = CALLVALUE 
    0x5073: v5073 = ISZERO v5072
    0x5074: v5074(0x507c) = CONST 
    0x5077: JUMPI v5074(0x507c), v5073

    Begin block 0x5078
    prev=[0x523a], succ=[]
    =================================
    0x5078: v5078(0x0) = CONST 
    0x507b: REVERT v5078(0x0), v5078(0x0)

    Begin block 0x507c
    prev=[0x523a], succ=[]
    =================================
    0x507d: v507d(0x3) = CONST 
    0x507f: v507f = SLOAD v507d(0x3)
    0x5080: v5080(0x0) = CONST 
    0x5082: MSTORE v5080(0x0), v507f
    0x5083: v5083(0x20) = CONST 
    0x5085: v5085(0x0) = CONST 
    0x5087: RETURN v5085(0x0), v5083(0x20)

}

function fee()() public {
    Begin block 0x523d
    prev=[], succ=[0x509f, 0x50a3]
    =================================
    0x5099: v5099 = CALLVALUE 
    0x509a: v509a = ISZERO v5099
    0x509b: v509b(0x50a3) = CONST 
    0x509e: JUMPI v509b(0x50a3), v509a

    Begin block 0x509f
    prev=[0x523d], succ=[]
    =================================
    0x509f: v509f(0x0) = CONST 
    0x50a2: REVERT v509f(0x0), v509f(0x0)

    Begin block 0x50a3
    prev=[0x523d], succ=[]
    =================================
    0x50a4: v50a4(0x4) = CONST 
    0x50a6: v50a6 = SLOAD v50a4(0x4)
    0x50a7: v50a7(0x0) = CONST 
    0x50a9: MSTORE v50a7(0x0), v50a6
    0x50aa: v50aa(0x20) = CONST 
    0x50ac: v50ac(0x0) = CONST 
    0x50ae: RETURN v50ac(0x0), v50aa(0x20)

}

function admin_fee()() public {
    Begin block 0x5240
    prev=[], succ=[0x50c6, 0x50ca]
    =================================
    0x50c0: v50c0 = CALLVALUE 
    0x50c1: v50c1 = ISZERO v50c0
    0x50c2: v50c2(0x50ca) = CONST 
    0x50c5: JUMPI v50c2(0x50ca), v50c1

    Begin block 0x50c6
    prev=[0x5240], succ=[]
    =================================
    0x50c6: v50c6(0x0) = CONST 
    0x50c9: REVERT v50c6(0x0), v50c6(0x0)

    Begin block 0x50ca
    prev=[0x5240], succ=[]
    =================================
    0x50cb: v50cb(0x5) = CONST 
    0x50cd: v50cd = SLOAD v50cb(0x5)
    0x50ce: v50ce(0x0) = CONST 
    0x50d0: MSTORE v50ce(0x0), v50cd
    0x50d1: v50d1(0x20) = CONST 
    0x50d3: v50d3(0x0) = CONST 
    0x50d5: RETURN v50d3(0x0), v50d1(0x20)

}

function owner()() public {
    Begin block 0x5243
    prev=[], succ=[0x50ed, 0x50f1]
    =================================
    0x50e7: v50e7 = CALLVALUE 
    0x50e8: v50e8 = ISZERO v50e7
    0x50e9: v50e9(0x50f1) = CONST 
    0x50ec: JUMPI v50e9(0x50f1), v50e8

    Begin block 0x50ed
    prev=[0x5243], succ=[]
    =================================
    0x50ed: v50ed(0x0) = CONST 
    0x50f0: REVERT v50ed(0x0), v50ed(0x0)

    Begin block 0x50f1
    prev=[0x5243], succ=[]
    =================================
    0x50f2: v50f2(0x6) = CONST 
    0x50f4: v50f4 = SLOAD v50f2(0x6)
    0x50f5: v50f5(0x0) = CONST 
    0x50f7: MSTORE v50f5(0x0), v50f4
    0x50f8: v50f8(0x20) = CONST 
    0x50fa: v50fa(0x0) = CONST 
    0x50fc: RETURN v50fa(0x0), v50f8(0x20)

}

function admin_actions_deadline()() public {
    Begin block 0x5246
    prev=[], succ=[0x5114, 0x5118]
    =================================
    0x510e: v510e = CALLVALUE 
    0x510f: v510f = ISZERO v510e
    0x5110: v5110(0x5118) = CONST 
    0x5113: JUMPI v5110(0x5118), v510f

    Begin block 0x5114
    prev=[0x5246], succ=[]
    =================================
    0x5114: v5114(0x0) = CONST 
    0x5117: REVERT v5114(0x0), v5114(0x0)

    Begin block 0x5118
    prev=[0x5246], succ=[]
    =================================
    0x5119: v5119(0x8) = CONST 
    0x511b: v511b = SLOAD v5119(0x8)
    0x511c: v511c(0x0) = CONST 
    0x511e: MSTORE v511c(0x0), v511b
    0x511f: v511f(0x20) = CONST 
    0x5121: v5121(0x0) = CONST 
    0x5123: RETURN v5121(0x0), v511f(0x20)

}

function transfer_ownership_deadline()() public {
    Begin block 0x5249
    prev=[], succ=[0x513b, 0x513f]
    =================================
    0x5135: v5135 = CALLVALUE 
    0x5136: v5136 = ISZERO v5135
    0x5137: v5137(0x513f) = CONST 
    0x513a: JUMPI v5137(0x513f), v5136

    Begin block 0x513b
    prev=[0x5249], succ=[]
    =================================
    0x513b: v513b(0x0) = CONST 
    0x513e: REVERT v513b(0x0), v513b(0x0)

    Begin block 0x513f
    prev=[0x5249], succ=[]
    =================================
    0x5140: v5140(0x9) = CONST 
    0x5142: v5142 = SLOAD v5140(0x9)
    0x5143: v5143(0x0) = CONST 
    0x5145: MSTORE v5143(0x0), v5142
    0x5146: v5146(0x20) = CONST 
    0x5148: v5148(0x0) = CONST 
    0x514a: RETURN v5148(0x0), v5146(0x20)

}

function future_A()() public {
    Begin block 0x524c
    prev=[], succ=[0x5162, 0x5166]
    =================================
    0x515c: v515c = CALLVALUE 
    0x515d: v515d = ISZERO v515c
    0x515e: v515e(0x5166) = CONST 
    0x5161: JUMPI v515e(0x5166), v515d

    Begin block 0x5162
    prev=[0x524c], succ=[]
    =================================
    0x5162: v5162(0x0) = CONST 
    0x5165: REVERT v5162(0x0), v5162(0x0)

    Begin block 0x5166
    prev=[0x524c], succ=[]
    =================================
    0x5167: v5167(0xa) = CONST 
    0x5169: v5169 = SLOAD v5167(0xa)
    0x516a: v516a(0x0) = CONST 
    0x516c: MSTORE v516a(0x0), v5169
    0x516d: v516d(0x20) = CONST 
    0x516f: v516f(0x0) = CONST 
    0x5171: RETURN v516f(0x0), v516d(0x20)

}

function future_fee()() public {
    Begin block 0x524f
    prev=[], succ=[0x5189, 0x518d]
    =================================
    0x5183: v5183 = CALLVALUE 
    0x5184: v5184 = ISZERO v5183
    0x5185: v5185(0x518d) = CONST 
    0x5188: JUMPI v5185(0x518d), v5184

    Begin block 0x5189
    prev=[0x524f], succ=[]
    =================================
    0x5189: v5189(0x0) = CONST 
    0x518c: REVERT v5189(0x0), v5189(0x0)

    Begin block 0x518d
    prev=[0x524f], succ=[]
    =================================
    0x518e: v518e(0xb) = CONST 
    0x5190: v5190 = SLOAD v518e(0xb)
    0x5191: v5191(0x0) = CONST 
    0x5193: MSTORE v5191(0x0), v5190
    0x5194: v5194(0x20) = CONST 
    0x5196: v5196(0x0) = CONST 
    0x5198: RETURN v5196(0x0), v5194(0x20)

}

function future_admin_fee()() public {
    Begin block 0x5252
    prev=[], succ=[0x51b0, 0x51b4]
    =================================
    0x51aa: v51aa = CALLVALUE 
    0x51ab: v51ab = ISZERO v51aa
    0x51ac: v51ac(0x51b4) = CONST 
    0x51af: JUMPI v51ac(0x51b4), v51ab

    Begin block 0x51b0
    prev=[0x5252], succ=[]
    =================================
    0x51b0: v51b0(0x0) = CONST 
    0x51b3: REVERT v51b0(0x0), v51b0(0x0)

    Begin block 0x51b4
    prev=[0x5252], succ=[]
    =================================
    0x51b5: v51b5(0xc) = CONST 
    0x51b7: v51b7 = SLOAD v51b5(0xc)
    0x51b8: v51b8(0x0) = CONST 
    0x51ba: MSTORE v51b8(0x0), v51b7
    0x51bb: v51bb(0x20) = CONST 
    0x51bd: v51bd(0x0) = CONST 
    0x51bf: RETURN v51bd(0x0), v51bb(0x20)

}

function future_owner()() public {
    Begin block 0x5255
    prev=[], succ=[0x51d7, 0x51db]
    =================================
    0x51d1: v51d1 = CALLVALUE 
    0x51d2: v51d2 = ISZERO v51d1
    0x51d3: v51d3(0x51db) = CONST 
    0x51d6: JUMPI v51d3(0x51db), v51d2

    Begin block 0x51d7
    prev=[0x5255], succ=[]
    =================================
    0x51d7: v51d7(0x0) = CONST 
    0x51da: REVERT v51d7(0x0), v51d7(0x0)

    Begin block 0x51db
    prev=[0x5255], succ=[]
    =================================
    0x51dc: v51dc(0xd) = CONST 
    0x51de: v51de = SLOAD v51dc(0xd)
    0x51df: v51df(0x0) = CONST 
    0x51e1: MSTORE v51df(0x0), v51de
    0x51e2: v51e2(0x20) = CONST 
    0x51e4: v51e4(0x0) = CONST 
    0x51e6: RETURN v51e4(0x0), v51e2(0x20)

}

