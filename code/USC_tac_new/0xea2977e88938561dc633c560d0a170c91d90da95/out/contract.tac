function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x2d]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x9: v9(0x2d) = CONST 
    0xc: JUMPI v9(0x2d), v8

    Begin block 0xd
    prev=[0x0], succ=[0x2b5, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0xd784d426) = CONST 
    0x19: v19 = EQ v14(0xd784d426), v12
    0x2ae: v2ae(0x2b5) = CONST 
    0x2af: JUMPI v2ae(0x2b5), v19

    Begin block 0x2b5
    prev=[0xd], succ=[]
    =================================
    0x2b6: v2b6(0x46) = CONST 
    0x2b7: CALLPRIVATE v2b6(0x46)

    Begin block 0x1e
    prev=[0xd], succ=[0x29, 0x2b8]
    =================================
    0x1f: v1f(0xf851a440) = CONST 
    0x24: v24 = EQ v1f(0xf851a440), v12
    0x2b0: v2b0(0x2b8) = CONST 
    0x2b1: JUMPI v2b0(0x2b8), v24

    Begin block 0x29
    prev=[0x1e], succ=[0x3c]
    =================================
    0x29: v29(0x3c) = CONST 
    0x2c: JUMP v29(0x3c)

    Begin block 0x3c
    prev=[0x29, 0x2d], succ=[0x9a0x0]
    =================================
    0x3d: v3d(0x44) = CONST 
    0x40: v40(0x9a) = CONST 
    0x43: JUMP v40(0x9a)

    Begin block 0x9a0x0
    prev=[0x3c], succ=[0x16f0x0]
    =================================
    0x9b0x0: v09b(0xaa) = CONST 
    0x9e0x0: v09e(0xa5) = CONST 
    0xa10x0: v0a1(0x16f) = CONST 
    0xa40x0: JUMP v0a1(0x16f)

    Begin block 0x16f0x0
    prev=[0x9a0x0], succ=[0xa50x0]
    =================================
    0x1700x0: v0170(0x0) = CONST 
    0x1730x0: v0173(0x0) = CONST 
    0x1760x0: v0176 = SLOAD v0170(0x0)
    0x1780x0: v0178(0x100) = CONST 
    0x17b0x0: v017b(0x1) = EXP v0178(0x100), v0173(0x0)
    0x17d0x0: v017d = DIV v0176, v017b(0x1)
    0x17e0x0: v017e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1930x0: v0193 = AND v017e(0xffffffffffffffffffffffffffffffffffffffff), v017d
    0x1970x0: JUMP v09e(0xa5)

    Begin block 0xa50x0
    prev=[0x16f0x0], succ=[0x1980x0]
    =================================
    0xa60x0: v0a6(0x198) = CONST 
    0xa90x0: JUMP v0a6(0x198)

    Begin block 0x1980x0
    prev=[0xa50x0], succ=[0x1b50x0, 0x1b90x0]
    =================================
    0x1990x0: v0199 = CALLDATASIZE 
    0x19a0x0: v019a(0x0) = CONST 
    0x19d0x0: CALLDATACOPY v019a(0x0), v019a(0x0), v0199
    0x19e0x0: v019e(0x0) = CONST 
    0x1a10x0: v01a1 = CALLDATASIZE 
    0x1a20x0: v01a2(0x0) = CONST 
    0x1a50x0: v01a5 = GAS 
    0x1a60x0: v01a6 = DELEGATECALL v01a5, v0193, v01a2(0x0), v01a1, v019e(0x0), v019e(0x0)
    0x1a70x0: v01a7 = RETURNDATASIZE 
    0x1a80x0: v01a8(0x0) = CONST 
    0x1ab0x0: RETURNDATACOPY v01a8(0x0), v01a8(0x0), v01a7
    0x1ad0x0: v01ad(0x0) = CONST 
    0x1b00x0: v01b0 = EQ v01a6, v01ad(0x0)
    0x1b10x0: v01b1(0x1b9) = CONST 
    0x1b40x0: JUMPI v01b1(0x1b9), v01b0

    Begin block 0x1b50x0
    prev=[0x1980x0], succ=[]
    =================================
    0x1b50x0: v01b5 = RETURNDATASIZE 
    0x1b60x0: v01b6(0x0) = CONST 
    0x1b80x0: RETURN v01b6(0x0), v01b5

    Begin block 0x1b90x0
    prev=[0x1980x0], succ=[]
    =================================
    0x1ba0x0: v01ba = RETURNDATASIZE 
    0x1bb0x0: v01bb(0x0) = CONST 
    0x1bd0x0: REVERT v01bb(0x0), v01ba

    Begin block 0x2b8
    prev=[0x1e], succ=[]
    =================================
    0x2b9: v2b9(0x6f) = CONST 
    0x2ba: CALLPRIVATE v2b9(0x6f)

    Begin block 0x2d
    prev=[0x0], succ=[0x2b2, 0x3c]
    =================================
    0x2e: v2e = CALLDATASIZE 
    0x2f: v2f(0x3c) = CONST 
    0x32: JUMPI v2f(0x3c), v2e

    Begin block 0x2b2
    prev=[0x2d], succ=[]
    =================================
    0x2b2: v2b2(0x2b4) = CONST 
    0x2b3: CALLPRIVATE v2b2(0x2b4)

}

function fallback()() public {
    Begin block 0x2b4
    prev=[], succ=[0x9a0x2b4]
    =================================
    0x33: v33(0x3a) = CONST 
    0x36: v36(0x9a) = CONST 
    0x39: JUMP v36(0x9a)

    Begin block 0x9a0x2b4
    prev=[0x2b4], succ=[0x16f0x2b4]
    =================================
    0x9b0x2b4: v2b49b(0xaa) = CONST 
    0x9e0x2b4: v2b49e(0xa5) = CONST 
    0xa10x2b4: v2b4a1(0x16f) = CONST 
    0xa40x2b4: JUMP v2b4a1(0x16f)

    Begin block 0x16f0x2b4
    prev=[0x9a0x2b4], succ=[0xa50x2b4]
    =================================
    0x1700x2b4: v2b4170(0x0) = CONST 
    0x1730x2b4: v2b4173(0x0) = CONST 
    0x1760x2b4: v2b4176 = SLOAD v2b4170(0x0)
    0x1780x2b4: v2b4178(0x100) = CONST 
    0x17b0x2b4: v2b417b(0x1) = EXP v2b4178(0x100), v2b4173(0x0)
    0x17d0x2b4: v2b417d = DIV v2b4176, v2b417b(0x1)
    0x17e0x2b4: v2b417e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x1930x2b4: v2b4193 = AND v2b417e(0xffffffffffffffffffffffffffffffffffffffff), v2b417d
    0x1970x2b4: JUMP v2b49e(0xa5)

    Begin block 0xa50x2b4
    prev=[0x16f0x2b4], succ=[0x1980x2b4]
    =================================
    0xa60x2b4: v2b4a6(0x198) = CONST 
    0xa90x2b4: JUMP v2b4a6(0x198)

    Begin block 0x1980x2b4
    prev=[0xa50x2b4], succ=[0x1b50x2b4, 0x1b90x2b4]
    =================================
    0x1990x2b4: v2b4199 = CALLDATASIZE 
    0x19a0x2b4: v2b419a(0x0) = CONST 
    0x19d0x2b4: CALLDATACOPY v2b419a(0x0), v2b419a(0x0), v2b4199
    0x19e0x2b4: v2b419e(0x0) = CONST 
    0x1a10x2b4: v2b41a1 = CALLDATASIZE 
    0x1a20x2b4: v2b41a2(0x0) = CONST 
    0x1a50x2b4: v2b41a5 = GAS 
    0x1a60x2b4: v2b41a6 = DELEGATECALL v2b41a5, v2b4193, v2b41a2(0x0), v2b41a1, v2b419e(0x0), v2b419e(0x0)
    0x1a70x2b4: v2b41a7 = RETURNDATASIZE 
    0x1a80x2b4: v2b41a8(0x0) = CONST 
    0x1ab0x2b4: RETURNDATACOPY v2b41a8(0x0), v2b41a8(0x0), v2b41a7
    0x1ad0x2b4: v2b41ad(0x0) = CONST 
    0x1b00x2b4: v2b41b0 = EQ v2b41a6, v2b41ad(0x0)
    0x1b10x2b4: v2b41b1(0x1b9) = CONST 
    0x1b40x2b4: JUMPI v2b41b1(0x1b9), v2b41b0

    Begin block 0x1b50x2b4
    prev=[0x1980x2b4], succ=[]
    =================================
    0x1b50x2b4: v2b41b5 = RETURNDATASIZE 
    0x1b60x2b4: v2b41b6(0x0) = CONST 
    0x1b80x2b4: RETURN v2b41b6(0x0), v2b41b5

    Begin block 0x1b90x2b4
    prev=[0x1980x2b4], succ=[]
    =================================
    0x1ba0x2b4: v2b41ba = RETURNDATASIZE 
    0x1bb0x2b4: v2b41bb(0x0) = CONST 
    0x1bd0x2b4: REVERT v2b41bb(0x0), v2b41ba

}

function setImplementation(address)() public {
    Begin block 0x46
    prev=[], succ=[0x4e, 0x52]
    =================================
    0x47: v47 = CALLVALUE 
    0x49: v49 = ISZERO v47
    0x4a: v4a(0x52) = CONST 
    0x4d: JUMPI v4a(0x52), v49

    Begin block 0x4e
    prev=[0x46], succ=[]
    =================================
    0x4e: v4e(0x0) = CONST 
    0x51: REVERT v4e(0x0), v4e(0x0)

    Begin block 0x52
    prev=[0x46], succ=[0x1d3B0x52]
    =================================
    0x54: v54(0x6d) = CONST 
    0x57: v57(0x4) = CONST 
    0x5a: v5a = CALLDATASIZE 
    0x5b: v5b = SUB v5a, v57(0x4)
    0x5d: v5d = ADD v57(0x4), v5b
    0x5f: v5f(0x68) = CONST 
    0x64: v64(0x1d3) = CONST 
    0x67: JUMP v64(0x1d3)

    Begin block 0x1d3B0x52
    prev=[0x52], succ=[0x1e1B0x52, 0x1e9B0x52]
    =================================
    0x1d4S0x52: v1d4V52(0x0) = CONST 
    0x1d6S0x52: v1d6V52(0x20) = CONST 
    0x1daS0x52: v1daV52 = SUB v5d, v57(0x4)
    0x1dbS0x52: v1dbV52 = SLT v1daV52, v1d6V52(0x20)
    0x1dcS0x52: v1dcV52 = ISZERO v1dbV52
    0x1ddS0x52: v1ddV52(0x1e9) = CONST 
    0x1e0S0x52: JUMPI v1ddV52(0x1e9), v1dcV52

    Begin block 0x1e1B0x52
    prev=[0x1d3B0x52], succ=[0x25cB0x52]
    =================================
    0x1e1S0x52: v1e1V52(0x1e8) = CONST 
    0x1e4S0x52: v1e4V52(0x25c) = CONST 
    0x1e7S0x52: JUMP v1e4V52(0x25c)

    Begin block 0x25cB0x52
    prev=[0x1e1B0x52], succ=[]
    =================================
    0x25dS0x52: v25dV52(0x0) = CONST 
    0x260S0x52: REVERT v25dV52(0x0), v25dV52(0x0)

    Begin block 0x1e9B0x52
    prev=[0x1d3B0x52], succ=[0x1beB0x1e9B0x52]
    =================================
    0x1eaS0x52: v1eaV52(0x0) = CONST 
    0x1ecS0x52: v1ecV52(0x1f7) = CONST 
    0x1f2S0x52: v1f2V52(0x4) = ADD v57(0x4), v1eaV52(0x0)
    0x1f3S0x52: v1f3V52(0x1be) = CONST 
    0x1f6S0x52: JUMP v1f3V52(0x1be)

    Begin block 0x1beB0x1e9B0x52
    prev=[0x1e9B0x52], succ=[0x261B0x1beB0x1e9B0x52]
    =================================
    0x1bfS0x1e9S0x52: v1bfV1e9V52(0x0) = CONST 
    0x1c2S0x1e9S0x52: v1c2V1e9V52 = CALLDATALOAD v1f2V52(0x4)
    0x1c5S0x1e9S0x52: v1c5V1e9V52(0x1cd) = CONST 
    0x1c9S0x1e9S0x52: v1c9V1e9V52(0x261) = CONST 
    0x1ccS0x1e9S0x52: JUMP v1c9V1e9V52(0x261), v1c2V1e9V52, v1c5V1e9V52(0x1cd)

    Begin block 0x261B0x1beB0x1e9B0x52
    prev=[0x1beB0x1e9B0x52], succ=[0x22aB0x261B0x1beB0x1e9B0x52]
    =================================
    0x262S0x1beS0x1e9S0x52: v262V1beV1e9V52(0x26a) = CONST 
    0x266S0x1beS0x1e9S0x52: v266V1beV1e9V52(0x22a) = CONST 
    0x269S0x1beS0x1e9S0x52: JUMP v266V1beV1e9V52(0x22a)

    Begin block 0x22aB0x261B0x1beB0x1e9B0x52
    prev=[0x261B0x1beB0x1e9B0x52], succ=[0x23cB0x261B0x1beB0x1e9B0x52]
    =================================
    0x22bS0x261S0x1beS0x1e9S0x52: v22bV261V1beV1e9V52(0x0) = CONST 
    0x22dS0x261S0x1beS0x1e9S0x52: v22dV261V1beV1e9V52(0x235) = CONST 
    0x231S0x261S0x1beS0x1e9S0x52: v231V261V1beV1e9V52(0x23c) = CONST 
    0x234S0x261S0x1beS0x1e9S0x52: JUMP v231V261V1beV1e9V52(0x23c)

    Begin block 0x23cB0x261B0x1beB0x1e9B0x52
    prev=[0x22aB0x261B0x1beB0x1e9B0x52], succ=[0x235B0x261B0x1beB0x1e9B0x52]
    =================================
    0x23dS0x261S0x1beS0x1e9S0x52: v23dV261V1beV1e9V52(0x0) = CONST 
    0x23fS0x261S0x1beS0x1e9S0x52: v23fV261V1beV1e9V52(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x255S0x261S0x1beS0x1e9S0x52: v255V261V1beV1e9V52 = AND v1c2V1e9V52, v23fV261V1beV1e9V52(0xffffffffffffffffffffffffffffffffffffffff)
    0x25bS0x261S0x1beS0x1e9S0x52: JUMP v22dV261V1beV1e9V52(0x235)

    Begin block 0x235B0x261B0x1beB0x1e9B0x52
    prev=[0x23cB0x261B0x1beB0x1e9B0x52], succ=[0x26aB0x1beB0x1e9B0x52]
    =================================
    0x23bS0x261S0x1beS0x1e9S0x52: JUMP v262V1beV1e9V52(0x26a)

    Begin block 0x26aB0x1beB0x1e9B0x52
    prev=[0x235B0x261B0x1beB0x1e9B0x52], succ=[0x271B0x1beB0x1e9B0x52, 0x275B0x1beB0x1e9B0x52]
    =================================
    0x26cS0x1beS0x1e9S0x52: v26cV1beV1e9V52 = EQ v1c2V1e9V52, v255V261V1beV1e9V52
    0x26dS0x1beS0x1e9S0x52: v26dV1beV1e9V52(0x275) = CONST 
    0x270S0x1beS0x1e9S0x52: JUMPI v26dV1beV1e9V52(0x275), v26cV1beV1e9V52

    Begin block 0x271B0x1beB0x1e9B0x52
    prev=[0x26aB0x1beB0x1e9B0x52], succ=[]
    =================================
    0x271S0x1beS0x1e9S0x52: v271V1beV1e9V52(0x0) = CONST 
    0x274S0x1beS0x1e9S0x52: REVERT v271V1beV1e9V52(0x0), v271V1beV1e9V52(0x0)

    Begin block 0x275B0x1beB0x1e9B0x52
    prev=[0x26aB0x1beB0x1e9B0x52], succ=[0x1cdB0x1e9B0x52]
    =================================
    0x277S0x1beS0x1e9S0x52: JUMP v1c5V1e9V52(0x1cd)

    Begin block 0x1cdB0x1e9B0x52
    prev=[0x275B0x1beB0x1e9B0x52], succ=[0x1f7B0x52]
    =================================
    0x1d2S0x1e9S0x52: JUMP v1ecV52(0x1f7)

    Begin block 0x1f7B0x52
    prev=[0x1cdB0x1e9B0x52], succ=[0x68]
    =================================
    0x1ffS0x52: JUMP v5f(0x68)

    Begin block 0x68
    prev=[0x1f7B0x52], succ=[0xac]
    =================================
    0x69: v69(0xac) = CONST 
    0x6c: JUMP v69(0xac)

    Begin block 0xac
    prev=[0x68], succ=[0x102, 0x106]
    =================================
    0xad: vad(0x1) = CONST 
    0xaf: vaf(0x0) = CONST 
    0xb2: vb2 = SLOAD vad(0x1)
    0xb4: vb4(0x100) = CONST 
    0xb7: vb7(0x1) = EXP vb4(0x100), vaf(0x0)
    0xb9: vb9 = DIV vb2, vb7(0x1)
    0xba: vba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xcf: vcf = AND vba(0xffffffffffffffffffffffffffffffffffffffff), vb9
    0xd0: vd0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xe5: ve5 = AND vd0(0xffffffffffffffffffffffffffffffffffffffff), vcf
    0xe6: ve6 = CALLER 
    0xe7: ve7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0xfc: vfc = AND ve7(0xffffffffffffffffffffffffffffffffffffffff), ve6
    0xfd: vfd = EQ vfc, ve5
    0xfe: vfe(0x106) = CONST 
    0x101: JUMPI vfe(0x106), vfd

    Begin block 0x102
    prev=[0xac], succ=[]
    =================================
    0x102: v102(0x0) = CONST 
    0x105: REVERT v102(0x0), v102(0x0)

    Begin block 0x106
    prev=[0xac], succ=[0x6d]
    =================================
    0x108: v108(0x0) = CONST 
    0x10b: v10b(0x100) = CONST 
    0x10e: v10e(0x1) = EXP v10b(0x100), v108(0x0)
    0x110: v110 = SLOAD v108(0x0)
    0x112: v112(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x127: v127(0xffffffffffffffffffffffffffffffffffffffff) = MUL v112(0xffffffffffffffffffffffffffffffffffffffff), v10e(0x1)
    0x128: v128(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v127(0xffffffffffffffffffffffffffffffffffffffff)
    0x129: v129 = AND v128(0xffffffffffffffffffffffff0000000000000000000000000000000000000000), v110
    0x12c: v12c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x141: v141 = AND v12c(0xffffffffffffffffffffffffffffffffffffffff), v1c2V1e9V52
    0x142: v142 = MUL v141, v10e(0x1)
    0x143: v143 = OR v142, v129
    0x145: SSTORE v108(0x0), v143
    0x148: JUMP v54(0x6d)

    Begin block 0x6d
    prev=[0x106], succ=[]
    =================================
    0x6e: STOP 

}

function admin()() public {
    Begin block 0x6f
    prev=[], succ=[0x77, 0x7b]
    =================================
    0x70: v70 = CALLVALUE 
    0x72: v72 = ISZERO v70
    0x73: v73(0x7b) = CONST 
    0x76: JUMPI v73(0x7b), v72

    Begin block 0x77
    prev=[0x6f], succ=[]
    =================================
    0x77: v77(0x0) = CONST 
    0x7a: REVERT v77(0x0), v77(0x0)

    Begin block 0x7b
    prev=[0x6f], succ=[0x149]
    =================================
    0x7d: v7d(0x84) = CONST 
    0x80: v80(0x149) = CONST 
    0x83: JUMP v80(0x149)

    Begin block 0x149
    prev=[0x7b], succ=[0x84]
    =================================
    0x14a: v14a(0x1) = CONST 
    0x14c: v14c(0x0) = CONST 
    0x14f: v14f = SLOAD v14a(0x1)
    0x151: v151(0x100) = CONST 
    0x154: v154(0x1) = EXP v151(0x100), v14c(0x0)
    0x156: v156 = DIV v14f, v154(0x1)
    0x157: v157(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x16c: v16c = AND v157(0xffffffffffffffffffffffffffffffffffffffff), v156
    0x16e: JUMP v7d(0x84)

    Begin block 0x84
    prev=[0x149], succ=[0x20fB0x84]
    =================================
    0x85: v85(0x40) = CONST 
    0x87: v87 = MLOAD v85(0x40)
    0x88: v88(0x91) = CONST 
    0x8d: v8d(0x20f) = CONST 
    0x90: JUMP v8d(0x20f)

    Begin block 0x20fB0x84
    prev=[0x84], succ=[0x200B0x84]
    =================================
    0x210S0x84: v210V84(0x0) = CONST 
    0x212S0x84: v212V84(0x20) = CONST 
    0x215S0x84: v215V84 = ADD v87, v212V84(0x20)
    0x218S0x84: v218V84(0x224) = CONST 
    0x21bS0x84: v21bV84(0x0) = CONST 
    0x21eS0x84: v21eV84 = ADD v87, v21bV84(0x0)
    0x220S0x84: v220V84(0x200) = CONST 
    0x223S0x84: JUMP v220V84(0x200)

    Begin block 0x200B0x84
    prev=[0x20fB0x84], succ=[0x22aB0x200B0x84]
    =================================
    0x201S0x84: v201V84(0x209) = CONST 
    0x205S0x84: v205V84(0x22a) = CONST 
    0x208S0x84: JUMP v205V84(0x22a)

    Begin block 0x22aB0x200B0x84
    prev=[0x200B0x84], succ=[0x23cB0x200B0x84]
    =================================
    0x22bS0x200S0x84: v22bV200V84(0x0) = CONST 
    0x22dS0x200S0x84: v22dV200V84(0x235) = CONST 
    0x231S0x200S0x84: v231V200V84(0x23c) = CONST 
    0x234S0x200S0x84: JUMP v231V200V84(0x23c)

    Begin block 0x23cB0x200B0x84
    prev=[0x22aB0x200B0x84], succ=[0x235B0x200B0x84]
    =================================
    0x23dS0x200S0x84: v23dV200V84(0x0) = CONST 
    0x23fS0x200S0x84: v23fV200V84(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
    0x255S0x200S0x84: v255V200V84 = AND v16c, v23fV200V84(0xffffffffffffffffffffffffffffffffffffffff)
    0x25bS0x200S0x84: JUMP v22dV200V84(0x235)

    Begin block 0x235B0x200B0x84
    prev=[0x23cB0x200B0x84], succ=[0x209B0x84]
    =================================
    0x23bS0x200S0x84: JUMP v201V84(0x209)

    Begin block 0x209B0x84
    prev=[0x235B0x200B0x84], succ=[0x224B0x84]
    =================================
    0x20bS0x84: MSTORE v21eV84, v255V200V84
    0x20eS0x84: JUMP v218V84(0x224)

    Begin block 0x224B0x84
    prev=[0x209B0x84], succ=[0x91]
    =================================
    0x229S0x84: JUMP v88(0x91)

    Begin block 0x91
    prev=[0x224B0x84], succ=[]
    =================================
    0x92: v92(0x40) = CONST 
    0x94: v94 = MLOAD v92(0x40)
    0x97: v97(0x20) = SUB v215V84, v94
    0x99: RETURN v94, v97(0x20)

}

