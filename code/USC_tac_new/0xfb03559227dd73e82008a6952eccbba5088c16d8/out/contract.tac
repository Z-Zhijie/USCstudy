function __function_selector__() public {
    Begin block 0x0
    prev=[], succ=[0xd, 0x2d]
    =================================
    0x0: v0(0x80) = CONST 
    0x2: v2(0x40) = CONST 
    0x4: MSTORE v2(0x40), v0(0x80)
    0x5: v5(0x4) = CONST 
    0x7: v7 = CALLDATASIZE 
    0x8: v8 = LT v7, v5(0x4)
    0x9: v9(0x2d) = CONST 
    0xc: JUMPI v9(0x2d), v8

    Begin block 0xd
    prev=[0x0], succ=[0x73d, 0x1e]
    =================================
    0xd: vd(0x0) = CONST 
    0xf: vf = CALLDATALOAD vd(0x0)
    0x10: v10(0xe0) = CONST 
    0x12: v12 = SHR v10(0xe0), vf
    0x14: v14(0x900f010) = CONST 
    0x19: v19 = EQ v14(0x900f010), v12
    0x736: v736(0x73d) = CONST 
    0x737: JUMPI v736(0x73d), v19

    Begin block 0x73d
    prev=[0xd], succ=[]
    =================================
    0x73e: v73e(0x44) = CONST 
    0x73f: CALLPRIVATE v73e(0x44)

    Begin block 0x1e
    prev=[0xd], succ=[0x29, 0x740]
    =================================
    0x1f: v1f(0x5c60da1b) = CONST 
    0x24: v24 = EQ v1f(0x5c60da1b), v12
    0x738: v738(0x740) = CONST 
    0x739: JUMPI v738(0x740), v24

    Begin block 0x29
    prev=[0x1e], succ=[0x3c]
    =================================
    0x29: v29(0x3c) = CONST 
    0x2c: JUMP v29(0x3c)

    Begin block 0x3c
    prev=[0x29, 0x2d], succ=[0xa80x0]
    =================================
    0x3d: v3d(0x685) = CONST 
    0x40: v40(0xa8) = CONST 
    0x43: JUMP v40(0xa8)

    Begin block 0xa80x0
    prev=[0x3c], succ=[0x6c7B0xa80x0]
    =================================
    0xa90x0: v0a9(0xb0) = CONST 
    0xac0x0: v0ac(0x6c7) = CONST 
    0xaf0x0: JUMP v0ac(0x6c7), v0a9(0xb0)

    Begin block 0x6c7B0xa80x0
    prev=[0xa80x0], succ=[0xb00x0]
    =================================
    0x6c8S0xa80x0: JUMP v0a9(0xb0)

    Begin block 0xb00x0
    prev=[0x6c7B0xa80x0], succ=[0x2d3B0xb00x0]
    =================================
    0xb10x0: v0b1(0x6e8) = CONST 
    0xb40x0: v0b4(0xbb) = CONST 
    0xb70x0: v0b7(0x2d3) = CONST 
    0xba0x0: JUMP v0b7(0x2d3)

    Begin block 0x2d3B0xb00x0
    prev=[0xb00x0], succ=[0xbb0x0]
    =================================
    0x2d4S0xb00x0: v2d4Vb00(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x2f5S0xb00x0: v2f5Vb00 = SLOAD v2d4Vb00(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x2f7S0xb00x0: JUMP v0b4(0xbb)

    Begin block 0xbb0x0
    prev=[0x2d3B0xb00x0], succ=[0x2f80x0]
    =================================
    0xbc0x0: v0bc(0x2f8) = CONST 
    0xbf0x0: JUMP v0bc(0x2f8)

    Begin block 0x2f80x0
    prev=[0xbb0x0], succ=[0x3130x0, 0x3170x0]
    =================================
    0x2f90x0: v02f9 = CALLDATASIZE 
    0x2fa0x0: v02fa(0x0) = CONST 
    0x2fd0x0: CALLDATACOPY v02fa(0x0), v02fa(0x0), v02f9
    0x2fe0x0: v02fe(0x0) = CONST 
    0x3010x0: v0301 = CALLDATASIZE 
    0x3020x0: v0302(0x0) = CONST 
    0x3050x0: v0305 = GAS 
    0x3060x0: v0306 = DELEGATECALL v0305, v2f5Vb00, v0302(0x0), v0301, v02fe(0x0), v02fe(0x0)
    0x3070x0: v0307 = RETURNDATASIZE 
    0x3080x0: v0308(0x0) = CONST 
    0x30b0x0: RETURNDATACOPY v0308(0x0), v0308(0x0), v0307
    0x30e0x0: v030e = ISZERO v0306
    0x30f0x0: v030f(0x317) = CONST 
    0x3120x0: JUMPI v030f(0x317), v030e

    Begin block 0x3130x0
    prev=[0x2f80x0], succ=[]
    =================================
    0x3130x0: v0313 = RETURNDATASIZE 
    0x3140x0: v0314(0x0) = CONST 
    0x3160x0: RETURN v0314(0x0), v0313

    Begin block 0x3170x0
    prev=[0x2f80x0], succ=[]
    =================================
    0x3180x0: v0318 = RETURNDATASIZE 
    0x3190x0: v0319(0x0) = CONST 
    0x31b0x0: REVERT v0319(0x0), v0318

    Begin block 0x740
    prev=[0x1e], succ=[]
    =================================
    0x741: v741(0x77) = CONST 
    0x742: CALLPRIVATE v741(0x77)

    Begin block 0x2d
    prev=[0x0], succ=[0x73a, 0x3c]
    =================================
    0x2e: v2e = CALLDATASIZE 
    0x2f: v2f(0x3c) = CONST 
    0x32: JUMPI v2f(0x3c), v2e

    Begin block 0x73a
    prev=[0x2d], succ=[]
    =================================
    0x73a: v73a(0x73c) = CONST 
    0x73b: CALLPRIVATE v73a(0x73c)

}

function upgrade(address)() public {
    Begin block 0x44
    prev=[], succ=[0x4c, 0x50]
    =================================
    0x45: v45 = CALLVALUE 
    0x47: v47 = ISZERO v45
    0x48: v48(0x50) = CONST 
    0x4b: JUMPI v48(0x50), v47

    Begin block 0x4c
    prev=[0x44], succ=[]
    =================================
    0x4c: v4c(0x0) = CONST 
    0x4f: REVERT v4c(0x0), v4c(0x0)

    Begin block 0x50
    prev=[0x44], succ=[0x63, 0x67]
    =================================
    0x52: v52(0x6a6) = CONST 
    0x55: v55(0x4) = CONST 
    0x58: v58 = CALLDATASIZE 
    0x59: v59 = SUB v58, v55(0x4)
    0x5a: v5a(0x20) = CONST 
    0x5d: v5d = LT v59, v5a(0x20)
    0x5e: v5e = ISZERO v5d
    0x5f: v5f(0x67) = CONST 
    0x62: JUMPI v5f(0x67), v5e

    Begin block 0x63
    prev=[0x50], succ=[]
    =================================
    0x63: v63(0x0) = CONST 
    0x66: REVERT v63(0x0), v63(0x0)

    Begin block 0x67
    prev=[0x50], succ=[0xc2]
    =================================
    0x69: v69 = CALLDATALOAD v55(0x4)
    0x6a: v6a(0x1) = CONST 
    0x6c: v6c(0x1) = CONST 
    0x6e: v6e(0xa0) = CONST 
    0x70: v70(0x10000000000000000000000000000000000000000) = SHL v6e(0xa0), v6c(0x1)
    0x71: v71(0xffffffffffffffffffffffffffffffffffffffff) = SUB v70(0x10000000000000000000000000000000000000000), v6a(0x1)
    0x72: v72 = AND v71(0xffffffffffffffffffffffffffffffffffffffff), v69
    0x73: v73(0xc2) = CONST 
    0x76: JUMP v73(0xc2)

    Begin block 0xc2
    prev=[0x67], succ=[0xf9, 0xfd]
    =================================
    0xc3: vc3(0x0) = CONST 
    0xc6: vc6 = ADDRESS 
    0xc7: vc7(0x1) = CONST 
    0xc9: vc9(0x1) = CONST 
    0xcb: vcb(0xa0) = CONST 
    0xcd: vcd(0x10000000000000000000000000000000000000000) = SHL vcb(0xa0), vc9(0x1)
    0xce: vce(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcd(0x10000000000000000000000000000000000000000), vc7(0x1)
    0xcf: vcf = AND vce(0xffffffffffffffffffffffffffffffffffffffff), vc6
    0xd0: vd0(0x9d16acfd) = CONST 
    0xd5: vd5(0x40) = CONST 
    0xd7: vd7 = MLOAD vd5(0x40)
    0xd9: vd9(0xffffffff) = CONST 
    0xde: vde(0x9d16acfd) = AND vd9(0xffffffff), vd0(0x9d16acfd)
    0xdf: vdf(0xe0) = CONST 
    0xe1: ve1(0x9d16acfd00000000000000000000000000000000000000000000000000000000) = SHL vdf(0xe0), vde(0x9d16acfd)
    0xe3: MSTORE vd7, ve1(0x9d16acfd00000000000000000000000000000000000000000000000000000000)
    0xe4: ve4(0x4) = CONST 
    0xe6: ve6 = ADD ve4(0x4), vd7
    0xe7: ve7(0x40) = CONST 
    0xea: vea = MLOAD ve7(0x40)
    0xed: ved(0x4) = SUB ve6, vea
    0xf1: vf1 = EXTCODESIZE vcf
    0xf2: vf2 = ISZERO vf1
    0xf4: vf4 = ISZERO vf2
    0xf5: vf5(0xfd) = CONST 
    0xf8: JUMPI vf5(0xfd), vf4

    Begin block 0xf9
    prev=[0xc2], succ=[]
    =================================
    0xf9: vf9(0x0) = CONST 
    0xfc: REVERT vf9(0x0), vf9(0x0)

    Begin block 0xfd
    prev=[0xc2], succ=[0x108, 0x111]
    =================================
    0xff: vff = GAS 
    0x100: v100 = STATICCALL vff, vcf, vea, ved(0x4), vea, ve7(0x40)
    0x101: v101 = ISZERO v100
    0x103: v103 = ISZERO v101
    0x104: v104(0x111) = CONST 
    0x107: JUMPI v104(0x111), v103

    Begin block 0x108
    prev=[0xfd], succ=[]
    =================================
    0x108: v108 = RETURNDATASIZE 
    0x109: v109(0x0) = CONST 
    0x10c: RETURNDATACOPY v109(0x0), v109(0x0), v108
    0x10d: v10d = RETURNDATASIZE 
    0x10e: v10e(0x0) = CONST 
    0x110: REVERT v10e(0x0), v10d

    Begin block 0x111
    prev=[0xfd], succ=[0x123, 0x127]
    =================================
    0x116: v116(0x40) = CONST 
    0x118: v118 = MLOAD v116(0x40)
    0x119: v119 = RETURNDATASIZE 
    0x11a: v11a(0x40) = CONST 
    0x11d: v11d = LT v119, v11a(0x40)
    0x11e: v11e = ISZERO v11d
    0x11f: v11f(0x127) = CONST 
    0x122: JUMPI v11f(0x127), v11e

    Begin block 0x123
    prev=[0x111], succ=[]
    =================================
    0x123: v123(0x0) = CONST 
    0x126: REVERT v123(0x0), v123(0x0)

    Begin block 0x127
    prev=[0x111], succ=[0x13b, 0x17f]
    =================================
    0x12a: v12a = MLOAD v118
    0x12b: v12b(0x20) = CONST 
    0x12f: v12f = ADD v118, v12b(0x20)
    0x130: v130 = MLOAD v12f
    0x137: v137(0x17f) = CONST 
    0x13a: JUMPI v137(0x17f), v12a

    Begin block 0x13b
    prev=[0x127], succ=[]
    =================================
    0x13b: v13b(0x40) = CONST 
    0x13e: v13e = MLOAD v13b(0x40)
    0x13f: v13f(0x461bcd) = CONST 
    0x143: v143(0xe5) = CONST 
    0x145: v145(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v143(0xe5), v13f(0x461bcd)
    0x147: MSTORE v13e, v145(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x148: v148(0x20) = CONST 
    0x14a: v14a(0x4) = CONST 
    0x14d: v14d = ADD v13e, v14a(0x4)
    0x14e: MSTORE v14d, v148(0x20)
    0x14f: v14f(0x15) = CONST 
    0x151: v151(0x24) = CONST 
    0x154: v154 = ADD v13e, v151(0x24)
    0x155: MSTORE v154, v14f(0x15)
    0x156: v156(0x155c19dc985919481b9bdd081cd8da19591d5b1959) = CONST 
    0x16c: v16c(0x5a) = CONST 
    0x16e: v16e(0x55706772616465206e6f74207363686564756c65640000000000000000000000) = SHL v16c(0x5a), v156(0x155c19dc985919481b9bdd081cd8da19591d5b1959)
    0x16f: v16f(0x44) = CONST 
    0x172: v172 = ADD v13e, v16f(0x44)
    0x173: MSTORE v172, v16e(0x55706772616465206e6f74207363686564756c65640000000000000000000000)
    0x175: v175 = MLOAD v13b(0x40)
    0x179: v179(0x0) = SUB v13e, v175
    0x17a: v17a(0x64) = CONST 
    0x17c: v17c(0x64) = ADD v17a(0x64), v179(0x0)
    0x17e: REVERT v175, v17c(0x64)

    Begin block 0x17f
    prev=[0x127], succ=[0x31c]
    =================================
    0x180: v180(0x188) = CONST 
    0x184: v184(0x31c) = CONST 
    0x187: JUMP v184(0x31c)

    Begin block 0x31c
    prev=[0x17f], succ=[0x45f]
    =================================
    0x31d: v31d(0x325) = CONST 
    0x321: v321(0x45f) = CONST 
    0x324: JUMP v321(0x45f)

    Begin block 0x45f
    prev=[0x31c], succ=[0x2cd]
    =================================
    0x460: v460(0x468) = CONST 
    0x464: v464(0x2cd) = CONST 
    0x467: JUMP v464(0x2cd)

    Begin block 0x2cd
    prev=[0x45f], succ=[0x468]
    =================================
    0x2ce: v2ce = EXTCODESIZE v72
    0x2cf: v2cf = ISZERO v2ce
    0x2d0: v2d0 = ISZERO v2cf
    0x2d2: JUMP v460(0x468)

    Begin block 0x468
    prev=[0x2cd], succ=[0x46d, 0x4a3]
    =================================
    0x469: v469(0x4a3) = CONST 
    0x46c: JUMPI v469(0x4a3), v2d0

    Begin block 0x46d
    prev=[0x468], succ=[]
    =================================
    0x46d: v46d(0x40) = CONST 
    0x46f: v46f = MLOAD v46d(0x40)
    0x470: v470(0x461bcd) = CONST 
    0x474: v474(0xe5) = CONST 
    0x476: v476(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v474(0xe5), v470(0x461bcd)
    0x478: MSTORE v46f, v476(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x479: v479(0x4) = CONST 
    0x47b: v47b = ADD v479(0x4), v46f
    0x47e: v47e(0x20) = CONST 
    0x480: v480 = ADD v47e(0x20), v47b
    0x483: v483(0x20) = SUB v480, v47b
    0x485: MSTORE v47b, v483(0x20)
    0x486: v486(0x36) = CONST 
    0x489: MSTORE v480, v486(0x36)
    0x48a: v48a(0x20) = CONST 
    0x48c: v48c = ADD v48a(0x20), v480
    0x48e: v48e(0x5b4) = CONST 
    0x491: v491(0x36) = CONST 
    0x494: CODECOPY v48c, v48e(0x5b4), v491(0x36)
    0x495: v495(0x40) = CONST 
    0x497: v497 = ADD v495(0x40), v48c
    0x49b: v49b(0x40) = CONST 
    0x49d: v49d = MLOAD v49b(0x40)
    0x4a0: v4a0(0x84) = SUB v497, v49d
    0x4a2: REVERT v49d, v4a0(0x84)

    Begin block 0x4a3
    prev=[0x468], succ=[0x325]
    =================================
    0x4a4: v4a4(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x4c5: SSTORE v4a4(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), v72
    0x4c6: JUMP v31d(0x325)

    Begin block 0x325
    prev=[0x4a3], succ=[0x188]
    =================================
    0x326: v326(0x40) = CONST 
    0x328: v328 = MLOAD v326(0x40)
    0x329: v329(0x1) = CONST 
    0x32b: v32b(0x1) = CONST 
    0x32d: v32d(0xa0) = CONST 
    0x32f: v32f(0x10000000000000000000000000000000000000000) = SHL v32d(0xa0), v32b(0x1)
    0x330: v330(0xffffffffffffffffffffffffffffffffffffffff) = SUB v32f(0x10000000000000000000000000000000000000000), v329(0x1)
    0x332: v332 = AND v72, v330(0xffffffffffffffffffffffffffffffffffffffff)
    0x334: v334(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b) = CONST 
    0x356: v356(0x0) = CONST 
    0x359: LOG2 v328, v356(0x0), v334(0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b), v332
    0x35b: JUMP v180(0x188)

    Begin block 0x188
    prev=[0x325], succ=[0x1c6]
    =================================
    0x189: v189(0x40) = CONST 
    0x18c: v18c = MLOAD v189(0x40)
    0x18d: v18d(0x4) = CONST 
    0x190: MSTORE v18c, v18d(0x4)
    0x191: v191(0x24) = CONST 
    0x194: v194 = ADD v18c, v191(0x24)
    0x196: MSTORE v189(0x40), v194
    0x197: v197(0x20) = CONST 
    0x19a: v19a = ADD v18c, v197(0x20)
    0x19c: v19c = MLOAD v19a
    0x19d: v19d(0x1) = CONST 
    0x19f: v19f(0x1) = CONST 
    0x1a1: v1a1(0xe0) = CONST 
    0x1a3: v1a3(0x100000000000000000000000000000000000000000000000000000000) = SHL v1a1(0xe0), v19f(0x1)
    0x1a4: v1a4(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v1a3(0x100000000000000000000000000000000000000000000000000000000), v19d(0x1)
    0x1a5: v1a5 = AND v1a4(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), v19c
    0x1a6: v1a6(0x4d284647) = CONST 
    0x1ab: v1ab(0xe1) = CONST 
    0x1ad: v1ad(0x9a508c8e00000000000000000000000000000000000000000000000000000000) = SHL v1ab(0xe1), v1a6(0x4d284647)
    0x1ae: v1ae = OR v1ad(0x9a508c8e00000000000000000000000000000000000000000000000000000000), v1a5
    0x1b0: MSTORE v19a, v1ae
    0x1b2: v1b2 = MLOAD v189(0x40)
    0x1b4: v1b4(0x4) = MLOAD v18c
    0x1b5: v1b5(0x0) = CONST 
    0x1b8: v1b8(0x60) = CONST 
    0x1bb: v1bb = ADDRESS 

    Begin block 0x1c6
    prev=[0x188, 0x1cf], succ=[0x1e5, 0x1cf]
    =================================
    0x1c6_0x2: v1c6_2 = PHI v1b4(0x4), v1d8
    0x1c7: v1c7(0x20) = CONST 
    0x1ca: v1ca = LT v1c6_2, v1c7(0x20)
    0x1cb: v1cb(0x1e5) = CONST 
    0x1ce: JUMPI v1cb(0x1e5), v1ca

    Begin block 0x1e5
    prev=[0x1c6], succ=[0x224, 0x245]
    =================================
    0x1e5_0x0: v1e5_0 = PHI v19a, v1e0
    0x1e5_0x1: v1e5_1 = PHI v1b2, v1de
    0x1e5_0x2: v1e5_2 = PHI v1b4(0x4), v1d8
    0x1e6: v1e6(0x1) = CONST 
    0x1e9: v1e9(0x20) = CONST 
    0x1eb: v1eb = SUB v1e9(0x20), v1e5_2
    0x1ec: v1ec(0x100) = CONST 
    0x1ef: v1ef = EXP v1ec(0x100), v1eb
    0x1f0: v1f0 = SUB v1ef, v1e6(0x1)
    0x1f2: v1f2 = NOT v1f0
    0x1f4: v1f4 = MLOAD v1e5_0
    0x1f5: v1f5 = AND v1f4, v1f2
    0x1f8: v1f8 = MLOAD v1e5_1
    0x1f9: v1f9 = AND v1f8, v1f0
    0x1fc: v1fc = OR v1f5, v1f9
    0x1fe: MSTORE v1e5_1, v1fc
    0x207: v207 = ADD v1b4(0x4), v1b2
    0x20b: v20b(0x0) = CONST 
    0x20d: v20d(0x40) = CONST 
    0x20f: v20f = MLOAD v20d(0x40)
    0x212: v212(0x4) = SUB v207, v20f
    0x215: v215 = GAS 
    0x216: v216 = DELEGATECALL v215, v1bb, v20f, v212(0x4), v20f, v20b(0x0)
    0x21a: v21a = RETURNDATASIZE 
    0x21c: v21c(0x0) = CONST 
    0x21f: v21f = EQ v21a, v21c(0x0)
    0x220: v220(0x245) = CONST 
    0x223: JUMPI v220(0x245), v21f

    Begin block 0x224
    prev=[0x1e5], succ=[0x24a]
    =================================
    0x224: v224(0x40) = CONST 
    0x226: v226 = MLOAD v224(0x40)
    0x229: v229(0x1f) = CONST 
    0x22b: v22b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v229(0x1f)
    0x22c: v22c(0x3f) = CONST 
    0x22e: v22e = RETURNDATASIZE 
    0x22f: v22f = ADD v22e, v22c(0x3f)
    0x230: v230 = AND v22f, v22b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x232: v232 = ADD v226, v230
    0x233: v233(0x40) = CONST 
    0x235: MSTORE v233(0x40), v232
    0x236: v236 = RETURNDATASIZE 
    0x238: MSTORE v226, v236
    0x239: v239 = RETURNDATASIZE 
    0x23a: v23a(0x0) = CONST 
    0x23c: v23c(0x20) = CONST 
    0x23f: v23f = ADD v226, v23c(0x20)
    0x240: RETURNDATACOPY v23f, v23a(0x0), v239
    0x241: v241(0x24a) = CONST 
    0x244: JUMP v241(0x24a)

    Begin block 0x24a
    prev=[0x224, 0x245], succ=[0x255, 0x28b]
    =================================
    0x251: v251(0x28b) = CONST 
    0x254: JUMPI v251(0x28b), v216

    Begin block 0x255
    prev=[0x24a], succ=[]
    =================================
    0x255: v255(0x40) = CONST 
    0x257: v257 = MLOAD v255(0x40)
    0x258: v258(0x461bcd) = CONST 
    0x25c: v25c(0xe5) = CONST 
    0x25e: v25e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v25c(0xe5), v258(0x461bcd)
    0x260: MSTORE v257, v25e(0x8c379a000000000000000000000000000000000000000000000000000000000)
    0x261: v261(0x4) = CONST 
    0x263: v263 = ADD v261(0x4), v257
    0x266: v266(0x20) = CONST 
    0x268: v268 = ADD v266(0x20), v263
    0x26b: v26b(0x20) = SUB v268, v263
    0x26d: MSTORE v263, v26b(0x20)
    0x26e: v26e(0x21) = CONST 
    0x271: MSTORE v268, v26e(0x21)
    0x272: v272(0x20) = CONST 
    0x274: v274 = ADD v272(0x20), v268
    0x276: v276(0x56c) = CONST 
    0x279: v279(0x21) = CONST 
    0x27c: CODECOPY v274, v276(0x56c), v279(0x21)
    0x27d: v27d(0x40) = CONST 
    0x27f: v27f = ADD v27d(0x40), v274
    0x283: v283(0x40) = CONST 
    0x285: v285 = MLOAD v283(0x40)
    0x288: v288(0x84) = SUB v27f, v285
    0x28a: REVERT v285, v288(0x84)

    Begin block 0x28b
    prev=[0x24a], succ=[0x6a6]
    =================================
    0x291: JUMP v52(0x6a6)

    Begin block 0x6a6
    prev=[0x28b], succ=[]
    =================================
    0x6a7: STOP 

    Begin block 0x245
    prev=[0x1e5], succ=[0x24a]
    =================================
    0x246: v246(0x60) = CONST 

    Begin block 0x1cf
    prev=[0x1c6], succ=[0x1c6]
    =================================
    0x1cf_0x0: v1cf_0 = PHI v19a, v1e0
    0x1cf_0x1: v1cf_1 = PHI v1b2, v1de
    0x1cf_0x2: v1cf_2 = PHI v1b4(0x4), v1d8
    0x1d0: v1d0 = MLOAD v1cf_0
    0x1d2: MSTORE v1cf_1, v1d0
    0x1d3: v1d3(0x1f) = CONST 
    0x1d5: v1d5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1d3(0x1f)
    0x1d8: v1d8 = ADD v1cf_2, v1d5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
    0x1da: v1da(0x20) = CONST 
    0x1de: v1de = ADD v1da(0x20), v1cf_1
    0x1e0: v1e0 = ADD v1da(0x20), v1cf_0
    0x1e1: v1e1(0x1c6) = CONST 
    0x1e4: JUMP v1e1(0x1c6)

}

function fallback()() public {
    Begin block 0x73c
    prev=[], succ=[0xa80x73c]
    =================================
    0x33: v33(0x664) = CONST 
    0x36: v36(0xa8) = CONST 
    0x39: JUMP v36(0xa8)

    Begin block 0xa80x73c
    prev=[0x73c], succ=[0x6c7B0xa80x73c]
    =================================
    0xa90x73c: v73ca9(0xb0) = CONST 
    0xac0x73c: v73cac(0x6c7) = CONST 
    0xaf0x73c: JUMP v73cac(0x6c7), v73ca9(0xb0)

    Begin block 0x6c7B0xa80x73c
    prev=[0xa80x73c], succ=[0xb00x73c]
    =================================
    0x6c8S0xa80x73c: JUMP v73ca9(0xb0)

    Begin block 0xb00x73c
    prev=[0x6c7B0xa80x73c], succ=[0x2d3B0xb00x73c]
    =================================
    0xb10x73c: v73cb1(0x6e8) = CONST 
    0xb40x73c: v73cb4(0xbb) = CONST 
    0xb70x73c: v73cb7(0x2d3) = CONST 
    0xba0x73c: JUMP v73cb7(0x2d3)

    Begin block 0x2d3B0xb00x73c
    prev=[0xb00x73c], succ=[0xbb0x73c]
    =================================
    0x2d4S0xb00x73c: v2d4Vb073c(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x2f5S0xb00x73c: v2f5Vb073c = SLOAD v2d4Vb073c(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x2f7S0xb00x73c: JUMP v73cb4(0xbb)

    Begin block 0xbb0x73c
    prev=[0x2d3B0xb00x73c], succ=[0x2f80x73c]
    =================================
    0xbc0x73c: v73cbc(0x2f8) = CONST 
    0xbf0x73c: JUMP v73cbc(0x2f8)

    Begin block 0x2f80x73c
    prev=[0xbb0x73c], succ=[0x3130x73c, 0x3170x73c]
    =================================
    0x2f90x73c: v73c2f9 = CALLDATASIZE 
    0x2fa0x73c: v73c2fa(0x0) = CONST 
    0x2fd0x73c: CALLDATACOPY v73c2fa(0x0), v73c2fa(0x0), v73c2f9
    0x2fe0x73c: v73c2fe(0x0) = CONST 
    0x3010x73c: v73c301 = CALLDATASIZE 
    0x3020x73c: v73c302(0x0) = CONST 
    0x3050x73c: v73c305 = GAS 
    0x3060x73c: v73c306 = DELEGATECALL v73c305, v2f5Vb073c, v73c302(0x0), v73c301, v73c2fe(0x0), v73c2fe(0x0)
    0x3070x73c: v73c307 = RETURNDATASIZE 
    0x3080x73c: v73c308(0x0) = CONST 
    0x30b0x73c: RETURNDATACOPY v73c308(0x0), v73c308(0x0), v73c307
    0x30e0x73c: v73c30e = ISZERO v73c306
    0x30f0x73c: v73c30f(0x317) = CONST 
    0x3120x73c: JUMPI v73c30f(0x317), v73c30e

    Begin block 0x3130x73c
    prev=[0x2f80x73c], succ=[]
    =================================
    0x3130x73c: v73c313 = RETURNDATASIZE 
    0x3140x73c: v73c314(0x0) = CONST 
    0x3160x73c: RETURN v73c314(0x0), v73c313

    Begin block 0x3170x73c
    prev=[0x2f80x73c], succ=[]
    =================================
    0x3180x73c: v73c318 = RETURNDATASIZE 
    0x3190x73c: v73c319(0x0) = CONST 
    0x31b0x73c: REVERT v73c319(0x0), v73c318

}

function implementation()() public {
    Begin block 0x77
    prev=[], succ=[0x7f, 0x83]
    =================================
    0x78: v78 = CALLVALUE 
    0x7a: v7a = ISZERO v78
    0x7b: v7b(0x83) = CONST 
    0x7e: JUMPI v7b(0x83), v7a

    Begin block 0x7f
    prev=[0x77], succ=[]
    =================================
    0x7f: v7f(0x0) = CONST 
    0x82: REVERT v7f(0x0), v7f(0x0)

    Begin block 0x83
    prev=[0x77], succ=[0x292B0x83]
    =================================
    0x85: v85(0x8c) = CONST 
    0x88: v88(0x292) = CONST 
    0x8b: JUMP v88(0x292)

    Begin block 0x292B0x83
    prev=[0x83], succ=[0x2d3B0x292B0x83]
    =================================
    0x293S0x83: v293V83(0x0) = CONST 
    0x295S0x83: v295V83(0x29c) = CONST 
    0x298S0x83: v298V83(0x2d3) = CONST 
    0x29bS0x83: JUMP v298V83(0x2d3)

    Begin block 0x2d3B0x292B0x83
    prev=[0x292B0x83], succ=[0x29cB0x83]
    =================================
    0x2d4S0x292S0x83: v2d4V292V83(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) = CONST 
    0x2f5S0x292S0x83: v2f5V292V83 = SLOAD v2d4V292V83(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
    0x2f7S0x292S0x83: JUMP v295V83(0x29c)

    Begin block 0x29cB0x83
    prev=[0x2d3B0x292B0x83], succ=[0x8c]
    =================================
    0x2a0S0x83: JUMP v85(0x8c)

    Begin block 0x8c
    prev=[0x29cB0x83], succ=[]
    =================================
    0x8d: v8d(0x40) = CONST 
    0x90: v90 = MLOAD v8d(0x40)
    0x91: v91(0x1) = CONST 
    0x93: v93(0x1) = CONST 
    0x95: v95(0xa0) = CONST 
    0x97: v97(0x10000000000000000000000000000000000000000) = SHL v95(0xa0), v93(0x1)
    0x98: v98(0xffffffffffffffffffffffffffffffffffffffff) = SUB v97(0x10000000000000000000000000000000000000000), v91(0x1)
    0x9b: v9b = AND v2f5V292V83, v98(0xffffffffffffffffffffffffffffffffffffffff)
    0x9d: MSTORE v90, v9b
    0x9e: v9e = MLOAD v8d(0x40)
    0xa2: va2(0x0) = SUB v90, v9e
    0xa3: va3(0x20) = CONST 
    0xa5: va5(0x20) = ADD va3(0x20), va2(0x0)
    0xa7: RETURN v9e, va5(0x20)

}

